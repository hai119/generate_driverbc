; ModuleID = '../bcout/drivers/scsi/esp_scsi.llvm.bc'
source_filename = "drivers/scsi/esp_scsi.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_esp_init6:\09\09\09"
module asm ".long\09esp_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.scsi_transport_template = type opaque
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.module = type opaque
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.67, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.0, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.0 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.1, %union.anon.49, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.72, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.73, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.74, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.75, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.23, %struct.list_head, %struct.list_head, %union.anon.24 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.4, i8* }
%union.anon.4 = type { i64 }
%struct.lockref = type { %union.anon.6 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.23 = type { %struct.list_head }
%union.anon.24 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.8, i32 }
%union.anon.8 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.9, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.9 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.10, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.10 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.12, %union.anon.13, %union.anon.14, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.19, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.11, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.11 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.12 = type { %struct.hlist_node }
%union.anon.13 = type { %struct.rb_node }
%union.anon.14 = type { %struct.anon.18 }
%struct.anon.18 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.19 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.20, void (i8*)*, i8* }
%union.anon.20 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.21, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.21 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.16, %union.anon.17, i32 }
%union.anon.16 = type { %struct.list_head }
%union.anon.17 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.72 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.73 = type { %struct.callback_head }
%union.anon.74 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.25 }
%union.anon.25 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.26 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.26 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.75 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type opaque
%union.anon.49 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.file = type { %union.anon.3, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.3 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.50 }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.36 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.36 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.28, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.29, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.30, %union.anon.34, %struct.key_restriction* }
%union.anon.28 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.29 = type { i64 }
%union.anon.30 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.31, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.31 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.34 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.55 }
%struct.anon.55 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.66, i32, [12 x i8] }
%union.anon.66 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.67 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.68, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.71 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i64, i64 }
%union.anon.71 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.atomic_t = type { i32 }
%struct.workqueue_struct = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.76 }
%union.anon.76 = type { i8* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.esp = type { i8*, i8*, %struct.esp_driver_ops*, %struct.Scsi_Host*, %struct.device*, %struct.esp_cmd_entry*, %struct.list_head, %struct.list_head, i8*, i64, i32, i8, i8, i8, i8, i32, i8, i8, i8, i8, %struct.list_head, [16 x %struct.esp_target_data], i32, [16 x i8], [32 x %struct.esp_event_ent], i32, [8 x i8], i32, [8 x i8], i32, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, %struct.completion*, i8*, i32, i8*, i32, i32 }
%struct.esp_driver_ops = type { void (%struct.esp*, i8, i64)*, i8 (%struct.esp*, i64)*, i32 (%struct.esp*)*, i32 (%struct.esp*, i32, i32)*, void (%struct.esp*)*, void (%struct.esp*)*, void (%struct.esp*)*, void (%struct.esp*, i32, i32, i32, i32, i8)*, i32 (%struct.esp*)* }
%struct.esp_cmd_entry = type { %struct.list_head, %struct.scsi_cmnd*, i32, %struct.scatterlist*, %struct.scatterlist*, i32, i8, [2 x i8], [2 x i8], i8, i8, i8*, i8*, i64, %struct.completion* }
%struct.esp_target_data = type { i8, i8, i8, i8, i8, i8, i8, i8, %struct.scsi_target* }
%struct.esp_event_ent = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.esp_lun_data = type { %struct.esp_cmd_entry*, i32, i32, [256 x %struct.esp_cmd_entry*] }
%struct.spi_transport_attrs = type { i32, i32, i32, i32, i16, i64, i8, i32, i32, i32, i8, %struct.mutex }
%struct.spi_function_template = type { void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*, i32)*, i32 (%struct.scsi_target*)*, i16 }
%struct.esp_cmd_priv = type { i32, i32, %struct.scatterlist*, %struct.scatterlist*, i32 }
%struct.spi_host_attrs = type { i32 }

@esp_debug = internal global i32 0, align 4, !dbg !0
@.str = private unnamed_addr constant [3 x i8] c"\017\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"cmd[%02x]\0A\00", align 1
@scsi_esp_register.instance = internal global i32 0, align 4, !dbg !5284
@esp_transport_template = internal global %struct.scsi_transport_template* null, align 8, !dbg !5556
@.str.2 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"esp%u: regs[%1p:%1p] irq[%u]\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"esp%u: is a %s, %u MHz (ccf=%u), SCSI ID %u\0A\00", align 1
@esp_chip_names = internal global [9 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0)], align 16, !dbg !5564
@esp_bus_reset_settle = internal global i32 3, align 4, !dbg !5569
@.str.5 = private unnamed_addr constant [4 x i8] c"esp\00", align 1
@scsi_esp_template = dso_local global %struct.scsi_host_template { %struct.module* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8* (%struct.Scsi_Host*)* @esp_info, i32 (%struct.scsi_device*, i32, i8*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* @esp_queuecommand, void (%struct.Scsi_Host*, i16)* null, i32 (%struct.scsi_cmnd*)* @esp_eh_abort_handler, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* @esp_eh_bus_reset_handler, i32 (%struct.scsi_cmnd*)* @esp_eh_host_reset_handler, i32 (%struct.scsi_device*)* @esp_slave_alloc, i32 (%struct.scsi_device*)* @esp_slave_configure, void (%struct.scsi_device*)* @esp_slave_destroy, i32 (%struct.scsi_target*)* @esp_target_alloc, void (%struct.scsi_target*)* @esp_target_destroy, i32 (%struct.Scsi_Host*, i64)* null, void (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32)* null, i32 (%struct.Scsi_Host*)* null, i1 (%struct.request*)* null, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)* null, void (%struct.scsi_device*)* null, i32 (%struct.seq_file*, %struct.Scsi_Host*)* null, i32 (%struct.Scsi_Host*, i8*, i32)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, i32)* null, i8* null, %struct.proc_dir_entry* null, i32 7, i32 7, i16 128, i16 0, i32 65535, i32 0, i64 0, i64 0, i16 0, i8 0, i32 0, i8 32, i32 0, %struct.device_attribute** null, %struct.device_attribute** null, %struct.attribute_group** null, i64 0, i32 0, %struct.scsi_host_cmd_pool* null, i32 0 }, align 8, !dbg !5405
@__UNIQUE_ID_description316 = internal constant [42 x i8] c"esp_scsi.description=ESP SCSI driver core\00", section ".modinfo", align 1, !dbg !5407
@__UNIQUE_ID_author317 = internal constant [54 x i8] c"esp_scsi.author=David S. Miller (davem@davemloft.net)\00", section ".modinfo", align 1, !dbg !5412
@__UNIQUE_ID_file318 = internal constant [36 x i8] c"esp_scsi.file=drivers/scsi/esp_scsi\00", section ".modinfo", align 1, !dbg !5417
@__UNIQUE_ID_license319 = internal constant [21 x i8] c"esp_scsi.license=GPL\00", section ".modinfo", align 1, !dbg !5422
@__UNIQUE_ID_version320 = internal constant [23 x i8] c"esp_scsi.version=2.000\00", section ".modinfo", align 1, !dbg !5427
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i32 0, i32 0) }, align 8, !dbg !5576
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !5432
@__param_str_esp_bus_reset_settle = internal constant [30 x i8] c"esp_scsi.esp_bus_reset_settle\00", align 16, !dbg !5578
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@__param_esp_bus_reset_settle = internal constant %struct.kernel_param { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__param_str_esp_bus_reset_settle, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.76 { i8* bitcast (i32* @esp_bus_reset_settle to i8*) } }, section "__param", align 8, !dbg !5477
@__UNIQUE_ID_esp_bus_reset_settletype321 = internal constant [43 x i8] c"esp_scsi.parmtype=esp_bus_reset_settle:int\00", section ".modinfo", align 1, !dbg !5529
@__UNIQUE_ID_esp_bus_reset_settle322 = internal constant [71 x i8] c"esp_scsi.parm=esp_bus_reset_settle:ESP scsi bus reset delay in seconds\00", section ".modinfo", align 1, !dbg !5534
@__param_str_esp_debug = internal constant [19 x i8] c"esp_scsi.esp_debug\00", align 16, !dbg !5583
@__param_esp_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__param_str_esp_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.76 { i8* bitcast (i32* @esp_debug to i8*) } }, section "__param", align 8, !dbg !5539
@__UNIQUE_ID_esp_debugtype323 = internal constant [32 x i8] c"esp_scsi.parmtype=esp_debug:int\00", section ".modinfo", align 1, !dbg !5541
@__UNIQUE_ID_esp_debug324 = internal constant [401 x i8] c"esp_scsi.parm=esp_debug:ESP bitmapped debugging message enable value:\0A\090x00000001\09Log interrupt events\0A\090x00000002\09Log scsi commands\0A\090x00000004\09Log resets\0A\090x00000008\09Log message in events\0A\090x00000010\09Log message out events\0A\090x00000020\09Log command completion\0A\090x00000040\09Log disconnects\0A\090x00000080\09Log data start\0A\090x00000100\09Log data done\0A\090x00000200\09Log reconnects\0A\090x00000400\09Log auto-sense data\0A\00", section ".modinfo", align 1, !dbg !5544
@__UNIQUE_ID___addressable_esp_init325 = internal global i8* bitcast (i32 ()* @esp_init to i8*), section ".discard.addressable", align 8, !dbg !5549
@__exitcall_esp_exit = internal global void ()* @esp_exit, section ".exitcall.exit", align 8, !dbg !5551
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.6 = private unnamed_addr constant [53 x i8] c"intr sreg[%02x] seqreg[%02x] sreg2[%02x] ireg[%02x]\0A\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"unexpected IREG %02x\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"Gross error sreg[%02x]\0A\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"Spurious irq, sreg=%02x.\0A\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"DMA error\0A\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"drivers/scsi/esp_scsi.c\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"Dumping command log\0A\00", align 1
@.str.14 = private unnamed_addr constant [90 x i8] c"ent[%d] %s val[%02x] sreg[%02x] seqreg[%02x] sreg2[%02x] ireg[%02x] ss[%02x] event[%02x]\0A\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"CMD\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"EVENT\00", align 1
@.str.17 = private unnamed_addr constant [31 x i8] c"esp_schedule_reset() from %ps\0A\00", align 1
@.str.18 = private unnamed_addr constant [42 x i8] c"Unexpected selection completion ireg[%x]\0A\00", align 1
@.str.19 = private unnamed_addr constant [36 x i8] c"esp%d: tgt[%d] lun[%d] AUTO SENSE[ \00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"ESP: tgt[%d] lun[%d] scsi_cmd [ \00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"Doing auto-sense for tgt[%d] lun[%d]\0A\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !5558
@.str.24 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.25 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.26 = private unnamed_addr constant [3 x i8] c"\011\00", align 1
@.str.27 = private unnamed_addr constant [30 x i8] c"ESP_FF_BYTES will not clear!\0A\00", align 1
@.str.28 = private unnamed_addr constant [34 x i8] c"Reconnect, no lp tgt[%u] lun[%u]\0A\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"Reconnect w/num_tagged==0\0A\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"reconnect tag, \00", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"Reconnect IRQ1 timeout\0A\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"IRQ(%d:%x:%x), \00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"Reconnect, got disconnect.\0A\00", align 1
@.str.34 = private unnamed_addr constant [32 x i8] c"Reconnect, not MIP sreg[%02x].\0A\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"Reconnect IRQ2 timeout\0A\00", align 1
@.str.36 = private unnamed_addr constant [27 x i8] c"IRQ2(%d:%x:%x) tag[%x:%x]\0A\00", align 1
@.str.37 = private unnamed_addr constant [31 x i8] c"Reconnect, bad tag type %02x.\0A\00", align 1
@.str.38 = private unnamed_addr constant [35 x i8] c"Reconnect, no entry for tag %02x.\0A\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"process event %d phase %x\0A\00", align 1
@.str.40 = private unnamed_addr constant [29 x i8] c"Unexpected phase, sreg=%02x\0A\00", align 1
@.str.41 = private unnamed_addr constant [21 x i8] c"DMA length is zero!\0A\00", align 1
@.str.42 = private unnamed_addr constant [27 x i8] c"cur adr[%08llx] len[%08x]\0A\00", align 1
@.str.43 = private unnamed_addr constant [43 x i8] c"start data addr[%08llx] len[%u] write(%d)\0A\00", align 1
@.str.44 = private unnamed_addr constant [33 x i8] c"data done, DMA error, resetting\0A\00", align 1
@.str.45 = private unnamed_addr constant [33 x i8] c"data done, not BSERV, resetting\0A\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"data done flgs[%x] sent[%d]\0A\00", align 1
@.str.47 = private unnamed_addr constant [33 x i8] c"Unexpected message %x in status\0A\00", align 1
@.str.48 = private unnamed_addr constant [37 x i8] c"Command done status[%x] message[%x]\0A\00", align 1
@.str.49 = private unnamed_addr constant [34 x i8] c"Disconnecting tgt[%d] tag[%x:%x]\0A\00", align 1
@.str.50 = private unnamed_addr constant [34 x i8] c"Unexpected message %x in freebus\0A\00", align 1
@.str.51 = private unnamed_addr constant [24 x i8] c"ESP: Sending message [ \00", align 1
@.str.52 = private unnamed_addr constant [19 x i8] c"Got msgin byte %x\0A\00", align 1
@.str.53 = private unnamed_addr constant [40 x i8] c"MSGIN neither BSERV not FDON, resetting\00", align 1
@.str.54 = private unnamed_addr constant [32 x i8] c"Unexpected event %x, resetting\0A\00", align 1
@.str.55 = private unnamed_addr constant [25 x i8] c"Data transfer overflow.\0A\00", align 1
@.str.56 = private unnamed_addr constant [41 x i8] c"cur_residue[%d] tot_residue[%d] len[%u]\0A\00", align 1
@.str.57 = private unnamed_addr constant [27 x i8] c"Unexpected msgin identify\0A\00", align 1
@.str.58 = private unnamed_addr constant [33 x i8] c"Unexpected extended msg type %x\0A\00", align 1
@.str.59 = private unnamed_addr constant [27 x i8] c"Unexpected MESSAGE REJECT\0A\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"ESP100\00", align 1
@.str.61 = private unnamed_addr constant [8 x i8] c"ESP100A\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"ESP236\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"FAS236\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"AM53C974\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"53CF9x-2\00", align 1
@.str.66 = private unnamed_addr constant [8 x i8] c"FAS100A\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"FAST\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"FASHME\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.69 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.70 = private unnamed_addr constant [28 x i8] c"Aborting command [%p:%02x]\0A\00", align 1
@.str.71 = private unnamed_addr constant [27 x i8] c"Current command [%p:%02x]\0A\00", align 1
@.str.72 = private unnamed_addr constant [26 x i8] c"Queued command [%p:%02x]\0A\00", align 1
@.str.73 = private unnamed_addr constant [27 x i8] c" Active command [%p:%02x]\0A\00", align 1
@__init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5571
@.str.74 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"esp_scsi\00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"2.000\00", align 1
@esp_transport_ops = internal global { void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*, i32)*, i32 (%struct.scsi_target*)*, i8, i8 } { void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* @esp_set_period, void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* @esp_set_offset, void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* @esp_set_width, void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* null, void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* null, void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* null, void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* null, void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* null, void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* null, void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* null, void (%struct.scsi_target*)* null, void (%struct.scsi_target*, i32)* null, void (%struct.Scsi_Host*)* @esp_get_signalling, void (%struct.Scsi_Host*, i32)* null, i32 (%struct.scsi_target*)* null, i8 7, i8 0 }, align 8, !dbg !5588
@llvm.used = appending global [15 x i8*] [i8* bitcast (void ()* @esp_exit to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_description316, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__UNIQUE_ID_author317, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_file318, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license319, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_version320, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* bitcast (%struct.kernel_param* @__param_esp_bus_reset_settle to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_esp_bus_reset_settletype321, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__UNIQUE_ID_esp_bus_reset_settle322, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_esp_debug to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_esp_debugtype323, i32 0, i32 0), i8* getelementptr inbounds ([401 x i8], [401 x i8]* @__UNIQUE_ID_esp_debug324, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_esp_init325 to i8*), i8* bitcast (void ()** @__exitcall_esp_exit to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_esp_cmd(%struct.esp* %esp, i8 zeroext %val) #0 !dbg !5640 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %val.addr = alloca i8, align 1
  %p = alloca %struct.esp_event_ent*, align 8
  %idx = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !5643, metadata !DIExpression()), !dbg !5644
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !5645, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata %struct.esp_event_ent** %p, metadata !5647, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5650, metadata !DIExpression()), !dbg !5651
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5652
  %esp_event_cur = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 25, !dbg !5653
  %1 = load i32, i32* %esp_event_cur, align 4, !dbg !5653
  store i32 %1, i32* %idx, align 4, !dbg !5651
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5654
  %esp_event_log = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 24, !dbg !5655
  %3 = load i32, i32* %idx, align 4, !dbg !5656
  %idxprom = sext i32 %3 to i64, !dbg !5654
  %arrayidx = getelementptr [32 x %struct.esp_event_ent], [32 x %struct.esp_event_ent]* %esp_event_log, i64 0, i64 %idxprom, !dbg !5654
  store %struct.esp_event_ent* %arrayidx, %struct.esp_event_ent** %p, align 8, !dbg !5657
  %4 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !5658
  %type = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %4, i32 0, i32 0, !dbg !5659
  store i8 2, i8* %type, align 1, !dbg !5660
  %5 = load i8, i8* %val.addr, align 1, !dbg !5661
  %6 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !5662
  %val1 = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %6, i32 0, i32 1, !dbg !5663
  store i8 %5, i8* %val1, align 1, !dbg !5664
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5665
  %8 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !5666
  call void @esp_log_fill_regs(%struct.esp* %7, %struct.esp_event_ent* %8) #12, !dbg !5667
  %9 = load i32, i32* %idx, align 4, !dbg !5668
  %add = add i32 %9, 1, !dbg !5669
  %and = and i32 %add, 31, !dbg !5670
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5671
  %esp_event_cur2 = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 25, !dbg !5672
  store i32 %and, i32* %esp_event_cur2, align 4, !dbg !5673
  br label %do.body, !dbg !5674

do.body:                                          ; preds = %entry
  %11 = load i32, i32* @esp_debug, align 4, !dbg !5675
  %and3 = and i32 %11, 4096, !dbg !5675
  %tobool = icmp ne i32 %and3, 0, !dbg !5675
  br i1 %tobool, label %if.then, label %if.end, !dbg !5678

if.then:                                          ; preds = %do.body
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5675
  %host = getelementptr inbounds %struct.esp, %struct.esp* %12, i32 0, i32 3, !dbg !5675
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !5675
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %13, i32 0, i32 47, !dbg !5675
  %14 = load i8, i8* %val.addr, align 1, !dbg !5675
  %conv = zext i8 %14 to i32, !dbg !5675
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 %conv) #13, !dbg !5675
  br label %if.end, !dbg !5675

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !5678

do.end:                                           ; preds = %if.end
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5679
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %15, i32 0, i32 2, !dbg !5679
  %16 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !5679
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %16, i32 0, i32 0, !dbg !5679
  %17 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !5679
  %18 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5679
  %19 = load i8, i8* %val.addr, align 1, !dbg !5679
  call void %17(%struct.esp* %18, i8 zeroext %19, i64 3) #12, !dbg !5679
  ret void, !dbg !5680
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_log_fill_regs(%struct.esp* %esp, %struct.esp_event_ent* %p) #0 !dbg !5681 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %p.addr = alloca %struct.esp_event_ent*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !5684, metadata !DIExpression()), !dbg !5685
  store %struct.esp_event_ent* %p, %struct.esp_event_ent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_event_ent** %p.addr, metadata !5686, metadata !DIExpression()), !dbg !5687
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5688
  %sreg = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 11, !dbg !5689
  %1 = load i8, i8* %sreg, align 4, !dbg !5689
  %2 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p.addr, align 8, !dbg !5690
  %sreg1 = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %2, i32 0, i32 2, !dbg !5691
  store i8 %1, i8* %sreg1, align 1, !dbg !5692
  %3 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5693
  %seqreg = getelementptr inbounds %struct.esp, %struct.esp* %3, i32 0, i32 12, !dbg !5694
  %4 = load i8, i8* %seqreg, align 1, !dbg !5694
  %5 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p.addr, align 8, !dbg !5695
  %seqreg2 = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %5, i32 0, i32 3, !dbg !5696
  store i8 %4, i8* %seqreg2, align 1, !dbg !5697
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5698
  %sreg2 = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 13, !dbg !5699
  %7 = load i8, i8* %sreg2, align 2, !dbg !5699
  %8 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p.addr, align 8, !dbg !5700
  %sreg23 = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %8, i32 0, i32 4, !dbg !5701
  store i8 %7, i8* %sreg23, align 1, !dbg !5702
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5703
  %ireg = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 14, !dbg !5704
  %10 = load i8, i8* %ireg, align 1, !dbg !5704
  %11 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p.addr, align 8, !dbg !5705
  %ireg4 = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %11, i32 0, i32 5, !dbg !5706
  store i8 %10, i8* %ireg4, align 1, !dbg !5707
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5708
  %select_state = getelementptr inbounds %struct.esp, %struct.esp* %12, i32 0, i32 38, !dbg !5709
  %13 = load i8, i8* %select_state, align 4, !dbg !5709
  %14 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p.addr, align 8, !dbg !5710
  %select_state5 = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %14, i32 0, i32 6, !dbg !5711
  store i8 %13, i8* %select_state5, align 1, !dbg !5712
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5713
  %event = getelementptr inbounds %struct.esp, %struct.esp* %15, i32 0, i32 39, !dbg !5714
  %16 = load i8, i8* %event, align 1, !dbg !5714
  %17 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p.addr, align 8, !dbg !5715
  %event6 = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %17, i32 0, i32 7, !dbg !5716
  store i8 %16, i8* %event6, align 1, !dbg !5717
  ret void, !dbg !5718
}

; Function Attrs: cold noredzone
declare dso_local void @dev_printk(i8*, %struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_esp_intr(i32 %irq, i8* %dev_id) #0 !dbg !5719 {
entry:
  %lock.addr.i42 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i42, metadata !5723, metadata !DIExpression()), !dbg !5728
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5730, metadata !DIExpression()), !dbg !5731
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5732, metadata !DIExpression()), !dbg !5737
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %esp = alloca %struct.esp*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5744, metadata !DIExpression()), !dbg !5745
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !5746, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !5748, metadata !DIExpression()), !dbg !5749
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !5750
  %1 = bitcast i8* %0 to %struct.esp*, !dbg !5750
  store %struct.esp* %1, %struct.esp** %esp, align 8, !dbg !5749
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5751, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5753, metadata !DIExpression()), !dbg !5754
  br label %do.body, !dbg !5755

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5756

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5757, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5760, metadata !DIExpression()), !dbg !5759
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5759
  %conv = zext i1 %cmp to i32, !dbg !5759
  store i32 1, i32* %tmp, align 4, !dbg !5759
  %2 = load i32, i32* %tmp, align 4, !dbg !5759
  br label %do.body2, !dbg !5761

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5762

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5763

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5765, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5769, metadata !DIExpression()), !dbg !5768
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5768
  %conv8 = zext i1 %cmp7 to i32, !dbg !5768
  store i32 1, i32* %tmp9, align 4, !dbg !5768
  %3 = load i32, i32* %tmp9, align 4, !dbg !5768
  %call = call i64 @arch_local_irq_save() #12, !dbg !5770
  store i64 %call, i64* %flags, align 8, !dbg !5770
  br label %do.end, !dbg !5770

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5763

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5762

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5771, !srcloc !5772
  br label %do.body12, !dbg !5771

do.body12:                                        ; preds = %do.body11
  %4 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !5773
  %host = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 3, !dbg !5773
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !5773
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 4, !dbg !5773
  %6 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !5773
  store %struct.spinlock* %6, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5774
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !5775
  %rlock.i = bitcast %union.anon* %8 to %struct.raw_spinlock*, !dbg !5775
  br label %do.end14, !dbg !5773

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5771

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5762

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5761

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5756

do.end18:                                         ; preds = %do.end17
  store i32 0, i32* %ret, align 4, !dbg !5776
  %9 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !5777
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 2, !dbg !5779
  %10 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !5779
  %irq_pending = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %10, i32 0, i32 2, !dbg !5780
  %11 = load i32 (%struct.esp*)*, i32 (%struct.esp*)** %irq_pending, align 8, !dbg !5780
  %12 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !5781
  %call19 = call i32 %11(%struct.esp* %12) #12, !dbg !5777
  %tobool = icmp ne i32 %call19, 0, !dbg !5777
  br i1 %tobool, label %if.then, label %if.end39, !dbg !5782

if.then:                                          ; preds = %do.end18
  store i32 1, i32* %ret, align 4, !dbg !5783
  br label %for.cond, !dbg !5785

for.cond:                                         ; preds = %if.end37, %if.then
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5786, metadata !DIExpression()), !dbg !5790
  %13 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !5791
  call void @__esp_interrupt(%struct.esp* %13) #12, !dbg !5792
  %14 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !5793
  %flags20 = getelementptr inbounds %struct.esp, %struct.esp* %14, i32 0, i32 37, !dbg !5795
  %15 = load i32, i32* %flags20, align 8, !dbg !5795
  %and = and i32 %15, 16, !dbg !5796
  %tobool21 = icmp ne i32 %and, 0, !dbg !5796
  br i1 %tobool21, label %if.end, label %if.then22, !dbg !5797

if.then22:                                        ; preds = %for.cond
  br label %for.end38, !dbg !5798

if.end:                                           ; preds = %for.cond
  %16 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !5799
  %flags23 = getelementptr inbounds %struct.esp, %struct.esp* %16, i32 0, i32 37, !dbg !5800
  %17 = load i32, i32* %flags23, align 8, !dbg !5801
  %and24 = and i32 %17, -17, !dbg !5801
  store i32 %and24, i32* %flags23, align 8, !dbg !5801
  store i32 0, i32* %i, align 4, !dbg !5802
  br label %for.cond25, !dbg !5804

for.cond25:                                       ; preds = %for.inc, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !5805
  %cmp26 = icmp slt i32 %18, 100, !dbg !5807
  br i1 %cmp26, label %for.body, label %for.end, !dbg !5808

for.body:                                         ; preds = %for.cond25
  %19 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !5809
  %ops28 = getelementptr inbounds %struct.esp, %struct.esp* %19, i32 0, i32 2, !dbg !5812
  %20 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops28, align 8, !dbg !5812
  %irq_pending29 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %20, i32 0, i32 2, !dbg !5813
  %21 = load i32 (%struct.esp*)*, i32 (%struct.esp*)** %irq_pending29, align 8, !dbg !5813
  %22 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !5814
  %call30 = call i32 %21(%struct.esp* %22) #12, !dbg !5809
  %tobool31 = icmp ne i32 %call30, 0, !dbg !5809
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !5815

if.then32:                                        ; preds = %for.body
  br label %for.end, !dbg !5816

if.end33:                                         ; preds = %for.body
  br label %for.inc, !dbg !5817

for.inc:                                          ; preds = %if.end33
  %23 = load i32, i32* %i, align 4, !dbg !5818
  %inc = add i32 %23, 1, !dbg !5818
  store i32 %inc, i32* %i, align 4, !dbg !5818
  br label %for.cond25, !dbg !5819, !llvm.loop !5820

for.end:                                          ; preds = %if.then32, %for.cond25
  %24 = load i32, i32* %i, align 4, !dbg !5822
  %cmp34 = icmp eq i32 %24, 100, !dbg !5824
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !5825

if.then36:                                        ; preds = %for.end
  br label %for.end38, !dbg !5826

if.end37:                                         ; preds = %for.end
  br label %for.cond, !dbg !5827, !llvm.loop !5828

for.end38:                                        ; preds = %if.then36, %if.then22
  br label %if.end39, !dbg !5831

if.end39:                                         ; preds = %for.end38, %do.end18
  %25 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !5832
  %host40 = getelementptr inbounds %struct.esp, %struct.esp* %25, i32 0, i32 3, !dbg !5833
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host40, align 8, !dbg !5833
  %host_lock41 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %26, i32 0, i32 4, !dbg !5834
  %27 = load %struct.spinlock*, %struct.spinlock** %host_lock41, align 8, !dbg !5834
  %28 = load i64, i64* %flags, align 8, !dbg !5835
  store %struct.spinlock* %27, %struct.spinlock** %lock.addr.i42, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !263, metadata !5836, metadata !DIExpression()) #6, !dbg !5839
  call void @llvm.dbg.declare(metadata !263, metadata !5840, metadata !DIExpression()) #6, !dbg !5839
  store i32 1, i32* %tmp.i, align 4, !dbg !5839
  %29 = load i32, i32* %tmp.i, align 4, !dbg !5839
  call void @llvm.dbg.declare(metadata !263, metadata !5841, metadata !DIExpression()) #6, !dbg !5846
  call void @llvm.dbg.declare(metadata !263, metadata !5847, metadata !DIExpression()) #6, !dbg !5846
  store i32 1, i32* %tmp8.i, align 4, !dbg !5846
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !5846
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !5848
  call void @arch_local_irq_restore(i64 %31) #14, !dbg !5848
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5849, !srcloc !5851
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i42, align 8, !dbg !5852
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !5852
  %rlock.i43 = bitcast %union.anon* %33 to %struct.raw_spinlock*, !dbg !5852
  %34 = load i32, i32* %ret, align 4, !dbg !5854
  ret i32 %34, !dbg !5855
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !5856 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !5860, metadata !DIExpression()), !dbg !5861
  %call = call i64 @arch_local_save_flags() #12, !dbg !5862
  store i64 %call, i64* %f, align 8, !dbg !5863
  call void @arch_local_irq_disable() #12, !dbg !5864
  %0 = load i64, i64* %f, align 8, !dbg !5865
  ret i64 %0, !dbg !5866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__esp_interrupt(%struct.esp* %esp) #0 !dbg !5867 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %finish_reset = alloca i32, align 4
  %intr_done = alloca i32, align 4
  %phase = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !5868, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.declare(metadata i32* %finish_reset, metadata !5870, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.declare(metadata i32* %intr_done, metadata !5872, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.declare(metadata i8* %phase, metadata !5874, metadata !DIExpression()), !dbg !5875
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5876
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 2, !dbg !5876
  %1 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !5876
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %1, i32 0, i32 1, !dbg !5876
  %2 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !5876
  %3 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5876
  %call = call zeroext i8 %2(%struct.esp* %3, i64 4) #12, !dbg !5876
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5877
  %sreg = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 11, !dbg !5878
  store i8 %call, i8* %sreg, align 4, !dbg !5879
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5880
  %ops1 = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 2, !dbg !5880
  %6 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops1, align 8, !dbg !5880
  %esp_read82 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %6, i32 0, i32 1, !dbg !5880
  %7 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read82, align 8, !dbg !5880
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5880
  %call3 = call zeroext i8 %7(%struct.esp* %8, i64 6) #12, !dbg !5880
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5881
  %seqreg = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 12, !dbg !5882
  store i8 %call3, i8* %seqreg, align 1, !dbg !5883
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5884
  %ops4 = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 2, !dbg !5884
  %11 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops4, align 8, !dbg !5884
  %esp_read85 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %11, i32 0, i32 1, !dbg !5884
  %12 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read85, align 8, !dbg !5884
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5884
  %call6 = call zeroext i8 %12(%struct.esp* %13, i64 5) #12, !dbg !5884
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5885
  %ireg = getelementptr inbounds %struct.esp, %struct.esp* %14, i32 0, i32 14, !dbg !5886
  store i8 %call6, i8* %ireg, align 1, !dbg !5887
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5888
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %15, i32 0, i32 37, !dbg !5890
  %16 = load i32, i32* %flags, align 8, !dbg !5890
  %and = and i32 %16, 2, !dbg !5891
  %tobool = icmp ne i32 %and, 0, !dbg !5891
  br i1 %tobool, label %if.then, label %if.else, !dbg !5892

if.then:                                          ; preds = %entry
  store i32 1, i32* %finish_reset, align 4, !dbg !5893
  br label %if.end13, !dbg !5895

if.else:                                          ; preds = %entry
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5896
  %call7 = call i32 @esp_check_gross_error(%struct.esp* %17) #12, !dbg !5899
  %tobool8 = icmp ne i32 %call7, 0, !dbg !5899
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !5900

if.then9:                                         ; preds = %if.else
  br label %while.end, !dbg !5901

if.end:                                           ; preds = %if.else
  %18 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5902
  %call10 = call i32 @esp_check_spur_intr(%struct.esp* %18) #12, !dbg !5903
  store i32 %call10, i32* %finish_reset, align 4, !dbg !5904
  %19 = load i32, i32* %finish_reset, align 4, !dbg !5905
  %cmp = icmp slt i32 %19, 0, !dbg !5907
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !5908

if.then11:                                        ; preds = %if.end
  br label %while.end, !dbg !5909

if.end12:                                         ; preds = %if.end
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5910
  %ireg14 = getelementptr inbounds %struct.esp, %struct.esp* %20, i32 0, i32 14, !dbg !5912
  %21 = load i8, i8* %ireg14, align 1, !dbg !5912
  %conv = zext i8 %21 to i32, !dbg !5910
  %and15 = and i32 %conv, 128, !dbg !5913
  %tobool16 = icmp ne i32 %and15, 0, !dbg !5913
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5914

if.then17:                                        ; preds = %if.end13
  store i32 1, i32* %finish_reset, align 4, !dbg !5915
  br label %if.end18, !dbg !5916

if.end18:                                         ; preds = %if.then17, %if.end13
  %22 = load i32, i32* %finish_reset, align 4, !dbg !5917
  %tobool19 = icmp ne i32 %22, 0, !dbg !5917
  br i1 %tobool19, label %if.then20, label %if.end26, !dbg !5919

if.then20:                                        ; preds = %if.end18
  %23 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5920
  call void @esp_reset_cleanup(%struct.esp* %23) #12, !dbg !5922
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5923
  %eh_reset = getelementptr inbounds %struct.esp, %struct.esp* %24, i32 0, i32 51, !dbg !5925
  %25 = load %struct.completion*, %struct.completion** %eh_reset, align 8, !dbg !5925
  %tobool21 = icmp ne %struct.completion* %25, null, !dbg !5923
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !5926

if.then22:                                        ; preds = %if.then20
  %26 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5927
  %eh_reset23 = getelementptr inbounds %struct.esp, %struct.esp* %26, i32 0, i32 51, !dbg !5929
  %27 = load %struct.completion*, %struct.completion** %eh_reset23, align 8, !dbg !5929
  call void @complete(%struct.completion* %27) #12, !dbg !5930
  %28 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5931
  %eh_reset24 = getelementptr inbounds %struct.esp, %struct.esp* %28, i32 0, i32 51, !dbg !5932
  store %struct.completion* null, %struct.completion** %eh_reset24, align 8, !dbg !5933
  br label %if.end25, !dbg !5934

if.end25:                                         ; preds = %if.then22, %if.then20
  br label %while.end, !dbg !5935

if.end26:                                         ; preds = %if.end18
  %29 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5936
  %sreg27 = getelementptr inbounds %struct.esp, %struct.esp* %29, i32 0, i32 11, !dbg !5937
  %30 = load i8, i8* %sreg27, align 4, !dbg !5937
  %conv28 = zext i8 %30 to i32, !dbg !5936
  %and29 = and i32 %conv28, 7, !dbg !5938
  %conv30 = trunc i32 %and29 to i8, !dbg !5939
  store i8 %conv30, i8* %phase, align 1, !dbg !5940
  %31 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5941
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %31, i32 0, i32 36, !dbg !5943
  %32 = load i32, i32* %rev, align 4, !dbg !5943
  %cmp31 = icmp eq i32 %32, 8, !dbg !5944
  br i1 %cmp31, label %if.then33, label %if.end73, !dbg !5945

if.then33:                                        ; preds = %if.end26
  %33 = load i8, i8* %phase, align 1, !dbg !5946
  %conv34 = zext i8 %33 to i32, !dbg !5946
  %cmp35 = icmp ne i32 %conv34, 1, !dbg !5949
  br i1 %cmp35, label %land.lhs.true, label %lor.lhs.false, !dbg !5950

land.lhs.true:                                    ; preds = %if.then33
  %34 = load i8, i8* %phase, align 1, !dbg !5951
  %conv37 = zext i8 %34 to i32, !dbg !5951
  %cmp38 = icmp ne i32 %conv37, 0, !dbg !5952
  br i1 %cmp38, label %land.lhs.true40, label %lor.lhs.false, !dbg !5953

land.lhs.true40:                                  ; preds = %land.lhs.true
  %35 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5954
  %select_state = getelementptr inbounds %struct.esp, %struct.esp* %35, i32 0, i32 38, !dbg !5955
  %36 = load i8, i8* %select_state, align 4, !dbg !5955
  %conv41 = zext i8 %36 to i32, !dbg !5954
  %cmp42 = icmp eq i32 %conv41, 0, !dbg !5956
  br i1 %cmp42, label %land.lhs.true44, label %lor.lhs.false, !dbg !5957

land.lhs.true44:                                  ; preds = %land.lhs.true40
  %37 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5958
  %event = getelementptr inbounds %struct.esp, %struct.esp* %37, i32 0, i32 39, !dbg !5959
  %38 = load i8, i8* %event, align 1, !dbg !5959
  %conv45 = zext i8 %38 to i32, !dbg !5958
  %cmp46 = icmp ne i32 %conv45, 11, !dbg !5960
  br i1 %cmp46, label %land.lhs.true48, label %lor.lhs.false, !dbg !5961

land.lhs.true48:                                  ; preds = %land.lhs.true44
  %39 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5962
  %event49 = getelementptr inbounds %struct.esp, %struct.esp* %39, i32 0, i32 39, !dbg !5963
  %40 = load i8, i8* %event49, align 1, !dbg !5963
  %conv50 = zext i8 %40 to i32, !dbg !5962
  %cmp51 = icmp ne i32 %conv50, 5, !dbg !5964
  br i1 %cmp51, label %if.then57, label %lor.lhs.false, !dbg !5965

lor.lhs.false:                                    ; preds = %land.lhs.true48, %land.lhs.true44, %land.lhs.true40, %land.lhs.true, %if.then33
  %41 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5966
  %ireg53 = getelementptr inbounds %struct.esp, %struct.esp* %41, i32 0, i32 14, !dbg !5967
  %42 = load i8, i8* %ireg53, align 1, !dbg !5967
  %conv54 = zext i8 %42 to i32, !dbg !5966
  %and55 = and i32 %conv54, 4, !dbg !5968
  %tobool56 = icmp ne i32 %and55, 0, !dbg !5968
  br i1 %tobool56, label %if.then57, label %if.end72, !dbg !5969

if.then57:                                        ; preds = %lor.lhs.false, %land.lhs.true48
  %43 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5970
  %ops58 = getelementptr inbounds %struct.esp, %struct.esp* %43, i32 0, i32 2, !dbg !5970
  %44 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops58, align 8, !dbg !5970
  %esp_read859 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %44, i32 0, i32 1, !dbg !5970
  %45 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read859, align 8, !dbg !5970
  %46 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5970
  %call60 = call zeroext i8 %45(%struct.esp* %46, i64 9) #12, !dbg !5970
  %47 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5972
  %sreg2 = getelementptr inbounds %struct.esp, %struct.esp* %47, i32 0, i32 13, !dbg !5973
  store i8 %call60, i8* %sreg2, align 2, !dbg !5974
  %48 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5975
  %sreg261 = getelementptr inbounds %struct.esp, %struct.esp* %48, i32 0, i32 13, !dbg !5977
  %49 = load i8, i8* %sreg261, align 2, !dbg !5977
  %conv62 = zext i8 %49 to i32, !dbg !5975
  %and63 = and i32 %conv62, 128, !dbg !5978
  %tobool64 = icmp ne i32 %and63, 0, !dbg !5978
  br i1 %tobool64, label %lor.lhs.false65, label %if.then70, !dbg !5979

lor.lhs.false65:                                  ; preds = %if.then57
  %50 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5980
  %sreg266 = getelementptr inbounds %struct.esp, %struct.esp* %50, i32 0, i32 13, !dbg !5981
  %51 = load i8, i8* %sreg266, align 2, !dbg !5981
  %conv67 = zext i8 %51 to i32, !dbg !5980
  %and68 = and i32 %conv67, 32, !dbg !5982
  %tobool69 = icmp ne i32 %and68, 0, !dbg !5982
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !5983

if.then70:                                        ; preds = %lor.lhs.false65, %if.then57
  %52 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5984
  call void @hme_read_fifo(%struct.esp* %52) #12, !dbg !5985
  br label %if.end71, !dbg !5985

if.end71:                                         ; preds = %if.then70, %lor.lhs.false65
  br label %if.end72, !dbg !5986

if.end72:                                         ; preds = %if.end71, %lor.lhs.false
  br label %if.end73, !dbg !5987

if.end73:                                         ; preds = %if.end72, %if.end26
  br label %do.body, !dbg !5988

do.body:                                          ; preds = %if.end73
  %53 = load i32, i32* @esp_debug, align 4, !dbg !5989
  %and74 = and i32 %53, 1, !dbg !5989
  %tobool75 = icmp ne i32 %and74, 0, !dbg !5989
  br i1 %tobool75, label %if.then76, label %if.end85, !dbg !5992

if.then76:                                        ; preds = %do.body
  %54 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5989
  %host = getelementptr inbounds %struct.esp, %struct.esp* %54, i32 0, i32 3, !dbg !5989
  %55 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !5989
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %55, i32 0, i32 47, !dbg !5989
  %56 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5989
  %sreg77 = getelementptr inbounds %struct.esp, %struct.esp* %56, i32 0, i32 11, !dbg !5989
  %57 = load i8, i8* %sreg77, align 4, !dbg !5989
  %conv78 = zext i8 %57 to i32, !dbg !5989
  %58 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5989
  %seqreg79 = getelementptr inbounds %struct.esp, %struct.esp* %58, i32 0, i32 12, !dbg !5989
  %59 = load i8, i8* %seqreg79, align 1, !dbg !5989
  %conv80 = zext i8 %59 to i32, !dbg !5989
  %60 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5989
  %sreg281 = getelementptr inbounds %struct.esp, %struct.esp* %60, i32 0, i32 13, !dbg !5989
  %61 = load i8, i8* %sreg281, align 2, !dbg !5989
  %conv82 = zext i8 %61 to i32, !dbg !5989
  %62 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5989
  %ireg83 = getelementptr inbounds %struct.esp, %struct.esp* %62, i32 0, i32 14, !dbg !5989
  %63 = load i8, i8* %ireg83, align 1, !dbg !5989
  %conv84 = zext i8 %63 to i32, !dbg !5989
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 %conv78, i32 %conv80, i32 %conv82, i32 %conv84) #13, !dbg !5989
  br label %if.end85, !dbg !5989

if.end85:                                         ; preds = %if.then76, %do.body
  br label %do.end, !dbg !5992

do.end:                                           ; preds = %if.end85
  store i32 0, i32* %intr_done, align 4, !dbg !5993
  %64 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5994
  %ireg86 = getelementptr inbounds %struct.esp, %struct.esp* %64, i32 0, i32 14, !dbg !5996
  %65 = load i8, i8* %ireg86, align 1, !dbg !5996
  %conv87 = zext i8 %65 to i32, !dbg !5994
  %and88 = and i32 %conv87, 67, !dbg !5997
  %tobool89 = icmp ne i32 %and88, 0, !dbg !5997
  br i1 %tobool89, label %if.then90, label %if.else101, !dbg !5998

if.then90:                                        ; preds = %do.end
  %66 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5999
  %host91 = getelementptr inbounds %struct.esp, %struct.esp* %66, i32 0, i32 3, !dbg !5999
  %67 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host91, align 8, !dbg !5999
  %shost_gendev92 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %67, i32 0, i32 47, !dbg !5999
  %68 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !5999
  %ireg93 = getelementptr inbounds %struct.esp, %struct.esp* %68, i32 0, i32 14, !dbg !5999
  %69 = load i8, i8* %ireg93, align 1, !dbg !5999
  %conv94 = zext i8 %69 to i32, !dbg !5999
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev92, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i32 %conv94) #13, !dbg !5999
  %70 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6001
  %ireg95 = getelementptr inbounds %struct.esp, %struct.esp* %70, i32 0, i32 14, !dbg !6003
  %71 = load i8, i8* %ireg95, align 1, !dbg !6003
  %conv96 = zext i8 %71 to i32, !dbg !6001
  %and97 = and i32 %conv96, 64, !dbg !6004
  %tobool98 = icmp ne i32 %and97, 0, !dbg !6004
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !6005

if.then99:                                        ; preds = %if.then90
  %72 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6006
  call void @esp_dump_cmd_log(%struct.esp* %72) #12, !dbg !6007
  br label %if.end100, !dbg !6007

if.end100:                                        ; preds = %if.then99, %if.then90
  %73 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6008
  call void @esp_schedule_reset(%struct.esp* %73) #12, !dbg !6009
  br label %if.end121, !dbg !6010

if.else101:                                       ; preds = %do.end
  %74 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6011
  %ireg102 = getelementptr inbounds %struct.esp, %struct.esp* %74, i32 0, i32 14, !dbg !6014
  %75 = load i8, i8* %ireg102, align 1, !dbg !6014
  %conv103 = zext i8 %75 to i32, !dbg !6011
  %and104 = and i32 %conv103, 4, !dbg !6015
  %tobool105 = icmp ne i32 %and104, 0, !dbg !6015
  br i1 %tobool105, label %if.then106, label %if.else112, !dbg !6016

if.then106:                                       ; preds = %if.else101
  %76 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6017
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %76, i32 0, i32 5, !dbg !6020
  %77 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !6020
  %tobool107 = icmp ne %struct.esp_cmd_entry* %77, null, !dbg !6017
  br i1 %tobool107, label %if.then108, label %if.end110, !dbg !6021

if.then108:                                       ; preds = %if.then106
  %78 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6022
  %call109 = call i32 @esp_finish_select(%struct.esp* %78) #12, !dbg !6023
  br label %if.end110, !dbg !6024

if.end110:                                        ; preds = %if.then108, %if.then106
  %79 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6025
  %call111 = call i32 @esp_reconnect(%struct.esp* %79) #12, !dbg !6026
  store i32 %call111, i32* %intr_done, align 4, !dbg !6027
  br label %if.end120, !dbg !6028

if.else112:                                       ; preds = %if.else101
  %80 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6029
  %select_state113 = getelementptr inbounds %struct.esp, %struct.esp* %80, i32 0, i32 38, !dbg !6032
  %81 = load i8, i8* %select_state113, align 4, !dbg !6032
  %conv114 = zext i8 %81 to i32, !dbg !6029
  %cmp115 = icmp ne i32 %conv114, 0, !dbg !6033
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !6034

if.then117:                                       ; preds = %if.else112
  %82 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6035
  %call118 = call i32 @esp_finish_select(%struct.esp* %82) #12, !dbg !6036
  store i32 %call118, i32* %intr_done, align 4, !dbg !6037
  br label %if.end119, !dbg !6038

if.end119:                                        ; preds = %if.then117, %if.else112
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.end110
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.end100
  br label %while.cond, !dbg !6039

while.cond:                                       ; preds = %while.body, %if.end121
  %83 = load i32, i32* %intr_done, align 4, !dbg !6040
  %tobool122 = icmp ne i32 %83, 0, !dbg !6041
  %lnot = xor i1 %tobool122, true, !dbg !6041
  br i1 %lnot, label %while.body, label %while.end, !dbg !6039

while.body:                                       ; preds = %while.cond
  %84 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6042
  %call123 = call i32 @esp_process_event(%struct.esp* %84) #12, !dbg !6043
  store i32 %call123, i32* %intr_done, align 4, !dbg !6044
  br label %while.cond, !dbg !6039, !llvm.loop !6045

while.end:                                        ; preds = %if.then9, %if.then11, %if.end25, %while.cond
  ret void, !dbg !6047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_esp_register(%struct.esp* %esp) #0 !dbg !5286 {
entry:
  %retval = alloca i32, align 4
  %esp.addr = alloca %struct.esp*, align 8
  %err = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !6048, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6050, metadata !DIExpression()), !dbg !6051
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6052
  %num_tags = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 19, !dbg !6054
  %1 = load i8, i8* %num_tags, align 1, !dbg !6054
  %tobool = icmp ne i8 %1, 0, !dbg !6052
  br i1 %tobool, label %if.end, label %if.then, !dbg !6055

if.then:                                          ; preds = %entry
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6056
  %num_tags1 = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 19, !dbg !6057
  store i8 16, i8* %num_tags1, align 1, !dbg !6058
  br label %if.end, !dbg !6056

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** @esp_transport_template, align 8, !dbg !6059
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6060
  %host = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 3, !dbg !6061
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6061
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 11, !dbg !6062
  store %struct.scsi_transport_template* %3, %struct.scsi_transport_template** %transportt, align 8, !dbg !6063
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6064
  %host2 = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 3, !dbg !6065
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host2, align 8, !dbg !6065
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 21, !dbg !6066
  store i64 8, i64* %max_lun, align 8, !dbg !6067
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6068
  %host3 = getelementptr inbounds %struct.esp, %struct.esp* %8, i32 0, i32 3, !dbg !6069
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host3, align 8, !dbg !6069
  %cmd_per_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 26, !dbg !6070
  store i16 2, i16* %cmd_per_lun, align 8, !dbg !6071
  %10 = load i32, i32* @scsi_esp_register.instance, align 4, !dbg !6072
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6073
  %host4 = getelementptr inbounds %struct.esp, %struct.esp* %11, i32 0, i32 3, !dbg !6074
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host4, align 8, !dbg !6074
  %unique_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %12, i32 0, i32 22, !dbg !6075
  store i32 %10, i32* %unique_id, align 8, !dbg !6076
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6077
  call void @esp_set_clock_params(%struct.esp* %13) #12, !dbg !6078
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6079
  call void @esp_get_revision(%struct.esp* %14) #12, !dbg !6080
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6081
  call void @esp_init_swstate(%struct.esp* %15) #12, !dbg !6082
  %16 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6083
  call void @esp_bootup_reset(%struct.esp* %16) #12, !dbg !6084
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6085
  %dev = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 4, !dbg !6086
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6086
  %19 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6087
  %host5 = getelementptr inbounds %struct.esp, %struct.esp* %19, i32 0, i32 3, !dbg !6088
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host5, align 8, !dbg !6088
  %unique_id6 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 22, !dbg !6089
  %21 = load i32, i32* %unique_id6, align 8, !dbg !6089
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6090
  %regs = getelementptr inbounds %struct.esp, %struct.esp* %22, i32 0, i32 0, !dbg !6091
  %23 = load i8*, i8** %regs, align 8, !dbg !6091
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6092
  %dma_regs = getelementptr inbounds %struct.esp, %struct.esp* %24, i32 0, i32 1, !dbg !6093
  %25 = load i8*, i8** %dma_regs, align 8, !dbg !6093
  %26 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6094
  %host7 = getelementptr inbounds %struct.esp, %struct.esp* %26, i32 0, i32 3, !dbg !6095
  %27 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host7, align 8, !dbg !6095
  %irq = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %27, i32 0, i32 45, !dbg !6096
  %28 = load i32, i32* %irq, align 4, !dbg !6096
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %18, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i32 %21, i8* %23, i8* %25, i32 %28) #13, !dbg !6097
  %29 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6098
  %dev8 = getelementptr inbounds %struct.esp, %struct.esp* %29, i32 0, i32 4, !dbg !6099
  %30 = load %struct.device*, %struct.device** %dev8, align 8, !dbg !6099
  %31 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6100
  %host9 = getelementptr inbounds %struct.esp, %struct.esp* %31, i32 0, i32 3, !dbg !6101
  %32 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host9, align 8, !dbg !6101
  %unique_id10 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %32, i32 0, i32 22, !dbg !6102
  %33 = load i32, i32* %unique_id10, align 8, !dbg !6102
  %34 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6103
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %34, i32 0, i32 36, !dbg !6104
  %35 = load i32, i32* %rev, align 4, !dbg !6104
  %idxprom = zext i32 %35 to i64, !dbg !6105
  %arrayidx = getelementptr [9 x i8*], [9 x i8*]* @esp_chip_names, i64 0, i64 %idxprom, !dbg !6105
  %36 = load i8*, i8** %arrayidx, align 8, !dbg !6105
  %37 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6106
  %cfreq = getelementptr inbounds %struct.esp, %struct.esp* %37, i32 0, i32 41, !dbg !6107
  %38 = load i32, i32* %cfreq, align 4, !dbg !6107
  %div = udiv i32 %38, 1000000, !dbg !6108
  %39 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6109
  %cfact = getelementptr inbounds %struct.esp, %struct.esp* %39, i32 0, i32 40, !dbg !6110
  %40 = load i32, i32* %cfact, align 8, !dbg !6110
  %41 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6111
  %scsi_id = getelementptr inbounds %struct.esp, %struct.esp* %41, i32 0, i32 34, !dbg !6112
  %42 = load i8, i8* %scsi_id, align 4, !dbg !6112
  %conv = zext i8 %42 to i32, !dbg !6111
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %30, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0), i32 %33, i8* %36, i32 %div, i32 %40, i32 %conv) #13, !dbg !6113
  %43 = load i32, i32* @esp_bus_reset_settle, align 4, !dbg !6114
  call void @ssleep(i32 %43) #12, !dbg !6115
  %44 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6116
  %host11 = getelementptr inbounds %struct.esp, %struct.esp* %44, i32 0, i32 3, !dbg !6117
  %45 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host11, align 8, !dbg !6117
  %46 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6118
  %dev12 = getelementptr inbounds %struct.esp, %struct.esp* %46, i32 0, i32 4, !dbg !6119
  %47 = load %struct.device*, %struct.device** %dev12, align 8, !dbg !6119
  %call = call i32 @scsi_add_host(%struct.Scsi_Host* %45, %struct.device* %47) #12, !dbg !6120
  store i32 %call, i32* %err, align 4, !dbg !6121
  %48 = load i32, i32* %err, align 4, !dbg !6122
  %tobool13 = icmp ne i32 %48, 0, !dbg !6122
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !6124

if.then14:                                        ; preds = %if.end
  %49 = load i32, i32* %err, align 4, !dbg !6125
  store i32 %49, i32* %retval, align 4, !dbg !6126
  br label %return, !dbg !6126

if.end15:                                         ; preds = %if.end
  %50 = load i32, i32* @scsi_esp_register.instance, align 4, !dbg !6127
  %inc = add i32 %50, 1, !dbg !6127
  store i32 %inc, i32* @scsi_esp_register.instance, align 4, !dbg !6127
  %51 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6128
  %host16 = getelementptr inbounds %struct.esp, %struct.esp* %51, i32 0, i32 3, !dbg !6129
  %52 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host16, align 8, !dbg !6129
  call void @scsi_scan_host(%struct.Scsi_Host* %52) #12, !dbg !6130
  store i32 0, i32* %retval, align 4, !dbg !6131
  br label %return, !dbg !6131

return:                                           ; preds = %if.end15, %if.then14
  %53 = load i32, i32* %retval, align 4, !dbg !6132
  ret i32 %53, !dbg !6132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_set_clock_params(%struct.esp* %esp) #0 !dbg !6133 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %fhz = alloca i32, align 4
  %ccf = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !6134, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.declare(metadata i32* %fhz, metadata !6136, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.declare(metadata i8* %ccf, metadata !6138, metadata !DIExpression()), !dbg !6139
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6140
  %cfreq = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 41, !dbg !6141
  %1 = load i32, i32* %cfreq, align 4, !dbg !6141
  store i32 %1, i32* %fhz, align 4, !dbg !6142
  %2 = load i32, i32* %fhz, align 4, !dbg !6143
  %div = sdiv i32 %2, 1000000, !dbg !6144
  %add = add i32 %div, 4, !dbg !6145
  %div1 = sdiv i32 %add, 5, !dbg !6146
  %conv = trunc i32 %div1 to i8, !dbg !6147
  store i8 %conv, i8* %ccf, align 1, !dbg !6148
  %3 = load i8, i8* %ccf, align 1, !dbg !6149
  %conv2 = zext i8 %3 to i32, !dbg !6149
  %cmp = icmp eq i32 %conv2, 1, !dbg !6151
  br i1 %cmp, label %if.then, label %if.end, !dbg !6152

if.then:                                          ; preds = %entry
  store i8 2, i8* %ccf, align 1, !dbg !6153
  br label %if.end, !dbg !6154

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %fhz, align 4, !dbg !6155
  %cmp4 = icmp sle i32 %4, 5000000, !dbg !6157
  br i1 %cmp4, label %if.then13, label %lor.lhs.false, !dbg !6158

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i8, i8* %ccf, align 1, !dbg !6159
  %conv6 = zext i8 %5 to i32, !dbg !6159
  %cmp7 = icmp slt i32 %conv6, 1, !dbg !6160
  br i1 %cmp7, label %if.then13, label %lor.lhs.false9, !dbg !6161

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %6 = load i8, i8* %ccf, align 1, !dbg !6162
  %conv10 = zext i8 %6 to i32, !dbg !6162
  %cmp11 = icmp sgt i32 %conv10, 8, !dbg !6163
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !6164

if.then13:                                        ; preds = %lor.lhs.false9, %lor.lhs.false, %if.end
  store i32 20000000, i32* %fhz, align 4, !dbg !6165
  store i8 4, i8* %ccf, align 1, !dbg !6167
  br label %if.end14, !dbg !6168

if.end14:                                         ; preds = %if.then13, %lor.lhs.false9
  %7 = load i8, i8* %ccf, align 1, !dbg !6169
  %conv15 = zext i8 %7 to i32, !dbg !6169
  %cmp16 = icmp eq i32 %conv15, 8, !dbg !6170
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !6169

cond.true:                                        ; preds = %if.end14
  br label %cond.end, !dbg !6169

cond.false:                                       ; preds = %if.end14
  %8 = load i8, i8* %ccf, align 1, !dbg !6171
  %conv18 = zext i8 %8 to i32, !dbg !6171
  br label %cond.end, !dbg !6169

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv18, %cond.false ], !dbg !6169
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6172
  %cfact = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 40, !dbg !6173
  store i32 %cond, i32* %cfact, align 8, !dbg !6174
  %10 = load i32, i32* %fhz, align 4, !dbg !6175
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6176
  %cfreq19 = getelementptr inbounds %struct.esp, %struct.esp* %11, i32 0, i32 41, !dbg !6177
  store i32 %10, i32* %cfreq19, align 4, !dbg !6178
  %12 = load i32, i32* %fhz, align 4, !dbg !6179
  %div20 = sdiv i32 %12, 1000, !dbg !6179
  %div21 = sdiv i32 1000000000, %div20, !dbg !6179
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6180
  %ccycle = getelementptr inbounds %struct.esp, %struct.esp* %13, i32 0, i32 42, !dbg !6181
  store i32 %div21, i32* %ccycle, align 8, !dbg !6182
  %14 = load i8, i8* %ccf, align 1, !dbg !6183
  %conv22 = zext i8 %14 to i32, !dbg !6183
  %mul = mul i32 7682, %conv22, !dbg !6183
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6183
  %ccycle23 = getelementptr inbounds %struct.esp, %struct.esp* %15, i32 0, i32 42, !dbg !6183
  %16 = load i32, i32* %ccycle23, align 8, !dbg !6183
  %mul24 = mul i32 %mul, %16, !dbg !6183
  %div25 = udiv i32 %mul24, 1000, !dbg !6183
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6184
  %ctick = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 43, !dbg !6185
  store i32 %div25, i32* %ctick, align 4, !dbg !6186
  %18 = load i32, i32* %fhz, align 4, !dbg !6187
  %div26 = sdiv i32 %18, 1000, !dbg !6187
  %mul27 = mul i32 250, %div26, !dbg !6187
  %19 = load i8, i8* %ccf, align 1, !dbg !6187
  %conv28 = zext i8 %19 to i32, !dbg !6187
  %mul29 = mul i32 8192, %conv28, !dbg !6187
  %div30 = sdiv i32 %mul27, %mul29, !dbg !6187
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6188
  %neg_defp = getelementptr inbounds %struct.esp, %struct.esp* %20, i32 0, i32 44, !dbg !6189
  store i32 %div30, i32* %neg_defp, align 8, !dbg !6190
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6191
  %sync_defp = getelementptr inbounds %struct.esp, %struct.esp* %21, i32 0, i32 45, !dbg !6192
  store i32 50, i32* %sync_defp, align 4, !dbg !6193
  ret void, !dbg !6194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_get_revision(%struct.esp* %esp) #0 !dbg !6195 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %val = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !6196, metadata !DIExpression()), !dbg !6197
  call void @llvm.dbg.declare(metadata i8* %val, metadata !6198, metadata !DIExpression()), !dbg !6199
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6200
  %scsi_id = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 34, !dbg !6201
  %1 = load i8, i8* %scsi_id, align 4, !dbg !6201
  %conv = zext i8 %1 to i32, !dbg !6200
  %and = and i32 %conv, 7, !dbg !6202
  %or = or i32 16, %and, !dbg !6203
  %conv1 = trunc i32 %or to i8, !dbg !6204
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6205
  %config1 = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 31, !dbg !6206
  store i8 %conv1, i8* %config1, align 1, !dbg !6207
  %3 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6208
  %config2 = getelementptr inbounds %struct.esp, %struct.esp* %3, i32 0, i32 32, !dbg !6210
  %4 = load i8, i8* %config2, align 2, !dbg !6210
  %conv2 = zext i8 %4 to i32, !dbg !6208
  %cmp = icmp eq i32 %conv2, 0, !dbg !6211
  br i1 %cmp, label %if.then, label %if.end15, !dbg !6212

if.then:                                          ; preds = %entry
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6213
  %config24 = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 32, !dbg !6215
  store i8 10, i8* %config24, align 2, !dbg !6216
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6217
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 2, !dbg !6217
  %7 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !6217
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %7, i32 0, i32 0, !dbg !6217
  %8 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !6217
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6217
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6217
  %config25 = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 32, !dbg !6217
  %11 = load i8, i8* %config25, align 2, !dbg !6217
  call void %8(%struct.esp* %9, i8 zeroext %11, i64 11) #12, !dbg !6217
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6218
  %ops6 = getelementptr inbounds %struct.esp, %struct.esp* %12, i32 0, i32 2, !dbg !6218
  %13 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops6, align 8, !dbg !6218
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %13, i32 0, i32 1, !dbg !6218
  %14 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !6218
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6218
  %call = call zeroext i8 %14(%struct.esp* %15, i64 11) #12, !dbg !6218
  store i8 %call, i8* %val, align 1, !dbg !6219
  %16 = load i8, i8* %val, align 1, !dbg !6220
  %conv7 = zext i8 %16 to i32, !dbg !6220
  %and8 = and i32 %conv7, -225, !dbg !6220
  %conv9 = trunc i32 %and8 to i8, !dbg !6220
  store i8 %conv9, i8* %val, align 1, !dbg !6220
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6221
  %config210 = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 32, !dbg !6222
  store i8 0, i8* %config210, align 2, !dbg !6223
  %18 = load i8, i8* %val, align 1, !dbg !6224
  %conv11 = zext i8 %18 to i32, !dbg !6224
  %cmp12 = icmp ne i32 %conv11, 10, !dbg !6226
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !6227

if.then14:                                        ; preds = %if.then
  %19 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6228
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %19, i32 0, i32 36, !dbg !6230
  store i32 0, i32* %rev, align 4, !dbg !6231
  br label %if.end46, !dbg !6232

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !6233

if.end15:                                         ; preds = %if.end, %entry
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6234
  call void @esp_set_all_config3(%struct.esp* %20, i8 zeroext 5) #12, !dbg !6235
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6236
  %prev_cfg3 = getelementptr inbounds %struct.esp, %struct.esp* %21, i32 0, i32 18, !dbg !6237
  store i8 5, i8* %prev_cfg3, align 2, !dbg !6238
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6239
  %ops16 = getelementptr inbounds %struct.esp, %struct.esp* %22, i32 0, i32 2, !dbg !6239
  %23 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops16, align 8, !dbg !6239
  %esp_write817 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %23, i32 0, i32 0, !dbg !6239
  %24 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write817, align 8, !dbg !6239
  %25 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6239
  %26 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6239
  %config218 = getelementptr inbounds %struct.esp, %struct.esp* %26, i32 0, i32 32, !dbg !6239
  %27 = load i8, i8* %config218, align 2, !dbg !6239
  call void %24(%struct.esp* %25, i8 zeroext %27, i64 11) #12, !dbg !6239
  %28 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6240
  %ops19 = getelementptr inbounds %struct.esp, %struct.esp* %28, i32 0, i32 2, !dbg !6240
  %29 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops19, align 8, !dbg !6240
  %esp_write820 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %29, i32 0, i32 0, !dbg !6240
  %30 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write820, align 8, !dbg !6240
  %31 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6240
  call void %30(%struct.esp* %31, i8 zeroext 0, i64 12) #12, !dbg !6240
  %32 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6241
  %ops21 = getelementptr inbounds %struct.esp, %struct.esp* %32, i32 0, i32 2, !dbg !6241
  %33 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops21, align 8, !dbg !6241
  %esp_write822 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %33, i32 0, i32 0, !dbg !6241
  %34 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write822, align 8, !dbg !6241
  %35 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6241
  %36 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6241
  %prev_cfg323 = getelementptr inbounds %struct.esp, %struct.esp* %36, i32 0, i32 18, !dbg !6241
  %37 = load i8, i8* %prev_cfg323, align 2, !dbg !6241
  call void %34(%struct.esp* %35, i8 zeroext %37, i64 12) #12, !dbg !6241
  %38 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6242
  %ops24 = getelementptr inbounds %struct.esp, %struct.esp* %38, i32 0, i32 2, !dbg !6242
  %39 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops24, align 8, !dbg !6242
  %esp_read825 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %39, i32 0, i32 1, !dbg !6242
  %40 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read825, align 8, !dbg !6242
  %41 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6242
  %call26 = call zeroext i8 %40(%struct.esp* %41, i64 12) #12, !dbg !6242
  store i8 %call26, i8* %val, align 1, !dbg !6243
  %42 = load i8, i8* %val, align 1, !dbg !6244
  %conv27 = zext i8 %42 to i32, !dbg !6244
  %cmp28 = icmp ne i32 %conv27, 5, !dbg !6246
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !6247

if.then30:                                        ; preds = %if.end15
  %43 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6248
  %rev31 = getelementptr inbounds %struct.esp, %struct.esp* %43, i32 0, i32 36, !dbg !6250
  store i32 1, i32* %rev31, align 4, !dbg !6251
  br label %if.end46, !dbg !6252

if.else:                                          ; preds = %if.end15
  %44 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6253
  call void @esp_set_all_config3(%struct.esp* %44, i8 zeroext 0) #12, !dbg !6255
  %45 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6256
  %prev_cfg332 = getelementptr inbounds %struct.esp, %struct.esp* %45, i32 0, i32 18, !dbg !6257
  store i8 0, i8* %prev_cfg332, align 2, !dbg !6258
  %46 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6259
  %ops33 = getelementptr inbounds %struct.esp, %struct.esp* %46, i32 0, i32 2, !dbg !6259
  %47 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops33, align 8, !dbg !6259
  %esp_write834 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %47, i32 0, i32 0, !dbg !6259
  %48 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write834, align 8, !dbg !6259
  %49 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6259
  %50 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6259
  %prev_cfg335 = getelementptr inbounds %struct.esp, %struct.esp* %50, i32 0, i32 18, !dbg !6259
  %51 = load i8, i8* %prev_cfg335, align 2, !dbg !6259
  call void %48(%struct.esp* %49, i8 zeroext %51, i64 12) #12, !dbg !6259
  %52 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6260
  %cfact = getelementptr inbounds %struct.esp, %struct.esp* %52, i32 0, i32 40, !dbg !6262
  %53 = load i32, i32* %cfact, align 8, !dbg !6262
  %cmp36 = icmp eq i32 %53, 0, !dbg !6263
  br i1 %cmp36, label %if.then41, label %lor.lhs.false, !dbg !6264

lor.lhs.false:                                    ; preds = %if.else
  %54 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6265
  %cfact38 = getelementptr inbounds %struct.esp, %struct.esp* %54, i32 0, i32 40, !dbg !6266
  %55 = load i32, i32* %cfact38, align 8, !dbg !6266
  %cmp39 = icmp ugt i32 %55, 5, !dbg !6267
  br i1 %cmp39, label %if.then41, label %if.else43, !dbg !6268

if.then41:                                        ; preds = %lor.lhs.false, %if.else
  %56 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6269
  %rev42 = getelementptr inbounds %struct.esp, %struct.esp* %56, i32 0, i32 36, !dbg !6271
  store i32 7, i32* %rev42, align 4, !dbg !6272
  %57 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6273
  %sync_defp = getelementptr inbounds %struct.esp, %struct.esp* %57, i32 0, i32 45, !dbg !6274
  store i32 25, i32* %sync_defp, align 4, !dbg !6275
  br label %if.end45, !dbg !6276

if.else43:                                        ; preds = %lor.lhs.false
  %58 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6277
  %rev44 = getelementptr inbounds %struct.esp, %struct.esp* %58, i32 0, i32 36, !dbg !6279
  store i32 2, i32* %rev44, align 4, !dbg !6280
  br label %if.end45

if.end45:                                         ; preds = %if.else43, %if.then41
  br label %if.end46

if.end46:                                         ; preds = %if.then14, %if.end45, %if.then30
  ret void, !dbg !6281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_init_swstate(%struct.esp* %esp) #0 !dbg !6282 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %i = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6285, metadata !DIExpression()), !dbg !6286
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6287
  %queued_cmds = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 6, !dbg !6288
  call void @INIT_LIST_HEAD(%struct.list_head* %queued_cmds) #12, !dbg !6289
  %1 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6290
  %active_cmds = getelementptr inbounds %struct.esp, %struct.esp* %1, i32 0, i32 7, !dbg !6291
  call void @INIT_LIST_HEAD(%struct.list_head* %active_cmds) #12, !dbg !6292
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6293
  %esp_cmd_pool = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 20, !dbg !6294
  call void @INIT_LIST_HEAD(%struct.list_head* %esp_cmd_pool) #12, !dbg !6295
  store i32 0, i32* %i, align 4, !dbg !6296
  br label %for.cond, !dbg !6298

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !6299
  %cmp = icmp slt i32 %3, 16, !dbg !6301
  br i1 %cmp, label %for.body, label %for.end, !dbg !6302

for.body:                                         ; preds = %for.cond
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6303
  %target = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 21, !dbg !6305
  %5 = load i32, i32* %i, align 4, !dbg !6306
  %idxprom = sext i32 %5 to i64, !dbg !6303
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !6303
  %flags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx, i32 0, i32 3, !dbg !6307
  store i8 0, i8* %flags, align 1, !dbg !6308
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6309
  %target1 = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 21, !dbg !6310
  %7 = load i32, i32* %i, align 4, !dbg !6311
  %idxprom2 = sext i32 %7 to i64, !dbg !6309
  %arrayidx3 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target1, i64 0, i64 %idxprom2, !dbg !6309
  %nego_goal_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx3, i32 0, i32 4, !dbg !6312
  store i8 0, i8* %nego_goal_period, align 4, !dbg !6313
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6314
  %target4 = getelementptr inbounds %struct.esp, %struct.esp* %8, i32 0, i32 21, !dbg !6315
  %9 = load i32, i32* %i, align 4, !dbg !6316
  %idxprom5 = sext i32 %9 to i64, !dbg !6314
  %arrayidx6 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target4, i64 0, i64 %idxprom5, !dbg !6314
  %nego_goal_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx6, i32 0, i32 5, !dbg !6317
  store i8 0, i8* %nego_goal_offset, align 1, !dbg !6318
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6319
  %target7 = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 21, !dbg !6320
  %11 = load i32, i32* %i, align 4, !dbg !6321
  %idxprom8 = sext i32 %11 to i64, !dbg !6319
  %arrayidx9 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target7, i64 0, i64 %idxprom8, !dbg !6319
  %nego_goal_width = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx9, i32 0, i32 6, !dbg !6322
  store i8 0, i8* %nego_goal_width, align 2, !dbg !6323
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6324
  %target10 = getelementptr inbounds %struct.esp, %struct.esp* %12, i32 0, i32 21, !dbg !6325
  %13 = load i32, i32* %i, align 4, !dbg !6326
  %idxprom11 = sext i32 %13 to i64, !dbg !6324
  %arrayidx12 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target10, i64 0, i64 %idxprom11, !dbg !6324
  %nego_goal_tags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx12, i32 0, i32 7, !dbg !6327
  store i8 0, i8* %nego_goal_tags, align 1, !dbg !6328
  br label %for.inc, !dbg !6329

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !6330
  %inc = add i32 %14, 1, !dbg !6330
  store i32 %inc, i32* %i, align 4, !dbg !6330
  br label %for.cond, !dbg !6331, !llvm.loop !6332

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_bootup_reset(%struct.esp* %esp) #0 !dbg !6335 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %val = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !6336, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.declare(metadata i8* %val, metadata !6338, metadata !DIExpression()), !dbg !6339
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6340
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 2, !dbg !6341
  %1 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !6341
  %reset_dma = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %1, i32 0, i32 4, !dbg !6342
  %2 = load void (%struct.esp*)*, void (%struct.esp*)** %reset_dma, align 8, !dbg !6342
  %3 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6343
  call void %2(%struct.esp* %3) #12, !dbg !6340
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6344
  call void @esp_reset_esp(%struct.esp* %4) #12, !dbg !6345
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6346
  %ops1 = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 2, !dbg !6346
  %6 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops1, align 8, !dbg !6346
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %6, i32 0, i32 1, !dbg !6346
  %7 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !6346
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6346
  %call = call zeroext i8 %7(%struct.esp* %8, i64 8) #12, !dbg !6346
  store i8 %call, i8* %val, align 1, !dbg !6347
  %9 = load i8, i8* %val, align 1, !dbg !6348
  %conv = zext i8 %9 to i32, !dbg !6348
  %or = or i32 %conv, 64, !dbg !6348
  %conv2 = trunc i32 %or to i8, !dbg !6348
  store i8 %conv2, i8* %val, align 1, !dbg !6348
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6349
  %ops3 = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 2, !dbg !6349
  %11 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops3, align 8, !dbg !6349
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %11, i32 0, i32 0, !dbg !6349
  %12 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !6349
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6349
  %14 = load i8, i8* %val, align 1, !dbg !6349
  call void %12(%struct.esp* %13, i8 zeroext %14, i64 8) #12, !dbg !6349
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6350
  call void @scsi_esp_cmd(%struct.esp* %15, i8 zeroext 3) #12, !dbg !6351
  call void @__const_udelay(i64 1718000) #12, !dbg !6352
  %16 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6357
  %ops4 = getelementptr inbounds %struct.esp, %struct.esp* %16, i32 0, i32 2, !dbg !6357
  %17 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops4, align 8, !dbg !6357
  %esp_write85 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %17, i32 0, i32 0, !dbg !6357
  %18 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write85, align 8, !dbg !6357
  %19 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6357
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6357
  %config1 = getelementptr inbounds %struct.esp, %struct.esp* %20, i32 0, i32 31, !dbg !6357
  %21 = load i8, i8* %config1, align 1, !dbg !6357
  call void %18(%struct.esp* %19, i8 zeroext %21, i64 8) #12, !dbg !6357
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6358
  %ops6 = getelementptr inbounds %struct.esp, %struct.esp* %22, i32 0, i32 2, !dbg !6358
  %23 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops6, align 8, !dbg !6358
  %esp_read87 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %23, i32 0, i32 1, !dbg !6358
  %24 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read87, align 8, !dbg !6358
  %25 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6358
  %call8 = call zeroext i8 %24(%struct.esp* %25, i64 5) #12, !dbg !6358
  ret void, !dbg !6359
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ssleep(i32 %seconds) #0 !dbg !6360 {
entry:
  %seconds.addr = alloca i32, align 4
  store i32 %seconds, i32* %seconds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seconds.addr, metadata !6364, metadata !DIExpression()), !dbg !6365
  %0 = load i32, i32* %seconds.addr, align 4, !dbg !6366
  %mul = mul i32 %0, 1000, !dbg !6367
  call void @msleep(i32 %mul) #12, !dbg !6368
  ret void, !dbg !6369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_add_host(%struct.Scsi_Host* %host, %struct.device* %dev) #0 !dbg !6370 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !6373, metadata !DIExpression()), !dbg !6374
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6375, metadata !DIExpression()), !dbg !6376
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !6377
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6378
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6379
  %call = call i32 @scsi_add_host_with_dma(%struct.Scsi_Host* %0, %struct.device* %1, %struct.device* %2) #12, !dbg !6380
  ret i32 %call, !dbg !6381
}

; Function Attrs: noredzone
declare dso_local void @scsi_scan_host(%struct.Scsi_Host*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_esp_unregister(%struct.esp* %esp) #0 !dbg !6382 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !6383, metadata !DIExpression()), !dbg !6384
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !6385
  %host = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 3, !dbg !6386
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6386
  call void @scsi_remove_host(%struct.Scsi_Host* %1) #12, !dbg !6387
  ret void, !dbg !6388
}

; Function Attrs: noredzone
declare dso_local void @scsi_remove_host(%struct.Scsi_Host*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @esp_info(%struct.Scsi_Host* %host) #0 !dbg !6389 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !6390, metadata !DIExpression()), !dbg !6391
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), !dbg !6392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_queuecommand(%struct.Scsi_Host* %shost, %struct.scsi_cmnd* %cmd) #0 !dbg !6393 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5723, metadata !DIExpression()), !dbg !6394
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5730, metadata !DIExpression()), !dbg !6396
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5732, metadata !DIExpression()), !dbg !6397
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %irq_flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !6404, metadata !DIExpression()), !dbg !6405
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6406, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.declare(metadata i64* %irq_flags, metadata !6407, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6408, metadata !DIExpression()), !dbg !6405
  br label %do.body, !dbg !6405

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6409

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6410, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6413, metadata !DIExpression()), !dbg !6412
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6412
  %conv = zext i1 %cmp to i32, !dbg !6412
  store i32 1, i32* %tmp, align 4, !dbg !6412
  %0 = load i32, i32* %tmp, align 4, !dbg !6412
  br label %do.body2, !dbg !6414

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6415

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6416

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6418, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6422, metadata !DIExpression()), !dbg !6421
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6421
  %conv8 = zext i1 %cmp7 to i32, !dbg !6421
  store i32 1, i32* %tmp9, align 4, !dbg !6421
  %1 = load i32, i32* %tmp9, align 4, !dbg !6421
  %call = call i64 @arch_local_irq_save() #12, !dbg !6423
  store i64 %call, i64* %irq_flags, align 8, !dbg !6423
  br label %do.end, !dbg !6423

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6416

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6415

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6424, !srcloc !6425
  br label %do.body12, !dbg !6424

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6426
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 4, !dbg !6426
  %3 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !6426
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6427
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !6428
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !6428
  br label %do.end14, !dbg !6426

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6424

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6415

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6414

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6409

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6405
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6405
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 21, !dbg !6405
  %8 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !6405
  %call19 = call i32 @esp_queuecommand_lck(%struct.scsi_cmnd* %6, void (%struct.scsi_cmnd*)* %8) #12, !dbg !6405
  store i32 %call19, i32* %rc, align 4, !dbg !6405
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6405
  %host_lock20 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 4, !dbg !6405
  %10 = load %struct.spinlock*, %struct.spinlock** %host_lock20, align 8, !dbg !6405
  %11 = load i64, i64* %irq_flags, align 8, !dbg !6405
  store %struct.spinlock* %10, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !263, metadata !5836, metadata !DIExpression()) #6, !dbg !6429
  call void @llvm.dbg.declare(metadata !263, metadata !5840, metadata !DIExpression()) #6, !dbg !6429
  store i32 1, i32* %tmp.i, align 4, !dbg !6429
  %12 = load i32, i32* %tmp.i, align 4, !dbg !6429
  call void @llvm.dbg.declare(metadata !263, metadata !5841, metadata !DIExpression()) #6, !dbg !6430
  call void @llvm.dbg.declare(metadata !263, metadata !5847, metadata !DIExpression()) #6, !dbg !6430
  store i32 1, i32* %tmp8.i, align 4, !dbg !6430
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !6430
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !6431
  call void @arch_local_irq_restore(i64 %14) #14, !dbg !6431
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6432, !srcloc !5851
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !6433
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !6433
  %rlock.i22 = bitcast %union.anon* %16 to %struct.raw_spinlock*, !dbg !6433
  %17 = load i32, i32* %rc, align 4, !dbg !6405
  ret i32 %17, !dbg !6405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_eh_abort_handler(%struct.scsi_cmnd* %cmd) #0 !dbg !6434 {
entry:
  %lock.addr.i217 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i217, metadata !5723, metadata !DIExpression()), !dbg !6435
  %flags.addr.i218 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i218, metadata !5730, metadata !DIExpression()), !dbg !6437
  %tmp.i219 = alloca i32, align 4
  %tmp8.i220 = alloca i32, align 4
  %lock.addr.i212 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i212, metadata !5723, metadata !DIExpression()), !dbg !6438
  %flags.addr.i213 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i213, metadata !5730, metadata !DIExpression()), !dbg !6442
  %tmp.i214 = alloca i32, align 4
  %tmp8.i215 = alloca i32, align 4
  %lock.addr.i210 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i210, metadata !5732, metadata !DIExpression()), !dbg !6443
  %lock.addr.i205 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i205, metadata !5723, metadata !DIExpression()), !dbg !6450
  %flags.addr.i206 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i206, metadata !5730, metadata !DIExpression()), !dbg !6452
  %tmp.i207 = alloca i32, align 4
  %tmp8.i208 = alloca i32, align 4
  %lock.addr.i203 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i203, metadata !5732, metadata !DIExpression()), !dbg !6453
  %lock.addr.i198 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i198, metadata !5723, metadata !DIExpression()), !dbg !6460
  %flags.addr.i199 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i199, metadata !5730, metadata !DIExpression()), !dbg !6462
  %tmp.i200 = alloca i32, align 4
  %tmp8.i201 = alloca i32, align 4
  %lock.addr.i196 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i196, metadata !5723, metadata !DIExpression()), !dbg !6463
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5730, metadata !DIExpression()), !dbg !6465
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5732, metadata !DIExpression()), !dbg !6466
  %retval = alloca i32, align 4
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %esp = alloca %struct.esp*, align 8
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %tmp = alloca %struct.esp_cmd_entry*, align 8
  %eh_done = alloca %struct.completion, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp2 = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp33 = alloca %struct.esp_cmd_entry*, align 8
  %__mptr44 = alloca i8*, align 8
  %tmp49 = alloca %struct.esp_cmd_entry*, align 8
  %__mptr51 = alloca i8*, align 8
  %tmp55 = alloca %struct.esp_cmd_entry*, align 8
  %__mptr72 = alloca i8*, align 8
  %tmp77 = alloca %struct.esp_cmd_entry*, align 8
  %__dummy84 = alloca i64, align 8
  %__dummy285 = alloca i64, align 8
  %tmp88 = alloca i32, align 4
  %__dummy92 = alloca i64, align 8
  %__dummy293 = alloca i64, align 8
  %tmp96 = alloca i32, align 4
  %__mptr110 = alloca i8*, align 8
  %tmp115 = alloca %struct.esp_cmd_entry*, align 8
  %__mptr130 = alloca i8*, align 8
  %tmp135 = alloca %struct.esp_cmd_entry*, align 8
  %__dummy162 = alloca i64, align 8
  %__dummy2163 = alloca i64, align 8
  %tmp166 = alloca i32, align 4
  %__dummy170 = alloca i64, align 8
  %__dummy2171 = alloca i64, align 8
  %tmp174 = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6473, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !6475, metadata !DIExpression()), !dbg !6476
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6477
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !6478
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6478
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !6479
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6479
  %call = call i8* @shost_priv(%struct.Scsi_Host* %2) #12, !dbg !6480
  %3 = bitcast i8* %call to %struct.esp*, !dbg !6480
  store %struct.esp* %3, %struct.esp** %esp, align 8, !dbg !6476
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !6481, metadata !DIExpression()), !dbg !6482
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %tmp, metadata !6483, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.declare(metadata %struct.completion* %eh_done, metadata !6485, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6487, metadata !DIExpression()), !dbg !6488
  br label %do.body, !dbg !6489

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6490

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6491, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6494, metadata !DIExpression()), !dbg !6493
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6493
  %conv = zext i1 %cmp to i32, !dbg !6493
  store i32 1, i32* %tmp2, align 4, !dbg !6493
  %4 = load i32, i32* %tmp2, align 4, !dbg !6493
  br label %do.body3, !dbg !6495

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !6496

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !6497

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !6499, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !6503, metadata !DIExpression()), !dbg !6502
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !6502
  %conv9 = zext i1 %cmp8 to i32, !dbg !6502
  store i32 1, i32* %tmp10, align 4, !dbg !6502
  %5 = load i32, i32* %tmp10, align 4, !dbg !6502
  %call11 = call i64 @arch_local_irq_save() #12, !dbg !6504
  store i64 %call11, i64* %flags, align 8, !dbg !6504
  br label %do.end, !dbg !6504

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !6497

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !6496

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6505, !srcloc !6506
  br label %do.body14, !dbg !6505

do.body14:                                        ; preds = %do.body13
  %6 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6507
  %host15 = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 3, !dbg !6507
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host15, align 8, !dbg !6507
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 4, !dbg !6507
  %8 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !6507
  store %struct.spinlock* %8, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6508
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !6509
  %rlock.i = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !6509
  br label %do.end17, !dbg !6507

do.end17:                                         ; preds = %do.body14
  br label %do.end18, !dbg !6505

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6496

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6495

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6490

do.end21:                                         ; preds = %do.end20
  %11 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6510
  %host22 = getelementptr inbounds %struct.esp, %struct.esp* %11, i32 0, i32 3, !dbg !6510
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host22, align 8, !dbg !6510
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %12, i32 0, i32 47, !dbg !6510
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6510
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6510
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 14, !dbg !6510
  %15 = load i8*, i8** %cmnd, align 8, !dbg !6510
  %arrayidx = getelementptr i8, i8* %15, i64 0, !dbg !6510
  %16 = load i8, i8* %arrayidx, align 1, !dbg !6510
  %conv23 = zext i8 %16 to i32, !dbg !6510
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.70, i64 0, i64 0), %struct.scsi_cmnd* %13, i32 %conv23) #13, !dbg !6510
  %17 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6511
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 5, !dbg !6512
  %18 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !6512
  store %struct.esp_cmd_entry* %18, %struct.esp_cmd_entry** %ent, align 8, !dbg !6513
  %19 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6514
  %tobool = icmp ne %struct.esp_cmd_entry* %19, null, !dbg !6514
  br i1 %tobool, label %if.then, label %if.end, !dbg !6516

if.then:                                          ; preds = %do.end21
  %20 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6517
  %host24 = getelementptr inbounds %struct.esp, %struct.esp* %20, i32 0, i32 3, !dbg !6517
  %21 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host24, align 8, !dbg !6517
  %shost_gendev25 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %21, i32 0, i32 47, !dbg !6517
  %22 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6517
  %cmd26 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %22, i32 0, i32 1, !dbg !6517
  %23 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd26, align 8, !dbg !6517
  %24 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6517
  %cmd27 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %24, i32 0, i32 1, !dbg !6517
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd27, align 8, !dbg !6517
  %cmnd28 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %25, i32 0, i32 14, !dbg !6517
  %26 = load i8*, i8** %cmnd28, align 8, !dbg !6517
  %arrayidx29 = getelementptr i8, i8* %26, i64 0, !dbg !6517
  %27 = load i8, i8* %arrayidx29, align 1, !dbg !6517
  %conv30 = zext i8 %27 to i32, !dbg !6517
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev25, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0), %struct.scsi_cmnd* %23, i32 %conv30) #13, !dbg !6517
  br label %if.end, !dbg !6517

if.end:                                           ; preds = %if.then, %do.end21
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6518, metadata !DIExpression()), !dbg !6521
  %28 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6521
  %queued_cmds = getelementptr inbounds %struct.esp, %struct.esp* %28, i32 0, i32 6, !dbg !6521
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queued_cmds, i32 0, i32 0, !dbg !6521
  %29 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6521
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !6521
  store i8* %30, i8** %__mptr, align 8, !dbg !6521
  br label %do.body31, !dbg !6521

do.body31:                                        ; preds = %if.end
  br label %do.end32, !dbg !6522

do.end32:                                         ; preds = %do.body31
  %31 = load i8*, i8** %__mptr, align 8, !dbg !6521
  %add.ptr = getelementptr i8, i8* %31, i64 0, !dbg !6521
  %32 = bitcast i8* %add.ptr to %struct.esp_cmd_entry*, !dbg !6521
  store %struct.esp_cmd_entry* %32, %struct.esp_cmd_entry** %tmp33, align 8, !dbg !6522
  %33 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp33, align 8, !dbg !6521
  store %struct.esp_cmd_entry* %33, %struct.esp_cmd_entry** %ent, align 8, !dbg !6524
  br label %for.cond, !dbg !6524

for.cond:                                         ; preds = %do.end48, %do.end32
  %34 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6525
  %list = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %34, i32 0, i32 0, !dbg !6525
  %35 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6525
  %queued_cmds34 = getelementptr inbounds %struct.esp, %struct.esp* %35, i32 0, i32 6, !dbg !6525
  %cmp35 = icmp eq %struct.list_head* %list, %queued_cmds34, !dbg !6525
  %lnot = xor i1 %cmp35, true, !dbg !6525
  br i1 %lnot, label %for.body, label %for.end, !dbg !6524

for.body:                                         ; preds = %for.cond
  %36 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6527
  %host37 = getelementptr inbounds %struct.esp, %struct.esp* %36, i32 0, i32 3, !dbg !6527
  %37 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host37, align 8, !dbg !6527
  %shost_gendev38 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %37, i32 0, i32 47, !dbg !6527
  %38 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6527
  %cmd39 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %38, i32 0, i32 1, !dbg !6527
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd39, align 8, !dbg !6527
  %40 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6527
  %cmd40 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %40, i32 0, i32 1, !dbg !6527
  %41 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd40, align 8, !dbg !6527
  %cmnd41 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %41, i32 0, i32 14, !dbg !6527
  %42 = load i8*, i8** %cmnd41, align 8, !dbg !6527
  %arrayidx42 = getelementptr i8, i8* %42, i64 0, !dbg !6527
  %43 = load i8, i8* %arrayidx42, align 1, !dbg !6527
  %conv43 = zext i8 %43 to i32, !dbg !6527
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev38, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i64 0, i64 0), %struct.scsi_cmnd* %39, i32 %conv43) #13, !dbg !6527
  br label %for.inc, !dbg !6529

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr44, metadata !6530, metadata !DIExpression()), !dbg !6532
  %44 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6532
  %list45 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %44, i32 0, i32 0, !dbg !6532
  %next46 = getelementptr inbounds %struct.list_head, %struct.list_head* %list45, i32 0, i32 0, !dbg !6532
  %45 = load %struct.list_head*, %struct.list_head** %next46, align 8, !dbg !6532
  %46 = bitcast %struct.list_head* %45 to i8*, !dbg !6532
  store i8* %46, i8** %__mptr44, align 8, !dbg !6532
  br label %do.body47, !dbg !6532

do.body47:                                        ; preds = %for.inc
  br label %do.end48, !dbg !6533

do.end48:                                         ; preds = %do.body47
  %47 = load i8*, i8** %__mptr44, align 8, !dbg !6532
  %add.ptr50 = getelementptr i8, i8* %47, i64 0, !dbg !6532
  %48 = bitcast i8* %add.ptr50 to %struct.esp_cmd_entry*, !dbg !6532
  store %struct.esp_cmd_entry* %48, %struct.esp_cmd_entry** %tmp49, align 8, !dbg !6533
  %49 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp49, align 8, !dbg !6532
  store %struct.esp_cmd_entry* %49, %struct.esp_cmd_entry** %ent, align 8, !dbg !6525
  br label %for.cond, !dbg !6525, !llvm.loop !6535

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr51, metadata !6537, metadata !DIExpression()), !dbg !6540
  %50 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6540
  %active_cmds = getelementptr inbounds %struct.esp, %struct.esp* %50, i32 0, i32 7, !dbg !6540
  %next52 = getelementptr inbounds %struct.list_head, %struct.list_head* %active_cmds, i32 0, i32 0, !dbg !6540
  %51 = load %struct.list_head*, %struct.list_head** %next52, align 8, !dbg !6540
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !6540
  store i8* %52, i8** %__mptr51, align 8, !dbg !6540
  br label %do.body53, !dbg !6540

do.body53:                                        ; preds = %for.end
  br label %do.end54, !dbg !6541

do.end54:                                         ; preds = %do.body53
  %53 = load i8*, i8** %__mptr51, align 8, !dbg !6540
  %add.ptr56 = getelementptr i8, i8* %53, i64 0, !dbg !6540
  %54 = bitcast i8* %add.ptr56 to %struct.esp_cmd_entry*, !dbg !6540
  store %struct.esp_cmd_entry* %54, %struct.esp_cmd_entry** %tmp55, align 8, !dbg !6541
  %55 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp55, align 8, !dbg !6540
  store %struct.esp_cmd_entry* %55, %struct.esp_cmd_entry** %ent, align 8, !dbg !6543
  br label %for.cond57, !dbg !6543

for.cond57:                                       ; preds = %do.end76, %do.end54
  %56 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6544
  %list58 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %56, i32 0, i32 0, !dbg !6544
  %57 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6544
  %active_cmds59 = getelementptr inbounds %struct.esp, %struct.esp* %57, i32 0, i32 7, !dbg !6544
  %cmp60 = icmp eq %struct.list_head* %list58, %active_cmds59, !dbg !6544
  %lnot62 = xor i1 %cmp60, true, !dbg !6544
  br i1 %lnot62, label %for.body63, label %for.end79, !dbg !6543

for.body63:                                       ; preds = %for.cond57
  %58 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6546
  %host64 = getelementptr inbounds %struct.esp, %struct.esp* %58, i32 0, i32 3, !dbg !6546
  %59 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host64, align 8, !dbg !6546
  %shost_gendev65 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %59, i32 0, i32 47, !dbg !6546
  %60 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6546
  %cmd66 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %60, i32 0, i32 1, !dbg !6546
  %61 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd66, align 8, !dbg !6546
  %62 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6546
  %cmd67 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %62, i32 0, i32 1, !dbg !6546
  %63 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd67, align 8, !dbg !6546
  %cmnd68 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %63, i32 0, i32 14, !dbg !6546
  %64 = load i8*, i8** %cmnd68, align 8, !dbg !6546
  %arrayidx69 = getelementptr i8, i8* %64, i64 0, !dbg !6546
  %65 = load i8, i8* %arrayidx69, align 1, !dbg !6546
  %conv70 = zext i8 %65 to i32, !dbg !6546
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev65, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0), %struct.scsi_cmnd* %61, i32 %conv70) #13, !dbg !6546
  br label %for.inc71, !dbg !6548

for.inc71:                                        ; preds = %for.body63
  call void @llvm.dbg.declare(metadata i8** %__mptr72, metadata !6549, metadata !DIExpression()), !dbg !6551
  %66 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6551
  %list73 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %66, i32 0, i32 0, !dbg !6551
  %next74 = getelementptr inbounds %struct.list_head, %struct.list_head* %list73, i32 0, i32 0, !dbg !6551
  %67 = load %struct.list_head*, %struct.list_head** %next74, align 8, !dbg !6551
  %68 = bitcast %struct.list_head* %67 to i8*, !dbg !6551
  store i8* %68, i8** %__mptr72, align 8, !dbg !6551
  br label %do.body75, !dbg !6551

do.body75:                                        ; preds = %for.inc71
  br label %do.end76, !dbg !6552

do.end76:                                         ; preds = %do.body75
  %69 = load i8*, i8** %__mptr72, align 8, !dbg !6551
  %add.ptr78 = getelementptr i8, i8* %69, i64 0, !dbg !6551
  %70 = bitcast i8* %add.ptr78 to %struct.esp_cmd_entry*, !dbg !6551
  store %struct.esp_cmd_entry* %70, %struct.esp_cmd_entry** %tmp77, align 8, !dbg !6552
  %71 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp77, align 8, !dbg !6551
  store %struct.esp_cmd_entry* %71, %struct.esp_cmd_entry** %ent, align 8, !dbg !6544
  br label %for.cond57, !dbg !6544, !llvm.loop !6554

for.end79:                                        ; preds = %for.cond57
  %72 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6556
  call void @esp_dump_cmd_log(%struct.esp* %72) #12, !dbg !6557
  %73 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6558
  %host80 = getelementptr inbounds %struct.esp, %struct.esp* %73, i32 0, i32 3, !dbg !6559
  %74 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host80, align 8, !dbg !6559
  %host_lock81 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %74, i32 0, i32 4, !dbg !6560
  %75 = load %struct.spinlock*, %struct.spinlock** %host_lock81, align 8, !dbg !6560
  %76 = load i64, i64* %flags, align 8, !dbg !6561
  store %struct.spinlock* %75, %struct.spinlock** %lock.addr.i198, align 8
  store i64 %76, i64* %flags.addr.i199, align 8
  call void @llvm.dbg.declare(metadata !263, metadata !5836, metadata !DIExpression()) #6, !dbg !6562
  call void @llvm.dbg.declare(metadata !263, metadata !5840, metadata !DIExpression()) #6, !dbg !6562
  store i32 1, i32* %tmp.i200, align 4, !dbg !6562
  %77 = load i32, i32* %tmp.i200, align 4, !dbg !6562
  call void @llvm.dbg.declare(metadata !263, metadata !5841, metadata !DIExpression()) #6, !dbg !6563
  call void @llvm.dbg.declare(metadata !263, metadata !5847, metadata !DIExpression()) #6, !dbg !6563
  store i32 1, i32* %tmp8.i201, align 4, !dbg !6563
  %78 = load i32, i32* %tmp8.i201, align 4, !dbg !6563
  %79 = load i64, i64* %flags.addr.i199, align 8, !dbg !6564
  call void @arch_local_irq_restore(i64 %79) #14, !dbg !6564
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6565, !srcloc !5851
  %80 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i198, align 8, !dbg !6566
  %81 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %80, i32 0, i32 0, !dbg !6566
  %rlock.i202 = bitcast %union.anon* %81 to %struct.raw_spinlock*, !dbg !6566
  br label %do.body82, !dbg !6567

do.body82:                                        ; preds = %for.end79
  br label %do.body83, !dbg !6568

do.body83:                                        ; preds = %do.body82
  call void @llvm.dbg.declare(metadata i64* %__dummy84, metadata !6569, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.declare(metadata i64* %__dummy285, metadata !6572, metadata !DIExpression()), !dbg !6571
  %cmp86 = icmp eq i64* %__dummy84, %__dummy285, !dbg !6571
  %conv87 = zext i1 %cmp86 to i32, !dbg !6571
  store i32 1, i32* %tmp88, align 4, !dbg !6571
  %82 = load i32, i32* %tmp88, align 4, !dbg !6571
  br label %do.body89, !dbg !6573

do.body89:                                        ; preds = %do.body83
  br label %do.body90, !dbg !6574

do.body90:                                        ; preds = %do.body89
  br label %do.body91, !dbg !6575

do.body91:                                        ; preds = %do.body90
  call void @llvm.dbg.declare(metadata i64* %__dummy92, metadata !6577, metadata !DIExpression()), !dbg !6580
  call void @llvm.dbg.declare(metadata i64* %__dummy293, metadata !6581, metadata !DIExpression()), !dbg !6580
  %cmp94 = icmp eq i64* %__dummy92, %__dummy293, !dbg !6580
  %conv95 = zext i1 %cmp94 to i32, !dbg !6580
  store i32 1, i32* %tmp96, align 4, !dbg !6580
  %83 = load i32, i32* %tmp96, align 4, !dbg !6580
  %call97 = call i64 @arch_local_irq_save() #12, !dbg !6582
  store i64 %call97, i64* %flags, align 8, !dbg !6582
  br label %do.end98, !dbg !6582

do.end98:                                         ; preds = %do.body91
  br label %do.end99, !dbg !6575

do.end99:                                         ; preds = %do.end98
  br label %do.body100, !dbg !6574

do.body100:                                       ; preds = %do.end99
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6583, !srcloc !6584
  br label %do.body101, !dbg !6583

do.body101:                                       ; preds = %do.body100
  %84 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6585
  %host102 = getelementptr inbounds %struct.esp, %struct.esp* %84, i32 0, i32 3, !dbg !6585
  %85 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host102, align 8, !dbg !6585
  %host_lock103 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %85, i32 0, i32 4, !dbg !6585
  %86 = load %struct.spinlock*, %struct.spinlock** %host_lock103, align 8, !dbg !6585
  store %struct.spinlock* %86, %struct.spinlock** %lock.addr.i203, align 8
  %87 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i203, align 8, !dbg !6586
  %88 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %87, i32 0, i32 0, !dbg !6587
  %rlock.i204 = bitcast %union.anon* %88 to %struct.raw_spinlock*, !dbg !6587
  br label %do.end105, !dbg !6585

do.end105:                                        ; preds = %do.body101
  br label %do.end106, !dbg !6583

do.end106:                                        ; preds = %do.end105
  br label %do.end107, !dbg !6574

do.end107:                                        ; preds = %do.end106
  br label %do.end108, !dbg !6573

do.end108:                                        ; preds = %do.end107
  br label %do.end109, !dbg !6568

do.end109:                                        ; preds = %do.end108
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %ent, align 8, !dbg !6588
  call void @llvm.dbg.declare(metadata i8** %__mptr110, metadata !6589, metadata !DIExpression()), !dbg !6592
  %89 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6592
  %queued_cmds111 = getelementptr inbounds %struct.esp, %struct.esp* %89, i32 0, i32 6, !dbg !6592
  %next112 = getelementptr inbounds %struct.list_head, %struct.list_head* %queued_cmds111, i32 0, i32 0, !dbg !6592
  %90 = load %struct.list_head*, %struct.list_head** %next112, align 8, !dbg !6592
  %91 = bitcast %struct.list_head* %90 to i8*, !dbg !6592
  store i8* %91, i8** %__mptr110, align 8, !dbg !6592
  br label %do.body113, !dbg !6592

do.body113:                                       ; preds = %do.end109
  br label %do.end114, !dbg !6593

do.end114:                                        ; preds = %do.body113
  %92 = load i8*, i8** %__mptr110, align 8, !dbg !6592
  %add.ptr116 = getelementptr i8, i8* %92, i64 0, !dbg !6592
  %93 = bitcast i8* %add.ptr116 to %struct.esp_cmd_entry*, !dbg !6592
  store %struct.esp_cmd_entry* %93, %struct.esp_cmd_entry** %tmp115, align 8, !dbg !6593
  %94 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp115, align 8, !dbg !6592
  store %struct.esp_cmd_entry* %94, %struct.esp_cmd_entry** %tmp, align 8, !dbg !6595
  br label %for.cond117, !dbg !6595

for.cond117:                                      ; preds = %do.end134, %do.end114
  %95 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp, align 8, !dbg !6596
  %list118 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %95, i32 0, i32 0, !dbg !6596
  %96 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6596
  %queued_cmds119 = getelementptr inbounds %struct.esp, %struct.esp* %96, i32 0, i32 6, !dbg !6596
  %cmp120 = icmp eq %struct.list_head* %list118, %queued_cmds119, !dbg !6596
  %lnot122 = xor i1 %cmp120, true, !dbg !6596
  br i1 %lnot122, label %for.body123, label %for.end137, !dbg !6595

for.body123:                                      ; preds = %for.cond117
  %97 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp, align 8, !dbg !6598
  %cmd124 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %97, i32 0, i32 1, !dbg !6601
  %98 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd124, align 8, !dbg !6601
  %99 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6602
  %cmp125 = icmp eq %struct.scsi_cmnd* %98, %99, !dbg !6603
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !6604

if.then127:                                       ; preds = %for.body123
  %100 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp, align 8, !dbg !6605
  store %struct.esp_cmd_entry* %100, %struct.esp_cmd_entry** %ent, align 8, !dbg !6607
  br label %for.end137, !dbg !6608

if.end128:                                        ; preds = %for.body123
  br label %for.inc129, !dbg !6609

for.inc129:                                       ; preds = %if.end128
  call void @llvm.dbg.declare(metadata i8** %__mptr130, metadata !6610, metadata !DIExpression()), !dbg !6612
  %101 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp, align 8, !dbg !6612
  %list131 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %101, i32 0, i32 0, !dbg !6612
  %next132 = getelementptr inbounds %struct.list_head, %struct.list_head* %list131, i32 0, i32 0, !dbg !6612
  %102 = load %struct.list_head*, %struct.list_head** %next132, align 8, !dbg !6612
  %103 = bitcast %struct.list_head* %102 to i8*, !dbg !6612
  store i8* %103, i8** %__mptr130, align 8, !dbg !6612
  br label %do.body133, !dbg !6612

do.body133:                                       ; preds = %for.inc129
  br label %do.end134, !dbg !6613

do.end134:                                        ; preds = %do.body133
  %104 = load i8*, i8** %__mptr130, align 8, !dbg !6612
  %add.ptr136 = getelementptr i8, i8* %104, i64 0, !dbg !6612
  %105 = bitcast i8* %add.ptr136 to %struct.esp_cmd_entry*, !dbg !6612
  store %struct.esp_cmd_entry* %105, %struct.esp_cmd_entry** %tmp135, align 8, !dbg !6613
  %106 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp135, align 8, !dbg !6612
  store %struct.esp_cmd_entry* %106, %struct.esp_cmd_entry** %tmp, align 8, !dbg !6596
  br label %for.cond117, !dbg !6596, !llvm.loop !6615

for.end137:                                       ; preds = %if.then127, %for.cond117
  %107 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6617
  %tobool138 = icmp ne %struct.esp_cmd_entry* %107, null, !dbg !6617
  br i1 %tobool138, label %if.then139, label %if.end141, !dbg !6619

if.then139:                                       ; preds = %for.end137
  %108 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6620
  %list140 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %108, i32 0, i32 0, !dbg !6622
  call void @list_del(%struct.list_head* %list140) #12, !dbg !6623
  %109 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6624
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %109, i32 0, i32 24, !dbg !6625
  store i32 327680, i32* %result, align 8, !dbg !6626
  %110 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6627
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %110, i32 0, i32 21, !dbg !6628
  %111 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !6628
  %112 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6629
  call void %111(%struct.scsi_cmnd* %112) #12, !dbg !6627
  %113 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6630
  %114 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6631
  call void @esp_put_ent(%struct.esp* %113, %struct.esp_cmd_entry* %114) #12, !dbg !6632
  br label %out_success, !dbg !6633

if.end141:                                        ; preds = %for.end137
  call void @__init_completion(%struct.completion* %eh_done) #12, !dbg !6634
  %115 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6635
  %active_cmd142 = getelementptr inbounds %struct.esp, %struct.esp* %115, i32 0, i32 5, !dbg !6636
  %116 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd142, align 8, !dbg !6636
  store %struct.esp_cmd_entry* %116, %struct.esp_cmd_entry** %ent, align 8, !dbg !6637
  %117 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6638
  %tobool143 = icmp ne %struct.esp_cmd_entry* %117, null, !dbg !6638
  br i1 %tobool143, label %land.lhs.true, label %if.else, !dbg !6640

land.lhs.true:                                    ; preds = %if.end141
  %118 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6641
  %cmd144 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %118, i32 0, i32 1, !dbg !6642
  %119 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd144, align 8, !dbg !6642
  %120 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6643
  %cmp145 = icmp eq %struct.scsi_cmnd* %119, %120, !dbg !6644
  br i1 %cmp145, label %if.then147, label %if.else, !dbg !6645

if.then147:                                       ; preds = %land.lhs.true
  %121 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6646
  %msg_out_len = getelementptr inbounds %struct.esp, %struct.esp* %121, i32 0, i32 27, !dbg !6649
  %122 = load i32, i32* %msg_out_len, align 8, !dbg !6649
  %tobool148 = icmp ne i32 %122, 0, !dbg !6646
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !6650

if.then149:                                       ; preds = %if.then147
  br label %out_failure, !dbg !6651

if.end150:                                        ; preds = %if.then147
  %123 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6652
  %msg_out = getelementptr inbounds %struct.esp, %struct.esp* %123, i32 0, i32 26, !dbg !6653
  %arrayidx151 = getelementptr [8 x i8], [8 x i8]* %msg_out, i64 0, i64 0, !dbg !6652
  store i8 6, i8* %arrayidx151, align 8, !dbg !6654
  %124 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6655
  %msg_out_len152 = getelementptr inbounds %struct.esp, %struct.esp* %124, i32 0, i32 27, !dbg !6656
  store i32 1, i32* %msg_out_len152, align 8, !dbg !6657
  %125 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6658
  %eh_done153 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %125, i32 0, i32 14, !dbg !6659
  store %struct.completion* %eh_done, %struct.completion** %eh_done153, align 8, !dbg !6660
  %126 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6661
  call void @scsi_esp_cmd(%struct.esp* %126, i8 zeroext 26) #12, !dbg !6662
  br label %if.end154, !dbg !6663

if.else:                                          ; preds = %land.lhs.true, %if.end141
  br label %out_failure, !dbg !6664

if.end154:                                        ; preds = %if.end150
  %127 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6666
  %host155 = getelementptr inbounds %struct.esp, %struct.esp* %127, i32 0, i32 3, !dbg !6667
  %128 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host155, align 8, !dbg !6667
  %host_lock156 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %128, i32 0, i32 4, !dbg !6668
  %129 = load %struct.spinlock*, %struct.spinlock** %host_lock156, align 8, !dbg !6668
  %130 = load i64, i64* %flags, align 8, !dbg !6669
  store %struct.spinlock* %129, %struct.spinlock** %lock.addr.i205, align 8
  store i64 %130, i64* %flags.addr.i206, align 8
  call void @llvm.dbg.declare(metadata !263, metadata !5836, metadata !DIExpression()) #6, !dbg !6670
  call void @llvm.dbg.declare(metadata !263, metadata !5840, metadata !DIExpression()) #6, !dbg !6670
  store i32 1, i32* %tmp.i207, align 4, !dbg !6670
  %131 = load i32, i32* %tmp.i207, align 4, !dbg !6670
  call void @llvm.dbg.declare(metadata !263, metadata !5841, metadata !DIExpression()) #6, !dbg !6671
  call void @llvm.dbg.declare(metadata !263, metadata !5847, metadata !DIExpression()) #6, !dbg !6671
  store i32 1, i32* %tmp8.i208, align 4, !dbg !6671
  %132 = load i32, i32* %tmp8.i208, align 4, !dbg !6671
  %133 = load i64, i64* %flags.addr.i206, align 8, !dbg !6672
  call void @arch_local_irq_restore(i64 %133) #14, !dbg !6672
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6673, !srcloc !5851
  %134 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i205, align 8, !dbg !6674
  %135 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %134, i32 0, i32 0, !dbg !6674
  %rlock.i209 = bitcast %union.anon* %135 to %struct.raw_spinlock*, !dbg !6674
  %call157 = call i64 @wait_for_completion_timeout(%struct.completion* %eh_done, i64 1250) #12, !dbg !6675
  %tobool158 = icmp ne i64 %call157, 0, !dbg !6675
  br i1 %tobool158, label %if.end191, label %if.then159, !dbg !6676

if.then159:                                       ; preds = %if.end154
  br label %do.body160, !dbg !6677

do.body160:                                       ; preds = %if.then159
  br label %do.body161, !dbg !6678

do.body161:                                       ; preds = %do.body160
  call void @llvm.dbg.declare(metadata i64* %__dummy162, metadata !6679, metadata !DIExpression()), !dbg !6681
  call void @llvm.dbg.declare(metadata i64* %__dummy2163, metadata !6682, metadata !DIExpression()), !dbg !6681
  %cmp164 = icmp eq i64* %__dummy162, %__dummy2163, !dbg !6681
  %conv165 = zext i1 %cmp164 to i32, !dbg !6681
  store i32 1, i32* %tmp166, align 4, !dbg !6681
  %136 = load i32, i32* %tmp166, align 4, !dbg !6681
  br label %do.body167, !dbg !6683

do.body167:                                       ; preds = %do.body161
  br label %do.body168, !dbg !6684

do.body168:                                       ; preds = %do.body167
  br label %do.body169, !dbg !6685

do.body169:                                       ; preds = %do.body168
  call void @llvm.dbg.declare(metadata i64* %__dummy170, metadata !6687, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.declare(metadata i64* %__dummy2171, metadata !6691, metadata !DIExpression()), !dbg !6690
  %cmp172 = icmp eq i64* %__dummy170, %__dummy2171, !dbg !6690
  %conv173 = zext i1 %cmp172 to i32, !dbg !6690
  store i32 1, i32* %tmp174, align 4, !dbg !6690
  %137 = load i32, i32* %tmp174, align 4, !dbg !6690
  %call175 = call i64 @arch_local_irq_save() #12, !dbg !6692
  store i64 %call175, i64* %flags, align 8, !dbg !6692
  br label %do.end176, !dbg !6692

do.end176:                                        ; preds = %do.body169
  br label %do.end177, !dbg !6685

do.end177:                                        ; preds = %do.end176
  br label %do.body178, !dbg !6684

do.body178:                                       ; preds = %do.end177
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6693, !srcloc !6694
  br label %do.body179, !dbg !6693

do.body179:                                       ; preds = %do.body178
  %138 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6695
  %host180 = getelementptr inbounds %struct.esp, %struct.esp* %138, i32 0, i32 3, !dbg !6695
  %139 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host180, align 8, !dbg !6695
  %host_lock181 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %139, i32 0, i32 4, !dbg !6695
  %140 = load %struct.spinlock*, %struct.spinlock** %host_lock181, align 8, !dbg !6695
  store %struct.spinlock* %140, %struct.spinlock** %lock.addr.i210, align 8
  %141 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i210, align 8, !dbg !6696
  %142 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %141, i32 0, i32 0, !dbg !6697
  %rlock.i211 = bitcast %union.anon* %142 to %struct.raw_spinlock*, !dbg !6697
  br label %do.end183, !dbg !6695

do.end183:                                        ; preds = %do.body179
  br label %do.end184, !dbg !6693

do.end184:                                        ; preds = %do.end183
  br label %do.end185, !dbg !6684

do.end185:                                        ; preds = %do.end184
  br label %do.end186, !dbg !6683

do.end186:                                        ; preds = %do.end185
  br label %do.end187, !dbg !6678

do.end187:                                        ; preds = %do.end186
  %143 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !6698
  %eh_done188 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %143, i32 0, i32 14, !dbg !6699
  store %struct.completion* null, %struct.completion** %eh_done188, align 8, !dbg !6700
  %144 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6701
  %host189 = getelementptr inbounds %struct.esp, %struct.esp* %144, i32 0, i32 3, !dbg !6702
  %145 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host189, align 8, !dbg !6702
  %host_lock190 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %145, i32 0, i32 4, !dbg !6703
  %146 = load %struct.spinlock*, %struct.spinlock** %host_lock190, align 8, !dbg !6703
  %147 = load i64, i64* %flags, align 8, !dbg !6704
  store %struct.spinlock* %146, %struct.spinlock** %lock.addr.i212, align 8
  store i64 %147, i64* %flags.addr.i213, align 8
  call void @llvm.dbg.declare(metadata !263, metadata !5836, metadata !DIExpression()) #6, !dbg !6705
  call void @llvm.dbg.declare(metadata !263, metadata !5840, metadata !DIExpression()) #6, !dbg !6705
  store i32 1, i32* %tmp.i214, align 4, !dbg !6705
  %148 = load i32, i32* %tmp.i214, align 4, !dbg !6705
  call void @llvm.dbg.declare(metadata !263, metadata !5841, metadata !DIExpression()) #6, !dbg !6706
  call void @llvm.dbg.declare(metadata !263, metadata !5847, metadata !DIExpression()) #6, !dbg !6706
  store i32 1, i32* %tmp8.i215, align 4, !dbg !6706
  %149 = load i32, i32* %tmp8.i215, align 4, !dbg !6706
  %150 = load i64, i64* %flags.addr.i213, align 8, !dbg !6707
  call void @arch_local_irq_restore(i64 %150) #14, !dbg !6707
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6708, !srcloc !5851
  %151 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i212, align 8, !dbg !6709
  %152 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %151, i32 0, i32 0, !dbg !6709
  %rlock.i216 = bitcast %union.anon* %152 to %struct.raw_spinlock*, !dbg !6709
  store i32 8195, i32* %retval, align 4, !dbg !6710
  br label %return, !dbg !6710

if.end191:                                        ; preds = %if.end154
  store i32 8194, i32* %retval, align 4, !dbg !6711
  br label %return, !dbg !6711

out_success:                                      ; preds = %if.then139
  call void @llvm.dbg.label(metadata !6712), !dbg !6713
  %153 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6714
  %host192 = getelementptr inbounds %struct.esp, %struct.esp* %153, i32 0, i32 3, !dbg !6715
  %154 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host192, align 8, !dbg !6715
  %host_lock193 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %154, i32 0, i32 4, !dbg !6716
  %155 = load %struct.spinlock*, %struct.spinlock** %host_lock193, align 8, !dbg !6716
  %156 = load i64, i64* %flags, align 8, !dbg !6717
  store %struct.spinlock* %155, %struct.spinlock** %lock.addr.i217, align 8
  store i64 %156, i64* %flags.addr.i218, align 8
  call void @llvm.dbg.declare(metadata !263, metadata !5836, metadata !DIExpression()) #6, !dbg !6718
  call void @llvm.dbg.declare(metadata !263, metadata !5840, metadata !DIExpression()) #6, !dbg !6718
  store i32 1, i32* %tmp.i219, align 4, !dbg !6718
  %157 = load i32, i32* %tmp.i219, align 4, !dbg !6718
  call void @llvm.dbg.declare(metadata !263, metadata !5841, metadata !DIExpression()) #6, !dbg !6719
  call void @llvm.dbg.declare(metadata !263, metadata !5847, metadata !DIExpression()) #6, !dbg !6719
  store i32 1, i32* %tmp8.i220, align 4, !dbg !6719
  %158 = load i32, i32* %tmp8.i220, align 4, !dbg !6719
  %159 = load i64, i64* %flags.addr.i218, align 8, !dbg !6720
  call void @arch_local_irq_restore(i64 %159) #14, !dbg !6720
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6721, !srcloc !5851
  %160 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i217, align 8, !dbg !6722
  %161 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %160, i32 0, i32 0, !dbg !6722
  %rlock.i221 = bitcast %union.anon* %161 to %struct.raw_spinlock*, !dbg !6722
  store i32 8194, i32* %retval, align 4, !dbg !6723
  br label %return, !dbg !6723

out_failure:                                      ; preds = %if.else, %if.then149
  call void @llvm.dbg.label(metadata !6724), !dbg !6725
  %162 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6726
  %host194 = getelementptr inbounds %struct.esp, %struct.esp* %162, i32 0, i32 3, !dbg !6727
  %163 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host194, align 8, !dbg !6727
  %host_lock195 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %163, i32 0, i32 4, !dbg !6728
  %164 = load %struct.spinlock*, %struct.spinlock** %host_lock195, align 8, !dbg !6728
  %165 = load i64, i64* %flags, align 8, !dbg !6729
  store %struct.spinlock* %164, %struct.spinlock** %lock.addr.i196, align 8
  store i64 %165, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !263, metadata !5836, metadata !DIExpression()) #6, !dbg !6730
  call void @llvm.dbg.declare(metadata !263, metadata !5840, metadata !DIExpression()) #6, !dbg !6730
  store i32 1, i32* %tmp.i, align 4, !dbg !6730
  %166 = load i32, i32* %tmp.i, align 4, !dbg !6730
  call void @llvm.dbg.declare(metadata !263, metadata !5841, metadata !DIExpression()) #6, !dbg !6731
  call void @llvm.dbg.declare(metadata !263, metadata !5847, metadata !DIExpression()) #6, !dbg !6731
  store i32 1, i32* %tmp8.i, align 4, !dbg !6731
  %167 = load i32, i32* %tmp8.i, align 4, !dbg !6731
  %168 = load i64, i64* %flags.addr.i, align 8, !dbg !6732
  call void @arch_local_irq_restore(i64 %168) #14, !dbg !6732
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6733, !srcloc !5851
  %169 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i196, align 8, !dbg !6734
  %170 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %169, i32 0, i32 0, !dbg !6734
  %rlock.i197 = bitcast %union.anon* %170 to %struct.raw_spinlock*, !dbg !6734
  store i32 8195, i32* %retval, align 4, !dbg !6735
  br label %return, !dbg !6735

return:                                           ; preds = %out_failure, %out_success, %if.end191, %do.end187
  %171 = load i32, i32* %retval, align 4, !dbg !6736
  ret i32 %171, !dbg !6736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_eh_bus_reset_handler(%struct.scsi_cmnd* %cmd) #0 !dbg !6737 {
entry:
  %lock.addr.i64 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i64, metadata !5732, metadata !DIExpression()), !dbg !6738
  %lock.addr.i59 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i59, metadata !5723, metadata !DIExpression()), !dbg !6747
  %flags.addr.i60 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i60, metadata !5730, metadata !DIExpression()), !dbg !6749
  %tmp.i61 = alloca i32, align 4
  %tmp8.i62 = alloca i32, align 4
  %lock.addr.i57 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i57, metadata !5723, metadata !DIExpression()), !dbg !6750
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5730, metadata !DIExpression()), !dbg !6752
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5732, metadata !DIExpression()), !dbg !6753
  %retval = alloca i32, align 4
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %esp = alloca %struct.esp*, align 8
  %eh_reset = alloca %struct.completion, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6760, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !6762, metadata !DIExpression()), !dbg !6763
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6764
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !6765
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6765
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !6766
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6766
  %call = call i8* @shost_priv(%struct.Scsi_Host* %2) #12, !dbg !6767
  %3 = bitcast i8* %call to %struct.esp*, !dbg !6767
  store %struct.esp* %3, %struct.esp** %esp, align 8, !dbg !6763
  call void @llvm.dbg.declare(metadata %struct.completion* %eh_reset, metadata !6768, metadata !DIExpression()), !dbg !6769
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6770, metadata !DIExpression()), !dbg !6771
  call void @__init_completion(%struct.completion* %eh_reset) #12, !dbg !6772
  br label %do.body, !dbg !6773

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6774

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6775, metadata !DIExpression()), !dbg !6777
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6778, metadata !DIExpression()), !dbg !6777
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6777
  %conv = zext i1 %cmp to i32, !dbg !6777
  store i32 1, i32* %tmp, align 4, !dbg !6777
  %4 = load i32, i32* %tmp, align 4, !dbg !6777
  br label %do.body2, !dbg !6779

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6780

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6781

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6783, metadata !DIExpression()), !dbg !6786
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6787, metadata !DIExpression()), !dbg !6786
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6786
  %conv8 = zext i1 %cmp7 to i32, !dbg !6786
  store i32 1, i32* %tmp9, align 4, !dbg !6786
  %5 = load i32, i32* %tmp9, align 4, !dbg !6786
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !6788
  store i64 %call10, i64* %flags, align 8, !dbg !6788
  br label %do.end, !dbg !6788

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !6781

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !6780

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6789, !srcloc !6790
  br label %do.body13, !dbg !6789

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6791
  %host14 = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 3, !dbg !6791
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host14, align 8, !dbg !6791
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 4, !dbg !6791
  %8 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !6791
  store %struct.spinlock* %8, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6792
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !6793
  %rlock.i = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !6793
  br label %do.end16, !dbg !6791

do.end16:                                         ; preds = %do.body13
  br label %do.end17, !dbg !6789

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6780

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6779

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6774

do.end20:                                         ; preds = %do.end19
  %11 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6794
  %eh_reset21 = getelementptr inbounds %struct.esp, %struct.esp* %11, i32 0, i32 51, !dbg !6795
  store %struct.completion* %eh_reset, %struct.completion** %eh_reset21, align 8, !dbg !6796
  %12 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6797
  %flags22 = getelementptr inbounds %struct.esp, %struct.esp* %12, i32 0, i32 37, !dbg !6798
  %13 = load i32, i32* %flags22, align 8, !dbg !6799
  %or = or i32 %13, 2, !dbg !6799
  store i32 %or, i32* %flags22, align 8, !dbg !6799
  %14 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6800
  call void @scsi_esp_cmd(%struct.esp* %14, i8 zeroext 3) #12, !dbg !6801
  %15 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6802
  %host23 = getelementptr inbounds %struct.esp, %struct.esp* %15, i32 0, i32 3, !dbg !6803
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host23, align 8, !dbg !6803
  %host_lock24 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 4, !dbg !6804
  %17 = load %struct.spinlock*, %struct.spinlock** %host_lock24, align 8, !dbg !6804
  %18 = load i64, i64* %flags, align 8, !dbg !6805
  store %struct.spinlock* %17, %struct.spinlock** %lock.addr.i59, align 8
  store i64 %18, i64* %flags.addr.i60, align 8
  call void @llvm.dbg.declare(metadata !263, metadata !5836, metadata !DIExpression()) #6, !dbg !6806
  call void @llvm.dbg.declare(metadata !263, metadata !5840, metadata !DIExpression()) #6, !dbg !6806
  store i32 1, i32* %tmp.i61, align 4, !dbg !6806
  %19 = load i32, i32* %tmp.i61, align 4, !dbg !6806
  call void @llvm.dbg.declare(metadata !263, metadata !5841, metadata !DIExpression()) #6, !dbg !6807
  call void @llvm.dbg.declare(metadata !263, metadata !5847, metadata !DIExpression()) #6, !dbg !6807
  store i32 1, i32* %tmp8.i62, align 4, !dbg !6807
  %20 = load i32, i32* %tmp8.i62, align 4, !dbg !6807
  %21 = load i64, i64* %flags.addr.i60, align 8, !dbg !6808
  call void @arch_local_irq_restore(i64 %21) #14, !dbg !6808
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6809, !srcloc !5851
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i59, align 8, !dbg !6810
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !6810
  %rlock.i63 = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !6810
  %24 = load i32, i32* @esp_bus_reset_settle, align 4, !dbg !6811
  call void @ssleep(i32 %24) #12, !dbg !6812
  %call25 = call i64 @wait_for_completion_timeout(%struct.completion* %eh_reset, i64 1250) #12, !dbg !6813
  %tobool = icmp ne i64 %call25, 0, !dbg !6813
  br i1 %tobool, label %if.end, label %if.then, !dbg !6814

if.then:                                          ; preds = %do.end20
  br label %do.body26, !dbg !6815

do.body26:                                        ; preds = %if.then
  br label %do.body27, !dbg !6816

do.body27:                                        ; preds = %do.body26
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6817, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !6820, metadata !DIExpression()), !dbg !6819
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !6819
  %conv31 = zext i1 %cmp30 to i32, !dbg !6819
  store i32 1, i32* %tmp32, align 4, !dbg !6819
  %25 = load i32, i32* %tmp32, align 4, !dbg !6819
  br label %do.body33, !dbg !6821

do.body33:                                        ; preds = %do.body27
  br label %do.body34, !dbg !6822

do.body34:                                        ; preds = %do.body33
  br label %do.body35, !dbg !6823

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !6825, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !6829, metadata !DIExpression()), !dbg !6828
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !6828
  %conv39 = zext i1 %cmp38 to i32, !dbg !6828
  store i32 1, i32* %tmp40, align 4, !dbg !6828
  %26 = load i32, i32* %tmp40, align 4, !dbg !6828
  %call41 = call i64 @arch_local_irq_save() #12, !dbg !6830
  store i64 %call41, i64* %flags, align 8, !dbg !6830
  br label %do.end42, !dbg !6830

do.end42:                                         ; preds = %do.body35
  br label %do.end43, !dbg !6823

do.end43:                                         ; preds = %do.end42
  br label %do.body44, !dbg !6822

do.body44:                                        ; preds = %do.end43
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6831, !srcloc !6832
  br label %do.body45, !dbg !6831

do.body45:                                        ; preds = %do.body44
  %27 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6833
  %host46 = getelementptr inbounds %struct.esp, %struct.esp* %27, i32 0, i32 3, !dbg !6833
  %28 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host46, align 8, !dbg !6833
  %host_lock47 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %28, i32 0, i32 4, !dbg !6833
  %29 = load %struct.spinlock*, %struct.spinlock** %host_lock47, align 8, !dbg !6833
  store %struct.spinlock* %29, %struct.spinlock** %lock.addr.i64, align 8
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i64, align 8, !dbg !6834
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !6835
  %rlock.i65 = bitcast %union.anon* %31 to %struct.raw_spinlock*, !dbg !6835
  br label %do.end49, !dbg !6833

do.end49:                                         ; preds = %do.body45
  br label %do.end50, !dbg !6831

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !6822

do.end51:                                         ; preds = %do.end50
  br label %do.end52, !dbg !6821

do.end52:                                         ; preds = %do.end51
  br label %do.end53, !dbg !6816

do.end53:                                         ; preds = %do.end52
  %32 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6836
  %eh_reset54 = getelementptr inbounds %struct.esp, %struct.esp* %32, i32 0, i32 51, !dbg !6837
  store %struct.completion* null, %struct.completion** %eh_reset54, align 8, !dbg !6838
  %33 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6839
  %host55 = getelementptr inbounds %struct.esp, %struct.esp* %33, i32 0, i32 3, !dbg !6840
  %34 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host55, align 8, !dbg !6840
  %host_lock56 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %34, i32 0, i32 4, !dbg !6841
  %35 = load %struct.spinlock*, %struct.spinlock** %host_lock56, align 8, !dbg !6841
  %36 = load i64, i64* %flags, align 8, !dbg !6842
  store %struct.spinlock* %35, %struct.spinlock** %lock.addr.i57, align 8
  store i64 %36, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !263, metadata !5836, metadata !DIExpression()) #6, !dbg !6843
  call void @llvm.dbg.declare(metadata !263, metadata !5840, metadata !DIExpression()) #6, !dbg !6843
  store i32 1, i32* %tmp.i, align 4, !dbg !6843
  %37 = load i32, i32* %tmp.i, align 4, !dbg !6843
  call void @llvm.dbg.declare(metadata !263, metadata !5841, metadata !DIExpression()) #6, !dbg !6844
  call void @llvm.dbg.declare(metadata !263, metadata !5847, metadata !DIExpression()) #6, !dbg !6844
  store i32 1, i32* %tmp8.i, align 4, !dbg !6844
  %38 = load i32, i32* %tmp8.i, align 4, !dbg !6844
  %39 = load i64, i64* %flags.addr.i, align 8, !dbg !6845
  call void @arch_local_irq_restore(i64 %39) #14, !dbg !6845
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6846, !srcloc !5851
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i57, align 8, !dbg !6847
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !6847
  %rlock.i58 = bitcast %union.anon* %41 to %struct.raw_spinlock*, !dbg !6847
  store i32 8195, i32* %retval, align 4, !dbg !6848
  br label %return, !dbg !6848

if.end:                                           ; preds = %do.end20
  store i32 8194, i32* %retval, align 4, !dbg !6849
  br label %return, !dbg !6849

return:                                           ; preds = %if.end, %do.end53
  %42 = load i32, i32* %retval, align 4, !dbg !6850
  ret i32 %42, !dbg !6850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_eh_host_reset_handler(%struct.scsi_cmnd* %cmd) #0 !dbg !6851 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !5723, metadata !DIExpression()), !dbg !6852
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5730, metadata !DIExpression()), !dbg !6854
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5732, metadata !DIExpression()), !dbg !6855
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %esp = alloca %struct.esp*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6862, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !6864, metadata !DIExpression()), !dbg !6865
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6866
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !6867
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6867
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !6868
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6868
  %call = call i8* @shost_priv(%struct.Scsi_Host* %2) #12, !dbg !6869
  %3 = bitcast i8* %call to %struct.esp*, !dbg !6869
  store %struct.esp* %3, %struct.esp** %esp, align 8, !dbg !6865
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6870, metadata !DIExpression()), !dbg !6871
  br label %do.body, !dbg !6872

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6873

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6874, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6877, metadata !DIExpression()), !dbg !6876
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6876
  %conv = zext i1 %cmp to i32, !dbg !6876
  store i32 1, i32* %tmp, align 4, !dbg !6876
  %4 = load i32, i32* %tmp, align 4, !dbg !6876
  br label %do.body2, !dbg !6878

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6879

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6880

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6882, metadata !DIExpression()), !dbg !6885
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6886, metadata !DIExpression()), !dbg !6885
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6885
  %conv8 = zext i1 %cmp7 to i32, !dbg !6885
  store i32 1, i32* %tmp9, align 4, !dbg !6885
  %5 = load i32, i32* %tmp9, align 4, !dbg !6885
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !6887
  store i64 %call10, i64* %flags, align 8, !dbg !6887
  br label %do.end, !dbg !6887

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !6880

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !6879

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6888, !srcloc !6889
  br label %do.body13, !dbg !6888

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6890
  %host14 = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 3, !dbg !6890
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host14, align 8, !dbg !6890
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 4, !dbg !6890
  %8 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !6890
  store %struct.spinlock* %8, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6891
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !6892
  %rlock.i = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !6892
  br label %do.end16, !dbg !6890

do.end16:                                         ; preds = %do.body13
  br label %do.end17, !dbg !6888

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6879

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6878

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6873

do.end20:                                         ; preds = %do.end19
  %11 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6893
  call void @esp_bootup_reset(%struct.esp* %11) #12, !dbg !6894
  %12 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6895
  call void @esp_reset_cleanup(%struct.esp* %12) #12, !dbg !6896
  %13 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6897
  %host21 = getelementptr inbounds %struct.esp, %struct.esp* %13, i32 0, i32 3, !dbg !6898
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host21, align 8, !dbg !6898
  %host_lock22 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %14, i32 0, i32 4, !dbg !6899
  %15 = load %struct.spinlock*, %struct.spinlock** %host_lock22, align 8, !dbg !6899
  %16 = load i64, i64* %flags, align 8, !dbg !6900
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !263, metadata !5836, metadata !DIExpression()) #6, !dbg !6901
  call void @llvm.dbg.declare(metadata !263, metadata !5840, metadata !DIExpression()) #6, !dbg !6901
  store i32 1, i32* %tmp.i, align 4, !dbg !6901
  %17 = load i32, i32* %tmp.i, align 4, !dbg !6901
  call void @llvm.dbg.declare(metadata !263, metadata !5841, metadata !DIExpression()) #6, !dbg !6902
  call void @llvm.dbg.declare(metadata !263, metadata !5847, metadata !DIExpression()) #6, !dbg !6902
  store i32 1, i32* %tmp8.i, align 4, !dbg !6902
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !6902
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !6903
  call void @arch_local_irq_restore(i64 %19) #14, !dbg !6903
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6904, !srcloc !5851
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !6905
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !6905
  %rlock.i24 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !6905
  %22 = load i32, i32* @esp_bus_reset_settle, align 4, !dbg !6906
  call void @ssleep(i32 %22) #12, !dbg !6907
  ret i32 8194, !dbg !6908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_slave_alloc(%struct.scsi_device* %dev) #0 !dbg !6909 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.scsi_device*, align 8
  %esp = alloca %struct.esp*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  %lp = alloca %struct.esp_lun_data*, align 8
  store %struct.scsi_device* %dev, %struct.scsi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev.addr, metadata !6910, metadata !DIExpression()), !dbg !6911
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !6912, metadata !DIExpression()), !dbg !6913
  %0 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !6914
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !6915
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6915
  %call = call i8* @shost_priv(%struct.Scsi_Host* %1) #12, !dbg !6916
  %2 = bitcast i8* %call to %struct.esp*, !dbg !6916
  store %struct.esp* %2, %struct.esp** %esp, align 8, !dbg !6913
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !6917, metadata !DIExpression()), !dbg !6919
  %3 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6920
  %target = getelementptr inbounds %struct.esp, %struct.esp* %3, i32 0, i32 21, !dbg !6921
  %4 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !6922
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 16, !dbg !6923
  %5 = load i32, i32* %id, align 8, !dbg !6923
  %idxprom = zext i32 %5 to i64, !dbg !6920
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !6920
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !6919
  call void @llvm.dbg.declare(metadata %struct.esp_lun_data** %lp, metadata !6924, metadata !DIExpression()), !dbg !6935
  %call1 = call i8* @kzalloc(i64 2064, i32 3264) #12, !dbg !6936
  %6 = bitcast i8* %call1 to %struct.esp_lun_data*, !dbg !6936
  store %struct.esp_lun_data* %6, %struct.esp_lun_data** %lp, align 8, !dbg !6937
  %7 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp, align 8, !dbg !6938
  %tobool = icmp ne %struct.esp_lun_data* %7, null, !dbg !6938
  br i1 %tobool, label %if.end, label %if.then, !dbg !6940

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6941
  br label %return, !dbg !6941

if.end:                                           ; preds = %entry
  %8 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp, align 8, !dbg !6942
  %9 = bitcast %struct.esp_lun_data* %8 to i8*, !dbg !6942
  %10 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !6943
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 21, !dbg !6944
  store i8* %9, i8** %hostdata, align 8, !dbg !6945
  %11 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6946
  %min_period = getelementptr inbounds %struct.esp, %struct.esp* %11, i32 0, i32 47, !dbg !6947
  %12 = load i32, i32* %min_period, align 4, !dbg !6947
  %13 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !6948
  %starget = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %13, i32 0, i32 8, !dbg !6948
  %14 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !6948
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %14, i32 0, i32 15, !dbg !6948
  %15 = bitcast [0 x i64]* %starget_data to %struct.spi_transport_attrs*, !dbg !6948
  %min_period2 = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %15, i32 0, i32 1, !dbg !6948
  store i32 %12, i32* %min_period2, align 4, !dbg !6949
  %16 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !6950
  %starget3 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %16, i32 0, i32 8, !dbg !6950
  %17 = load %struct.scsi_target*, %struct.scsi_target** %starget3, align 8, !dbg !6950
  %starget_data4 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %17, i32 0, i32 15, !dbg !6950
  %18 = bitcast [0 x i64]* %starget_data4 to %struct.spi_transport_attrs*, !dbg !6950
  %max_offset = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %18, i32 0, i32 3, !dbg !6950
  store i32 15, i32* %max_offset, align 4, !dbg !6951
  %19 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6952
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %19, i32 0, i32 37, !dbg !6954
  %20 = load i32, i32* %flags, align 8, !dbg !6954
  %and = and i32 %20, 8, !dbg !6955
  %tobool5 = icmp ne i32 %and, 0, !dbg !6955
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !6956

if.then6:                                         ; preds = %if.end
  %21 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !6957
  %starget7 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %21, i32 0, i32 8, !dbg !6957
  %22 = load %struct.scsi_target*, %struct.scsi_target** %starget7, align 8, !dbg !6957
  %starget_data8 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %22, i32 0, i32 15, !dbg !6957
  %23 = bitcast [0 x i64]* %starget_data8 to %struct.spi_transport_attrs*, !dbg !6957
  %max_width = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %23, i32 0, i32 4, !dbg !6957
  %bf.load = load i16, i16* %max_width, align 8, !dbg !6958
  %bf.clear = and i16 %bf.load, -3, !dbg !6958
  %bf.set = or i16 %bf.clear, 2, !dbg !6958
  store i16 %bf.set, i16* %max_width, align 8, !dbg !6958
  br label %if.end14, !dbg !6957

if.else:                                          ; preds = %if.end
  %24 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !6959
  %starget9 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %24, i32 0, i32 8, !dbg !6959
  %25 = load %struct.scsi_target*, %struct.scsi_target** %starget9, align 8, !dbg !6959
  %starget_data10 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %25, i32 0, i32 15, !dbg !6959
  %26 = bitcast [0 x i64]* %starget_data10 to %struct.spi_transport_attrs*, !dbg !6959
  %max_width11 = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %26, i32 0, i32 4, !dbg !6959
  %bf.load12 = load i16, i16* %max_width11, align 8, !dbg !6960
  %bf.clear13 = and i16 %bf.load12, -3, !dbg !6960
  store i16 %bf.clear13, i16* %max_width11, align 8, !dbg !6960
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then6
  store i32 0, i32* %retval, align 4, !dbg !6961
  br label %return, !dbg !6961

return:                                           ; preds = %if.end14, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !6962
  ret i32 %27, !dbg !6962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_slave_configure(%struct.scsi_device* %dev) #0 !dbg !6963 {
entry:
  %dev.addr = alloca %struct.scsi_device*, align 8
  %esp = alloca %struct.esp*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  store %struct.scsi_device* %dev, %struct.scsi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev.addr, metadata !6964, metadata !DIExpression()), !dbg !6965
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !6966, metadata !DIExpression()), !dbg !6967
  %0 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !6968
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !6969
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6969
  %call = call i8* @shost_priv(%struct.Scsi_Host* %1) #12, !dbg !6970
  %2 = bitcast i8* %call to %struct.esp*, !dbg !6970
  store %struct.esp* %2, %struct.esp** %esp, align 8, !dbg !6967
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !6971, metadata !DIExpression()), !dbg !6972
  %3 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6973
  %target = getelementptr inbounds %struct.esp, %struct.esp* %3, i32 0, i32 21, !dbg !6974
  %4 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !6975
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 16, !dbg !6976
  %5 = load i32, i32* %id, align 8, !dbg !6976
  %idxprom = zext i32 %5 to i64, !dbg !6973
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !6973
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !6972
  %6 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !6977
  %tagged_supported = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 39, !dbg !6979
  %7 = bitcast [6 x i8]* %tagged_supported to i48*, !dbg !6979
  %bf.load = load i48, i48* %7, align 4, !dbg !6979
  %bf.lshr = lshr i48 %bf.load, 11, !dbg !6979
  %bf.clear = and i48 %bf.lshr, 1, !dbg !6979
  %bf.cast = trunc i48 %bf.clear to i32, !dbg !6979
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6977
  br i1 %tobool, label %if.then, label %if.end, !dbg !6980

if.then:                                          ; preds = %entry
  %8 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !6981
  %9 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !6982
  %num_tags = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 19, !dbg !6983
  %10 = load i8, i8* %num_tags, align 1, !dbg !6983
  %conv = zext i8 %10 to i32, !dbg !6982
  %call1 = call i32 @scsi_change_queue_depth(%struct.scsi_device* %8, i32 %conv) #12, !dbg !6984
  br label %if.end, !dbg !6984

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !6985
  %flags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %11, i32 0, i32 3, !dbg !6986
  %12 = load i8, i8* %flags, align 1, !dbg !6987
  %conv2 = zext i8 %12 to i32, !dbg !6987
  %or = or i32 %conv2, 2, !dbg !6987
  %conv3 = trunc i32 %or to i8, !dbg !6987
  store i8 %conv3, i8* %flags, align 1, !dbg !6987
  %13 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !6988
  %sdev_target = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %13, i32 0, i32 36, !dbg !6988
  %14 = load %struct.scsi_target*, %struct.scsi_target** %sdev_target, align 8, !dbg !6988
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %14, i32 0, i32 15, !dbg !6988
  %15 = bitcast [0 x i64]* %starget_data to %struct.spi_transport_attrs*, !dbg !6988
  %initial_dv = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %15, i32 0, i32 4, !dbg !6988
  %bf.load4 = load i16, i16* %initial_dv, align 8, !dbg !6988
  %bf.lshr5 = lshr i16 %bf.load4, 12, !dbg !6988
  %bf.clear6 = and i16 %bf.lshr5, 1, !dbg !6988
  %bf.cast7 = zext i16 %bf.clear6 to i32, !dbg !6988
  %tobool8 = icmp ne i32 %bf.cast7, 0, !dbg !6988
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !6990

if.then9:                                         ; preds = %if.end
  %16 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !6991
  call void @spi_dv_device(%struct.scsi_device* %16) #12, !dbg !6992
  br label %if.end10, !dbg !6992

if.end10:                                         ; preds = %if.then9, %if.end
  ret i32 0, !dbg !6993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_slave_destroy(%struct.scsi_device* %dev) #0 !dbg !6994 {
entry:
  %dev.addr = alloca %struct.scsi_device*, align 8
  %lp = alloca %struct.esp_lun_data*, align 8
  store %struct.scsi_device* %dev, %struct.scsi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev.addr, metadata !6995, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.declare(metadata %struct.esp_lun_data** %lp, metadata !6997, metadata !DIExpression()), !dbg !6998
  %0 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !6999
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 21, !dbg !7000
  %1 = load i8*, i8** %hostdata, align 8, !dbg !7000
  %2 = bitcast i8* %1 to %struct.esp_lun_data*, !dbg !6999
  store %struct.esp_lun_data* %2, %struct.esp_lun_data** %lp, align 8, !dbg !6998
  %3 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp, align 8, !dbg !7001
  %4 = bitcast %struct.esp_lun_data* %3 to i8*, !dbg !7001
  call void @kfree(i8* %4) #12, !dbg !7002
  %5 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !7003
  %hostdata1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 21, !dbg !7004
  store i8* null, i8** %hostdata1, align 8, !dbg !7005
  ret void, !dbg !7006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_target_alloc(%struct.scsi_target* %starget) #0 !dbg !7007 {
entry:
  %starget.addr = alloca %struct.scsi_target*, align 8
  %esp = alloca %struct.esp*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  store %struct.scsi_target* %starget, %struct.scsi_target** %starget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !7010, metadata !DIExpression()), !dbg !7011
  %0 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !7012
  %dev = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %0, i32 0, i32 3, !dbg !7013
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %dev) #12, !dbg !7014
  %call1 = call i8* @shost_priv(%struct.Scsi_Host* %call) #12, !dbg !7015
  %1 = bitcast i8* %call1 to %struct.esp*, !dbg !7015
  store %struct.esp* %1, %struct.esp** %esp, align 8, !dbg !7011
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !7016, metadata !DIExpression()), !dbg !7017
  %2 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !7018
  %target = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 21, !dbg !7019
  %3 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !7020
  %id = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %3, i32 0, i32 6, !dbg !7021
  %4 = load i32, i32* %id, align 8, !dbg !7021
  %idxprom = zext i32 %4 to i64, !dbg !7018
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !7018
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !7017
  %5 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !7022
  %6 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7023
  %starget2 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %6, i32 0, i32 8, !dbg !7024
  store %struct.scsi_target* %5, %struct.scsi_target** %starget2, align 8, !dbg !7025
  ret i32 0, !dbg !7026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_target_destroy(%struct.scsi_target* %starget) #0 !dbg !7027 {
entry:
  %starget.addr = alloca %struct.scsi_target*, align 8
  %esp = alloca %struct.esp*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  store %struct.scsi_target* %starget, %struct.scsi_target** %starget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget.addr, metadata !7028, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !7030, metadata !DIExpression()), !dbg !7031
  %0 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !7032
  %dev = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %0, i32 0, i32 3, !dbg !7033
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %dev) #12, !dbg !7034
  %call1 = call i8* @shost_priv(%struct.Scsi_Host* %call) #12, !dbg !7035
  %1 = bitcast i8* %call1 to %struct.esp*, !dbg !7035
  store %struct.esp* %1, %struct.esp** %esp, align 8, !dbg !7031
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !7036, metadata !DIExpression()), !dbg !7037
  %2 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !7038
  %target = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 21, !dbg !7039
  %3 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !7040
  %id = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %3, i32 0, i32 6, !dbg !7041
  %4 = load i32, i32* %id, align 8, !dbg !7041
  %idxprom = zext i32 %4 to i64, !dbg !7038
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !7038
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !7037
  %5 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7042
  %starget2 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %5, i32 0, i32 8, !dbg !7043
  store %struct.scsi_target* null, %struct.scsi_target** %starget2, align 8, !dbg !7044
  ret void, !dbg !7045
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @esp_exit() #4 section ".exit.text" !dbg !7046 {
entry:
  %0 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** @esp_transport_template, align 8, !dbg !7047
  call void @spi_release_transport(%struct.scsi_transport_template* %0) #12, !dbg !7048
  ret void, !dbg !7049
}

; Function Attrs: noredzone
declare dso_local void @spi_release_transport(%struct.scsi_transport_template*) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_init() #4 section ".init.text" !dbg !7050 {
entry:
  %retval = alloca i32, align 4
  br label %do.body, !dbg !7053

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7054

do.end:                                           ; preds = %do.body
  %call = call %struct.scsi_transport_template* @spi_attach_transport(%struct.spi_function_template* bitcast ({ void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.scsi_target*)*, void (%struct.scsi_target*, i32)*, void (%struct.Scsi_Host*)*, void (%struct.Scsi_Host*, i32)*, i32 (%struct.scsi_target*)*, i8, i8 }* @esp_transport_ops to %struct.spi_function_template*)) #12, !dbg !7056
  store %struct.scsi_transport_template* %call, %struct.scsi_transport_template** @esp_transport_template, align 8, !dbg !7057
  %0 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** @esp_transport_template, align 8, !dbg !7058
  %tobool = icmp ne %struct.scsi_transport_template* %0, null, !dbg !7058
  br i1 %tobool, label %if.end, label %if.then, !dbg !7060

if.then:                                          ; preds = %do.end
  store i32 -19, i32* %retval, align 4, !dbg !7061
  br label %return, !dbg !7061

if.end:                                           ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !7062
  br label %return, !dbg !7062

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !7063
  ret i32 %1, !dbg !7063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7064 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7065, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7068, metadata !DIExpression()), !dbg !7067
  %0 = load i64, i64* %__edi, align 8, !dbg !7067
  store i64 %0, i64* %__edi, align 8, !dbg !7067
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7069, metadata !DIExpression()), !dbg !7067
  %1 = load i64, i64* %__esi, align 8, !dbg !7067
  store i64 %1, i64* %__esi, align 8, !dbg !7067
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7070, metadata !DIExpression()), !dbg !7067
  %2 = load i64, i64* %__edx, align 8, !dbg !7067
  store i64 %2, i64* %__edx, align 8, !dbg !7067
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7071, metadata !DIExpression()), !dbg !7067
  %3 = load i64, i64* %__ecx, align 8, !dbg !7067
  store i64 %3, i64* %__ecx, align 8, !dbg !7067
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7072, metadata !DIExpression()), !dbg !7067
  %4 = load i64, i64* %__eax, align 8, !dbg !7067
  store i64 %4, i64* %__eax, align 8, !dbg !7067
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7067
  %6 = call i64 @llvm.read_register.i64(metadata !5634), !dbg !7073
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !7073, !srcloc !7076
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7073
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7073
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7073
  call void @llvm.write_register.i64(metadata !5634, i64 %asmresult1), !dbg !7073
  %8 = load i64, i64* %__eax, align 8, !dbg !7073
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7077, metadata !DIExpression()), !dbg !7079
  store i64 -1, i64* %__mask, align 8, !dbg !7079
  %9 = load i64, i64* %__mask, align 8, !dbg !7079
  store i64 %9, i64* %tmp, align 8, !dbg !7079
  %10 = load i64, i64* %tmp, align 8, !dbg !7079
  %and = and i64 %8, %10, !dbg !7073
  store i64 %and, i64* %__ret, align 8, !dbg !7073
  %11 = load i64, i64* %__ret, align 8, !dbg !7067
  store i64 %11, i64* %tmp2, align 8, !dbg !7080
  %12 = load i64, i64* %tmp2, align 8, !dbg !7067
  ret i64 %12, !dbg !7081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !7082 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7083, metadata !DIExpression()), !dbg !7085
  %0 = load i64, i64* %__edi, align 8, !dbg !7085
  store i64 %0, i64* %__edi, align 8, !dbg !7085
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7086, metadata !DIExpression()), !dbg !7085
  %1 = load i64, i64* %__esi, align 8, !dbg !7085
  store i64 %1, i64* %__esi, align 8, !dbg !7085
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7087, metadata !DIExpression()), !dbg !7085
  %2 = load i64, i64* %__edx, align 8, !dbg !7085
  store i64 %2, i64* %__edx, align 8, !dbg !7085
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7088, metadata !DIExpression()), !dbg !7085
  %3 = load i64, i64* %__ecx, align 8, !dbg !7085
  store i64 %3, i64* %__ecx, align 8, !dbg !7085
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7089, metadata !DIExpression()), !dbg !7085
  %4 = load i64, i64* %__eax, align 8, !dbg !7085
  store i64 %4, i64* %__eax, align 8, !dbg !7085
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7085
  %6 = call i64 @llvm.read_register.i64(metadata !5634), !dbg !7085
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !7085, !srcloc !7090
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7085
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7085
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7085
  call void @llvm.write_register.i64(metadata !5634, i64 %asmresult1), !dbg !7085
  ret void, !dbg !7091
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_check_gross_error(%struct.esp* %esp) #0 !dbg !7092 {
entry:
  %retval = alloca i32, align 4
  %esp.addr = alloca %struct.esp*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !7093, metadata !DIExpression()), !dbg !7094
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7095
  %sreg = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 11, !dbg !7097
  %1 = load i8, i8* %sreg, align 4, !dbg !7097
  %conv = zext i8 %1 to i32, !dbg !7095
  %and = and i32 %conv, 64, !dbg !7098
  %tobool = icmp ne i32 %and, 0, !dbg !7098
  br i1 %tobool, label %if.then, label %if.end, !dbg !7099

if.then:                                          ; preds = %entry
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7100
  %host = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 3, !dbg !7100
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7100
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 47, !dbg !7100
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7100
  %sreg1 = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 11, !dbg !7100
  %5 = load i8, i8* %sreg1, align 4, !dbg !7100
  %conv2 = zext i8 %5 to i32, !dbg !7100
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i32 %conv2) #13, !dbg !7100
  store i32 1, i32* %retval, align 4, !dbg !7102
  br label %return, !dbg !7102

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7103
  br label %return, !dbg !7103

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !7104
  ret i32 %6, !dbg !7104
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_check_spur_intr(%struct.esp* %esp) #0 !dbg !7105 {
entry:
  %retval = alloca i32, align 4
  %esp.addr = alloca %struct.esp*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !7106, metadata !DIExpression()), !dbg !7107
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7108
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 36, !dbg !7109
  %1 = load i32, i32* %rev, align 4, !dbg !7109
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
  ], !dbg !7110

sw.bb:                                            ; preds = %entry, %entry
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7111
  %sreg = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 11, !dbg !7113
  %3 = load i8, i8* %sreg, align 4, !dbg !7114
  %conv = zext i8 %3 to i32, !dbg !7114
  %and = and i32 %conv, -129, !dbg !7114
  %conv1 = trunc i32 %and to i8, !dbg !7114
  store i8 %conv1, i8* %sreg, align 4, !dbg !7114
  br label %sw.epilog, !dbg !7115

sw.default:                                       ; preds = %entry
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7116
  %sreg2 = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 11, !dbg !7118
  %5 = load i8, i8* %sreg2, align 4, !dbg !7118
  %conv3 = zext i8 %5 to i32, !dbg !7116
  %and4 = and i32 %conv3, 128, !dbg !7119
  %tobool = icmp ne i32 %and4, 0, !dbg !7119
  br i1 %tobool, label %if.end16, label %if.then, !dbg !7120

if.then:                                          ; preds = %sw.default
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7121
  %ireg = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 14, !dbg !7124
  %7 = load i8, i8* %ireg, align 1, !dbg !7124
  %conv5 = zext i8 %7 to i32, !dbg !7121
  %and6 = and i32 %conv5, 128, !dbg !7125
  %tobool7 = icmp ne i32 %and6, 0, !dbg !7125
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !7126

if.then8:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !7127
  br label %return, !dbg !7127

if.end:                                           ; preds = %if.then
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7128
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %8, i32 0, i32 2, !dbg !7130
  %9 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !7130
  %dma_error = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %9, i32 0, i32 8, !dbg !7131
  %10 = load i32 (%struct.esp*)*, i32 (%struct.esp*)** %dma_error, align 8, !dbg !7131
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7132
  %call = call i32 %10(%struct.esp* %11) #12, !dbg !7128
  %tobool9 = icmp ne i32 %call, 0, !dbg !7128
  br i1 %tobool9, label %if.end13, label %if.then10, !dbg !7133

if.then10:                                        ; preds = %if.end
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7134
  %host = getelementptr inbounds %struct.esp, %struct.esp* %12, i32 0, i32 3, !dbg !7134
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7134
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %13, i32 0, i32 47, !dbg !7134
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7134
  %sreg11 = getelementptr inbounds %struct.esp, %struct.esp* %14, i32 0, i32 11, !dbg !7134
  %15 = load i8, i8* %sreg11, align 4, !dbg !7134
  %conv12 = zext i8 %15 to i32, !dbg !7134
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i32 %conv12) #13, !dbg !7134
  store i32 -1, i32* %retval, align 4, !dbg !7136
  br label %return, !dbg !7136

if.end13:                                         ; preds = %if.end
  %16 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7137
  %host14 = getelementptr inbounds %struct.esp, %struct.esp* %16, i32 0, i32 3, !dbg !7137
  %17 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host14, align 8, !dbg !7137
  %shost_gendev15 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %17, i32 0, i32 47, !dbg !7137
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #13, !dbg !7137
  store i32 -1, i32* %retval, align 4, !dbg !7138
  br label %return, !dbg !7138

if.end16:                                         ; preds = %sw.default
  br label %sw.epilog, !dbg !7139

sw.epilog:                                        ; preds = %if.end16, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !7140
  br label %return, !dbg !7140

return:                                           ; preds = %sw.epilog, %if.end13, %if.then10, %if.then8
  %18 = load i32, i32* %retval, align 4, !dbg !7141
  ret i32 %18, !dbg !7141
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_reset_cleanup(%struct.esp* %esp) #0 !dbg !7142 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %tmp = alloca %struct.esp_cmd_entry*, align 8
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.esp_cmd_entry*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.esp_cmd_entry*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.esp_cmd_entry*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp23 = alloca %struct.esp_cmd_entry*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.esp_cmd_entry*, align 8
  %__mptr41 = alloca i8*, align 8
  %tmp46 = alloca %struct.esp_cmd_entry*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !7143, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !7145, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %tmp, metadata !7147, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7149, metadata !DIExpression()), !dbg !7150
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7151, metadata !DIExpression()), !dbg !7154
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7154
  %queued_cmds = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 6, !dbg !7154
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queued_cmds, i32 0, i32 0, !dbg !7154
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7154
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7154
  store i8* %2, i8** %__mptr, align 8, !dbg !7154
  br label %do.body, !dbg !7154

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7155

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7154
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !7154
  %4 = bitcast i8* %add.ptr to %struct.esp_cmd_entry*, !dbg !7154
  store %struct.esp_cmd_entry* %4, %struct.esp_cmd_entry** %tmp1, align 8, !dbg !7155
  %5 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp1, align 8, !dbg !7154
  store %struct.esp_cmd_entry* %5, %struct.esp_cmd_entry** %ent, align 8, !dbg !7157
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !7158, metadata !DIExpression()), !dbg !7160
  %6 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7160
  %list = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %6, i32 0, i32 0, !dbg !7160
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !7160
  %7 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !7160
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !7160
  store i8* %8, i8** %__mptr2, align 8, !dbg !7160
  br label %do.body4, !dbg !7160

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !7161

do.end5:                                          ; preds = %do.body4
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !7160
  %add.ptr7 = getelementptr i8, i8* %9, i64 0, !dbg !7160
  %10 = bitcast i8* %add.ptr7 to %struct.esp_cmd_entry*, !dbg !7160
  store %struct.esp_cmd_entry* %10, %struct.esp_cmd_entry** %tmp6, align 8, !dbg !7161
  %11 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp6, align 8, !dbg !7160
  store %struct.esp_cmd_entry* %11, %struct.esp_cmd_entry** %tmp, align 8, !dbg !7157
  br label %for.cond, !dbg !7157

for.cond:                                         ; preds = %do.end16, %do.end5
  %12 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7163
  %list8 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %12, i32 0, i32 0, !dbg !7163
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7163
  %queued_cmds9 = getelementptr inbounds %struct.esp, %struct.esp* %13, i32 0, i32 6, !dbg !7163
  %cmp = icmp eq %struct.list_head* %list8, %queued_cmds9, !dbg !7163
  %lnot = xor i1 %cmp, true, !dbg !7163
  br i1 %lnot, label %for.body, label %for.end, !dbg !7157

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !7165, metadata !DIExpression()), !dbg !7167
  %14 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7168
  %cmd10 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %14, i32 0, i32 1, !dbg !7169
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd10, align 8, !dbg !7169
  store %struct.scsi_cmnd* %15, %struct.scsi_cmnd** %cmd, align 8, !dbg !7167
  %16 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7170
  %list11 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %16, i32 0, i32 0, !dbg !7171
  call void @list_del(%struct.list_head* %list11) #12, !dbg !7172
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7173
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %17, i32 0, i32 24, !dbg !7174
  store i32 524288, i32* %result, align 8, !dbg !7175
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7176
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %18, i32 0, i32 21, !dbg !7177
  %19 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !7177
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7178
  call void %19(%struct.scsi_cmnd* %20) #12, !dbg !7176
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7179
  %22 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7180
  call void @esp_put_ent(%struct.esp* %21, %struct.esp_cmd_entry* %22) #12, !dbg !7181
  br label %for.inc, !dbg !7182

for.inc:                                          ; preds = %for.body
  %23 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp, align 8, !dbg !7163
  store %struct.esp_cmd_entry* %23, %struct.esp_cmd_entry** %ent, align 8, !dbg !7163
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !7183, metadata !DIExpression()), !dbg !7185
  %24 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp, align 8, !dbg !7185
  %list13 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %24, i32 0, i32 0, !dbg !7185
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %list13, i32 0, i32 0, !dbg !7185
  %25 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !7185
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !7185
  store i8* %26, i8** %__mptr12, align 8, !dbg !7185
  br label %do.body15, !dbg !7185

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !7186

do.end16:                                         ; preds = %do.body15
  %27 = load i8*, i8** %__mptr12, align 8, !dbg !7185
  %add.ptr18 = getelementptr i8, i8* %27, i64 0, !dbg !7185
  %28 = bitcast i8* %add.ptr18 to %struct.esp_cmd_entry*, !dbg !7185
  store %struct.esp_cmd_entry* %28, %struct.esp_cmd_entry** %tmp17, align 8, !dbg !7186
  %29 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp17, align 8, !dbg !7185
  store %struct.esp_cmd_entry* %29, %struct.esp_cmd_entry** %tmp, align 8, !dbg !7163
  br label %for.cond, !dbg !7163, !llvm.loop !7188

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !7190, metadata !DIExpression()), !dbg !7193
  %30 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7193
  %active_cmds = getelementptr inbounds %struct.esp, %struct.esp* %30, i32 0, i32 7, !dbg !7193
  %next20 = getelementptr inbounds %struct.list_head, %struct.list_head* %active_cmds, i32 0, i32 0, !dbg !7193
  %31 = load %struct.list_head*, %struct.list_head** %next20, align 8, !dbg !7193
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !7193
  store i8* %32, i8** %__mptr19, align 8, !dbg !7193
  br label %do.body21, !dbg !7193

do.body21:                                        ; preds = %for.end
  br label %do.end22, !dbg !7194

do.end22:                                         ; preds = %do.body21
  %33 = load i8*, i8** %__mptr19, align 8, !dbg !7193
  %add.ptr24 = getelementptr i8, i8* %33, i64 0, !dbg !7193
  %34 = bitcast i8* %add.ptr24 to %struct.esp_cmd_entry*, !dbg !7193
  store %struct.esp_cmd_entry* %34, %struct.esp_cmd_entry** %tmp23, align 8, !dbg !7194
  %35 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp23, align 8, !dbg !7193
  store %struct.esp_cmd_entry* %35, %struct.esp_cmd_entry** %ent, align 8, !dbg !7196
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !7197, metadata !DIExpression()), !dbg !7199
  %36 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7199
  %list26 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %36, i32 0, i32 0, !dbg !7199
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %list26, i32 0, i32 0, !dbg !7199
  %37 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !7199
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !7199
  store i8* %38, i8** %__mptr25, align 8, !dbg !7199
  br label %do.body28, !dbg !7199

do.body28:                                        ; preds = %do.end22
  br label %do.end29, !dbg !7200

do.end29:                                         ; preds = %do.body28
  %39 = load i8*, i8** %__mptr25, align 8, !dbg !7199
  %add.ptr31 = getelementptr i8, i8* %39, i64 0, !dbg !7199
  %40 = bitcast i8* %add.ptr31 to %struct.esp_cmd_entry*, !dbg !7199
  store %struct.esp_cmd_entry* %40, %struct.esp_cmd_entry** %tmp30, align 8, !dbg !7200
  %41 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp30, align 8, !dbg !7199
  store %struct.esp_cmd_entry* %41, %struct.esp_cmd_entry** %tmp, align 8, !dbg !7196
  br label %for.cond32, !dbg !7196

for.cond32:                                       ; preds = %do.end45, %do.end29
  %42 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7202
  %list33 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %42, i32 0, i32 0, !dbg !7202
  %43 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7202
  %active_cmds34 = getelementptr inbounds %struct.esp, %struct.esp* %43, i32 0, i32 7, !dbg !7202
  %cmp35 = icmp eq %struct.list_head* %list33, %active_cmds34, !dbg !7202
  %lnot36 = xor i1 %cmp35, true, !dbg !7202
  br i1 %lnot36, label %for.body37, label %for.end48, !dbg !7196

for.body37:                                       ; preds = %for.cond32
  %44 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7204
  %45 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7207
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %45, i32 0, i32 5, !dbg !7208
  %46 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !7208
  %cmp38 = icmp eq %struct.esp_cmd_entry* %44, %46, !dbg !7209
  br i1 %cmp38, label %if.then, label %if.end, !dbg !7210

if.then:                                          ; preds = %for.body37
  %47 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7211
  %active_cmd39 = getelementptr inbounds %struct.esp, %struct.esp* %47, i32 0, i32 5, !dbg !7212
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %active_cmd39, align 8, !dbg !7213
  br label %if.end, !dbg !7211

if.end:                                           ; preds = %if.then, %for.body37
  %48 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7214
  %49 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7215
  call void @esp_reset_cleanup_one(%struct.esp* %48, %struct.esp_cmd_entry* %49) #12, !dbg !7216
  br label %for.inc40, !dbg !7217

for.inc40:                                        ; preds = %if.end
  %50 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp, align 8, !dbg !7202
  store %struct.esp_cmd_entry* %50, %struct.esp_cmd_entry** %ent, align 8, !dbg !7202
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !7218, metadata !DIExpression()), !dbg !7220
  %51 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp, align 8, !dbg !7220
  %list42 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %51, i32 0, i32 0, !dbg !7220
  %next43 = getelementptr inbounds %struct.list_head, %struct.list_head* %list42, i32 0, i32 0, !dbg !7220
  %52 = load %struct.list_head*, %struct.list_head** %next43, align 8, !dbg !7220
  %53 = bitcast %struct.list_head* %52 to i8*, !dbg !7220
  store i8* %53, i8** %__mptr41, align 8, !dbg !7220
  br label %do.body44, !dbg !7220

do.body44:                                        ; preds = %for.inc40
  br label %do.end45, !dbg !7221

do.end45:                                         ; preds = %do.body44
  %54 = load i8*, i8** %__mptr41, align 8, !dbg !7220
  %add.ptr47 = getelementptr i8, i8* %54, i64 0, !dbg !7220
  %55 = bitcast i8* %add.ptr47 to %struct.esp_cmd_entry*, !dbg !7220
  store %struct.esp_cmd_entry* %55, %struct.esp_cmd_entry** %tmp46, align 8, !dbg !7221
  %56 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp46, align 8, !dbg !7220
  store %struct.esp_cmd_entry* %56, %struct.esp_cmd_entry** %tmp, align 8, !dbg !7202
  br label %for.cond32, !dbg !7202, !llvm.loop !7223

for.end48:                                        ; preds = %for.cond32
  br label %do.body49, !dbg !7225

do.body49:                                        ; preds = %for.end48
  %57 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7226
  %active_cmd50 = getelementptr inbounds %struct.esp, %struct.esp* %57, i32 0, i32 5, !dbg !7226
  %58 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd50, align 8, !dbg !7226
  %cmp51 = icmp ne %struct.esp_cmd_entry* %58, null, !dbg !7226
  %lnot52 = xor i1 %cmp51, true, !dbg !7226
  %lnot53 = xor i1 %lnot52, true, !dbg !7226
  %lnot.ext = zext i1 %lnot53 to i32, !dbg !7226
  %conv = sext i32 %lnot.ext to i64, !dbg !7226
  %tobool = icmp ne i64 %conv, 0, !dbg !7226
  br i1 %tobool, label %if.then54, label %if.end63, !dbg !7229

if.then54:                                        ; preds = %do.body49
  br label %do.body55, !dbg !7226

do.body55:                                        ; preds = %if.then54
  br label %do.body56, !dbg !7230

do.body56:                                        ; preds = %do.body55
  br label %do.end57, !dbg !7232

do.end57:                                         ; preds = %do.body56
  br label %do.body58, !dbg !7230

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 2083, i32 0, i64 12) #6, !dbg !7234, !srcloc !7236
  br label %do.end59, !dbg !7234

do.end59:                                         ; preds = %do.body58
  br label %do.body60, !dbg !7230

do.body60:                                        ; preds = %do.end59
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 308) #6, !dbg !7237, !srcloc !7240
  unreachable, !dbg !7241

do.end61:                                         ; No predecessors!
  br label %do.end62, !dbg !7230

do.end62:                                         ; preds = %do.end61
  br label %if.end63, !dbg !7230

if.end63:                                         ; preds = %do.end62, %do.body49
  br label %do.end64, !dbg !7229

do.end64:                                         ; preds = %if.end63
  store i32 0, i32* %i, align 4, !dbg !7242
  br label %for.cond65, !dbg !7244

for.cond65:                                       ; preds = %for.inc81, %do.end64
  %59 = load i32, i32* %i, align 4, !dbg !7245
  %cmp66 = icmp slt i32 %59, 16, !dbg !7247
  br i1 %cmp66, label %for.body68, label %for.end82, !dbg !7248

for.body68:                                       ; preds = %for.cond65
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !7249, metadata !DIExpression()), !dbg !7251
  %60 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7252
  %target = getelementptr inbounds %struct.esp, %struct.esp* %60, i32 0, i32 21, !dbg !7253
  %61 = load i32, i32* %i, align 4, !dbg !7254
  %idxprom = sext i32 %61 to i64, !dbg !7252
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !7252
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !7251
  %62 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7255
  %esp_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %62, i32 0, i32 0, !dbg !7256
  store i8 0, i8* %esp_period, align 8, !dbg !7257
  %63 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7258
  %esp_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %63, i32 0, i32 1, !dbg !7259
  store i8 0, i8* %esp_offset, align 1, !dbg !7260
  %64 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7261
  %esp_config3 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %64, i32 0, i32 2, !dbg !7262
  %65 = load i8, i8* %esp_config3, align 2, !dbg !7263
  %conv69 = zext i8 %65 to i32, !dbg !7263
  %and = and i32 %conv69, -83, !dbg !7263
  %conv70 = trunc i32 %and to i8, !dbg !7263
  store i8 %conv70, i8* %esp_config3, align 2, !dbg !7263
  %66 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7264
  %flags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %66, i32 0, i32 3, !dbg !7265
  %67 = load i8, i8* %flags, align 1, !dbg !7266
  %conv71 = zext i8 %67 to i32, !dbg !7266
  %and72 = and i32 %conv71, -2, !dbg !7266
  %conv73 = trunc i32 %and72 to i8, !dbg !7266
  store i8 %conv73, i8* %flags, align 1, !dbg !7266
  %68 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7267
  %flags74 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %68, i32 0, i32 3, !dbg !7268
  %69 = load i8, i8* %flags74, align 1, !dbg !7269
  %conv75 = zext i8 %69 to i32, !dbg !7269
  %or = or i32 %conv75, 64, !dbg !7269
  %conv76 = trunc i32 %or to i8, !dbg !7269
  store i8 %conv76, i8* %flags74, align 1, !dbg !7269
  %70 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7270
  %starget = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %70, i32 0, i32 8, !dbg !7272
  %71 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !7272
  %tobool77 = icmp ne %struct.scsi_target* %71, null, !dbg !7270
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !7273

if.then78:                                        ; preds = %for.body68
  %72 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7274
  %starget79 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %72, i32 0, i32 8, !dbg !7275
  %73 = load %struct.scsi_target*, %struct.scsi_target** %starget79, align 8, !dbg !7275
  call void @__starget_for_each_device(%struct.scsi_target* %73, i8* null, void (%struct.scsi_device*, i8*)* @esp_clear_hold) #12, !dbg !7276
  br label %if.end80, !dbg !7276

if.end80:                                         ; preds = %if.then78, %for.body68
  br label %for.inc81, !dbg !7277

for.inc81:                                        ; preds = %if.end80
  %74 = load i32, i32* %i, align 4, !dbg !7278
  %inc = add i32 %74, 1, !dbg !7278
  store i32 %inc, i32* %i, align 4, !dbg !7278
  br label %for.cond65, !dbg !7279, !llvm.loop !7280

for.end82:                                        ; preds = %for.cond65
  %75 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7282
  %flags83 = getelementptr inbounds %struct.esp, %struct.esp* %75, i32 0, i32 37, !dbg !7283
  %76 = load i32, i32* %flags83, align 8, !dbg !7284
  %and84 = and i32 %76, -3, !dbg !7284
  store i32 %and84, i32* %flags83, align 8, !dbg !7284
  ret void, !dbg !7285
}

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hme_read_fifo(%struct.esp* %esp) #0 !dbg !7286 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %fcnt = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !7287, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.declare(metadata i32* %fcnt, metadata !7289, metadata !DIExpression()), !dbg !7290
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7291
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 2, !dbg !7291
  %1 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !7291
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %1, i32 0, i32 1, !dbg !7291
  %2 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !7291
  %3 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7291
  %call = call zeroext i8 %2(%struct.esp* %3, i64 7) #12, !dbg !7291
  %conv = zext i8 %call to i32, !dbg !7291
  %and = and i32 %conv, 31, !dbg !7292
  store i32 %and, i32* %fcnt, align 4, !dbg !7290
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !7293, metadata !DIExpression()), !dbg !7294
  store i32 0, i32* %idx, align 4, !dbg !7294
  br label %while.cond, !dbg !7295

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i32, i32* %fcnt, align 4, !dbg !7296
  %dec = add i32 %4, -1, !dbg !7296
  store i32 %dec, i32* %fcnt, align 4, !dbg !7296
  %tobool = icmp ne i32 %4, 0, !dbg !7295
  br i1 %tobool, label %while.body, label %while.end, !dbg !7295

while.body:                                       ; preds = %while.cond
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7297
  %ops1 = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 2, !dbg !7297
  %6 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops1, align 8, !dbg !7297
  %esp_read82 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %6, i32 0, i32 1, !dbg !7297
  %7 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read82, align 8, !dbg !7297
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7297
  %call3 = call zeroext i8 %7(%struct.esp* %8, i64 2) #12, !dbg !7297
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7299
  %fifo = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 23, !dbg !7300
  %10 = load i32, i32* %idx, align 4, !dbg !7301
  %inc = add i32 %10, 1, !dbg !7301
  store i32 %inc, i32* %idx, align 4, !dbg !7301
  %idxprom = sext i32 %10 to i64, !dbg !7299
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %fifo, i64 0, i64 %idxprom, !dbg !7299
  store i8 %call3, i8* %arrayidx, align 1, !dbg !7302
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7303
  %ops4 = getelementptr inbounds %struct.esp, %struct.esp* %11, i32 0, i32 2, !dbg !7303
  %12 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops4, align 8, !dbg !7303
  %esp_read85 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %12, i32 0, i32 1, !dbg !7303
  %13 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read85, align 8, !dbg !7303
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7303
  %call6 = call zeroext i8 %13(%struct.esp* %14, i64 2) #12, !dbg !7303
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7304
  %fifo7 = getelementptr inbounds %struct.esp, %struct.esp* %15, i32 0, i32 23, !dbg !7305
  %16 = load i32, i32* %idx, align 4, !dbg !7306
  %inc8 = add i32 %16, 1, !dbg !7306
  store i32 %inc8, i32* %idx, align 4, !dbg !7306
  %idxprom9 = sext i32 %16 to i64, !dbg !7304
  %arrayidx10 = getelementptr [16 x i8], [16 x i8]* %fifo7, i64 0, i64 %idxprom9, !dbg !7304
  store i8 %call6, i8* %arrayidx10, align 1, !dbg !7307
  br label %while.cond, !dbg !7295, !llvm.loop !7308

while.end:                                        ; preds = %while.cond
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7310
  %sreg2 = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 13, !dbg !7312
  %18 = load i8, i8* %sreg2, align 2, !dbg !7312
  %conv11 = zext i8 %18 to i32, !dbg !7310
  %and12 = and i32 %conv11, 32, !dbg !7313
  %tobool13 = icmp ne i32 %and12, 0, !dbg !7313
  br i1 %tobool13, label %if.then, label %if.end, !dbg !7314

if.then:                                          ; preds = %while.end
  %19 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7315
  %ops14 = getelementptr inbounds %struct.esp, %struct.esp* %19, i32 0, i32 2, !dbg !7315
  %20 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops14, align 8, !dbg !7315
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %20, i32 0, i32 0, !dbg !7315
  %21 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !7315
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7315
  call void %21(%struct.esp* %22, i8 zeroext 0, i64 2) #12, !dbg !7315
  %23 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7317
  %ops15 = getelementptr inbounds %struct.esp, %struct.esp* %23, i32 0, i32 2, !dbg !7317
  %24 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops15, align 8, !dbg !7317
  %esp_read816 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %24, i32 0, i32 1, !dbg !7317
  %25 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read816, align 8, !dbg !7317
  %26 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7317
  %call17 = call zeroext i8 %25(%struct.esp* %26, i64 2) #12, !dbg !7317
  %27 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7318
  %fifo18 = getelementptr inbounds %struct.esp, %struct.esp* %27, i32 0, i32 23, !dbg !7319
  %28 = load i32, i32* %idx, align 4, !dbg !7320
  %inc19 = add i32 %28, 1, !dbg !7320
  store i32 %inc19, i32* %idx, align 4, !dbg !7320
  %idxprom20 = sext i32 %28 to i64, !dbg !7318
  %arrayidx21 = getelementptr [16 x i8], [16 x i8]* %fifo18, i64 0, i64 %idxprom20, !dbg !7318
  store i8 %call17, i8* %arrayidx21, align 1, !dbg !7321
  %29 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7322
  call void @scsi_esp_cmd(%struct.esp* %29, i8 zeroext 1) #12, !dbg !7323
  br label %if.end, !dbg !7324

if.end:                                           ; preds = %if.then, %while.end
  %30 = load i32, i32* %idx, align 4, !dbg !7325
  %31 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7326
  %fifo_cnt = getelementptr inbounds %struct.esp, %struct.esp* %31, i32 0, i32 22, !dbg !7327
  store i32 %30, i32* %fifo_cnt, align 8, !dbg !7328
  ret void, !dbg !7329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_dump_cmd_log(%struct.esp* %esp) #0 !dbg !7330 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %idx = alloca i32, align 4
  %stop = alloca i32, align 4
  %p = alloca %struct.esp_event_ent*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !7331, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !7333, metadata !DIExpression()), !dbg !7334
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7335
  %esp_event_cur = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 25, !dbg !7336
  %1 = load i32, i32* %esp_event_cur, align 4, !dbg !7336
  store i32 %1, i32* %idx, align 4, !dbg !7334
  call void @llvm.dbg.declare(metadata i32* %stop, metadata !7337, metadata !DIExpression()), !dbg !7338
  %2 = load i32, i32* %idx, align 4, !dbg !7339
  store i32 %2, i32* %stop, align 4, !dbg !7338
  %3 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7340
  %host = getelementptr inbounds %struct.esp, %struct.esp* %3, i32 0, i32 3, !dbg !7340
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7340
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 47, !dbg !7340
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0)) #13, !dbg !7340
  br label %do.body, !dbg !7341

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata %struct.esp_event_ent** %p, metadata !7342, metadata !DIExpression()), !dbg !7344
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7345
  %esp_event_log = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 24, !dbg !7346
  %6 = load i32, i32* %idx, align 4, !dbg !7347
  %idxprom = sext i32 %6 to i64, !dbg !7345
  %arrayidx = getelementptr [32 x %struct.esp_event_ent], [32 x %struct.esp_event_ent]* %esp_event_log, i64 0, i64 %idxprom, !dbg !7345
  store %struct.esp_event_ent* %arrayidx, %struct.esp_event_ent** %p, align 8, !dbg !7344
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7348
  %host1 = getelementptr inbounds %struct.esp, %struct.esp* %7, i32 0, i32 3, !dbg !7348
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host1, align 8, !dbg !7348
  %shost_gendev2 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 47, !dbg !7348
  %9 = load i32, i32* %idx, align 4, !dbg !7348
  %10 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !7348
  %type = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %10, i32 0, i32 0, !dbg !7348
  %11 = load i8, i8* %type, align 1, !dbg !7348
  %conv = zext i8 %11 to i32, !dbg !7348
  %cmp = icmp eq i32 %conv, 2, !dbg !7348
  %12 = zext i1 %cmp to i64, !dbg !7348
  %cond = select i1 %cmp, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), !dbg !7348
  %13 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !7348
  %val = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %13, i32 0, i32 1, !dbg !7348
  %14 = load i8, i8* %val, align 1, !dbg !7348
  %conv4 = zext i8 %14 to i32, !dbg !7348
  %15 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !7348
  %sreg = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %15, i32 0, i32 2, !dbg !7348
  %16 = load i8, i8* %sreg, align 1, !dbg !7348
  %conv5 = zext i8 %16 to i32, !dbg !7348
  %17 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !7348
  %seqreg = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %17, i32 0, i32 3, !dbg !7348
  %18 = load i8, i8* %seqreg, align 1, !dbg !7348
  %conv6 = zext i8 %18 to i32, !dbg !7348
  %19 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !7348
  %sreg2 = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %19, i32 0, i32 4, !dbg !7348
  %20 = load i8, i8* %sreg2, align 1, !dbg !7348
  %conv7 = zext i8 %20 to i32, !dbg !7348
  %21 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !7348
  %ireg = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %21, i32 0, i32 5, !dbg !7348
  %22 = load i8, i8* %ireg, align 1, !dbg !7348
  %conv8 = zext i8 %22 to i32, !dbg !7348
  %23 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !7348
  %select_state = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %23, i32 0, i32 6, !dbg !7348
  %24 = load i8, i8* %select_state, align 1, !dbg !7348
  %conv9 = zext i8 %24 to i32, !dbg !7348
  %25 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !7348
  %event = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %25, i32 0, i32 7, !dbg !7348
  %26 = load i8, i8* %event, align 1, !dbg !7348
  %conv10 = zext i8 %26 to i32, !dbg !7348
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev2, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.14, i64 0, i64 0), i32 %9, i8* %cond, i32 %conv4, i32 %conv5, i32 %conv6, i32 %conv7, i32 %conv8, i32 %conv9, i32 %conv10) #13, !dbg !7348
  %27 = load i32, i32* %idx, align 4, !dbg !7349
  %add = add i32 %27, 1, !dbg !7350
  %and = and i32 %add, 31, !dbg !7351
  store i32 %and, i32* %idx, align 4, !dbg !7352
  br label %do.cond, !dbg !7353

do.cond:                                          ; preds = %do.body
  %28 = load i32, i32* %idx, align 4, !dbg !7354
  %29 = load i32, i32* %stop, align 4, !dbg !7355
  %cmp11 = icmp ne i32 %28, %29, !dbg !7356
  br i1 %cmp11, label %do.body, label %do.end, !dbg !7353, !llvm.loop !7357

do.end:                                           ; preds = %do.cond
  ret void, !dbg !7359
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_schedule_reset(%struct.esp* %esp) #0 !dbg !7360 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !7361, metadata !DIExpression()), !dbg !7362
  br label %do.body, !dbg !7363

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @esp_debug, align 4, !dbg !7364
  %and = and i32 %0, 4, !dbg !7364
  %tobool = icmp ne i32 %and, 0, !dbg !7364
  br i1 %tobool, label %if.then, label %if.end, !dbg !7367

if.then:                                          ; preds = %do.body
  %1 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7364
  %host = getelementptr inbounds %struct.esp, %struct.esp* %1, i32 0, i32 3, !dbg !7364
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7364
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 47, !dbg !7364
  %3 = call i8* @llvm.returnaddress(i32 0), !dbg !7364
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i64 0, i64 0), i8* %3) #13, !dbg !7364
  br label %if.end, !dbg !7364

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !7367

do.end:                                           ; preds = %if.end
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7368
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 37, !dbg !7369
  %5 = load i32, i32* %flags, align 8, !dbg !7370
  %or = or i32 %5, 2, !dbg !7370
  store i32 %or, i32* %flags, align 8, !dbg !7370
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7371
  call void @esp_event(%struct.esp* %6, i8 zeroext 16) #12, !dbg !7372
  ret void, !dbg !7373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_finish_select(%struct.esp* %esp) #0 !dbg !7374 {
entry:
  %retval = alloca i32, align 4
  %esp.addr = alloca %struct.esp*, align 8
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  %dev = alloca %struct.scsi_device*, align 8
  %fcnt = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !7375, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !7377, metadata !DIExpression()), !dbg !7378
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !7379, metadata !DIExpression()), !dbg !7380
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7381
  %select_state = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 38, !dbg !7382
  store i8 0, i8* %select_state, align 4, !dbg !7383
  %1 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7384
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %1, i32 0, i32 2, !dbg !7384
  %2 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !7384
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %2, i32 0, i32 1, !dbg !7384
  %3 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !7384
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7384
  %call = call zeroext i8 %3(%struct.esp* %4, i64 6) #12, !dbg !7384
  %conv = zext i8 %call to i32, !dbg !7384
  %and = and i32 %conv, 7, !dbg !7385
  %conv1 = trunc i32 %and to i8, !dbg !7384
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7386
  %seqreg = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 12, !dbg !7387
  store i8 %conv1, i8* %seqreg, align 1, !dbg !7388
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7389
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 5, !dbg !7390
  %7 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !7390
  store %struct.esp_cmd_entry* %7, %struct.esp_cmd_entry** %ent, align 8, !dbg !7391
  %8 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7392
  %cmd2 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %8, i32 0, i32 1, !dbg !7393
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd2, align 8, !dbg !7393
  store %struct.scsi_cmnd* %9, %struct.scsi_cmnd** %cmd, align 8, !dbg !7394
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7395
  %ops3 = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 2, !dbg !7397
  %11 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops3, align 8, !dbg !7397
  %dma_error = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %11, i32 0, i32 8, !dbg !7398
  %12 = load i32 (%struct.esp*)*, i32 (%struct.esp*)** %dma_error, align 8, !dbg !7398
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7399
  %call4 = call i32 %12(%struct.esp* %13) #12, !dbg !7395
  %tobool = icmp ne i32 %call4, 0, !dbg !7395
  br i1 %tobool, label %if.then, label %if.end, !dbg !7400

if.then:                                          ; preds = %entry
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7401
  call void @esp_schedule_reset(%struct.esp* %14) #12, !dbg !7403
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7404
  %16 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7405
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7406
  call void @esp_cmd_is_done(%struct.esp* %15, %struct.esp_cmd_entry* %16, %struct.scsi_cmnd* %17, i32 458752) #12, !dbg !7407
  store i32 0, i32* %retval, align 4, !dbg !7408
  br label %return, !dbg !7408

if.end:                                           ; preds = %entry
  %18 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7409
  %ops5 = getelementptr inbounds %struct.esp, %struct.esp* %18, i32 0, i32 2, !dbg !7410
  %19 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops5, align 8, !dbg !7410
  %dma_invalidate = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %19, i32 0, i32 6, !dbg !7411
  %20 = load void (%struct.esp*)*, void (%struct.esp*)** %dma_invalidate, align 8, !dbg !7411
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7412
  call void %20(%struct.esp* %21) #12, !dbg !7409
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7413
  %ireg = getelementptr inbounds %struct.esp, %struct.esp* %22, i32 0, i32 14, !dbg !7415
  %23 = load i8, i8* %ireg, align 1, !dbg !7415
  %conv6 = zext i8 %23 to i32, !dbg !7413
  %cmp = icmp eq i32 %conv6, 12, !dbg !7416
  br i1 %cmp, label %if.then8, label %if.end20, !dbg !7417

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !7418, metadata !DIExpression()), !dbg !7420
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7421
  %target = getelementptr inbounds %struct.esp, %struct.esp* %24, i32 0, i32 21, !dbg !7422
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7423
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %25, i32 0, i32 1, !dbg !7424
  %26 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !7424
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %26, i32 0, i32 16, !dbg !7425
  %27 = load i32, i32* %id, align 8, !dbg !7425
  %idxprom = zext i32 %27 to i64, !dbg !7421
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !7421
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !7420
  %28 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7426
  %flags = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %28, i32 0, i32 6, !dbg !7428
  %29 = load i8, i8* %flags, align 4, !dbg !7428
  %conv9 = zext i8 %29 to i32, !dbg !7426
  %and10 = and i32 %conv9, 4, !dbg !7429
  %tobool11 = icmp ne i32 %and10, 0, !dbg !7429
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !7430

if.then12:                                        ; preds = %if.then8
  %30 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7431
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7433
  call void @esp_unmap_dma(%struct.esp* %30, %struct.scsi_cmnd* %31) #12, !dbg !7434
  %32 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7435
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7436
  %device13 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %33, i32 0, i32 1, !dbg !7437
  %34 = load %struct.scsi_device*, %struct.scsi_device** %device13, align 8, !dbg !7437
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %34, i32 0, i32 21, !dbg !7438
  %35 = load i8*, i8** %hostdata, align 8, !dbg !7438
  %36 = bitcast i8* %35 to %struct.esp_lun_data*, !dbg !7436
  call void @esp_free_lun_tag(%struct.esp_cmd_entry* %32, %struct.esp_lun_data* %36) #12, !dbg !7439
  %37 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7440
  %flags14 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %37, i32 0, i32 3, !dbg !7441
  %38 = load i8, i8* %flags14, align 1, !dbg !7442
  %conv15 = zext i8 %38 to i32, !dbg !7442
  %and16 = and i32 %conv15, -13, !dbg !7442
  %conv17 = trunc i32 %and16 to i8, !dbg !7442
  store i8 %conv17, i8* %flags14, align 1, !dbg !7442
  %39 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7443
  %cmd_bytes_ptr = getelementptr inbounds %struct.esp, %struct.esp* %39, i32 0, i32 49, !dbg !7444
  store i8* null, i8** %cmd_bytes_ptr, align 8, !dbg !7445
  %40 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7446
  %cmd_bytes_left = getelementptr inbounds %struct.esp, %struct.esp* %40, i32 0, i32 50, !dbg !7447
  store i32 0, i32* %cmd_bytes_left, align 8, !dbg !7448
  br label %if.end18, !dbg !7449

if.else:                                          ; preds = %if.then8
  %41 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7450
  %42 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7452
  call void @esp_unmap_sense(%struct.esp* %41, %struct.esp_cmd_entry* %42) #12, !dbg !7453
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then12
  %43 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7454
  %list = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %43, i32 0, i32 0, !dbg !7455
  %44 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7456
  %queued_cmds = getelementptr inbounds %struct.esp, %struct.esp* %44, i32 0, i32 6, !dbg !7457
  call void @list_move(%struct.list_head* %list, %struct.list_head* %queued_cmds) #12, !dbg !7458
  %45 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7459
  %active_cmd19 = getelementptr inbounds %struct.esp, %struct.esp* %45, i32 0, i32 5, !dbg !7460
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %active_cmd19, align 8, !dbg !7461
  store i32 0, i32* %retval, align 4, !dbg !7462
  br label %return, !dbg !7462

if.end20:                                         ; preds = %if.end
  %46 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7463
  %ireg21 = getelementptr inbounds %struct.esp, %struct.esp* %46, i32 0, i32 14, !dbg !7465
  %47 = load i8, i8* %ireg21, align 1, !dbg !7465
  %conv22 = zext i8 %47 to i32, !dbg !7463
  %cmp23 = icmp eq i32 %conv22, 32, !dbg !7466
  br i1 %cmp23, label %if.then25, label %if.end34, !dbg !7467

if.then25:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev, metadata !7468, metadata !DIExpression()), !dbg !7470
  %48 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7471
  %device26 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %48, i32 0, i32 1, !dbg !7472
  %49 = load %struct.scsi_device*, %struct.scsi_device** %device26, align 8, !dbg !7472
  store %struct.scsi_device* %49, %struct.scsi_device** %dev, align 8, !dbg !7470
  %50 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7473
  %target27 = getelementptr inbounds %struct.esp, %struct.esp* %50, i32 0, i32 21, !dbg !7474
  %51 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !7475
  %id28 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %51, i32 0, i32 16, !dbg !7476
  %52 = load i32, i32* %id28, align 8, !dbg !7476
  %idxprom29 = zext i32 %52 to i64, !dbg !7473
  %arrayidx30 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target27, i64 0, i64 %idxprom29, !dbg !7473
  %flags31 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx30, i32 0, i32 3, !dbg !7477
  %53 = load i8, i8* %flags31, align 1, !dbg !7478
  %conv32 = zext i8 %53 to i32, !dbg !7478
  %or = or i32 %conv32, 64, !dbg !7478
  %conv33 = trunc i32 %or to i8, !dbg !7478
  store i8 %conv33, i8* %flags31, align 1, !dbg !7478
  %54 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7479
  call void @scsi_esp_cmd(%struct.esp* %54, i8 zeroext 68) #12, !dbg !7480
  %55 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7481
  %56 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7482
  %57 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7483
  call void @esp_cmd_is_done(%struct.esp* %55, %struct.esp_cmd_entry* %56, %struct.scsi_cmnd* %57, i32 262144) #12, !dbg !7484
  store i32 1, i32* %retval, align 4, !dbg !7485
  br label %return, !dbg !7485

if.end34:                                         ; preds = %if.end20
  %58 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7486
  %ireg35 = getelementptr inbounds %struct.esp, %struct.esp* %58, i32 0, i32 14, !dbg !7488
  %59 = load i8, i8* %ireg35, align 1, !dbg !7488
  %conv36 = zext i8 %59 to i32, !dbg !7486
  %cmp37 = icmp eq i32 %conv36, 24, !dbg !7489
  br i1 %cmp37, label %if.then39, label %if.end57, !dbg !7490

if.then39:                                        ; preds = %if.end34
  %60 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7491
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %60, i32 0, i32 36, !dbg !7494
  %61 = load i32, i32* %rev, align 4, !dbg !7494
  %cmp40 = icmp ule i32 %61, 2, !dbg !7495
  br i1 %cmp40, label %if.then42, label %if.end56, !dbg !7496

if.then42:                                        ; preds = %if.then39
  call void @llvm.dbg.declare(metadata i32* %fcnt, metadata !7497, metadata !DIExpression()), !dbg !7499
  %62 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7500
  %ops43 = getelementptr inbounds %struct.esp, %struct.esp* %62, i32 0, i32 2, !dbg !7500
  %63 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops43, align 8, !dbg !7500
  %esp_read844 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %63, i32 0, i32 1, !dbg !7500
  %64 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read844, align 8, !dbg !7500
  %65 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7500
  %call45 = call zeroext i8 %64(%struct.esp* %65, i64 7) #12, !dbg !7500
  %conv46 = zext i8 %call45 to i32, !dbg !7500
  %and47 = and i32 %conv46, 31, !dbg !7501
  store i32 %and47, i32* %fcnt, align 4, !dbg !7499
  %66 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7502
  call void @scsi_esp_cmd(%struct.esp* %66, i8 zeroext 0) #12, !dbg !7503
  %67 = load i32, i32* %fcnt, align 4, !dbg !7504
  %tobool48 = icmp ne i32 %67, 0, !dbg !7504
  br i1 %tobool48, label %if.end55, label %land.lhs.true, !dbg !7506

land.lhs.true:                                    ; preds = %if.then42
  %68 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7507
  %prev_soff = getelementptr inbounds %struct.esp, %struct.esp* %68, i32 0, i32 16, !dbg !7508
  %69 = load i8, i8* %prev_soff, align 4, !dbg !7508
  %tobool49 = icmp ne i8 %69, 0, !dbg !7507
  br i1 %tobool49, label %lor.lhs.false, label %if.then54, !dbg !7509

lor.lhs.false:                                    ; preds = %land.lhs.true
  %70 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7510
  %sreg = getelementptr inbounds %struct.esp, %struct.esp* %70, i32 0, i32 11, !dbg !7511
  %71 = load i8, i8* %sreg, align 4, !dbg !7511
  %conv50 = zext i8 %71 to i32, !dbg !7510
  %and51 = and i32 %conv50, 7, !dbg !7512
  %cmp52 = icmp ne i32 %and51, 1, !dbg !7513
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !7514

if.then54:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %72 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7515
  call void @esp_flush_fifo(%struct.esp* %72) #12, !dbg !7516
  br label %if.end55, !dbg !7516

if.end55:                                         ; preds = %if.then54, %lor.lhs.false, %if.then42
  br label %if.end56, !dbg !7517

if.end56:                                         ; preds = %if.end55, %if.then39
  %73 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7518
  call void @esp_event(%struct.esp* %73, i8 zeroext 13) #12, !dbg !7519
  store i32 0, i32* %retval, align 4, !dbg !7520
  br label %return, !dbg !7520

if.end57:                                         ; preds = %if.end34
  %74 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7521
  %host = getelementptr inbounds %struct.esp, %struct.esp* %74, i32 0, i32 3, !dbg !7521
  %75 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7521
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %75, i32 0, i32 47, !dbg !7521
  %76 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7521
  %ireg58 = getelementptr inbounds %struct.esp, %struct.esp* %76, i32 0, i32 14, !dbg !7521
  %77 = load i8, i8* %ireg58, align 1, !dbg !7521
  %conv59 = zext i8 %77 to i32, !dbg !7521
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 %conv59) #13, !dbg !7521
  %78 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7522
  call void @esp_schedule_reset(%struct.esp* %78) #12, !dbg !7523
  store i32 0, i32* %retval, align 4, !dbg !7524
  br label %return, !dbg !7524

return:                                           ; preds = %if.end57, %if.end56, %if.then25, %if.end18, %if.then
  %79 = load i32, i32* %retval, align 4, !dbg !7525
  ret i32 %79, !dbg !7525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_reconnect(%struct.esp* %esp) #0 !dbg !7526 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7527, metadata !DIExpression()), !dbg !7530
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !7534, metadata !DIExpression()), !dbg !7535
  %retval = alloca i32, align 4
  %esp.addr = alloca %struct.esp*, align 8
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  %lp = alloca %struct.esp_lun_data*, align 8
  %dev = alloca %struct.scsi_device*, align 8
  %target = alloca i32, align 4
  %lun = alloca i32, align 4
  %bits = alloca i8, align 1
  %ireg = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !7536, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.declare(metadata %struct.esp_lun_data** %lp, metadata !7542, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev, metadata !7544, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.declare(metadata i32* %target, metadata !7546, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.declare(metadata i32* %lun, metadata !7548, metadata !DIExpression()), !dbg !7549
  br label %do.body, !dbg !7550

do.body:                                          ; preds = %entry
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7551
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 5, !dbg !7551
  %1 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !7551
  %tobool = icmp ne %struct.esp_cmd_entry* %1, null, !dbg !7551
  %lnot = xor i1 %tobool, true, !dbg !7551
  %lnot1 = xor i1 %lnot, true, !dbg !7551
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7551
  %conv = sext i32 %lnot.ext to i64, !dbg !7551
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7551
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7554

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !7551

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !7555

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !7557

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7555

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 1153, i32 0, i64 12) #6, !dbg !7559, !srcloc !7561
  br label %do.end6, !dbg !7559

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !7555

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 300) #6, !dbg !7562, !srcloc !7565
  unreachable, !dbg !7566

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !7555

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !7555

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !7554

do.end10:                                         ; preds = %if.end
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7567
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 36, !dbg !7568
  %3 = load i32, i32* %rev, align 4, !dbg !7568
  %cmp = icmp eq i32 %3, 8, !dbg !7569
  br i1 %cmp, label %if.then12, label %if.else, !dbg !7570

if.then12:                                        ; preds = %do.end10
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7571
  %fifo = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 23, !dbg !7573
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %fifo, i64 0, i64 0, !dbg !7571
  %5 = load i8, i8* %arrayidx, align 4, !dbg !7571
  %conv13 = zext i8 %5 to i32, !dbg !7571
  store i32 %conv13, i32* %target, align 4, !dbg !7574
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7575
  %fifo14 = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 23, !dbg !7576
  %arrayidx15 = getelementptr [16 x i8], [16 x i8]* %fifo14, i64 0, i64 1, !dbg !7575
  %7 = load i8, i8* %arrayidx15, align 1, !dbg !7575
  %conv16 = zext i8 %7 to i32, !dbg !7575
  %and = and i32 %conv16, 7, !dbg !7577
  store i32 %and, i32* %lun, align 4, !dbg !7578
  br label %if.end54, !dbg !7579

if.else:                                          ; preds = %do.end10
  call void @llvm.dbg.declare(metadata i8* %bits, metadata !7580, metadata !DIExpression()), !dbg !7581
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7582
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %8, i32 0, i32 2, !dbg !7582
  %9 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !7582
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %9, i32 0, i32 1, !dbg !7582
  %10 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !7582
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7582
  %call = call zeroext i8 %10(%struct.esp* %11, i64 2) #12, !dbg !7582
  store i8 %call, i8* %bits, align 1, !dbg !7581
  %12 = load i8, i8* %bits, align 1, !dbg !7583
  %conv17 = zext i8 %12 to i32, !dbg !7583
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7585
  %scsi_id_mask = getelementptr inbounds %struct.esp, %struct.esp* %13, i32 0, i32 35, !dbg !7586
  %14 = load i32, i32* %scsi_id_mask, align 8, !dbg !7586
  %and18 = and i32 %conv17, %14, !dbg !7587
  %tobool19 = icmp ne i32 %and18, 0, !dbg !7587
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !7588

if.then20:                                        ; preds = %if.else
  br label %do_reset, !dbg !7589

if.end21:                                         ; preds = %if.else
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7590
  %scsi_id_mask22 = getelementptr inbounds %struct.esp, %struct.esp* %15, i32 0, i32 35, !dbg !7591
  %16 = load i32, i32* %scsi_id_mask22, align 8, !dbg !7591
  %neg = xor i32 %16, -1, !dbg !7592
  %17 = load i8, i8* %bits, align 1, !dbg !7593
  %conv23 = zext i8 %17 to i32, !dbg !7593
  %and24 = and i32 %conv23, %neg, !dbg !7593
  %conv25 = trunc i32 %and24 to i8, !dbg !7593
  store i8 %conv25, i8* %bits, align 1, !dbg !7593
  %18 = load i8, i8* %bits, align 1, !dbg !7594
  %tobool26 = icmp ne i8 %18, 0, !dbg !7594
  br i1 %tobool26, label %lor.lhs.false, label %if.then31, !dbg !7596

lor.lhs.false:                                    ; preds = %if.end21
  %19 = load i8, i8* %bits, align 1, !dbg !7597
  %conv27 = zext i8 %19 to i32, !dbg !7597
  %20 = load i8, i8* %bits, align 1, !dbg !7598
  %conv28 = zext i8 %20 to i32, !dbg !7598
  %sub = sub i32 %conv28, 1, !dbg !7599
  %and29 = and i32 %conv27, %sub, !dbg !7600
  %tobool30 = icmp ne i32 %and29, 0, !dbg !7600
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !7601

if.then31:                                        ; preds = %lor.lhs.false, %if.end21
  br label %do_reset, !dbg !7602

if.end32:                                         ; preds = %lor.lhs.false
  %21 = load i8, i8* %bits, align 1, !dbg !7603
  %conv33 = zext i8 %21 to i32, !dbg !7603
  store i32 %conv33, i32* %x.addr.i, align 4
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !7604
  %23 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %22, i32 -1) #5, !dbg !7605, !srcloc !7606
  store i32 %23, i32* %r.i, align 4, !dbg !7605
  %24 = load i32, i32* %r.i, align 4, !dbg !7607
  %add.i = add i32 %24, 1, !dbg !7608
  %sub35 = sub i32 %add.i, 1, !dbg !7609
  store i32 %sub35, i32* %target, align 4, !dbg !7610
  %25 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7611
  %ops36 = getelementptr inbounds %struct.esp, %struct.esp* %25, i32 0, i32 2, !dbg !7611
  %26 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops36, align 8, !dbg !7611
  %esp_read837 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %26, i32 0, i32 1, !dbg !7611
  %27 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read837, align 8, !dbg !7611
  %28 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7611
  %call38 = call zeroext i8 %27(%struct.esp* %28, i64 2) #12, !dbg !7611
  %conv39 = zext i8 %call38 to i32, !dbg !7611
  %and40 = and i32 %conv39, 7, !dbg !7612
  store i32 %and40, i32* %lun, align 4, !dbg !7613
  %29 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7614
  call void @scsi_esp_cmd(%struct.esp* %29, i8 zeroext 1) #12, !dbg !7615
  %30 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7616
  %rev41 = getelementptr inbounds %struct.esp, %struct.esp* %30, i32 0, i32 36, !dbg !7618
  %31 = load i32, i32* %rev41, align 4, !dbg !7618
  %cmp42 = icmp eq i32 %31, 0, !dbg !7619
  br i1 %cmp42, label %if.then44, label %if.end53, !dbg !7620

if.then44:                                        ; preds = %if.end32
  call void @llvm.dbg.declare(metadata i8* %ireg, metadata !7621, metadata !DIExpression()), !dbg !7623
  %32 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7624
  %ops45 = getelementptr inbounds %struct.esp, %struct.esp* %32, i32 0, i32 2, !dbg !7624
  %33 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops45, align 8, !dbg !7624
  %esp_read846 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %33, i32 0, i32 1, !dbg !7624
  %34 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read846, align 8, !dbg !7624
  %35 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7624
  %call47 = call zeroext i8 %34(%struct.esp* %35, i64 5) #12, !dbg !7624
  store i8 %call47, i8* %ireg, align 1, !dbg !7623
  %36 = load i8, i8* %ireg, align 1, !dbg !7625
  %conv48 = zext i8 %36 to i32, !dbg !7625
  %and49 = and i32 %conv48, 128, !dbg !7627
  %tobool50 = icmp ne i32 %and49, 0, !dbg !7627
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !7628

if.then51:                                        ; preds = %if.then44
  br label %do_reset, !dbg !7629

if.end52:                                         ; preds = %if.then44
  br label %if.end53, !dbg !7630

if.end53:                                         ; preds = %if.end52, %if.end32
  %37 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7631
  call void @scsi_esp_cmd(%struct.esp* %37, i8 zeroext 0) #12, !dbg !7632
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then12
  %38 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7633
  %39 = load i32, i32* %target, align 4, !dbg !7634
  call void @esp_write_tgt_sync(%struct.esp* %38, i32 %39) #12, !dbg !7635
  %40 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7636
  %41 = load i32, i32* %target, align 4, !dbg !7637
  call void @esp_write_tgt_config3(%struct.esp* %40, i32 %41) #12, !dbg !7638
  %42 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7639
  call void @scsi_esp_cmd(%struct.esp* %42, i8 zeroext 18) #12, !dbg !7640
  %43 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7641
  %rev55 = getelementptr inbounds %struct.esp, %struct.esp* %43, i32 0, i32 36, !dbg !7643
  %44 = load i32, i32* %rev55, align 4, !dbg !7643
  %cmp56 = icmp eq i32 %44, 8, !dbg !7644
  br i1 %cmp56, label %if.then58, label %if.end62, !dbg !7645

if.then58:                                        ; preds = %if.end54
  %45 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7646
  %ops59 = getelementptr inbounds %struct.esp, %struct.esp* %45, i32 0, i32 2, !dbg !7646
  %46 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops59, align 8, !dbg !7646
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %46, i32 0, i32 0, !dbg !7646
  %47 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !7646
  %48 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7646
  %49 = load i32, i32* %target, align 4, !dbg !7646
  %or = or i32 %49, 16, !dbg !7646
  %or60 = or i32 %or, 64, !dbg !7646
  %conv61 = trunc i32 %or60 to i8, !dbg !7646
  call void %47(%struct.esp* %48, i8 zeroext %conv61, i64 4) #12, !dbg !7646
  br label %if.end62, !dbg !7646

if.end62:                                         ; preds = %if.then58, %if.end54
  %50 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7647
  %target63 = getelementptr inbounds %struct.esp, %struct.esp* %50, i32 0, i32 21, !dbg !7648
  %51 = load i32, i32* %target, align 4, !dbg !7649
  %idxprom = sext i32 %51 to i64, !dbg !7647
  %arrayidx64 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target63, i64 0, i64 %idxprom, !dbg !7647
  store %struct.esp_target_data* %arrayidx64, %struct.esp_target_data** %tp, align 8, !dbg !7650
  %52 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !7651
  %starget = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %52, i32 0, i32 8, !dbg !7652
  %53 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !7652
  %54 = load i32, i32* %lun, align 4, !dbg !7653
  %conv65 = sext i32 %54 to i64, !dbg !7653
  %call66 = call %struct.scsi_device* @__scsi_device_lookup_by_target(%struct.scsi_target* %53, i64 %conv65) #12, !dbg !7654
  store %struct.scsi_device* %call66, %struct.scsi_device** %dev, align 8, !dbg !7655
  %55 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !7656
  %tobool67 = icmp ne %struct.scsi_device* %55, null, !dbg !7656
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !7658

if.then68:                                        ; preds = %if.end62
  %56 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7659
  %host = getelementptr inbounds %struct.esp, %struct.esp* %56, i32 0, i32 3, !dbg !7659
  %57 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7659
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %57, i32 0, i32 47, !dbg !7659
  %58 = load i32, i32* %target, align 4, !dbg !7659
  %59 = load i32, i32* %lun, align 4, !dbg !7659
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28, i64 0, i64 0), i32 %58, i32 %59) #13, !dbg !7659
  br label %do_reset, !dbg !7661

if.end69:                                         ; preds = %if.end62
  %60 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !7662
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %60, i32 0, i32 21, !dbg !7663
  %61 = load i8*, i8** %hostdata, align 8, !dbg !7663
  %62 = bitcast i8* %61 to %struct.esp_lun_data*, !dbg !7662
  store %struct.esp_lun_data* %62, %struct.esp_lun_data** %lp, align 8, !dbg !7664
  %63 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp, align 8, !dbg !7665
  %non_tagged_cmd = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %63, i32 0, i32 0, !dbg !7666
  %64 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %non_tagged_cmd, align 8, !dbg !7666
  store %struct.esp_cmd_entry* %64, %struct.esp_cmd_entry** %ent, align 8, !dbg !7667
  %65 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7668
  %tobool70 = icmp ne %struct.esp_cmd_entry* %65, null, !dbg !7668
  br i1 %tobool70, label %if.end76, label %if.then71, !dbg !7670

if.then71:                                        ; preds = %if.end69
  %66 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7671
  %67 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp, align 8, !dbg !7673
  %call72 = call %struct.esp_cmd_entry* @esp_reconnect_with_tag(%struct.esp* %66, %struct.esp_lun_data* %67) #12, !dbg !7674
  store %struct.esp_cmd_entry* %call72, %struct.esp_cmd_entry** %ent, align 8, !dbg !7675
  %68 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7676
  %tobool73 = icmp ne %struct.esp_cmd_entry* %68, null, !dbg !7676
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !7678

if.then74:                                        ; preds = %if.then71
  br label %do_reset, !dbg !7679

if.end75:                                         ; preds = %if.then71
  br label %if.end76, !dbg !7680

if.end76:                                         ; preds = %if.end75, %if.end69
  %69 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7681
  %70 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7682
  %active_cmd77 = getelementptr inbounds %struct.esp, %struct.esp* %70, i32 0, i32 5, !dbg !7683
  store %struct.esp_cmd_entry* %69, %struct.esp_cmd_entry** %active_cmd77, align 8, !dbg !7684
  %71 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7685
  call void @esp_event(%struct.esp* %71, i8 zeroext 13) #12, !dbg !7686
  %72 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7687
  %73 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7688
  call void @esp_restore_pointers(%struct.esp* %72, %struct.esp_cmd_entry* %73) #12, !dbg !7689
  %74 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7690
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %74, i32 0, i32 37, !dbg !7691
  %75 = load i32, i32* %flags, align 8, !dbg !7692
  %or78 = or i32 %75, 16, !dbg !7692
  store i32 %or78, i32* %flags, align 8, !dbg !7692
  store i32 1, i32* %retval, align 4, !dbg !7693
  br label %return, !dbg !7693

do_reset:                                         ; preds = %if.then74, %if.then68, %if.then51, %if.then31, %if.then20
  call void @llvm.dbg.label(metadata !7694), !dbg !7695
  %76 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7696
  call void @esp_schedule_reset(%struct.esp* %76) #12, !dbg !7697
  store i32 0, i32* %retval, align 4, !dbg !7698
  br label %return, !dbg !7698

return:                                           ; preds = %do_reset, %if.end76
  %77 = load i32, i32* %retval, align 4, !dbg !7699
  ret i32 %77, !dbg !7699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_process_event(%struct.esp* %esp) #0 !dbg !7700 {
entry:
  %retval = alloca i32, align 4
  %esp.addr = alloca %struct.esp*, align 8
  %write = alloca i32, align 4
  %i = alloca i32, align 4
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %dma_addr = alloca i64, align 8
  %dma_len = alloca i32, align 4
  %ent66 = alloca %struct.esp_cmd_entry*, align 8
  %cmd68 = alloca %struct.scsi_cmnd*, align 8
  %bytes_sent = alloca i32, align 4
  %ent108 = alloca %struct.esp_cmd_entry*, align 8
  %ent146 = alloca %struct.esp_cmd_entry*, align 8
  %cmd148 = alloca %struct.scsi_cmnd*, align 8
  %i239 = alloca i32, align 4
  %i252 = alloca i32, align 4
  %val = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !7701, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.declare(metadata i32* %write, metadata !7703, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7705, metadata !DIExpression()), !dbg !7706
  br label %again, !dbg !7707

again:                                            ; preds = %if.then421, %if.end325, %if.end106, %sw.epilog, %entry
  call void @llvm.dbg.label(metadata !7708), !dbg !7709
  store i32 0, i32* %write, align 4, !dbg !7710
  br label %do.body, !dbg !7711

do.body:                                          ; preds = %again
  %0 = load i32, i32* @esp_debug, align 4, !dbg !7712
  %and = and i32 %0, 2048, !dbg !7712
  %tobool = icmp ne i32 %and, 0, !dbg !7712
  br i1 %tobool, label %if.then, label %if.end, !dbg !7715

if.then:                                          ; preds = %do.body
  %1 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7712
  %host = getelementptr inbounds %struct.esp, %struct.esp* %1, i32 0, i32 3, !dbg !7712
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7712
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 47, !dbg !7712
  %3 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7712
  %event = getelementptr inbounds %struct.esp, %struct.esp* %3, i32 0, i32 39, !dbg !7712
  %4 = load i8, i8* %event, align 1, !dbg !7712
  %conv = zext i8 %4 to i32, !dbg !7712
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7712
  %sreg = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 11, !dbg !7712
  %6 = load i8, i8* %sreg, align 4, !dbg !7712
  %conv1 = zext i8 %6 to i32, !dbg !7712
  %and2 = and i32 %conv1, 7, !dbg !7712
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i32 %conv, i32 %and2) #13, !dbg !7712
  br label %if.end, !dbg !7712

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !7715

do.end:                                           ; preds = %if.end
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7716
  %event3 = getelementptr inbounds %struct.esp, %struct.esp* %7, i32 0, i32 39, !dbg !7717
  %8 = load i8, i8* %event3, align 1, !dbg !7717
  %conv4 = zext i8 %8 to i32, !dbg !7716
  switch i32 %conv4, label %sw.default424 [
    i32 13, label %sw.bb
    i32 3, label %sw.bb18
    i32 4, label %sw.bb19
    i32 5, label %sw.bb65
    i32 11, label %sw.bb107
    i32 12, label %sw.bb145
    i32 9, label %sw.bb235
    i32 10, label %sw.bb306
    i32 6, label %sw.bb327
    i32 1, label %sw.bb408
    i32 2, label %sw.bb414
    i32 16, label %sw.bb423
  ], !dbg !7718

sw.bb:                                            ; preds = %do.end
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7719
  %sreg5 = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 11, !dbg !7721
  %10 = load i8, i8* %sreg5, align 4, !dbg !7721
  %conv6 = zext i8 %10 to i32, !dbg !7719
  %and7 = and i32 %conv6, 7, !dbg !7722
  switch i32 %and7, label %sw.default [
    i32 0, label %sw.bb8
    i32 1, label %sw.bb9
    i32 3, label %sw.bb10
    i32 6, label %sw.bb11
    i32 7, label %sw.bb12
    i32 2, label %sw.bb13
  ], !dbg !7723

sw.bb8:                                           ; preds = %sw.bb
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7724
  call void @esp_event(%struct.esp* %11, i8 zeroext 4) #12, !dbg !7726
  br label %sw.epilog, !dbg !7727

sw.bb9:                                           ; preds = %sw.bb
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7728
  call void @esp_event(%struct.esp* %12, i8 zeroext 3) #12, !dbg !7729
  br label %sw.epilog, !dbg !7730

sw.bb10:                                          ; preds = %sw.bb
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7731
  call void @esp_flush_fifo(%struct.esp* %13) #12, !dbg !7732
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7733
  call void @scsi_esp_cmd(%struct.esp* %14, i8 zeroext 17) #12, !dbg !7734
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7735
  call void @esp_event(%struct.esp* %15, i8 zeroext 11) #12, !dbg !7736
  %16 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7737
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %16, i32 0, i32 37, !dbg !7738
  %17 = load i32, i32* %flags, align 8, !dbg !7739
  %or = or i32 %17, 16, !dbg !7739
  store i32 %or, i32* %flags, align 8, !dbg !7739
  store i32 1, i32* %retval, align 4, !dbg !7740
  br label %return, !dbg !7740

sw.bb11:                                          ; preds = %sw.bb
  %18 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7741
  call void @esp_event(%struct.esp* %18, i8 zeroext 9) #12, !dbg !7742
  br label %sw.epilog, !dbg !7743

sw.bb12:                                          ; preds = %sw.bb
  %19 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7744
  call void @esp_event(%struct.esp* %19, i8 zeroext 6) #12, !dbg !7745
  br label %sw.epilog, !dbg !7746

sw.bb13:                                          ; preds = %sw.bb
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7747
  call void @esp_event(%struct.esp* %20, i8 zeroext 1) #12, !dbg !7748
  br label %sw.epilog, !dbg !7749

sw.default:                                       ; preds = %sw.bb
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7750
  %host14 = getelementptr inbounds %struct.esp, %struct.esp* %21, i32 0, i32 3, !dbg !7750
  %22 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host14, align 8, !dbg !7750
  %shost_gendev15 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %22, i32 0, i32 47, !dbg !7750
  %23 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7750
  %sreg16 = getelementptr inbounds %struct.esp, %struct.esp* %23, i32 0, i32 11, !dbg !7750
  %24 = load i8, i8* %sreg16, align 4, !dbg !7750
  %conv17 = zext i8 %24 to i32, !dbg !7750
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40, i64 0, i64 0), i32 %conv17) #13, !dbg !7750
  %25 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7751
  call void @esp_schedule_reset(%struct.esp* %25) #12, !dbg !7752
  store i32 0, i32* %retval, align 4, !dbg !7753
  br label %return, !dbg !7753

sw.epilog:                                        ; preds = %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb9, %sw.bb8
  br label %again, !dbg !7754

sw.bb18:                                          ; preds = %do.end
  store i32 1, i32* %write, align 4, !dbg !7755
  br label %sw.bb19, !dbg !7756

sw.bb19:                                          ; preds = %do.end, %sw.bb18
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !7757, metadata !DIExpression()), !dbg !7759
  %26 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7760
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %26, i32 0, i32 5, !dbg !7761
  %27 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !7761
  store %struct.esp_cmd_entry* %27, %struct.esp_cmd_entry** %ent, align 8, !dbg !7759
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !7762, metadata !DIExpression()), !dbg !7763
  %28 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7764
  %cmd20 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %28, i32 0, i32 1, !dbg !7765
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd20, align 8, !dbg !7765
  store %struct.scsi_cmnd* %29, %struct.scsi_cmnd** %cmd, align 8, !dbg !7763
  call void @llvm.dbg.declare(metadata i64* %dma_addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  %30 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7768
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7769
  %call = call i64 @esp_cur_dma_addr(%struct.esp_cmd_entry* %30, %struct.scsi_cmnd* %31) #12, !dbg !7770
  store i64 %call, i64* %dma_addr, align 8, !dbg !7767
  call void @llvm.dbg.declare(metadata i32* %dma_len, metadata !7771, metadata !DIExpression()), !dbg !7772
  %32 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7773
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7774
  %call21 = call i32 @esp_cur_dma_len(%struct.esp_cmd_entry* %32, %struct.scsi_cmnd* %33) #12, !dbg !7775
  store i32 %call21, i32* %dma_len, align 4, !dbg !7772
  %34 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7776
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %34, i32 0, i32 36, !dbg !7778
  %35 = load i32, i32* %rev, align 4, !dbg !7778
  %cmp = icmp eq i32 %35, 0, !dbg !7779
  br i1 %cmp, label %if.then23, label %if.end24, !dbg !7780

if.then23:                                        ; preds = %sw.bb19
  %36 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7781
  call void @scsi_esp_cmd(%struct.esp* %36, i8 zeroext 0) #12, !dbg !7782
  br label %if.end24, !dbg !7782

if.end24:                                         ; preds = %if.then23, %sw.bb19
  %37 = load i32, i32* %write, align 4, !dbg !7783
  %tobool25 = icmp ne i32 %37, 0, !dbg !7783
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !7785

if.then26:                                        ; preds = %if.end24
  %38 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7786
  %flags27 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %38, i32 0, i32 6, !dbg !7787
  %39 = load i8, i8* %flags27, align 4, !dbg !7788
  %conv28 = zext i8 %39 to i32, !dbg !7788
  %or29 = or i32 %conv28, 1, !dbg !7788
  %conv30 = trunc i32 %or29 to i8, !dbg !7788
  store i8 %conv30, i8* %flags27, align 4, !dbg !7788
  br label %if.end35, !dbg !7786

if.else:                                          ; preds = %if.end24
  %40 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7789
  %flags31 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %40, i32 0, i32 6, !dbg !7790
  %41 = load i8, i8* %flags31, align 4, !dbg !7791
  %conv32 = zext i8 %41 to i32, !dbg !7791
  %and33 = and i32 %conv32, -2, !dbg !7791
  %conv34 = trunc i32 %and33 to i8, !dbg !7791
  store i8 %conv34, i8* %flags31, align 4, !dbg !7791
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then26
  %42 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7792
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %42, i32 0, i32 2, !dbg !7794
  %43 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !7794
  %dma_length_limit = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %43, i32 0, i32 3, !dbg !7795
  %44 = load i32 (%struct.esp*, i32, i32)*, i32 (%struct.esp*, i32, i32)** %dma_length_limit, align 8, !dbg !7795
  %tobool36 = icmp ne i32 (%struct.esp*, i32, i32)* %44, null, !dbg !7792
  br i1 %tobool36, label %if.then37, label %if.else42, !dbg !7796

if.then37:                                        ; preds = %if.end35
  %45 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7797
  %ops38 = getelementptr inbounds %struct.esp, %struct.esp* %45, i32 0, i32 2, !dbg !7798
  %46 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops38, align 8, !dbg !7798
  %dma_length_limit39 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %46, i32 0, i32 3, !dbg !7799
  %47 = load i32 (%struct.esp*, i32, i32)*, i32 (%struct.esp*, i32, i32)** %dma_length_limit39, align 8, !dbg !7799
  %48 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7800
  %49 = load i64, i64* %dma_addr, align 8, !dbg !7801
  %conv40 = trunc i64 %49 to i32, !dbg !7801
  %50 = load i32, i32* %dma_len, align 4, !dbg !7802
  %call41 = call i32 %47(%struct.esp* %48, i32 %conv40, i32 %50) #12, !dbg !7797
  store i32 %call41, i32* %dma_len, align 4, !dbg !7803
  br label %if.end45, !dbg !7804

if.else42:                                        ; preds = %if.end35
  %51 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7805
  %52 = load i64, i64* %dma_addr, align 8, !dbg !7806
  %conv43 = trunc i64 %52 to i32, !dbg !7806
  %53 = load i32, i32* %dma_len, align 4, !dbg !7807
  %call44 = call i32 @esp_dma_length_limit(%struct.esp* %51, i32 %conv43, i32 %53) #12, !dbg !7808
  store i32 %call44, i32* %dma_len, align 4, !dbg !7809
  br label %if.end45

if.end45:                                         ; preds = %if.else42, %if.then37
  %54 = load i32, i32* %dma_len, align 4, !dbg !7810
  %55 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7811
  %data_dma_len = getelementptr inbounds %struct.esp, %struct.esp* %55, i32 0, i32 10, !dbg !7812
  store i32 %54, i32* %data_dma_len, align 8, !dbg !7813
  %56 = load i32, i32* %dma_len, align 4, !dbg !7814
  %tobool46 = icmp ne i32 %56, 0, !dbg !7814
  br i1 %tobool46, label %if.end54, label %if.then47, !dbg !7816

if.then47:                                        ; preds = %if.end45
  %57 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7817
  %host48 = getelementptr inbounds %struct.esp, %struct.esp* %57, i32 0, i32 3, !dbg !7817
  %58 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host48, align 8, !dbg !7817
  %shost_gendev49 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %58, i32 0, i32 47, !dbg !7817
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev49, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41, i64 0, i64 0)) #13, !dbg !7817
  %59 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7819
  %host50 = getelementptr inbounds %struct.esp, %struct.esp* %59, i32 0, i32 3, !dbg !7819
  %60 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host50, align 8, !dbg !7819
  %shost_gendev51 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %60, i32 0, i32 47, !dbg !7819
  %61 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7819
  %62 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7819
  %call52 = call i64 @esp_cur_dma_addr(%struct.esp_cmd_entry* %61, %struct.scsi_cmnd* %62) #12, !dbg !7819
  %63 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !7819
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7819
  %call53 = call i32 @esp_cur_dma_len(%struct.esp_cmd_entry* %63, %struct.scsi_cmnd* %64) #12, !dbg !7819
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev51, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i64 %call52, i32 %call53) #13, !dbg !7819
  %65 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7820
  call void @esp_schedule_reset(%struct.esp* %65) #12, !dbg !7821
  store i32 0, i32* %retval, align 4, !dbg !7822
  br label %return, !dbg !7822

if.end54:                                         ; preds = %if.end45
  br label %do.body55, !dbg !7823

do.body55:                                        ; preds = %if.end54
  %66 = load i32, i32* @esp_debug, align 4, !dbg !7824
  %and56 = and i32 %66, 128, !dbg !7824
  %tobool57 = icmp ne i32 %and56, 0, !dbg !7824
  br i1 %tobool57, label %if.then58, label %if.end61, !dbg !7827

if.then58:                                        ; preds = %do.body55
  %67 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7824
  %host59 = getelementptr inbounds %struct.esp, %struct.esp* %67, i32 0, i32 3, !dbg !7824
  %68 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host59, align 8, !dbg !7824
  %shost_gendev60 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %68, i32 0, i32 47, !dbg !7824
  %69 = load i64, i64* %dma_addr, align 8, !dbg !7824
  %70 = load i32, i32* %dma_len, align 4, !dbg !7824
  %71 = load i32, i32* %write, align 4, !dbg !7824
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev60, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i64 0, i64 0), i64 %69, i32 %70, i32 %71) #13, !dbg !7824
  br label %if.end61, !dbg !7824

if.end61:                                         ; preds = %if.then58, %do.body55
  br label %do.end62, !dbg !7827

do.end62:                                         ; preds = %if.end61
  %72 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7828
  %ops63 = getelementptr inbounds %struct.esp, %struct.esp* %72, i32 0, i32 2, !dbg !7829
  %73 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops63, align 8, !dbg !7829
  %send_dma_cmd = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %73, i32 0, i32 7, !dbg !7830
  %74 = load void (%struct.esp*, i32, i32, i32, i32, i8)*, void (%struct.esp*, i32, i32, i32, i32, i8)** %send_dma_cmd, align 8, !dbg !7830
  %75 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7831
  %76 = load i64, i64* %dma_addr, align 8, !dbg !7832
  %conv64 = trunc i64 %76 to i32, !dbg !7832
  %77 = load i32, i32* %dma_len, align 4, !dbg !7833
  %78 = load i32, i32* %dma_len, align 4, !dbg !7834
  %79 = load i32, i32* %write, align 4, !dbg !7835
  call void %74(%struct.esp* %75, i32 %conv64, i32 %77, i32 %78, i32 %79, i8 zeroext -112) #12, !dbg !7828
  %80 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7836
  call void @esp_event(%struct.esp* %80, i8 zeroext 5) #12, !dbg !7837
  br label %sw.epilog429, !dbg !7838

sw.bb65:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent66, metadata !7839, metadata !DIExpression()), !dbg !7841
  %81 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7842
  %active_cmd67 = getelementptr inbounds %struct.esp, %struct.esp* %81, i32 0, i32 5, !dbg !7843
  %82 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd67, align 8, !dbg !7843
  store %struct.esp_cmd_entry* %82, %struct.esp_cmd_entry** %ent66, align 8, !dbg !7841
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd68, metadata !7844, metadata !DIExpression()), !dbg !7845
  %83 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent66, align 8, !dbg !7846
  %cmd69 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %83, i32 0, i32 1, !dbg !7847
  %84 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd69, align 8, !dbg !7847
  store %struct.scsi_cmnd* %84, %struct.scsi_cmnd** %cmd68, align 8, !dbg !7845
  call void @llvm.dbg.declare(metadata i32* %bytes_sent, metadata !7848, metadata !DIExpression()), !dbg !7849
  %85 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7850
  %ops70 = getelementptr inbounds %struct.esp, %struct.esp* %85, i32 0, i32 2, !dbg !7852
  %86 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops70, align 8, !dbg !7852
  %dma_error = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %86, i32 0, i32 8, !dbg !7853
  %87 = load i32 (%struct.esp*)*, i32 (%struct.esp*)** %dma_error, align 8, !dbg !7853
  %88 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7854
  %call71 = call i32 %87(%struct.esp* %88) #12, !dbg !7850
  %tobool72 = icmp ne i32 %call71, 0, !dbg !7850
  br i1 %tobool72, label %if.then73, label %if.end76, !dbg !7855

if.then73:                                        ; preds = %sw.bb65
  %89 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7856
  %host74 = getelementptr inbounds %struct.esp, %struct.esp* %89, i32 0, i32 3, !dbg !7856
  %90 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host74, align 8, !dbg !7856
  %shost_gendev75 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %90, i32 0, i32 47, !dbg !7856
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev75, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0)) #13, !dbg !7856
  %91 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7858
  call void @esp_schedule_reset(%struct.esp* %91) #12, !dbg !7859
  store i32 0, i32* %retval, align 4, !dbg !7860
  br label %return, !dbg !7860

if.end76:                                         ; preds = %sw.bb65
  %92 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent66, align 8, !dbg !7861
  %flags77 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %92, i32 0, i32 6, !dbg !7863
  %93 = load i8, i8* %flags77, align 4, !dbg !7863
  %conv78 = zext i8 %93 to i32, !dbg !7861
  %and79 = and i32 %conv78, 1, !dbg !7864
  %tobool80 = icmp ne i32 %and79, 0, !dbg !7864
  br i1 %tobool80, label %if.then81, label %if.end83, !dbg !7865

if.then81:                                        ; preds = %if.end76
  %94 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7866
  %ops82 = getelementptr inbounds %struct.esp, %struct.esp* %94, i32 0, i32 2, !dbg !7868
  %95 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops82, align 8, !dbg !7868
  %dma_drain = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %95, i32 0, i32 5, !dbg !7869
  %96 = load void (%struct.esp*)*, void (%struct.esp*)** %dma_drain, align 8, !dbg !7869
  %97 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7870
  call void %96(%struct.esp* %97) #12, !dbg !7866
  br label %if.end83, !dbg !7871

if.end83:                                         ; preds = %if.then81, %if.end76
  %98 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7872
  %ops84 = getelementptr inbounds %struct.esp, %struct.esp* %98, i32 0, i32 2, !dbg !7873
  %99 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops84, align 8, !dbg !7873
  %dma_invalidate = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %99, i32 0, i32 6, !dbg !7874
  %100 = load void (%struct.esp*)*, void (%struct.esp*)** %dma_invalidate, align 8, !dbg !7874
  %101 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7875
  call void %100(%struct.esp* %101) #12, !dbg !7872
  %102 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7876
  %ireg = getelementptr inbounds %struct.esp, %struct.esp* %102, i32 0, i32 14, !dbg !7878
  %103 = load i8, i8* %ireg, align 1, !dbg !7878
  %conv85 = zext i8 %103 to i32, !dbg !7876
  %cmp86 = icmp ne i32 %conv85, 16, !dbg !7879
  br i1 %cmp86, label %if.then88, label %if.end91, !dbg !7880

if.then88:                                        ; preds = %if.end83
  %104 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7881
  %host89 = getelementptr inbounds %struct.esp, %struct.esp* %104, i32 0, i32 3, !dbg !7881
  %105 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host89, align 8, !dbg !7881
  %shost_gendev90 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %105, i32 0, i32 47, !dbg !7881
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev90, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i64 0, i64 0)) #13, !dbg !7881
  %106 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7883
  call void @esp_schedule_reset(%struct.esp* %106) #12, !dbg !7884
  store i32 0, i32* %retval, align 4, !dbg !7885
  br label %return, !dbg !7885

if.end91:                                         ; preds = %if.end83
  %107 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7886
  %108 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent66, align 8, !dbg !7887
  %109 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd68, align 8, !dbg !7888
  %call92 = call i32 @esp_data_bytes_sent(%struct.esp* %107, %struct.esp_cmd_entry* %108, %struct.scsi_cmnd* %109) #12, !dbg !7889
  store i32 %call92, i32* %bytes_sent, align 4, !dbg !7890
  br label %do.body93, !dbg !7891

do.body93:                                        ; preds = %if.end91
  %110 = load i32, i32* @esp_debug, align 4, !dbg !7892
  %and94 = and i32 %110, 256, !dbg !7892
  %tobool95 = icmp ne i32 %and94, 0, !dbg !7892
  br i1 %tobool95, label %if.then96, label %if.end101, !dbg !7895

if.then96:                                        ; preds = %do.body93
  %111 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7892
  %host97 = getelementptr inbounds %struct.esp, %struct.esp* %111, i32 0, i32 3, !dbg !7892
  %112 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host97, align 8, !dbg !7892
  %shost_gendev98 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %112, i32 0, i32 47, !dbg !7892
  %113 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent66, align 8, !dbg !7892
  %flags99 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %113, i32 0, i32 6, !dbg !7892
  %114 = load i8, i8* %flags99, align 4, !dbg !7892
  %conv100 = zext i8 %114 to i32, !dbg !7892
  %115 = load i32, i32* %bytes_sent, align 4, !dbg !7892
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev98, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i64 0, i64 0), i32 %conv100, i32 %115) #13, !dbg !7892
  br label %if.end101, !dbg !7892

if.end101:                                        ; preds = %if.then96, %do.body93
  br label %do.end102, !dbg !7895

do.end102:                                        ; preds = %if.end101
  %116 = load i32, i32* %bytes_sent, align 4, !dbg !7896
  %cmp103 = icmp slt i32 %116, 0, !dbg !7898
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !7899

if.then105:                                       ; preds = %do.end102
  %117 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7900
  call void @esp_schedule_reset(%struct.esp* %117) #12, !dbg !7902
  store i32 0, i32* %retval, align 4, !dbg !7903
  br label %return, !dbg !7903

if.end106:                                        ; preds = %do.end102
  %118 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7904
  %119 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent66, align 8, !dbg !7905
  %120 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd68, align 8, !dbg !7906
  %121 = load i32, i32* %bytes_sent, align 4, !dbg !7907
  call void @esp_advance_dma(%struct.esp* %118, %struct.esp_cmd_entry* %119, %struct.scsi_cmnd* %120, i32 %121) #12, !dbg !7908
  %122 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7909
  call void @esp_event(%struct.esp* %122, i8 zeroext 13) #12, !dbg !7910
  br label %again, !dbg !7911

sw.bb107:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent108, metadata !7912, metadata !DIExpression()), !dbg !7914
  %123 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7915
  %active_cmd109 = getelementptr inbounds %struct.esp, %struct.esp* %123, i32 0, i32 5, !dbg !7916
  %124 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd109, align 8, !dbg !7916
  store %struct.esp_cmd_entry* %124, %struct.esp_cmd_entry** %ent108, align 8, !dbg !7914
  %125 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7917
  %ireg110 = getelementptr inbounds %struct.esp, %struct.esp* %125, i32 0, i32 14, !dbg !7919
  %126 = load i8, i8* %ireg110, align 1, !dbg !7919
  %conv111 = zext i8 %126 to i32, !dbg !7917
  %and112 = and i32 %conv111, 8, !dbg !7920
  %tobool113 = icmp ne i32 %and112, 0, !dbg !7920
  br i1 %tobool113, label %if.then114, label %if.else120, !dbg !7921

if.then114:                                       ; preds = %sw.bb107
  %127 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7922
  %ops115 = getelementptr inbounds %struct.esp, %struct.esp* %127, i32 0, i32 2, !dbg !7922
  %128 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops115, align 8, !dbg !7922
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %128, i32 0, i32 1, !dbg !7922
  %129 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !7922
  %130 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7922
  %call116 = call zeroext i8 %129(%struct.esp* %130, i64 2) #12, !dbg !7922
  %131 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent108, align 8, !dbg !7924
  %status = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %131, i32 0, i32 9, !dbg !7925
  store i8 %call116, i8* %status, align 1, !dbg !7926
  %132 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7927
  %ops117 = getelementptr inbounds %struct.esp, %struct.esp* %132, i32 0, i32 2, !dbg !7927
  %133 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops117, align 8, !dbg !7927
  %esp_read8118 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %133, i32 0, i32 1, !dbg !7927
  %134 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8118, align 8, !dbg !7927
  %135 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7927
  %call119 = call zeroext i8 %134(%struct.esp* %135, i64 2) #12, !dbg !7927
  %136 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent108, align 8, !dbg !7928
  %message = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %136, i32 0, i32 10, !dbg !7929
  store i8 %call119, i8* %message, align 2, !dbg !7930
  %137 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7931
  call void @scsi_esp_cmd(%struct.esp* %137, i8 zeroext 18) #12, !dbg !7932
  br label %if.end132, !dbg !7933

if.else120:                                       ; preds = %sw.bb107
  %138 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7934
  %ireg121 = getelementptr inbounds %struct.esp, %struct.esp* %138, i32 0, i32 14, !dbg !7936
  %139 = load i8, i8* %ireg121, align 1, !dbg !7936
  %conv122 = zext i8 %139 to i32, !dbg !7934
  %cmp123 = icmp eq i32 %conv122, 16, !dbg !7937
  br i1 %cmp123, label %if.then125, label %if.end131, !dbg !7938

if.then125:                                       ; preds = %if.else120
  %140 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7939
  %ops126 = getelementptr inbounds %struct.esp, %struct.esp* %140, i32 0, i32 2, !dbg !7939
  %141 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops126, align 8, !dbg !7939
  %esp_read8127 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %141, i32 0, i32 1, !dbg !7939
  %142 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8127, align 8, !dbg !7939
  %143 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7939
  %call128 = call zeroext i8 %142(%struct.esp* %143, i64 2) #12, !dbg !7939
  %144 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent108, align 8, !dbg !7941
  %status129 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %144, i32 0, i32 9, !dbg !7942
  store i8 %call128, i8* %status129, align 1, !dbg !7943
  %145 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent108, align 8, !dbg !7944
  %message130 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %145, i32 0, i32 10, !dbg !7945
  store i8 -1, i8* %message130, align 2, !dbg !7946
  %146 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7947
  call void @esp_event(%struct.esp* %146, i8 zeroext 6) #12, !dbg !7948
  store i32 0, i32* %retval, align 4, !dbg !7949
  br label %return, !dbg !7949

if.end131:                                        ; preds = %if.else120
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then114
  %147 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent108, align 8, !dbg !7950
  %message133 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %147, i32 0, i32 10, !dbg !7952
  %148 = load i8, i8* %message133, align 2, !dbg !7952
  %conv134 = zext i8 %148 to i32, !dbg !7950
  %cmp135 = icmp ne i32 %conv134, 0, !dbg !7953
  br i1 %cmp135, label %if.then137, label %if.end142, !dbg !7954

if.then137:                                       ; preds = %if.end132
  %149 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7955
  %host138 = getelementptr inbounds %struct.esp, %struct.esp* %149, i32 0, i32 3, !dbg !7955
  %150 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host138, align 8, !dbg !7955
  %shost_gendev139 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %150, i32 0, i32 47, !dbg !7955
  %151 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent108, align 8, !dbg !7955
  %message140 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %151, i32 0, i32 10, !dbg !7955
  %152 = load i8, i8* %message140, align 2, !dbg !7955
  %conv141 = zext i8 %152 to i32, !dbg !7955
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev139, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.47, i64 0, i64 0), i32 %conv141) #13, !dbg !7955
  %153 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7957
  call void @esp_schedule_reset(%struct.esp* %153) #12, !dbg !7958
  store i32 0, i32* %retval, align 4, !dbg !7959
  br label %return, !dbg !7959

if.end142:                                        ; preds = %if.end132
  %154 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7960
  call void @esp_event(%struct.esp* %154, i8 zeroext 12) #12, !dbg !7961
  %155 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7962
  %flags143 = getelementptr inbounds %struct.esp, %struct.esp* %155, i32 0, i32 37, !dbg !7963
  %156 = load i32, i32* %flags143, align 8, !dbg !7964
  %or144 = or i32 %156, 16, !dbg !7964
  store i32 %or144, i32* %flags143, align 8, !dbg !7964
  br label %sw.epilog429, !dbg !7965

sw.bb145:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent146, metadata !7966, metadata !DIExpression()), !dbg !7968
  %157 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7969
  %active_cmd147 = getelementptr inbounds %struct.esp, %struct.esp* %157, i32 0, i32 5, !dbg !7970
  %158 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd147, align 8, !dbg !7970
  store %struct.esp_cmd_entry* %158, %struct.esp_cmd_entry** %ent146, align 8, !dbg !7968
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd148, metadata !7971, metadata !DIExpression()), !dbg !7972
  %159 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !7973
  %cmd149 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %159, i32 0, i32 1, !dbg !7974
  %160 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd149, align 8, !dbg !7974
  store %struct.scsi_cmnd* %160, %struct.scsi_cmnd** %cmd148, align 8, !dbg !7972
  %161 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !7975
  %message150 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %161, i32 0, i32 10, !dbg !7977
  %162 = load i8, i8* %message150, align 2, !dbg !7977
  %conv151 = zext i8 %162 to i32, !dbg !7975
  %cmp152 = icmp eq i32 %conv151, 0, !dbg !7978
  br i1 %cmp152, label %if.then158, label %lor.lhs.false, !dbg !7979

lor.lhs.false:                                    ; preds = %sw.bb145
  %163 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !7980
  %message154 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %163, i32 0, i32 10, !dbg !7981
  %164 = load i8, i8* %message154, align 2, !dbg !7981
  %conv155 = zext i8 %164 to i32, !dbg !7980
  %cmp156 = icmp eq i32 %conv155, 4, !dbg !7982
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !7983

if.then158:                                       ; preds = %lor.lhs.false, %sw.bb145
  %165 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7984
  call void @scsi_esp_cmd(%struct.esp* %165, i8 zeroext 68) #12, !dbg !7985
  br label %if.end159, !dbg !7985

if.end159:                                        ; preds = %if.then158, %lor.lhs.false
  %166 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !7986
  %message160 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %166, i32 0, i32 10, !dbg !7988
  %167 = load i8, i8* %message160, align 2, !dbg !7988
  %conv161 = zext i8 %167 to i32, !dbg !7986
  %cmp162 = icmp eq i32 %conv161, 0, !dbg !7989
  br i1 %cmp162, label %if.then164, label %if.else203, !dbg !7990

if.then164:                                       ; preds = %if.end159
  br label %do.body165, !dbg !7991

do.body165:                                       ; preds = %if.then164
  %168 = load i32, i32* @esp_debug, align 4, !dbg !7993
  %and166 = and i32 %168, 32, !dbg !7993
  %tobool167 = icmp ne i32 %and166, 0, !dbg !7993
  br i1 %tobool167, label %if.then168, label %if.end175, !dbg !7996

if.then168:                                       ; preds = %do.body165
  %169 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !7993
  %host169 = getelementptr inbounds %struct.esp, %struct.esp* %169, i32 0, i32 3, !dbg !7993
  %170 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host169, align 8, !dbg !7993
  %shost_gendev170 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %170, i32 0, i32 47, !dbg !7993
  %171 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !7993
  %status171 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %171, i32 0, i32 9, !dbg !7993
  %172 = load i8, i8* %status171, align 1, !dbg !7993
  %conv172 = zext i8 %172 to i32, !dbg !7993
  %173 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !7993
  %message173 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %173, i32 0, i32 10, !dbg !7993
  %174 = load i8, i8* %message173, align 2, !dbg !7993
  %conv174 = zext i8 %174 to i32, !dbg !7993
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev170, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.48, i64 0, i64 0), i32 %conv172, i32 %conv174) #13, !dbg !7993
  br label %if.end175, !dbg !7993

if.end175:                                        ; preds = %if.then168, %do.body165
  br label %do.end176, !dbg !7996

do.end176:                                        ; preds = %if.end175
  %175 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !7997
  %status177 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %175, i32 0, i32 9, !dbg !7999
  %176 = load i8, i8* %status177, align 1, !dbg !7999
  %conv178 = zext i8 %176 to i32, !dbg !7997
  %cmp179 = icmp eq i32 %conv178, 40, !dbg !8000
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !8001

if.then181:                                       ; preds = %do.end176
  %177 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8002
  %178 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8003
  call void @esp_event_queue_full(%struct.esp* %177, %struct.esp_cmd_entry* %178) #12, !dbg !8004
  br label %if.end182, !dbg !8004

if.end182:                                        ; preds = %if.then181, %do.end176
  %179 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8005
  %status183 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %179, i32 0, i32 9, !dbg !8007
  %180 = load i8, i8* %status183, align 1, !dbg !8007
  %conv184 = zext i8 %180 to i32, !dbg !8005
  %cmp185 = icmp eq i32 %conv184, 2, !dbg !8008
  br i1 %cmp185, label %land.lhs.true, label %if.else196, !dbg !8009

land.lhs.true:                                    ; preds = %if.end182
  %181 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8010
  %flags187 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %181, i32 0, i32 6, !dbg !8011
  %182 = load i8, i8* %flags187, align 4, !dbg !8011
  %conv188 = zext i8 %182 to i32, !dbg !8010
  %and189 = and i32 %conv188, 4, !dbg !8012
  %tobool190 = icmp ne i32 %and189, 0, !dbg !8012
  br i1 %tobool190, label %if.else196, label %if.then191, !dbg !8013

if.then191:                                       ; preds = %land.lhs.true
  %183 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8014
  %flags192 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %183, i32 0, i32 6, !dbg !8016
  %184 = load i8, i8* %flags192, align 4, !dbg !8017
  %conv193 = zext i8 %184 to i32, !dbg !8017
  %or194 = or i32 %conv193, 4, !dbg !8017
  %conv195 = trunc i32 %or194 to i8, !dbg !8017
  store i8 %conv195, i8* %flags192, align 4, !dbg !8017
  %185 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8018
  %186 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8019
  call void @esp_autosense(%struct.esp* %185, %struct.esp_cmd_entry* %186) #12, !dbg !8020
  br label %if.end202, !dbg !8021

if.else196:                                       ; preds = %land.lhs.true, %if.end182
  %187 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8022
  %188 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8024
  %189 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd148, align 8, !dbg !8025
  %190 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8026
  %status197 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %190, i32 0, i32 9, !dbg !8027
  %191 = load i8, i8* %status197, align 1, !dbg !8027
  %conv198 = zext i8 %191 to i32, !dbg !8026
  %192 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8028
  %message199 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %192, i32 0, i32 10, !dbg !8029
  %193 = load i8, i8* %message199, align 2, !dbg !8029
  %conv200 = zext i8 %193 to i32, !dbg !8028
  %call201 = call i32 @compose_result(i32 %conv198, i32 %conv200, i32 0) #12, !dbg !8030
  call void @esp_cmd_is_done(%struct.esp* %187, %struct.esp_cmd_entry* %188, %struct.scsi_cmnd* %189, i32 %call201) #12, !dbg !8031
  br label %if.end202

if.end202:                                        ; preds = %if.else196, %if.then191
  br label %if.end228, !dbg !8032

if.else203:                                       ; preds = %if.end159
  %194 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8033
  %message204 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %194, i32 0, i32 10, !dbg !8035
  %195 = load i8, i8* %message204, align 2, !dbg !8035
  %conv205 = zext i8 %195 to i32, !dbg !8033
  %cmp206 = icmp eq i32 %conv205, 4, !dbg !8036
  br i1 %cmp206, label %if.then208, label %if.else222, !dbg !8037

if.then208:                                       ; preds = %if.else203
  br label %do.body209, !dbg !8038

do.body209:                                       ; preds = %if.then208
  %196 = load i32, i32* @esp_debug, align 4, !dbg !8040
  %and210 = and i32 %196, 64, !dbg !8040
  %tobool211 = icmp ne i32 %and210, 0, !dbg !8040
  br i1 %tobool211, label %if.then212, label %if.end219, !dbg !8043

if.then212:                                       ; preds = %do.body209
  %197 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8040
  %host213 = getelementptr inbounds %struct.esp, %struct.esp* %197, i32 0, i32 3, !dbg !8040
  %198 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host213, align 8, !dbg !8040
  %shost_gendev214 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %198, i32 0, i32 47, !dbg !8040
  %199 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd148, align 8, !dbg !8040
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %199, i32 0, i32 1, !dbg !8040
  %200 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8040
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %200, i32 0, i32 16, !dbg !8040
  %201 = load i32, i32* %id, align 8, !dbg !8040
  %202 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8040
  %tag = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %202, i32 0, i32 7, !dbg !8040
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %tag, i64 0, i64 0, !dbg !8040
  %203 = load i8, i8* %arrayidx, align 1, !dbg !8040
  %conv215 = zext i8 %203 to i32, !dbg !8040
  %204 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8040
  %tag216 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %204, i32 0, i32 7, !dbg !8040
  %arrayidx217 = getelementptr [2 x i8], [2 x i8]* %tag216, i64 0, i64 1, !dbg !8040
  %205 = load i8, i8* %arrayidx217, align 1, !dbg !8040
  %conv218 = zext i8 %205 to i32, !dbg !8040
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev214, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.49, i64 0, i64 0), i32 %201, i32 %conv215, i32 %conv218) #13, !dbg !8040
  br label %if.end219, !dbg !8040

if.end219:                                        ; preds = %if.then212, %do.body209
  br label %do.end220, !dbg !8043

do.end220:                                        ; preds = %if.end219
  %206 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8044
  %active_cmd221 = getelementptr inbounds %struct.esp, %struct.esp* %206, i32 0, i32 5, !dbg !8045
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %active_cmd221, align 8, !dbg !8046
  %207 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8047
  call void @esp_maybe_execute_command(%struct.esp* %207) #12, !dbg !8048
  br label %if.end227, !dbg !8049

if.else222:                                       ; preds = %if.else203
  %208 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8050
  %host223 = getelementptr inbounds %struct.esp, %struct.esp* %208, i32 0, i32 3, !dbg !8050
  %209 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host223, align 8, !dbg !8050
  %shost_gendev224 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %209, i32 0, i32 47, !dbg !8050
  %210 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent146, align 8, !dbg !8050
  %message225 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %210, i32 0, i32 10, !dbg !8050
  %211 = load i8, i8* %message225, align 2, !dbg !8050
  %conv226 = zext i8 %211 to i32, !dbg !8050
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev224, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50, i64 0, i64 0), i32 %conv226) #13, !dbg !8050
  %212 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8052
  call void @esp_schedule_reset(%struct.esp* %212) #12, !dbg !8053
  store i32 0, i32* %retval, align 4, !dbg !8054
  br label %return, !dbg !8054

if.end227:                                        ; preds = %do.end220
  br label %if.end228

if.end228:                                        ; preds = %if.end227, %if.end202
  %213 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8055
  %active_cmd229 = getelementptr inbounds %struct.esp, %struct.esp* %213, i32 0, i32 5, !dbg !8057
  %214 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd229, align 8, !dbg !8057
  %tobool230 = icmp ne %struct.esp_cmd_entry* %214, null, !dbg !8055
  br i1 %tobool230, label %if.then231, label %if.end234, !dbg !8058

if.then231:                                       ; preds = %if.end228
  %215 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8059
  %flags232 = getelementptr inbounds %struct.esp, %struct.esp* %215, i32 0, i32 37, !dbg !8060
  %216 = load i32, i32* %flags232, align 8, !dbg !8061
  %or233 = or i32 %216, 16, !dbg !8061
  store i32 %or233, i32* %flags232, align 8, !dbg !8061
  br label %if.end234, !dbg !8059

if.end234:                                        ; preds = %if.then231, %if.end228
  br label %sw.epilog429, !dbg !8062

sw.bb235:                                         ; preds = %do.end
  %217 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8063
  call void @scsi_esp_cmd(%struct.esp* %217, i8 zeroext 1) #12, !dbg !8065
  %218 = load i32, i32* @esp_debug, align 4, !dbg !8066
  %and236 = and i32 %218, 16, !dbg !8068
  %tobool237 = icmp ne i32 %and236, 0, !dbg !8068
  br i1 %tobool237, label %if.then238, label %if.end247, !dbg !8069

if.then238:                                       ; preds = %sw.bb235
  call void @llvm.dbg.declare(metadata i32* %i239, metadata !8070, metadata !DIExpression()), !dbg !8072
  %call240 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i64 0, i64 0)) #13, !dbg !8073
  store i32 0, i32* %i239, align 4, !dbg !8074
  br label %for.cond, !dbg !8076

for.cond:                                         ; preds = %for.inc, %if.then238
  %219 = load i32, i32* %i239, align 4, !dbg !8077
  %220 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8079
  %msg_out_len = getelementptr inbounds %struct.esp, %struct.esp* %220, i32 0, i32 27, !dbg !8080
  %221 = load i32, i32* %msg_out_len, align 8, !dbg !8080
  %cmp241 = icmp slt i32 %219, %221, !dbg !8081
  br i1 %cmp241, label %for.body, label %for.end, !dbg !8082

for.body:                                         ; preds = %for.cond
  %222 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8083
  %msg_out = getelementptr inbounds %struct.esp, %struct.esp* %222, i32 0, i32 26, !dbg !8084
  %223 = load i32, i32* %i239, align 4, !dbg !8085
  %idxprom = sext i32 %223 to i64, !dbg !8083
  %arrayidx243 = getelementptr [8 x i8], [8 x i8]* %msg_out, i64 0, i64 %idxprom, !dbg !8083
  %224 = load i8, i8* %arrayidx243, align 1, !dbg !8083
  %conv244 = zext i8 %224 to i32, !dbg !8083
  %call245 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i32 %conv244) #13, !dbg !8086
  br label %for.inc, !dbg !8086

for.inc:                                          ; preds = %for.body
  %225 = load i32, i32* %i239, align 4, !dbg !8087
  %inc = add i32 %225, 1, !dbg !8087
  store i32 %inc, i32* %i239, align 4, !dbg !8087
  br label %for.cond, !dbg !8088, !llvm.loop !8089

for.end:                                          ; preds = %for.cond
  %call246 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !8091
  br label %if.end247, !dbg !8092

if.end247:                                        ; preds = %for.end, %sw.bb235
  %226 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8093
  %rev248 = getelementptr inbounds %struct.esp, %struct.esp* %226, i32 0, i32 36, !dbg !8095
  %227 = load i32, i32* %rev248, align 4, !dbg !8095
  %cmp249 = icmp eq i32 %227, 8, !dbg !8096
  br i1 %cmp249, label %if.then251, label %if.else267, !dbg !8097

if.then251:                                       ; preds = %if.end247
  call void @llvm.dbg.declare(metadata i32* %i252, metadata !8098, metadata !DIExpression()), !dbg !8100
  store i32 0, i32* %i252, align 4, !dbg !8101
  br label %for.cond253, !dbg !8103

for.cond253:                                      ; preds = %for.inc264, %if.then251
  %228 = load i32, i32* %i252, align 4, !dbg !8104
  %229 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8106
  %msg_out_len254 = getelementptr inbounds %struct.esp, %struct.esp* %229, i32 0, i32 27, !dbg !8107
  %230 = load i32, i32* %msg_out_len254, align 8, !dbg !8107
  %cmp255 = icmp slt i32 %228, %230, !dbg !8108
  br i1 %cmp255, label %for.body257, label %for.end266, !dbg !8109

for.body257:                                      ; preds = %for.cond253
  %231 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8110
  %ops258 = getelementptr inbounds %struct.esp, %struct.esp* %231, i32 0, i32 2, !dbg !8110
  %232 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops258, align 8, !dbg !8110
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %232, i32 0, i32 0, !dbg !8110
  %233 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !8110
  %234 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8110
  %235 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8110
  %msg_out259 = getelementptr inbounds %struct.esp, %struct.esp* %235, i32 0, i32 26, !dbg !8110
  %236 = load i32, i32* %i252, align 4, !dbg !8110
  %idxprom260 = sext i32 %236 to i64, !dbg !8110
  %arrayidx261 = getelementptr [8 x i8], [8 x i8]* %msg_out259, i64 0, i64 %idxprom260, !dbg !8110
  %237 = load i8, i8* %arrayidx261, align 1, !dbg !8110
  call void %233(%struct.esp* %234, i8 zeroext %237, i64 2) #12, !dbg !8110
  %238 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8112
  %ops262 = getelementptr inbounds %struct.esp, %struct.esp* %238, i32 0, i32 2, !dbg !8112
  %239 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops262, align 8, !dbg !8112
  %esp_write8263 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %239, i32 0, i32 0, !dbg !8112
  %240 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8263, align 8, !dbg !8112
  %241 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8112
  call void %240(%struct.esp* %241, i8 zeroext 0, i64 2) #12, !dbg !8112
  br label %for.inc264, !dbg !8113

for.inc264:                                       ; preds = %for.body257
  %242 = load i32, i32* %i252, align 4, !dbg !8114
  %inc265 = add i32 %242, 1, !dbg !8114
  store i32 %inc265, i32* %i252, align 4, !dbg !8114
  br label %for.cond253, !dbg !8115, !llvm.loop !8116

for.end266:                                       ; preds = %for.cond253
  %243 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8118
  call void @scsi_esp_cmd(%struct.esp* %243, i8 zeroext 16) #12, !dbg !8119
  br label %if.end305, !dbg !8120

if.else267:                                       ; preds = %if.end247
  %244 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8121
  %msg_out_len268 = getelementptr inbounds %struct.esp, %struct.esp* %244, i32 0, i32 27, !dbg !8124
  %245 = load i32, i32* %msg_out_len268, align 8, !dbg !8124
  %cmp269 = icmp eq i32 %245, 1, !dbg !8125
  br i1 %cmp269, label %if.then271, label %if.else276, !dbg !8126

if.then271:                                       ; preds = %if.else267
  %246 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8127
  %ops272 = getelementptr inbounds %struct.esp, %struct.esp* %246, i32 0, i32 2, !dbg !8127
  %247 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops272, align 8, !dbg !8127
  %esp_write8273 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %247, i32 0, i32 0, !dbg !8127
  %248 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8273, align 8, !dbg !8127
  %249 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8127
  %250 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8127
  %msg_out274 = getelementptr inbounds %struct.esp, %struct.esp* %250, i32 0, i32 26, !dbg !8127
  %arrayidx275 = getelementptr [8 x i8], [8 x i8]* %msg_out274, i64 0, i64 0, !dbg !8127
  %251 = load i8, i8* %arrayidx275, align 8, !dbg !8127
  call void %248(%struct.esp* %249, i8 zeroext %251, i64 2) #12, !dbg !8127
  %252 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8129
  call void @scsi_esp_cmd(%struct.esp* %252, i8 zeroext 16) #12, !dbg !8130
  br label %if.end304, !dbg !8131

if.else276:                                       ; preds = %if.else267
  %253 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8132
  %flags277 = getelementptr inbounds %struct.esp, %struct.esp* %253, i32 0, i32 37, !dbg !8134
  %254 = load i32, i32* %flags277, align 8, !dbg !8134
  %and278 = and i32 %254, 64, !dbg !8135
  %tobool279 = icmp ne i32 %and278, 0, !dbg !8135
  br i1 %tobool279, label %if.then280, label %if.else294, !dbg !8136

if.then280:                                       ; preds = %if.else276
  store i32 0, i32* %i, align 4, !dbg !8137
  br label %for.cond281, !dbg !8140

for.cond281:                                      ; preds = %for.inc291, %if.then280
  %255 = load i32, i32* %i, align 4, !dbg !8141
  %256 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8143
  %msg_out_len282 = getelementptr inbounds %struct.esp, %struct.esp* %256, i32 0, i32 27, !dbg !8144
  %257 = load i32, i32* %msg_out_len282, align 8, !dbg !8144
  %cmp283 = icmp slt i32 %255, %257, !dbg !8145
  br i1 %cmp283, label %for.body285, label %for.end293, !dbg !8146

for.body285:                                      ; preds = %for.cond281
  %258 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8147
  %ops286 = getelementptr inbounds %struct.esp, %struct.esp* %258, i32 0, i32 2, !dbg !8147
  %259 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops286, align 8, !dbg !8147
  %esp_write8287 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %259, i32 0, i32 0, !dbg !8147
  %260 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8287, align 8, !dbg !8147
  %261 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8147
  %262 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8147
  %msg_out288 = getelementptr inbounds %struct.esp, %struct.esp* %262, i32 0, i32 26, !dbg !8147
  %263 = load i32, i32* %i, align 4, !dbg !8147
  %idxprom289 = sext i32 %263 to i64, !dbg !8147
  %arrayidx290 = getelementptr [8 x i8], [8 x i8]* %msg_out288, i64 0, i64 %idxprom289, !dbg !8147
  %264 = load i8, i8* %arrayidx290, align 1, !dbg !8147
  call void %260(%struct.esp* %261, i8 zeroext %264, i64 2) #12, !dbg !8147
  br label %for.inc291, !dbg !8147

for.inc291:                                       ; preds = %for.body285
  %265 = load i32, i32* %i, align 4, !dbg !8148
  %inc292 = add i32 %265, 1, !dbg !8148
  store i32 %inc292, i32* %i, align 4, !dbg !8148
  br label %for.cond281, !dbg !8149, !llvm.loop !8150

for.end293:                                       ; preds = %for.cond281
  %266 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8152
  call void @scsi_esp_cmd(%struct.esp* %266, i8 zeroext 16) #12, !dbg !8153
  br label %if.end303, !dbg !8154

if.else294:                                       ; preds = %if.else276
  %267 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8155
  %command_block = getelementptr inbounds %struct.esp, %struct.esp* %267, i32 0, i32 8, !dbg !8157
  %268 = load i8*, i8** %command_block, align 8, !dbg !8157
  %269 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8158
  %msg_out295 = getelementptr inbounds %struct.esp, %struct.esp* %269, i32 0, i32 26, !dbg !8159
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %msg_out295, i64 0, i64 0, !dbg !8160
  %270 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8161
  %msg_out_len296 = getelementptr inbounds %struct.esp, %struct.esp* %270, i32 0, i32 27, !dbg !8162
  %271 = load i32, i32* %msg_out_len296, align 8, !dbg !8162
  %conv297 = sext i32 %271 to i64, !dbg !8161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %268, i8* align 8 %arraydecay, i64 %conv297, i1 false), !dbg !8160
  %272 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8163
  %ops298 = getelementptr inbounds %struct.esp, %struct.esp* %272, i32 0, i32 2, !dbg !8164
  %273 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops298, align 8, !dbg !8164
  %send_dma_cmd299 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %273, i32 0, i32 7, !dbg !8165
  %274 = load void (%struct.esp*, i32, i32, i32, i32, i8)*, void (%struct.esp*, i32, i32, i32, i32, i8)** %send_dma_cmd299, align 8, !dbg !8165
  %275 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8166
  %276 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8167
  %command_block_dma = getelementptr inbounds %struct.esp, %struct.esp* %276, i32 0, i32 9, !dbg !8168
  %277 = load i64, i64* %command_block_dma, align 8, !dbg !8168
  %conv300 = trunc i64 %277 to i32, !dbg !8167
  %278 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8169
  %msg_out_len301 = getelementptr inbounds %struct.esp, %struct.esp* %278, i32 0, i32 27, !dbg !8170
  %279 = load i32, i32* %msg_out_len301, align 8, !dbg !8170
  %280 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8171
  %msg_out_len302 = getelementptr inbounds %struct.esp, %struct.esp* %280, i32 0, i32 27, !dbg !8172
  %281 = load i32, i32* %msg_out_len302, align 8, !dbg !8172
  call void %274(%struct.esp* %275, i32 %conv300, i32 %279, i32 %281, i32 0, i8 zeroext -112) #12, !dbg !8163
  br label %if.end303

if.end303:                                        ; preds = %if.else294, %for.end293
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %if.then271
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %for.end266
  %282 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8173
  call void @esp_event(%struct.esp* %282, i8 zeroext 10) #12, !dbg !8174
  br label %sw.epilog429, !dbg !8175

sw.bb306:                                         ; preds = %do.end
  %283 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8176
  %rev307 = getelementptr inbounds %struct.esp, %struct.esp* %283, i32 0, i32 36, !dbg !8178
  %284 = load i32, i32* %rev307, align 4, !dbg !8178
  %cmp308 = icmp eq i32 %284, 8, !dbg !8179
  br i1 %cmp308, label %if.then310, label %if.else311, !dbg !8180

if.then310:                                       ; preds = %sw.bb306
  %285 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8181
  call void @scsi_esp_cmd(%struct.esp* %285, i8 zeroext 1) #12, !dbg !8183
  br label %if.end325, !dbg !8184

if.else311:                                       ; preds = %sw.bb306
  %286 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8185
  %msg_out_len312 = getelementptr inbounds %struct.esp, %struct.esp* %286, i32 0, i32 27, !dbg !8188
  %287 = load i32, i32* %msg_out_len312, align 8, !dbg !8188
  %cmp313 = icmp sgt i32 %287, 1, !dbg !8189
  br i1 %cmp313, label %if.then315, label %if.end318, !dbg !8190

if.then315:                                       ; preds = %if.else311
  %288 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8191
  %ops316 = getelementptr inbounds %struct.esp, %struct.esp* %288, i32 0, i32 2, !dbg !8192
  %289 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops316, align 8, !dbg !8192
  %dma_invalidate317 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %289, i32 0, i32 6, !dbg !8193
  %290 = load void (%struct.esp*)*, void (%struct.esp*)** %dma_invalidate317, align 8, !dbg !8193
  %291 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8194
  call void %290(%struct.esp* %291) #12, !dbg !8191
  br label %if.end318, !dbg !8191

if.end318:                                        ; preds = %if.then315, %if.else311
  %292 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8195
  %ireg319 = getelementptr inbounds %struct.esp, %struct.esp* %292, i32 0, i32 14, !dbg !8197
  %293 = load i8, i8* %ireg319, align 1, !dbg !8197
  %conv320 = zext i8 %293 to i32, !dbg !8195
  %and321 = and i32 %conv320, 32, !dbg !8198
  %tobool322 = icmp ne i32 %and321, 0, !dbg !8198
  br i1 %tobool322, label %if.end324, label %if.then323, !dbg !8199

if.then323:                                       ; preds = %if.end318
  %294 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8200
  call void @scsi_esp_cmd(%struct.esp* %294, i8 zeroext 0) #12, !dbg !8201
  br label %if.end324, !dbg !8201

if.end324:                                        ; preds = %if.then323, %if.end318
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.then310
  %295 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8202
  %msg_out_len326 = getelementptr inbounds %struct.esp, %struct.esp* %295, i32 0, i32 27, !dbg !8203
  store i32 0, i32* %msg_out_len326, align 8, !dbg !8204
  %296 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8205
  call void @esp_event(%struct.esp* %296, i8 zeroext 13) #12, !dbg !8206
  br label %again, !dbg !8207

sw.bb327:                                         ; preds = %do.end
  %297 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8208
  %ireg328 = getelementptr inbounds %struct.esp, %struct.esp* %297, i32 0, i32 14, !dbg !8210
  %298 = load i8, i8* %ireg328, align 1, !dbg !8210
  %conv329 = zext i8 %298 to i32, !dbg !8208
  %and330 = and i32 %conv329, 16, !dbg !8211
  %tobool331 = icmp ne i32 %and330, 0, !dbg !8211
  br i1 %tobool331, label %if.then332, label %if.end354, !dbg !8212

if.then332:                                       ; preds = %sw.bb327
  %299 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8213
  %rev333 = getelementptr inbounds %struct.esp, %struct.esp* %299, i32 0, i32 36, !dbg !8216
  %300 = load i32, i32* %rev333, align 4, !dbg !8216
  %cmp334 = icmp eq i32 %300, 8, !dbg !8217
  br i1 %cmp334, label %if.then336, label %if.else345, !dbg !8218

if.then336:                                       ; preds = %if.then332
  %301 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8219
  %ops337 = getelementptr inbounds %struct.esp, %struct.esp* %301, i32 0, i32 2, !dbg !8219
  %302 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops337, align 8, !dbg !8219
  %esp_read8338 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %302, i32 0, i32 1, !dbg !8219
  %303 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8338, align 8, !dbg !8219
  %304 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8219
  %call339 = call zeroext i8 %303(%struct.esp* %304, i64 9) #12, !dbg !8219
  %conv340 = zext i8 %call339 to i32, !dbg !8219
  %and341 = and i32 %conv340, 128, !dbg !8222
  %tobool342 = icmp ne i32 %and341, 0, !dbg !8222
  br i1 %tobool342, label %if.end344, label %if.then343, !dbg !8223

if.then343:                                       ; preds = %if.then336
  %305 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8224
  call void @scsi_esp_cmd(%struct.esp* %305, i8 zeroext 1) #12, !dbg !8225
  br label %if.end344, !dbg !8225

if.end344:                                        ; preds = %if.then343, %if.then336
  br label %if.end351, !dbg !8226

if.else345:                                       ; preds = %if.then332
  %306 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8227
  call void @scsi_esp_cmd(%struct.esp* %306, i8 zeroext 1) #12, !dbg !8229
  %307 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8230
  %rev346 = getelementptr inbounds %struct.esp, %struct.esp* %307, i32 0, i32 36, !dbg !8232
  %308 = load i32, i32* %rev346, align 4, !dbg !8232
  %cmp347 = icmp eq i32 %308, 0, !dbg !8233
  br i1 %cmp347, label %if.then349, label %if.end350, !dbg !8234

if.then349:                                       ; preds = %if.else345
  %309 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8235
  call void @scsi_esp_cmd(%struct.esp* %309, i8 zeroext 0) #12, !dbg !8236
  br label %if.end350, !dbg !8236

if.end350:                                        ; preds = %if.then349, %if.else345
  br label %if.end351

if.end351:                                        ; preds = %if.end350, %if.end344
  %310 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8237
  call void @scsi_esp_cmd(%struct.esp* %310, i8 zeroext 16) #12, !dbg !8238
  %311 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8239
  %flags352 = getelementptr inbounds %struct.esp, %struct.esp* %311, i32 0, i32 37, !dbg !8240
  %312 = load i32, i32* %flags352, align 8, !dbg !8241
  %or353 = or i32 %312, 16, !dbg !8241
  store i32 %or353, i32* %flags352, align 8, !dbg !8241
  store i32 1, i32* %retval, align 4, !dbg !8242
  br label %return, !dbg !8242

if.end354:                                        ; preds = %sw.bb327
  %313 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8243
  %ireg355 = getelementptr inbounds %struct.esp, %struct.esp* %313, i32 0, i32 14, !dbg !8245
  %314 = load i8, i8* %ireg355, align 1, !dbg !8245
  %conv356 = zext i8 %314 to i32, !dbg !8243
  %and357 = and i32 %conv356, 8, !dbg !8246
  %tobool358 = icmp ne i32 %and357, 0, !dbg !8246
  br i1 %tobool358, label %if.then359, label %if.else404, !dbg !8247

if.then359:                                       ; preds = %if.end354
  call void @llvm.dbg.declare(metadata i8* %val, metadata !8248, metadata !DIExpression()), !dbg !8250
  %315 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8251
  %rev360 = getelementptr inbounds %struct.esp, %struct.esp* %315, i32 0, i32 36, !dbg !8253
  %316 = load i32, i32* %rev360, align 4, !dbg !8253
  %cmp361 = icmp eq i32 %316, 8, !dbg !8254
  br i1 %cmp361, label %if.then363, label %if.else365, !dbg !8255

if.then363:                                       ; preds = %if.then359
  %317 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8256
  %fifo = getelementptr inbounds %struct.esp, %struct.esp* %317, i32 0, i32 23, !dbg !8257
  %arrayidx364 = getelementptr [16 x i8], [16 x i8]* %fifo, i64 0, i64 0, !dbg !8256
  %318 = load i8, i8* %arrayidx364, align 4, !dbg !8256
  store i8 %318, i8* %val, align 1, !dbg !8258
  br label %if.end369, !dbg !8259

if.else365:                                       ; preds = %if.then359
  %319 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8260
  %ops366 = getelementptr inbounds %struct.esp, %struct.esp* %319, i32 0, i32 2, !dbg !8260
  %320 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops366, align 8, !dbg !8260
  %esp_read8367 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %320, i32 0, i32 1, !dbg !8260
  %321 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8367, align 8, !dbg !8260
  %322 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8260
  %call368 = call zeroext i8 %321(%struct.esp* %322, i64 2) #12, !dbg !8260
  store i8 %call368, i8* %val, align 1, !dbg !8261
  br label %if.end369

if.end369:                                        ; preds = %if.else365, %if.then363
  %323 = load i8, i8* %val, align 1, !dbg !8262
  %324 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8263
  %msg_in = getelementptr inbounds %struct.esp, %struct.esp* %324, i32 0, i32 28, !dbg !8264
  %325 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8265
  %msg_in_len = getelementptr inbounds %struct.esp, %struct.esp* %325, i32 0, i32 29, !dbg !8266
  %326 = load i32, i32* %msg_in_len, align 4, !dbg !8267
  %inc370 = add i32 %326, 1, !dbg !8267
  store i32 %inc370, i32* %msg_in_len, align 4, !dbg !8267
  %idxprom371 = sext i32 %326 to i64, !dbg !8263
  %arrayidx372 = getelementptr [8 x i8], [8 x i8]* %msg_in, i64 0, i64 %idxprom371, !dbg !8263
  store i8 %323, i8* %arrayidx372, align 1, !dbg !8268
  br label %do.body373, !dbg !8269

do.body373:                                       ; preds = %if.end369
  %327 = load i32, i32* @esp_debug, align 4, !dbg !8270
  %and374 = and i32 %327, 8, !dbg !8270
  %tobool375 = icmp ne i32 %and374, 0, !dbg !8270
  br i1 %tobool375, label %if.then376, label %if.end380, !dbg !8273

if.then376:                                       ; preds = %do.body373
  %328 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8270
  %host377 = getelementptr inbounds %struct.esp, %struct.esp* %328, i32 0, i32 3, !dbg !8270
  %329 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host377, align 8, !dbg !8270
  %shost_gendev378 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %329, i32 0, i32 47, !dbg !8270
  %330 = load i8, i8* %val, align 1, !dbg !8270
  %conv379 = zext i8 %330 to i32, !dbg !8270
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev378, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0), i32 %conv379) #13, !dbg !8270
  br label %if.end380, !dbg !8270

if.end380:                                        ; preds = %if.then376, %do.body373
  br label %do.end381, !dbg !8273

do.end381:                                        ; preds = %if.end380
  %331 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8274
  %call382 = call i32 @esp_msgin_process(%struct.esp* %331) #12, !dbg !8276
  %tobool383 = icmp ne i32 %call382, 0, !dbg !8276
  br i1 %tobool383, label %if.end386, label %if.then384, !dbg !8277

if.then384:                                       ; preds = %do.end381
  %332 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8278
  %msg_in_len385 = getelementptr inbounds %struct.esp, %struct.esp* %332, i32 0, i32 29, !dbg !8279
  store i32 0, i32* %msg_in_len385, align 4, !dbg !8280
  br label %if.end386, !dbg !8278

if.end386:                                        ; preds = %if.then384, %do.end381
  %333 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8281
  %rev387 = getelementptr inbounds %struct.esp, %struct.esp* %333, i32 0, i32 36, !dbg !8283
  %334 = load i32, i32* %rev387, align 4, !dbg !8283
  %cmp388 = icmp eq i32 %334, 8, !dbg !8284
  br i1 %cmp388, label %if.then390, label %if.end391, !dbg !8285

if.then390:                                       ; preds = %if.end386
  %335 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8286
  call void @scsi_esp_cmd(%struct.esp* %335, i8 zeroext 1) #12, !dbg !8287
  br label %if.end391, !dbg !8287

if.end391:                                        ; preds = %if.then390, %if.end386
  %336 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8288
  call void @scsi_esp_cmd(%struct.esp* %336, i8 zeroext 18) #12, !dbg !8289
  %337 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8290
  %event392 = getelementptr inbounds %struct.esp, %struct.esp* %337, i32 0, i32 39, !dbg !8292
  %338 = load i8, i8* %event392, align 1, !dbg !8292
  %conv393 = zext i8 %338 to i32, !dbg !8290
  %cmp394 = icmp eq i32 %conv393, 16, !dbg !8293
  br i1 %cmp394, label %if.then396, label %if.end397, !dbg !8294

if.then396:                                       ; preds = %if.end391
  store i32 0, i32* %retval, align 4, !dbg !8295
  br label %return, !dbg !8295

if.end397:                                        ; preds = %if.end391
  %339 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8296
  %event398 = getelementptr inbounds %struct.esp, %struct.esp* %339, i32 0, i32 39, !dbg !8298
  %340 = load i8, i8* %event398, align 1, !dbg !8298
  %conv399 = zext i8 %340 to i32, !dbg !8296
  %cmp400 = icmp ne i32 %conv399, 12, !dbg !8299
  br i1 %cmp400, label %if.then402, label %if.end403, !dbg !8300

if.then402:                                       ; preds = %if.end397
  %341 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8301
  call void @esp_event(%struct.esp* %341, i8 zeroext 13) #12, !dbg !8302
  br label %if.end403, !dbg !8302

if.end403:                                        ; preds = %if.then402, %if.end397
  br label %if.end407, !dbg !8303

if.else404:                                       ; preds = %if.end354
  %342 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8304
  %host405 = getelementptr inbounds %struct.esp, %struct.esp* %342, i32 0, i32 3, !dbg !8304
  %343 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host405, align 8, !dbg !8304
  %shost_gendev406 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %343, i32 0, i32 47, !dbg !8304
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev406, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.53, i64 0, i64 0)) #13, !dbg !8304
  %344 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8306
  call void @esp_schedule_reset(%struct.esp* %344) #12, !dbg !8307
  store i32 0, i32* %retval, align 4, !dbg !8308
  br label %return, !dbg !8308

if.end407:                                        ; preds = %if.end403
  br label %sw.epilog429, !dbg !8309

sw.bb408:                                         ; preds = %do.end
  %345 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8310
  %command_block409 = getelementptr inbounds %struct.esp, %struct.esp* %345, i32 0, i32 8, !dbg !8311
  %346 = load i8*, i8** %command_block409, align 8, !dbg !8311
  %347 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8312
  %cmd_bytes_ptr = getelementptr inbounds %struct.esp, %struct.esp* %347, i32 0, i32 49, !dbg !8313
  %348 = load i8*, i8** %cmd_bytes_ptr, align 8, !dbg !8313
  %349 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8314
  %cmd_bytes_left = getelementptr inbounds %struct.esp, %struct.esp* %349, i32 0, i32 50, !dbg !8315
  %350 = load i32, i32* %cmd_bytes_left, align 8, !dbg !8315
  %conv410 = sext i32 %350 to i64, !dbg !8314
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %346, i8* align 1 %348, i64 %conv410, i1 false), !dbg !8316
  %351 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8317
  %352 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8318
  %cmd_bytes_left411 = getelementptr inbounds %struct.esp, %struct.esp* %352, i32 0, i32 50, !dbg !8319
  %353 = load i32, i32* %cmd_bytes_left411, align 8, !dbg !8319
  call void @esp_send_dma_cmd(%struct.esp* %351, i32 %353, i32 16, i32 16) #12, !dbg !8320
  %354 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8321
  call void @esp_event(%struct.esp* %354, i8 zeroext 2) #12, !dbg !8322
  %355 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8323
  %flags412 = getelementptr inbounds %struct.esp, %struct.esp* %355, i32 0, i32 37, !dbg !8324
  %356 = load i32, i32* %flags412, align 8, !dbg !8325
  %or413 = or i32 %356, 16, !dbg !8325
  store i32 %or413, i32* %flags412, align 8, !dbg !8325
  br label %sw.epilog429, !dbg !8326

sw.bb414:                                         ; preds = %do.end
  %357 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8327
  %ops415 = getelementptr inbounds %struct.esp, %struct.esp* %357, i32 0, i32 2, !dbg !8328
  %358 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops415, align 8, !dbg !8328
  %dma_invalidate416 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %358, i32 0, i32 6, !dbg !8329
  %359 = load void (%struct.esp*)*, void (%struct.esp*)** %dma_invalidate416, align 8, !dbg !8329
  %360 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8330
  call void %359(%struct.esp* %360) #12, !dbg !8327
  %361 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8331
  %ireg417 = getelementptr inbounds %struct.esp, %struct.esp* %361, i32 0, i32 14, !dbg !8333
  %362 = load i8, i8* %ireg417, align 1, !dbg !8333
  %conv418 = zext i8 %362 to i32, !dbg !8331
  %and419 = and i32 %conv418, 16, !dbg !8334
  %tobool420 = icmp ne i32 %and419, 0, !dbg !8334
  br i1 %tobool420, label %if.then421, label %if.end422, !dbg !8335

if.then421:                                       ; preds = %sw.bb414
  %363 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8336
  call void @esp_event(%struct.esp* %363, i8 zeroext 13) #12, !dbg !8338
  br label %again, !dbg !8339

if.end422:                                        ; preds = %sw.bb414
  %364 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8340
  call void @esp_schedule_reset(%struct.esp* %364) #12, !dbg !8341
  store i32 0, i32* %retval, align 4, !dbg !8342
  br label %return, !dbg !8342

sw.bb423:                                         ; preds = %do.end
  %365 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8343
  call void @scsi_esp_cmd(%struct.esp* %365, i8 zeroext 3) #12, !dbg !8344
  br label %sw.epilog429, !dbg !8345

sw.default424:                                    ; preds = %do.end
  %366 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8346
  %host425 = getelementptr inbounds %struct.esp, %struct.esp* %366, i32 0, i32 3, !dbg !8346
  %367 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host425, align 8, !dbg !8346
  %shost_gendev426 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %367, i32 0, i32 47, !dbg !8346
  %368 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8346
  %event427 = getelementptr inbounds %struct.esp, %struct.esp* %368, i32 0, i32 39, !dbg !8346
  %369 = load i8, i8* %event427, align 1, !dbg !8346
  %conv428 = zext i8 %369 to i32, !dbg !8346
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev426, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.54, i64 0, i64 0), i32 %conv428) #13, !dbg !8346
  %370 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8347
  call void @esp_schedule_reset(%struct.esp* %370) #12, !dbg !8348
  store i32 0, i32* %retval, align 4, !dbg !8349
  br label %return, !dbg !8349

sw.epilog429:                                     ; preds = %sw.bb423, %sw.bb408, %if.end407, %if.end305, %if.end234, %if.end142, %do.end62
  store i32 1, i32* %retval, align 4, !dbg !8350
  br label %return, !dbg !8350

return:                                           ; preds = %sw.epilog429, %sw.default424, %if.end422, %if.else404, %if.then396, %if.end351, %if.else222, %if.then137, %if.then125, %if.then105, %if.then88, %if.then73, %if.then47, %sw.default, %sw.bb10
  %371 = load i32, i32* %retval, align 4, !dbg !8351
  ret i32 %371, !dbg !8351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !8352 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8356, metadata !DIExpression()), !dbg !8357
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8358
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !8359
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8360
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8361
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !8362
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8363
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8364
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !8365
  ret void, !dbg !8366
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_put_ent(%struct.esp* %esp, %struct.esp_cmd_entry* %ent) #0 !dbg !8367 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !8370, metadata !DIExpression()), !dbg !8371
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  %0 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8374
  %list = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %0, i32 0, i32 0, !dbg !8375
  %1 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8376
  %esp_cmd_pool = getelementptr inbounds %struct.esp, %struct.esp* %1, i32 0, i32 20, !dbg !8377
  call void @list_add(%struct.list_head* %list, %struct.list_head* %esp_cmd_pool) #12, !dbg !8378
  ret void, !dbg !8379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_reset_cleanup_one(%struct.esp* %esp, %struct.esp_cmd_entry* %ent) #0 !dbg !8380 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !8381, metadata !DIExpression()), !dbg !8382
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !8383, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !8385, metadata !DIExpression()), !dbg !8386
  %0 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8387
  %cmd1 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %0, i32 0, i32 1, !dbg !8388
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !8388
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !8386
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8389
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8390
  call void @esp_unmap_dma(%struct.esp* %2, %struct.scsi_cmnd* %3) #12, !dbg !8391
  %4 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8392
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8393
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 1, !dbg !8394
  %6 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8394
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 21, !dbg !8395
  %7 = load i8*, i8** %hostdata, align 8, !dbg !8395
  %8 = bitcast i8* %7 to %struct.esp_lun_data*, !dbg !8393
  call void @esp_free_lun_tag(%struct.esp_cmd_entry* %4, %struct.esp_lun_data* %8) #12, !dbg !8396
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8397
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %9, i32 0, i32 24, !dbg !8398
  store i32 524288, i32* %result, align 8, !dbg !8399
  %10 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8400
  %flags = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %10, i32 0, i32 6, !dbg !8402
  %11 = load i8, i8* %flags, align 4, !dbg !8402
  %conv = zext i8 %11 to i32, !dbg !8400
  %and = and i32 %conv, 4, !dbg !8403
  %tobool = icmp ne i32 %and, 0, !dbg !8403
  br i1 %tobool, label %if.then, label %if.end, !dbg !8404

if.then:                                          ; preds = %entry
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8405
  %13 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8406
  call void @esp_unmap_sense(%struct.esp* %12, %struct.esp_cmd_entry* %13) #12, !dbg !8407
  br label %if.end, !dbg !8407

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8408
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 21, !dbg !8409
  %15 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !8409
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8410
  call void %15(%struct.scsi_cmnd* %16) #12, !dbg !8408
  %17 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8411
  %list = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %17, i32 0, i32 0, !dbg !8412
  call void @list_del(%struct.list_head* %list) #12, !dbg !8413
  %18 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8414
  %19 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8415
  call void @esp_put_ent(%struct.esp* %18, %struct.esp_cmd_entry* %19) #12, !dbg !8416
  ret void, !dbg !8417
}

; Function Attrs: noredzone
declare dso_local void @__starget_for_each_device(%struct.scsi_target*, i8*, void (%struct.scsi_device*, i8*)*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_clear_hold(%struct.scsi_device* %dev, i8* %data) #0 !dbg !8418 {
entry:
  %dev.addr = alloca %struct.scsi_device*, align 8
  %data.addr = alloca i8*, align 8
  %lp = alloca %struct.esp_lun_data*, align 8
  store %struct.scsi_device* %dev, %struct.scsi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev.addr, metadata !8421, metadata !DIExpression()), !dbg !8422
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8423, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.declare(metadata %struct.esp_lun_data** %lp, metadata !8425, metadata !DIExpression()), !dbg !8426
  %0 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !8427
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 21, !dbg !8428
  %1 = load i8*, i8** %hostdata, align 8, !dbg !8428
  %2 = bitcast i8* %1 to %struct.esp_lun_data*, !dbg !8427
  store %struct.esp_lun_data* %2, %struct.esp_lun_data** %lp, align 8, !dbg !8426
  br label %do.body, !dbg !8429

do.body:                                          ; preds = %entry
  %3 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp, align 8, !dbg !8430
  %num_tagged = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %3, i32 0, i32 1, !dbg !8430
  %4 = load i32, i32* %num_tagged, align 8, !dbg !8430
  %tobool = icmp ne i32 %4, 0, !dbg !8430
  %lnot = xor i1 %tobool, true, !dbg !8430
  %lnot1 = xor i1 %lnot, true, !dbg !8430
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8430
  %conv = sext i32 %lnot.ext to i64, !dbg !8430
  %tobool2 = icmp ne i64 %conv, 0, !dbg !8430
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8433

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !8430

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !8434

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !8436

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !8434

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 2059, i32 0, i64 12) #6, !dbg !8438, !srcloc !8440
  br label %do.end6, !dbg !8438

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !8434

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 301) #6, !dbg !8441, !srcloc !8444
  unreachable, !dbg !8445

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !8434

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !8434

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !8433

do.end10:                                         ; preds = %if.end
  %5 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp, align 8, !dbg !8446
  %hold = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %5, i32 0, i32 2, !dbg !8447
  store i32 0, i32* %hold, align 4, !dbg !8448
  ret void, !dbg !8449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !8450 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8451, metadata !DIExpression()), !dbg !8452
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8453
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #12, !dbg !8455
  br i1 %call, label %if.end, label %if.then, !dbg !8456

if.then:                                          ; preds = %entry
  br label %return, !dbg !8457

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8458
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8459
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8459
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8460
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8461
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8461
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #12, !dbg !8462
  br label %return, !dbg !8463

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !8464 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8467, metadata !DIExpression()), !dbg !8468
  ret i1 true, !dbg !8469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8470 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8473, metadata !DIExpression()), !dbg !8474
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8475, metadata !DIExpression()), !dbg !8476
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8477
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8478
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8479
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !8480
  br label %do.body, !dbg !8481

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !8482

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !8484

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !8482

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8486
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8486
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8486
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !8486
  br label %do.end5, !dbg !8486

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !8482

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !8488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !8489 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8490, metadata !DIExpression()), !dbg !8491
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8492, metadata !DIExpression()), !dbg !8493
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8494
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8495
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8496
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !8497
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8497
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #12, !dbg !8498
  ret void, !dbg !8499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8500 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8503, metadata !DIExpression()), !dbg !8504
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8505, metadata !DIExpression()), !dbg !8506
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8507, metadata !DIExpression()), !dbg !8508
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8509
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8511
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8512
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #12, !dbg !8513
  br i1 %call, label %if.end, label %if.then, !dbg !8514

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !8515

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8516
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8517
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !8518
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !8519
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8520
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8521
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !8522
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !8523
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8524
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8525
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !8526
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !8527
  br label %do.body, !dbg !8528

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !8529

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !8531

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !8529

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8533
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8533
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !8533
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !8533
  br label %do.end7, !dbg !8533

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !8529

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !8535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8536 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8539, metadata !DIExpression()), !dbg !8540
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8541, metadata !DIExpression()), !dbg !8542
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8543, metadata !DIExpression()), !dbg !8544
  ret i1 true, !dbg !8545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_unmap_dma(%struct.esp* %esp, %struct.scsi_cmnd* %cmd) #0 !dbg !8546 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !8549, metadata !DIExpression()), !dbg !8550
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !8551, metadata !DIExpression()), !dbg !8552
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8553
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 37, !dbg !8555
  %1 = load i32, i32* %flags, align 8, !dbg !8555
  %and = and i32 %1, 128, !dbg !8556
  %tobool = icmp ne i32 %and, 0, !dbg !8556
  br i1 %tobool, label %if.end, label %if.then, !dbg !8557

if.then:                                          ; preds = %entry
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8558
  call void @scsi_dma_unmap(%struct.scsi_cmnd* %2) #12, !dbg !8559
  br label %if.end, !dbg !8559

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_free_lun_tag(%struct.esp_cmd_entry* %ent, %struct.esp_lun_data* %lp) #0 !dbg !8561 {
entry:
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %lp.addr = alloca %struct.esp_lun_data*, align 8
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !8564, metadata !DIExpression()), !dbg !8565
  store %struct.esp_lun_data* %lp, %struct.esp_lun_data** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_lun_data** %lp.addr, metadata !8566, metadata !DIExpression()), !dbg !8567
  %0 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8568
  %orig_tag = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %0, i32 0, i32 8, !dbg !8570
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %orig_tag, i64 0, i64 0, !dbg !8568
  %1 = load i8, i8* %arrayidx, align 1, !dbg !8568
  %tobool = icmp ne i8 %1, 0, !dbg !8568
  br i1 %tobool, label %if.then, label %if.else, !dbg !8571

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8572

do.body:                                          ; preds = %if.then
  %2 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !8574
  %tagged_cmds = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %2, i32 0, i32 3, !dbg !8574
  %3 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8574
  %orig_tag1 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %3, i32 0, i32 8, !dbg !8574
  %arrayidx2 = getelementptr [2 x i8], [2 x i8]* %orig_tag1, i64 0, i64 1, !dbg !8574
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !8574
  %idxprom = zext i8 %4 to i64, !dbg !8574
  %arrayidx3 = getelementptr [256 x %struct.esp_cmd_entry*], [256 x %struct.esp_cmd_entry*]* %tagged_cmds, i64 0, i64 %idxprom, !dbg !8574
  %5 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %arrayidx3, align 8, !dbg !8574
  %6 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8574
  %cmp = icmp ne %struct.esp_cmd_entry* %5, %6, !dbg !8574
  %lnot = xor i1 %cmp, true, !dbg !8574
  %lnot4 = xor i1 %lnot, true, !dbg !8574
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8574
  %conv = sext i32 %lnot.ext to i64, !dbg !8574
  %tobool5 = icmp ne i64 %conv, 0, !dbg !8574
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !8577

if.then6:                                         ; preds = %do.body
  br label %do.body7, !dbg !8574

do.body7:                                         ; preds = %if.then6
  br label %do.body8, !dbg !8578

do.body8:                                         ; preds = %do.body7
  br label %do.end, !dbg !8580

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !8578

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 621, i32 0, i64 12) #6, !dbg !8582, !srcloc !8584
  br label %do.end10, !dbg !8582

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !8578

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 295) #6, !dbg !8585, !srcloc !8588
  unreachable, !dbg !8589

do.end12:                                         ; No predecessors!
  br label %do.end13, !dbg !8578

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !8578

if.end:                                           ; preds = %do.end13, %do.body
  br label %do.end14, !dbg !8577

do.end14:                                         ; preds = %if.end
  %7 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !8590
  %tagged_cmds15 = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %7, i32 0, i32 3, !dbg !8591
  %8 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8592
  %orig_tag16 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %8, i32 0, i32 8, !dbg !8593
  %arrayidx17 = getelementptr [2 x i8], [2 x i8]* %orig_tag16, i64 0, i64 1, !dbg !8592
  %9 = load i8, i8* %arrayidx17, align 1, !dbg !8592
  %idxprom18 = zext i8 %9 to i64, !dbg !8590
  %arrayidx19 = getelementptr [256 x %struct.esp_cmd_entry*], [256 x %struct.esp_cmd_entry*]* %tagged_cmds15, i64 0, i64 %idxprom18, !dbg !8590
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %arrayidx19, align 8, !dbg !8594
  %10 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !8595
  %num_tagged = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %10, i32 0, i32 1, !dbg !8596
  %11 = load i32, i32* %num_tagged, align 8, !dbg !8597
  %dec = add i32 %11, -1, !dbg !8597
  store i32 %dec, i32* %num_tagged, align 8, !dbg !8597
  br label %if.end41, !dbg !8598

if.else:                                          ; preds = %entry
  br label %do.body20, !dbg !8599

do.body20:                                        ; preds = %if.else
  %12 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !8601
  %non_tagged_cmd = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %12, i32 0, i32 0, !dbg !8601
  %13 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %non_tagged_cmd, align 8, !dbg !8601
  %14 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8601
  %cmp21 = icmp ne %struct.esp_cmd_entry* %13, %14, !dbg !8601
  %lnot23 = xor i1 %cmp21, true, !dbg !8601
  %lnot25 = xor i1 %lnot23, true, !dbg !8601
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !8601
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !8601
  %tobool28 = icmp ne i64 %conv27, 0, !dbg !8601
  br i1 %tobool28, label %if.then29, label %if.end38, !dbg !8604

if.then29:                                        ; preds = %do.body20
  br label %do.body30, !dbg !8601

do.body30:                                        ; preds = %if.then29
  br label %do.body31, !dbg !8605

do.body31:                                        ; preds = %do.body30
  br label %do.end32, !dbg !8607

do.end32:                                         ; preds = %do.body31
  br label %do.body33, !dbg !8605

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 625, i32 0, i64 12) #6, !dbg !8609, !srcloc !8611
  br label %do.end34, !dbg !8609

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !8605

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 296) #6, !dbg !8612, !srcloc !8615
  unreachable, !dbg !8616

do.end36:                                         ; No predecessors!
  br label %do.end37, !dbg !8605

do.end37:                                         ; preds = %do.end36
  br label %if.end38, !dbg !8605

if.end38:                                         ; preds = %do.end37, %do.body20
  br label %do.end39, !dbg !8604

do.end39:                                         ; preds = %if.end38
  %15 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !8617
  %non_tagged_cmd40 = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %15, i32 0, i32 0, !dbg !8618
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %non_tagged_cmd40, align 8, !dbg !8619
  br label %if.end41

if.end41:                                         ; preds = %do.end39, %do.end14
  ret void, !dbg !8620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_unmap_sense(%struct.esp* %esp, %struct.esp_cmd_entry* %ent) #0 !dbg !8621 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !8622, metadata !DIExpression()), !dbg !8623
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !8624, metadata !DIExpression()), !dbg !8625
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8626
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 37, !dbg !8628
  %1 = load i32, i32* %flags, align 8, !dbg !8628
  %and = and i32 %1, 128, !dbg !8629
  %tobool = icmp ne i32 %and, 0, !dbg !8629
  br i1 %tobool, label %if.end, label %if.then, !dbg !8630

if.then:                                          ; preds = %entry
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8631
  %dev = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 4, !dbg !8631
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8631
  %4 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8631
  %sense_dma = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %4, i32 0, i32 13, !dbg !8631
  %5 = load i64, i64* %sense_dma, align 8, !dbg !8631
  call void @dma_unmap_single_attrs(%struct.device* %3, i64 %5, i64 96, i32 2, i64 0) #12, !dbg !8631
  br label %if.end, !dbg !8631

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8632
  %sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %6, i32 0, i32 11, !dbg !8633
  store i8* null, i8** %sense_ptr, align 8, !dbg !8634
  ret void, !dbg !8635
}

; Function Attrs: noredzone
declare dso_local void @scsi_dma_unmap(%struct.scsi_cmnd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #0 !dbg !8636 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8639, metadata !DIExpression()), !dbg !8640
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !8641, metadata !DIExpression()), !dbg !8642
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8643, metadata !DIExpression()), !dbg !8644
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !8645, metadata !DIExpression()), !dbg !8646
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !8647, metadata !DIExpression()), !dbg !8648
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8649
  %1 = load i64, i64* %addr.addr, align 8, !dbg !8650
  %2 = load i64, i64* %size.addr, align 8, !dbg !8651
  %3 = load i32, i32* %dir.addr, align 4, !dbg !8652
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !8653
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #12, !dbg !8654
  ret void, !dbg !8655
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #3

; Function Attrs: nounwind readnone
declare i8* @llvm.returnaddress(i32 immarg) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_event(%struct.esp* %esp, i8 zeroext %val) #0 !dbg !8656 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %val.addr = alloca i8, align 1
  %p = alloca %struct.esp_event_ent*, align 8
  %idx = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !8657, metadata !DIExpression()), !dbg !8658
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !8659, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.declare(metadata %struct.esp_event_ent** %p, metadata !8661, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8663, metadata !DIExpression()), !dbg !8664
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8665
  %esp_event_cur = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 25, !dbg !8666
  %1 = load i32, i32* %esp_event_cur, align 4, !dbg !8666
  store i32 %1, i32* %idx, align 4, !dbg !8664
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8667
  %esp_event_log = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 24, !dbg !8668
  %3 = load i32, i32* %idx, align 4, !dbg !8669
  %idxprom = sext i32 %3 to i64, !dbg !8667
  %arrayidx = getelementptr [32 x %struct.esp_event_ent], [32 x %struct.esp_event_ent]* %esp_event_log, i64 0, i64 %idxprom, !dbg !8667
  store %struct.esp_event_ent* %arrayidx, %struct.esp_event_ent** %p, align 8, !dbg !8670
  %4 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !8671
  %type = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %4, i32 0, i32 0, !dbg !8672
  store i8 1, i8* %type, align 1, !dbg !8673
  %5 = load i8, i8* %val.addr, align 1, !dbg !8674
  %6 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !8675
  %val1 = getelementptr inbounds %struct.esp_event_ent, %struct.esp_event_ent* %6, i32 0, i32 1, !dbg !8676
  store i8 %5, i8* %val1, align 1, !dbg !8677
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8678
  %8 = load %struct.esp_event_ent*, %struct.esp_event_ent** %p, align 8, !dbg !8679
  call void @esp_log_fill_regs(%struct.esp* %7, %struct.esp_event_ent* %8) #12, !dbg !8680
  %9 = load i32, i32* %idx, align 4, !dbg !8681
  %add = add i32 %9, 1, !dbg !8682
  %and = and i32 %add, 31, !dbg !8683
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8684
  %esp_event_cur2 = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 25, !dbg !8685
  store i32 %and, i32* %esp_event_cur2, align 4, !dbg !8686
  %11 = load i8, i8* %val.addr, align 1, !dbg !8687
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8688
  %event = getelementptr inbounds %struct.esp, %struct.esp* %12, i32 0, i32 39, !dbg !8689
  store i8 %11, i8* %event, align 1, !dbg !8690
  ret void, !dbg !8691
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_cmd_is_done(%struct.esp* %esp, %struct.esp_cmd_entry* %ent, %struct.scsi_cmnd* %cmd, i32 %result) #0 !dbg !8692 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %result.addr = alloca i32, align 4
  %dev = alloca %struct.scsi_device*, align 8
  %tgt = alloca i32, align 4
  %lun = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !8695, metadata !DIExpression()), !dbg !8696
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !8697, metadata !DIExpression()), !dbg !8698
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !8699, metadata !DIExpression()), !dbg !8700
  store i32 %result, i32* %result.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !8701, metadata !DIExpression()), !dbg !8702
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev, metadata !8703, metadata !DIExpression()), !dbg !8704
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8705
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !8706
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8706
  store %struct.scsi_device* %1, %struct.scsi_device** %dev, align 8, !dbg !8704
  call void @llvm.dbg.declare(metadata i32* %tgt, metadata !8707, metadata !DIExpression()), !dbg !8708
  %2 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !8709
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 16, !dbg !8710
  %3 = load i32, i32* %id, align 8, !dbg !8710
  store i32 %3, i32* %tgt, align 4, !dbg !8708
  call void @llvm.dbg.declare(metadata i32* %lun, metadata !8711, metadata !DIExpression()), !dbg !8712
  %4 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !8713
  %lun1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 18, !dbg !8714
  %5 = load i64, i64* %lun1, align 8, !dbg !8714
  %conv = trunc i64 %5 to i32, !dbg !8713
  store i32 %conv, i32* %lun, align 4, !dbg !8712
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8715
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 5, !dbg !8716
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !8717
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8718
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8719
  call void @esp_unmap_dma(%struct.esp* %7, %struct.scsi_cmnd* %8) #12, !dbg !8720
  %9 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8721
  %10 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !8722
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 21, !dbg !8723
  %11 = load i8*, i8** %hostdata, align 8, !dbg !8723
  %12 = bitcast i8* %11 to %struct.esp_lun_data*, !dbg !8722
  call void @esp_free_lun_tag(%struct.esp_cmd_entry* %9, %struct.esp_lun_data* %12) #12, !dbg !8724
  %13 = load i32, i32* %result.addr, align 4, !dbg !8725
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8726
  %result2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 24, !dbg !8727
  store i32 %13, i32* %result2, align 8, !dbg !8728
  %15 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8729
  %eh_done = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %15, i32 0, i32 14, !dbg !8731
  %16 = load %struct.completion*, %struct.completion** %eh_done, align 8, !dbg !8731
  %tobool = icmp ne %struct.completion* %16, null, !dbg !8729
  br i1 %tobool, label %if.then, label %if.end, !dbg !8732

if.then:                                          ; preds = %entry
  %17 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8733
  %eh_done3 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %17, i32 0, i32 14, !dbg !8735
  %18 = load %struct.completion*, %struct.completion** %eh_done3, align 8, !dbg !8735
  call void @complete(%struct.completion* %18) #12, !dbg !8736
  %19 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8737
  %eh_done4 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %19, i32 0, i32 14, !dbg !8738
  store %struct.completion* null, %struct.completion** %eh_done4, align 8, !dbg !8739
  br label %if.end, !dbg !8740

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8741
  %flags = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %20, i32 0, i32 6, !dbg !8743
  %21 = load i8, i8* %flags, align 4, !dbg !8743
  %conv5 = zext i8 %21 to i32, !dbg !8741
  %and = and i32 %conv5, 4, !dbg !8744
  %tobool6 = icmp ne i32 %and, 0, !dbg !8744
  br i1 %tobool6, label %if.then7, label %if.end21, !dbg !8745

if.then7:                                         ; preds = %if.end
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8746
  %23 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8748
  call void @esp_unmap_sense(%struct.esp* %22, %struct.esp_cmd_entry* %23) #12, !dbg !8749
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8750
  %result8 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 24, !dbg !8751
  store i32 134217730, i32* %result8, align 8, !dbg !8752
  %25 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8753
  %flags9 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %25, i32 0, i32 6, !dbg !8754
  %26 = load i8, i8* %flags9, align 4, !dbg !8755
  %conv10 = zext i8 %26 to i32, !dbg !8755
  %and11 = and i32 %conv10, -5, !dbg !8755
  %conv12 = trunc i32 %and11 to i8, !dbg !8755
  store i8 %conv12, i8* %flags9, align 4, !dbg !8755
  %27 = load i32, i32* @esp_debug, align 4, !dbg !8756
  %and13 = and i32 %27, 1024, !dbg !8758
  %tobool14 = icmp ne i32 %and13, 0, !dbg !8758
  br i1 %tobool14, label %if.then15, label %if.end20, !dbg !8759

if.then15:                                        ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8760, metadata !DIExpression()), !dbg !8762
  %28 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8763
  %host = getelementptr inbounds %struct.esp, %struct.esp* %28, i32 0, i32 3, !dbg !8764
  %29 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8764
  %unique_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %29, i32 0, i32 22, !dbg !8765
  %30 = load i32, i32* %unique_id, align 8, !dbg !8765
  %31 = load i32, i32* %tgt, align 4, !dbg !8766
  %32 = load i32, i32* %lun, align 4, !dbg !8767
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19, i64 0, i64 0), i32 %30, i32 %31, i32 %32) #13, !dbg !8768
  store i32 0, i32* %i, align 4, !dbg !8769
  br label %for.cond, !dbg !8771

for.cond:                                         ; preds = %for.inc, %if.then15
  %33 = load i32, i32* %i, align 4, !dbg !8772
  %cmp = icmp slt i32 %33, 18, !dbg !8774
  br i1 %cmp, label %for.body, label %for.end, !dbg !8775

for.body:                                         ; preds = %for.cond
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8776
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %34, i32 0, i32 20, !dbg !8777
  %35 = load i8*, i8** %sense_buffer, align 8, !dbg !8777
  %36 = load i32, i32* %i, align 4, !dbg !8778
  %idxprom = sext i32 %36 to i64, !dbg !8776
  %arrayidx = getelementptr i8, i8* %35, i64 %idxprom, !dbg !8776
  %37 = load i8, i8* %arrayidx, align 1, !dbg !8776
  %conv17 = zext i8 %37 to i32, !dbg !8776
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i32 %conv17) #13, !dbg !8779
  br label %for.inc, !dbg !8779

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !8780
  %inc = add i32 %38, 1, !dbg !8780
  store i32 %inc, i32* %i, align 4, !dbg !8780
  br label %for.cond, !dbg !8781, !llvm.loop !8782

for.end:                                          ; preds = %for.cond
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !8784
  br label %if.end20, !dbg !8785

if.end20:                                         ; preds = %for.end, %if.then7
  br label %if.end21, !dbg !8786

if.end21:                                         ; preds = %if.end20, %if.end
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8787
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %39, i32 0, i32 21, !dbg !8788
  %40 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !8788
  %41 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8789
  call void %40(%struct.scsi_cmnd* %41) #12, !dbg !8787
  %42 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8790
  %list = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %42, i32 0, i32 0, !dbg !8791
  call void @list_del(%struct.list_head* %list) #12, !dbg !8792
  %43 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8793
  %44 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !8794
  call void @esp_put_ent(%struct.esp* %43, %struct.esp_cmd_entry* %44) #12, !dbg !8795
  %45 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8796
  call void @esp_maybe_execute_command(%struct.esp* %45) #12, !dbg !8797
  ret void, !dbg !8798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !8799 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8800, metadata !DIExpression()), !dbg !8801
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8802, metadata !DIExpression()), !dbg !8803
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8804
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !8805
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8806
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8807
  call void @list_add(%struct.list_head* %1, %struct.list_head* %2) #12, !dbg !8808
  ret void, !dbg !8809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_flush_fifo(%struct.esp* %esp) #0 !dbg !8810 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %lim = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8813
  call void @scsi_esp_cmd(%struct.esp* %0, i8 zeroext 1) #12, !dbg !8814
  %1 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8815
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %1, i32 0, i32 36, !dbg !8817
  %2 = load i32, i32* %rev, align 4, !dbg !8817
  %cmp = icmp eq i32 %2, 2, !dbg !8818
  br i1 %cmp, label %if.then, label %if.end4, !dbg !8819

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %lim, metadata !8820, metadata !DIExpression()), !dbg !8822
  store i32 1000, i32* %lim, align 4, !dbg !8822
  br label %while.cond, !dbg !8823

while.cond:                                       ; preds = %if.end, %if.then
  %3 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8824
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %3, i32 0, i32 2, !dbg !8824
  %4 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !8824
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %4, i32 0, i32 1, !dbg !8824
  %5 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !8824
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8824
  %call = call zeroext i8 %5(%struct.esp* %6, i64 7) #12, !dbg !8824
  %conv = zext i8 %call to i32, !dbg !8824
  %and = and i32 %conv, 31, !dbg !8825
  %tobool = icmp ne i32 %and, 0, !dbg !8823
  br i1 %tobool, label %while.body, label %while.end, !dbg !8823

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %lim, align 4, !dbg !8826
  %dec = add i32 %7, -1, !dbg !8826
  store i32 %dec, i32* %lim, align 4, !dbg !8826
  %cmp1 = icmp eq i32 %dec, 0, !dbg !8829
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !8830

if.then3:                                         ; preds = %while.body
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8831
  %host = getelementptr inbounds %struct.esp, %struct.esp* %8, i32 0, i32 3, !dbg !8831
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8831
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 47, !dbg !8831
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !8831
  br label %while.end, !dbg !8833

if.end:                                           ; preds = %while.body
  call void @__const_udelay(i64 4295) #12, !dbg !8834
  br label %while.cond, !dbg !8823, !llvm.loop !8839

while.end:                                        ; preds = %if.then3, %while.cond
  br label %if.end4, !dbg !8841

if.end4:                                          ; preds = %while.end, %entry
  ret void, !dbg !8842
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_maybe_execute_command(%struct.esp* %esp) #0 !dbg !8843 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  %dev = alloca %struct.scsi_device*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %select_and_stop = alloca i8, align 1
  %tgt = alloca i32, align 4
  %lun = alloca i32, align 4
  %i = alloca i32, align 4
  %val = alloca i32, align 4
  %start_cmd = alloca i32, align 4
  %p = alloca i8*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !8844, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !8846, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev, metadata !8848, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !8850, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !8852, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.declare(metadata i8* %select_and_stop, metadata !8854, metadata !DIExpression()), !dbg !8855
  store i8 0, i8* %select_and_stop, align 1, !dbg !8855
  call void @llvm.dbg.declare(metadata i32* %tgt, metadata !8856, metadata !DIExpression()), !dbg !8857
  call void @llvm.dbg.declare(metadata i32* %lun, metadata !8858, metadata !DIExpression()), !dbg !8859
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8860, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8862, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.declare(metadata i32* %start_cmd, metadata !8864, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8866, metadata !DIExpression()), !dbg !8867
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8868
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 5, !dbg !8870
  %1 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !8870
  %tobool = icmp ne %struct.esp_cmd_entry* %1, null, !dbg !8868
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8871

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8872
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 37, !dbg !8873
  %3 = load i32, i32* %flags, align 8, !dbg !8873
  %and = and i32 %3, 2, !dbg !8874
  %tobool1 = icmp ne i32 %and, 0, !dbg !8874
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8875

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !8876

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8877
  %call = call %struct.esp_cmd_entry* @find_and_prep_issuable_command(%struct.esp* %4) #12, !dbg !8878
  store %struct.esp_cmd_entry* %call, %struct.esp_cmd_entry** %ent, align 8, !dbg !8879
  %5 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !8880
  %tobool2 = icmp ne %struct.esp_cmd_entry* %5, null, !dbg !8880
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8882

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !8883

if.end4:                                          ; preds = %if.end
  %6 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !8884
  %flags5 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %6, i32 0, i32 6, !dbg !8886
  %7 = load i8, i8* %flags5, align 4, !dbg !8886
  %conv = zext i8 %7 to i32, !dbg !8884
  %and6 = and i32 %conv, 4, !dbg !8887
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8887
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8888

if.then8:                                         ; preds = %if.end4
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8889
  %9 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !8891
  call void @esp_autosense(%struct.esp* %8, %struct.esp_cmd_entry* %9) #12, !dbg !8892
  br label %return, !dbg !8893

if.end9:                                          ; preds = %if.end4
  %10 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !8894
  %cmd10 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %10, i32 0, i32 1, !dbg !8895
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd10, align 8, !dbg !8895
  store %struct.scsi_cmnd* %11, %struct.scsi_cmnd** %cmd, align 8, !dbg !8896
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8897
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %12, i32 0, i32 1, !dbg !8898
  %13 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8898
  store %struct.scsi_device* %13, %struct.scsi_device** %dev, align 8, !dbg !8899
  %14 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !8900
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %14, i32 0, i32 16, !dbg !8901
  %15 = load i32, i32* %id, align 8, !dbg !8901
  store i32 %15, i32* %tgt, align 4, !dbg !8902
  %16 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !8903
  %lun11 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %16, i32 0, i32 18, !dbg !8904
  %17 = load i64, i64* %lun11, align 8, !dbg !8904
  %conv12 = trunc i64 %17 to i32, !dbg !8903
  store i32 %conv12, i32* %lun, align 4, !dbg !8905
  %18 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8906
  %target = getelementptr inbounds %struct.esp, %struct.esp* %18, i32 0, i32 21, !dbg !8907
  %19 = load i32, i32* %tgt, align 4, !dbg !8908
  %idxprom = sext i32 %19 to i64, !dbg !8906
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !8906
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !8909
  %20 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !8910
  %list = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %20, i32 0, i32 0, !dbg !8911
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8912
  %active_cmds = getelementptr inbounds %struct.esp, %struct.esp* %21, i32 0, i32 7, !dbg !8913
  call void @list_move(%struct.list_head* %list, %struct.list_head* %active_cmds) #12, !dbg !8914
  %22 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !8915
  %23 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8916
  %active_cmd13 = getelementptr inbounds %struct.esp, %struct.esp* %23, i32 0, i32 5, !dbg !8917
  store %struct.esp_cmd_entry* %22, %struct.esp_cmd_entry** %active_cmd13, align 8, !dbg !8918
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8919
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8920
  call void @esp_map_dma(%struct.esp* %24, %struct.scsi_cmnd* %25) #12, !dbg !8921
  %26 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8922
  %27 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !8923
  call void @esp_save_pointers(%struct.esp* %26, %struct.esp_cmd_entry* %27) #12, !dbg !8924
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8925
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %28, i32 0, i32 12, !dbg !8927
  %29 = load i16, i16* %cmd_len, align 4, !dbg !8927
  %conv14 = zext i16 %29 to i32, !dbg !8925
  %cmp = icmp eq i32 %conv14, 6, !dbg !8928
  br i1 %cmp, label %if.end27, label %lor.lhs.false16, !dbg !8929

lor.lhs.false16:                                  ; preds = %if.end9
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8930
  %cmd_len17 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %30, i32 0, i32 12, !dbg !8931
  %31 = load i16, i16* %cmd_len17, align 4, !dbg !8931
  %conv18 = zext i16 %31 to i32, !dbg !8930
  %cmp19 = icmp eq i32 %conv18, 10, !dbg !8932
  br i1 %cmp19, label %if.end27, label %lor.lhs.false21, !dbg !8933

lor.lhs.false21:                                  ; preds = %lor.lhs.false16
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8934
  %cmd_len22 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %32, i32 0, i32 12, !dbg !8935
  %33 = load i16, i16* %cmd_len22, align 4, !dbg !8935
  %conv23 = zext i16 %33 to i32, !dbg !8934
  %cmp24 = icmp eq i32 %conv23, 12, !dbg !8936
  br i1 %cmp24, label %if.end27, label %if.then26, !dbg !8937

if.then26:                                        ; preds = %lor.lhs.false21
  store i8 1, i8* %select_and_stop, align 1, !dbg !8938
  br label %if.end27, !dbg !8939

if.end27:                                         ; preds = %if.then26, %lor.lhs.false21, %lor.lhs.false16, %if.end9
  %34 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8940
  %command_block = getelementptr inbounds %struct.esp, %struct.esp* %34, i32 0, i32 8, !dbg !8941
  %35 = load i8*, i8** %command_block, align 8, !dbg !8941
  store i8* %35, i8** %p, align 8, !dbg !8942
  %36 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8943
  %msg_out_len = getelementptr inbounds %struct.esp, %struct.esp* %36, i32 0, i32 27, !dbg !8944
  store i32 0, i32* %msg_out_len, align 8, !dbg !8945
  %37 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8946
  %flags28 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %37, i32 0, i32 3, !dbg !8948
  %38 = load i8, i8* %flags28, align 1, !dbg !8948
  %conv29 = zext i8 %38 to i32, !dbg !8946
  %and30 = and i32 %conv29, 64, !dbg !8949
  %tobool31 = icmp ne i32 %and30, 0, !dbg !8949
  br i1 %tobool31, label %if.then32, label %if.end107, !dbg !8950

if.then32:                                        ; preds = %if.end27
  %39 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8951
  %flags33 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %39, i32 0, i32 3, !dbg !8954
  %40 = load i8, i8* %flags33, align 1, !dbg !8954
  %conv34 = zext i8 %40 to i32, !dbg !8951
  %and35 = and i32 %conv34, 128, !dbg !8955
  %tobool36 = icmp ne i32 %and35, 0, !dbg !8955
  br i1 %tobool36, label %if.then37, label %if.end42, !dbg !8956

if.then37:                                        ; preds = %if.then32
  %41 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8957
  %flags38 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %41, i32 0, i32 3, !dbg !8959
  %42 = load i8, i8* %flags38, align 1, !dbg !8960
  %conv39 = zext i8 %42 to i32, !dbg !8960
  %and40 = and i32 %conv39, -3, !dbg !8960
  %conv41 = trunc i32 %and40 to i8, !dbg !8960
  store i8 %conv41, i8* %flags38, align 1, !dbg !8960
  %43 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8961
  %nego_goal_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %43, i32 0, i32 4, !dbg !8962
  store i8 0, i8* %nego_goal_period, align 4, !dbg !8963
  %44 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8964
  %nego_goal_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %44, i32 0, i32 5, !dbg !8965
  store i8 0, i8* %nego_goal_offset, align 1, !dbg !8966
  %45 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8967
  %nego_goal_width = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %45, i32 0, i32 6, !dbg !8968
  store i8 0, i8* %nego_goal_width, align 2, !dbg !8969
  %46 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8970
  %nego_goal_tags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %46, i32 0, i32 7, !dbg !8971
  store i8 0, i8* %nego_goal_tags, align 1, !dbg !8972
  br label %if.end42, !dbg !8973

if.end42:                                         ; preds = %if.then37, %if.then32
  %47 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8974
  %starget = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %47, i32 0, i32 8, !dbg !8974
  %48 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !8974
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %48, i32 0, i32 15, !dbg !8974
  %49 = bitcast [0 x i64]* %starget_data to %struct.spi_transport_attrs*, !dbg !8974
  %width = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %49, i32 0, i32 4, !dbg !8974
  %bf.load = load i16, i16* %width, align 8, !dbg !8974
  %bf.clear = and i16 %bf.load, 1, !dbg !8974
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8974
  %50 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8976
  %nego_goal_width43 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %50, i32 0, i32 6, !dbg !8977
  %51 = load i8, i8* %nego_goal_width43, align 2, !dbg !8977
  %conv44 = zext i8 %51 to i32, !dbg !8976
  %cmp45 = icmp eq i32 %bf.cast, %conv44, !dbg !8978
  br i1 %cmp45, label %land.lhs.true, label %if.end65, !dbg !8979

land.lhs.true:                                    ; preds = %if.end42
  %52 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8980
  %starget47 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %52, i32 0, i32 8, !dbg !8980
  %53 = load %struct.scsi_target*, %struct.scsi_target** %starget47, align 8, !dbg !8980
  %starget_data48 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %53, i32 0, i32 15, !dbg !8980
  %54 = bitcast [0 x i64]* %starget_data48 to %struct.spi_transport_attrs*, !dbg !8980
  %period = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %54, i32 0, i32 0, !dbg !8980
  %55 = load i32, i32* %period, align 8, !dbg !8980
  %56 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8981
  %nego_goal_period49 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %56, i32 0, i32 4, !dbg !8982
  %57 = load i8, i8* %nego_goal_period49, align 4, !dbg !8982
  %conv50 = zext i8 %57 to i32, !dbg !8981
  %cmp51 = icmp eq i32 %55, %conv50, !dbg !8983
  br i1 %cmp51, label %land.lhs.true53, label %if.end65, !dbg !8984

land.lhs.true53:                                  ; preds = %land.lhs.true
  %58 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8985
  %starget54 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %58, i32 0, i32 8, !dbg !8985
  %59 = load %struct.scsi_target*, %struct.scsi_target** %starget54, align 8, !dbg !8985
  %starget_data55 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %59, i32 0, i32 15, !dbg !8985
  %60 = bitcast [0 x i64]* %starget_data55 to %struct.spi_transport_attrs*, !dbg !8985
  %offset = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %60, i32 0, i32 2, !dbg !8985
  %61 = load i32, i32* %offset, align 8, !dbg !8985
  %62 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8986
  %nego_goal_offset56 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %62, i32 0, i32 5, !dbg !8987
  %63 = load i8, i8* %nego_goal_offset56, align 1, !dbg !8987
  %conv57 = zext i8 %63 to i32, !dbg !8986
  %cmp58 = icmp eq i32 %61, %conv57, !dbg !8988
  br i1 %cmp58, label %if.then60, label %if.end65, !dbg !8989

if.then60:                                        ; preds = %land.lhs.true53
  %64 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !8990
  %flags61 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %64, i32 0, i32 3, !dbg !8992
  %65 = load i8, i8* %flags61, align 1, !dbg !8993
  %conv62 = zext i8 %65 to i32, !dbg !8993
  %and63 = and i32 %conv62, -65, !dbg !8993
  %conv64 = trunc i32 %and63 to i8, !dbg !8993
  store i8 %conv64, i8* %flags61, align 1, !dbg !8993
  br label %build_identify, !dbg !8994

if.end65:                                         ; preds = %land.lhs.true53, %land.lhs.true, %if.end42
  %66 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !8995
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %66, i32 0, i32 36, !dbg !8997
  %67 = load i32, i32* %rev, align 4, !dbg !8997
  %cmp66 = icmp eq i32 %67, 8, !dbg !8998
  br i1 %cmp66, label %land.lhs.true68, label %if.else, !dbg !8999

land.lhs.true68:                                  ; preds = %if.end65
  %68 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !9000
  %call69 = call i32 @esp_need_to_nego_wide(%struct.esp_target_data* %68) #12, !dbg !9001
  %tobool70 = icmp ne i32 %call69, 0, !dbg !9001
  br i1 %tobool70, label %if.then71, label %if.else, !dbg !9002

if.then71:                                        ; preds = %land.lhs.true68
  %69 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9003
  %msg_out = getelementptr inbounds %struct.esp, %struct.esp* %69, i32 0, i32 26, !dbg !9005
  %arrayidx72 = getelementptr [8 x i8], [8 x i8]* %msg_out, i64 0, i64 0, !dbg !9003
  %70 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !9006
  %nego_goal_width73 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %70, i32 0, i32 6, !dbg !9007
  %71 = load i8, i8* %nego_goal_width73, align 2, !dbg !9007
  %conv74 = zext i8 %71 to i32, !dbg !9006
  %tobool75 = icmp ne i32 %conv74, 0, !dbg !9006
  %72 = zext i1 %tobool75 to i64, !dbg !9006
  %cond = select i1 %tobool75, i32 1, i32 0, !dbg !9006
  %call76 = call i32 @spi_populate_width_msg(i8* %arrayidx72, i32 %cond) #12, !dbg !9008
  %73 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9009
  %msg_out_len77 = getelementptr inbounds %struct.esp, %struct.esp* %73, i32 0, i32 27, !dbg !9010
  store i32 %call76, i32* %msg_out_len77, align 8, !dbg !9011
  %74 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !9012
  %flags78 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %74, i32 0, i32 3, !dbg !9013
  %75 = load i8, i8* %flags78, align 1, !dbg !9014
  %conv79 = zext i8 %75 to i32, !dbg !9014
  %or = or i32 %conv79, 4, !dbg !9014
  %conv80 = trunc i32 %or to i8, !dbg !9014
  store i8 %conv80, i8* %flags78, align 1, !dbg !9014
  br label %if.end102, !dbg !9015

if.else:                                          ; preds = %land.lhs.true68, %if.end65
  %76 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !9016
  %call81 = call i32 @esp_need_to_nego_sync(%struct.esp_target_data* %76) #12, !dbg !9018
  %tobool82 = icmp ne i32 %call81, 0, !dbg !9018
  br i1 %tobool82, label %if.then83, label %if.else96, !dbg !9019

if.then83:                                        ; preds = %if.else
  %77 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9020
  %msg_out84 = getelementptr inbounds %struct.esp, %struct.esp* %77, i32 0, i32 26, !dbg !9022
  %arrayidx85 = getelementptr [8 x i8], [8 x i8]* %msg_out84, i64 0, i64 0, !dbg !9020
  %78 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !9023
  %nego_goal_period86 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %78, i32 0, i32 4, !dbg !9024
  %79 = load i8, i8* %nego_goal_period86, align 4, !dbg !9024
  %conv87 = zext i8 %79 to i32, !dbg !9023
  %80 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !9025
  %nego_goal_offset88 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %80, i32 0, i32 5, !dbg !9026
  %81 = load i8, i8* %nego_goal_offset88, align 1, !dbg !9026
  %conv89 = zext i8 %81 to i32, !dbg !9025
  %call90 = call i32 @spi_populate_sync_msg(i8* %arrayidx85, i32 %conv87, i32 %conv89) #12, !dbg !9027
  %82 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9028
  %msg_out_len91 = getelementptr inbounds %struct.esp, %struct.esp* %82, i32 0, i32 27, !dbg !9029
  store i32 %call90, i32* %msg_out_len91, align 8, !dbg !9030
  %83 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !9031
  %flags92 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %83, i32 0, i32 3, !dbg !9032
  %84 = load i8, i8* %flags92, align 1, !dbg !9033
  %conv93 = zext i8 %84 to i32, !dbg !9033
  %or94 = or i32 %conv93, 8, !dbg !9033
  %conv95 = trunc i32 %or94 to i8, !dbg !9033
  store i8 %conv95, i8* %flags92, align 1, !dbg !9033
  br label %if.end101, !dbg !9034

if.else96:                                        ; preds = %if.else
  %85 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !9035
  %flags97 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %85, i32 0, i32 3, !dbg !9037
  %86 = load i8, i8* %flags97, align 1, !dbg !9038
  %conv98 = zext i8 %86 to i32, !dbg !9038
  %and99 = and i32 %conv98, -65, !dbg !9038
  %conv100 = trunc i32 %and99 to i8, !dbg !9038
  store i8 %conv100, i8* %flags97, align 1, !dbg !9038
  br label %if.end101

if.end101:                                        ; preds = %if.else96, %if.then83
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then71
  %87 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9039
  %msg_out_len103 = getelementptr inbounds %struct.esp, %struct.esp* %87, i32 0, i32 27, !dbg !9041
  %88 = load i32, i32* %msg_out_len103, align 8, !dbg !9041
  %tobool104 = icmp ne i32 %88, 0, !dbg !9039
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !9042

if.then105:                                       ; preds = %if.end102
  store i8 1, i8* %select_and_stop, align 1, !dbg !9043
  br label %if.end106, !dbg !9044

if.end106:                                        ; preds = %if.then105, %if.end102
  br label %if.end107, !dbg !9045

if.end107:                                        ; preds = %if.end106, %if.end27
  br label %build_identify, !dbg !9046

build_identify:                                   ; preds = %if.end107, %if.then60
  call void @llvm.dbg.label(metadata !9047), !dbg !9048
  %89 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !9049
  %flags108 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %89, i32 0, i32 3, !dbg !9049
  %90 = load i8, i8* %flags108, align 1, !dbg !9049
  %conv109 = zext i8 %90 to i32, !dbg !9049
  %and110 = and i32 %conv109, 2, !dbg !9049
  %tobool111 = icmp ne i32 %and110, 0, !dbg !9049
  %91 = zext i1 %tobool111 to i64, !dbg !9049
  %cond112 = select i1 %tobool111, i32 64, i32 0, !dbg !9049
  %or113 = or i32 128, %cond112, !dbg !9049
  %92 = load i32, i32* %lun, align 4, !dbg !9049
  %and114 = and i32 %92, 7, !dbg !9049
  %or115 = or i32 %or113, %and114, !dbg !9049
  %conv116 = trunc i32 %or115 to i8, !dbg !9049
  %93 = load i8*, i8** %p, align 8, !dbg !9050
  %incdec.ptr = getelementptr i8, i8* %93, i32 1, !dbg !9050
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !9050
  store i8 %conv116, i8* %93, align 1, !dbg !9051
  %94 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9052
  %tag = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %94, i32 0, i32 7, !dbg !9054
  %arrayidx117 = getelementptr [2 x i8], [2 x i8]* %tag, i64 0, i64 0, !dbg !9052
  %95 = load i8, i8* %arrayidx117, align 1, !dbg !9052
  %conv118 = zext i8 %95 to i32, !dbg !9052
  %tobool119 = icmp ne i32 %conv118, 0, !dbg !9052
  br i1 %tobool119, label %land.lhs.true120, label %if.end125, !dbg !9055

land.lhs.true120:                                 ; preds = %build_identify
  %96 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9056
  %rev121 = getelementptr inbounds %struct.esp, %struct.esp* %96, i32 0, i32 36, !dbg !9057
  %97 = load i32, i32* %rev121, align 4, !dbg !9057
  %cmp122 = icmp eq i32 %97, 0, !dbg !9058
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !9059

if.then124:                                       ; preds = %land.lhs.true120
  store i8 1, i8* %select_and_stop, align 1, !dbg !9060
  br label %if.end125, !dbg !9062

if.end125:                                        ; preds = %if.then124, %land.lhs.true120, %build_identify
  %98 = load i8, i8* %select_and_stop, align 1, !dbg !9063
  %tobool126 = trunc i8 %98 to i1, !dbg !9063
  br i1 %tobool126, label %if.then127, label %if.else155, !dbg !9065

if.then127:                                       ; preds = %if.end125
  %99 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9066
  %cmd_len128 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %99, i32 0, i32 12, !dbg !9068
  %100 = load i16, i16* %cmd_len128, align 4, !dbg !9068
  %conv129 = zext i16 %100 to i32, !dbg !9066
  %101 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9069
  %cmd_bytes_left = getelementptr inbounds %struct.esp, %struct.esp* %101, i32 0, i32 50, !dbg !9070
  store i32 %conv129, i32* %cmd_bytes_left, align 8, !dbg !9071
  %102 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9072
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %102, i32 0, i32 14, !dbg !9073
  %103 = load i8*, i8** %cmnd, align 8, !dbg !9073
  %arrayidx130 = getelementptr i8, i8* %103, i64 0, !dbg !9072
  %104 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9074
  %cmd_bytes_ptr = getelementptr inbounds %struct.esp, %struct.esp* %104, i32 0, i32 49, !dbg !9075
  store i8* %arrayidx130, i8** %cmd_bytes_ptr, align 8, !dbg !9076
  %105 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9077
  %tag131 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %105, i32 0, i32 7, !dbg !9079
  %arrayidx132 = getelementptr [2 x i8], [2 x i8]* %tag131, i64 0, i64 0, !dbg !9077
  %106 = load i8, i8* %arrayidx132, align 1, !dbg !9077
  %tobool133 = icmp ne i8 %106, 0, !dbg !9077
  br i1 %tobool133, label %if.then134, label %if.end154, !dbg !9080

if.then134:                                       ; preds = %if.then127
  %107 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9081
  %msg_out_len135 = getelementptr inbounds %struct.esp, %struct.esp* %107, i32 0, i32 27, !dbg !9084
  %108 = load i32, i32* %msg_out_len135, align 8, !dbg !9084
  %sub = sub i32 %108, 1, !dbg !9085
  store i32 %sub, i32* %i, align 4, !dbg !9086
  br label %for.cond, !dbg !9087

for.cond:                                         ; preds = %for.inc, %if.then134
  %109 = load i32, i32* %i, align 4, !dbg !9088
  %cmp136 = icmp sge i32 %109, 0, !dbg !9090
  br i1 %cmp136, label %for.body, label %for.end, !dbg !9091

for.body:                                         ; preds = %for.cond
  %110 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9092
  %msg_out138 = getelementptr inbounds %struct.esp, %struct.esp* %110, i32 0, i32 26, !dbg !9093
  %111 = load i32, i32* %i, align 4, !dbg !9094
  %idxprom139 = sext i32 %111 to i64, !dbg !9092
  %arrayidx140 = getelementptr [8 x i8], [8 x i8]* %msg_out138, i64 0, i64 %idxprom139, !dbg !9092
  %112 = load i8, i8* %arrayidx140, align 1, !dbg !9092
  %113 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9095
  %msg_out141 = getelementptr inbounds %struct.esp, %struct.esp* %113, i32 0, i32 26, !dbg !9096
  %114 = load i32, i32* %i, align 4, !dbg !9097
  %add = add i32 %114, 2, !dbg !9098
  %idxprom142 = sext i32 %add to i64, !dbg !9095
  %arrayidx143 = getelementptr [8 x i8], [8 x i8]* %msg_out141, i64 0, i64 %idxprom142, !dbg !9095
  store i8 %112, i8* %arrayidx143, align 1, !dbg !9099
  br label %for.inc, !dbg !9095

for.inc:                                          ; preds = %for.body
  %115 = load i32, i32* %i, align 4, !dbg !9100
  %dec = add i32 %115, -1, !dbg !9100
  store i32 %dec, i32* %i, align 4, !dbg !9100
  br label %for.cond, !dbg !9101, !llvm.loop !9102

for.end:                                          ; preds = %for.cond
  %116 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9104
  %tag144 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %116, i32 0, i32 7, !dbg !9105
  %arrayidx145 = getelementptr [2 x i8], [2 x i8]* %tag144, i64 0, i64 0, !dbg !9104
  %117 = load i8, i8* %arrayidx145, align 1, !dbg !9104
  %118 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9106
  %msg_out146 = getelementptr inbounds %struct.esp, %struct.esp* %118, i32 0, i32 26, !dbg !9107
  %arrayidx147 = getelementptr [8 x i8], [8 x i8]* %msg_out146, i64 0, i64 0, !dbg !9106
  store i8 %117, i8* %arrayidx147, align 8, !dbg !9108
  %119 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9109
  %tag148 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %119, i32 0, i32 7, !dbg !9110
  %arrayidx149 = getelementptr [2 x i8], [2 x i8]* %tag148, i64 0, i64 1, !dbg !9109
  %120 = load i8, i8* %arrayidx149, align 1, !dbg !9109
  %121 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9111
  %msg_out150 = getelementptr inbounds %struct.esp, %struct.esp* %121, i32 0, i32 26, !dbg !9112
  %arrayidx151 = getelementptr [8 x i8], [8 x i8]* %msg_out150, i64 0, i64 1, !dbg !9111
  store i8 %120, i8* %arrayidx151, align 1, !dbg !9113
  %122 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9114
  %msg_out_len152 = getelementptr inbounds %struct.esp, %struct.esp* %122, i32 0, i32 27, !dbg !9115
  %123 = load i32, i32* %msg_out_len152, align 8, !dbg !9116
  %add153 = add i32 %123, 2, !dbg !9116
  store i32 %add153, i32* %msg_out_len152, align 8, !dbg !9116
  br label %if.end154, !dbg !9117

if.end154:                                        ; preds = %for.end, %if.then127
  store i32 67, i32* %start_cmd, align 4, !dbg !9118
  %124 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9119
  %select_state = getelementptr inbounds %struct.esp, %struct.esp* %124, i32 0, i32 38, !dbg !9120
  store i8 2, i8* %select_state, align 4, !dbg !9121
  br label %if.end180, !dbg !9122

if.else155:                                       ; preds = %if.end125
  store i32 66, i32* %start_cmd, align 4, !dbg !9123
  %125 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9125
  %tag156 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %125, i32 0, i32 7, !dbg !9127
  %arrayidx157 = getelementptr [2 x i8], [2 x i8]* %tag156, i64 0, i64 0, !dbg !9125
  %126 = load i8, i8* %arrayidx157, align 1, !dbg !9125
  %tobool158 = icmp ne i8 %126, 0, !dbg !9125
  br i1 %tobool158, label %if.then159, label %if.end166, !dbg !9128

if.then159:                                       ; preds = %if.else155
  %127 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9129
  %tag160 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %127, i32 0, i32 7, !dbg !9131
  %arrayidx161 = getelementptr [2 x i8], [2 x i8]* %tag160, i64 0, i64 0, !dbg !9129
  %128 = load i8, i8* %arrayidx161, align 1, !dbg !9129
  %129 = load i8*, i8** %p, align 8, !dbg !9132
  %incdec.ptr162 = getelementptr i8, i8* %129, i32 1, !dbg !9132
  store i8* %incdec.ptr162, i8** %p, align 8, !dbg !9132
  store i8 %128, i8* %129, align 1, !dbg !9133
  %130 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9134
  %tag163 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %130, i32 0, i32 7, !dbg !9135
  %arrayidx164 = getelementptr [2 x i8], [2 x i8]* %tag163, i64 0, i64 1, !dbg !9134
  %131 = load i8, i8* %arrayidx164, align 1, !dbg !9134
  %132 = load i8*, i8** %p, align 8, !dbg !9136
  %incdec.ptr165 = getelementptr i8, i8* %132, i32 1, !dbg !9136
  store i8* %incdec.ptr165, i8** %p, align 8, !dbg !9136
  store i8 %131, i8* %132, align 1, !dbg !9137
  store i32 70, i32* %start_cmd, align 4, !dbg !9138
  br label %if.end166, !dbg !9139

if.end166:                                        ; preds = %if.then159, %if.else155
  store i32 0, i32* %i, align 4, !dbg !9140
  br label %for.cond167, !dbg !9142

for.cond167:                                      ; preds = %for.inc177, %if.end166
  %133 = load i32, i32* %i, align 4, !dbg !9143
  %134 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9145
  %cmd_len168 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %134, i32 0, i32 12, !dbg !9146
  %135 = load i16, i16* %cmd_len168, align 4, !dbg !9146
  %conv169 = zext i16 %135 to i32, !dbg !9145
  %cmp170 = icmp slt i32 %133, %conv169, !dbg !9147
  br i1 %cmp170, label %for.body172, label %for.end178, !dbg !9148

for.body172:                                      ; preds = %for.cond167
  %136 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9149
  %cmnd173 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %136, i32 0, i32 14, !dbg !9150
  %137 = load i8*, i8** %cmnd173, align 8, !dbg !9150
  %138 = load i32, i32* %i, align 4, !dbg !9151
  %idxprom174 = sext i32 %138 to i64, !dbg !9149
  %arrayidx175 = getelementptr i8, i8* %137, i64 %idxprom174, !dbg !9149
  %139 = load i8, i8* %arrayidx175, align 1, !dbg !9149
  %140 = load i8*, i8** %p, align 8, !dbg !9152
  %incdec.ptr176 = getelementptr i8, i8* %140, i32 1, !dbg !9152
  store i8* %incdec.ptr176, i8** %p, align 8, !dbg !9152
  store i8 %139, i8* %140, align 1, !dbg !9153
  br label %for.inc177, !dbg !9154

for.inc177:                                       ; preds = %for.body172
  %141 = load i32, i32* %i, align 4, !dbg !9155
  %inc = add i32 %141, 1, !dbg !9155
  store i32 %inc, i32* %i, align 4, !dbg !9155
  br label %for.cond167, !dbg !9156, !llvm.loop !9157

for.end178:                                       ; preds = %for.cond167
  %142 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9159
  %select_state179 = getelementptr inbounds %struct.esp, %struct.esp* %142, i32 0, i32 38, !dbg !9160
  store i8 1, i8* %select_state179, align 4, !dbg !9161
  br label %if.end180

if.end180:                                        ; preds = %for.end178, %if.end154
  %143 = load i32, i32* %tgt, align 4, !dbg !9162
  store i32 %143, i32* %val, align 4, !dbg !9163
  %144 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9164
  %rev181 = getelementptr inbounds %struct.esp, %struct.esp* %144, i32 0, i32 36, !dbg !9166
  %145 = load i32, i32* %rev181, align 4, !dbg !9166
  %cmp182 = icmp eq i32 %145, 8, !dbg !9167
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !9168

if.then184:                                       ; preds = %if.end180
  %146 = load i32, i32* %val, align 4, !dbg !9169
  %or185 = or i32 %146, 80, !dbg !9169
  store i32 %or185, i32* %val, align 4, !dbg !9169
  br label %if.end186, !dbg !9170

if.end186:                                        ; preds = %if.then184, %if.end180
  %147 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9171
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %147, i32 0, i32 2, !dbg !9171
  %148 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !9171
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %148, i32 0, i32 0, !dbg !9171
  %149 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !9171
  %150 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9171
  %151 = load i32, i32* %val, align 4, !dbg !9171
  %conv187 = trunc i32 %151 to i8, !dbg !9171
  call void %149(%struct.esp* %150, i8 zeroext %conv187, i64 4) #12, !dbg !9171
  %152 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9172
  %153 = load i32, i32* %tgt, align 4, !dbg !9173
  call void @esp_write_tgt_sync(%struct.esp* %152, i32 %153) #12, !dbg !9174
  %154 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9175
  %155 = load i32, i32* %tgt, align 4, !dbg !9176
  call void @esp_write_tgt_config3(%struct.esp* %154, i32 %155) #12, !dbg !9177
  %156 = load i8*, i8** %p, align 8, !dbg !9178
  %157 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9179
  %command_block188 = getelementptr inbounds %struct.esp, %struct.esp* %157, i32 0, i32 8, !dbg !9180
  %158 = load i8*, i8** %command_block188, align 8, !dbg !9180
  %sub.ptr.lhs.cast = ptrtoint i8* %156 to i64, !dbg !9181
  %sub.ptr.rhs.cast = ptrtoint i8* %158 to i64, !dbg !9181
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9181
  %conv189 = trunc i64 %sub.ptr.sub to i32, !dbg !9182
  store i32 %conv189, i32* %val, align 4, !dbg !9183
  %159 = load i32, i32* @esp_debug, align 4, !dbg !9184
  %and190 = and i32 %159, 2, !dbg !9186
  %tobool191 = icmp ne i32 %and190, 0, !dbg !9186
  br i1 %tobool191, label %if.then192, label %if.end209, !dbg !9187

if.then192:                                       ; preds = %if.end186
  %160 = load i32, i32* %tgt, align 4, !dbg !9188
  %161 = load i32, i32* %lun, align 4, !dbg !9190
  %call193 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i32 %160, i32 %161) #13, !dbg !9191
  store i32 0, i32* %i, align 4, !dbg !9192
  br label %for.cond194, !dbg !9194

for.cond194:                                      ; preds = %for.inc205, %if.then192
  %162 = load i32, i32* %i, align 4, !dbg !9195
  %163 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9197
  %cmd_len195 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %163, i32 0, i32 12, !dbg !9198
  %164 = load i16, i16* %cmd_len195, align 4, !dbg !9198
  %conv196 = zext i16 %164 to i32, !dbg !9197
  %cmp197 = icmp slt i32 %162, %conv196, !dbg !9199
  br i1 %cmp197, label %for.body199, label %for.end207, !dbg !9200

for.body199:                                      ; preds = %for.cond194
  %165 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9201
  %cmnd200 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %165, i32 0, i32 14, !dbg !9202
  %166 = load i8*, i8** %cmnd200, align 8, !dbg !9202
  %167 = load i32, i32* %i, align 4, !dbg !9203
  %idxprom201 = sext i32 %167 to i64, !dbg !9201
  %arrayidx202 = getelementptr i8, i8* %166, i64 %idxprom201, !dbg !9201
  %168 = load i8, i8* %arrayidx202, align 1, !dbg !9201
  %conv203 = zext i8 %168 to i32, !dbg !9201
  %call204 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i32 %conv203) #13, !dbg !9204
  br label %for.inc205, !dbg !9204

for.inc205:                                       ; preds = %for.body199
  %169 = load i32, i32* %i, align 4, !dbg !9205
  %inc206 = add i32 %169, 1, !dbg !9205
  store i32 %inc206, i32* %i, align 4, !dbg !9205
  br label %for.cond194, !dbg !9206, !llvm.loop !9207

for.end207:                                       ; preds = %for.cond194
  %call208 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !9209
  br label %if.end209, !dbg !9210

if.end209:                                        ; preds = %for.end207, %if.end186
  %170 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9211
  %171 = load i32, i32* %val, align 4, !dbg !9212
  %172 = load i32, i32* %start_cmd, align 4, !dbg !9213
  call void @esp_send_dma_cmd(%struct.esp* %170, i32 %171, i32 16, i32 %172) #12, !dbg !9214
  br label %return, !dbg !9215

return:                                           ; preds = %if.end209, %if.then8, %if.then3, %if.then
  ret void, !dbg !9215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.esp_cmd_entry* @find_and_prep_issuable_command(%struct.esp* %esp) #0 !dbg !9216 {
entry:
  %retval = alloca %struct.esp_cmd_entry*, align 8
  %esp.addr = alloca %struct.esp*, align 8
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.esp_cmd_entry*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %dev = alloca %struct.scsi_device*, align 8
  %lp = alloca %struct.esp_lun_data*, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp31 = alloca %struct.esp_cmd_entry*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !9219, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !9221, metadata !DIExpression()), !dbg !9222
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9223, metadata !DIExpression()), !dbg !9226
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9226
  %queued_cmds = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 6, !dbg !9226
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queued_cmds, i32 0, i32 0, !dbg !9226
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9226
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !9226
  store i8* %2, i8** %__mptr, align 8, !dbg !9226
  br label %do.body, !dbg !9226

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9227

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9226
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !9226
  %4 = bitcast i8* %add.ptr to %struct.esp_cmd_entry*, !dbg !9226
  store %struct.esp_cmd_entry* %4, %struct.esp_cmd_entry** %tmp, align 8, !dbg !9227
  %5 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp, align 8, !dbg !9226
  store %struct.esp_cmd_entry* %5, %struct.esp_cmd_entry** %ent, align 8, !dbg !9229
  br label %for.cond, !dbg !9229

for.cond:                                         ; preds = %do.end30, %do.end
  %6 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9230
  %list = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %6, i32 0, i32 0, !dbg !9230
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9230
  %queued_cmds1 = getelementptr inbounds %struct.esp, %struct.esp* %7, i32 0, i32 6, !dbg !9230
  %cmp = icmp eq %struct.list_head* %list, %queued_cmds1, !dbg !9230
  %lnot = xor i1 %cmp, true, !dbg !9230
  br i1 %lnot, label %for.body, label %for.end, !dbg !9229

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !9232, metadata !DIExpression()), !dbg !9234
  %8 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9235
  %cmd2 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %8, i32 0, i32 1, !dbg !9236
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd2, align 8, !dbg !9236
  store %struct.scsi_cmnd* %9, %struct.scsi_cmnd** %cmd, align 8, !dbg !9234
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev, metadata !9237, metadata !DIExpression()), !dbg !9238
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9239
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %10, i32 0, i32 1, !dbg !9240
  %11 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !9240
  store %struct.scsi_device* %11, %struct.scsi_device** %dev, align 8, !dbg !9238
  call void @llvm.dbg.declare(metadata %struct.esp_lun_data** %lp, metadata !9241, metadata !DIExpression()), !dbg !9242
  %12 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !9243
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %12, i32 0, i32 21, !dbg !9244
  %13 = load i8*, i8** %hostdata, align 8, !dbg !9244
  %14 = bitcast i8* %13 to %struct.esp_lun_data*, !dbg !9243
  store %struct.esp_lun_data* %14, %struct.esp_lun_data** %lp, align 8, !dbg !9242
  %15 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9245
  %flags = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %15, i32 0, i32 6, !dbg !9247
  %16 = load i8, i8* %flags, align 4, !dbg !9247
  %conv = zext i8 %16 to i32, !dbg !9245
  %and = and i32 %conv, 4, !dbg !9248
  %tobool = icmp ne i32 %and, 0, !dbg !9248
  br i1 %tobool, label %if.then, label %if.end, !dbg !9249

if.then:                                          ; preds = %for.body
  %17 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9250
  %tag = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %17, i32 0, i32 7, !dbg !9252
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %tag, i64 0, i64 0, !dbg !9250
  store i8 0, i8* %arrayidx, align 1, !dbg !9253
  %18 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9254
  %tag3 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %18, i32 0, i32 7, !dbg !9255
  %arrayidx4 = getelementptr [2 x i8], [2 x i8]* %tag3, i64 0, i64 1, !dbg !9254
  store i8 0, i8* %arrayidx4, align 1, !dbg !9256
  %19 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9257
  store %struct.esp_cmd_entry* %19, %struct.esp_cmd_entry** %retval, align 8, !dbg !9258
  br label %return, !dbg !9258

if.end:                                           ; preds = %for.body
  %20 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9259
  %tag5 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %20, i32 0, i32 7, !dbg !9261
  %arrayidx6 = getelementptr [2 x i8], [2 x i8]* %tag5, i64 0, i64 0, !dbg !9259
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9262
  %call = call i32 @spi_populate_tag_msg(i8* %arrayidx6, %struct.scsi_cmnd* %21) #12, !dbg !9263
  %tobool7 = icmp ne i32 %call, 0, !dbg !9263
  br i1 %tobool7, label %if.end13, label %if.then8, !dbg !9264

if.then8:                                         ; preds = %if.end
  %22 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9265
  %tag9 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %22, i32 0, i32 7, !dbg !9267
  %arrayidx10 = getelementptr [2 x i8], [2 x i8]* %tag9, i64 0, i64 0, !dbg !9265
  store i8 0, i8* %arrayidx10, align 1, !dbg !9268
  %23 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9269
  %tag11 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %23, i32 0, i32 7, !dbg !9270
  %arrayidx12 = getelementptr [2 x i8], [2 x i8]* %tag11, i64 0, i64 1, !dbg !9269
  store i8 0, i8* %arrayidx12, align 1, !dbg !9271
  br label %if.end13, !dbg !9272

if.end13:                                         ; preds = %if.then8, %if.end
  %24 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9273
  %tag14 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %24, i32 0, i32 7, !dbg !9274
  %arrayidx15 = getelementptr [2 x i8], [2 x i8]* %tag14, i64 0, i64 0, !dbg !9273
  %25 = load i8, i8* %arrayidx15, align 1, !dbg !9273
  %26 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9275
  %orig_tag = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %26, i32 0, i32 8, !dbg !9276
  %arrayidx16 = getelementptr [2 x i8], [2 x i8]* %orig_tag, i64 0, i64 0, !dbg !9275
  store i8 %25, i8* %arrayidx16, align 1, !dbg !9277
  %27 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9278
  %tag17 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %27, i32 0, i32 7, !dbg !9279
  %arrayidx18 = getelementptr [2 x i8], [2 x i8]* %tag17, i64 0, i64 1, !dbg !9278
  %28 = load i8, i8* %arrayidx18, align 1, !dbg !9278
  %29 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9280
  %orig_tag19 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %29, i32 0, i32 8, !dbg !9281
  %arrayidx20 = getelementptr [2 x i8], [2 x i8]* %orig_tag19, i64 0, i64 1, !dbg !9280
  store i8 %28, i8* %arrayidx20, align 1, !dbg !9282
  %30 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9283
  %31 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp, align 8, !dbg !9285
  %call21 = call i32 @esp_alloc_lun_tag(%struct.esp_cmd_entry* %30, %struct.esp_lun_data* %31) #12, !dbg !9286
  %cmp22 = icmp slt i32 %call21, 0, !dbg !9287
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9288

if.then24:                                        ; preds = %if.end13
  br label %for.inc, !dbg !9289

if.end25:                                         ; preds = %if.end13
  %32 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9290
  store %struct.esp_cmd_entry* %32, %struct.esp_cmd_entry** %retval, align 8, !dbg !9291
  br label %return, !dbg !9291

for.inc:                                          ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !9292, metadata !DIExpression()), !dbg !9294
  %33 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !9294
  %list27 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %33, i32 0, i32 0, !dbg !9294
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %list27, i32 0, i32 0, !dbg !9294
  %34 = load %struct.list_head*, %struct.list_head** %next28, align 8, !dbg !9294
  %35 = bitcast %struct.list_head* %34 to i8*, !dbg !9294
  store i8* %35, i8** %__mptr26, align 8, !dbg !9294
  br label %do.body29, !dbg !9294

do.body29:                                        ; preds = %for.inc
  br label %do.end30, !dbg !9295

do.end30:                                         ; preds = %do.body29
  %36 = load i8*, i8** %__mptr26, align 8, !dbg !9294
  %add.ptr32 = getelementptr i8, i8* %36, i64 0, !dbg !9294
  %37 = bitcast i8* %add.ptr32 to %struct.esp_cmd_entry*, !dbg !9294
  store %struct.esp_cmd_entry* %37, %struct.esp_cmd_entry** %tmp31, align 8, !dbg !9295
  %38 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp31, align 8, !dbg !9294
  store %struct.esp_cmd_entry* %38, %struct.esp_cmd_entry** %ent, align 8, !dbg !9230
  br label %for.cond, !dbg !9230, !llvm.loop !9297

for.end:                                          ; preds = %for.cond
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %retval, align 8, !dbg !9299
  br label %return, !dbg !9299

return:                                           ; preds = %for.end, %if.end25, %if.then
  %39 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %retval, align 8, !dbg !9300
  ret %struct.esp_cmd_entry* %39, !dbg !9300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_autosense(%struct.esp* %esp, %struct.esp_cmd_entry* %ent) #0 !dbg !9301 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %dev = alloca %struct.scsi_device*, align 8
  %tgt = alloca i32, align 4
  %lun = alloca i32, align 4
  %p = alloca i8*, align 8
  %val = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !9302, metadata !DIExpression()), !dbg !9303
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !9304, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !9306, metadata !DIExpression()), !dbg !9307
  %0 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9308
  %cmd1 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %0, i32 0, i32 1, !dbg !9309
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !9309
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !9307
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev, metadata !9310, metadata !DIExpression()), !dbg !9311
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9312
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 1, !dbg !9313
  %3 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !9313
  store %struct.scsi_device* %3, %struct.scsi_device** %dev, align 8, !dbg !9311
  call void @llvm.dbg.declare(metadata i32* %tgt, metadata !9314, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.declare(metadata i32* %lun, metadata !9316, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9318, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.declare(metadata i8* %val, metadata !9320, metadata !DIExpression()), !dbg !9321
  %4 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !9322
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 16, !dbg !9323
  %5 = load i32, i32* %id, align 8, !dbg !9323
  store i32 %5, i32* %tgt, align 4, !dbg !9324
  %6 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !9325
  %lun2 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 18, !dbg !9326
  %7 = load i64, i64* %lun2, align 8, !dbg !9326
  %conv = trunc i64 %7 to i32, !dbg !9325
  store i32 %conv, i32* %lun, align 4, !dbg !9327
  %8 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9328
  %sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %8, i32 0, i32 11, !dbg !9330
  %9 = load i8*, i8** %sense_ptr, align 8, !dbg !9330
  %tobool = icmp ne i8* %9, null, !dbg !9328
  br i1 %tobool, label %if.end5, label %if.then, !dbg !9331

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9332

do.body:                                          ; preds = %if.then
  %10 = load i32, i32* @esp_debug, align 4, !dbg !9334
  %and = and i32 %10, 1024, !dbg !9334
  %tobool3 = icmp ne i32 %and, 0, !dbg !9334
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !9337

if.then4:                                         ; preds = %do.body
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9334
  %host = getelementptr inbounds %struct.esp, %struct.esp* %11, i32 0, i32 3, !dbg !9334
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9334
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %12, i32 0, i32 47, !dbg !9334
  %13 = load i32, i32* %tgt, align 4, !dbg !9334
  %14 = load i32, i32* %lun, align 4, !dbg !9334
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23, i64 0, i64 0), i32 %13, i32 %14) #13, !dbg !9334
  br label %if.end, !dbg !9334

if.end:                                           ; preds = %if.then4, %do.body
  br label %do.end, !dbg !9337

do.end:                                           ; preds = %if.end
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9338
  %16 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9339
  call void @esp_map_sense(%struct.esp* %15, %struct.esp_cmd_entry* %16) #12, !dbg !9340
  br label %if.end5, !dbg !9341

if.end5:                                          ; preds = %do.end, %entry
  %17 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9342
  %sense_ptr6 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %17, i32 0, i32 11, !dbg !9343
  %18 = load i8*, i8** %sense_ptr6, align 8, !dbg !9343
  %19 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9344
  %saved_sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %19, i32 0, i32 12, !dbg !9345
  store i8* %18, i8** %saved_sense_ptr, align 8, !dbg !9346
  %20 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9347
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9348
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %21, i32 0, i32 5, !dbg !9349
  store %struct.esp_cmd_entry* %20, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !9350
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9351
  %command_block = getelementptr inbounds %struct.esp, %struct.esp* %22, i32 0, i32 8, !dbg !9352
  %23 = load i8*, i8** %command_block, align 8, !dbg !9352
  store i8* %23, i8** %p, align 8, !dbg !9353
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9354
  %msg_out_len = getelementptr inbounds %struct.esp, %struct.esp* %24, i32 0, i32 27, !dbg !9355
  store i32 0, i32* %msg_out_len, align 8, !dbg !9356
  %25 = load i32, i32* %lun, align 4, !dbg !9357
  %and7 = and i32 %25, 7, !dbg !9357
  %or = or i32 128, %and7, !dbg !9357
  %conv8 = trunc i32 %or to i8, !dbg !9357
  %26 = load i8*, i8** %p, align 8, !dbg !9358
  %incdec.ptr = getelementptr i8, i8* %26, i32 1, !dbg !9358
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !9358
  store i8 %conv8, i8* %26, align 1, !dbg !9359
  %27 = load i8*, i8** %p, align 8, !dbg !9360
  %incdec.ptr9 = getelementptr i8, i8* %27, i32 1, !dbg !9360
  store i8* %incdec.ptr9, i8** %p, align 8, !dbg !9360
  store i8 3, i8* %27, align 1, !dbg !9361
  %28 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !9362
  %scsi_level = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %28, i32 0, i32 23, !dbg !9363
  %29 = load i8, i8* %scsi_level, align 1, !dbg !9363
  %conv10 = sext i8 %29 to i32, !dbg !9362
  %cmp = icmp sle i32 %conv10, 3, !dbg !9364
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9365

cond.true:                                        ; preds = %if.end5
  %30 = load i32, i32* %lun, align 4, !dbg !9366
  %shl = shl i32 %30, 5, !dbg !9367
  br label %cond.end, !dbg !9365

cond.false:                                       ; preds = %if.end5
  br label %cond.end, !dbg !9365

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shl, %cond.true ], [ 0, %cond.false ], !dbg !9365
  %conv12 = trunc i32 %cond to i8, !dbg !9368
  %31 = load i8*, i8** %p, align 8, !dbg !9369
  %incdec.ptr13 = getelementptr i8, i8* %31, i32 1, !dbg !9369
  store i8* %incdec.ptr13, i8** %p, align 8, !dbg !9369
  store i8 %conv12, i8* %31, align 1, !dbg !9370
  %32 = load i8*, i8** %p, align 8, !dbg !9371
  %incdec.ptr14 = getelementptr i8, i8* %32, i32 1, !dbg !9371
  store i8* %incdec.ptr14, i8** %p, align 8, !dbg !9371
  store i8 0, i8* %32, align 1, !dbg !9372
  %33 = load i8*, i8** %p, align 8, !dbg !9373
  %incdec.ptr15 = getelementptr i8, i8* %33, i32 1, !dbg !9373
  store i8* %incdec.ptr15, i8** %p, align 8, !dbg !9373
  store i8 0, i8* %33, align 1, !dbg !9374
  %34 = load i8*, i8** %p, align 8, !dbg !9375
  %incdec.ptr16 = getelementptr i8, i8* %34, i32 1, !dbg !9375
  store i8* %incdec.ptr16, i8** %p, align 8, !dbg !9375
  store i8 96, i8* %34, align 1, !dbg !9376
  %35 = load i8*, i8** %p, align 8, !dbg !9377
  %incdec.ptr17 = getelementptr i8, i8* %35, i32 1, !dbg !9377
  store i8* %incdec.ptr17, i8** %p, align 8, !dbg !9377
  store i8 0, i8* %35, align 1, !dbg !9378
  %36 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9379
  %select_state = getelementptr inbounds %struct.esp, %struct.esp* %36, i32 0, i32 38, !dbg !9380
  store i8 1, i8* %select_state, align 4, !dbg !9381
  %37 = load i32, i32* %tgt, align 4, !dbg !9382
  %conv18 = trunc i32 %37 to i8, !dbg !9382
  store i8 %conv18, i8* %val, align 1, !dbg !9383
  %38 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9384
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %38, i32 0, i32 36, !dbg !9386
  %39 = load i32, i32* %rev, align 4, !dbg !9386
  %cmp19 = icmp eq i32 %39, 8, !dbg !9387
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !9388

if.then21:                                        ; preds = %cond.end
  %40 = load i8, i8* %val, align 1, !dbg !9389
  %conv22 = zext i8 %40 to i32, !dbg !9389
  %or23 = or i32 %conv22, 80, !dbg !9389
  %conv24 = trunc i32 %or23 to i8, !dbg !9389
  store i8 %conv24, i8* %val, align 1, !dbg !9389
  br label %if.end25, !dbg !9390

if.end25:                                         ; preds = %if.then21, %cond.end
  %41 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9391
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %41, i32 0, i32 2, !dbg !9391
  %42 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !9391
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %42, i32 0, i32 0, !dbg !9391
  %43 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !9391
  %44 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9391
  %45 = load i8, i8* %val, align 1, !dbg !9391
  call void %43(%struct.esp* %44, i8 zeroext %45, i64 4) #12, !dbg !9391
  %46 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9392
  %47 = load i32, i32* %tgt, align 4, !dbg !9393
  call void @esp_write_tgt_sync(%struct.esp* %46, i32 %47) #12, !dbg !9394
  %48 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9395
  %49 = load i32, i32* %tgt, align 4, !dbg !9396
  call void @esp_write_tgt_config3(%struct.esp* %48, i32 %49) #12, !dbg !9397
  %50 = load i8*, i8** %p, align 8, !dbg !9398
  %51 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9399
  %command_block26 = getelementptr inbounds %struct.esp, %struct.esp* %51, i32 0, i32 8, !dbg !9400
  %52 = load i8*, i8** %command_block26, align 8, !dbg !9400
  %sub.ptr.lhs.cast = ptrtoint i8* %50 to i64, !dbg !9401
  %sub.ptr.rhs.cast = ptrtoint i8* %52 to i64, !dbg !9401
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9401
  %conv27 = trunc i64 %sub.ptr.sub to i8, !dbg !9402
  store i8 %conv27, i8* %val, align 1, !dbg !9403
  %53 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9404
  %54 = load i8, i8* %val, align 1, !dbg !9405
  %conv28 = zext i8 %54 to i32, !dbg !9405
  call void @esp_send_dma_cmd(%struct.esp* %53, i32 %conv28, i32 16, i32 66) #12, !dbg !9406
  ret void, !dbg !9407
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_map_dma(%struct.esp* %esp, %struct.scsi_cmnd* %cmd) #0 !dbg !9408 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %spriv = alloca %struct.esp_cmd_priv*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %total = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.scatterlist*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !9409, metadata !DIExpression()), !dbg !9410
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9411, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_priv** %spriv, metadata !9413, metadata !DIExpression()), !dbg !9414
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9415
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 22, !dbg !9415
  %1 = bitcast %struct.scsi_pointer* %SCp to %struct.esp_cmd_priv*, !dbg !9415
  store %struct.esp_cmd_priv* %1, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9414
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !9416, metadata !DIExpression()), !dbg !9417
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9418
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %2) #12, !dbg !9419
  store %struct.scatterlist* %call, %struct.scatterlist** %sg, align 8, !dbg !9417
  call void @llvm.dbg.declare(metadata i32* %total, metadata !9420, metadata !DIExpression()), !dbg !9421
  store i32 0, i32* %total, align 4, !dbg !9421
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9422, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %s, metadata !9424, metadata !DIExpression()), !dbg !9425
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9426
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 13, !dbg !9428
  %4 = load i32, i32* %sc_data_direction, align 8, !dbg !9428
  %cmp = icmp eq i32 %4, 3, !dbg !9429
  br i1 %cmp, label %if.then, label %if.end, !dbg !9430

if.then:                                          ; preds = %entry
  br label %return, !dbg !9431

if.end:                                           ; preds = %entry
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9432
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 37, !dbg !9434
  %6 = load i32, i32* %flags, align 8, !dbg !9434
  %and = and i32 %6, 128, !dbg !9435
  %tobool = icmp ne i32 %and, 0, !dbg !9435
  br i1 %tobool, label %if.then1, label %if.else, !dbg !9436

if.then1:                                         ; preds = %if.end
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9437
  %call2 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %7) #12, !dbg !9439
  %8 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9440
  %num_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %8, i32 0, i32 0, !dbg !9441
  store i32 %call2, i32* %num_sg, align 8, !dbg !9442
  store i32 0, i32* %i, align 4, !dbg !9443
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9443
  %call3 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %9) #12, !dbg !9443
  store %struct.scatterlist* %call3, %struct.scatterlist** %s, align 8, !dbg !9443
  br label %for.cond, !dbg !9443

for.cond:                                         ; preds = %for.inc, %if.then1
  %10 = load i32, i32* %i, align 4, !dbg !9445
  %11 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9445
  %num_sg4 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %11, i32 0, i32 0, !dbg !9445
  %12 = load i32, i32* %num_sg4, align 8, !dbg !9445
  %cmp5 = icmp slt i32 %10, %12, !dbg !9445
  br i1 %cmp5, label %for.body, label %for.end, !dbg !9443

for.body:                                         ; preds = %for.cond
  %13 = load %struct.scatterlist*, %struct.scatterlist** %s, align 8, !dbg !9447
  %call6 = call i8* @sg_virt(%struct.scatterlist* %13) #12, !dbg !9449
  %14 = ptrtoint i8* %call6 to i64, !dbg !9450
  %15 = load %struct.scatterlist*, %struct.scatterlist** %s, align 8, !dbg !9451
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %15, i32 0, i32 3, !dbg !9452
  store i64 %14, i64* %dma_address, align 8, !dbg !9453
  %16 = load %struct.scatterlist*, %struct.scatterlist** %s, align 8, !dbg !9454
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %16, i32 0, i32 4, !dbg !9454
  %17 = load i32, i32* %dma_length, align 8, !dbg !9454
  %18 = load i32, i32* %total, align 4, !dbg !9455
  %add = add i32 %18, %17, !dbg !9455
  store i32 %add, i32* %total, align 4, !dbg !9455
  br label %for.inc, !dbg !9456

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !9445
  %inc = add i32 %19, 1, !dbg !9445
  store i32 %inc, i32* %i, align 4, !dbg !9445
  %20 = load %struct.scatterlist*, %struct.scatterlist** %s, align 8, !dbg !9445
  %call7 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %20) #12, !dbg !9445
  store %struct.scatterlist* %call7, %struct.scatterlist** %s, align 8, !dbg !9445
  br label %for.cond, !dbg !9445, !llvm.loop !9457

for.end:                                          ; preds = %for.cond
  br label %if.end21, !dbg !9459

if.else:                                          ; preds = %if.end
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9460
  %call8 = call i32 @scsi_dma_map(%struct.scsi_cmnd* %21) #12, !dbg !9462
  %22 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9463
  %num_sg9 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %22, i32 0, i32 0, !dbg !9464
  store i32 %call8, i32* %num_sg9, align 8, !dbg !9465
  store i32 0, i32* %i, align 4, !dbg !9466
  %23 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9466
  %call10 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %23) #12, !dbg !9466
  store %struct.scatterlist* %call10, %struct.scatterlist** %s, align 8, !dbg !9466
  br label %for.cond11, !dbg !9466

for.cond11:                                       ; preds = %for.inc17, %if.else
  %24 = load i32, i32* %i, align 4, !dbg !9468
  %25 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9468
  %num_sg12 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %25, i32 0, i32 0, !dbg !9468
  %26 = load i32, i32* %num_sg12, align 8, !dbg !9468
  %cmp13 = icmp slt i32 %24, %26, !dbg !9468
  br i1 %cmp13, label %for.body14, label %for.end20, !dbg !9466

for.body14:                                       ; preds = %for.cond11
  %27 = load %struct.scatterlist*, %struct.scatterlist** %s, align 8, !dbg !9470
  %dma_length15 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %27, i32 0, i32 4, !dbg !9470
  %28 = load i32, i32* %dma_length15, align 8, !dbg !9470
  %29 = load i32, i32* %total, align 4, !dbg !9471
  %add16 = add i32 %29, %28, !dbg !9471
  store i32 %add16, i32* %total, align 4, !dbg !9471
  br label %for.inc17, !dbg !9472

for.inc17:                                        ; preds = %for.body14
  %30 = load i32, i32* %i, align 4, !dbg !9468
  %inc18 = add i32 %30, 1, !dbg !9468
  store i32 %inc18, i32* %i, align 4, !dbg !9468
  %31 = load %struct.scatterlist*, %struct.scatterlist** %s, align 8, !dbg !9468
  %call19 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %31) #12, !dbg !9468
  store %struct.scatterlist* %call19, %struct.scatterlist** %s, align 8, !dbg !9468
  br label %for.cond11, !dbg !9468, !llvm.loop !9473

for.end20:                                        ; preds = %for.cond11
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %for.end
  %32 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9475
  %dma_length22 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %32, i32 0, i32 4, !dbg !9475
  %33 = load i32, i32* %dma_length22, align 8, !dbg !9475
  %34 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9476
  %cur_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %34, i32 0, i32 1, !dbg !9477
  store i32 %33, i32* %cur_residue, align 4, !dbg !9478
  %35 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9479
  %prv_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %35, i32 0, i32 2, !dbg !9480
  store %struct.scatterlist* null, %struct.scatterlist** %prv_sg, align 8, !dbg !9481
  %36 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9482
  %37 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9483
  %cur_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %37, i32 0, i32 3, !dbg !9484
  store %struct.scatterlist* %36, %struct.scatterlist** %cur_sg, align 8, !dbg !9485
  %38 = load i32, i32* %total, align 4, !dbg !9486
  %39 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9487
  %tot_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %39, i32 0, i32 4, !dbg !9488
  store i32 %38, i32* %tot_residue, align 8, !dbg !9489
  br label %return, !dbg !9490

return:                                           ; preds = %if.end21, %if.then
  ret void, !dbg !9490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_save_pointers(%struct.esp* %esp, %struct.esp_cmd_entry* %ent) #0 !dbg !9491 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %spriv = alloca %struct.esp_cmd_priv*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !9492, metadata !DIExpression()), !dbg !9493
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !9494, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !9496, metadata !DIExpression()), !dbg !9497
  %0 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9498
  %cmd1 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %0, i32 0, i32 1, !dbg !9499
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !9499
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !9497
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_priv** %spriv, metadata !9500, metadata !DIExpression()), !dbg !9501
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9502
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 22, !dbg !9502
  %3 = bitcast %struct.scsi_pointer* %SCp to %struct.esp_cmd_priv*, !dbg !9502
  store %struct.esp_cmd_priv* %3, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9501
  %4 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9503
  %flags = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %4, i32 0, i32 6, !dbg !9505
  %5 = load i8, i8* %flags, align 4, !dbg !9505
  %conv = zext i8 %5 to i32, !dbg !9503
  %and = and i32 %conv, 4, !dbg !9506
  %tobool = icmp ne i32 %and, 0, !dbg !9506
  br i1 %tobool, label %if.then, label %if.end, !dbg !9507

if.then:                                          ; preds = %entry
  %6 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9508
  %sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %6, i32 0, i32 11, !dbg !9510
  %7 = load i8*, i8** %sense_ptr, align 8, !dbg !9510
  %8 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9511
  %saved_sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %8, i32 0, i32 12, !dbg !9512
  store i8* %7, i8** %saved_sense_ptr, align 8, !dbg !9513
  br label %return, !dbg !9514

if.end:                                           ; preds = %entry
  %9 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9515
  %cur_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %9, i32 0, i32 1, !dbg !9516
  %10 = load i32, i32* %cur_residue, align 4, !dbg !9516
  %11 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9517
  %saved_cur_residue = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %11, i32 0, i32 2, !dbg !9518
  store i32 %10, i32* %saved_cur_residue, align 8, !dbg !9519
  %12 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9520
  %prv_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %12, i32 0, i32 2, !dbg !9521
  %13 = load %struct.scatterlist*, %struct.scatterlist** %prv_sg, align 8, !dbg !9521
  %14 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9522
  %saved_prv_sg = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %14, i32 0, i32 3, !dbg !9523
  store %struct.scatterlist* %13, %struct.scatterlist** %saved_prv_sg, align 8, !dbg !9524
  %15 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9525
  %cur_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %15, i32 0, i32 3, !dbg !9526
  %16 = load %struct.scatterlist*, %struct.scatterlist** %cur_sg, align 8, !dbg !9526
  %17 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9527
  %saved_cur_sg = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %17, i32 0, i32 4, !dbg !9528
  store %struct.scatterlist* %16, %struct.scatterlist** %saved_cur_sg, align 8, !dbg !9529
  %18 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !9530
  %tot_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %18, i32 0, i32 4, !dbg !9531
  %19 = load i32, i32* %tot_residue, align 8, !dbg !9531
  %20 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9532
  %saved_tot_residue = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %20, i32 0, i32 5, !dbg !9533
  store i32 %19, i32* %saved_tot_residue, align 8, !dbg !9534
  br label %return, !dbg !9535

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_need_to_nego_wide(%struct.esp_target_data* %tp) #0 !dbg !9536 {
entry:
  %tp.addr = alloca %struct.esp_target_data*, align 8
  %target = alloca %struct.scsi_target*, align 8
  store %struct.esp_target_data* %tp, %struct.esp_target_data** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp.addr, metadata !9539, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %target, metadata !9541, metadata !DIExpression()), !dbg !9542
  %0 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !9543
  %starget = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %0, i32 0, i32 8, !dbg !9544
  %1 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !9544
  store %struct.scsi_target* %1, %struct.scsi_target** %target, align 8, !dbg !9542
  %2 = load %struct.scsi_target*, %struct.scsi_target** %target, align 8, !dbg !9545
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %2, i32 0, i32 15, !dbg !9545
  %3 = bitcast [0 x i64]* %starget_data to %struct.spi_transport_attrs*, !dbg !9545
  %width = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %3, i32 0, i32 4, !dbg !9545
  %bf.load = load i16, i16* %width, align 8, !dbg !9545
  %bf.clear = and i16 %bf.load, 1, !dbg !9545
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9545
  %4 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !9546
  %nego_goal_width = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %4, i32 0, i32 6, !dbg !9547
  %5 = load i8, i8* %nego_goal_width, align 2, !dbg !9547
  %conv = zext i8 %5 to i32, !dbg !9546
  %cmp = icmp ne i32 %bf.cast, %conv, !dbg !9548
  %conv1 = zext i1 %cmp to i32, !dbg !9548
  ret i32 %conv1, !dbg !9549
}

; Function Attrs: noredzone
declare dso_local i32 @spi_populate_width_msg(i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_need_to_nego_sync(%struct.esp_target_data* %tp) #0 !dbg !9550 {
entry:
  %retval = alloca i32, align 4
  %tp.addr = alloca %struct.esp_target_data*, align 8
  %target = alloca %struct.scsi_target*, align 8
  store %struct.esp_target_data* %tp, %struct.esp_target_data** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp.addr, metadata !9551, metadata !DIExpression()), !dbg !9552
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %target, metadata !9553, metadata !DIExpression()), !dbg !9554
  %0 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !9555
  %starget = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %0, i32 0, i32 8, !dbg !9556
  %1 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !9556
  store %struct.scsi_target* %1, %struct.scsi_target** %target, align 8, !dbg !9554
  %2 = load %struct.scsi_target*, %struct.scsi_target** %target, align 8, !dbg !9557
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %2, i32 0, i32 15, !dbg !9557
  %3 = bitcast [0 x i64]* %starget_data to %struct.spi_transport_attrs*, !dbg !9557
  %offset = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %3, i32 0, i32 2, !dbg !9557
  %4 = load i32, i32* %offset, align 8, !dbg !9557
  %tobool = icmp ne i32 %4, 0, !dbg !9557
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9559

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !9560
  %nego_goal_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %5, i32 0, i32 5, !dbg !9561
  %6 = load i8, i8* %nego_goal_offset, align 1, !dbg !9561
  %tobool1 = icmp ne i8 %6, 0, !dbg !9560
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9562

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !9563
  br label %return, !dbg !9563

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.scsi_target*, %struct.scsi_target** %target, align 8, !dbg !9564
  %starget_data2 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %7, i32 0, i32 15, !dbg !9564
  %8 = bitcast [0 x i64]* %starget_data2 to %struct.spi_transport_attrs*, !dbg !9564
  %offset3 = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %8, i32 0, i32 2, !dbg !9564
  %9 = load i32, i32* %offset3, align 8, !dbg !9564
  %10 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !9566
  %nego_goal_offset4 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %10, i32 0, i32 5, !dbg !9567
  %11 = load i8, i8* %nego_goal_offset4, align 1, !dbg !9567
  %conv = zext i8 %11 to i32, !dbg !9566
  %cmp = icmp eq i32 %9, %conv, !dbg !9568
  br i1 %cmp, label %land.lhs.true6, label %if.end12, !dbg !9569

land.lhs.true6:                                   ; preds = %if.end
  %12 = load %struct.scsi_target*, %struct.scsi_target** %target, align 8, !dbg !9570
  %starget_data7 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %12, i32 0, i32 15, !dbg !9570
  %13 = bitcast [0 x i64]* %starget_data7 to %struct.spi_transport_attrs*, !dbg !9570
  %period = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %13, i32 0, i32 0, !dbg !9570
  %14 = load i32, i32* %period, align 8, !dbg !9570
  %15 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !9571
  %nego_goal_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %15, i32 0, i32 4, !dbg !9572
  %16 = load i8, i8* %nego_goal_period, align 4, !dbg !9572
  %conv8 = zext i8 %16 to i32, !dbg !9571
  %cmp9 = icmp eq i32 %14, %conv8, !dbg !9573
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !9574

if.then11:                                        ; preds = %land.lhs.true6
  store i32 0, i32* %retval, align 4, !dbg !9575
  br label %return, !dbg !9575

if.end12:                                         ; preds = %land.lhs.true6, %if.end
  store i32 1, i32* %retval, align 4, !dbg !9576
  br label %return, !dbg !9576

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !9577
  ret i32 %17, !dbg !9577
}

; Function Attrs: noredzone
declare dso_local i32 @spi_populate_sync_msg(i8*, i32, i32) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_write_tgt_sync(%struct.esp* %esp, i32 %tgt) #0 !dbg !9578 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %tgt.addr = alloca i32, align 4
  %off = alloca i8, align 1
  %per = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !9581, metadata !DIExpression()), !dbg !9582
  store i32 %tgt, i32* %tgt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tgt.addr, metadata !9583, metadata !DIExpression()), !dbg !9584
  call void @llvm.dbg.declare(metadata i8* %off, metadata !9585, metadata !DIExpression()), !dbg !9586
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9587
  %target = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 21, !dbg !9588
  %1 = load i32, i32* %tgt.addr, align 4, !dbg !9589
  %idxprom = sext i32 %1 to i64, !dbg !9587
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !9587
  %esp_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx, i32 0, i32 1, !dbg !9590
  %2 = load i8, i8* %esp_offset, align 1, !dbg !9590
  store i8 %2, i8* %off, align 1, !dbg !9586
  call void @llvm.dbg.declare(metadata i8* %per, metadata !9591, metadata !DIExpression()), !dbg !9592
  %3 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9593
  %target1 = getelementptr inbounds %struct.esp, %struct.esp* %3, i32 0, i32 21, !dbg !9594
  %4 = load i32, i32* %tgt.addr, align 4, !dbg !9595
  %idxprom2 = sext i32 %4 to i64, !dbg !9593
  %arrayidx3 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target1, i64 0, i64 %idxprom2, !dbg !9593
  %esp_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx3, i32 0, i32 0, !dbg !9596
  %5 = load i8, i8* %esp_period, align 8, !dbg !9596
  store i8 %5, i8* %per, align 1, !dbg !9592
  %6 = load i8, i8* %off, align 1, !dbg !9597
  %conv = zext i8 %6 to i32, !dbg !9597
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9599
  %prev_soff = getelementptr inbounds %struct.esp, %struct.esp* %7, i32 0, i32 16, !dbg !9600
  %8 = load i8, i8* %prev_soff, align 4, !dbg !9600
  %conv4 = zext i8 %8 to i32, !dbg !9599
  %cmp = icmp ne i32 %conv, %conv4, !dbg !9601
  br i1 %cmp, label %if.then, label %if.end, !dbg !9602

if.then:                                          ; preds = %entry
  %9 = load i8, i8* %off, align 1, !dbg !9603
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9605
  %prev_soff6 = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 16, !dbg !9606
  store i8 %9, i8* %prev_soff6, align 4, !dbg !9607
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9608
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %11, i32 0, i32 2, !dbg !9608
  %12 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !9608
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %12, i32 0, i32 0, !dbg !9608
  %13 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !9608
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9608
  %15 = load i8, i8* %off, align 1, !dbg !9608
  call void %13(%struct.esp* %14, i8 zeroext %15, i64 7) #12, !dbg !9608
  br label %if.end, !dbg !9609

if.end:                                           ; preds = %if.then, %entry
  %16 = load i8, i8* %per, align 1, !dbg !9610
  %conv7 = zext i8 %16 to i32, !dbg !9610
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9612
  %prev_stp = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 17, !dbg !9613
  %18 = load i8, i8* %prev_stp, align 1, !dbg !9613
  %conv8 = zext i8 %18 to i32, !dbg !9612
  %cmp9 = icmp ne i32 %conv7, %conv8, !dbg !9614
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !9615

if.then11:                                        ; preds = %if.end
  %19 = load i8, i8* %per, align 1, !dbg !9616
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9618
  %prev_stp12 = getelementptr inbounds %struct.esp, %struct.esp* %20, i32 0, i32 17, !dbg !9619
  store i8 %19, i8* %prev_stp12, align 1, !dbg !9620
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9621
  %ops13 = getelementptr inbounds %struct.esp, %struct.esp* %21, i32 0, i32 2, !dbg !9621
  %22 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops13, align 8, !dbg !9621
  %esp_write814 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %22, i32 0, i32 0, !dbg !9621
  %23 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write814, align 8, !dbg !9621
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9621
  %25 = load i8, i8* %per, align 1, !dbg !9621
  call void %23(%struct.esp* %24, i8 zeroext %25, i64 6) #12, !dbg !9621
  br label %if.end15, !dbg !9622

if.end15:                                         ; preds = %if.then11, %if.end
  ret void, !dbg !9623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_write_tgt_config3(%struct.esp* %esp, i32 %tgt) #0 !dbg !9624 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %tgt.addr = alloca i32, align 4
  %val = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !9625, metadata !DIExpression()), !dbg !9626
  store i32 %tgt, i32* %tgt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tgt.addr, metadata !9627, metadata !DIExpression()), !dbg !9628
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9629
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 36, !dbg !9631
  %1 = load i32, i32* %rev, align 4, !dbg !9631
  %cmp = icmp ugt i32 %1, 1, !dbg !9632
  br i1 %cmp, label %if.then, label %if.end6, !dbg !9633

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %val, metadata !9634, metadata !DIExpression()), !dbg !9636
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9637
  %target = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 21, !dbg !9638
  %3 = load i32, i32* %tgt.addr, align 4, !dbg !9639
  %idxprom = sext i32 %3 to i64, !dbg !9637
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !9637
  %esp_config3 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx, i32 0, i32 2, !dbg !9640
  %4 = load i8, i8* %esp_config3, align 2, !dbg !9640
  store i8 %4, i8* %val, align 1, !dbg !9636
  %5 = load i8, i8* %val, align 1, !dbg !9641
  %conv = zext i8 %5 to i32, !dbg !9641
  %6 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9643
  %prev_cfg3 = getelementptr inbounds %struct.esp, %struct.esp* %6, i32 0, i32 18, !dbg !9644
  %7 = load i8, i8* %prev_cfg3, align 2, !dbg !9644
  %conv1 = zext i8 %7 to i32, !dbg !9643
  %cmp2 = icmp ne i32 %conv, %conv1, !dbg !9645
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !9646

if.then4:                                         ; preds = %if.then
  %8 = load i8, i8* %val, align 1, !dbg !9647
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9649
  %prev_cfg35 = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 18, !dbg !9650
  store i8 %8, i8* %prev_cfg35, align 2, !dbg !9651
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9652
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 2, !dbg !9652
  %11 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !9652
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %11, i32 0, i32 0, !dbg !9652
  %12 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !9652
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9652
  %14 = load i8, i8* %val, align 1, !dbg !9652
  call void %12(%struct.esp* %13, i8 zeroext %14, i64 12) #12, !dbg !9652
  br label %if.end, !dbg !9653

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end6, !dbg !9654

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !9655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_send_dma_cmd(%struct.esp* %esp, i32 %len, i32 %max_len, i32 %cmd) #0 !dbg !9656 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %len.addr = alloca i32, align 4
  %max_len.addr = alloca i32, align 4
  %cmd.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !9659, metadata !DIExpression()), !dbg !9660
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !9661, metadata !DIExpression()), !dbg !9662
  store i32 %max_len, i32* %max_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_len.addr, metadata !9663, metadata !DIExpression()), !dbg !9664
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !9665, metadata !DIExpression()), !dbg !9666
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9667
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 37, !dbg !9669
  %1 = load i32, i32* %flags, align 8, !dbg !9669
  %and = and i32 %1, 64, !dbg !9670
  %tobool = icmp ne i32 %and, 0, !dbg !9670
  br i1 %tobool, label %if.then, label %if.else, !dbg !9671

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9672, metadata !DIExpression()), !dbg !9674
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9675
  call void @scsi_esp_cmd(%struct.esp* %2, i8 zeroext 1) #12, !dbg !9676
  store i32 0, i32* %i, align 4, !dbg !9677
  br label %for.cond, !dbg !9679

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %i, align 4, !dbg !9680
  %4 = load i32, i32* %len.addr, align 4, !dbg !9682
  %cmp = icmp slt i32 %3, %4, !dbg !9683
  br i1 %cmp, label %for.body, label %for.end, !dbg !9684

for.body:                                         ; preds = %for.cond
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9685
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 2, !dbg !9685
  %6 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !9685
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %6, i32 0, i32 0, !dbg !9685
  %7 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !9685
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9685
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9685
  %command_block = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 8, !dbg !9685
  %10 = load i8*, i8** %command_block, align 8, !dbg !9685
  %11 = load i32, i32* %i, align 4, !dbg !9685
  %idxprom = sext i32 %11 to i64, !dbg !9685
  %arrayidx = getelementptr i8, i8* %10, i64 %idxprom, !dbg !9685
  %12 = load i8, i8* %arrayidx, align 1, !dbg !9685
  call void %7(%struct.esp* %8, i8 zeroext %12, i64 2) #12, !dbg !9685
  br label %for.inc, !dbg !9685

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !9686
  %inc = add i32 %13, 1, !dbg !9686
  store i32 %inc, i32* %i, align 4, !dbg !9686
  br label %for.cond, !dbg !9687, !llvm.loop !9688

for.end:                                          ; preds = %for.cond
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9690
  %15 = load i32, i32* %cmd.addr, align 4, !dbg !9691
  %conv = trunc i32 %15 to i8, !dbg !9691
  call void @scsi_esp_cmd(%struct.esp* %14, i8 zeroext %conv) #12, !dbg !9692
  br label %if.end7, !dbg !9693

if.else:                                          ; preds = %entry
  %16 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9694
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %16, i32 0, i32 36, !dbg !9697
  %17 = load i32, i32* %rev, align 4, !dbg !9697
  %cmp1 = icmp eq i32 %17, 8, !dbg !9698
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !9699

if.then3:                                         ; preds = %if.else
  %18 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9700
  call void @scsi_esp_cmd(%struct.esp* %18, i8 zeroext 1) #12, !dbg !9701
  br label %if.end, !dbg !9701

if.end:                                           ; preds = %if.then3, %if.else
  %19 = load i32, i32* %cmd.addr, align 4, !dbg !9702
  %or = or i32 %19, 128, !dbg !9702
  store i32 %or, i32* %cmd.addr, align 4, !dbg !9702
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9703
  %ops4 = getelementptr inbounds %struct.esp, %struct.esp* %20, i32 0, i32 2, !dbg !9704
  %21 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops4, align 8, !dbg !9704
  %send_dma_cmd = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %21, i32 0, i32 7, !dbg !9705
  %22 = load void (%struct.esp*, i32, i32, i32, i32, i8)*, void (%struct.esp*, i32, i32, i32, i32, i8)** %send_dma_cmd, align 8, !dbg !9705
  %23 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9706
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9707
  %command_block_dma = getelementptr inbounds %struct.esp, %struct.esp* %24, i32 0, i32 9, !dbg !9708
  %25 = load i64, i64* %command_block_dma, align 8, !dbg !9708
  %conv5 = trunc i64 %25 to i32, !dbg !9707
  %26 = load i32, i32* %len.addr, align 4, !dbg !9709
  %27 = load i32, i32* %max_len.addr, align 4, !dbg !9710
  %28 = load i32, i32* %cmd.addr, align 4, !dbg !9711
  %conv6 = trunc i32 %28 to i8, !dbg !9711
  call void %22(%struct.esp* %23, i32 %conv5, i32 %26, i32 %27, i32 0, i8 zeroext %conv6) #12, !dbg !9703
  br label %if.end7

if.end7:                                          ; preds = %if.end, %for.end
  ret void, !dbg !9712
}

; Function Attrs: noredzone
declare dso_local i32 @spi_populate_tag_msg(i8*, %struct.scsi_cmnd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_alloc_lun_tag(%struct.esp_cmd_entry* %ent, %struct.esp_lun_data* %lp) #0 !dbg !9713 {
entry:
  %retval = alloca i32, align 4
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %lp.addr = alloca %struct.esp_lun_data*, align 8
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !9716, metadata !DIExpression()), !dbg !9717
  store %struct.esp_lun_data* %lp, %struct.esp_lun_data** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_lun_data** %lp.addr, metadata !9718, metadata !DIExpression()), !dbg !9719
  %0 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9720
  %orig_tag = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %0, i32 0, i32 8, !dbg !9722
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %orig_tag, i64 0, i64 0, !dbg !9720
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9720
  %tobool = icmp ne i8 %1, 0, !dbg !9720
  br i1 %tobool, label %if.end16, label %if.then, !dbg !9723

if.then:                                          ; preds = %entry
  %2 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9724
  %non_tagged_cmd = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %2, i32 0, i32 0, !dbg !9727
  %3 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %non_tagged_cmd, align 8, !dbg !9727
  %tobool1 = icmp ne %struct.esp_cmd_entry* %3, null, !dbg !9724
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !9728

if.then2:                                         ; preds = %if.then
  store i32 -16, i32* %retval, align 4, !dbg !9729
  br label %return, !dbg !9729

if.end:                                           ; preds = %if.then
  %4 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9730
  %hold = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %4, i32 0, i32 2, !dbg !9732
  %5 = load i32, i32* %hold, align 4, !dbg !9732
  %tobool3 = icmp ne i32 %5, 0, !dbg !9730
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !9733

if.then4:                                         ; preds = %if.end
  %6 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9734
  %num_tagged = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %6, i32 0, i32 1, !dbg !9737
  %7 = load i32, i32* %num_tagged, align 8, !dbg !9737
  %tobool5 = icmp ne i32 %7, 0, !dbg !9734
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !9738

if.then6:                                         ; preds = %if.then4
  store i32 -16, i32* %retval, align 4, !dbg !9739
  br label %return, !dbg !9739

if.end7:                                          ; preds = %if.then4
  %8 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9740
  %hold8 = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %8, i32 0, i32 2, !dbg !9741
  store i32 0, i32* %hold8, align 4, !dbg !9742
  br label %if.end14, !dbg !9743

if.else:                                          ; preds = %if.end
  %9 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9744
  %num_tagged9 = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %9, i32 0, i32 1, !dbg !9746
  %10 = load i32, i32* %num_tagged9, align 8, !dbg !9746
  %tobool10 = icmp ne i32 %10, 0, !dbg !9744
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !9747

if.then11:                                        ; preds = %if.else
  %11 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9748
  %hold12 = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %11, i32 0, i32 2, !dbg !9750
  store i32 1, i32* %hold12, align 4, !dbg !9751
  store i32 -16, i32* %retval, align 4, !dbg !9752
  br label %return, !dbg !9752

if.end13:                                         ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end7
  %12 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9753
  %13 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9754
  %non_tagged_cmd15 = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %13, i32 0, i32 0, !dbg !9755
  store %struct.esp_cmd_entry* %12, %struct.esp_cmd_entry** %non_tagged_cmd15, align 8, !dbg !9756
  store i32 0, i32* %retval, align 4, !dbg !9757
  br label %return, !dbg !9757

if.end16:                                         ; preds = %entry
  %14 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9758
  %non_tagged_cmd17 = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %14, i32 0, i32 0, !dbg !9760
  %15 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %non_tagged_cmd17, align 8, !dbg !9760
  %tobool18 = icmp ne %struct.esp_cmd_entry* %15, null, !dbg !9758
  br i1 %tobool18, label %if.then21, label %lor.lhs.false, !dbg !9761

lor.lhs.false:                                    ; preds = %if.end16
  %16 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9762
  %hold19 = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %16, i32 0, i32 2, !dbg !9763
  %17 = load i32, i32* %hold19, align 4, !dbg !9763
  %tobool20 = icmp ne i32 %17, 0, !dbg !9762
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !9764

if.then21:                                        ; preds = %lor.lhs.false, %if.end16
  store i32 -16, i32* %retval, align 4, !dbg !9765
  br label %return, !dbg !9765

if.end22:                                         ; preds = %lor.lhs.false
  br label %do.body, !dbg !9766

do.body:                                          ; preds = %if.end22
  %18 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9767
  %tagged_cmds = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %18, i32 0, i32 3, !dbg !9767
  %19 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9767
  %orig_tag23 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %19, i32 0, i32 8, !dbg !9767
  %arrayidx24 = getelementptr [2 x i8], [2 x i8]* %orig_tag23, i64 0, i64 1, !dbg !9767
  %20 = load i8, i8* %arrayidx24, align 1, !dbg !9767
  %idxprom = zext i8 %20 to i64, !dbg !9767
  %arrayidx25 = getelementptr [256 x %struct.esp_cmd_entry*], [256 x %struct.esp_cmd_entry*]* %tagged_cmds, i64 0, i64 %idxprom, !dbg !9767
  %21 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %arrayidx25, align 8, !dbg !9767
  %tobool26 = icmp ne %struct.esp_cmd_entry* %21, null, !dbg !9767
  %lnot = xor i1 %tobool26, true, !dbg !9767
  %lnot27 = xor i1 %lnot, true, !dbg !9767
  %lnot.ext = zext i1 %lnot27 to i32, !dbg !9767
  %conv = sext i32 %lnot.ext to i64, !dbg !9767
  %tobool28 = icmp ne i64 %conv, 0, !dbg !9767
  br i1 %tobool28, label %if.then29, label %if.end37, !dbg !9770

if.then29:                                        ; preds = %do.body
  br label %do.body30, !dbg !9767

do.body30:                                        ; preds = %if.then29
  br label %do.body31, !dbg !9771

do.body31:                                        ; preds = %do.body30
  br label %do.end, !dbg !9773

do.end:                                           ; preds = %do.body31
  br label %do.body32, !dbg !9771

do.body32:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 609, i32 0, i64 12) #6, !dbg !9775, !srcloc !9777
  br label %do.end33, !dbg !9775

do.end33:                                         ; preds = %do.body32
  br label %do.body34, !dbg !9771

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 294) #6, !dbg !9778, !srcloc !9781
  unreachable, !dbg !9782

do.end35:                                         ; No predecessors!
  br label %do.end36, !dbg !9771

do.end36:                                         ; preds = %do.end35
  br label %if.end37, !dbg !9771

if.end37:                                         ; preds = %do.end36, %do.body
  br label %do.end38, !dbg !9770

do.end38:                                         ; preds = %if.end37
  %22 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9783
  %23 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9784
  %tagged_cmds39 = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %23, i32 0, i32 3, !dbg !9785
  %24 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9786
  %orig_tag40 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %24, i32 0, i32 8, !dbg !9787
  %arrayidx41 = getelementptr [2 x i8], [2 x i8]* %orig_tag40, i64 0, i64 1, !dbg !9786
  %25 = load i8, i8* %arrayidx41, align 1, !dbg !9786
  %idxprom42 = zext i8 %25 to i64, !dbg !9784
  %arrayidx43 = getelementptr [256 x %struct.esp_cmd_entry*], [256 x %struct.esp_cmd_entry*]* %tagged_cmds39, i64 0, i64 %idxprom42, !dbg !9784
  store %struct.esp_cmd_entry* %22, %struct.esp_cmd_entry** %arrayidx43, align 8, !dbg !9788
  %26 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !9789
  %num_tagged44 = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %26, i32 0, i32 1, !dbg !9790
  %27 = load i32, i32* %num_tagged44, align 8, !dbg !9791
  %inc = add i32 %27, 1, !dbg !9791
  store i32 %inc, i32* %num_tagged44, align 8, !dbg !9791
  store i32 0, i32* %retval, align 4, !dbg !9792
  br label %return, !dbg !9792

return:                                           ; preds = %do.end38, %if.then21, %if.end14, %if.then11, %if.then6, %if.then2
  %28 = load i32, i32* %retval, align 4, !dbg !9793
  ret i32 %28, !dbg !9793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_map_sense(%struct.esp* %esp, %struct.esp_cmd_entry* %ent) #0 !dbg !9794 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !9795, metadata !DIExpression()), !dbg !9796
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !9797, metadata !DIExpression()), !dbg !9798
  %0 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9799
  %cmd = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %0, i32 0, i32 1, !dbg !9800
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9800
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 20, !dbg !9801
  %2 = load i8*, i8** %sense_buffer, align 8, !dbg !9801
  %3 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9802
  %sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %3, i32 0, i32 11, !dbg !9803
  store i8* %2, i8** %sense_ptr, align 8, !dbg !9804
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9805
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 37, !dbg !9807
  %5 = load i32, i32* %flags, align 8, !dbg !9807
  %and = and i32 %5, 128, !dbg !9808
  %tobool = icmp ne i32 %and, 0, !dbg !9808
  br i1 %tobool, label %if.then, label %if.end, !dbg !9809

if.then:                                          ; preds = %entry
  %6 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9810
  %sense_ptr1 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %6, i32 0, i32 11, !dbg !9812
  %7 = load i8*, i8** %sense_ptr1, align 8, !dbg !9812
  %8 = ptrtoint i8* %7 to i64, !dbg !9813
  %9 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9814
  %sense_dma = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %9, i32 0, i32 13, !dbg !9815
  store i64 %8, i64* %sense_dma, align 8, !dbg !9816
  br label %return, !dbg !9817

if.end:                                           ; preds = %entry
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !9818
  %dev = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 4, !dbg !9818
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9818
  %12 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9818
  %sense_ptr2 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %12, i32 0, i32 11, !dbg !9818
  %13 = load i8*, i8** %sense_ptr2, align 8, !dbg !9818
  %call = call i64 @dma_map_single_attrs(%struct.device* %11, i8* %13, i64 96, i32 2, i64 0) #12, !dbg !9818
  %14 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !9819
  %sense_dma3 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %14, i32 0, i32 13, !dbg !9820
  store i64 %call, i64* %sense_dma3, align 8, !dbg !9821
  br label %return, !dbg !9822

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #0 !dbg !5560 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9823, metadata !DIExpression()), !dbg !9824
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9825, metadata !DIExpression()), !dbg !9826
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9827, metadata !DIExpression()), !dbg !9828
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !9829, metadata !DIExpression()), !dbg !9830
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !9831, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !9833, metadata !DIExpression()), !dbg !9836
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9836
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #12, !dbg !9836
  %lnot = xor i1 %call, true, !dbg !9836
  %lnot1 = xor i1 %lnot, true, !dbg !9836
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9836
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !9836
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !9837
  %tobool = icmp ne i32 %1, 0, !dbg !9837
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9837

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !9837
  %tobool2 = trunc i8 %2 to i1, !dbg !9837
  %lnot3 = xor i1 %tobool2, true, !dbg !9837
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !9839
  %lnot5 = xor i1 %3, true, !dbg !9837
  %lnot7 = xor i1 %lnot5, true, !dbg !9837
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9837
  %conv = sext i32 %lnot.ext8 to i64, !dbg !9837
  %tobool9 = icmp ne i64 %conv, 0, !dbg !9837
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !9836

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !9840
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9842, metadata !DIExpression()), !dbg !9844
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !9844
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !9845
  %tobool10 = icmp ne i32 %4, 0, !dbg !9845
  %lnot11 = xor i1 %tobool10, true, !dbg !9845
  %lnot13 = xor i1 %lnot11, true, !dbg !9845
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !9845
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !9845
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !9845
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !9844

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !9845

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !9847

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !9849

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9847
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #12, !dbg !9847
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9847
  %call20 = call i8* @dev_name(%struct.device* %6) #12, !dbg !9847
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0), i8* %call19, i8* %call20) #12, !dbg !9847
  br label %do.body21, !dbg !9847

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !9851

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !9853

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !9851

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.25, i64 0, i64 0), i32 276, i32 2313, i64 12) #6, !dbg !9855, !srcloc !9857
  br label %do.end25, !dbg !9855

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 288) #6, !dbg !9858, !srcloc !9860
  br label %do.body26, !dbg !9851

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !9861

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !9851

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !9847

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !9863

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !9847

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !9847

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !9844
  %tobool32 = icmp ne i32 %7, 0, !dbg !9844
  %lnot33 = xor i1 %tobool32, true, !dbg !9844
  %lnot35 = xor i1 %lnot33, true, !dbg !9844
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !9844
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !9844
  store i64 %conv37, i64* %tmp, align 8, !dbg !9845
  %8 = load i64, i64* %tmp, align 8, !dbg !9844
  br label %if.end38, !dbg !9840

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !9836
  %tobool40 = icmp ne i32 %9, 0, !dbg !9836
  %lnot41 = xor i1 %tobool40, true, !dbg !9836
  %lnot43 = xor i1 %lnot41, true, !dbg !9836
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !9836
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !9836
  store i64 %conv45, i64* %tmp39, align 8, !dbg !9837
  %10 = load i64, i64* %tmp39, align 8, !dbg !9836
  %tobool46 = icmp ne i64 %10, 0, !dbg !9865
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !9866

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !9867
  br label %return, !dbg !9867

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9868
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !9869
  %13 = load i64, i64* %size.addr, align 8, !dbg !9870
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #12, !dbg !9871
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9872
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !9873
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !9873
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !9873
  %18 = ptrtoint i8* %17 to i64, !dbg !9873
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #12, !dbg !9873
  %shr = lshr i64 %call49, 12, !dbg !9873
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !9873
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !9874
  %20 = ptrtoint i8* %19 to i64, !dbg !9874
  %and = and i64 %20, 4095, !dbg !9874
  %21 = load i64, i64* %size.addr, align 8, !dbg !9875
  %22 = load i32, i32* %dir.addr, align 4, !dbg !9876
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !9877
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #12, !dbg !9878
  store i64 %call50, i64* %retval, align 8, !dbg !9879
  br label %return, !dbg !9879

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !9880
  ret i64 %24, !dbg !9880
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #3

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !9881 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9884, metadata !DIExpression()), !dbg !9885
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9886
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9888
  %1 = load i8*, i8** %init_name, align 8, !dbg !9888
  %tobool = icmp ne i8* %1, null, !dbg !9886
  br i1 %tobool, label %if.then, label %if.end, !dbg !9889

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9890
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !9891
  %3 = load i8*, i8** %init_name1, align 8, !dbg !9891
  store i8* %3, i8** %retval, align 8, !dbg !9892
  br label %return, !dbg !9892

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9893
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !9894
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #12, !dbg !9895
  store i8* %call, i8** %retval, align 8, !dbg !9896
  br label %return, !dbg !9896

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !9897
  ret i8* %5, !dbg !9897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #0 !dbg !9898 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9903, metadata !DIExpression()), !dbg !9904
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !9905, metadata !DIExpression()), !dbg !9906
  ret void, !dbg !9907
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !9908 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !9912, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9914, metadata !DIExpression()), !dbg !9915
  %0 = load i64, i64* %x.addr, align 8, !dbg !9916
  %sub = sub i64 %0, -2147483648, !dbg !9917
  store i64 %sub, i64* %y, align 8, !dbg !9915
  %1 = load i64, i64* %y, align 8, !dbg !9918
  %2 = load i64, i64* %x.addr, align 8, !dbg !9919
  %3 = load i64, i64* %y, align 8, !dbg !9920
  %cmp = icmp ugt i64 %2, %3, !dbg !9921
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9922

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !9923
  br label %cond.end, !dbg !9922

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !9924
  %sub1 = sub i64 -2147483648, %5, !dbg !9925
  br label %cond.end, !dbg !9922

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !9922
  %add = add i64 %1, %cond, !dbg !9926
  store i64 %add, i64* %x.addr, align 8, !dbg !9927
  %6 = load i64, i64* %x.addr, align 8, !dbg !9928
  ret i64 %6, !dbg !9929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !9930 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !9935, metadata !DIExpression()), !dbg !9936
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !9937
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !9938
  %1 = load i8*, i8** %name, align 8, !dbg !9938
  ret i8* %1, !dbg !9939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %cmd) #0 !dbg !9940 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9943, metadata !DIExpression()), !dbg !9944
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9945
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !9946
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !9947
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 0, !dbg !9948
  %1 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !9948
  ret %struct.scatterlist* %1, !dbg !9949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_sg_count(%struct.scsi_cmnd* %cmd) #0 !dbg !9950 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9953, metadata !DIExpression()), !dbg !9954
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9955
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !9956
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !9957
  %nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 1, !dbg !9958
  %1 = load i32, i32* %nents, align 8, !dbg !9958
  ret i32 %1, !dbg !9959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @sg_virt(%struct.scatterlist* %sg) #0 !dbg !9960 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !9963, metadata !DIExpression()), !dbg !9969
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !9971, metadata !DIExpression()), !dbg !9972
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !9973
  %call = call %struct.page* @sg_page(%struct.scatterlist* %0) #12, !dbg !9973
  store %struct.page* %call, %struct.page** %page.addr.i, align 8
  %1 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !9974
  %2 = load i64, i64* @vmemmap_base, align 8, !dbg !9974
  %3 = inttoptr i64 %2 to %struct.page*, !dbg !9974
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %1 to i64, !dbg !9974
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %2, !dbg !9974
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !9974
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !9974
  %4 = load i64, i64* @page_offset_base, align 8, !dbg !9974
  %add.i = add i64 %shl.i, %4, !dbg !9974
  %5 = inttoptr i64 %add.i to i8*, !dbg !9974
  %6 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !9975
  %offset = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %6, i32 0, i32 1, !dbg !9976
  %7 = load i32, i32* %offset, align 8, !dbg !9976
  %idx.ext = zext i32 %7 to i64, !dbg !9977
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !9977
  ret i8* %add.ptr, !dbg !9978
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #3

; Function Attrs: noredzone
declare dso_local i32 @scsi_dma_map(%struct.scsi_cmnd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @sg_page(%struct.scatterlist* %sg) #0 !dbg !9979 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !9982, metadata !DIExpression()), !dbg !9983
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !9984
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !9985
  %1 = load i64, i64* %page_link, align 8, !dbg !9985
  %and = and i64 %1, -4, !dbg !9986
  %2 = inttoptr i64 %and to %struct.page*, !dbg !9987
  ret %struct.page* %2, !dbg !9988
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #3

; Function Attrs: noredzone
declare dso_local %struct.scsi_device* @__scsi_device_lookup_by_target(%struct.scsi_target*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.esp_cmd_entry* @esp_reconnect_with_tag(%struct.esp* %esp, %struct.esp_lun_data* %lp) #0 !dbg !9989 {
entry:
  %retval = alloca %struct.esp_cmd_entry*, align 8
  %esp.addr = alloca %struct.esp*, align 8
  %lp.addr = alloca %struct.esp_lun_data*, align 8
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %i = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !9992, metadata !DIExpression()), !dbg !9993
  store %struct.esp_lun_data* %lp, %struct.esp_lun_data** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_lun_data** %lp.addr, metadata !9994, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !9996, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9998, metadata !DIExpression()), !dbg !9999
  %0 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !10000
  %num_tagged = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %0, i32 0, i32 1, !dbg !10002
  %1 = load i32, i32* %num_tagged, align 8, !dbg !10002
  %tobool = icmp ne i32 %1, 0, !dbg !10000
  br i1 %tobool, label %if.end, label %if.then, !dbg !10003

if.then:                                          ; preds = %entry
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10004
  %host = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 3, !dbg !10004
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10004
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 47, !dbg !10004
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0)) #13, !dbg !10004
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %retval, align 8, !dbg !10006
  br label %return, !dbg !10006

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !10007

do.body:                                          ; preds = %if.end
  %4 = load i32, i32* @esp_debug, align 4, !dbg !10008
  %and = and i32 %4, 512, !dbg !10008
  %tobool1 = icmp ne i32 %and, 0, !dbg !10008
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !10011

if.then2:                                         ; preds = %do.body
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10008
  %host3 = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 3, !dbg !10008
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host3, align 8, !dbg !10008
  %shost_gendev4 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 47, !dbg !10008
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !10008
  br label %if.end5, !dbg !10008

if.end5:                                          ; preds = %if.then2, %do.body
  br label %do.end, !dbg !10011

do.end:                                           ; preds = %if.end5
  store i32 0, i32* %i, align 4, !dbg !10012
  br label %for.cond, !dbg !10014

for.cond:                                         ; preds = %for.inc, %do.end
  %7 = load i32, i32* %i, align 4, !dbg !10015
  %cmp = icmp slt i32 %7, 100, !dbg !10017
  br i1 %cmp, label %for.body, label %for.end, !dbg !10018

for.body:                                         ; preds = %for.cond
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10019
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %8, i32 0, i32 2, !dbg !10022
  %9 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !10022
  %irq_pending = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %9, i32 0, i32 2, !dbg !10023
  %10 = load i32 (%struct.esp*)*, i32 (%struct.esp*)** %irq_pending, align 8, !dbg !10023
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10024
  %call = call i32 %10(%struct.esp* %11) #12, !dbg !10019
  %tobool6 = icmp ne i32 %call, 0, !dbg !10019
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10025

if.then7:                                         ; preds = %for.body
  br label %for.end, !dbg !10026

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !10027

for.inc:                                          ; preds = %if.end8
  %12 = load i32, i32* %i, align 4, !dbg !10028
  %inc = add i32 %12, 1, !dbg !10028
  store i32 %inc, i32* %i, align 4, !dbg !10028
  br label %for.cond, !dbg !10029, !llvm.loop !10030

for.end:                                          ; preds = %if.then7, %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !10032
  %cmp9 = icmp eq i32 %13, 100, !dbg !10034
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !10035

if.then10:                                        ; preds = %for.end
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10036
  %host11 = getelementptr inbounds %struct.esp, %struct.esp* %14, i32 0, i32 3, !dbg !10036
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host11, align 8, !dbg !10036
  %shost_gendev12 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %15, i32 0, i32 47, !dbg !10036
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !10036
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %retval, align 8, !dbg !10038
  br label %return, !dbg !10038

if.end13:                                         ; preds = %for.end
  %16 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10039
  %ops14 = getelementptr inbounds %struct.esp, %struct.esp* %16, i32 0, i32 2, !dbg !10039
  %17 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops14, align 8, !dbg !10039
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %17, i32 0, i32 1, !dbg !10039
  %18 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !10039
  %19 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10039
  %call15 = call zeroext i8 %18(%struct.esp* %19, i64 4) #12, !dbg !10039
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10040
  %sreg = getelementptr inbounds %struct.esp, %struct.esp* %20, i32 0, i32 11, !dbg !10041
  store i8 %call15, i8* %sreg, align 4, !dbg !10042
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10043
  %ops16 = getelementptr inbounds %struct.esp, %struct.esp* %21, i32 0, i32 2, !dbg !10043
  %22 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops16, align 8, !dbg !10043
  %esp_read817 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %22, i32 0, i32 1, !dbg !10043
  %23 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read817, align 8, !dbg !10043
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10043
  %call18 = call zeroext i8 %23(%struct.esp* %24, i64 5) #12, !dbg !10043
  %25 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10044
  %ireg = getelementptr inbounds %struct.esp, %struct.esp* %25, i32 0, i32 14, !dbg !10045
  store i8 %call18, i8* %ireg, align 1, !dbg !10046
  br label %do.body19, !dbg !10047

do.body19:                                        ; preds = %if.end13
  %26 = load i32, i32* @esp_debug, align 4, !dbg !10048
  %and20 = and i32 %26, 512, !dbg !10048
  %tobool21 = icmp ne i32 %and20, 0, !dbg !10048
  br i1 %tobool21, label %if.then22, label %if.end28, !dbg !10051

if.then22:                                        ; preds = %do.body19
  %27 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10048
  %host23 = getelementptr inbounds %struct.esp, %struct.esp* %27, i32 0, i32 3, !dbg !10048
  %28 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host23, align 8, !dbg !10048
  %shost_gendev24 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %28, i32 0, i32 47, !dbg !10048
  %29 = load i32, i32* %i, align 4, !dbg !10048
  %30 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10048
  %ireg25 = getelementptr inbounds %struct.esp, %struct.esp* %30, i32 0, i32 14, !dbg !10048
  %31 = load i8, i8* %ireg25, align 1, !dbg !10048
  %conv = zext i8 %31 to i32, !dbg !10048
  %32 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10048
  %sreg26 = getelementptr inbounds %struct.esp, %struct.esp* %32, i32 0, i32 11, !dbg !10048
  %33 = load i8, i8* %sreg26, align 4, !dbg !10048
  %conv27 = zext i8 %33 to i32, !dbg !10048
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0), i32 %29, i32 %conv, i32 %conv27) #13, !dbg !10048
  br label %if.end28, !dbg !10048

if.end28:                                         ; preds = %if.then22, %do.body19
  br label %do.end29, !dbg !10051

do.end29:                                         ; preds = %if.end28
  %34 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10052
  %ireg30 = getelementptr inbounds %struct.esp, %struct.esp* %34, i32 0, i32 14, !dbg !10054
  %35 = load i8, i8* %ireg30, align 1, !dbg !10054
  %conv31 = zext i8 %35 to i32, !dbg !10052
  %and32 = and i32 %conv31, 32, !dbg !10055
  %tobool33 = icmp ne i32 %and32, 0, !dbg !10055
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !10056

if.then34:                                        ; preds = %do.end29
  %36 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10057
  %host35 = getelementptr inbounds %struct.esp, %struct.esp* %36, i32 0, i32 3, !dbg !10057
  %37 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host35, align 8, !dbg !10057
  %shost_gendev36 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %37, i32 0, i32 47, !dbg !10057
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev36, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0)) #13, !dbg !10057
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %retval, align 8, !dbg !10059
  br label %return, !dbg !10059

if.end37:                                         ; preds = %do.end29
  %38 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10060
  %sreg38 = getelementptr inbounds %struct.esp, %struct.esp* %38, i32 0, i32 11, !dbg !10062
  %39 = load i8, i8* %sreg38, align 4, !dbg !10062
  %conv39 = zext i8 %39 to i32, !dbg !10060
  %and40 = and i32 %conv39, 7, !dbg !10063
  %cmp41 = icmp ne i32 %and40, 7, !dbg !10064
  br i1 %cmp41, label %if.then43, label %if.end48, !dbg !10065

if.then43:                                        ; preds = %if.end37
  %40 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10066
  %host44 = getelementptr inbounds %struct.esp, %struct.esp* %40, i32 0, i32 3, !dbg !10066
  %41 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host44, align 8, !dbg !10066
  %shost_gendev45 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %41, i32 0, i32 47, !dbg !10066
  %42 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10066
  %sreg46 = getelementptr inbounds %struct.esp, %struct.esp* %42, i32 0, i32 11, !dbg !10066
  %43 = load i8, i8* %sreg46, align 4, !dbg !10066
  %conv47 = zext i8 %43 to i32, !dbg !10066
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev45, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0), i32 %conv47) #13, !dbg !10066
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %retval, align 8, !dbg !10068
  br label %return, !dbg !10068

if.end48:                                         ; preds = %if.end37
  %44 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10069
  %command_block = getelementptr inbounds %struct.esp, %struct.esp* %44, i32 0, i32 8, !dbg !10070
  %45 = load i8*, i8** %command_block, align 8, !dbg !10070
  %arrayidx = getelementptr i8, i8* %45, i64 0, !dbg !10069
  store i8 -1, i8* %arrayidx, align 1, !dbg !10071
  %46 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10072
  %command_block49 = getelementptr inbounds %struct.esp, %struct.esp* %46, i32 0, i32 8, !dbg !10073
  %47 = load i8*, i8** %command_block49, align 8, !dbg !10073
  %arrayidx50 = getelementptr i8, i8* %47, i64 1, !dbg !10072
  store i8 -1, i8* %arrayidx50, align 1, !dbg !10074
  %48 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10075
  %ops51 = getelementptr inbounds %struct.esp, %struct.esp* %48, i32 0, i32 2, !dbg !10076
  %49 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops51, align 8, !dbg !10076
  %send_dma_cmd = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %49, i32 0, i32 7, !dbg !10077
  %50 = load void (%struct.esp*, i32, i32, i32, i32, i8)*, void (%struct.esp*, i32, i32, i32, i32, i8)** %send_dma_cmd, align 8, !dbg !10077
  %51 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10078
  %52 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10079
  %command_block_dma = getelementptr inbounds %struct.esp, %struct.esp* %52, i32 0, i32 9, !dbg !10080
  %53 = load i64, i64* %command_block_dma, align 8, !dbg !10080
  %conv52 = trunc i64 %53 to i32, !dbg !10079
  call void %50(%struct.esp* %51, i32 %conv52, i32 2, i32 2, i32 1, i8 zeroext -112) #12, !dbg !10075
  %54 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10081
  call void @scsi_esp_cmd(%struct.esp* %54, i8 zeroext 18) #12, !dbg !10082
  store i32 0, i32* %i, align 4, !dbg !10083
  br label %for.cond53, !dbg !10085

for.cond53:                                       ; preds = %for.inc77, %if.end48
  %55 = load i32, i32* %i, align 4, !dbg !10086
  %cmp54 = icmp slt i32 %55, 2500, !dbg !10088
  br i1 %cmp54, label %for.body56, label %for.end79, !dbg !10089

for.body56:                                       ; preds = %for.cond53
  %56 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10090
  %ops57 = getelementptr inbounds %struct.esp, %struct.esp* %56, i32 0, i32 2, !dbg !10093
  %57 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops57, align 8, !dbg !10093
  %irq_pending58 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %57, i32 0, i32 2, !dbg !10094
  %58 = load i32 (%struct.esp*)*, i32 (%struct.esp*)** %irq_pending58, align 8, !dbg !10094
  %59 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10095
  %call59 = call i32 %58(%struct.esp* %59) #12, !dbg !10090
  %tobool60 = icmp ne i32 %call59, 0, !dbg !10090
  br i1 %tobool60, label %if.then61, label %if.end76, !dbg !10096

if.then61:                                        ; preds = %for.body56
  %60 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10097
  %ops62 = getelementptr inbounds %struct.esp, %struct.esp* %60, i32 0, i32 2, !dbg !10097
  %61 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops62, align 8, !dbg !10097
  %esp_read863 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %61, i32 0, i32 1, !dbg !10097
  %62 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read863, align 8, !dbg !10097
  %63 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10097
  %call64 = call zeroext i8 %62(%struct.esp* %63, i64 4) #12, !dbg !10097
  %64 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10099
  %sreg65 = getelementptr inbounds %struct.esp, %struct.esp* %64, i32 0, i32 11, !dbg !10100
  store i8 %call64, i8* %sreg65, align 4, !dbg !10101
  %65 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10102
  %ops66 = getelementptr inbounds %struct.esp, %struct.esp* %65, i32 0, i32 2, !dbg !10102
  %66 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops66, align 8, !dbg !10102
  %esp_read867 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %66, i32 0, i32 1, !dbg !10102
  %67 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read867, align 8, !dbg !10102
  %68 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10102
  %call68 = call zeroext i8 %67(%struct.esp* %68, i64 5) #12, !dbg !10102
  %69 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10103
  %ireg69 = getelementptr inbounds %struct.esp, %struct.esp* %69, i32 0, i32 14, !dbg !10104
  store i8 %call68, i8* %ireg69, align 1, !dbg !10105
  %70 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10106
  %ireg70 = getelementptr inbounds %struct.esp, %struct.esp* %70, i32 0, i32 14, !dbg !10108
  %71 = load i8, i8* %ireg70, align 1, !dbg !10108
  %conv71 = zext i8 %71 to i32, !dbg !10106
  %and72 = and i32 %conv71, 8, !dbg !10109
  %tobool73 = icmp ne i32 %and72, 0, !dbg !10109
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !10110

if.then74:                                        ; preds = %if.then61
  br label %for.end79, !dbg !10111

if.end75:                                         ; preds = %if.then61
  br label %if.end76, !dbg !10112

if.end76:                                         ; preds = %if.end75, %for.body56
  call void @__const_udelay(i64 4295) #12, !dbg !10113
  br label %for.inc77, !dbg !10118

for.inc77:                                        ; preds = %if.end76
  %72 = load i32, i32* %i, align 4, !dbg !10119
  %inc78 = add i32 %72, 1, !dbg !10119
  store i32 %inc78, i32* %i, align 4, !dbg !10119
  br label %for.cond53, !dbg !10120, !llvm.loop !10121

for.end79:                                        ; preds = %if.then74, %for.cond53
  %73 = load i32, i32* %i, align 4, !dbg !10123
  %cmp80 = icmp eq i32 %73, 2500, !dbg !10125
  br i1 %cmp80, label %if.then82, label %if.end85, !dbg !10126

if.then82:                                        ; preds = %for.end79
  %74 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10127
  %host83 = getelementptr inbounds %struct.esp, %struct.esp* %74, i32 0, i32 3, !dbg !10127
  %75 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host83, align 8, !dbg !10127
  %shost_gendev84 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %75, i32 0, i32 47, !dbg !10127
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i64 0, i64 0)) #13, !dbg !10127
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %retval, align 8, !dbg !10129
  br label %return, !dbg !10129

if.end85:                                         ; preds = %for.end79
  %76 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10130
  %ops86 = getelementptr inbounds %struct.esp, %struct.esp* %76, i32 0, i32 2, !dbg !10131
  %77 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops86, align 8, !dbg !10131
  %dma_drain = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %77, i32 0, i32 5, !dbg !10132
  %78 = load void (%struct.esp*)*, void (%struct.esp*)** %dma_drain, align 8, !dbg !10132
  %79 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10133
  call void %78(%struct.esp* %79) #12, !dbg !10130
  %80 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10134
  %ops87 = getelementptr inbounds %struct.esp, %struct.esp* %80, i32 0, i32 2, !dbg !10135
  %81 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops87, align 8, !dbg !10135
  %dma_invalidate = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %81, i32 0, i32 6, !dbg !10136
  %82 = load void (%struct.esp*)*, void (%struct.esp*)** %dma_invalidate, align 8, !dbg !10136
  %83 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10137
  call void %82(%struct.esp* %83) #12, !dbg !10134
  br label %do.body88, !dbg !10138

do.body88:                                        ; preds = %if.end85
  %84 = load i32, i32* @esp_debug, align 4, !dbg !10139
  %and89 = and i32 %84, 512, !dbg !10139
  %tobool90 = icmp ne i32 %and89, 0, !dbg !10139
  br i1 %tobool90, label %if.then91, label %if.end104, !dbg !10142

if.then91:                                        ; preds = %do.body88
  %85 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10139
  %host92 = getelementptr inbounds %struct.esp, %struct.esp* %85, i32 0, i32 3, !dbg !10139
  %86 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host92, align 8, !dbg !10139
  %shost_gendev93 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %86, i32 0, i32 47, !dbg !10139
  %87 = load i32, i32* %i, align 4, !dbg !10139
  %88 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10139
  %ireg94 = getelementptr inbounds %struct.esp, %struct.esp* %88, i32 0, i32 14, !dbg !10139
  %89 = load i8, i8* %ireg94, align 1, !dbg !10139
  %conv95 = zext i8 %89 to i32, !dbg !10139
  %90 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10139
  %sreg96 = getelementptr inbounds %struct.esp, %struct.esp* %90, i32 0, i32 11, !dbg !10139
  %91 = load i8, i8* %sreg96, align 4, !dbg !10139
  %conv97 = zext i8 %91 to i32, !dbg !10139
  %92 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10139
  %command_block98 = getelementptr inbounds %struct.esp, %struct.esp* %92, i32 0, i32 8, !dbg !10139
  %93 = load i8*, i8** %command_block98, align 8, !dbg !10139
  %arrayidx99 = getelementptr i8, i8* %93, i64 0, !dbg !10139
  %94 = load i8, i8* %arrayidx99, align 1, !dbg !10139
  %conv100 = zext i8 %94 to i32, !dbg !10139
  %95 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10139
  %command_block101 = getelementptr inbounds %struct.esp, %struct.esp* %95, i32 0, i32 8, !dbg !10139
  %96 = load i8*, i8** %command_block101, align 8, !dbg !10139
  %arrayidx102 = getelementptr i8, i8* %96, i64 1, !dbg !10139
  %97 = load i8, i8* %arrayidx102, align 1, !dbg !10139
  %conv103 = zext i8 %97 to i32, !dbg !10139
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.device* %shost_gendev93, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i64 0, i64 0), i32 %87, i32 %conv95, i32 %conv97, i32 %conv100, i32 %conv103) #13, !dbg !10139
  br label %if.end104, !dbg !10139

if.end104:                                        ; preds = %if.then91, %do.body88
  br label %do.end105, !dbg !10142

do.end105:                                        ; preds = %if.end104
  %98 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10143
  %command_block106 = getelementptr inbounds %struct.esp, %struct.esp* %98, i32 0, i32 8, !dbg !10145
  %99 = load i8*, i8** %command_block106, align 8, !dbg !10145
  %arrayidx107 = getelementptr i8, i8* %99, i64 0, !dbg !10143
  %100 = load i8, i8* %arrayidx107, align 1, !dbg !10143
  %conv108 = zext i8 %100 to i32, !dbg !10143
  %cmp109 = icmp slt i32 %conv108, 32, !dbg !10146
  br i1 %cmp109, label %if.then116, label %lor.lhs.false, !dbg !10147

lor.lhs.false:                                    ; preds = %do.end105
  %101 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10148
  %command_block111 = getelementptr inbounds %struct.esp, %struct.esp* %101, i32 0, i32 8, !dbg !10149
  %102 = load i8*, i8** %command_block111, align 8, !dbg !10149
  %arrayidx112 = getelementptr i8, i8* %102, i64 0, !dbg !10148
  %103 = load i8, i8* %arrayidx112, align 1, !dbg !10148
  %conv113 = zext i8 %103 to i32, !dbg !10148
  %cmp114 = icmp sgt i32 %conv113, 34, !dbg !10150
  br i1 %cmp114, label %if.then116, label %if.end122, !dbg !10151

if.then116:                                       ; preds = %lor.lhs.false, %do.end105
  %104 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10152
  %host117 = getelementptr inbounds %struct.esp, %struct.esp* %104, i32 0, i32 3, !dbg !10152
  %105 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host117, align 8, !dbg !10152
  %shost_gendev118 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %105, i32 0, i32 47, !dbg !10152
  %106 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10152
  %command_block119 = getelementptr inbounds %struct.esp, %struct.esp* %106, i32 0, i32 8, !dbg !10152
  %107 = load i8*, i8** %command_block119, align 8, !dbg !10152
  %arrayidx120 = getelementptr i8, i8* %107, i64 0, !dbg !10152
  %108 = load i8, i8* %arrayidx120, align 1, !dbg !10152
  %conv121 = zext i8 %108 to i32, !dbg !10152
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev118, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.37, i64 0, i64 0), i32 %conv121) #13, !dbg !10152
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %retval, align 8, !dbg !10154
  br label %return, !dbg !10154

if.end122:                                        ; preds = %lor.lhs.false
  %109 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp.addr, align 8, !dbg !10155
  %tagged_cmds = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %109, i32 0, i32 3, !dbg !10156
  %110 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10157
  %command_block123 = getelementptr inbounds %struct.esp, %struct.esp* %110, i32 0, i32 8, !dbg !10158
  %111 = load i8*, i8** %command_block123, align 8, !dbg !10158
  %arrayidx124 = getelementptr i8, i8* %111, i64 1, !dbg !10157
  %112 = load i8, i8* %arrayidx124, align 1, !dbg !10157
  %idxprom = zext i8 %112 to i64, !dbg !10155
  %arrayidx125 = getelementptr [256 x %struct.esp_cmd_entry*], [256 x %struct.esp_cmd_entry*]* %tagged_cmds, i64 0, i64 %idxprom, !dbg !10155
  %113 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %arrayidx125, align 8, !dbg !10155
  store %struct.esp_cmd_entry* %113, %struct.esp_cmd_entry** %ent, align 8, !dbg !10159
  %114 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !10160
  %tobool126 = icmp ne %struct.esp_cmd_entry* %114, null, !dbg !10160
  br i1 %tobool126, label %if.end133, label %if.then127, !dbg !10162

if.then127:                                       ; preds = %if.end122
  %115 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10163
  %host128 = getelementptr inbounds %struct.esp, %struct.esp* %115, i32 0, i32 3, !dbg !10163
  %116 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host128, align 8, !dbg !10163
  %shost_gendev129 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %116, i32 0, i32 47, !dbg !10163
  %117 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10163
  %command_block130 = getelementptr inbounds %struct.esp, %struct.esp* %117, i32 0, i32 8, !dbg !10163
  %118 = load i8*, i8** %command_block130, align 8, !dbg !10163
  %arrayidx131 = getelementptr i8, i8* %118, i64 1, !dbg !10163
  %119 = load i8, i8* %arrayidx131, align 1, !dbg !10163
  %conv132 = zext i8 %119 to i32, !dbg !10163
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev129, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.38, i64 0, i64 0), i32 %conv132) #13, !dbg !10163
  store %struct.esp_cmd_entry* null, %struct.esp_cmd_entry** %retval, align 8, !dbg !10165
  br label %return, !dbg !10165

if.end133:                                        ; preds = %if.end122
  %120 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !10166
  store %struct.esp_cmd_entry* %120, %struct.esp_cmd_entry** %retval, align 8, !dbg !10167
  br label %return, !dbg !10167

return:                                           ; preds = %if.end133, %if.then127, %if.then116, %if.then82, %if.then43, %if.then34, %if.then10, %if.then
  %121 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %retval, align 8, !dbg !10168
  ret %struct.esp_cmd_entry* %121, !dbg !10168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_restore_pointers(%struct.esp* %esp, %struct.esp_cmd_entry* %ent) #0 !dbg !10169 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %spriv = alloca %struct.esp_cmd_priv*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !10170, metadata !DIExpression()), !dbg !10171
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !10174, metadata !DIExpression()), !dbg !10175
  %0 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10176
  %cmd1 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %0, i32 0, i32 1, !dbg !10177
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !10177
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !10175
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_priv** %spriv, metadata !10178, metadata !DIExpression()), !dbg !10179
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10180
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 22, !dbg !10180
  %3 = bitcast %struct.scsi_pointer* %SCp to %struct.esp_cmd_priv*, !dbg !10180
  store %struct.esp_cmd_priv* %3, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10179
  %4 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10181
  %flags = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %4, i32 0, i32 6, !dbg !10183
  %5 = load i8, i8* %flags, align 4, !dbg !10183
  %conv = zext i8 %5 to i32, !dbg !10181
  %and = and i32 %conv, 4, !dbg !10184
  %tobool = icmp ne i32 %and, 0, !dbg !10184
  br i1 %tobool, label %if.then, label %if.end, !dbg !10185

if.then:                                          ; preds = %entry
  %6 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10186
  %saved_sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %6, i32 0, i32 12, !dbg !10188
  %7 = load i8*, i8** %saved_sense_ptr, align 8, !dbg !10188
  %8 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10189
  %sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %8, i32 0, i32 11, !dbg !10190
  store i8* %7, i8** %sense_ptr, align 8, !dbg !10191
  br label %return, !dbg !10192

if.end:                                           ; preds = %entry
  %9 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10193
  %saved_cur_residue = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %9, i32 0, i32 2, !dbg !10194
  %10 = load i32, i32* %saved_cur_residue, align 8, !dbg !10194
  %11 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10195
  %cur_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %11, i32 0, i32 1, !dbg !10196
  store i32 %10, i32* %cur_residue, align 4, !dbg !10197
  %12 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10198
  %saved_prv_sg = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %12, i32 0, i32 3, !dbg !10199
  %13 = load %struct.scatterlist*, %struct.scatterlist** %saved_prv_sg, align 8, !dbg !10199
  %14 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10200
  %prv_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %14, i32 0, i32 2, !dbg !10201
  store %struct.scatterlist* %13, %struct.scatterlist** %prv_sg, align 8, !dbg !10202
  %15 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10203
  %saved_cur_sg = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %15, i32 0, i32 4, !dbg !10204
  %16 = load %struct.scatterlist*, %struct.scatterlist** %saved_cur_sg, align 8, !dbg !10204
  %17 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10205
  %cur_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %17, i32 0, i32 3, !dbg !10206
  store %struct.scatterlist* %16, %struct.scatterlist** %cur_sg, align 8, !dbg !10207
  %18 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10208
  %saved_tot_residue = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %18, i32 0, i32 5, !dbg !10209
  %19 = load i32, i32* %saved_tot_residue, align 8, !dbg !10209
  %20 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10210
  %tot_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %20, i32 0, i32 4, !dbg !10211
  store i32 %19, i32* %tot_residue, align 8, !dbg !10212
  br label %return, !dbg !10213

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @esp_cur_dma_addr(%struct.esp_cmd_entry* %ent, %struct.scsi_cmnd* %cmd) #0 !dbg !10214 {
entry:
  %retval = alloca i64, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %p = alloca %struct.esp_cmd_priv*, align 8
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !10217, metadata !DIExpression()), !dbg !10218
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10219, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_priv** %p, metadata !10221, metadata !DIExpression()), !dbg !10222
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10223
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 22, !dbg !10223
  %1 = bitcast %struct.scsi_pointer* %SCp to %struct.esp_cmd_priv*, !dbg !10223
  store %struct.esp_cmd_priv* %1, %struct.esp_cmd_priv** %p, align 8, !dbg !10222
  %2 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10224
  %flags = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %2, i32 0, i32 6, !dbg !10226
  %3 = load i8, i8* %flags, align 4, !dbg !10226
  %conv = zext i8 %3 to i32, !dbg !10224
  %and = and i32 %conv, 4, !dbg !10227
  %tobool = icmp ne i32 %and, 0, !dbg !10227
  br i1 %tobool, label %if.then, label %if.end, !dbg !10228

if.then:                                          ; preds = %entry
  %4 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10229
  %sense_dma = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %4, i32 0, i32 13, !dbg !10231
  %5 = load i64, i64* %sense_dma, align 8, !dbg !10231
  %6 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10232
  %sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %6, i32 0, i32 11, !dbg !10233
  %7 = load i8*, i8** %sense_ptr, align 8, !dbg !10233
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10234
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 20, !dbg !10235
  %9 = load i8*, i8** %sense_buffer, align 8, !dbg !10235
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !10236
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !10236
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10236
  %add = add i64 %5, %sub.ptr.sub, !dbg !10237
  store i64 %add, i64* %retval, align 8, !dbg !10238
  br label %return, !dbg !10238

if.end:                                           ; preds = %entry
  %10 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10239
  %cur_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %10, i32 0, i32 3, !dbg !10239
  %11 = load %struct.scatterlist*, %struct.scatterlist** %cur_sg, align 8, !dbg !10239
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %11, i32 0, i32 3, !dbg !10239
  %12 = load i64, i64* %dma_address, align 8, !dbg !10239
  %13 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10240
  %cur_sg1 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %13, i32 0, i32 3, !dbg !10240
  %14 = load %struct.scatterlist*, %struct.scatterlist** %cur_sg1, align 8, !dbg !10240
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %14, i32 0, i32 4, !dbg !10240
  %15 = load i32, i32* %dma_length, align 8, !dbg !10240
  %16 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10241
  %cur_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %16, i32 0, i32 1, !dbg !10242
  %17 = load i32, i32* %cur_residue, align 4, !dbg !10242
  %sub = sub i32 %15, %17, !dbg !10243
  %conv2 = zext i32 %sub to i64, !dbg !10244
  %add3 = add i64 %12, %conv2, !dbg !10245
  store i64 %add3, i64* %retval, align 8, !dbg !10246
  br label %return, !dbg !10246

return:                                           ; preds = %if.end, %if.then
  %18 = load i64, i64* %retval, align 8, !dbg !10247
  ret i64 %18, !dbg !10247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_cur_dma_len(%struct.esp_cmd_entry* %ent, %struct.scsi_cmnd* %cmd) #0 !dbg !10248 {
entry:
  %retval = alloca i32, align 4
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %p = alloca %struct.esp_cmd_priv*, align 8
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !10251, metadata !DIExpression()), !dbg !10252
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10253, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_priv** %p, metadata !10255, metadata !DIExpression()), !dbg !10256
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10257
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 22, !dbg !10257
  %1 = bitcast %struct.scsi_pointer* %SCp to %struct.esp_cmd_priv*, !dbg !10257
  store %struct.esp_cmd_priv* %1, %struct.esp_cmd_priv** %p, align 8, !dbg !10256
  %2 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10258
  %flags = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %2, i32 0, i32 6, !dbg !10260
  %3 = load i8, i8* %flags, align 4, !dbg !10260
  %conv = zext i8 %3 to i32, !dbg !10258
  %and = and i32 %conv, 4, !dbg !10261
  %tobool = icmp ne i32 %and, 0, !dbg !10261
  br i1 %tobool, label %if.then, label %if.end, !dbg !10262

if.then:                                          ; preds = %entry
  %4 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10263
  %sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %4, i32 0, i32 11, !dbg !10265
  %5 = load i8*, i8** %sense_ptr, align 8, !dbg !10265
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10266
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %6, i32 0, i32 20, !dbg !10267
  %7 = load i8*, i8** %sense_buffer, align 8, !dbg !10267
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !10268
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !10268
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10268
  %sub = sub i64 96, %sub.ptr.sub, !dbg !10269
  %conv1 = trunc i64 %sub to i32, !dbg !10270
  store i32 %conv1, i32* %retval, align 4, !dbg !10271
  br label %return, !dbg !10271

if.end:                                           ; preds = %entry
  %8 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10272
  %cur_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %8, i32 0, i32 1, !dbg !10273
  %9 = load i32, i32* %cur_residue, align 4, !dbg !10273
  store i32 %9, i32* %retval, align 4, !dbg !10274
  br label %return, !dbg !10274

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !10275
  ret i32 %10, !dbg !10275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_dma_length_limit(%struct.esp* %esp, i32 %dma_addr, i32 %dma_len) #0 !dbg !10276 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %dma_addr.addr = alloca i32, align 4
  %dma_len.addr = alloca i32, align 4
  %base = alloca i32, align 4
  %end = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !10277, metadata !DIExpression()), !dbg !10278
  store i32 %dma_addr, i32* %dma_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dma_addr.addr, metadata !10279, metadata !DIExpression()), !dbg !10280
  store i32 %dma_len, i32* %dma_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dma_len.addr, metadata !10281, metadata !DIExpression()), !dbg !10282
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10283
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 36, !dbg !10285
  %1 = load i32, i32* %rev, align 4, !dbg !10285
  %cmp = icmp eq i32 %1, 8, !dbg !10286
  br i1 %cmp, label %if.then, label %if.else, !dbg !10287

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %dma_len.addr, align 4, !dbg !10288
  %cmp1 = icmp ugt i32 %2, 16777216, !dbg !10291
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !10292

if.then2:                                         ; preds = %if.then
  store i32 16777216, i32* %dma_len.addr, align 4, !dbg !10293
  br label %if.end, !dbg !10294

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end9, !dbg !10295

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %base, metadata !10296, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.declare(metadata i32* %end, metadata !10299, metadata !DIExpression()), !dbg !10300
  %3 = load i32, i32* %dma_len.addr, align 4, !dbg !10301
  %cmp3 = icmp ugt i32 %3, 65536, !dbg !10303
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !10304

if.then4:                                         ; preds = %if.else
  store i32 65536, i32* %dma_len.addr, align 4, !dbg !10305
  br label %if.end5, !dbg !10306

if.end5:                                          ; preds = %if.then4, %if.else
  %4 = load i32, i32* %dma_addr.addr, align 4, !dbg !10307
  %and = and i32 %4, 16777215, !dbg !10308
  store i32 %and, i32* %base, align 4, !dbg !10309
  %5 = load i32, i32* %base, align 4, !dbg !10310
  %6 = load i32, i32* %dma_len.addr, align 4, !dbg !10311
  %add = add i32 %5, %6, !dbg !10312
  store i32 %add, i32* %end, align 4, !dbg !10313
  %7 = load i32, i32* %end, align 4, !dbg !10314
  %cmp6 = icmp ugt i32 %7, 16777216, !dbg !10316
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10317

if.then7:                                         ; preds = %if.end5
  store i32 16777216, i32* %end, align 4, !dbg !10318
  br label %if.end8, !dbg !10319

if.end8:                                          ; preds = %if.then7, %if.end5
  %8 = load i32, i32* %end, align 4, !dbg !10320
  %9 = load i32, i32* %base, align 4, !dbg !10321
  %sub = sub i32 %8, %9, !dbg !10322
  store i32 %sub, i32* %dma_len.addr, align 4, !dbg !10323
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %10 = load i32, i32* %dma_len.addr, align 4, !dbg !10324
  ret i32 %10, !dbg !10325
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_data_bytes_sent(%struct.esp* %esp, %struct.esp_cmd_entry* %ent, %struct.scsi_cmnd* %cmd) #0 !dbg !10326 {
entry:
  %retval = alloca i32, align 4
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %fifo_cnt = alloca i32, align 4
  %ecount = alloca i32, align 4
  %bytes_sent = alloca i32, align 4
  %flush_fifo = alloca i32, align 4
  %count = alloca i64, align 8
  %offset = alloca i64, align 8
  %bval = alloca i8, align 1
  %p = alloca %struct.esp_cmd_priv*, align 8
  %ptr = alloca i8*, align 8
  %fflags = alloca i32, align 4
  %phase = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !10329, metadata !DIExpression()), !dbg !10330
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !10331, metadata !DIExpression()), !dbg !10332
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.declare(metadata i32* %fifo_cnt, metadata !10335, metadata !DIExpression()), !dbg !10336
  call void @llvm.dbg.declare(metadata i32* %ecount, metadata !10337, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.declare(metadata i32* %bytes_sent, metadata !10339, metadata !DIExpression()), !dbg !10340
  call void @llvm.dbg.declare(metadata i32* %flush_fifo, metadata !10341, metadata !DIExpression()), !dbg !10342
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10343
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 2, !dbg !10343
  %1 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !10343
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %1, i32 0, i32 1, !dbg !10343
  %2 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !10343
  %3 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10343
  %call = call zeroext i8 %2(%struct.esp* %3, i64 7) #12, !dbg !10343
  %conv = zext i8 %call to i32, !dbg !10343
  %and = and i32 %conv, 31, !dbg !10344
  store i32 %and, i32* %fifo_cnt, align 4, !dbg !10345
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10346
  %prev_cfg3 = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 18, !dbg !10348
  %5 = load i8, i8* %prev_cfg3, align 2, !dbg !10348
  %conv1 = zext i8 %5 to i32, !dbg !10346
  %and2 = and i32 %conv1, 64, !dbg !10349
  %tobool = icmp ne i32 %and2, 0, !dbg !10349
  br i1 %tobool, label %if.then, label %if.end, !dbg !10350

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %fifo_cnt, align 4, !dbg !10351
  %shl = shl i32 %6, 1, !dbg !10351
  store i32 %shl, i32* %fifo_cnt, align 4, !dbg !10351
  br label %if.end, !dbg !10352

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %ecount, align 4, !dbg !10353
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10354
  %sreg = getelementptr inbounds %struct.esp, %struct.esp* %7, i32 0, i32 11, !dbg !10356
  %8 = load i8, i8* %sreg, align 4, !dbg !10356
  %conv3 = zext i8 %8 to i32, !dbg !10354
  %and4 = and i32 %conv3, 16, !dbg !10357
  %tobool5 = icmp ne i32 %and4, 0, !dbg !10357
  br i1 %tobool5, label %if.end39, label %if.then6, !dbg !10358

if.then6:                                         ; preds = %if.end
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10359
  %ops7 = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 2, !dbg !10359
  %10 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops7, align 8, !dbg !10359
  %esp_read88 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %10, i32 0, i32 1, !dbg !10359
  %11 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read88, align 8, !dbg !10359
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10359
  %call9 = call zeroext i8 %11(%struct.esp* %12, i64 0) #12, !dbg !10359
  %conv10 = zext i8 %call9 to i32, !dbg !10361
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10362
  %ops11 = getelementptr inbounds %struct.esp, %struct.esp* %13, i32 0, i32 2, !dbg !10362
  %14 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops11, align 8, !dbg !10362
  %esp_read812 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %14, i32 0, i32 1, !dbg !10362
  %15 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read812, align 8, !dbg !10362
  %16 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10362
  %call13 = call zeroext i8 %15(%struct.esp* %16, i64 1) #12, !dbg !10362
  %conv14 = zext i8 %call13 to i32, !dbg !10363
  %shl15 = shl i32 %conv14, 8, !dbg !10364
  %or = or i32 %conv10, %shl15, !dbg !10365
  store i32 %or, i32* %ecount, align 4, !dbg !10366
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10367
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 36, !dbg !10369
  %18 = load i32, i32* %rev, align 4, !dbg !10369
  %cmp = icmp eq i32 %18, 8, !dbg !10370
  br i1 %cmp, label %if.then17, label %if.end24, !dbg !10371

if.then17:                                        ; preds = %if.then6
  %19 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10372
  %ops18 = getelementptr inbounds %struct.esp, %struct.esp* %19, i32 0, i32 2, !dbg !10372
  %20 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops18, align 8, !dbg !10372
  %esp_read819 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %20, i32 0, i32 1, !dbg !10372
  %21 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read819, align 8, !dbg !10372
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10372
  %call20 = call zeroext i8 %21(%struct.esp* %22, i64 14) #12, !dbg !10372
  %conv21 = zext i8 %call20 to i32, !dbg !10373
  %shl22 = shl i32 %conv21, 16, !dbg !10374
  %23 = load i32, i32* %ecount, align 4, !dbg !10375
  %or23 = or i32 %23, %shl22, !dbg !10375
  store i32 %or23, i32* %ecount, align 4, !dbg !10375
  br label %if.end24, !dbg !10376

if.end24:                                         ; preds = %if.then17, %if.then6
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10377
  %rev25 = getelementptr inbounds %struct.esp, %struct.esp* %24, i32 0, i32 36, !dbg !10379
  %25 = load i32, i32* %rev25, align 4, !dbg !10379
  %cmp26 = icmp eq i32 %25, 4, !dbg !10380
  br i1 %cmp26, label %land.lhs.true, label %if.end38, !dbg !10381

land.lhs.true:                                    ; preds = %if.end24
  %26 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10382
  %config2 = getelementptr inbounds %struct.esp, %struct.esp* %26, i32 0, i32 32, !dbg !10383
  %27 = load i8, i8* %config2, align 2, !dbg !10383
  %conv28 = zext i8 %27 to i32, !dbg !10382
  %and29 = and i32 %conv28, 64, !dbg !10384
  %tobool30 = icmp ne i32 %and29, 0, !dbg !10384
  br i1 %tobool30, label %if.then31, label %if.end38, !dbg !10385

if.then31:                                        ; preds = %land.lhs.true
  %28 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10386
  %ops32 = getelementptr inbounds %struct.esp, %struct.esp* %28, i32 0, i32 2, !dbg !10386
  %29 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops32, align 8, !dbg !10386
  %esp_read833 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %29, i32 0, i32 1, !dbg !10386
  %30 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read833, align 8, !dbg !10386
  %31 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10386
  %call34 = call zeroext i8 %30(%struct.esp* %31, i64 14) #12, !dbg !10386
  %conv35 = zext i8 %call34 to i32, !dbg !10387
  %shl36 = shl i32 %conv35, 16, !dbg !10388
  %32 = load i32, i32* %ecount, align 4, !dbg !10389
  %or37 = or i32 %32, %shl36, !dbg !10389
  store i32 %or37, i32* %ecount, align 4, !dbg !10389
  br label %if.end38, !dbg !10390

if.end38:                                         ; preds = %if.then31, %land.lhs.true, %if.end24
  br label %if.end39, !dbg !10391

if.end39:                                         ; preds = %if.end38, %if.end
  %33 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10392
  %data_dma_len = getelementptr inbounds %struct.esp, %struct.esp* %33, i32 0, i32 10, !dbg !10393
  %34 = load i32, i32* %data_dma_len, align 8, !dbg !10393
  store i32 %34, i32* %bytes_sent, align 4, !dbg !10394
  %35 = load i32, i32* %ecount, align 4, !dbg !10395
  %36 = load i32, i32* %bytes_sent, align 4, !dbg !10396
  %sub = sub i32 %36, %35, !dbg !10396
  store i32 %sub, i32* %bytes_sent, align 4, !dbg !10396
  %37 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10397
  %send_cmd_residual = getelementptr inbounds %struct.esp, %struct.esp* %37, i32 0, i32 56, !dbg !10398
  %38 = load i32, i32* %send_cmd_residual, align 4, !dbg !10398
  %39 = load i32, i32* %bytes_sent, align 4, !dbg !10399
  %sub40 = sub i32 %39, %38, !dbg !10399
  store i32 %sub40, i32* %bytes_sent, align 4, !dbg !10399
  %40 = load i32, i32* %fifo_cnt, align 4, !dbg !10400
  %cmp41 = icmp eq i32 %40, 1, !dbg !10402
  br i1 %cmp41, label %land.lhs.true43, label %if.end69, !dbg !10403

land.lhs.true43:                                  ; preds = %if.end39
  %41 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10404
  %flags = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %41, i32 0, i32 6, !dbg !10405
  %42 = load i8, i8* %flags, align 4, !dbg !10405
  %conv44 = zext i8 %42 to i32, !dbg !10404
  %and45 = and i32 %conv44, 8, !dbg !10406
  %tobool46 = icmp ne i32 %and45, 0, !dbg !10406
  br i1 %tobool46, label %if.then47, label %if.end69, !dbg !10407

if.then47:                                        ; preds = %land.lhs.true43
  call void @llvm.dbg.declare(metadata i64* %count, metadata !10408, metadata !DIExpression()), !dbg !10410
  store i64 1, i64* %count, align 8, !dbg !10410
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !10411, metadata !DIExpression()), !dbg !10412
  %43 = load i32, i32* %bytes_sent, align 4, !dbg !10413
  %conv48 = sext i32 %43 to i64, !dbg !10413
  store i64 %conv48, i64* %offset, align 8, !dbg !10412
  call void @llvm.dbg.declare(metadata i8* %bval, metadata !10414, metadata !DIExpression()), !dbg !10415
  %44 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10416
  %ops49 = getelementptr inbounds %struct.esp, %struct.esp* %44, i32 0, i32 2, !dbg !10416
  %45 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops49, align 8, !dbg !10416
  %esp_read850 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %45, i32 0, i32 1, !dbg !10416
  %46 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read850, align 8, !dbg !10416
  %47 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10416
  %call51 = call zeroext i8 %46(%struct.esp* %47, i64 2) #12, !dbg !10416
  store i8 %call51, i8* %bval, align 1, !dbg !10415
  %48 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10417
  %flags52 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %48, i32 0, i32 6, !dbg !10419
  %49 = load i8, i8* %flags52, align 4, !dbg !10419
  %conv53 = zext i8 %49 to i32, !dbg !10417
  %and54 = and i32 %conv53, 4, !dbg !10420
  %tobool55 = icmp ne i32 %and54, 0, !dbg !10420
  br i1 %tobool55, label %if.then56, label %if.else, !dbg !10421

if.then56:                                        ; preds = %if.then47
  %50 = load i8, i8* %bval, align 1, !dbg !10422
  %51 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10423
  %sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %51, i32 0, i32 11, !dbg !10424
  %52 = load i8*, i8** %sense_ptr, align 8, !dbg !10424
  %53 = load i32, i32* %bytes_sent, align 4, !dbg !10425
  %idxprom = sext i32 %53 to i64, !dbg !10423
  %arrayidx = getelementptr i8, i8* %52, i64 %idxprom, !dbg !10423
  store i8 %50, i8* %arrayidx, align 1, !dbg !10426
  br label %if.end64, !dbg !10423

if.else:                                          ; preds = %if.then47
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_priv** %p, metadata !10427, metadata !DIExpression()), !dbg !10429
  %54 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10430
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %54, i32 0, i32 22, !dbg !10430
  %55 = bitcast %struct.scsi_pointer* %SCp to %struct.esp_cmd_priv*, !dbg !10430
  store %struct.esp_cmd_priv* %55, %struct.esp_cmd_priv** %p, align 8, !dbg !10429
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !10431, metadata !DIExpression()), !dbg !10432
  %56 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10433
  %cur_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %56, i32 0, i32 3, !dbg !10434
  %57 = load %struct.scatterlist*, %struct.scatterlist** %cur_sg, align 8, !dbg !10434
  %58 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10435
  %num_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %58, i32 0, i32 0, !dbg !10436
  %59 = load i32, i32* %num_sg, align 8, !dbg !10436
  %call57 = call i8* @scsi_kmap_atomic_sg(%struct.scatterlist* %57, i32 %59, i64* %offset, i64* %count) #12, !dbg !10437
  store i8* %call57, i8** %ptr, align 8, !dbg !10438
  %60 = load i8*, i8** %ptr, align 8, !dbg !10439
  %tobool58 = icmp ne i8* %60, null, !dbg !10439
  %lnot = xor i1 %tobool58, true, !dbg !10439
  %lnot59 = xor i1 %lnot, true, !dbg !10439
  %lnot.ext = zext i1 %lnot59 to i32, !dbg !10439
  %conv60 = sext i32 %lnot.ext to i64, !dbg !10439
  %tobool61 = icmp ne i64 %conv60, 0, !dbg !10439
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !10441

if.then62:                                        ; preds = %if.else
  %61 = load i8, i8* %bval, align 1, !dbg !10442
  %62 = load i8*, i8** %ptr, align 8, !dbg !10444
  %63 = load i64, i64* %offset, align 8, !dbg !10445
  %add.ptr = getelementptr i8, i8* %62, i64 %63, !dbg !10446
  store i8 %61, i8* %add.ptr, align 1, !dbg !10447
  %64 = load i8*, i8** %ptr, align 8, !dbg !10448
  call void @scsi_kunmap_atomic_sg(i8* %64) #12, !dbg !10449
  br label %if.end63, !dbg !10450

if.end63:                                         ; preds = %if.then62, %if.else
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then56
  %65 = load i32, i32* %fifo_cnt, align 4, !dbg !10451
  %66 = load i32, i32* %bytes_sent, align 4, !dbg !10452
  %add = add i32 %66, %65, !dbg !10452
  store i32 %add, i32* %bytes_sent, align 4, !dbg !10452
  %67 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10453
  %flags65 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %67, i32 0, i32 6, !dbg !10454
  %68 = load i8, i8* %flags65, align 4, !dbg !10455
  %conv66 = zext i8 %68 to i32, !dbg !10455
  %and67 = and i32 %conv66, -9, !dbg !10455
  %conv68 = trunc i32 %and67 to i8, !dbg !10455
  store i8 %conv68, i8* %flags65, align 4, !dbg !10455
  br label %if.end69, !dbg !10456

if.end69:                                         ; preds = %if.end64, %land.lhs.true43, %if.end39
  %69 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10457
  %flags70 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %69, i32 0, i32 6, !dbg !10459
  %70 = load i8, i8* %flags70, align 4, !dbg !10459
  %conv71 = zext i8 %70 to i32, !dbg !10457
  %and72 = and i32 %conv71, 1, !dbg !10460
  %tobool73 = icmp ne i32 %and72, 0, !dbg !10460
  br i1 %tobool73, label %if.end76, label %if.then74, !dbg !10461

if.then74:                                        ; preds = %if.end69
  %71 = load i32, i32* %fifo_cnt, align 4, !dbg !10462
  %72 = load i32, i32* %bytes_sent, align 4, !dbg !10463
  %sub75 = sub i32 %72, %71, !dbg !10463
  store i32 %sub75, i32* %bytes_sent, align 4, !dbg !10463
  br label %if.end76, !dbg !10464

if.end76:                                         ; preds = %if.then74, %if.end69
  store i32 0, i32* %flush_fifo, align 4, !dbg !10465
  %73 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10466
  %prev_soff = getelementptr inbounds %struct.esp, %struct.esp* %73, i32 0, i32 16, !dbg !10468
  %74 = load i8, i8* %prev_soff, align 4, !dbg !10468
  %tobool77 = icmp ne i8 %74, 0, !dbg !10466
  br i1 %tobool77, label %if.else79, label %if.then78, !dbg !10469

if.then78:                                        ; preds = %if.end76
  store i32 1, i32* %flush_fifo, align 4, !dbg !10470
  br label %if.end114, !dbg !10472

if.else79:                                        ; preds = %if.end76
  %75 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10473
  %rev80 = getelementptr inbounds %struct.esp, %struct.esp* %75, i32 0, i32 36, !dbg !10476
  %76 = load i32, i32* %rev80, align 4, !dbg !10476
  %cmp81 = icmp eq i32 %76, 0, !dbg !10477
  br i1 %cmp81, label %if.then83, label %if.end107, !dbg !10478

if.then83:                                        ; preds = %if.else79
  call void @llvm.dbg.declare(metadata i32* %fflags, metadata !10479, metadata !DIExpression()), !dbg !10481
  call void @llvm.dbg.declare(metadata i32* %phase, metadata !10482, metadata !DIExpression()), !dbg !10483
  %77 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10484
  %ops84 = getelementptr inbounds %struct.esp, %struct.esp* %77, i32 0, i32 2, !dbg !10484
  %78 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops84, align 8, !dbg !10484
  %esp_read885 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %78, i32 0, i32 1, !dbg !10484
  %79 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read885, align 8, !dbg !10484
  %80 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10484
  %call86 = call zeroext i8 %79(%struct.esp* %80, i64 4) #12, !dbg !10484
  %81 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10485
  %sreg87 = getelementptr inbounds %struct.esp, %struct.esp* %81, i32 0, i32 11, !dbg !10486
  store i8 %call86, i8* %sreg87, align 4, !dbg !10487
  %82 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10488
  %sreg88 = getelementptr inbounds %struct.esp, %struct.esp* %82, i32 0, i32 11, !dbg !10489
  %83 = load i8, i8* %sreg88, align 4, !dbg !10489
  %conv89 = zext i8 %83 to i32, !dbg !10488
  %and90 = and i32 %conv89, 7, !dbg !10490
  store i32 %and90, i32* %phase, align 4, !dbg !10491
  %84 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10492
  %ops91 = getelementptr inbounds %struct.esp, %struct.esp* %84, i32 0, i32 2, !dbg !10492
  %85 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops91, align 8, !dbg !10492
  %esp_read892 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %85, i32 0, i32 1, !dbg !10492
  %86 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read892, align 8, !dbg !10492
  %87 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10492
  %call93 = call zeroext i8 %86(%struct.esp* %87, i64 7) #12, !dbg !10492
  %conv94 = zext i8 %call93 to i32, !dbg !10492
  store i32 %conv94, i32* %fflags, align 4, !dbg !10493
  %88 = load i32, i32* %phase, align 4, !dbg !10494
  %cmp95 = icmp eq i32 %88, 0, !dbg !10496
  br i1 %cmp95, label %land.lhs.true97, label %lor.lhs.false, !dbg !10497

land.lhs.true97:                                  ; preds = %if.then83
  %89 = load i32, i32* %fflags, align 4, !dbg !10498
  %and98 = and i32 %89, 32, !dbg !10499
  %tobool99 = icmp ne i32 %and98, 0, !dbg !10499
  br i1 %tobool99, label %if.then105, label %lor.lhs.false, !dbg !10500

lor.lhs.false:                                    ; preds = %land.lhs.true97, %if.then83
  %90 = load i32, i32* %phase, align 4, !dbg !10501
  %cmp100 = icmp eq i32 %90, 1, !dbg !10502
  br i1 %cmp100, label %land.lhs.true102, label %if.end106, !dbg !10503

land.lhs.true102:                                 ; preds = %lor.lhs.false
  %91 = load i32, i32* %fflags, align 4, !dbg !10504
  %and103 = and i32 %91, 31, !dbg !10505
  %tobool104 = icmp ne i32 %and103, 0, !dbg !10505
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !10506

if.then105:                                       ; preds = %land.lhs.true102, %land.lhs.true97
  store i32 -1, i32* %retval, align 4, !dbg !10507
  br label %return, !dbg !10507

if.end106:                                        ; preds = %land.lhs.true102, %lor.lhs.false
  br label %if.end107, !dbg !10508

if.end107:                                        ; preds = %if.end106, %if.else79
  %92 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10509
  %flags108 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %92, i32 0, i32 6, !dbg !10511
  %93 = load i8, i8* %flags108, align 4, !dbg !10511
  %conv109 = zext i8 %93 to i32, !dbg !10509
  %and110 = and i32 %conv109, 1, !dbg !10512
  %tobool111 = icmp ne i32 %and110, 0, !dbg !10512
  br i1 %tobool111, label %if.end113, label %if.then112, !dbg !10513

if.then112:                                       ; preds = %if.end107
  store i32 1, i32* %flush_fifo, align 4, !dbg !10514
  br label %if.end113, !dbg !10515

if.end113:                                        ; preds = %if.then112, %if.end107
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then78
  %94 = load i32, i32* %flush_fifo, align 4, !dbg !10516
  %tobool115 = icmp ne i32 %94, 0, !dbg !10516
  br i1 %tobool115, label %if.then116, label %if.end117, !dbg !10518

if.then116:                                       ; preds = %if.end114
  %95 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10519
  call void @esp_flush_fifo(%struct.esp* %95) #12, !dbg !10520
  br label %if.end117, !dbg !10520

if.end117:                                        ; preds = %if.then116, %if.end114
  %96 = load i32, i32* %bytes_sent, align 4, !dbg !10521
  store i32 %96, i32* %retval, align 4, !dbg !10522
  br label %return, !dbg !10522

return:                                           ; preds = %if.end117, %if.then105
  %97 = load i32, i32* %retval, align 4, !dbg !10523
  ret i32 %97, !dbg !10523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_advance_dma(%struct.esp* %esp, %struct.esp_cmd_entry* %ent, %struct.scsi_cmnd* %cmd, i32 %len) #0 !dbg !10524 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %len.addr = alloca i32, align 4
  %p = alloca %struct.esp_cmd_priv*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !10525, metadata !DIExpression()), !dbg !10526
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !10527, metadata !DIExpression()), !dbg !10528
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10529, metadata !DIExpression()), !dbg !10530
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !10531, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_priv** %p, metadata !10533, metadata !DIExpression()), !dbg !10534
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10535
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 22, !dbg !10535
  %1 = bitcast %struct.scsi_pointer* %SCp to %struct.esp_cmd_priv*, !dbg !10535
  store %struct.esp_cmd_priv* %1, %struct.esp_cmd_priv** %p, align 8, !dbg !10534
  %2 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10536
  %flags = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %2, i32 0, i32 6, !dbg !10538
  %3 = load i8, i8* %flags, align 4, !dbg !10538
  %conv = zext i8 %3 to i32, !dbg !10536
  %and = and i32 %conv, 4, !dbg !10539
  %tobool = icmp ne i32 %and, 0, !dbg !10539
  br i1 %tobool, label %if.then, label %if.end, !dbg !10540

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %len.addr, align 4, !dbg !10541
  %5 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10543
  %sense_ptr = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %5, i32 0, i32 11, !dbg !10544
  %6 = load i8*, i8** %sense_ptr, align 8, !dbg !10545
  %idx.ext = zext i32 %4 to i64, !dbg !10545
  %add.ptr = getelementptr i8, i8* %6, i64 %idx.ext, !dbg !10545
  store i8* %add.ptr, i8** %sense_ptr, align 8, !dbg !10545
  br label %if.end24, !dbg !10546

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %len.addr, align 4, !dbg !10547
  %8 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10548
  %cur_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %8, i32 0, i32 1, !dbg !10549
  %9 = load i32, i32* %cur_residue, align 4, !dbg !10550
  %sub = sub i32 %9, %7, !dbg !10550
  store i32 %sub, i32* %cur_residue, align 4, !dbg !10550
  %10 = load i32, i32* %len.addr, align 4, !dbg !10551
  %11 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10552
  %tot_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %11, i32 0, i32 4, !dbg !10553
  %12 = load i32, i32* %tot_residue, align 8, !dbg !10554
  %sub1 = sub i32 %12, %10, !dbg !10554
  store i32 %sub1, i32* %tot_residue, align 8, !dbg !10554
  %13 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10555
  %cur_residue2 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %13, i32 0, i32 1, !dbg !10557
  %14 = load i32, i32* %cur_residue2, align 4, !dbg !10557
  %cmp = icmp slt i32 %14, 0, !dbg !10558
  br i1 %cmp, label %if.then7, label %lor.lhs.false, !dbg !10559

lor.lhs.false:                                    ; preds = %if.end
  %15 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10560
  %tot_residue4 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %15, i32 0, i32 4, !dbg !10561
  %16 = load i32, i32* %tot_residue4, align 8, !dbg !10561
  %cmp5 = icmp slt i32 %16, 0, !dbg !10562
  br i1 %cmp5, label %if.then7, label %if.end14, !dbg !10563

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10564
  %host = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 3, !dbg !10564
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10564
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %18, i32 0, i32 47, !dbg !10564
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.55, i64 0, i64 0)) #13, !dbg !10564
  %19 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10566
  %host8 = getelementptr inbounds %struct.esp, %struct.esp* %19, i32 0, i32 3, !dbg !10566
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host8, align 8, !dbg !10566
  %shost_gendev9 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 47, !dbg !10566
  %21 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10566
  %cur_residue10 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %21, i32 0, i32 1, !dbg !10566
  %22 = load i32, i32* %cur_residue10, align 4, !dbg !10566
  %23 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10566
  %tot_residue11 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %23, i32 0, i32 4, !dbg !10566
  %24 = load i32, i32* %tot_residue11, align 8, !dbg !10566
  %25 = load i32, i32* %len.addr, align 4, !dbg !10566
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), %struct.device* %shost_gendev9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.56, i64 0, i64 0), i32 %22, i32 %24, i32 %25) #13, !dbg !10566
  %26 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10567
  %cur_residue12 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %26, i32 0, i32 1, !dbg !10568
  store i32 0, i32* %cur_residue12, align 4, !dbg !10569
  %27 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10570
  %tot_residue13 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %27, i32 0, i32 4, !dbg !10571
  store i32 0, i32* %tot_residue13, align 8, !dbg !10572
  br label %if.end14, !dbg !10573

if.end14:                                         ; preds = %if.then7, %lor.lhs.false
  %28 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10574
  %cur_residue15 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %28, i32 0, i32 1, !dbg !10576
  %29 = load i32, i32* %cur_residue15, align 4, !dbg !10576
  %tobool16 = icmp ne i32 %29, 0, !dbg !10574
  br i1 %tobool16, label %if.end24, label %land.lhs.true, !dbg !10577

land.lhs.true:                                    ; preds = %if.end14
  %30 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10578
  %tot_residue17 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %30, i32 0, i32 4, !dbg !10579
  %31 = load i32, i32* %tot_residue17, align 8, !dbg !10579
  %tobool18 = icmp ne i32 %31, 0, !dbg !10578
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !10580

if.then19:                                        ; preds = %land.lhs.true
  %32 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10581
  %cur_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %32, i32 0, i32 3, !dbg !10583
  %33 = load %struct.scatterlist*, %struct.scatterlist** %cur_sg, align 8, !dbg !10583
  %34 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10584
  %prv_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %34, i32 0, i32 2, !dbg !10585
  store %struct.scatterlist* %33, %struct.scatterlist** %prv_sg, align 8, !dbg !10586
  %35 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10587
  %cur_sg20 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %35, i32 0, i32 3, !dbg !10588
  %36 = load %struct.scatterlist*, %struct.scatterlist** %cur_sg20, align 8, !dbg !10588
  %call = call %struct.scatterlist* @sg_next(%struct.scatterlist* %36) #12, !dbg !10589
  %37 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10590
  %cur_sg21 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %37, i32 0, i32 3, !dbg !10591
  store %struct.scatterlist* %call, %struct.scatterlist** %cur_sg21, align 8, !dbg !10592
  %38 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10593
  %cur_sg22 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %38, i32 0, i32 3, !dbg !10593
  %39 = load %struct.scatterlist*, %struct.scatterlist** %cur_sg22, align 8, !dbg !10593
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %39, i32 0, i32 4, !dbg !10593
  %40 = load i32, i32* %dma_length, align 8, !dbg !10593
  %41 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %p, align 8, !dbg !10594
  %cur_residue23 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %41, i32 0, i32 1, !dbg !10595
  store i32 %40, i32* %cur_residue23, align 4, !dbg !10596
  br label %if.end24, !dbg !10597

if.end24:                                         ; preds = %if.then, %if.then19, %land.lhs.true, %if.end14
  ret void, !dbg !10598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_event_queue_full(%struct.esp* %esp, %struct.esp_cmd_entry* %ent) #0 !dbg !10599 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent.addr = alloca %struct.esp_cmd_entry*, align 8
  %dev = alloca %struct.scsi_device*, align 8
  %lp = alloca %struct.esp_lun_data*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !10600, metadata !DIExpression()), !dbg !10601
  store %struct.esp_cmd_entry* %ent, %struct.esp_cmd_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent.addr, metadata !10602, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev, metadata !10604, metadata !DIExpression()), !dbg !10605
  %0 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent.addr, align 8, !dbg !10606
  %cmd = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %0, i32 0, i32 1, !dbg !10607
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10607
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 1, !dbg !10608
  %2 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !10608
  store %struct.scsi_device* %2, %struct.scsi_device** %dev, align 8, !dbg !10605
  call void @llvm.dbg.declare(metadata %struct.esp_lun_data** %lp, metadata !10609, metadata !DIExpression()), !dbg !10610
  %3 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !10611
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 21, !dbg !10612
  %4 = load i8*, i8** %hostdata, align 8, !dbg !10612
  %5 = bitcast i8* %4 to %struct.esp_lun_data*, !dbg !10611
  store %struct.esp_lun_data* %5, %struct.esp_lun_data** %lp, align 8, !dbg !10610
  %6 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !10613
  %7 = load %struct.esp_lun_data*, %struct.esp_lun_data** %lp, align 8, !dbg !10614
  %num_tagged = getelementptr inbounds %struct.esp_lun_data, %struct.esp_lun_data* %7, i32 0, i32 1, !dbg !10615
  %8 = load i32, i32* %num_tagged, align 8, !dbg !10615
  %sub = sub i32 %8, 1, !dbg !10616
  %call = call i32 @scsi_track_queue_full(%struct.scsi_device* %6, i32 %sub) #12, !dbg !10617
  ret void, !dbg !10618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @compose_result(i32 %status, i32 %message, i32 %driver_code) #0 !dbg !10619 {
entry:
  %status.addr = alloca i32, align 4
  %message.addr = alloca i32, align 4
  %driver_code.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !10622, metadata !DIExpression()), !dbg !10623
  store i32 %message, i32* %message.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %message.addr, metadata !10624, metadata !DIExpression()), !dbg !10625
  store i32 %driver_code, i32* %driver_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %driver_code.addr, metadata !10626, metadata !DIExpression()), !dbg !10627
  %0 = load i32, i32* %status.addr, align 4, !dbg !10628
  %1 = load i32, i32* %message.addr, align 4, !dbg !10629
  %shl = shl i32 %1, 8, !dbg !10630
  %or = or i32 %0, %shl, !dbg !10631
  %2 = load i32, i32* %driver_code.addr, align 4, !dbg !10632
  %shl1 = shl i32 %2, 16, !dbg !10633
  %or2 = or i32 %or, %shl1, !dbg !10634
  ret i32 %or2, !dbg !10635
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_msgin_process(%struct.esp* %esp) #0 !dbg !10636 {
entry:
  %retval = alloca i32, align 4
  %esp.addr = alloca %struct.esp*, align 8
  %msg0 = alloca i8, align 1
  %len = alloca i32, align 4
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %spriv = alloca %struct.esp_cmd_priv*, align 8
  %ent38 = alloca %struct.esp_cmd_entry*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !10637, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.declare(metadata i8* %msg0, metadata !10639, metadata !DIExpression()), !dbg !10640
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10641
  %msg_in = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 28, !dbg !10642
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %msg_in, i64 0, i64 0, !dbg !10641
  %1 = load i8, i8* %arrayidx, align 4, !dbg !10641
  store i8 %1, i8* %msg0, align 1, !dbg !10640
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10643, metadata !DIExpression()), !dbg !10644
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10645
  %msg_in_len = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 29, !dbg !10646
  %3 = load i32, i32* %msg_in_len, align 4, !dbg !10646
  store i32 %3, i32* %len, align 4, !dbg !10644
  %4 = load i8, i8* %msg0, align 1, !dbg !10647
  %conv = zext i8 %4 to i32, !dbg !10647
  %and = and i32 %conv, 128, !dbg !10649
  %tobool = icmp ne i32 %and, 0, !dbg !10649
  br i1 %tobool, label %if.then, label %if.end, !dbg !10650

if.then:                                          ; preds = %entry
  %5 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10651
  %host = getelementptr inbounds %struct.esp, %struct.esp* %5, i32 0, i32 3, !dbg !10651
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10651
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 47, !dbg !10651
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.57, i64 0, i64 0)) #13, !dbg !10651
  store i32 0, i32* %retval, align 4, !dbg !10653
  br label %return, !dbg !10653

if.end:                                           ; preds = %entry
  %7 = load i8, i8* %msg0, align 1, !dbg !10654
  %conv1 = zext i8 %7 to i32, !dbg !10654
  switch i32 %conv1, label %sw.default [
    i32 1, label %sw.bb
    i32 35, label %sw.bb12
    i32 8, label %sw.bb32
    i32 3, label %sw.bb33
    i32 2, label %sw.bb35
    i32 0, label %sw.bb37
    i32 4, label %sw.bb37
    i32 7, label %sw.bb40
  ], !dbg !10655

sw.bb:                                            ; preds = %if.end
  %8 = load i32, i32* %len, align 4, !dbg !10656
  %cmp = icmp eq i32 %8, 1, !dbg !10659
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !10660

if.then3:                                         ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !10661
  br label %return, !dbg !10661

if.end4:                                          ; preds = %sw.bb
  %9 = load i32, i32* %len, align 4, !dbg !10662
  %10 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10664
  %msg_in5 = getelementptr inbounds %struct.esp, %struct.esp* %10, i32 0, i32 28, !dbg !10665
  %arrayidx6 = getelementptr [8 x i8], [8 x i8]* %msg_in5, i64 0, i64 1, !dbg !10664
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !10664
  %conv7 = zext i8 %11 to i32, !dbg !10664
  %add = add i32 %conv7, 2, !dbg !10666
  %cmp8 = icmp slt i32 %9, %add, !dbg !10667
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !10668

if.then10:                                        ; preds = %if.end4
  store i32 1, i32* %retval, align 4, !dbg !10669
  br label %return, !dbg !10669

if.end11:                                         ; preds = %if.end4
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10670
  call void @esp_msgin_extended(%struct.esp* %12) #12, !dbg !10671
  store i32 0, i32* %retval, align 4, !dbg !10672
  br label %return, !dbg !10672

sw.bb12:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !10673, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_priv** %spriv, metadata !10676, metadata !DIExpression()), !dbg !10677
  %13 = load i32, i32* %len, align 4, !dbg !10678
  %cmp13 = icmp eq i32 %13, 1, !dbg !10680
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !10681

if.then15:                                        ; preds = %sw.bb12
  store i32 1, i32* %retval, align 4, !dbg !10682
  br label %return, !dbg !10682

if.end16:                                         ; preds = %sw.bb12
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10683
  %msg_in17 = getelementptr inbounds %struct.esp, %struct.esp* %14, i32 0, i32 28, !dbg !10685
  %arrayidx18 = getelementptr [8 x i8], [8 x i8]* %msg_in17, i64 0, i64 1, !dbg !10683
  %15 = load i8, i8* %arrayidx18, align 1, !dbg !10683
  %conv19 = zext i8 %15 to i32, !dbg !10683
  %cmp20 = icmp ne i32 %conv19, 1, !dbg !10686
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !10687

if.then22:                                        ; preds = %if.end16
  br label %do_reject, !dbg !10688

if.end23:                                         ; preds = %if.end16
  %16 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10689
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %16, i32 0, i32 5, !dbg !10690
  %17 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !10690
  store %struct.esp_cmd_entry* %17, %struct.esp_cmd_entry** %ent, align 8, !dbg !10691
  %18 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !10692
  %cmd = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %18, i32 0, i32 1, !dbg !10692
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10692
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %19, i32 0, i32 22, !dbg !10692
  %20 = bitcast %struct.scsi_pointer* %SCp to %struct.esp_cmd_priv*, !dbg !10692
  store %struct.esp_cmd_priv* %20, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10693
  %21 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10694
  %cur_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %21, i32 0, i32 1, !dbg !10696
  %22 = load i32, i32* %cur_residue, align 4, !dbg !10696
  %23 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10697
  %cur_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %23, i32 0, i32 3, !dbg !10697
  %24 = load %struct.scatterlist*, %struct.scatterlist** %cur_sg, align 8, !dbg !10697
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %24, i32 0, i32 4, !dbg !10697
  %25 = load i32, i32* %dma_length, align 8, !dbg !10697
  %cmp24 = icmp eq i32 %22, %25, !dbg !10698
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !10699

if.then26:                                        ; preds = %if.end23
  %26 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10700
  %prv_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %26, i32 0, i32 2, !dbg !10702
  %27 = load %struct.scatterlist*, %struct.scatterlist** %prv_sg, align 8, !dbg !10702
  %28 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10703
  %cur_sg27 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %28, i32 0, i32 3, !dbg !10704
  store %struct.scatterlist* %27, %struct.scatterlist** %cur_sg27, align 8, !dbg !10705
  %29 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10706
  %cur_residue28 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %29, i32 0, i32 1, !dbg !10707
  store i32 1, i32* %cur_residue28, align 4, !dbg !10708
  br label %if.end30, !dbg !10709

if.else:                                          ; preds = %if.end23
  %30 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10710
  %cur_residue29 = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %30, i32 0, i32 1, !dbg !10711
  %31 = load i32, i32* %cur_residue29, align 4, !dbg !10712
  %inc = add i32 %31, 1, !dbg !10712
  store i32 %inc, i32* %cur_residue29, align 4, !dbg !10712
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then26
  %32 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !10713
  %tot_residue = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %32, i32 0, i32 4, !dbg !10714
  %33 = load i32, i32* %tot_residue, align 8, !dbg !10715
  %inc31 = add i32 %33, 1, !dbg !10715
  store i32 %inc31, i32* %tot_residue, align 8, !dbg !10715
  store i32 0, i32* %retval, align 4, !dbg !10716
  br label %return, !dbg !10716

sw.bb32:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10717
  br label %return, !dbg !10717

sw.bb33:                                          ; preds = %if.end
  %34 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10718
  %35 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10719
  %active_cmd34 = getelementptr inbounds %struct.esp, %struct.esp* %35, i32 0, i32 5, !dbg !10720
  %36 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd34, align 8, !dbg !10720
  call void @esp_restore_pointers(%struct.esp* %34, %struct.esp_cmd_entry* %36) #12, !dbg !10721
  store i32 0, i32* %retval, align 4, !dbg !10722
  br label %return, !dbg !10722

sw.bb35:                                          ; preds = %if.end
  %37 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10723
  %38 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10724
  %active_cmd36 = getelementptr inbounds %struct.esp, %struct.esp* %38, i32 0, i32 5, !dbg !10725
  %39 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd36, align 8, !dbg !10725
  call void @esp_save_pointers(%struct.esp* %37, %struct.esp_cmd_entry* %39) #12, !dbg !10726
  store i32 0, i32* %retval, align 4, !dbg !10727
  br label %return, !dbg !10727

sw.bb37:                                          ; preds = %if.end, %if.end
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent38, metadata !10728, metadata !DIExpression()), !dbg !10730
  %40 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10731
  %active_cmd39 = getelementptr inbounds %struct.esp, %struct.esp* %40, i32 0, i32 5, !dbg !10732
  %41 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd39, align 8, !dbg !10732
  store %struct.esp_cmd_entry* %41, %struct.esp_cmd_entry** %ent38, align 8, !dbg !10730
  %42 = load i8, i8* %msg0, align 1, !dbg !10733
  %43 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent38, align 8, !dbg !10734
  %message = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %43, i32 0, i32 10, !dbg !10735
  store i8 %42, i8* %message, align 2, !dbg !10736
  %44 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10737
  call void @esp_event(%struct.esp* %44, i8 zeroext 12) #12, !dbg !10738
  %45 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10739
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %45, i32 0, i32 37, !dbg !10740
  %46 = load i32, i32* %flags, align 8, !dbg !10741
  %or = or i32 %46, 16, !dbg !10741
  store i32 %or, i32* %flags, align 8, !dbg !10741
  store i32 0, i32* %retval, align 4, !dbg !10742
  br label %return, !dbg !10742

sw.bb40:                                          ; preds = %if.end
  %47 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10743
  call void @esp_msgin_reject(%struct.esp* %47) #12, !dbg !10744
  store i32 0, i32* %retval, align 4, !dbg !10745
  br label %return, !dbg !10745

sw.default:                                       ; preds = %if.end
  br label %do_reject, !dbg !10745

do_reject:                                        ; preds = %sw.default, %if.then22
  call void @llvm.dbg.label(metadata !10746), !dbg !10747
  %48 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10748
  %msg_out = getelementptr inbounds %struct.esp, %struct.esp* %48, i32 0, i32 26, !dbg !10749
  %arrayidx41 = getelementptr [8 x i8], [8 x i8]* %msg_out, i64 0, i64 0, !dbg !10748
  store i8 7, i8* %arrayidx41, align 8, !dbg !10750
  %49 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10751
  %msg_out_len = getelementptr inbounds %struct.esp, %struct.esp* %49, i32 0, i32 27, !dbg !10752
  store i32 1, i32* %msg_out_len, align 8, !dbg !10753
  %50 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10754
  call void @scsi_esp_cmd(%struct.esp* %50, i8 zeroext 26) #12, !dbg !10755
  store i32 0, i32* %retval, align 4, !dbg !10756
  br label %return, !dbg !10756

return:                                           ; preds = %do_reject, %sw.bb40, %sw.bb37, %sw.bb35, %sw.bb33, %sw.bb32, %if.end30, %if.then15, %if.end11, %if.then10, %if.then3, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !10757
  ret i32 %51, !dbg !10757
}

; Function Attrs: noredzone
declare dso_local i8* @scsi_kmap_atomic_sg(%struct.scatterlist*, i32, i64*, i64*) #3

; Function Attrs: noredzone
declare dso_local void @scsi_kunmap_atomic_sg(i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @scsi_track_queue_full(%struct.scsi_device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_msgin_extended(%struct.esp* %esp) #0 !dbg !10758 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  %tgt = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !10759, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !10761, metadata !DIExpression()), !dbg !10762
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10763
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 5, !dbg !10764
  %1 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !10764
  store %struct.esp_cmd_entry* %1, %struct.esp_cmd_entry** %ent, align 8, !dbg !10762
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !10765, metadata !DIExpression()), !dbg !10766
  %2 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !10767
  %cmd1 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %2, i32 0, i32 1, !dbg !10768
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !10768
  store %struct.scsi_cmnd* %3, %struct.scsi_cmnd** %cmd, align 8, !dbg !10766
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !10769, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.declare(metadata i32* %tgt, metadata !10771, metadata !DIExpression()), !dbg !10772
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10773
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 1, !dbg !10774
  %5 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !10774
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 16, !dbg !10775
  %6 = load i32, i32* %id, align 8, !dbg !10775
  store i32 %6, i32* %tgt, align 4, !dbg !10772
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10776
  %target = getelementptr inbounds %struct.esp, %struct.esp* %7, i32 0, i32 21, !dbg !10777
  %8 = load i32, i32* %tgt, align 4, !dbg !10778
  %idxprom = sext i32 %8 to i64, !dbg !10776
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !10776
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !10779
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10780
  %msg_in = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 28, !dbg !10782
  %arrayidx2 = getelementptr [8 x i8], [8 x i8]* %msg_in, i64 0, i64 2, !dbg !10780
  %10 = load i8, i8* %arrayidx2, align 2, !dbg !10780
  %conv = zext i8 %10 to i32, !dbg !10780
  %cmp = icmp eq i32 %conv, 1, !dbg !10783
  br i1 %cmp, label %if.then, label %if.end, !dbg !10784

if.then:                                          ; preds = %entry
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10785
  %12 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10787
  call void @esp_msgin_sdtr(%struct.esp* %11, %struct.esp_target_data* %12) #12, !dbg !10788
  br label %return, !dbg !10789

if.end:                                           ; preds = %entry
  %13 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10790
  %msg_in4 = getelementptr inbounds %struct.esp, %struct.esp* %13, i32 0, i32 28, !dbg !10792
  %arrayidx5 = getelementptr [8 x i8], [8 x i8]* %msg_in4, i64 0, i64 2, !dbg !10790
  %14 = load i8, i8* %arrayidx5, align 2, !dbg !10790
  %conv6 = zext i8 %14 to i32, !dbg !10790
  %cmp7 = icmp eq i32 %conv6, 3, !dbg !10793
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10794

if.then9:                                         ; preds = %if.end
  %15 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10795
  %16 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10797
  call void @esp_msgin_wdtr(%struct.esp* %15, %struct.esp_target_data* %16) #12, !dbg !10798
  br label %return, !dbg !10799

if.end10:                                         ; preds = %if.end
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10800
  %host = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 3, !dbg !10800
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10800
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %18, i32 0, i32 47, !dbg !10800
  %19 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10800
  %msg_in11 = getelementptr inbounds %struct.esp, %struct.esp* %19, i32 0, i32 28, !dbg !10800
  %arrayidx12 = getelementptr [8 x i8], [8 x i8]* %msg_in11, i64 0, i64 2, !dbg !10800
  %20 = load i8, i8* %arrayidx12, align 2, !dbg !10800
  %conv13 = zext i8 %20 to i32, !dbg !10800
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.58, i64 0, i64 0), i32 %conv13) #13, !dbg !10800
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10801
  %msg_out = getelementptr inbounds %struct.esp, %struct.esp* %21, i32 0, i32 26, !dbg !10802
  %arrayidx14 = getelementptr [8 x i8], [8 x i8]* %msg_out, i64 0, i64 0, !dbg !10801
  store i8 7, i8* %arrayidx14, align 8, !dbg !10803
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10804
  %msg_out_len = getelementptr inbounds %struct.esp, %struct.esp* %22, i32 0, i32 27, !dbg !10805
  store i32 1, i32* %msg_out_len, align 8, !dbg !10806
  %23 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10807
  call void @scsi_esp_cmd(%struct.esp* %23, i8 zeroext 26) #12, !dbg !10808
  br label %return, !dbg !10809

return:                                           ; preds = %if.end10, %if.then9, %if.then
  ret void, !dbg !10809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_msgin_reject(%struct.esp* %esp) #0 !dbg !10810 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %ent = alloca %struct.esp_cmd_entry*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  %tgt = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !10811, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !10813, metadata !DIExpression()), !dbg !10814
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10815
  %active_cmd = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 5, !dbg !10816
  %1 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %active_cmd, align 8, !dbg !10816
  store %struct.esp_cmd_entry* %1, %struct.esp_cmd_entry** %ent, align 8, !dbg !10814
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !10817, metadata !DIExpression()), !dbg !10818
  %2 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !10819
  %cmd1 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %2, i32 0, i32 1, !dbg !10820
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !10820
  store %struct.scsi_cmnd* %3, %struct.scsi_cmnd** %cmd, align 8, !dbg !10818
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !10821, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.declare(metadata i32* %tgt, metadata !10823, metadata !DIExpression()), !dbg !10824
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10825
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 1, !dbg !10826
  %5 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !10826
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 16, !dbg !10827
  %6 = load i32, i32* %id, align 8, !dbg !10827
  store i32 %6, i32* %tgt, align 4, !dbg !10828
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10829
  %target = getelementptr inbounds %struct.esp, %struct.esp* %7, i32 0, i32 21, !dbg !10830
  %8 = load i32, i32* %tgt, align 4, !dbg !10831
  %idxprom = sext i32 %8 to i64, !dbg !10829
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !10829
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !10832
  %9 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10833
  %flags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %9, i32 0, i32 3, !dbg !10835
  %10 = load i8, i8* %flags, align 1, !dbg !10835
  %conv = zext i8 %10 to i32, !dbg !10833
  %and = and i32 %conv, 4, !dbg !10836
  %tobool = icmp ne i32 %and, 0, !dbg !10836
  br i1 %tobool, label %if.then, label %if.end19, !dbg !10837

if.then:                                          ; preds = %entry
  %11 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10838
  %flags2 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %11, i32 0, i32 3, !dbg !10840
  %12 = load i8, i8* %flags2, align 1, !dbg !10841
  %conv3 = zext i8 %12 to i32, !dbg !10841
  %and4 = and i32 %conv3, -6, !dbg !10841
  %conv5 = trunc i32 %and4 to i8, !dbg !10841
  store i8 %conv5, i8* %flags2, align 1, !dbg !10841
  %13 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10842
  %call = call i32 @esp_need_to_nego_sync(%struct.esp_target_data* %13) #12, !dbg !10844
  %tobool6 = icmp ne i32 %call, 0, !dbg !10844
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !10845

if.then7:                                         ; preds = %if.then
  %14 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10846
  %flags8 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %14, i32 0, i32 3, !dbg !10848
  %15 = load i8, i8* %flags8, align 1, !dbg !10849
  %conv9 = zext i8 %15 to i32, !dbg !10849
  %and10 = and i32 %conv9, -65, !dbg !10849
  %conv11 = trunc i32 %and10 to i8, !dbg !10849
  store i8 %conv11, i8* %flags8, align 1, !dbg !10849
  %16 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10850
  call void @scsi_esp_cmd(%struct.esp* %16, i8 zeroext 27) #12, !dbg !10851
  br label %if.end, !dbg !10852

if.else:                                          ; preds = %if.then
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10853
  %msg_out = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 26, !dbg !10855
  %arrayidx12 = getelementptr [8 x i8], [8 x i8]* %msg_out, i64 0, i64 0, !dbg !10853
  %18 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10856
  %nego_goal_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %18, i32 0, i32 4, !dbg !10857
  %19 = load i8, i8* %nego_goal_period, align 4, !dbg !10857
  %conv13 = zext i8 %19 to i32, !dbg !10856
  %20 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10858
  %nego_goal_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %20, i32 0, i32 5, !dbg !10859
  %21 = load i8, i8* %nego_goal_offset, align 1, !dbg !10859
  %conv14 = zext i8 %21 to i32, !dbg !10858
  %call15 = call i32 @spi_populate_sync_msg(i8* %arrayidx12, i32 %conv13, i32 %conv14) #12, !dbg !10860
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10861
  %msg_out_len = getelementptr inbounds %struct.esp, %struct.esp* %22, i32 0, i32 27, !dbg !10862
  store i32 %call15, i32* %msg_out_len, align 8, !dbg !10863
  %23 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10864
  %flags16 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %23, i32 0, i32 3, !dbg !10865
  %24 = load i8, i8* %flags16, align 1, !dbg !10866
  %conv17 = zext i8 %24 to i32, !dbg !10866
  %or = or i32 %conv17, 8, !dbg !10866
  %conv18 = trunc i32 %or to i8, !dbg !10866
  store i8 %conv18, i8* %flags16, align 1, !dbg !10866
  %25 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10867
  call void @scsi_esp_cmd(%struct.esp* %25, i8 zeroext 26) #12, !dbg !10868
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %return, !dbg !10869

if.end19:                                         ; preds = %entry
  %26 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10870
  %flags20 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %26, i32 0, i32 3, !dbg !10872
  %27 = load i8, i8* %flags20, align 1, !dbg !10872
  %conv21 = zext i8 %27 to i32, !dbg !10870
  %and22 = and i32 %conv21, 8, !dbg !10873
  %tobool23 = icmp ne i32 %and22, 0, !dbg !10873
  br i1 %tobool23, label %if.then24, label %if.end29, !dbg !10874

if.then24:                                        ; preds = %if.end19
  %28 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10875
  %flags25 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %28, i32 0, i32 3, !dbg !10877
  %29 = load i8, i8* %flags25, align 1, !dbg !10878
  %conv26 = zext i8 %29 to i32, !dbg !10878
  %and27 = and i32 %conv26, -73, !dbg !10878
  %conv28 = trunc i32 %and27 to i8, !dbg !10878
  store i8 %conv28, i8* %flags25, align 1, !dbg !10878
  %30 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10879
  %esp_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %30, i32 0, i32 0, !dbg !10880
  store i8 0, i8* %esp_period, align 8, !dbg !10881
  %31 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10882
  %esp_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %31, i32 0, i32 1, !dbg !10883
  store i8 0, i8* %esp_offset, align 1, !dbg !10884
  %32 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10885
  %33 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !10886
  call void @esp_setsync(%struct.esp* %32, %struct.esp_target_data* %33, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #12, !dbg !10887
  %34 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10888
  call void @scsi_esp_cmd(%struct.esp* %34, i8 zeroext 27) #12, !dbg !10889
  br label %return, !dbg !10890

if.end29:                                         ; preds = %if.end19
  %35 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10891
  %host = getelementptr inbounds %struct.esp, %struct.esp* %35, i32 0, i32 3, !dbg !10891
  %36 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10891
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %36, i32 0, i32 47, !dbg !10891
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i64 0, i64 0)) #13, !dbg !10891
  %37 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10892
  call void @esp_schedule_reset(%struct.esp* %37) #12, !dbg !10893
  br label %return, !dbg !10894

return:                                           ; preds = %if.end29, %if.then24, %if.end
  ret void, !dbg !10894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_msgin_sdtr(%struct.esp* %esp, %struct.esp_target_data* %tp) #0 !dbg !10895 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %tp.addr = alloca %struct.esp_target_data*, align 8
  %period = alloca i8, align 1
  %offset = alloca i8, align 1
  %stp = alloca i8, align 1
  %one_clock = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !10898, metadata !DIExpression()), !dbg !10899
  store %struct.esp_target_data* %tp, %struct.esp_target_data** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp.addr, metadata !10900, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.declare(metadata i8* %period, metadata !10902, metadata !DIExpression()), !dbg !10903
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10904
  %msg_in = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 28, !dbg !10905
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %msg_in, i64 0, i64 3, !dbg !10904
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10904
  store i8 %1, i8* %period, align 1, !dbg !10903
  call void @llvm.dbg.declare(metadata i8* %offset, metadata !10906, metadata !DIExpression()), !dbg !10907
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10908
  %msg_in1 = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 28, !dbg !10909
  %arrayidx2 = getelementptr [8 x i8], [8 x i8]* %msg_in1, i64 0, i64 4, !dbg !10908
  %3 = load i8, i8* %arrayidx2, align 4, !dbg !10908
  store i8 %3, i8* %offset, align 1, !dbg !10907
  call void @llvm.dbg.declare(metadata i8* %stp, metadata !10910, metadata !DIExpression()), !dbg !10911
  %4 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !10912
  %flags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %4, i32 0, i32 3, !dbg !10914
  %5 = load i8, i8* %flags, align 1, !dbg !10914
  %conv = zext i8 %5 to i32, !dbg !10912
  %and = and i32 %conv, 8, !dbg !10915
  %tobool = icmp ne i32 %and, 0, !dbg !10915
  br i1 %tobool, label %if.end, label %if.then, !dbg !10916

if.then:                                          ; preds = %entry
  br label %do_reject, !dbg !10917

if.end:                                           ; preds = %entry
  %6 = load i8, i8* %offset, align 1, !dbg !10918
  %conv3 = zext i8 %6 to i32, !dbg !10918
  %cmp = icmp sgt i32 %conv3, 15, !dbg !10920
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !10921

if.then5:                                         ; preds = %if.end
  br label %do_reject, !dbg !10922

if.end6:                                          ; preds = %if.end
  %7 = load i8, i8* %offset, align 1, !dbg !10923
  %tobool7 = icmp ne i8 %7, 0, !dbg !10923
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !10925

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %one_clock, metadata !10926, metadata !DIExpression()), !dbg !10928
  %8 = load i8, i8* %period, align 1, !dbg !10929
  %conv9 = zext i8 %8 to i32, !dbg !10929
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10931
  %max_period = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 46, !dbg !10932
  %10 = load i32, i32* %max_period, align 8, !dbg !10932
  %cmp10 = icmp ugt i32 %conv9, %10, !dbg !10933
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !10934

if.then12:                                        ; preds = %if.then8
  store i8 0, i8* %offset, align 1, !dbg !10935
  store i8 0, i8* %period, align 1, !dbg !10937
  br label %do_sdtr, !dbg !10938

if.end13:                                         ; preds = %if.then8
  %11 = load i8, i8* %period, align 1, !dbg !10939
  %conv14 = zext i8 %11 to i32, !dbg !10939
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10941
  %min_period = getelementptr inbounds %struct.esp, %struct.esp* %12, i32 0, i32 47, !dbg !10942
  %13 = load i32, i32* %min_period, align 4, !dbg !10942
  %cmp15 = icmp ult i32 %conv14, %13, !dbg !10943
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !10944

if.then17:                                        ; preds = %if.end13
  br label %do_reject, !dbg !10945

if.end18:                                         ; preds = %if.end13
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10946
  %ccycle = getelementptr inbounds %struct.esp, %struct.esp* %14, i32 0, i32 42, !dbg !10947
  %15 = load i32, i32* %ccycle, align 8, !dbg !10947
  %div = udiv i32 %15, 1000, !dbg !10948
  store i32 %div, i32* %one_clock, align 4, !dbg !10949
  %16 = load i8, i8* %period, align 1, !dbg !10950
  %conv19 = zext i8 %16 to i32, !dbg !10950
  %shl = shl i32 %conv19, 2, !dbg !10950
  %17 = load i32, i32* %one_clock, align 4, !dbg !10950
  %add = add i32 %shl, %17, !dbg !10950
  %sub = sub i32 %add, 1, !dbg !10950
  %18 = load i32, i32* %one_clock, align 4, !dbg !10950
  %div20 = sdiv i32 %sub, %18, !dbg !10950
  %conv21 = trunc i32 %div20 to i8, !dbg !10950
  store i8 %conv21, i8* %stp, align 1, !dbg !10951
  %19 = load i8, i8* %stp, align 1, !dbg !10952
  %conv22 = zext i8 %19 to i32, !dbg !10952
  %tobool23 = icmp ne i32 %conv22, 0, !dbg !10952
  br i1 %tobool23, label %land.lhs.true, label %if.end32, !dbg !10954

land.lhs.true:                                    ; preds = %if.end18
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10955
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %20, i32 0, i32 36, !dbg !10956
  %21 = load i32, i32* %rev, align 4, !dbg !10956
  %cmp24 = icmp uge i32 %21, 3, !dbg !10957
  br i1 %cmp24, label %if.then26, label %if.end32, !dbg !10958

if.then26:                                        ; preds = %land.lhs.true
  %22 = load i8, i8* %stp, align 1, !dbg !10959
  %conv27 = zext i8 %22 to i32, !dbg !10959
  %cmp28 = icmp sge i32 %conv27, 50, !dbg !10962
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !10963

if.then30:                                        ; preds = %if.then26
  %23 = load i8, i8* %stp, align 1, !dbg !10964
  %dec = add i8 %23, -1, !dbg !10964
  store i8 %dec, i8* %stp, align 1, !dbg !10964
  br label %if.end31, !dbg !10965

if.end31:                                         ; preds = %if.then30, %if.then26
  br label %if.end32, !dbg !10966

if.end32:                                         ; preds = %if.end31, %land.lhs.true, %if.end18
  br label %if.end33, !dbg !10967

if.else:                                          ; preds = %if.end6
  store i8 0, i8* %stp, align 1, !dbg !10968
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.end32
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10970
  %25 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !10971
  %26 = load i8, i8* %period, align 1, !dbg !10972
  %27 = load i8, i8* %offset, align 1, !dbg !10973
  %28 = load i8, i8* %stp, align 1, !dbg !10974
  %29 = load i8, i8* %offset, align 1, !dbg !10975
  call void @esp_setsync(%struct.esp* %24, %struct.esp_target_data* %25, i8 zeroext %26, i8 zeroext %27, i8 zeroext %28, i8 zeroext %29) #12, !dbg !10976
  br label %return, !dbg !10977

do_reject:                                        ; preds = %if.then17, %if.then5, %if.then
  call void @llvm.dbg.label(metadata !10978), !dbg !10979
  %30 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10980
  %msg_out = getelementptr inbounds %struct.esp, %struct.esp* %30, i32 0, i32 26, !dbg !10981
  %arrayidx34 = getelementptr [8 x i8], [8 x i8]* %msg_out, i64 0, i64 0, !dbg !10980
  store i8 7, i8* %arrayidx34, align 8, !dbg !10982
  %31 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10983
  %msg_out_len = getelementptr inbounds %struct.esp, %struct.esp* %31, i32 0, i32 27, !dbg !10984
  store i32 1, i32* %msg_out_len, align 8, !dbg !10985
  %32 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10986
  call void @scsi_esp_cmd(%struct.esp* %32, i8 zeroext 26) #12, !dbg !10987
  br label %return, !dbg !10988

do_sdtr:                                          ; preds = %if.then12
  call void @llvm.dbg.label(metadata !10989), !dbg !10990
  %33 = load i8, i8* %period, align 1, !dbg !10991
  %34 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !10992
  %nego_goal_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %34, i32 0, i32 4, !dbg !10993
  store i8 %33, i8* %nego_goal_period, align 4, !dbg !10994
  %35 = load i8, i8* %offset, align 1, !dbg !10995
  %36 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !10996
  %nego_goal_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %36, i32 0, i32 5, !dbg !10997
  store i8 %35, i8* %nego_goal_offset, align 1, !dbg !10998
  %37 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !10999
  %msg_out35 = getelementptr inbounds %struct.esp, %struct.esp* %37, i32 0, i32 26, !dbg !11000
  %arrayidx36 = getelementptr [8 x i8], [8 x i8]* %msg_out35, i64 0, i64 0, !dbg !10999
  %38 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11001
  %nego_goal_period37 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %38, i32 0, i32 4, !dbg !11002
  %39 = load i8, i8* %nego_goal_period37, align 4, !dbg !11002
  %conv38 = zext i8 %39 to i32, !dbg !11001
  %40 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11003
  %nego_goal_offset39 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %40, i32 0, i32 5, !dbg !11004
  %41 = load i8, i8* %nego_goal_offset39, align 1, !dbg !11004
  %conv40 = zext i8 %41 to i32, !dbg !11003
  %call = call i32 @spi_populate_sync_msg(i8* %arrayidx36, i32 %conv38, i32 %conv40) #12, !dbg !11005
  %42 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11006
  %msg_out_len41 = getelementptr inbounds %struct.esp, %struct.esp* %42, i32 0, i32 27, !dbg !11007
  store i32 %call, i32* %msg_out_len41, align 8, !dbg !11008
  %43 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11009
  call void @scsi_esp_cmd(%struct.esp* %43, i8 zeroext 26) #12, !dbg !11010
  br label %return, !dbg !11011

return:                                           ; preds = %do_sdtr, %do_reject, %if.end33
  ret void, !dbg !11011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_msgin_wdtr(%struct.esp* %esp, %struct.esp_target_data* %tp) #0 !dbg !11012 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %tp.addr = alloca %struct.esp_target_data*, align 8
  %size = alloca i32, align 4
  %cfg3 = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !11013, metadata !DIExpression()), !dbg !11014
  store %struct.esp_target_data* %tp, %struct.esp_target_data** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp.addr, metadata !11015, metadata !DIExpression()), !dbg !11016
  call void @llvm.dbg.declare(metadata i32* %size, metadata !11017, metadata !DIExpression()), !dbg !11018
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11019
  %msg_in = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 28, !dbg !11020
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %msg_in, i64 0, i64 3, !dbg !11019
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11019
  %conv = zext i8 %1 to i32, !dbg !11019
  %shl = shl i32 8, %conv, !dbg !11021
  store i32 %shl, i32* %size, align 4, !dbg !11018
  call void @llvm.dbg.declare(metadata i8* %cfg3, metadata !11022, metadata !DIExpression()), !dbg !11023
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11024
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 36, !dbg !11026
  %3 = load i32, i32* %rev, align 4, !dbg !11026
  %cmp = icmp ne i32 %3, 8, !dbg !11027
  br i1 %cmp, label %if.then, label %if.end, !dbg !11028

if.then:                                          ; preds = %entry
  br label %do_reject, !dbg !11029

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %size, align 4, !dbg !11030
  %cmp2 = icmp ne i32 %4, 8, !dbg !11032
  br i1 %cmp2, label %land.lhs.true, label %if.end7, !dbg !11033

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* %size, align 4, !dbg !11034
  %cmp4 = icmp ne i32 %5, 16, !dbg !11035
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !11036

if.then6:                                         ; preds = %land.lhs.true
  br label %do_reject, !dbg !11037

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %6 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11038
  %flags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %6, i32 0, i32 3, !dbg !11040
  %7 = load i8, i8* %flags, align 1, !dbg !11040
  %conv8 = zext i8 %7 to i32, !dbg !11038
  %and = and i32 %conv8, 4, !dbg !11041
  %tobool = icmp ne i32 %and, 0, !dbg !11041
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !11042

if.then9:                                         ; preds = %if.end7
  br label %do_reject, !dbg !11043

if.end10:                                         ; preds = %if.end7
  %8 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11044
  %esp_config3 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %8, i32 0, i32 2, !dbg !11045
  %9 = load i8, i8* %esp_config3, align 2, !dbg !11045
  store i8 %9, i8* %cfg3, align 1, !dbg !11046
  %10 = load i32, i32* %size, align 4, !dbg !11047
  %cmp11 = icmp eq i32 %10, 16, !dbg !11049
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !11050

if.then13:                                        ; preds = %if.end10
  %11 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11051
  %flags14 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %11, i32 0, i32 3, !dbg !11053
  %12 = load i8, i8* %flags14, align 1, !dbg !11054
  %conv15 = zext i8 %12 to i32, !dbg !11054
  %or = or i32 %conv15, 1, !dbg !11054
  %conv16 = trunc i32 %or to i8, !dbg !11054
  store i8 %conv16, i8* %flags14, align 1, !dbg !11054
  %13 = load i8, i8* %cfg3, align 1, !dbg !11055
  %conv17 = zext i8 %13 to i32, !dbg !11055
  %or18 = or i32 %conv17, 64, !dbg !11055
  %conv19 = trunc i32 %or18 to i8, !dbg !11055
  store i8 %conv19, i8* %cfg3, align 1, !dbg !11055
  br label %if.end27, !dbg !11056

if.else:                                          ; preds = %if.end10
  %14 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11057
  %flags20 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %14, i32 0, i32 3, !dbg !11059
  %15 = load i8, i8* %flags20, align 1, !dbg !11060
  %conv21 = zext i8 %15 to i32, !dbg !11060
  %and22 = and i32 %conv21, -2, !dbg !11060
  %conv23 = trunc i32 %and22 to i8, !dbg !11060
  store i8 %conv23, i8* %flags20, align 1, !dbg !11060
  %16 = load i8, i8* %cfg3, align 1, !dbg !11061
  %conv24 = zext i8 %16 to i32, !dbg !11061
  %and25 = and i32 %conv24, -65, !dbg !11061
  %conv26 = trunc i32 %and25 to i8, !dbg !11061
  store i8 %conv26, i8* %cfg3, align 1, !dbg !11061
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then13
  %17 = load i8, i8* %cfg3, align 1, !dbg !11062
  %18 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11063
  %esp_config328 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %18, i32 0, i32 2, !dbg !11064
  store i8 %17, i8* %esp_config328, align 2, !dbg !11065
  %19 = load i8, i8* %cfg3, align 1, !dbg !11066
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11067
  %prev_cfg3 = getelementptr inbounds %struct.esp, %struct.esp* %20, i32 0, i32 18, !dbg !11068
  store i8 %19, i8* %prev_cfg3, align 2, !dbg !11069
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11070
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %21, i32 0, i32 2, !dbg !11070
  %22 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !11070
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %22, i32 0, i32 0, !dbg !11070
  %23 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !11070
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11070
  %25 = load i8, i8* %cfg3, align 1, !dbg !11070
  call void %23(%struct.esp* %24, i8 zeroext %25, i64 12) #12, !dbg !11070
  %26 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11071
  %flags29 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %26, i32 0, i32 3, !dbg !11072
  %27 = load i8, i8* %flags29, align 1, !dbg !11073
  %conv30 = zext i8 %27 to i32, !dbg !11073
  %and31 = and i32 %conv30, -5, !dbg !11073
  %conv32 = trunc i32 %and31 to i8, !dbg !11073
  store i8 %conv32, i8* %flags29, align 1, !dbg !11073
  %28 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11074
  %starget = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %28, i32 0, i32 8, !dbg !11074
  %29 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11074
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %29, i32 0, i32 15, !dbg !11074
  %30 = bitcast [0 x i64]* %starget_data to %struct.spi_transport_attrs*, !dbg !11074
  %period = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %30, i32 0, i32 0, !dbg !11074
  store i32 0, i32* %period, align 8, !dbg !11075
  %31 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11076
  %starget33 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %31, i32 0, i32 8, !dbg !11076
  %32 = load %struct.scsi_target*, %struct.scsi_target** %starget33, align 8, !dbg !11076
  %starget_data34 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %32, i32 0, i32 15, !dbg !11076
  %33 = bitcast [0 x i64]* %starget_data34 to %struct.spi_transport_attrs*, !dbg !11076
  %offset = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %33, i32 0, i32 2, !dbg !11076
  store i32 0, i32* %offset, align 8, !dbg !11077
  %34 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11078
  %call = call i32 @esp_need_to_nego_sync(%struct.esp_target_data* %34) #12, !dbg !11080
  %tobool35 = icmp ne i32 %call, 0, !dbg !11080
  br i1 %tobool35, label %if.else41, label %if.then36, !dbg !11081

if.then36:                                        ; preds = %if.end27
  %35 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11082
  %flags37 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %35, i32 0, i32 3, !dbg !11084
  %36 = load i8, i8* %flags37, align 1, !dbg !11085
  %conv38 = zext i8 %36 to i32, !dbg !11085
  %and39 = and i32 %conv38, -65, !dbg !11085
  %conv40 = trunc i32 %and39 to i8, !dbg !11085
  store i8 %conv40, i8* %flags37, align 1, !dbg !11085
  %37 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11086
  call void @scsi_esp_cmd(%struct.esp* %37, i8 zeroext 27) #12, !dbg !11087
  br label %if.end50, !dbg !11088

if.else41:                                        ; preds = %if.end27
  %38 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11089
  %msg_out = getelementptr inbounds %struct.esp, %struct.esp* %38, i32 0, i32 26, !dbg !11091
  %arrayidx42 = getelementptr [8 x i8], [8 x i8]* %msg_out, i64 0, i64 0, !dbg !11089
  %39 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11092
  %nego_goal_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %39, i32 0, i32 4, !dbg !11093
  %40 = load i8, i8* %nego_goal_period, align 4, !dbg !11093
  %conv43 = zext i8 %40 to i32, !dbg !11092
  %41 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11094
  %nego_goal_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %41, i32 0, i32 5, !dbg !11095
  %42 = load i8, i8* %nego_goal_offset, align 1, !dbg !11095
  %conv44 = zext i8 %42 to i32, !dbg !11094
  %call45 = call i32 @spi_populate_sync_msg(i8* %arrayidx42, i32 %conv43, i32 %conv44) #12, !dbg !11096
  %43 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11097
  %msg_out_len = getelementptr inbounds %struct.esp, %struct.esp* %43, i32 0, i32 27, !dbg !11098
  store i32 %call45, i32* %msg_out_len, align 8, !dbg !11099
  %44 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11100
  %flags46 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %44, i32 0, i32 3, !dbg !11101
  %45 = load i8, i8* %flags46, align 1, !dbg !11102
  %conv47 = zext i8 %45 to i32, !dbg !11102
  %or48 = or i32 %conv47, 8, !dbg !11102
  %conv49 = trunc i32 %or48 to i8, !dbg !11102
  store i8 %conv49, i8* %flags46, align 1, !dbg !11102
  %46 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11103
  call void @scsi_esp_cmd(%struct.esp* %46, i8 zeroext 26) #12, !dbg !11104
  br label %if.end50

if.end50:                                         ; preds = %if.else41, %if.then36
  br label %return, !dbg !11105

do_reject:                                        ; preds = %if.then9, %if.then6, %if.then
  call void @llvm.dbg.label(metadata !11106), !dbg !11107
  %47 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11108
  %msg_out51 = getelementptr inbounds %struct.esp, %struct.esp* %47, i32 0, i32 26, !dbg !11109
  %arrayidx52 = getelementptr [8 x i8], [8 x i8]* %msg_out51, i64 0, i64 0, !dbg !11108
  store i8 7, i8* %arrayidx52, align 8, !dbg !11110
  %48 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11111
  %msg_out_len53 = getelementptr inbounds %struct.esp, %struct.esp* %48, i32 0, i32 27, !dbg !11112
  store i32 1, i32* %msg_out_len53, align 8, !dbg !11113
  %49 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11114
  call void @scsi_esp_cmd(%struct.esp* %49, i8 zeroext 26) #12, !dbg !11115
  br label %return, !dbg !11116

return:                                           ; preds = %do_reject, %if.end50
  ret void, !dbg !11116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_setsync(%struct.esp* %esp, %struct.esp_target_data* %tp, i8 zeroext %scsi_period, i8 zeroext %scsi_offset, i8 zeroext %esp_stp, i8 zeroext %esp_soff) #0 !dbg !11117 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %tp.addr = alloca %struct.esp_target_data*, align 8
  %scsi_period.addr = alloca i8, align 1
  %scsi_offset.addr = alloca i8, align 1
  %esp_stp.addr = alloca i8, align 1
  %esp_soff.addr = alloca i8, align 1
  %bit = alloca i8, align 1
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !11120, metadata !DIExpression()), !dbg !11121
  store %struct.esp_target_data* %tp, %struct.esp_target_data** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp.addr, metadata !11122, metadata !DIExpression()), !dbg !11123
  store i8 %scsi_period, i8* %scsi_period.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %scsi_period.addr, metadata !11124, metadata !DIExpression()), !dbg !11125
  store i8 %scsi_offset, i8* %scsi_offset.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %scsi_offset.addr, metadata !11126, metadata !DIExpression()), !dbg !11127
  store i8 %esp_stp, i8* %esp_stp.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %esp_stp.addr, metadata !11128, metadata !DIExpression()), !dbg !11129
  store i8 %esp_soff, i8* %esp_soff.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %esp_soff.addr, metadata !11130, metadata !DIExpression()), !dbg !11131
  %0 = load i8, i8* %scsi_period.addr, align 1, !dbg !11132
  %conv = zext i8 %0 to i32, !dbg !11132
  %1 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11133
  %starget = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %1, i32 0, i32 8, !dbg !11133
  %2 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !11133
  %starget_data = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %2, i32 0, i32 15, !dbg !11133
  %3 = bitcast [0 x i64]* %starget_data to %struct.spi_transport_attrs*, !dbg !11133
  %period = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %3, i32 0, i32 0, !dbg !11133
  store i32 %conv, i32* %period, align 8, !dbg !11134
  %4 = load i8, i8* %scsi_offset.addr, align 1, !dbg !11135
  %conv1 = zext i8 %4 to i32, !dbg !11135
  %5 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11136
  %starget2 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %5, i32 0, i32 8, !dbg !11136
  %6 = load %struct.scsi_target*, %struct.scsi_target** %starget2, align 8, !dbg !11136
  %starget_data3 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %6, i32 0, i32 15, !dbg !11136
  %7 = bitcast [0 x i64]* %starget_data3 to %struct.spi_transport_attrs*, !dbg !11136
  %offset = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %7, i32 0, i32 2, !dbg !11136
  store i32 %conv1, i32* %offset, align 8, !dbg !11137
  %8 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11138
  %flags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %8, i32 0, i32 3, !dbg !11139
  %9 = load i8, i8* %flags, align 1, !dbg !11139
  %conv4 = zext i8 %9 to i32, !dbg !11138
  %and = and i32 %conv4, 1, !dbg !11140
  %tobool = icmp ne i32 %and, 0, !dbg !11141
  %10 = zext i1 %tobool to i64, !dbg !11141
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !11141
  %11 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11142
  %starget5 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %11, i32 0, i32 8, !dbg !11142
  %12 = load %struct.scsi_target*, %struct.scsi_target** %starget5, align 8, !dbg !11142
  %starget_data6 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %12, i32 0, i32 15, !dbg !11142
  %13 = bitcast [0 x i64]* %starget_data6 to %struct.spi_transport_attrs*, !dbg !11142
  %width = getelementptr inbounds %struct.spi_transport_attrs, %struct.spi_transport_attrs* %13, i32 0, i32 4, !dbg !11142
  %14 = trunc i32 %cond to i16, !dbg !11143
  %bf.load = load i16, i16* %width, align 8, !dbg !11143
  %bf.value = and i16 %14, 1, !dbg !11143
  %bf.clear = and i16 %bf.load, -2, !dbg !11143
  %bf.set = or i16 %bf.clear, %bf.value, !dbg !11143
  store i16 %bf.set, i16* %width, align 8, !dbg !11143
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !11143
  %15 = load i8, i8* %esp_soff.addr, align 1, !dbg !11144
  %tobool7 = icmp ne i8 %15, 0, !dbg !11144
  br i1 %tobool7, label %if.then, label %if.end46, !dbg !11146

if.then:                                          ; preds = %entry
  %16 = load i8, i8* %esp_stp.addr, align 1, !dbg !11147
  %conv8 = zext i8 %16 to i32, !dbg !11147
  %and9 = and i32 %conv8, 31, !dbg !11147
  %conv10 = trunc i32 %and9 to i8, !dbg !11147
  store i8 %conv10, i8* %esp_stp.addr, align 1, !dbg !11147
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11149
  %radelay = getelementptr inbounds %struct.esp, %struct.esp* %17, i32 0, i32 48, !dbg !11150
  %18 = load i32, i32* %radelay, align 8, !dbg !11150
  %19 = load i8, i8* %esp_soff.addr, align 1, !dbg !11151
  %conv11 = zext i8 %19 to i32, !dbg !11151
  %or = or i32 %conv11, %18, !dbg !11151
  %conv12 = trunc i32 %or to i8, !dbg !11151
  store i8 %conv12, i8* %esp_soff.addr, align 1, !dbg !11151
  %20 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11152
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %20, i32 0, i32 36, !dbg !11154
  %21 = load i32, i32* %rev, align 4, !dbg !11154
  %cmp = icmp uge i32 %21, 3, !dbg !11155
  br i1 %cmp, label %if.then14, label %if.end45, !dbg !11156

if.then14:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8* %bit, metadata !11157, metadata !DIExpression()), !dbg !11159
  store i8 16, i8* %bit, align 1, !dbg !11159
  %22 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11160
  %rev15 = getelementptr inbounds %struct.esp, %struct.esp* %22, i32 0, i32 36, !dbg !11162
  %23 = load i32, i32* %rev15, align 4, !dbg !11162
  %cmp16 = icmp uge i32 %23, 6, !dbg !11163
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !11164

if.then18:                                        ; preds = %if.then14
  store i8 2, i8* %bit, align 1, !dbg !11165
  br label %if.end, !dbg !11166

if.end:                                           ; preds = %if.then18, %if.then14
  %24 = load i8, i8* %scsi_period.addr, align 1, !dbg !11167
  %conv19 = zext i8 %24 to i32, !dbg !11167
  %cmp20 = icmp slt i32 %conv19, 50, !dbg !11169
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !11170

if.then22:                                        ; preds = %if.end
  %25 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11171
  %rev23 = getelementptr inbounds %struct.esp, %struct.esp* %25, i32 0, i32 36, !dbg !11174
  %26 = load i32, i32* %rev23, align 4, !dbg !11174
  %cmp24 = icmp eq i32 %26, 8, !dbg !11175
  br i1 %cmp24, label %if.then26, label %if.end31, !dbg !11176

if.then26:                                        ; preds = %if.then22
  %27 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11177
  %radelay27 = getelementptr inbounds %struct.esp, %struct.esp* %27, i32 0, i32 48, !dbg !11178
  %28 = load i32, i32* %radelay27, align 8, !dbg !11178
  %neg = xor i32 %28, -1, !dbg !11179
  %29 = load i8, i8* %esp_soff.addr, align 1, !dbg !11180
  %conv28 = zext i8 %29 to i32, !dbg !11180
  %and29 = and i32 %conv28, %neg, !dbg !11180
  %conv30 = trunc i32 %and29 to i8, !dbg !11180
  store i8 %conv30, i8* %esp_soff.addr, align 1, !dbg !11180
  br label %if.end31, !dbg !11181

if.end31:                                         ; preds = %if.then26, %if.then22
  %30 = load i8, i8* %bit, align 1, !dbg !11182
  %conv32 = zext i8 %30 to i32, !dbg !11182
  %31 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11183
  %esp_config3 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %31, i32 0, i32 2, !dbg !11184
  %32 = load i8, i8* %esp_config3, align 2, !dbg !11185
  %conv33 = zext i8 %32 to i32, !dbg !11185
  %or34 = or i32 %conv33, %conv32, !dbg !11185
  %conv35 = trunc i32 %or34 to i8, !dbg !11185
  store i8 %conv35, i8* %esp_config3, align 2, !dbg !11185
  br label %if.end42, !dbg !11186

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %bit, align 1, !dbg !11187
  %conv36 = zext i8 %33 to i32, !dbg !11187
  %neg37 = xor i32 %conv36, -1, !dbg !11189
  %34 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11190
  %esp_config338 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %34, i32 0, i32 2, !dbg !11191
  %35 = load i8, i8* %esp_config338, align 2, !dbg !11192
  %conv39 = zext i8 %35 to i32, !dbg !11192
  %and40 = and i32 %conv39, %neg37, !dbg !11192
  %conv41 = trunc i32 %and40 to i8, !dbg !11192
  store i8 %conv41, i8* %esp_config338, align 2, !dbg !11192
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.end31
  %36 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11193
  %esp_config343 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %36, i32 0, i32 2, !dbg !11194
  %37 = load i8, i8* %esp_config343, align 2, !dbg !11194
  %38 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11195
  %prev_cfg3 = getelementptr inbounds %struct.esp, %struct.esp* %38, i32 0, i32 18, !dbg !11196
  store i8 %37, i8* %prev_cfg3, align 2, !dbg !11197
  %39 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11198
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %39, i32 0, i32 2, !dbg !11198
  %40 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !11198
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %40, i32 0, i32 0, !dbg !11198
  %41 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !11198
  %42 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11198
  %43 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11198
  %prev_cfg344 = getelementptr inbounds %struct.esp, %struct.esp* %43, i32 0, i32 18, !dbg !11198
  %44 = load i8, i8* %prev_cfg344, align 2, !dbg !11198
  call void %41(%struct.esp* %42, i8 zeroext %44, i64 12) #12, !dbg !11198
  br label %if.end45, !dbg !11199

if.end45:                                         ; preds = %if.end42, %if.then
  br label %if.end46, !dbg !11200

if.end46:                                         ; preds = %if.end45, %entry
  %45 = load i8, i8* %esp_stp.addr, align 1, !dbg !11201
  %46 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11202
  %prev_stp = getelementptr inbounds %struct.esp, %struct.esp* %46, i32 0, i32 17, !dbg !11203
  store i8 %45, i8* %prev_stp, align 1, !dbg !11204
  %47 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11205
  %esp_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %47, i32 0, i32 0, !dbg !11206
  store i8 %45, i8* %esp_period, align 8, !dbg !11207
  %48 = load i8, i8* %esp_soff.addr, align 1, !dbg !11208
  %49 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11209
  %prev_soff = getelementptr inbounds %struct.esp, %struct.esp* %49, i32 0, i32 16, !dbg !11210
  store i8 %48, i8* %prev_soff, align 4, !dbg !11211
  %50 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11212
  %esp_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %50, i32 0, i32 1, !dbg !11213
  store i8 %48, i8* %esp_offset, align 1, !dbg !11214
  %51 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11215
  %ops47 = getelementptr inbounds %struct.esp, %struct.esp* %51, i32 0, i32 2, !dbg !11215
  %52 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops47, align 8, !dbg !11215
  %esp_write848 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %52, i32 0, i32 0, !dbg !11215
  %53 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write848, align 8, !dbg !11215
  %54 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11215
  %55 = load i8, i8* %esp_soff.addr, align 1, !dbg !11215
  call void %53(%struct.esp* %54, i8 zeroext %55, i64 7) #12, !dbg !11215
  %56 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11216
  %ops49 = getelementptr inbounds %struct.esp, %struct.esp* %56, i32 0, i32 2, !dbg !11216
  %57 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops49, align 8, !dbg !11216
  %esp_write850 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %57, i32 0, i32 0, !dbg !11216
  %58 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write850, align 8, !dbg !11216
  %59 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11216
  %60 = load i8, i8* %esp_stp.addr, align 1, !dbg !11216
  call void %58(%struct.esp* %59, i8 zeroext %60, i64 6) #12, !dbg !11216
  %61 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11217
  %flags51 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %61, i32 0, i32 3, !dbg !11218
  %62 = load i8, i8* %flags51, align 1, !dbg !11219
  %conv52 = zext i8 %62 to i32, !dbg !11219
  %and53 = and i32 %conv52, -73, !dbg !11219
  %conv54 = trunc i32 %and53 to i8, !dbg !11219
  store i8 %conv54, i8* %flags51, align 1, !dbg !11219
  %63 = load %struct.esp_target_data*, %struct.esp_target_data** %tp.addr, align 8, !dbg !11220
  %starget55 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %63, i32 0, i32 8, !dbg !11221
  %64 = load %struct.scsi_target*, %struct.scsi_target** %starget55, align 8, !dbg !11221
  call void @spi_display_xfer_agreement(%struct.scsi_target* %64) #12, !dbg !11222
  ret void, !dbg !11223
}

; Function Attrs: noredzone
declare dso_local void @spi_display_xfer_agreement(%struct.scsi_target*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !11224 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !11227, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11229, metadata !DIExpression()), !dbg !11231
  %0 = load i64, i64* %__edi, align 8, !dbg !11231
  store i64 %0, i64* %__edi, align 8, !dbg !11231
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11232, metadata !DIExpression()), !dbg !11231
  %1 = load i64, i64* %__esi, align 8, !dbg !11231
  store i64 %1, i64* %__esi, align 8, !dbg !11231
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11233, metadata !DIExpression()), !dbg !11231
  %2 = load i64, i64* %__edx, align 8, !dbg !11231
  store i64 %2, i64* %__edx, align 8, !dbg !11231
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11234, metadata !DIExpression()), !dbg !11231
  %3 = load i64, i64* %__ecx, align 8, !dbg !11231
  store i64 %3, i64* %__ecx, align 8, !dbg !11231
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11235, metadata !DIExpression()), !dbg !11231
  %4 = load i64, i64* %__eax, align 8, !dbg !11231
  store i64 %4, i64* %__eax, align 8, !dbg !11231
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !11231
  %6 = call i64 @llvm.read_register.i64(metadata !5634), !dbg !11231
  %7 = load i64, i64* %f.addr, align 8, !dbg !11231
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !11231, !srcloc !11236
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !11231
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !11231
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11231
  call void @llvm.write_register.i64(metadata !5634, i64 %asmresult1), !dbg !11231
  ret void, !dbg !11237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_set_all_config3(%struct.esp* %esp, i8 zeroext %val) #0 !dbg !11238 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %val.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !11239, metadata !DIExpression()), !dbg !11240
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !11241, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11243, metadata !DIExpression()), !dbg !11244
  store i32 0, i32* %i, align 4, !dbg !11245
  br label %for.cond, !dbg !11247

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11248
  %cmp = icmp slt i32 %0, 16, !dbg !11250
  br i1 %cmp, label %for.body, label %for.end, !dbg !11251

for.body:                                         ; preds = %for.cond
  %1 = load i8, i8* %val.addr, align 1, !dbg !11252
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11253
  %target = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 21, !dbg !11254
  %3 = load i32, i32* %i, align 4, !dbg !11255
  %idxprom = sext i32 %3 to i64, !dbg !11253
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 %idxprom, !dbg !11253
  %esp_config3 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx, i32 0, i32 2, !dbg !11256
  store i8 %1, i8* %esp_config3, align 2, !dbg !11257
  br label %for.inc, !dbg !11253

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !11258
  %inc = add i32 %4, 1, !dbg !11258
  store i32 %inc, i32* %i, align 4, !dbg !11258
  br label %for.cond, !dbg !11259, !llvm.loop !11260

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !11263 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11264, metadata !DIExpression()), !dbg !11265
  br label %do.body, !dbg !11266

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11267

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11269

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !11267

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11271
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11271
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !11271
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !11271
  br label %do.end3, !dbg !11271

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !11267

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11273
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11274
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !11275
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !11276
  ret void, !dbg !11277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_reset_esp(%struct.esp* %esp) #0 !dbg !11278 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %family_code = alloca i8, align 1
  %config4 = alloca i8, align 1
  %cfg3 = alloca i8, align 1
  %cfg3103 = alloca i32, align 4
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !11279, metadata !DIExpression()), !dbg !11280
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11281
  call void @scsi_esp_cmd(%struct.esp* %0, i8 zeroext 2) #12, !dbg !11282
  %1 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11283
  call void @scsi_esp_cmd(%struct.esp* %1, i8 zeroext -128) #12, !dbg !11284
  %2 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11285
  %rev = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 36, !dbg !11287
  %3 = load i32, i32* %rev, align 4, !dbg !11287
  %cmp = icmp eq i32 %3, 7, !dbg !11288
  br i1 %cmp, label %if.then, label %if.end, !dbg !11289

if.then:                                          ; preds = %entry
  %4 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11290
  %ops = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 2, !dbg !11290
  %5 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops, align 8, !dbg !11290
  %esp_write8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %5, i32 0, i32 0, !dbg !11290
  %6 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8, align 8, !dbg !11290
  %7 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11290
  call void %6(%struct.esp* %7, i8 zeroext 64, i64 11) #12, !dbg !11290
  br label %if.end, !dbg !11290

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11291
  call void @scsi_esp_cmd(%struct.esp* %8, i8 zeroext -128) #12, !dbg !11292
  %9 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11293
  %ccycle = getelementptr inbounds %struct.esp, %struct.esp* %9, i32 0, i32 42, !dbg !11294
  %10 = load i32, i32* %ccycle, align 8, !dbg !11294
  %mul = mul i32 35, %10, !dbg !11295
  %div = udiv i32 %mul, 1000, !dbg !11296
  %11 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11297
  %max_period = getelementptr inbounds %struct.esp, %struct.esp* %11, i32 0, i32 46, !dbg !11298
  store i32 %div, i32* %max_period, align 8, !dbg !11299
  %12 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11300
  %rev1 = getelementptr inbounds %struct.esp, %struct.esp* %12, i32 0, i32 36, !dbg !11302
  %13 = load i32, i32* %rev1, align 4, !dbg !11302
  %cmp2 = icmp eq i32 %13, 7, !dbg !11303
  br i1 %cmp2, label %if.then3, label %if.else32, !dbg !11304

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %family_code, metadata !11305, metadata !DIExpression()), !dbg !11307
  %14 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11308
  %ops4 = getelementptr inbounds %struct.esp, %struct.esp* %14, i32 0, i32 2, !dbg !11308
  %15 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops4, align 8, !dbg !11308
  %esp_read8 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %15, i32 0, i32 1, !dbg !11308
  %16 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8, align 8, !dbg !11308
  %17 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11308
  %call = call zeroext i8 %16(%struct.esp* %17, i64 14) #12, !dbg !11308
  %conv = zext i8 %call to i32, !dbg !11308
  %and = and i32 %conv, 248, !dbg !11308
  %shr = ashr i32 %and, 3, !dbg !11308
  %conv5 = trunc i32 %shr to i8, !dbg !11308
  store i8 %conv5, i8* %family_code, align 1, !dbg !11307
  %18 = load i8, i8* %family_code, align 1, !dbg !11309
  %conv6 = zext i8 %18 to i32, !dbg !11309
  %cmp7 = icmp eq i32 %conv6, 2, !dbg !11311
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !11312

if.then9:                                         ; preds = %if.then3
  %19 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11313
  %rev10 = getelementptr inbounds %struct.esp, %struct.esp* %19, i32 0, i32 36, !dbg !11315
  store i32 3, i32* %rev10, align 4, !dbg !11316
  br label %if.end28, !dbg !11317

if.else:                                          ; preds = %if.then3
  %20 = load i8, i8* %family_code, align 1, !dbg !11318
  %conv11 = zext i8 %20 to i32, !dbg !11318
  %cmp12 = icmp eq i32 %conv11, 10, !dbg !11320
  br i1 %cmp12, label %if.then14, label %if.else16, !dbg !11321

if.then14:                                        ; preds = %if.else
  %21 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11322
  %rev15 = getelementptr inbounds %struct.esp, %struct.esp* %21, i32 0, i32 36, !dbg !11324
  store i32 8, i32* %rev15, align 4, !dbg !11325
  br label %if.end27, !dbg !11326

if.else16:                                        ; preds = %if.else
  %22 = load i8, i8* %family_code, align 1, !dbg !11327
  %conv17 = zext i8 %22 to i32, !dbg !11327
  %cmp18 = icmp eq i32 %conv17, 20, !dbg !11329
  br i1 %cmp18, label %if.then20, label %if.else24, !dbg !11330

if.then20:                                        ; preds = %if.else16
  %23 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11331
  %rev21 = getelementptr inbounds %struct.esp, %struct.esp* %23, i32 0, i32 36, !dbg !11333
  store i32 5, i32* %rev21, align 4, !dbg !11334
  %24 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11335
  %ops22 = getelementptr inbounds %struct.esp, %struct.esp* %24, i32 0, i32 2, !dbg !11335
  %25 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops22, align 8, !dbg !11335
  %esp_write823 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %25, i32 0, i32 0, !dbg !11335
  %26 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write823, align 8, !dbg !11335
  %27 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11335
  call void %26(%struct.esp* %27, i8 zeroext 4, i64 13) #12, !dbg !11335
  br label %if.end26, !dbg !11336

if.else24:                                        ; preds = %if.else16
  %28 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11337
  %rev25 = getelementptr inbounds %struct.esp, %struct.esp* %28, i32 0, i32 36, !dbg !11339
  store i32 6, i32* %rev25, align 4, !dbg !11340
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then20
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then14
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then9
  %29 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11341
  %ccycle29 = getelementptr inbounds %struct.esp, %struct.esp* %29, i32 0, i32 42, !dbg !11342
  %30 = load i32, i32* %ccycle29, align 8, !dbg !11342
  %mul30 = mul i32 4, %30, !dbg !11343
  %div31 = udiv i32 %mul30, 1000, !dbg !11344
  %31 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11345
  %min_period = getelementptr inbounds %struct.esp, %struct.esp* %31, i32 0, i32 47, !dbg !11346
  store i32 %div31, i32* %min_period, align 4, !dbg !11347
  br label %if.end37, !dbg !11348

if.else32:                                        ; preds = %if.end
  %32 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11349
  %ccycle33 = getelementptr inbounds %struct.esp, %struct.esp* %32, i32 0, i32 42, !dbg !11351
  %33 = load i32, i32* %ccycle33, align 8, !dbg !11351
  %mul34 = mul i32 5, %33, !dbg !11352
  %div35 = udiv i32 %mul34, 1000, !dbg !11353
  %34 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11354
  %min_period36 = getelementptr inbounds %struct.esp, %struct.esp* %34, i32 0, i32 47, !dbg !11355
  store i32 %div35, i32* %min_period36, align 4, !dbg !11356
  br label %if.end37

if.end37:                                         ; preds = %if.else32, %if.end28
  %35 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11357
  %rev38 = getelementptr inbounds %struct.esp, %struct.esp* %35, i32 0, i32 36, !dbg !11359
  %36 = load i32, i32* %rev38, align 4, !dbg !11359
  %cmp39 = icmp eq i32 %36, 3, !dbg !11360
  br i1 %cmp39, label %if.then41, label %if.end55, !dbg !11361

if.then41:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i8* %config4, metadata !11362, metadata !DIExpression()), !dbg !11364
  store i8 -128, i8* %config4, align 1, !dbg !11364
  %37 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11365
  %ops42 = getelementptr inbounds %struct.esp, %struct.esp* %37, i32 0, i32 2, !dbg !11365
  %38 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops42, align 8, !dbg !11365
  %esp_write843 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %38, i32 0, i32 0, !dbg !11365
  %39 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write843, align 8, !dbg !11365
  %40 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11365
  %41 = load i8, i8* %config4, align 1, !dbg !11365
  call void %39(%struct.esp* %40, i8 zeroext %41, i64 13) #12, !dbg !11365
  %42 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11366
  %ops44 = getelementptr inbounds %struct.esp, %struct.esp* %42, i32 0, i32 2, !dbg !11366
  %43 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops44, align 8, !dbg !11366
  %esp_read845 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %43, i32 0, i32 1, !dbg !11366
  %44 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read845, align 8, !dbg !11366
  %45 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11366
  %call46 = call zeroext i8 %44(%struct.esp* %45, i64 13) #12, !dbg !11366
  store i8 %call46, i8* %config4, align 1, !dbg !11367
  %46 = load i8, i8* %config4, align 1, !dbg !11368
  %conv47 = zext i8 %46 to i32, !dbg !11368
  %and48 = and i32 %conv47, 128, !dbg !11370
  %tobool = icmp ne i32 %and48, 0, !dbg !11370
  br i1 %tobool, label %if.then49, label %if.end54, !dbg !11371

if.then49:                                        ; preds = %if.then41
  %47 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11372
  %rev50 = getelementptr inbounds %struct.esp, %struct.esp* %47, i32 0, i32 36, !dbg !11374
  store i32 4, i32* %rev50, align 4, !dbg !11375
  %48 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11376
  %ops51 = getelementptr inbounds %struct.esp, %struct.esp* %48, i32 0, i32 2, !dbg !11376
  %49 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops51, align 8, !dbg !11376
  %esp_write852 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %49, i32 0, i32 0, !dbg !11376
  %50 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write852, align 8, !dbg !11376
  %51 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11376
  %52 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11376
  %config453 = getelementptr inbounds %struct.esp, %struct.esp* %52, i32 0, i32 33, !dbg !11376
  %53 = load i8, i8* %config453, align 1, !dbg !11376
  call void %50(%struct.esp* %51, i8 zeroext %53, i64 13) #12, !dbg !11376
  br label %if.end54, !dbg !11377

if.end54:                                         ; preds = %if.then49, %if.then41
  br label %if.end55, !dbg !11378

if.end55:                                         ; preds = %if.end54, %if.end37
  %54 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11379
  %max_period56 = getelementptr inbounds %struct.esp, %struct.esp* %54, i32 0, i32 46, !dbg !11380
  %55 = load i32, i32* %max_period56, align 8, !dbg !11380
  %add = add i32 %55, 3, !dbg !11381
  %shr57 = lshr i32 %add, 2, !dbg !11382
  %56 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11383
  %max_period58 = getelementptr inbounds %struct.esp, %struct.esp* %56, i32 0, i32 46, !dbg !11384
  store i32 %shr57, i32* %max_period58, align 8, !dbg !11385
  %57 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11386
  %min_period59 = getelementptr inbounds %struct.esp, %struct.esp* %57, i32 0, i32 47, !dbg !11387
  %58 = load i32, i32* %min_period59, align 4, !dbg !11387
  %add60 = add i32 %58, 3, !dbg !11388
  %shr61 = lshr i32 %add60, 2, !dbg !11389
  %59 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11390
  %min_period62 = getelementptr inbounds %struct.esp, %struct.esp* %59, i32 0, i32 47, !dbg !11391
  store i32 %shr61, i32* %min_period62, align 4, !dbg !11392
  %60 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11393
  %ops63 = getelementptr inbounds %struct.esp, %struct.esp* %60, i32 0, i32 2, !dbg !11393
  %61 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops63, align 8, !dbg !11393
  %esp_write864 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %61, i32 0, i32 0, !dbg !11393
  %62 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write864, align 8, !dbg !11393
  %63 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11393
  %64 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11393
  %config1 = getelementptr inbounds %struct.esp, %struct.esp* %64, i32 0, i32 31, !dbg !11393
  %65 = load i8, i8* %config1, align 1, !dbg !11393
  call void %62(%struct.esp* %63, i8 zeroext %65, i64 8) #12, !dbg !11393
  %66 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11394
  %rev65 = getelementptr inbounds %struct.esp, %struct.esp* %66, i32 0, i32 36, !dbg !11395
  %67 = load i32, i32* %rev65, align 4, !dbg !11395
  switch i32 %67, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb66
    i32 2, label %sw.bb69
    i32 8, label %sw.bb76
    i32 3, label %sw.bb80
    i32 4, label %sw.bb80
    i32 5, label %sw.bb80
    i32 6, label %sw.bb131
  ], !dbg !11396

sw.bb:                                            ; preds = %if.end55
  br label %sw.epilog, !dbg !11397

sw.bb66:                                          ; preds = %if.end55
  %68 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11399
  %ops67 = getelementptr inbounds %struct.esp, %struct.esp* %68, i32 0, i32 2, !dbg !11399
  %69 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops67, align 8, !dbg !11399
  %esp_write868 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %69, i32 0, i32 0, !dbg !11399
  %70 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write868, align 8, !dbg !11399
  %71 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11399
  %72 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11399
  %config2 = getelementptr inbounds %struct.esp, %struct.esp* %72, i32 0, i32 32, !dbg !11399
  %73 = load i8, i8* %config2, align 2, !dbg !11399
  call void %70(%struct.esp* %71, i8 zeroext %73, i64 11) #12, !dbg !11399
  br label %sw.epilog, !dbg !11400

sw.bb69:                                          ; preds = %if.end55
  %74 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11401
  %ops70 = getelementptr inbounds %struct.esp, %struct.esp* %74, i32 0, i32 2, !dbg !11401
  %75 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops70, align 8, !dbg !11401
  %esp_write871 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %75, i32 0, i32 0, !dbg !11401
  %76 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write871, align 8, !dbg !11401
  %77 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11401
  %78 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11401
  %config272 = getelementptr inbounds %struct.esp, %struct.esp* %78, i32 0, i32 32, !dbg !11401
  %79 = load i8, i8* %config272, align 2, !dbg !11401
  call void %76(%struct.esp* %77, i8 zeroext %79, i64 11) #12, !dbg !11401
  %80 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11402
  %target = getelementptr inbounds %struct.esp, %struct.esp* %80, i32 0, i32 21, !dbg !11403
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target, i64 0, i64 0, !dbg !11402
  %esp_config3 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx, i32 0, i32 2, !dbg !11404
  %81 = load i8, i8* %esp_config3, align 2, !dbg !11404
  %82 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11405
  %prev_cfg3 = getelementptr inbounds %struct.esp, %struct.esp* %82, i32 0, i32 18, !dbg !11406
  store i8 %81, i8* %prev_cfg3, align 2, !dbg !11407
  %83 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11408
  %ops73 = getelementptr inbounds %struct.esp, %struct.esp* %83, i32 0, i32 2, !dbg !11408
  %84 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops73, align 8, !dbg !11408
  %esp_write874 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %84, i32 0, i32 0, !dbg !11408
  %85 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write874, align 8, !dbg !11408
  %86 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11408
  %87 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11408
  %prev_cfg375 = getelementptr inbounds %struct.esp, %struct.esp* %87, i32 0, i32 18, !dbg !11408
  %88 = load i8, i8* %prev_cfg375, align 2, !dbg !11408
  call void %85(%struct.esp* %86, i8 zeroext %88, i64 12) #12, !dbg !11408
  br label %sw.epilog, !dbg !11409

sw.bb76:                                          ; preds = %if.end55
  %89 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11410
  %config277 = getelementptr inbounds %struct.esp, %struct.esp* %89, i32 0, i32 32, !dbg !11411
  %90 = load i8, i8* %config277, align 2, !dbg !11412
  %conv78 = zext i8 %90 to i32, !dbg !11412
  %or = or i32 %conv78, 144, !dbg !11412
  %conv79 = trunc i32 %or to i8, !dbg !11412
  store i8 %conv79, i8* %config277, align 2, !dbg !11412
  br label %sw.bb80, !dbg !11410

sw.bb80:                                          ; preds = %if.end55, %if.end55, %if.end55, %sw.bb76
  %91 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11413
  %ops81 = getelementptr inbounds %struct.esp, %struct.esp* %91, i32 0, i32 2, !dbg !11413
  %92 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops81, align 8, !dbg !11413
  %esp_write882 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %92, i32 0, i32 0, !dbg !11413
  %93 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write882, align 8, !dbg !11413
  %94 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11413
  %95 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11413
  %config283 = getelementptr inbounds %struct.esp, %struct.esp* %95, i32 0, i32 32, !dbg !11413
  %96 = load i8, i8* %config283, align 2, !dbg !11413
  call void %93(%struct.esp* %94, i8 zeroext %96, i64 11) #12, !dbg !11413
  %97 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11414
  %rev84 = getelementptr inbounds %struct.esp, %struct.esp* %97, i32 0, i32 36, !dbg !11416
  %98 = load i32, i32* %rev84, align 4, !dbg !11416
  %cmp85 = icmp eq i32 %98, 8, !dbg !11417
  br i1 %cmp85, label %if.then87, label %if.else102, !dbg !11418

if.then87:                                        ; preds = %sw.bb80
  call void @llvm.dbg.declare(metadata i8* %cfg3, metadata !11419, metadata !DIExpression()), !dbg !11421
  %99 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11422
  %target88 = getelementptr inbounds %struct.esp, %struct.esp* %99, i32 0, i32 21, !dbg !11423
  %arrayidx89 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target88, i64 0, i64 0, !dbg !11422
  %esp_config390 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx89, i32 0, i32 2, !dbg !11424
  %100 = load i8, i8* %esp_config390, align 2, !dbg !11424
  store i8 %100, i8* %cfg3, align 1, !dbg !11421
  %101 = load i8, i8* %cfg3, align 1, !dbg !11425
  %conv91 = zext i8 %101 to i32, !dbg !11425
  %or92 = or i32 %conv91, 129, !dbg !11425
  %conv93 = trunc i32 %or92 to i8, !dbg !11425
  store i8 %conv93, i8* %cfg3, align 1, !dbg !11425
  %102 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11426
  %scsi_id = getelementptr inbounds %struct.esp, %struct.esp* %102, i32 0, i32 34, !dbg !11428
  %103 = load i8, i8* %scsi_id, align 4, !dbg !11428
  %conv94 = zext i8 %103 to i32, !dbg !11426
  %cmp95 = icmp sge i32 %conv94, 8, !dbg !11429
  br i1 %cmp95, label %if.then97, label %if.end101, !dbg !11430

if.then97:                                        ; preds = %if.then87
  %104 = load i8, i8* %cfg3, align 1, !dbg !11431
  %conv98 = zext i8 %104 to i32, !dbg !11431
  %or99 = or i32 %conv98, 32, !dbg !11431
  %conv100 = trunc i32 %or99 to i8, !dbg !11431
  store i8 %conv100, i8* %cfg3, align 1, !dbg !11431
  br label %if.end101, !dbg !11432

if.end101:                                        ; preds = %if.then97, %if.then87
  %105 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11433
  %106 = load i8, i8* %cfg3, align 1, !dbg !11434
  call void @esp_set_all_config3(%struct.esp* %105, i8 zeroext %106) #12, !dbg !11435
  br label %if.end110, !dbg !11436

if.else102:                                       ; preds = %sw.bb80
  call void @llvm.dbg.declare(metadata i32* %cfg3103, metadata !11437, metadata !DIExpression()), !dbg !11439
  %107 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11440
  %target104 = getelementptr inbounds %struct.esp, %struct.esp* %107, i32 0, i32 21, !dbg !11441
  %arrayidx105 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target104, i64 0, i64 0, !dbg !11440
  %esp_config3106 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx105, i32 0, i32 2, !dbg !11442
  %108 = load i8, i8* %esp_config3106, align 2, !dbg !11442
  %conv107 = zext i8 %108 to i32, !dbg !11440
  store i32 %conv107, i32* %cfg3103, align 4, !dbg !11439
  %109 = load i32, i32* %cfg3103, align 4, !dbg !11443
  %or108 = or i32 %109, 8, !dbg !11443
  store i32 %or108, i32* %cfg3103, align 4, !dbg !11443
  %110 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11444
  %111 = load i32, i32* %cfg3103, align 4, !dbg !11445
  %conv109 = trunc i32 %111 to i8, !dbg !11445
  call void @esp_set_all_config3(%struct.esp* %110, i8 zeroext %conv109) #12, !dbg !11446
  br label %if.end110

if.end110:                                        ; preds = %if.else102, %if.end101
  %112 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11447
  %target111 = getelementptr inbounds %struct.esp, %struct.esp* %112, i32 0, i32 21, !dbg !11448
  %arrayidx112 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target111, i64 0, i64 0, !dbg !11447
  %esp_config3113 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx112, i32 0, i32 2, !dbg !11449
  %113 = load i8, i8* %esp_config3113, align 2, !dbg !11449
  %114 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11450
  %prev_cfg3114 = getelementptr inbounds %struct.esp, %struct.esp* %114, i32 0, i32 18, !dbg !11451
  store i8 %113, i8* %prev_cfg3114, align 2, !dbg !11452
  %115 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11453
  %ops115 = getelementptr inbounds %struct.esp, %struct.esp* %115, i32 0, i32 2, !dbg !11453
  %116 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops115, align 8, !dbg !11453
  %esp_write8116 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %116, i32 0, i32 0, !dbg !11453
  %117 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8116, align 8, !dbg !11453
  %118 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11453
  %119 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11453
  %prev_cfg3117 = getelementptr inbounds %struct.esp, %struct.esp* %119, i32 0, i32 18, !dbg !11453
  %120 = load i8, i8* %prev_cfg3117, align 2, !dbg !11453
  call void %117(%struct.esp* %118, i8 zeroext %120, i64 12) #12, !dbg !11453
  %121 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11454
  %rev118 = getelementptr inbounds %struct.esp, %struct.esp* %121, i32 0, i32 36, !dbg !11456
  %122 = load i32, i32* %rev118, align 4, !dbg !11456
  %cmp119 = icmp eq i32 %122, 8, !dbg !11457
  br i1 %cmp119, label %if.then121, label %if.else122, !dbg !11458

if.then121:                                       ; preds = %if.end110
  %123 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11459
  %radelay = getelementptr inbounds %struct.esp, %struct.esp* %123, i32 0, i32 48, !dbg !11461
  store i32 80, i32* %radelay, align 8, !dbg !11462
  br label %if.end130, !dbg !11463

if.else122:                                       ; preds = %if.end110
  %124 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11464
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %124, i32 0, i32 37, !dbg !11467
  %125 = load i32, i32* %flags, align 8, !dbg !11467
  %and123 = and i32 %125, 1, !dbg !11468
  %tobool124 = icmp ne i32 %and123, 0, !dbg !11468
  br i1 %tobool124, label %if.then125, label %if.else127, !dbg !11469

if.then125:                                       ; preds = %if.else122
  %126 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11470
  %radelay126 = getelementptr inbounds %struct.esp, %struct.esp* %126, i32 0, i32 48, !dbg !11471
  store i32 0, i32* %radelay126, align 8, !dbg !11472
  br label %if.end129, !dbg !11470

if.else127:                                       ; preds = %if.else122
  %127 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11473
  %radelay128 = getelementptr inbounds %struct.esp, %struct.esp* %127, i32 0, i32 48, !dbg !11474
  store i32 96, i32* %radelay128, align 8, !dbg !11475
  br label %if.end129

if.end129:                                        ; preds = %if.else127, %if.then125
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then121
  br label %sw.epilog, !dbg !11476

sw.bb131:                                         ; preds = %if.end55
  %128 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11477
  %ops132 = getelementptr inbounds %struct.esp, %struct.esp* %128, i32 0, i32 2, !dbg !11477
  %129 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops132, align 8, !dbg !11477
  %esp_write8133 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %129, i32 0, i32 0, !dbg !11477
  %130 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8133, align 8, !dbg !11477
  %131 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11477
  %132 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11477
  %config2134 = getelementptr inbounds %struct.esp, %struct.esp* %132, i32 0, i32 32, !dbg !11477
  %133 = load i8, i8* %config2134, align 2, !dbg !11477
  call void %130(%struct.esp* %131, i8 zeroext %133, i64 11) #12, !dbg !11477
  %134 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11478
  %135 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11479
  %target135 = getelementptr inbounds %struct.esp, %struct.esp* %135, i32 0, i32 21, !dbg !11480
  %arrayidx136 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target135, i64 0, i64 0, !dbg !11479
  %esp_config3137 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx136, i32 0, i32 2, !dbg !11481
  %136 = load i8, i8* %esp_config3137, align 2, !dbg !11481
  %conv138 = zext i8 %136 to i32, !dbg !11479
  %or139 = or i32 %conv138, 1, !dbg !11482
  %conv140 = trunc i32 %or139 to i8, !dbg !11483
  call void @esp_set_all_config3(%struct.esp* %134, i8 zeroext %conv140) #12, !dbg !11484
  %137 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11485
  %target141 = getelementptr inbounds %struct.esp, %struct.esp* %137, i32 0, i32 21, !dbg !11486
  %arrayidx142 = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target141, i64 0, i64 0, !dbg !11485
  %esp_config3143 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %arrayidx142, i32 0, i32 2, !dbg !11487
  %138 = load i8, i8* %esp_config3143, align 2, !dbg !11487
  %139 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11488
  %prev_cfg3144 = getelementptr inbounds %struct.esp, %struct.esp* %139, i32 0, i32 18, !dbg !11489
  store i8 %138, i8* %prev_cfg3144, align 2, !dbg !11490
  %140 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11491
  %ops145 = getelementptr inbounds %struct.esp, %struct.esp* %140, i32 0, i32 2, !dbg !11491
  %141 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops145, align 8, !dbg !11491
  %esp_write8146 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %141, i32 0, i32 0, !dbg !11491
  %142 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8146, align 8, !dbg !11491
  %143 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11491
  %144 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11491
  %prev_cfg3147 = getelementptr inbounds %struct.esp, %struct.esp* %144, i32 0, i32 18, !dbg !11491
  %145 = load i8, i8* %prev_cfg3147, align 2, !dbg !11491
  call void %142(%struct.esp* %143, i8 zeroext %145, i64 12) #12, !dbg !11491
  %146 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11492
  %radelay148 = getelementptr inbounds %struct.esp, %struct.esp* %146, i32 0, i32 48, !dbg !11493
  store i32 32, i32* %radelay148, align 8, !dbg !11494
  br label %sw.epilog, !dbg !11495

sw.default:                                       ; preds = %if.end55
  br label %sw.epilog, !dbg !11496

sw.epilog:                                        ; preds = %sw.default, %sw.bb131, %if.end130, %sw.bb69, %sw.bb66, %sw.bb
  %147 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11497
  %ops149 = getelementptr inbounds %struct.esp, %struct.esp* %147, i32 0, i32 2, !dbg !11497
  %148 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops149, align 8, !dbg !11497
  %esp_write8150 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %148, i32 0, i32 0, !dbg !11497
  %149 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8150, align 8, !dbg !11497
  %150 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11497
  %151 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11497
  %cfact = getelementptr inbounds %struct.esp, %struct.esp* %151, i32 0, i32 40, !dbg !11497
  %152 = load i32, i32* %cfact, align 8, !dbg !11497
  %conv151 = trunc i32 %152 to i8, !dbg !11497
  call void %149(%struct.esp* %150, i8 zeroext %conv151, i64 9) #12, !dbg !11497
  %153 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11498
  %prev_stp = getelementptr inbounds %struct.esp, %struct.esp* %153, i32 0, i32 17, !dbg !11499
  store i8 0, i8* %prev_stp, align 1, !dbg !11500
  %154 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11501
  %ops152 = getelementptr inbounds %struct.esp, %struct.esp* %154, i32 0, i32 2, !dbg !11501
  %155 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops152, align 8, !dbg !11501
  %esp_write8153 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %155, i32 0, i32 0, !dbg !11501
  %156 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8153, align 8, !dbg !11501
  %157 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11501
  %158 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11501
  %prev_stp154 = getelementptr inbounds %struct.esp, %struct.esp* %158, i32 0, i32 17, !dbg !11501
  %159 = load i8, i8* %prev_stp154, align 1, !dbg !11501
  call void %156(%struct.esp* %157, i8 zeroext %159, i64 6) #12, !dbg !11501
  %160 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11502
  %prev_soff = getelementptr inbounds %struct.esp, %struct.esp* %160, i32 0, i32 16, !dbg !11503
  store i8 0, i8* %prev_soff, align 4, !dbg !11504
  %161 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11505
  %ops155 = getelementptr inbounds %struct.esp, %struct.esp* %161, i32 0, i32 2, !dbg !11505
  %162 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops155, align 8, !dbg !11505
  %esp_write8156 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %162, i32 0, i32 0, !dbg !11505
  %163 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8156, align 8, !dbg !11505
  %164 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11505
  %165 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11505
  %prev_soff157 = getelementptr inbounds %struct.esp, %struct.esp* %165, i32 0, i32 16, !dbg !11505
  %166 = load i8, i8* %prev_soff157, align 4, !dbg !11505
  call void %163(%struct.esp* %164, i8 zeroext %166, i64 7) #12, !dbg !11505
  %167 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11506
  %ops158 = getelementptr inbounds %struct.esp, %struct.esp* %167, i32 0, i32 2, !dbg !11506
  %168 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops158, align 8, !dbg !11506
  %esp_write8159 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %168, i32 0, i32 0, !dbg !11506
  %169 = load void (%struct.esp*, i8, i64)*, void (%struct.esp*, i8, i64)** %esp_write8159, align 8, !dbg !11506
  %170 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11506
  %171 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11506
  %neg_defp = getelementptr inbounds %struct.esp, %struct.esp* %171, i32 0, i32 44, !dbg !11506
  %172 = load i32, i32* %neg_defp, align 8, !dbg !11506
  %conv160 = trunc i32 %172 to i8, !dbg !11506
  call void %169(%struct.esp* %170, i8 zeroext %conv160, i64 5) #12, !dbg !11506
  %173 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11507
  %ops161 = getelementptr inbounds %struct.esp, %struct.esp* %173, i32 0, i32 2, !dbg !11507
  %174 = load %struct.esp_driver_ops*, %struct.esp_driver_ops** %ops161, align 8, !dbg !11507
  %esp_read8162 = getelementptr inbounds %struct.esp_driver_ops, %struct.esp_driver_ops* %174, i32 0, i32 1, !dbg !11507
  %175 = load i8 (%struct.esp*, i64)*, i8 (%struct.esp*, i64)** %esp_read8162, align 8, !dbg !11507
  %176 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11507
  %call163 = call zeroext i8 %175(%struct.esp* %176, i64 5) #12, !dbg !11507
  call void @__const_udelay(i64 429500) #12, !dbg !11508
  ret void, !dbg !11513
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #3

; Function Attrs: noredzone
declare dso_local i32 @scsi_add_host_with_dma(%struct.Scsi_Host*, %struct.device*, %struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esp_queuecommand_lck(%struct.scsi_cmnd* %cmd, void (%struct.scsi_cmnd*)* %done) #0 !dbg !11514 {
entry:
  %retval = alloca i32, align 4
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %done.addr = alloca void (%struct.scsi_cmnd*)*, align 8
  %dev = alloca %struct.scsi_device*, align 8
  %esp = alloca %struct.esp*, align 8
  %spriv = alloca %struct.esp_cmd_priv*, align 8
  %ent = alloca %struct.esp_cmd_entry*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11517, metadata !DIExpression()), !dbg !11518
  store void (%struct.scsi_cmnd*)* %done, void (%struct.scsi_cmnd*)** %done.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.scsi_cmnd*)** %done.addr, metadata !11519, metadata !DIExpression()), !dbg !11520
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev, metadata !11521, metadata !DIExpression()), !dbg !11522
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11523
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !11524
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !11524
  store %struct.scsi_device* %1, %struct.scsi_device** %dev, align 8, !dbg !11522
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !11525, metadata !DIExpression()), !dbg !11526
  %2 = load %struct.scsi_device*, %struct.scsi_device** %dev, align 8, !dbg !11527
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 0, !dbg !11528
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !11528
  %call = call i8* @shost_priv(%struct.Scsi_Host* %3) #12, !dbg !11529
  %4 = bitcast i8* %call to %struct.esp*, !dbg !11529
  store %struct.esp* %4, %struct.esp** %esp, align 8, !dbg !11526
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_priv** %spriv, metadata !11530, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ent, metadata !11532, metadata !DIExpression()), !dbg !11533
  %5 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !11534
  %call1 = call %struct.esp_cmd_entry* @esp_get_ent(%struct.esp* %5) #12, !dbg !11535
  store %struct.esp_cmd_entry* %call1, %struct.esp_cmd_entry** %ent, align 8, !dbg !11536
  %6 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !11537
  %tobool = icmp ne %struct.esp_cmd_entry* %6, null, !dbg !11537
  br i1 %tobool, label %if.end, label %if.then, !dbg !11539

if.then:                                          ; preds = %entry
  store i32 4181, i32* %retval, align 4, !dbg !11540
  br label %return, !dbg !11540

if.end:                                           ; preds = %entry
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11541
  %8 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !11542
  %cmd2 = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %8, i32 0, i32 1, !dbg !11543
  store %struct.scsi_cmnd* %7, %struct.scsi_cmnd** %cmd2, align 8, !dbg !11544
  %9 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !11545
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11546
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %10, i32 0, i32 21, !dbg !11547
  store void (%struct.scsi_cmnd*)* %9, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !11548
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11549
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 22, !dbg !11549
  %12 = bitcast %struct.scsi_pointer* %SCp to %struct.esp_cmd_priv*, !dbg !11549
  store %struct.esp_cmd_priv* %12, %struct.esp_cmd_priv** %spriv, align 8, !dbg !11550
  %13 = load %struct.esp_cmd_priv*, %struct.esp_cmd_priv** %spriv, align 8, !dbg !11551
  %num_sg = getelementptr inbounds %struct.esp_cmd_priv, %struct.esp_cmd_priv* %13, i32 0, i32 0, !dbg !11552
  store i32 0, i32* %num_sg, align 8, !dbg !11553
  %14 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ent, align 8, !dbg !11554
  %list = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %14, i32 0, i32 0, !dbg !11555
  %15 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !11556
  %queued_cmds = getelementptr inbounds %struct.esp, %struct.esp* %15, i32 0, i32 6, !dbg !11557
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %queued_cmds) #12, !dbg !11558
  %16 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !11559
  call void @esp_maybe_execute_command(%struct.esp* %16) #12, !dbg !11560
  store i32 0, i32* %retval, align 4, !dbg !11561
  br label %return, !dbg !11561

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !11562
  ret i32 %17, !dbg !11562
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @shost_priv(%struct.Scsi_Host* %shost) #0 !dbg !11563 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !11566, metadata !DIExpression()), !dbg !11567
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !11568
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 51, !dbg !11569
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !11568
  %1 = bitcast i64* %arraydecay to i8*, !dbg !11570
  ret i8* %1, !dbg !11571
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.esp_cmd_entry* @esp_get_ent(%struct.esp* %esp) #0 !dbg !11572 {
entry:
  %esp.addr = alloca %struct.esp*, align 8
  %head = alloca %struct.list_head*, align 8
  %ret = alloca %struct.esp_cmd_entry*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.esp_cmd_entry*, align 8
  store %struct.esp* %esp, %struct.esp** %esp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.esp** %esp.addr, metadata !11573, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.declare(metadata %struct.list_head** %head, metadata !11575, metadata !DIExpression()), !dbg !11576
  %0 = load %struct.esp*, %struct.esp** %esp.addr, align 8, !dbg !11577
  %esp_cmd_pool = getelementptr inbounds %struct.esp, %struct.esp* %0, i32 0, i32 20, !dbg !11578
  store %struct.list_head* %esp_cmd_pool, %struct.list_head** %head, align 8, !dbg !11576
  call void @llvm.dbg.declare(metadata %struct.esp_cmd_entry** %ret, metadata !11579, metadata !DIExpression()), !dbg !11580
  %1 = load %struct.list_head*, %struct.list_head** %head, align 8, !dbg !11581
  %call = call i32 @list_empty(%struct.list_head* %1) #12, !dbg !11583
  %tobool = icmp ne i32 %call, 0, !dbg !11583
  br i1 %tobool, label %if.then, label %if.else, !dbg !11584

if.then:                                          ; preds = %entry
  %call1 = call i8* @kzalloc(i64 96, i32 2592) #12, !dbg !11585
  %2 = bitcast i8* %call1 to %struct.esp_cmd_entry*, !dbg !11585
  store %struct.esp_cmd_entry* %2, %struct.esp_cmd_entry** %ret, align 8, !dbg !11587
  br label %if.end, !dbg !11588

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11589, metadata !DIExpression()), !dbg !11592
  %3 = load %struct.list_head*, %struct.list_head** %head, align 8, !dbg !11592
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11592
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11592
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !11592
  store i8* %5, i8** %__mptr, align 8, !dbg !11592
  br label %do.body, !dbg !11592

do.body:                                          ; preds = %if.else
  br label %do.end, !dbg !11593

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !11592
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !11592
  %7 = bitcast i8* %add.ptr to %struct.esp_cmd_entry*, !dbg !11592
  store %struct.esp_cmd_entry* %7, %struct.esp_cmd_entry** %tmp, align 8, !dbg !11593
  %8 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %tmp, align 8, !dbg !11592
  store %struct.esp_cmd_entry* %8, %struct.esp_cmd_entry** %ret, align 8, !dbg !11595
  %9 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ret, align 8, !dbg !11596
  %list = getelementptr inbounds %struct.esp_cmd_entry, %struct.esp_cmd_entry* %9, i32 0, i32 0, !dbg !11597
  call void @list_del(%struct.list_head* %list) #12, !dbg !11598
  %10 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ret, align 8, !dbg !11599
  %11 = bitcast %struct.esp_cmd_entry* %10 to i8*, !dbg !11600
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 96, i1 false), !dbg !11600
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then
  %12 = load %struct.esp_cmd_entry*, %struct.esp_cmd_entry** %ret, align 8, !dbg !11601
  ret %struct.esp_cmd_entry* %12, !dbg !11602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !11603 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !11604, metadata !DIExpression()), !dbg !11605
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11606, metadata !DIExpression()), !dbg !11607
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !11608
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11609
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11610
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !11610
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11611
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #12, !dbg !11612
  ret void, !dbg !11613
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !11614 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11619, metadata !DIExpression()), !dbg !11620
  br label %do.body, !dbg !11621

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11623

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11621
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !11621
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11621
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !11623
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !11621
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11625
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !11626
  %conv = zext i1 %cmp to i32, !dbg !11626
  ret i32 %conv, !dbg !11627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !11628 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11631, metadata !DIExpression()), !dbg !11635
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11641, metadata !DIExpression()), !dbg !11642
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11643, metadata !DIExpression()), !dbg !11644
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !11645, metadata !DIExpression()), !dbg !11646
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11647, metadata !DIExpression()), !dbg !11651
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11653, metadata !DIExpression()), !dbg !11657
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11659, metadata !DIExpression()), !dbg !11663
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !11668, metadata !DIExpression()), !dbg !11669
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11670, metadata !DIExpression()), !dbg !11671
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11672, metadata !DIExpression()), !dbg !11673
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11674, metadata !DIExpression()), !dbg !11675
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11676, metadata !DIExpression()), !dbg !11677
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11678, metadata !DIExpression()), !dbg !11679
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !11680, metadata !DIExpression()), !dbg !11681
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11682, metadata !DIExpression()), !dbg !11683
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11684, metadata !DIExpression()), !dbg !11685
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11686, metadata !DIExpression()), !dbg !11687
  %0 = load i64, i64* %size.addr, align 8, !dbg !11688
  %1 = load i32, i32* %flags.addr, align 4, !dbg !11689
  %or = or i32 %1, 256, !dbg !11690
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !11691
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #6, !dbg !11692
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !11693

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11694
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !11695
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11696

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !11697
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !11698
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11699
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !11700
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11677
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !11701
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11702
  %10 = load i32, i32* %order.i.i, align 4, !dbg !11703
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11704
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11705
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11706
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !11707
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11707
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11707
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11707
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !11707
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11708
  br label %kmalloc.exit, !dbg !11708

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !11709
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11710
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !11710
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11712

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11713
  br label %kmalloc_index.exit.i, !dbg !11713

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11714
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !11716
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11717

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11718
  br label %kmalloc_index.exit.i, !dbg !11718

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11719
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !11721
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11722

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11723
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !11724
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11725

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11726
  br label %kmalloc_index.exit.i, !dbg !11726

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11727
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !11729
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11730

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11731
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !11732
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11733

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11734
  br label %kmalloc_index.exit.i, !dbg !11734

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11735
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !11737
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11738

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11739
  br label %kmalloc_index.exit.i, !dbg !11739

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11740
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !11742
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11743

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11744
  br label %kmalloc_index.exit.i, !dbg !11744

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11745
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !11747
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11748

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11749
  br label %kmalloc_index.exit.i, !dbg !11749

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11750
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !11752
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11753

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11754
  br label %kmalloc_index.exit.i, !dbg !11754

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11755
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !11757
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11758

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11759
  br label %kmalloc_index.exit.i, !dbg !11759

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11760
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !11762
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11763

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11764
  br label %kmalloc_index.exit.i, !dbg !11764

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11765
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !11767
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11768

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11769
  br label %kmalloc_index.exit.i, !dbg !11769

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11770
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !11772
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11773

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11774
  br label %kmalloc_index.exit.i, !dbg !11774

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11775
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !11777
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11778

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11779
  br label %kmalloc_index.exit.i, !dbg !11779

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11780
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !11782
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11783

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11784
  br label %kmalloc_index.exit.i, !dbg !11784

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11785
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !11787
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11788

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11789
  br label %kmalloc_index.exit.i, !dbg !11789

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11790
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !11792
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11793

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11794
  br label %kmalloc_index.exit.i, !dbg !11794

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11795
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !11797
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11798

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11799
  br label %kmalloc_index.exit.i, !dbg !11799

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11800
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !11802
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11803

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11804
  br label %kmalloc_index.exit.i, !dbg !11804

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11805
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !11807
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11808

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11809
  br label %kmalloc_index.exit.i, !dbg !11809

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11810
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !11812
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11813

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11814
  br label %kmalloc_index.exit.i, !dbg !11814

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11815
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !11817
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11818

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11819
  br label %kmalloc_index.exit.i, !dbg !11819

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11820
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !11822
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11823

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11824
  br label %kmalloc_index.exit.i, !dbg !11824

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11825
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !11827
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11828

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11829
  br label %kmalloc_index.exit.i, !dbg !11829

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11830
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !11832
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11833

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11834
  br label %kmalloc_index.exit.i, !dbg !11834

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11835
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !11837
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11838

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11839
  br label %kmalloc_index.exit.i, !dbg !11839

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11840
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !11842
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11843

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11844
  br label %kmalloc_index.exit.i, !dbg !11844

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11845
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !11847
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11848

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11849
  br label %kmalloc_index.exit.i, !dbg !11849

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11850
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !11852
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11853

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11854
  br label %kmalloc_index.exit.i, !dbg !11854

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.69, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !11855, !srcloc !11858
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #6, !dbg !11859, !srcloc !11862
  unreachable, !dbg !11863

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !11864
  store i32 %45, i32* %index.i, align 4, !dbg !11865
  %46 = load i32, i32* %index.i, align 4, !dbg !11866
  %tobool.i = icmp ne i32 %46, 0, !dbg !11866
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11868

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11869
  br label %kmalloc.exit, !dbg !11869

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !11870
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11871
  %and.i.i = and i32 %48, 17, !dbg !11871
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11871
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11871
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11871
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11871
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11873

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11874
  br label %kmalloc_type.exit.i, !dbg !11874

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11875
  %and2.i.i = and i32 %49, 1, !dbg !11876
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11875
  %50 = zext i1 %tobool3.i.i to i64, !dbg !11875
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11875
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11877
  br label %kmalloc_type.exit.i, !dbg !11877

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !11878
  %idxprom.i = zext i32 %51 to i64, !dbg !11879
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11879
  %52 = load i32, i32* %index.i, align 4, !dbg !11880
  %idxprom6.i = zext i32 %52 to i64, !dbg !11879
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11879
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11879
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !11881
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !11882
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11883
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11884
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !11885
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11885
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11885
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11885
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !11885
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11646
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11886
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !11887
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11888
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11889
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !11890
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11891
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !11892
  store i8* %62, i8** %retval.i, align 8, !dbg !11893
  br label %kmalloc.exit, !dbg !11893

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !11894
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !11895
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !11896
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11896
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11896
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11896
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !11896
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11897
  br label %kmalloc.exit, !dbg !11897

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !11898
  ret i8* %65, !dbg !11899
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #9

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #10

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #11 !dbg !11900 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11904, metadata !DIExpression()), !dbg !11908
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11910, metadata !DIExpression()), !dbg !11911
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11912, metadata !DIExpression()), !dbg !11913
  %0 = load i64, i64* %size.addr, align 8, !dbg !11914
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11916
  br i1 %1, label %if.then, label %if.end447, !dbg !11917

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11918
  %tobool = icmp ne i64 %2, 0, !dbg !11918
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11921

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11922
  br label %return, !dbg !11922

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11923
  %cmp = icmp ult i64 %3, 4096, !dbg !11925
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11926

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11927
  br label %return, !dbg !11927

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub = sub i64 %4, 1, !dbg !11928
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11928
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11928

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub4 = sub i64 %6, 1, !dbg !11928
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11928
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11928

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub6 = sub i64 %8, 1, !dbg !11928
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11928
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11928

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11928

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub9 = sub i64 %9, 1, !dbg !11928
  %and = and i64 %sub9, -9223372036854775808, !dbg !11928
  %tobool10 = icmp ne i64 %and, 0, !dbg !11928
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11928

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11928

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub13 = sub i64 %10, 1, !dbg !11928
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11928
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11928
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11928

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11928

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub18 = sub i64 %11, 1, !dbg !11928
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11928
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11928
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11928

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11928

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub23 = sub i64 %12, 1, !dbg !11928
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11928
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11928
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11928

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11928

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub28 = sub i64 %13, 1, !dbg !11928
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11928
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11928
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11928

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11928

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub33 = sub i64 %14, 1, !dbg !11928
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11928
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11928
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11928

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11928

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub38 = sub i64 %15, 1, !dbg !11928
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11928
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11928
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11928

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11928

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub43 = sub i64 %16, 1, !dbg !11928
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11928
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11928
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11928

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11928

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub48 = sub i64 %17, 1, !dbg !11928
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11928
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11928
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11928

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11928

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub53 = sub i64 %18, 1, !dbg !11928
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11928
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11928
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11928

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11928

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub58 = sub i64 %19, 1, !dbg !11928
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11928
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11928
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11928

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11928

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub63 = sub i64 %20, 1, !dbg !11928
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11928
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11928
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11928

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11928

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub68 = sub i64 %21, 1, !dbg !11928
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11928
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11928
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11928

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11928

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub73 = sub i64 %22, 1, !dbg !11928
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11928
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11928
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11928

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11928

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub78 = sub i64 %23, 1, !dbg !11928
  %and79 = and i64 %sub78, 562949953421312, !dbg !11928
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11928
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11928

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11928

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub83 = sub i64 %24, 1, !dbg !11928
  %and84 = and i64 %sub83, 281474976710656, !dbg !11928
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11928
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11928

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11928

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub88 = sub i64 %25, 1, !dbg !11928
  %and89 = and i64 %sub88, 140737488355328, !dbg !11928
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11928
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11928

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11928

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub93 = sub i64 %26, 1, !dbg !11928
  %and94 = and i64 %sub93, 70368744177664, !dbg !11928
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11928
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11928

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11928

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub98 = sub i64 %27, 1, !dbg !11928
  %and99 = and i64 %sub98, 35184372088832, !dbg !11928
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11928
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11928

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11928

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub103 = sub i64 %28, 1, !dbg !11928
  %and104 = and i64 %sub103, 17592186044416, !dbg !11928
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11928
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11928

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11928

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub108 = sub i64 %29, 1, !dbg !11928
  %and109 = and i64 %sub108, 8796093022208, !dbg !11928
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11928
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11928

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11928

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub113 = sub i64 %30, 1, !dbg !11928
  %and114 = and i64 %sub113, 4398046511104, !dbg !11928
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11928
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11928

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11928

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub118 = sub i64 %31, 1, !dbg !11928
  %and119 = and i64 %sub118, 2199023255552, !dbg !11928
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11928
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11928

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11928

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub123 = sub i64 %32, 1, !dbg !11928
  %and124 = and i64 %sub123, 1099511627776, !dbg !11928
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11928
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11928

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11928

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub128 = sub i64 %33, 1, !dbg !11928
  %and129 = and i64 %sub128, 549755813888, !dbg !11928
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11928
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11928

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11928

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub133 = sub i64 %34, 1, !dbg !11928
  %and134 = and i64 %sub133, 274877906944, !dbg !11928
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11928
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11928

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11928

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub138 = sub i64 %35, 1, !dbg !11928
  %and139 = and i64 %sub138, 137438953472, !dbg !11928
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11928
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11928

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11928

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub143 = sub i64 %36, 1, !dbg !11928
  %and144 = and i64 %sub143, 68719476736, !dbg !11928
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11928
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11928

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11928

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub148 = sub i64 %37, 1, !dbg !11928
  %and149 = and i64 %sub148, 34359738368, !dbg !11928
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11928
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11928

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11928

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub153 = sub i64 %38, 1, !dbg !11928
  %and154 = and i64 %sub153, 17179869184, !dbg !11928
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11928
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11928

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11928

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub158 = sub i64 %39, 1, !dbg !11928
  %and159 = and i64 %sub158, 8589934592, !dbg !11928
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11928
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11928

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11928

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub163 = sub i64 %40, 1, !dbg !11928
  %and164 = and i64 %sub163, 4294967296, !dbg !11928
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11928
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11928

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11928

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub168 = sub i64 %41, 1, !dbg !11928
  %and169 = and i64 %sub168, 2147483648, !dbg !11928
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11928
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11928

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11928

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub173 = sub i64 %42, 1, !dbg !11928
  %and174 = and i64 %sub173, 1073741824, !dbg !11928
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11928
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11928

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11928

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub178 = sub i64 %43, 1, !dbg !11928
  %and179 = and i64 %sub178, 536870912, !dbg !11928
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11928
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11928

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11928

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub183 = sub i64 %44, 1, !dbg !11928
  %and184 = and i64 %sub183, 268435456, !dbg !11928
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11928
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11928

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11928

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub188 = sub i64 %45, 1, !dbg !11928
  %and189 = and i64 %sub188, 134217728, !dbg !11928
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11928
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11928

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11928

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub193 = sub i64 %46, 1, !dbg !11928
  %and194 = and i64 %sub193, 67108864, !dbg !11928
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11928
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11928

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11928

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub198 = sub i64 %47, 1, !dbg !11928
  %and199 = and i64 %sub198, 33554432, !dbg !11928
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11928
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11928

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11928

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub203 = sub i64 %48, 1, !dbg !11928
  %and204 = and i64 %sub203, 16777216, !dbg !11928
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11928
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11928

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11928

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub208 = sub i64 %49, 1, !dbg !11928
  %and209 = and i64 %sub208, 8388608, !dbg !11928
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11928
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11928

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11928

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub213 = sub i64 %50, 1, !dbg !11928
  %and214 = and i64 %sub213, 4194304, !dbg !11928
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11928
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11928

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11928

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub218 = sub i64 %51, 1, !dbg !11928
  %and219 = and i64 %sub218, 2097152, !dbg !11928
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11928
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11928

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11928

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub223 = sub i64 %52, 1, !dbg !11928
  %and224 = and i64 %sub223, 1048576, !dbg !11928
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11928
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11928

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11928

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub228 = sub i64 %53, 1, !dbg !11928
  %and229 = and i64 %sub228, 524288, !dbg !11928
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11928
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11928

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11928

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub233 = sub i64 %54, 1, !dbg !11928
  %and234 = and i64 %sub233, 262144, !dbg !11928
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11928
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11928

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11928

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub238 = sub i64 %55, 1, !dbg !11928
  %and239 = and i64 %sub238, 131072, !dbg !11928
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11928
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11928

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11928

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub243 = sub i64 %56, 1, !dbg !11928
  %and244 = and i64 %sub243, 65536, !dbg !11928
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11928
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11928

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11928

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub248 = sub i64 %57, 1, !dbg !11928
  %and249 = and i64 %sub248, 32768, !dbg !11928
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11928
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11928

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11928

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub253 = sub i64 %58, 1, !dbg !11928
  %and254 = and i64 %sub253, 16384, !dbg !11928
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11928
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11928

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11928

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub258 = sub i64 %59, 1, !dbg !11928
  %and259 = and i64 %sub258, 8192, !dbg !11928
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11928
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11928

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11928

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub263 = sub i64 %60, 1, !dbg !11928
  %and264 = and i64 %sub263, 4096, !dbg !11928
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11928
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11928

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11928

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub268 = sub i64 %61, 1, !dbg !11928
  %and269 = and i64 %sub268, 2048, !dbg !11928
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11928
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11928

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11928

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub273 = sub i64 %62, 1, !dbg !11928
  %and274 = and i64 %sub273, 1024, !dbg !11928
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11928
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11928

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11928

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub278 = sub i64 %63, 1, !dbg !11928
  %and279 = and i64 %sub278, 512, !dbg !11928
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11928
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11928

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11928

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub283 = sub i64 %64, 1, !dbg !11928
  %and284 = and i64 %sub283, 256, !dbg !11928
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11928
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11928

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11928

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub288 = sub i64 %65, 1, !dbg !11928
  %and289 = and i64 %sub288, 128, !dbg !11928
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11928
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11928

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11928

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub293 = sub i64 %66, 1, !dbg !11928
  %and294 = and i64 %sub293, 64, !dbg !11928
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11928
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11928

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11928

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub298 = sub i64 %67, 1, !dbg !11928
  %and299 = and i64 %sub298, 32, !dbg !11928
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11928
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11928

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11928

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub303 = sub i64 %68, 1, !dbg !11928
  %and304 = and i64 %sub303, 16, !dbg !11928
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11928
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11928

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11928

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub308 = sub i64 %69, 1, !dbg !11928
  %and309 = and i64 %sub308, 8, !dbg !11928
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11928
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11928

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11928

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub313 = sub i64 %70, 1, !dbg !11928
  %and314 = and i64 %sub313, 4, !dbg !11928
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11928
  %71 = zext i1 %tobool315 to i64, !dbg !11928
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11928
  br label %cond.end, !dbg !11928

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11928
  br label %cond.end317, !dbg !11928

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11928
  br label %cond.end319, !dbg !11928

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11928
  br label %cond.end321, !dbg !11928

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11928
  br label %cond.end323, !dbg !11928

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11928
  br label %cond.end325, !dbg !11928

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11928
  br label %cond.end327, !dbg !11928

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11928
  br label %cond.end329, !dbg !11928

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11928
  br label %cond.end331, !dbg !11928

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11928
  br label %cond.end333, !dbg !11928

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11928
  br label %cond.end335, !dbg !11928

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11928
  br label %cond.end337, !dbg !11928

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11928
  br label %cond.end339, !dbg !11928

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11928
  br label %cond.end341, !dbg !11928

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11928
  br label %cond.end343, !dbg !11928

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11928
  br label %cond.end345, !dbg !11928

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11928
  br label %cond.end347, !dbg !11928

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11928
  br label %cond.end349, !dbg !11928

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11928
  br label %cond.end351, !dbg !11928

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11928
  br label %cond.end353, !dbg !11928

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11928
  br label %cond.end355, !dbg !11928

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11928
  br label %cond.end357, !dbg !11928

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11928
  br label %cond.end359, !dbg !11928

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11928
  br label %cond.end361, !dbg !11928

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11928
  br label %cond.end363, !dbg !11928

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11928
  br label %cond.end365, !dbg !11928

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11928
  br label %cond.end367, !dbg !11928

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11928
  br label %cond.end369, !dbg !11928

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11928
  br label %cond.end371, !dbg !11928

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11928
  br label %cond.end373, !dbg !11928

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11928
  br label %cond.end375, !dbg !11928

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11928
  br label %cond.end377, !dbg !11928

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11928
  br label %cond.end379, !dbg !11928

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11928
  br label %cond.end381, !dbg !11928

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11928
  br label %cond.end383, !dbg !11928

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11928
  br label %cond.end385, !dbg !11928

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11928
  br label %cond.end387, !dbg !11928

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11928
  br label %cond.end389, !dbg !11928

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11928
  br label %cond.end391, !dbg !11928

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11928
  br label %cond.end393, !dbg !11928

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11928
  br label %cond.end395, !dbg !11928

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11928
  br label %cond.end397, !dbg !11928

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11928
  br label %cond.end399, !dbg !11928

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11928
  br label %cond.end401, !dbg !11928

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11928
  br label %cond.end403, !dbg !11928

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11928
  br label %cond.end405, !dbg !11928

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11928
  br label %cond.end407, !dbg !11928

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11928
  br label %cond.end409, !dbg !11928

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11928
  br label %cond.end411, !dbg !11928

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11928
  br label %cond.end413, !dbg !11928

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11928
  br label %cond.end415, !dbg !11928

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11928
  br label %cond.end417, !dbg !11928

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11928
  br label %cond.end419, !dbg !11928

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11928
  br label %cond.end421, !dbg !11928

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11928
  br label %cond.end423, !dbg !11928

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11928
  br label %cond.end425, !dbg !11928

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11928
  br label %cond.end427, !dbg !11928

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11928
  br label %cond.end429, !dbg !11928

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11928
  br label %cond.end431, !dbg !11928

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11928
  br label %cond.end433, !dbg !11928

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11928
  br label %cond.end435, !dbg !11928

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11928
  br label %cond.end437, !dbg !11928

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11928
  br label %cond.end440, !dbg !11928

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11928

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11928
  br label %cond.end444, !dbg !11928

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11928
  %sub443 = sub i64 %72, 1, !dbg !11928
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !11928
  br label %cond.end444, !dbg !11928

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11928
  %sub446 = sub i32 %cond445, 12, !dbg !11929
  %add = add i32 %sub446, 1, !dbg !11930
  store i32 %add, i32* %retval, align 4, !dbg !11931
  br label %return, !dbg !11931

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11932
  %dec = add i64 %73, -1, !dbg !11932
  store i64 %dec, i64* %size.addr, align 8, !dbg !11932
  %74 = load i64, i64* %size.addr, align 8, !dbg !11933
  %shr = lshr i64 %74, 12, !dbg !11933
  store i64 %shr, i64* %size.addr, align 8, !dbg !11933
  %75 = load i64, i64* %size.addr, align 8, !dbg !11934
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11911
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11935
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11936
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #5, !dbg !11935, !srcloc !11937
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11935
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11938
  %add.i = add i32 %79, 1, !dbg !11939
  store i32 %add.i, i32* %retval, align 4, !dbg !11940
  br label %return, !dbg !11940

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11941
  ret i32 %80, !dbg !11941
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #11 !dbg !11942 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11904, metadata !DIExpression()), !dbg !11946
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11910, metadata !DIExpression()), !dbg !11948
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11949, metadata !DIExpression()), !dbg !11950
  %0 = load i64, i64* %n.addr, align 8, !dbg !11951
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11948
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11952
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11953
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #5, !dbg !11952, !srcloc !11937
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11952
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11954
  %add.i = add i32 %4, 1, !dbg !11955
  %sub = sub i32 %add.i, 1, !dbg !11956
  ret i32 %sub, !dbg !11957
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !11958 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11962, metadata !DIExpression()), !dbg !11963
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11964, metadata !DIExpression()), !dbg !11965
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11966, metadata !DIExpression()), !dbg !11967
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11968, metadata !DIExpression()), !dbg !11969
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11970
  ret i8* %0, !dbg !11971
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_completion(%struct.completion* %x) #0 !dbg !5573 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !11972, metadata !DIExpression()), !dbg !11973
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !11974
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !11975
  store i32 0, i32* %done, align 8, !dbg !11976
  br label %do.body, !dbg !11977

do.body:                                          ; preds = %entry
  %1 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !11978
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %1, i32 0, i32 1, !dbg !11978
  call void @__init_swait_queue_head(%struct.swait_queue_head* %wait, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i64 0, i64 0), %struct.lock_class_key* @__init_completion.__key) #12, !dbg !11978
  br label %do.end, !dbg !11978

do.end:                                           ; preds = %do.body
  ret void, !dbg !11980
}

; Function Attrs: noredzone
declare dso_local i64 @wait_for_completion_timeout(%struct.completion*, i64) #3

; Function Attrs: noredzone
declare dso_local void @__init_swait_queue_head(%struct.swait_queue_head*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local i32 @scsi_change_queue_depth(%struct.scsi_device*, i32) #3

; Function Attrs: noredzone
declare dso_local void @spi_dv_device(%struct.scsi_device*) #3

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.Scsi_Host* @dev_to_shost(%struct.device* %dev) #0 !dbg !11981 {
entry:
  %retval = alloca %struct.Scsi_Host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.Scsi_Host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11984, metadata !DIExpression()), !dbg !11985
  br label %while.cond, !dbg !11986

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11987
  %call = call i32 @scsi_is_host_device(%struct.device* %0) #12, !dbg !11988
  %tobool = icmp ne i32 %call, 0, !dbg !11989
  %lnot = xor i1 %tobool, true, !dbg !11989
  br i1 %lnot, label %while.body, label %while.end, !dbg !11986

while.body:                                       ; preds = %while.cond
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11990
  %parent = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 1, !dbg !11993
  %2 = load %struct.device*, %struct.device** %parent, align 8, !dbg !11993
  %tobool1 = icmp ne %struct.device* %2, null, !dbg !11990
  br i1 %tobool1, label %if.end, label %if.then, !dbg !11994

if.then:                                          ; preds = %while.body
  store %struct.Scsi_Host* null, %struct.Scsi_Host** %retval, align 8, !dbg !11995
  br label %return, !dbg !11995

if.end:                                           ; preds = %while.body
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11996
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 1, !dbg !11997
  %4 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !11997
  store %struct.device* %4, %struct.device** %dev.addr, align 8, !dbg !11998
  br label %while.cond, !dbg !11986, !llvm.loop !11999

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12001, metadata !DIExpression()), !dbg !12003
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12003
  %6 = bitcast %struct.device* %5 to i8*, !dbg !12003
  store i8* %6, i8** %__mptr, align 8, !dbg !12003
  br label %do.body, !dbg !12003

do.body:                                          ; preds = %while.end
  br label %do.end, !dbg !12004

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !12003
  %add.ptr = getelementptr i8, i8* %7, i64 -624, !dbg !12003
  %8 = bitcast i8* %add.ptr to %struct.Scsi_Host*, !dbg !12003
  store %struct.Scsi_Host* %8, %struct.Scsi_Host** %tmp, align 8, !dbg !12004
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %tmp, align 8, !dbg !12003
  store %struct.Scsi_Host* %9, %struct.Scsi_Host** %retval, align 8, !dbg !12006
  br label %return, !dbg !12006

return:                                           ; preds = %do.end, %if.then
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %retval, align 8, !dbg !12007
  ret %struct.Scsi_Host* %10, !dbg !12007
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_is_host_device(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #3

; Function Attrs: noredzone
declare dso_local %struct.scsi_transport_template* @spi_attach_transport(%struct.spi_function_template*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_set_period(%struct.scsi_target* %target, i32 %period) #0 !dbg !12008 {
entry:
  %target.addr = alloca %struct.scsi_target*, align 8
  %period.addr = alloca i32, align 4
  %host = alloca %struct.Scsi_Host*, align 8
  %esp = alloca %struct.esp*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  store %struct.scsi_target* %target, %struct.scsi_target** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %target.addr, metadata !12009, metadata !DIExpression()), !dbg !12010
  store i32 %period, i32* %period.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %period.addr, metadata !12011, metadata !DIExpression()), !dbg !12012
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !12013, metadata !DIExpression()), !dbg !12014
  %0 = load %struct.scsi_target*, %struct.scsi_target** %target.addr, align 8, !dbg !12015
  %dev = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %0, i32 0, i32 3, !dbg !12016
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !12017
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12017
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !12018
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %host, align 8, !dbg !12014
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !12019, metadata !DIExpression()), !dbg !12020
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12021
  %call1 = call i8* @shost_priv(%struct.Scsi_Host* %2) #12, !dbg !12022
  %3 = bitcast i8* %call1 to %struct.esp*, !dbg !12022
  store %struct.esp* %3, %struct.esp** %esp, align 8, !dbg !12020
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !12023, metadata !DIExpression()), !dbg !12024
  %4 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !12025
  %target2 = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 21, !dbg !12026
  %5 = load %struct.scsi_target*, %struct.scsi_target** %target.addr, align 8, !dbg !12027
  %id = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %5, i32 0, i32 6, !dbg !12028
  %6 = load i32, i32* %id, align 8, !dbg !12028
  %idxprom = zext i32 %6 to i64, !dbg !12025
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target2, i64 0, i64 %idxprom, !dbg !12025
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !12024
  %7 = load i32, i32* %period.addr, align 4, !dbg !12029
  %conv = trunc i32 %7 to i8, !dbg !12029
  %8 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !12030
  %nego_goal_period = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %8, i32 0, i32 4, !dbg !12031
  store i8 %conv, i8* %nego_goal_period, align 4, !dbg !12032
  %9 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !12033
  %flags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %9, i32 0, i32 3, !dbg !12034
  %10 = load i8, i8* %flags, align 1, !dbg !12035
  %conv3 = zext i8 %10 to i32, !dbg !12035
  %or = or i32 %conv3, 64, !dbg !12035
  %conv4 = trunc i32 %or to i8, !dbg !12035
  store i8 %conv4, i8* %flags, align 1, !dbg !12035
  ret void, !dbg !12036
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_set_offset(%struct.scsi_target* %target, i32 %offset) #0 !dbg !12037 {
entry:
  %target.addr = alloca %struct.scsi_target*, align 8
  %offset.addr = alloca i32, align 4
  %host = alloca %struct.Scsi_Host*, align 8
  %esp = alloca %struct.esp*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  store %struct.scsi_target* %target, %struct.scsi_target** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %target.addr, metadata !12038, metadata !DIExpression()), !dbg !12039
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !12040, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !12042, metadata !DIExpression()), !dbg !12043
  %0 = load %struct.scsi_target*, %struct.scsi_target** %target.addr, align 8, !dbg !12044
  %dev = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %0, i32 0, i32 3, !dbg !12045
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !12046
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12046
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !12047
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %host, align 8, !dbg !12043
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !12048, metadata !DIExpression()), !dbg !12049
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12050
  %call1 = call i8* @shost_priv(%struct.Scsi_Host* %2) #12, !dbg !12051
  %3 = bitcast i8* %call1 to %struct.esp*, !dbg !12051
  store %struct.esp* %3, %struct.esp** %esp, align 8, !dbg !12049
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !12052, metadata !DIExpression()), !dbg !12053
  %4 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !12054
  %target2 = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 21, !dbg !12055
  %5 = load %struct.scsi_target*, %struct.scsi_target** %target.addr, align 8, !dbg !12056
  %id = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %5, i32 0, i32 6, !dbg !12057
  %6 = load i32, i32* %id, align 8, !dbg !12057
  %idxprom = zext i32 %6 to i64, !dbg !12054
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target2, i64 0, i64 %idxprom, !dbg !12054
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !12053
  %7 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !12058
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %7, i32 0, i32 37, !dbg !12060
  %8 = load i32, i32* %flags, align 8, !dbg !12060
  %and = and i32 %8, 32, !dbg !12061
  %tobool = icmp ne i32 %and, 0, !dbg !12061
  br i1 %tobool, label %if.then, label %if.else, !dbg !12062

if.then:                                          ; preds = %entry
  %9 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !12063
  %nego_goal_offset = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %9, i32 0, i32 5, !dbg !12064
  store i8 0, i8* %nego_goal_offset, align 1, !dbg !12065
  br label %if.end, !dbg !12063

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %offset.addr, align 4, !dbg !12066
  %conv = trunc i32 %10 to i8, !dbg !12066
  %11 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !12067
  %nego_goal_offset3 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %11, i32 0, i32 5, !dbg !12068
  store i8 %conv, i8* %nego_goal_offset3, align 1, !dbg !12069
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !12070
  %flags4 = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %12, i32 0, i32 3, !dbg !12071
  %13 = load i8, i8* %flags4, align 1, !dbg !12072
  %conv5 = zext i8 %13 to i32, !dbg !12072
  %or = or i32 %conv5, 64, !dbg !12072
  %conv6 = trunc i32 %or to i8, !dbg !12072
  store i8 %conv6, i8* %flags4, align 1, !dbg !12072
  ret void, !dbg !12073
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_set_width(%struct.scsi_target* %target, i32 %width) #0 !dbg !12074 {
entry:
  %target.addr = alloca %struct.scsi_target*, align 8
  %width.addr = alloca i32, align 4
  %host = alloca %struct.Scsi_Host*, align 8
  %esp = alloca %struct.esp*, align 8
  %tp = alloca %struct.esp_target_data*, align 8
  store %struct.scsi_target* %target, %struct.scsi_target** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %target.addr, metadata !12075, metadata !DIExpression()), !dbg !12076
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !12077, metadata !DIExpression()), !dbg !12078
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !12079, metadata !DIExpression()), !dbg !12080
  %0 = load %struct.scsi_target*, %struct.scsi_target** %target.addr, align 8, !dbg !12081
  %dev = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %0, i32 0, i32 3, !dbg !12082
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !12083
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !12083
  %call = call %struct.Scsi_Host* @dev_to_shost(%struct.device* %1) #12, !dbg !12084
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %host, align 8, !dbg !12080
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !12085, metadata !DIExpression()), !dbg !12086
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12087
  %call1 = call i8* @shost_priv(%struct.Scsi_Host* %2) #12, !dbg !12088
  %3 = bitcast i8* %call1 to %struct.esp*, !dbg !12088
  store %struct.esp* %3, %struct.esp** %esp, align 8, !dbg !12086
  call void @llvm.dbg.declare(metadata %struct.esp_target_data** %tp, metadata !12089, metadata !DIExpression()), !dbg !12090
  %4 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !12091
  %target2 = getelementptr inbounds %struct.esp, %struct.esp* %4, i32 0, i32 21, !dbg !12092
  %5 = load %struct.scsi_target*, %struct.scsi_target** %target.addr, align 8, !dbg !12093
  %id = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %5, i32 0, i32 6, !dbg !12094
  %6 = load i32, i32* %id, align 8, !dbg !12094
  %idxprom = zext i32 %6 to i64, !dbg !12091
  %arrayidx = getelementptr [16 x %struct.esp_target_data], [16 x %struct.esp_target_data]* %target2, i64 0, i64 %idxprom, !dbg !12091
  store %struct.esp_target_data* %arrayidx, %struct.esp_target_data** %tp, align 8, !dbg !12090
  %7 = load i32, i32* %width.addr, align 4, !dbg !12095
  %tobool = icmp ne i32 %7, 0, !dbg !12095
  %8 = zext i1 %tobool to i64, !dbg !12095
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !12095
  %conv = trunc i32 %cond to i8, !dbg !12096
  %9 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !12097
  %nego_goal_width = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %9, i32 0, i32 6, !dbg !12098
  store i8 %conv, i8* %nego_goal_width, align 2, !dbg !12099
  %10 = load %struct.esp_target_data*, %struct.esp_target_data** %tp, align 8, !dbg !12100
  %flags = getelementptr inbounds %struct.esp_target_data, %struct.esp_target_data* %10, i32 0, i32 3, !dbg !12101
  %11 = load i8, i8* %flags, align 1, !dbg !12102
  %conv3 = zext i8 %11 to i32, !dbg !12102
  %or = or i32 %conv3, 64, !dbg !12102
  %conv4 = trunc i32 %or to i8, !dbg !12102
  store i8 %conv4, i8* %flags, align 1, !dbg !12102
  ret void, !dbg !12103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esp_get_signalling(%struct.Scsi_Host* %host) #0 !dbg !12104 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %esp = alloca %struct.esp*, align 8
  %type = alloca i32, align 4
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !12105, metadata !DIExpression()), !dbg !12106
  call void @llvm.dbg.declare(metadata %struct.esp** %esp, metadata !12107, metadata !DIExpression()), !dbg !12108
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !12109
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #12, !dbg !12110
  %1 = bitcast i8* %call to %struct.esp*, !dbg !12110
  store %struct.esp* %1, %struct.esp** %esp, align 8, !dbg !12108
  call void @llvm.dbg.declare(metadata i32* %type, metadata !12111, metadata !DIExpression()), !dbg !12112
  %2 = load %struct.esp*, %struct.esp** %esp, align 8, !dbg !12113
  %flags = getelementptr inbounds %struct.esp, %struct.esp* %2, i32 0, i32 37, !dbg !12115
  %3 = load i32, i32* %flags, align 8, !dbg !12115
  %and = and i32 %3, 1, !dbg !12116
  %tobool = icmp ne i32 %and, 0, !dbg !12116
  br i1 %tobool, label %if.then, label %if.else, !dbg !12117

if.then:                                          ; preds = %entry
  store i32 4, i32* %type, align 4, !dbg !12118
  br label %if.end, !dbg !12119

if.else:                                          ; preds = %entry
  store i32 2, i32* %type, align 4, !dbg !12120
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %type, align 4, !dbg !12121
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !12122
  %shost_data = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 49, !dbg !12122
  %6 = load i8*, i8** %shost_data, align 8, !dbg !12122
  %7 = bitcast i8* %6 to %struct.spi_host_attrs*, !dbg !12122
  %signalling = getelementptr inbounds %struct.spi_host_attrs, %struct.spi_host_attrs* %7, i32 0, i32 0, !dbg !12122
  store i32 %4, i32* %signalling, align 4, !dbg !12123
  ret void, !dbg !12124
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { nounwind readnone willreturn }
attributes #10 = { nounwind willreturn }
attributes #11 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5634}
!llvm.module.flags = !{!5635, !5636, !5637, !5638}
!llvm.ident = !{!5639}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "esp_debug", scope: !2, file: !3, line: 41, type: !296, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !200, globals: !5283, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/scsi/esp_scsi.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !20, !28, !34, !40, !46, !53, !61, !67, !73, !80, !84, !96, !101, !108, !115, !121, !127, !135, !146, !153, !163, !175, !181, !186, !193}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !12, line: 296, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17, !18, !19}
!14 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !21, line: 9, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!27 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !29, line: 54, baseType: !7, size: 32, elements: !30)
!29 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!30 = !{!31, !32, !33}
!31 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!32 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !35, line: 26, baseType: !7, size: 32, elements: !36)
!35 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!36 = !{!37, !38, !39}
!37 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!38 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !41, line: 44, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44, !45}
!43 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !47, line: 343, baseType: !7, size: 32, elements: !48)
!47 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!48 = !{!49, !50, !51, !52}
!49 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!50 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!52 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !54, line: 524, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58, !59, !60}
!56 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!60 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !54, line: 502, baseType: !7, size: 32, elements: !62)
!62 = !{!63, !64, !65, !66}
!63 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !68, line: 118, baseType: !7, size: 32, elements: !69)
!68 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!69 = !{!70, !71, !72}
!70 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !74, line: 19, baseType: !7, size: 32, elements: !75)
!74 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !68, line: 293, baseType: !7, size: 32, elements: !81)
!81 = !{!82, !83}
!82 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !85, line: 49, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!86 = !{!87, !88, !89, !90, !91, !92, !93, !94, !95}
!87 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!91 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!92 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!93 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!94 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!95 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !68, line: 315, baseType: !7, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !102, line: 15, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106, !107}
!104 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !109, line: 59, baseType: !7, size: 32, elements: !110)
!109 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!110 = !{!111, !112, !113, !114}
!111 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!114 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !116, line: 546, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!117 = !{!118, !119, !120}
!118 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !122, line: 16, baseType: !7, size: 32, elements: !123)
!122 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!123 = !{!124, !125, !126}
!124 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!126 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !128, line: 276, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133, !134}
!130 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !128, line: 36, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145}
!137 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!140 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!142 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!143 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!144 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!145 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !147, line: 5, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150, !151, !152}
!149 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !154, line: 514, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!155 = !{!156, !157, !158, !159, !160, !161, !162}
!156 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!162 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "esp_rev", file: !164, line: 268, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "drivers/scsi/esp_scsi.h", directory: "/home/lizy2001/genbc/linux")
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173, !174}
!166 = !DIEnumerator(name: "ESP100", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "ESP100A", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "ESP236", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "FAS236", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "PCSCSI", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "FSC", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "FAS100A", value: 6, isUnsigned: true)
!173 = !DIEnumerator(name: "FAST", value: 7, isUnsigned: true)
!174 = !DIEnumerator(name: "FASHME", value: 8, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !176, line: 11, baseType: !7, size: 32, elements: !177)
!176 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!177 = !{!178, !179, !180}
!178 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !182, line: 10, baseType: !7, size: 32, elements: !183)
!182 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!183 = !{!184, !185}
!184 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!186 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !187, line: 305, baseType: !7, size: 32, elements: !188)
!187 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!188 = !{!189, !190, !191, !192}
!189 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!190 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!191 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!192 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!193 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "spi_signal_type", file: !194, line: 50, baseType: !7, size: 32, elements: !195)
!194 = !DIFile(filename: "./include/scsi/scsi_transport_spi.h", directory: "/home/lizy2001/genbc/linux")
!195 = !{!196, !197, !198, !199}
!196 = !DIEnumerator(name: "SPI_SIGNAL_UNKNOWN", value: 1, isUnsigned: true)
!197 = !DIEnumerator(name: "SPI_SIGNAL_SE", value: 2, isUnsigned: true)
!198 = !DIEnumerator(name: "SPI_SIGNAL_LVD", value: 3, isUnsigned: true)
!199 = !DIEnumerator(name: "SPI_SIGNAL_HVD", value: 4, isUnsigned: true)
!200 = !{!201, !202, !203, !5236, !5238, !5268, !3884, !568, !5269, !4644, !344, !7, !544, !5277, !242, !5279}
!201 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "esp_cmd_entry", file: !164, line: 280, size: 768, elements: !205)
!205 = !{!206, !213, !5222, !5223, !5224, !5225, !5226, !5227, !5229, !5230, !5231, !5232, !5233, !5234, !5235}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !204, file: !164, line: 281, baseType: !207, size: 128)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !208, line: 178, size: 128, elements: !209)
!208 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!209 = !{!210, !212}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !207, file: !208, line: 179, baseType: !211, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !207, file: !208, line: 179, baseType: !211, size: 64, offset: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !204, file: !164, line: 283, baseType: !214, size: 64, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !216, line: 68, size: 3136, elements: !217)
!216 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!217 = !{!218, !237, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5192, !5194, !5195, !5196, !5197, !5198, !5202, !5216, !5217, !5218, !5219, !5220, !5221}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !215, file: !216, line: 69, baseType: !219, size: 448)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !220, line: 9, size: 448, elements: !221)
!220 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!221 = !{!222, !227, !229, !231, !233, !234, !235, !236}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !219, file: !220, line: 10, baseType: !223, size: 128)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 128, elements: !225)
!224 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!225 = !{!226}
!226 = !DISubrange(count: 16)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !219, file: !220, line: 11, baseType: !228, size: 64, offset: 128)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !219, file: !220, line: 12, baseType: !230, size: 16, offset: 192)
!230 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !219, file: !220, line: 13, baseType: !232, size: 32, offset: 224)
!232 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !219, file: !220, line: 14, baseType: !7, size: 32, offset: 256)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !219, file: !220, line: 15, baseType: !7, size: 32, offset: 288)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !219, file: !220, line: 16, baseType: !232, size: 32, offset: 320)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !219, file: !220, line: 17, baseType: !202, size: 64, offset: 384)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !215, file: !216, line: 70, baseType: !238, size: 64, offset: 448)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !128, line: 101, size: 15232, align: 64, elements: !240)
!240 = !{!241, !5039, !5040, !5041, !5042, !5043, !5044, !5045, !5046, !5047, !5048, !5049, !5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058, !5059, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5077, !5078, !5079, !5080, !5081, !5082, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5148, !5149, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5159}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !239, file: !128, line: 102, baseType: !242, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !154, line: 524, size: 16256, elements: !244)
!244 = !{!245, !246, !247, !248, !264, !266, !284, !285, !4825, !4826, !4827, !4985, !4988, !4989, !4990, !4991, !4992, !4993, !4994, !4995, !4996, !4997, !4998, !4999, !5000, !5001, !5002, !5003, !5004, !5005, !5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5017, !5018, !5019, !5020, !5021, !5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !243, file: !154, line: 533, baseType: !207, size: 128)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !243, file: !154, line: 534, baseType: !207, size: 128, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !243, file: !154, line: 536, baseType: !207, size: 128, offset: 256)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !243, file: !154, line: 538, baseType: !249, offset: 384)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !250, line: 83, baseType: !251)
!250 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !250, line: 71, elements: !252)
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, scope: !251, file: !250, line: 72, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !251, file: !250, line: 72, elements: !255)
!255 = !{!256}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !254, file: !250, line: 73, baseType: !257)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !250, line: 20, elements: !258)
!258 = !{!259}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !257, file: !250, line: 21, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !261, line: 25, baseType: !262)
!261 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 25, elements: !263)
!263 = !{}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !243, file: !154, line: 539, baseType: !265, size: 64, offset: 384)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !243, file: !154, line: 541, baseType: !267, size: 192, offset: 448)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !268, line: 53, size: 192, elements: !269)
!268 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!269 = !{!270, !282, !283}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !267, file: !268, line: 54, baseType: !271, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !272, line: 13, baseType: !273)
!272 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !208, line: 175, baseType: !274)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !208, line: 173, size: 64, elements: !275)
!275 = !{!276}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !274, file: !208, line: 174, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !278, line: 22, baseType: !279)
!278 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !280, line: 30, baseType: !281)
!280 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!281 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !267, file: !268, line: 55, baseType: !249, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !267, file: !268, line: 59, baseType: !207, size: 128, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !243, file: !154, line: 543, baseType: !207, size: 128, offset: 640)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !243, file: !154, line: 544, baseType: !286, size: 64, offset: 768)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !288, line: 640, size: 48640, elements: !289)
!288 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!289 = !{!290, !298, !301, !302, !312, !313, !314, !315, !316, !317, !318, !319, !323, !351, !362, !461, !462, !463, !474, !475, !477, !478, !4159, !4160, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4237, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4252, !4253, !4254, !4256, !4257, !4258, !4259, !4260, !4261, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4285, !4290, !4291, !4292, !4293, !4294, !4296, !4299, !4302, !4305, !4308, !4311, !4412, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4458, !4459, !4460, !4461, !4462, !4467, !4468, !4469, !4472, !4473, !4475, !4484, !4487, !4488, !4489, !4492, !4493, !4572, !4573, !4576, !4577, !4580, !4581, !4582, !4586, !4587, !4588, !4601, !4602, !4603, !4613, !4618, !4619, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !287, file: !288, line: 646, baseType: !291, size: 128)
!291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !292, line: 56, size: 128, elements: !293)
!292 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!293 = !{!294, !295}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !291, file: !292, line: 57, baseType: !201, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !291, file: !292, line: 58, baseType: !296, size: 32, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !278, line: 21, baseType: !297)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !280, line: 27, baseType: !7)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !287, file: !288, line: 649, baseType: !299, size: 64, offset: 128)
!299 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !300)
!300 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !287, file: !288, line: 657, baseType: !202, size: 64, offset: 192)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !287, file: !288, line: 658, baseType: !303, size: 32, offset: 256)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !304, line: 113, baseType: !305)
!304 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !304, line: 111, size: 32, elements: !306)
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !305, file: !304, line: 112, baseType: !308, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !208, line: 168, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !208, line: 166, size: 32, elements: !310)
!310 = !{!311}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !309, file: !208, line: 167, baseType: !232, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !287, file: !288, line: 660, baseType: !7, size: 32, offset: 288)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !287, file: !288, line: 661, baseType: !7, size: 32, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !287, file: !288, line: 684, baseType: !232, size: 32, offset: 352)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !287, file: !288, line: 686, baseType: !232, size: 32, offset: 384)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !287, file: !288, line: 687, baseType: !232, size: 32, offset: 416)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !287, file: !288, line: 688, baseType: !232, size: 32, offset: 448)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !287, file: !288, line: 689, baseType: !7, size: 32, offset: 480)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !287, file: !288, line: 691, baseType: !320, size: 64, offset: 512)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !322)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !288, line: 691, flags: DIFlagFwdDecl)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !287, file: !288, line: 692, baseType: !324, size: 832, offset: 576)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !288, line: 451, size: 832, elements: !325)
!325 = !{!326, !331, !339, !340, !341, !345, !346, !347, !348, !349}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !324, file: !288, line: 453, baseType: !327, size: 128)
!327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !288, line: 325, size: 128, elements: !328)
!328 = !{!329, !330}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !327, file: !288, line: 326, baseType: !201, size: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !327, file: !288, line: 327, baseType: !296, size: 32, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !324, file: !288, line: 454, baseType: !332, size: 192, align: 64, offset: 128)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !333, line: 24, size: 192, align: 64, elements: !334)
!333 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!334 = !{!335, !336, !338}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !332, file: !333, line: 25, baseType: !201, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !332, file: !333, line: 26, baseType: !337, size: 64, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !332, file: !333, line: 27, baseType: !337, size: 64, offset: 128)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !324, file: !288, line: 455, baseType: !207, size: 128, offset: 320)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !324, file: !288, line: 456, baseType: !7, size: 32, offset: 448)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !324, file: !288, line: 458, baseType: !342, size: 64, offset: 512)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !278, line: 23, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !280, line: 31, baseType: !344)
!344 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !324, file: !288, line: 459, baseType: !342, size: 64, offset: 576)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !324, file: !288, line: 460, baseType: !342, size: 64, offset: 640)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !324, file: !288, line: 461, baseType: !342, size: 64, offset: 704)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !324, file: !288, line: 463, baseType: !342, size: 64, offset: 768)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !324, file: !288, line: 465, baseType: !350, offset: 832)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !288, line: 415, elements: !263)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !287, file: !288, line: 693, baseType: !352, size: 384, offset: 1408)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !288, line: 489, size: 384, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !360}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !352, file: !288, line: 490, baseType: !207, size: 128)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !352, file: !288, line: 491, baseType: !201, size: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !352, file: !288, line: 492, baseType: !201, size: 64, offset: 192)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !352, file: !288, line: 493, baseType: !7, size: 32, offset: 256)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !352, file: !288, line: 494, baseType: !230, size: 16, offset: 288)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !352, file: !288, line: 495, baseType: !230, size: 16, offset: 304)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !352, file: !288, line: 497, baseType: !361, size: 64, offset: 320)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !287, file: !288, line: 697, baseType: !363, size: 1792, offset: 1792)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !288, line: 507, size: 1792, elements: !364)
!364 = !{!365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !458, !459}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !363, file: !288, line: 508, baseType: !332, size: 192, align: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !363, file: !288, line: 515, baseType: !342, size: 64, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !363, file: !288, line: 516, baseType: !342, size: 64, offset: 256)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !363, file: !288, line: 517, baseType: !342, size: 64, offset: 320)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !363, file: !288, line: 518, baseType: !342, size: 64, offset: 384)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !363, file: !288, line: 519, baseType: !342, size: 64, offset: 448)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !363, file: !288, line: 526, baseType: !277, size: 64, offset: 512)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !363, file: !288, line: 527, baseType: !342, size: 64, offset: 576)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !363, file: !288, line: 528, baseType: !7, size: 32, offset: 640)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !363, file: !288, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !363, file: !288, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !363, file: !288, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !363, file: !288, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !363, file: !288, line: 563, baseType: !379, size: 512, offset: 704)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !380)
!380 = !{!381, !389, !390, !395, !452, !455, !456, !457}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !379, file: !6, line: 119, baseType: !382, size: 256)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !383, line: 9, size: 256, elements: !384)
!383 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!384 = !{!385, !386}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !382, file: !383, line: 10, baseType: !332, size: 192, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !382, file: !383, line: 11, baseType: !387, size: 64, offset: 192)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !388, line: 29, baseType: !277)
!388 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!389 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !379, file: !6, line: 120, baseType: !387, size: 64, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !379, file: !6, line: 121, baseType: !391, size: 64, offset: 320)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DISubroutineType(types: !393)
!393 = !{!5, !394}
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !379, file: !6, line: 122, baseType: !396, size: 64, offset: 384)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !398)
!398 = !{!399, !420, !421, !425, !435, !436, !447, !451}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !397, file: !6, line: 160, baseType: !400, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !402)
!402 = !{!403, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !401, file: !6, line: 215, baseType: !404)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !250, line: 29, baseType: !257)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !401, file: !6, line: 216, baseType: !7, size: 32)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !401, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !401, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !401, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !401, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !401, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !401, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !401, file: !6, line: 233, baseType: !387, size: 64, offset: 128)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !401, file: !6, line: 234, baseType: !394, size: 64, offset: 192)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !401, file: !6, line: 235, baseType: !387, size: 64, offset: 256)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !401, file: !6, line: 236, baseType: !394, size: 64, offset: 320)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !401, file: !6, line: 237, baseType: !417, size: 4096, offset: 512)
!417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 4096, elements: !418)
!418 = !{!419}
!419 = !DISubrange(count: 8)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !397, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !397, file: !6, line: 162, baseType: !422, size: 32, offset: 96)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !208, line: 27, baseType: !423)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !424, line: 96, baseType: !232)
!424 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!425 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !397, file: !6, line: 163, baseType: !426, size: 32, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !427, line: 276, baseType: !428)
!427 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !427, line: 276, size: 32, elements: !429)
!429 = !{!430}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !428, file: !427, line: 276, baseType: !431, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !427, line: 70, baseType: !432)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !427, line: 65, size: 32, elements: !433)
!433 = !{!434}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !432, file: !427, line: 66, baseType: !7, size: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !397, file: !6, line: 164, baseType: !394, size: 64, offset: 192)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !397, file: !6, line: 165, baseType: !437, size: 128, offset: 256)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !383, line: 14, size: 128, elements: !438)
!438 = !{!439}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !437, file: !383, line: 15, baseType: !440, size: 128)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !333, line: 125, size: 128, elements: !441)
!441 = !{!442, !446}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !440, file: !333, line: 126, baseType: !443, size: 64)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !333, line: 31, size: 64, elements: !444)
!444 = !{!445}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !443, file: !333, line: 32, baseType: !337, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !440, file: !333, line: 127, baseType: !337, size: 64, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !397, file: !6, line: 166, baseType: !448, size: 64, offset: 384)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DISubroutineType(types: !450)
!450 = !{!387}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !397, file: !6, line: 167, baseType: !387, size: 64, offset: 448)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !379, file: !6, line: 123, baseType: !453, size: 8, offset: 448)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !278, line: 17, baseType: !454)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !280, line: 21, baseType: !224)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !379, file: !6, line: 124, baseType: !453, size: 8, offset: 456)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !379, file: !6, line: 125, baseType: !453, size: 8, offset: 464)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !379, file: !6, line: 126, baseType: !453, size: 8, offset: 472)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !363, file: !288, line: 572, baseType: !379, size: 512, offset: 1216)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !363, file: !288, line: 580, baseType: !460, size: 64, offset: 1728)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !287, file: !288, line: 721, baseType: !7, size: 32, offset: 3584)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !287, file: !288, line: 722, baseType: !232, size: 32, offset: 3616)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !287, file: !288, line: 723, baseType: !464, size: 64, offset: 3648)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !467, line: 17, baseType: !468)
!467 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !467, line: 17, size: 64, elements: !469)
!469 = !{!470}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !468, file: !467, line: 17, baseType: !471, size: 64)
!471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 64, elements: !472)
!472 = !{!473}
!473 = !DISubrange(count: 1)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !287, file: !288, line: 724, baseType: !466, size: 64, offset: 3712)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !287, file: !288, line: 749, baseType: !476, offset: 3776)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !288, line: 290, elements: !263)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !287, file: !288, line: 751, baseType: !207, size: 128, offset: 3776)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !287, file: !288, line: 757, baseType: !479, size: 64, offset: 3904)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !481, line: 388, size: 7296, elements: !482)
!481 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!482 = !{!483, !4157}
!483 = !DIDerivedType(tag: DW_TAG_member, scope: !480, file: !481, line: 389, baseType: !484, size: 7296)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !480, file: !481, line: 389, size: 7296, elements: !485)
!485 = !{!486, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4080, !4086, !4089, !4128, !4129, !4141, !4142, !4145, !4146, !4147, !4150, !4151, !4152, !4155, !4156}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !484, file: !481, line: 390, baseType: !487, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !481, line: 305, size: 1472, elements: !489)
!489 = !{!490, !491, !492, !493, !494, !495, !496, !497, !505, !506, !511, !512, !515, !4026, !4027, !4028, !4029, !4030}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !488, file: !481, line: 308, baseType: !201, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !488, file: !481, line: 309, baseType: !201, size: 64, offset: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !488, file: !481, line: 313, baseType: !487, size: 64, offset: 128)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !488, file: !481, line: 313, baseType: !487, size: 64, offset: 192)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !488, file: !481, line: 315, baseType: !332, size: 192, align: 64, offset: 256)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !488, file: !481, line: 323, baseType: !201, size: 64, offset: 448)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !488, file: !481, line: 327, baseType: !479, size: 64, offset: 512)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !488, file: !481, line: 333, baseType: !498, size: 64, offset: 576)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !499, line: 284, baseType: !500)
!499 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !499, line: 284, size: 64, elements: !501)
!501 = !{!502}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !500, file: !499, line: 284, baseType: !503, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !504, line: 19, baseType: !201)
!504 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!505 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !488, file: !481, line: 334, baseType: !201, size: 64, offset: 640)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !488, file: !481, line: 343, baseType: !507, size: 256, offset: 704)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !488, file: !481, line: 340, size: 256, elements: !508)
!508 = !{!509, !510}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !507, file: !481, line: 341, baseType: !332, size: 192, align: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !507, file: !481, line: 342, baseType: !201, size: 64, offset: 192)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !488, file: !481, line: 351, baseType: !207, size: 128, offset: 960)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !488, file: !481, line: 353, baseType: !513, size: 64, offset: 1088)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !481, line: 353, flags: DIFlagFwdDecl)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !488, file: !481, line: 356, baseType: !516, size: 64, offset: 1152)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !518)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !116, line: 557, size: 832, elements: !519)
!519 = !{!520, !524, !525, !529, !533, !4000, !4004, !4008, !4012, !4013, !4014, !4018, !4022}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !518, file: !116, line: 558, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DISubroutineType(types: !523)
!523 = !{null, !487}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !518, file: !116, line: 559, baseType: !521, size: 64, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !518, file: !116, line: 560, baseType: !526, size: 64, offset: 128)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DISubroutineType(types: !528)
!528 = !{!232, !487, !201}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !518, file: !116, line: 561, baseType: !530, size: 64, offset: 192)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DISubroutineType(types: !532)
!532 = !{!232, !487}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !518, file: !116, line: 562, baseType: !534, size: 64, offset: 256)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DISubroutineType(types: !536)
!536 = !{!537, !538}
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !481, line: 682, baseType: !7)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !116, line: 508, size: 768, elements: !540)
!540 = !{!541, !542, !543, !545, !546, !547, !554, !561, !567, !3995, !3996, !3998, !3999}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !539, file: !116, line: 509, baseType: !487, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !539, file: !116, line: 510, baseType: !7, size: 32, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !539, file: !116, line: 511, baseType: !544, size: 32, offset: 96)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !208, line: 148, baseType: !7)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !539, file: !116, line: 512, baseType: !201, size: 64, offset: 128)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !539, file: !116, line: 513, baseType: !201, size: 64, offset: 192)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !539, file: !116, line: 514, baseType: !548, size: 64, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !499, line: 385, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !499, line: 385, size: 64, elements: !551)
!551 = !{!552}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !550, file: !499, line: 385, baseType: !553, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !504, line: 15, baseType: !201)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !539, file: !116, line: 516, baseType: !555, size: 64, offset: 320)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !499, line: 359, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !499, line: 359, size: 64, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !557, file: !499, line: 359, baseType: !560, size: 64)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !504, line: 16, baseType: !201)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !539, file: !116, line: 519, baseType: !562, size: 64, offset: 384)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !504, line: 21, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !504, line: 21, size: 64, elements: !564)
!564 = !{!565}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !563, file: !504, line: 21, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !504, line: 14, baseType: !201)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !539, file: !116, line: 521, baseType: !568, size: 64, offset: 448)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !481, line: 68, size: 512, align: 128, elements: !570)
!570 = !{!571, !572, !3987, !3994}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !569, file: !481, line: 69, baseType: !201, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, scope: !569, file: !481, line: 77, baseType: !573, size: 320, offset: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !569, file: !481, line: 77, size: 320, elements: !574)
!574 = !{!575, !3880, !3885, !3911, !3919, !3925, !3938, !3986}
!575 = !DIDerivedType(tag: DW_TAG_member, scope: !573, file: !481, line: 78, baseType: !576, size: 320)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !573, file: !481, line: 78, size: 320, elements: !577)
!577 = !{!578, !579, !3878, !3879}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !576, file: !481, line: 84, baseType: !207, size: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !576, file: !481, line: 86, baseType: !580, size: 64, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !12, line: 451, size: 1216, align: 64, elements: !582)
!582 = !{!583, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3873, !3874, !3875, !3876, !3877}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !581, file: !12, line: 452, baseType: !584, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !12, line: 610, size: 4224, elements: !586)
!586 = !{!587, !589, !590, !598, !605, !606, !3699, !3700, !3701, !3702, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3742, !3750, !3751, !3752, !3762, !3763, !3764, !3765}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !585, file: !12, line: 611, baseType: !588, size: 16)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !208, line: 19, baseType: !230)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !585, file: !12, line: 612, baseType: !230, size: 16, offset: 16)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !585, file: !12, line: 613, baseType: !591, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !592, line: 23, baseType: !593)
!592 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !592, line: 21, size: 32, elements: !594)
!594 = !{!595}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !593, file: !592, line: 22, baseType: !596, size: 32)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !208, line: 32, baseType: !597)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !424, line: 49, baseType: !7)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !585, file: !12, line: 614, baseType: !599, size: 32, offset: 64)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !592, line: 28, baseType: !600)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !592, line: 26, size: 32, elements: !601)
!601 = !{!602}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !600, file: !592, line: 27, baseType: !603, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !208, line: 33, baseType: !604)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !424, line: 50, baseType: !7)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !585, file: !12, line: 615, baseType: !7, size: 32, offset: 96)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !585, file: !12, line: 622, baseType: !607, size: 64, offset: 128)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !609)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !12, line: 1864, size: 1536, align: 512, elements: !610)
!610 = !{!611, !3576, !3586, !3590, !3596, !3600, !3604, !3608, !3612, !3616, !3620, !3621, !3625, !3629, !3649, !3675, !3679, !3685, !3690, !3694, !3695}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !609, file: !12, line: 1865, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{!615, !584, !615, !7}
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !617, line: 89, size: 1536, elements: !618)
!617 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!618 = !{!619, !620, !625, !633, !634, !649, !650, !654, !666, !740, !3560, !3561, !3562, !3568, !3569, !3570}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !616, file: !617, line: 91, baseType: !7, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !616, file: !617, line: 92, baseType: !621, size: 32, offset: 32)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !427, line: 277, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !427, line: 277, size: 32, elements: !623)
!623 = !{!624}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !622, file: !427, line: 277, baseType: !431, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !616, file: !617, line: 93, baseType: !626, size: 128, offset: 64)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !627, line: 38, size: 128, elements: !628)
!627 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!628 = !{!629, !631}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !626, file: !627, line: 39, baseType: !630, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !626, file: !627, line: 39, baseType: !632, size: 64, offset: 64)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !616, file: !617, line: 94, baseType: !615, size: 64, offset: 192)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !616, file: !617, line: 95, baseType: !635, size: 128, offset: 256)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !617, line: 47, size: 128, elements: !636)
!636 = !{!637, !646}
!637 = !DIDerivedType(tag: DW_TAG_member, scope: !635, file: !617, line: 48, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !635, file: !617, line: 48, size: 64, elements: !639)
!639 = !{!640, !645}
!640 = !DIDerivedType(tag: DW_TAG_member, scope: !638, file: !617, line: 49, baseType: !641, size: 64)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !638, file: !617, line: 49, size: 64, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !641, file: !617, line: 50, baseType: !296, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !641, file: !617, line: 50, baseType: !296, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !638, file: !617, line: 52, baseType: !342, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !635, file: !617, line: 54, baseType: !647, size: 64, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !616, file: !617, line: 96, baseType: !584, size: 64, offset: 384)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !616, file: !617, line: 98, baseType: !651, size: 256, offset: 448)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 256, elements: !652)
!652 = !{!653}
!653 = !DISubrange(count: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !616, file: !617, line: 101, baseType: !655, size: 32, offset: 704)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !656, line: 25, size: 32, elements: !657)
!656 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!657 = !{!658}
!658 = !DIDerivedType(tag: DW_TAG_member, scope: !655, file: !656, line: 26, baseType: !659, size: 32)
!659 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !655, file: !656, line: 26, size: 32, elements: !660)
!660 = !{!661}
!661 = !DIDerivedType(tag: DW_TAG_member, scope: !659, file: !656, line: 30, baseType: !662, size: 32)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !659, file: !656, line: 30, size: 32, elements: !663)
!663 = !{!664, !665}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !662, file: !656, line: 31, baseType: !249)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !662, file: !656, line: 32, baseType: !232, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !616, file: !617, line: 102, baseType: !667, size: 64, offset: 768)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !617, line: 135, size: 1024, align: 512, elements: !670)
!670 = !{!671, !675, !676, !683, !692, !696, !700, !704, !705, !709, !714, !726, !734}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !669, file: !617, line: 136, baseType: !672, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{!232, !615, !7}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !669, file: !617, line: 137, baseType: !672, size: 64, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !669, file: !617, line: 138, baseType: !677, size: 64, offset: 128)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!232, !680, !682}
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !616)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !669, file: !617, line: 139, baseType: !684, size: 64, offset: 192)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DISubroutineType(types: !686)
!686 = !{!232, !680, !7, !687, !690}
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !689)
!689 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !635)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !669, file: !617, line: 141, baseType: !693, size: 64, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{!232, !680}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !669, file: !617, line: 142, baseType: !697, size: 64, offset: 320)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{!232, !615}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !669, file: !617, line: 143, baseType: !701, size: 64, offset: 384)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DISubroutineType(types: !703)
!703 = !{null, !615}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !669, file: !617, line: 144, baseType: !701, size: 64, offset: 448)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !669, file: !617, line: 145, baseType: !706, size: 64, offset: 512)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{null, !615, !584}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !669, file: !617, line: 146, baseType: !710, size: 64, offset: 576)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!713, !615, !713, !232}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !669, file: !617, line: 147, baseType: !715, size: 64, offset: 640)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!718, !720}
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !617, line: 18, flags: DIFlagFwdDecl)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !722, line: 8, size: 128, elements: !723)
!722 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!723 = !{!724, !725}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !721, file: !722, line: 9, baseType: !718, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !721, file: !722, line: 10, baseType: !615, size: 64, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !669, file: !617, line: 148, baseType: !727, size: 64, offset: 704)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DISubroutineType(types: !729)
!729 = !{!232, !730, !732}
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !721)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !208, line: 30, baseType: !733)
!733 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !669, file: !617, line: 149, baseType: !735, size: 64, offset: 768)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DISubroutineType(types: !737)
!737 = !{!615, !615, !738}
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !585)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !616, file: !617, line: 103, baseType: !741, size: 64, offset: 832)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !12, line: 1416, size: 9472, elements: !743)
!743 = !{!744, !745, !748, !749, !750, !753, !804, !1483, !1565, !1648, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1664, !1668, !1669, !3419, !3420, !3423, !3424, !3425, !3466, !3492, !3493, !3494, !3495, !3496, !3497, !3500, !3501, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !742, file: !12, line: 1417, baseType: !207, size: 128)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !742, file: !12, line: 1418, baseType: !746, size: 32, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !208, line: 16, baseType: !747)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !208, line: 13, baseType: !296)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !742, file: !12, line: 1419, baseType: !224, size: 8, offset: 160)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !742, file: !12, line: 1420, baseType: !201, size: 64, offset: 192)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !742, file: !12, line: 1421, baseType: !751, size: 64, offset: 256)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !208, line: 46, baseType: !752)
!752 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !424, line: 88, baseType: !281)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !742, file: !12, line: 1422, baseType: !754, size: 64, offset: 320)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !12, line: 2228, size: 576, elements: !756)
!756 = !{!757, !758, !759, !765, !769, !773, !777, !781, !782, !792, !795, !796, !797, !801, !802, !803}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !755, file: !12, line: 2229, baseType: !687, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !755, file: !12, line: 2230, baseType: !232, size: 32, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !755, file: !12, line: 2238, baseType: !760, size: 64, offset: 128)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DISubroutineType(types: !762)
!762 = !{!232, !763}
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !12, line: 69, flags: DIFlagFwdDecl)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !755, file: !12, line: 2239, baseType: !766, size: 64, offset: 192)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !768)
!768 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !12, line: 70, flags: DIFlagFwdDecl)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !755, file: !12, line: 2240, baseType: !770, size: 64, offset: 256)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DISubroutineType(types: !772)
!772 = !{!615, !754, !232, !687, !202}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !755, file: !12, line: 2242, baseType: !774, size: 64, offset: 320)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DISubroutineType(types: !776)
!776 = !{null, !741}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !755, file: !12, line: 2243, baseType: !778, size: 64, offset: 384)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !780, line: 76, flags: DIFlagFwdDecl)
!780 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!781 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !755, file: !12, line: 2244, baseType: !754, size: 64, offset: 448)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !755, file: !12, line: 2245, baseType: !783, size: 64, offset: 512)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !208, line: 182, size: 64, elements: !784)
!784 = !{!785}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !783, file: !208, line: 183, baseType: !786, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !208, line: 186, size: 128, elements: !788)
!788 = !{!789, !790}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !787, file: !208, line: 187, baseType: !786, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !787, file: !208, line: 187, baseType: !791, size: 64, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !755, file: !12, line: 2247, baseType: !793, offset: 576)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !794, line: 187, elements: !263)
!794 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!795 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !755, file: !12, line: 2248, baseType: !793, offset: 576)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !755, file: !12, line: 2249, baseType: !793, offset: 576)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !755, file: !12, line: 2250, baseType: !798, offset: 576)
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !793, elements: !799)
!799 = !{!800}
!800 = !DISubrange(count: 3)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !755, file: !12, line: 2252, baseType: !793, offset: 576)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !755, file: !12, line: 2253, baseType: !793, offset: 576)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !755, file: !12, line: 2254, baseType: !793, offset: 576)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !742, file: !12, line: 1423, baseType: !805, size: 64, offset: 384)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !12, line: 1935, size: 1472, elements: !808)
!808 = !{!809, !813, !817, !818, !822, !828, !832, !833, !834, !838, !842, !843, !844, !845, !851, !856, !857, !1460, !1461, !1462, !1463, !1467, !1482}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !807, file: !12, line: 1936, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!584, !741}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !807, file: !12, line: 1937, baseType: !814, size: 64, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{null, !584}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !807, file: !12, line: 1938, baseType: !814, size: 64, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !807, file: !12, line: 1940, baseType: !819, size: 64, offset: 192)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{null, !584, !232}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !807, file: !12, line: 1941, baseType: !823, size: 64, offset: 256)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{!232, !584, !826}
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !116, line: 40, flags: DIFlagFwdDecl)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !807, file: !12, line: 1942, baseType: !829, size: 64, offset: 320)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{!232, !584}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !807, file: !12, line: 1943, baseType: !814, size: 64, offset: 384)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !807, file: !12, line: 1944, baseType: !774, size: 64, offset: 448)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !807, file: !12, line: 1945, baseType: !835, size: 64, offset: 512)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!232, !741, !232}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !807, file: !12, line: 1946, baseType: !839, size: 64, offset: 576)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DISubroutineType(types: !841)
!841 = !{!232, !741}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !807, file: !12, line: 1947, baseType: !839, size: 64, offset: 640)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !807, file: !12, line: 1948, baseType: !839, size: 64, offset: 704)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !807, file: !12, line: 1949, baseType: !839, size: 64, offset: 768)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !807, file: !12, line: 1950, baseType: !846, size: 64, offset: 832)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{!232, !615, !849}
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !12, line: 57, flags: DIFlagFwdDecl)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !807, file: !12, line: 1951, baseType: !852, size: 64, offset: 896)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DISubroutineType(types: !854)
!854 = !{!232, !741, !855, !713}
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !807, file: !12, line: 1952, baseType: !774, size: 64, offset: 960)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !807, file: !12, line: 1954, baseType: !858, size: 64, offset: 1024)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{!232, !861, !615}
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !863, line: 16, size: 896, elements: !864)
!863 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!864 = !{!865, !866, !870, !871, !872, !873, !874, !875, !876, !898, !899, !1459}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !862, file: !863, line: 17, baseType: !713, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !862, file: !863, line: 18, baseType: !867, size: 64, offset: 64)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !208, line: 55, baseType: !868)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !424, line: 72, baseType: !869)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !424, line: 16, baseType: !201)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !862, file: !863, line: 19, baseType: !867, size: 64, offset: 128)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !862, file: !863, line: 20, baseType: !867, size: 64, offset: 192)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !862, file: !863, line: 21, baseType: !867, size: 64, offset: 256)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !862, file: !863, line: 22, baseType: !751, size: 64, offset: 320)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !862, file: !863, line: 23, baseType: !751, size: 64, offset: 384)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !862, file: !863, line: 24, baseType: !267, size: 192, offset: 448)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !862, file: !863, line: 25, baseType: !877, size: 64, offset: 640)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !879)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !863, line: 31, size: 256, elements: !880)
!880 = !{!881, !886, !890, !894}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !879, file: !863, line: 32, baseType: !882, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{!202, !861, !885}
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !879, file: !863, line: 33, baseType: !887, size: 64, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !861, !202}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !879, file: !863, line: 34, baseType: !891, size: 64, offset: 128)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!202, !861, !202, !885}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !879, file: !863, line: 35, baseType: !895, size: 64, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!232, !861, !202}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !862, file: !863, line: 26, baseType: !232, size: 32, offset: 704)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !862, file: !863, line: 27, baseType: !900, size: 64, offset: 768)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !12, line: 916, size: 1856, align: 32, elements: !903)
!903 = !{!904, !922, !923, !924, !1206, !1207, !1208, !1209, !1210, !1212, !1213, !1214, !1244, !1441, !1450, !1451, !1452, !1453, !1454, !1455, !1458}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !902, file: !12, line: 920, baseType: !905, size: 128)
!905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !902, file: !12, line: 917, size: 128, elements: !906)
!906 = !{!907, !913}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !905, file: !12, line: 918, baseType: !908, size: 64)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !909, line: 58, size: 64, elements: !910)
!909 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!910 = !{!911}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !908, file: !909, line: 59, baseType: !912, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !905, file: !12, line: 919, baseType: !914, size: 128, align: 64)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !208, line: 216, size: 128, align: 64, elements: !915)
!915 = !{!916, !918}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !914, file: !208, line: 217, baseType: !917, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !914, file: !208, line: 218, baseType: !919, size: 64, offset: 64)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{null, !917}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !902, file: !12, line: 921, baseType: !721, size: 128, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !902, file: !12, line: 922, baseType: !584, size: 64, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !902, file: !12, line: 923, baseType: !925, size: 64, offset: 320)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !12, line: 1822, size: 2048, elements: !928)
!928 = !{!929, !930, !935, !942, !946, !992, !993, !997, !1010, !1011, !1019, !1023, !1024, !1028, !1029, !1033, !1038, !1039, !1043, !1047, !1161, !1165, !1169, !1173, !1174, !1180, !1184, !1189, !1193, !1197, !1201, !1205}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !927, file: !12, line: 1823, baseType: !778, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !927, file: !12, line: 1824, baseType: !931, size: 64, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!751, !934, !751, !232}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !927, file: !12, line: 1825, baseType: !936, size: 64, offset: 128)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{!939, !934, !713, !867, !885}
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !208, line: 60, baseType: !940)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !424, line: 73, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !424, line: 15, baseType: !300)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !927, file: !12, line: 1826, baseType: !943, size: 64, offset: 192)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DISubroutineType(types: !945)
!945 = !{!939, !934, !687, !867, !885}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !927, file: !12, line: 1827, baseType: !947, size: 64, offset: 256)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DISubroutineType(types: !949)
!949 = !{!939, !950, !990}
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !12, line: 320, size: 384, elements: !952)
!952 = !{!953, !954, !955, !959, !960, !961, !964, !965}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !951, file: !12, line: 321, baseType: !934, size: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !951, file: !12, line: 326, baseType: !751, size: 64, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !951, file: !12, line: 327, baseType: !956, size: 64, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DISubroutineType(types: !958)
!958 = !{null, !950, !300, !300}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !951, file: !12, line: 328, baseType: !202, size: 64, offset: 192)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !951, file: !12, line: 329, baseType: !232, size: 32, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !951, file: !12, line: 330, baseType: !962, size: 16, offset: 288)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !278, line: 19, baseType: !963)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !280, line: 24, baseType: !230)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !951, file: !12, line: 331, baseType: !962, size: 16, offset: 304)
!965 = !DIDerivedType(tag: DW_TAG_member, scope: !951, file: !12, line: 332, baseType: !966, size: 64, offset: 320)
!966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !951, file: !12, line: 332, size: 64, elements: !967)
!967 = !{!968, !969}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !966, file: !12, line: 333, baseType: !7, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !966, file: !12, line: 334, baseType: !970, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !972, line: 569, size: 448, elements: !973)
!972 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!973 = !{!974, !975, !976}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !971, file: !972, line: 570, baseType: !568, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !971, file: !972, line: 571, baseType: !232, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !971, file: !972, line: 572, baseType: !977, size: 320, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !978, line: 14, baseType: !979)
!978 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !978, line: 29, size: 320, elements: !980)
!980 = !{!981, !982, !983, !989}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !979, file: !978, line: 30, baseType: !7, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !979, file: !978, line: 31, baseType: !202, size: 64, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !979, file: !978, line: 32, baseType: !984, size: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !978, line: 16, baseType: !985)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{!232, !988, !7, !232, !202}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !979, file: !978, line: 33, baseType: !207, size: 128, offset: 192)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !12, line: 64, flags: DIFlagFwdDecl)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !927, file: !12, line: 1828, baseType: !947, size: 64, offset: 320)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !927, file: !12, line: 1829, baseType: !994, size: 64, offset: 384)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{!232, !950, !732}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !927, file: !12, line: 1830, baseType: !998, size: 64, offset: 448)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!232, !934, !1001}
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !12, line: 1776, size: 128, elements: !1003)
!1003 = !{!1004, !1009}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1002, file: !12, line: 1777, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !12, line: 1773, baseType: !1006)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!232, !1001, !687, !232, !751, !342, !7}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1002, file: !12, line: 1778, baseType: !751, size: 64, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !927, file: !12, line: 1831, baseType: !998, size: 64, offset: 512)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !927, file: !12, line: 1832, baseType: !1012, size: 64, offset: 576)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!1015, !934, !1017}
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1016, line: 52, baseType: !7)
!1016 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !12, line: 56, flags: DIFlagFwdDecl)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !927, file: !12, line: 1833, baseType: !1020, size: 64, offset: 640)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!300, !934, !7, !201}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !927, file: !12, line: 1834, baseType: !1020, size: 64, offset: 704)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !927, file: !12, line: 1835, baseType: !1025, size: 64, offset: 768)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!232, !934, !487}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !927, file: !12, line: 1836, baseType: !201, size: 64, offset: 832)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !927, file: !12, line: 1837, baseType: !1030, size: 64, offset: 896)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!232, !584, !934}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !927, file: !12, line: 1838, baseType: !1034, size: 64, offset: 960)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!232, !934, !1037}
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !12, line: 1007, baseType: !202)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !927, file: !12, line: 1839, baseType: !1030, size: 64, offset: 1024)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !927, file: !12, line: 1840, baseType: !1040, size: 64, offset: 1088)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!232, !934, !751, !751, !232}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !927, file: !12, line: 1841, baseType: !1044, size: 64, offset: 1152)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!232, !232, !934, !232}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !927, file: !12, line: 1842, baseType: !1048, size: 64, offset: 1216)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!232, !934, !232, !1051}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !12, line: 1062, size: 1664, elements: !1053)
!1053 = !{!1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1070, !1071, !1072, !1073, !1090, !1091, !1092, !1105, !1137}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1052, file: !12, line: 1063, baseType: !1051, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1052, file: !12, line: 1064, baseType: !207, size: 128, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1052, file: !12, line: 1065, baseType: !787, size: 128, offset: 192)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1052, file: !12, line: 1066, baseType: !207, size: 128, offset: 320)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1052, file: !12, line: 1069, baseType: !207, size: 128, offset: 448)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1052, file: !12, line: 1072, baseType: !1037, size: 64, offset: 576)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1052, file: !12, line: 1073, baseType: !7, size: 32, offset: 640)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1052, file: !12, line: 1074, baseType: !224, size: 8, offset: 672)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1052, file: !12, line: 1075, baseType: !7, size: 32, offset: 704)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1052, file: !12, line: 1076, baseType: !232, size: 32, offset: 736)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1052, file: !12, line: 1077, baseType: !1065, size: 128, offset: 768)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !978, line: 40, baseType: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !978, line: 36, size: 128, elements: !1067)
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1066, file: !978, line: 37, baseType: !249)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1066, file: !978, line: 38, baseType: !207, size: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1052, file: !12, line: 1078, baseType: !934, size: 64, offset: 896)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1052, file: !12, line: 1079, baseType: !751, size: 64, offset: 960)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1052, file: !12, line: 1080, baseType: !751, size: 64, offset: 1024)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1052, file: !12, line: 1082, baseType: !1074, size: 64, offset: 1088)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !12, line: 1314, size: 320, elements: !1076)
!1076 = !{!1077, !1085, !1086, !1087, !1088, !1089}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1075, file: !12, line: 1315, baseType: !1078)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1079, line: 20, baseType: !1080)
!1079 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1079, line: 11, elements: !1081)
!1081 = !{!1082}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1080, file: !1079, line: 12, baseType: !1083)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !261, line: 33, baseType: !1084)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 31, elements: !263)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1075, file: !12, line: 1316, baseType: !232, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1075, file: !12, line: 1317, baseType: !232, size: 32, offset: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1075, file: !12, line: 1318, baseType: !1074, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1075, file: !12, line: 1319, baseType: !934, size: 64, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1075, file: !12, line: 1320, baseType: !914, size: 128, align: 64, offset: 192)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1052, file: !12, line: 1084, baseType: !201, size: 64, offset: 1152)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1052, file: !12, line: 1085, baseType: !201, size: 64, offset: 1216)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1052, file: !12, line: 1087, baseType: !1093, size: 64, offset: 1280)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !12, line: 1011, size: 128, elements: !1096)
!1096 = !{!1097, !1101}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1095, file: !12, line: 1012, baseType: !1098, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{null, !1051, !1051}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1095, file: !12, line: 1013, baseType: !1102, size: 64, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{null, !1051}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1052, file: !12, line: 1088, baseType: !1106, size: 64, offset: 1344)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !12, line: 1016, size: 512, elements: !1109)
!1109 = !{!1110, !1114, !1118, !1119, !1123, !1127, !1131, !1136}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1108, file: !12, line: 1017, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!1037, !1037}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1108, file: !12, line: 1018, baseType: !1115, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{null, !1037}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1108, file: !12, line: 1019, baseType: !1102, size: 64, offset: 128)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1108, file: !12, line: 1020, baseType: !1120, size: 64, offset: 192)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!232, !1051, !232}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1108, file: !12, line: 1021, baseType: !1124, size: 64, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!732, !1051}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1108, file: !12, line: 1022, baseType: !1128, size: 64, offset: 320)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!232, !1051, !232, !211}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1108, file: !12, line: 1023, baseType: !1132, size: 64, offset: 384)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{null, !1051, !1135}
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1108, file: !12, line: 1024, baseType: !1124, size: 64, offset: 448)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1052, file: !12, line: 1097, baseType: !1138, size: 256, offset: 1408)
!1138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1052, file: !12, line: 1089, size: 256, elements: !1139)
!1139 = !{!1140, !1149, !1155}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1138, file: !12, line: 1090, baseType: !1141, size: 256)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1142, line: 10, size: 256, elements: !1143)
!1142 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1143 = !{!1144, !1145, !1148}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1141, file: !1142, line: 11, baseType: !296, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1141, file: !1142, line: 12, baseType: !1146, size: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1142, line: 5, flags: DIFlagFwdDecl)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1141, file: !1142, line: 13, baseType: !207, size: 128, offset: 128)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1138, file: !12, line: 1091, baseType: !1150, size: 64)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1142, line: 17, size: 64, elements: !1151)
!1151 = !{!1152}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1150, file: !1142, line: 18, baseType: !1153, size: 64)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1142, line: 16, flags: DIFlagFwdDecl)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1138, file: !12, line: 1096, baseType: !1156, size: 192)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1138, file: !12, line: 1092, size: 192, elements: !1157)
!1157 = !{!1158, !1159, !1160}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1156, file: !12, line: 1093, baseType: !207, size: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1156, file: !12, line: 1094, baseType: !232, size: 32, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1156, file: !12, line: 1095, baseType: !7, size: 32, offset: 160)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !927, file: !12, line: 1843, baseType: !1162, size: 64, offset: 1280)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!939, !934, !568, !232, !867, !885, !232}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !927, file: !12, line: 1844, baseType: !1166, size: 64, offset: 1344)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!201, !934, !201, !201, !201, !201}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !927, file: !12, line: 1845, baseType: !1170, size: 64, offset: 1408)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!232, !232}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !927, file: !12, line: 1846, baseType: !1048, size: 64, offset: 1472)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !927, file: !12, line: 1847, baseType: !1175, size: 64, offset: 1536)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!939, !1178, !934, !885, !867, !7}
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !288, line: 53, flags: DIFlagFwdDecl)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !927, file: !12, line: 1848, baseType: !1181, size: 64, offset: 1600)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!939, !934, !885, !1178, !867, !7}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !927, file: !12, line: 1849, baseType: !1185, size: 64, offset: 1664)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!232, !934, !300, !1188, !1135}
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !927, file: !12, line: 1850, baseType: !1190, size: 64, offset: 1728)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!300, !934, !232, !751, !751}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !927, file: !12, line: 1852, baseType: !1194, size: 64, offset: 1792)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{null, !861, !934}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !927, file: !12, line: 1856, baseType: !1198, size: 64, offset: 1856)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!939, !934, !751, !934, !751, !867, !7}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !927, file: !12, line: 1858, baseType: !1202, size: 64, offset: 1920)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!751, !934, !751, !934, !751, !751, !7}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !927, file: !12, line: 1861, baseType: !1040, size: 64, offset: 1984)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !902, file: !12, line: 929, baseType: !249, offset: 384)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !902, file: !12, line: 930, baseType: !11, size: 32, offset: 384)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !902, file: !12, line: 931, baseType: !271, size: 64, offset: 448)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !902, file: !12, line: 932, baseType: !7, size: 32, offset: 512)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !902, file: !12, line: 933, baseType: !1211, size: 32, offset: 544)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !208, line: 150, baseType: !7)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !902, file: !12, line: 934, baseType: !267, size: 192, offset: 576)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !902, file: !12, line: 935, baseType: !751, size: 64, offset: 768)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !902, file: !12, line: 936, baseType: !1215, size: 192, offset: 832)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !12, line: 885, size: 192, elements: !1216)
!1216 = !{!1217, !1218, !1240, !1241, !1242, !1243}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1215, file: !12, line: 886, baseType: !1078)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1215, file: !12, line: 887, baseType: !1219, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !21, line: 59, size: 768, elements: !1221)
!1221 = !{!1222, !1223, !1224, !1225, !1229, !1230, !1231, !1232}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1220, file: !21, line: 61, baseType: !303, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1220, file: !21, line: 62, baseType: !7, size: 32, offset: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1220, file: !21, line: 63, baseType: !249, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1220, file: !21, line: 65, baseType: !1226, size: 256, offset: 64)
!1226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !783, size: 256, elements: !1227)
!1227 = !{!1228}
!1228 = !DISubrange(count: 4)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1220, file: !21, line: 66, baseType: !783, size: 64, offset: 320)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1220, file: !21, line: 68, baseType: !1065, size: 128, offset: 384)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1220, file: !21, line: 69, baseType: !914, size: 128, align: 64, offset: 512)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1220, file: !21, line: 70, baseType: !1233, size: 128, offset: 640)
!1233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1234, size: 128, elements: !472)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !21, line: 54, size: 128, elements: !1235)
!1235 = !{!1236, !1237}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1234, file: !21, line: 55, baseType: !232, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1234, file: !21, line: 56, baseType: !1238, size: 64, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !21, line: 56, flags: DIFlagFwdDecl)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1215, file: !12, line: 888, baseType: !20, size: 32, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1215, file: !12, line: 889, baseType: !591, size: 32, offset: 96)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1215, file: !12, line: 889, baseType: !591, size: 32, offset: 128)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1215, file: !12, line: 890, baseType: !232, size: 32, offset: 160)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !902, file: !12, line: 937, baseType: !1245, size: 64, offset: 1024)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1248, line: 111, size: 1280, elements: !1249)
!1248 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1249 = !{!1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1269, !1270, !1271, !1272, !1273, !1274, !1394, !1395, !1396, !1397, !1423, !1426, !1436}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1247, file: !1248, line: 112, baseType: !308, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1247, file: !1248, line: 120, baseType: !591, size: 32, offset: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1247, file: !1248, line: 121, baseType: !599, size: 32, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1247, file: !1248, line: 122, baseType: !591, size: 32, offset: 96)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1247, file: !1248, line: 123, baseType: !599, size: 32, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1247, file: !1248, line: 124, baseType: !591, size: 32, offset: 160)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1247, file: !1248, line: 125, baseType: !599, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1247, file: !1248, line: 126, baseType: !591, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1247, file: !1248, line: 127, baseType: !599, size: 32, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1247, file: !1248, line: 128, baseType: !7, size: 32, offset: 288)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1247, file: !1248, line: 129, baseType: !1261, size: 64, offset: 320)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1262, line: 26, baseType: !1263)
!1262 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1262, line: 24, size: 64, elements: !1264)
!1264 = !{!1265}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1263, file: !1262, line: 25, baseType: !1266, size: 64)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 64, elements: !1267)
!1267 = !{!1268}
!1268 = !DISubrange(count: 2)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1247, file: !1248, line: 130, baseType: !1261, size: 64, offset: 384)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1247, file: !1248, line: 131, baseType: !1261, size: 64, offset: 448)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1247, file: !1248, line: 132, baseType: !1261, size: 64, offset: 512)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1247, file: !1248, line: 133, baseType: !1261, size: 64, offset: 576)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1247, file: !1248, line: 135, baseType: !224, size: 8, offset: 640)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1247, file: !1248, line: 137, baseType: !1275, size: 64, offset: 704)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1277, line: 189, size: 1664, elements: !1278)
!1277 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1278 = !{!1279, !1280, !1285, !1290, !1298, !1301, !1302, !1309, !1310, !1311, !1312, !1315, !1316, !1317, !1319, !1320, !1358, !1379}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1276, file: !1277, line: 190, baseType: !303, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1276, file: !1277, line: 191, baseType: !1281, size: 32, offset: 32)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1277, line: 28, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !208, line: 98, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !278, line: 20, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !280, line: 26, baseType: !232)
!1285 = !DIDerivedType(tag: DW_TAG_member, scope: !1276, file: !1277, line: 192, baseType: !1286, size: 192, offset: 64)
!1286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1276, file: !1277, line: 192, size: 192, elements: !1287)
!1287 = !{!1288, !1289}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1286, file: !1277, line: 193, baseType: !207, size: 128)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1286, file: !1277, line: 194, baseType: !332, size: 192, align: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1276, file: !1277, line: 199, baseType: !1291, size: 256, offset: 256)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1292, line: 35, size: 256, elements: !1293)
!1292 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1293 = !{!1294, !1295, !1296, !1297}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1291, file: !1292, line: 36, baseType: !271, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1291, file: !1292, line: 42, baseType: !271, size: 64, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1291, file: !1292, line: 46, baseType: !404, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1291, file: !1292, line: 47, baseType: !207, size: 128, offset: 128)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1276, file: !1277, line: 200, baseType: !1299, size: 64, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1277, line: 200, flags: DIFlagFwdDecl)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1276, file: !1277, line: 201, baseType: !202, size: 64, offset: 576)
!1302 = !DIDerivedType(tag: DW_TAG_member, scope: !1276, file: !1277, line: 202, baseType: !1303, size: 64, offset: 640)
!1303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1276, file: !1277, line: 202, size: 64, elements: !1304)
!1304 = !{!1305, !1308}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1303, file: !1277, line: 203, baseType: !1306, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1307, line: 8, baseType: !279)
!1307 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1303, file: !1277, line: 204, baseType: !1306, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1276, file: !1277, line: 206, baseType: !1306, size: 64, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1276, file: !1277, line: 207, baseType: !591, size: 32, offset: 768)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1276, file: !1277, line: 208, baseType: !599, size: 32, offset: 800)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1276, file: !1277, line: 209, baseType: !1313, size: 32, offset: 832)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1277, line: 31, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !208, line: 104, baseType: !296)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1276, file: !1277, line: 210, baseType: !230, size: 16, offset: 864)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1276, file: !1277, line: 211, baseType: !230, size: 16, offset: 880)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1276, file: !1277, line: 215, baseType: !1318, size: 16, offset: 896)
!1318 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1276, file: !1277, line: 222, baseType: !201, size: 64, offset: 960)
!1320 = !DIDerivedType(tag: DW_TAG_member, scope: !1276, file: !1277, line: 239, baseType: !1321, size: 320, offset: 1024)
!1321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1276, file: !1277, line: 239, size: 320, elements: !1322)
!1322 = !{!1323, !1350}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1321, file: !1277, line: 240, baseType: !1324, size: 320)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1277, line: 108, size: 320, elements: !1325)
!1325 = !{!1326, !1327, !1339, !1342, !1349}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1324, file: !1277, line: 110, baseType: !201, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, scope: !1324, file: !1277, line: 111, baseType: !1328, size: 64, offset: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1324, file: !1277, line: 111, size: 64, elements: !1329)
!1329 = !{!1330, !1338}
!1330 = !DIDerivedType(tag: DW_TAG_member, scope: !1328, file: !1277, line: 112, baseType: !1331, size: 64)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1328, file: !1277, line: 112, size: 64, elements: !1332)
!1332 = !{!1333, !1334}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1331, file: !1277, line: 114, baseType: !962, size: 16)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1331, file: !1277, line: 115, baseType: !1335, size: 48, offset: 16)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 48, elements: !1336)
!1336 = !{!1337}
!1337 = !DISubrange(count: 6)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1328, file: !1277, line: 121, baseType: !201, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1324, file: !1277, line: 123, baseType: !1340, size: 64, offset: 128)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1277, line: 96, flags: DIFlagFwdDecl)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1324, file: !1277, line: 124, baseType: !1343, size: 64, offset: 192)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1277, line: 102, size: 192, elements: !1345)
!1345 = !{!1346, !1347, !1348}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1344, file: !1277, line: 103, baseType: !914, size: 128, align: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1344, file: !1277, line: 104, baseType: !303, size: 32, offset: 128)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1344, file: !1277, line: 105, baseType: !732, size: 8, offset: 160)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1324, file: !1277, line: 125, baseType: !687, size: 64, offset: 256)
!1350 = !DIDerivedType(tag: DW_TAG_member, scope: !1321, file: !1277, line: 241, baseType: !1351, size: 320)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1321, file: !1277, line: 241, size: 320, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1351, file: !1277, line: 242, baseType: !201, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1351, file: !1277, line: 243, baseType: !201, size: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1351, file: !1277, line: 244, baseType: !1340, size: 64, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1351, file: !1277, line: 245, baseType: !1343, size: 64, offset: 192)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1351, file: !1277, line: 246, baseType: !713, size: 64, offset: 256)
!1358 = !DIDerivedType(tag: DW_TAG_member, scope: !1276, file: !1277, line: 254, baseType: !1359, size: 256, offset: 1344)
!1359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1276, file: !1277, line: 254, size: 256, elements: !1360)
!1360 = !{!1361, !1367}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1359, file: !1277, line: 255, baseType: !1362, size: 256)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1277, line: 128, size: 256, elements: !1363)
!1363 = !{!1364, !1365}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1362, file: !1277, line: 129, baseType: !202, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1362, file: !1277, line: 130, baseType: !1366, size: 256)
!1366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 256, elements: !1227)
!1367 = !DIDerivedType(tag: DW_TAG_member, scope: !1359, file: !1277, line: 256, baseType: !1368, size: 256)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1359, file: !1277, line: 256, size: 256, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1368, file: !1277, line: 258, baseType: !207, size: 128)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1368, file: !1277, line: 259, baseType: !1372, size: 128, offset: 128)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1373, line: 22, size: 128, elements: !1374)
!1373 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1374 = !{!1375, !1378}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1372, file: !1373, line: 23, baseType: !1376, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1373, line: 23, flags: DIFlagFwdDecl)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1372, file: !1373, line: 24, baseType: !201, size: 64, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1276, file: !1277, line: 274, baseType: !1380, size: 64, offset: 1600)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1277, line: 170, size: 192, elements: !1382)
!1382 = !{!1383, !1392, !1393}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1381, file: !1277, line: 171, baseType: !1384, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1277, line: 165, baseType: !1385)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{!232, !1275, !1388, !1390, !1275}
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1341)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1381, file: !1277, line: 172, baseType: !1275, size: 64, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1381, file: !1277, line: 173, baseType: !1340, size: 64, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1247, file: !1248, line: 138, baseType: !1275, size: 64, offset: 768)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1247, file: !1248, line: 139, baseType: !1275, size: 64, offset: 832)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1247, file: !1248, line: 140, baseType: !1275, size: 64, offset: 896)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1247, file: !1248, line: 145, baseType: !1398, size: 64, offset: 960)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1400, line: 13, size: 896, elements: !1401)
!1400 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1401 = !{!1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1399, file: !1400, line: 14, baseType: !303, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1399, file: !1400, line: 15, baseType: !308, size: 32, offset: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1399, file: !1400, line: 16, baseType: !308, size: 32, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1399, file: !1400, line: 21, baseType: !271, size: 64, offset: 128)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1399, file: !1400, line: 27, baseType: !201, size: 64, offset: 192)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1399, file: !1400, line: 28, baseType: !201, size: 64, offset: 256)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1399, file: !1400, line: 29, baseType: !271, size: 64, offset: 320)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1399, file: !1400, line: 32, baseType: !787, size: 128, offset: 384)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1399, file: !1400, line: 33, baseType: !591, size: 32, offset: 512)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1399, file: !1400, line: 37, baseType: !271, size: 64, offset: 576)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1399, file: !1400, line: 44, baseType: !1413, size: 256, offset: 640)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1414, line: 15, size: 256, elements: !1415)
!1414 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1415 = !{!1416, !1417, !1418, !1419, !1420, !1421, !1422}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1413, file: !1414, line: 16, baseType: !404)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1413, file: !1414, line: 18, baseType: !232, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1413, file: !1414, line: 19, baseType: !232, size: 32, offset: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1413, file: !1414, line: 20, baseType: !232, size: 32, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1413, file: !1414, line: 21, baseType: !232, size: 32, offset: 96)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1413, file: !1414, line: 22, baseType: !201, size: 64, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1413, file: !1414, line: 23, baseType: !201, size: 64, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1247, file: !1248, line: 146, baseType: !1424, size: 64, offset: 1024)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !481, line: 516, flags: DIFlagFwdDecl)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1247, file: !1248, line: 147, baseType: !1427, size: 64, offset: 1088)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1248, line: 25, size: 64, elements: !1429)
!1429 = !{!1430, !1431, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1428, file: !1248, line: 26, baseType: !308, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1428, file: !1248, line: 27, baseType: !232, size: 32, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1428, file: !1248, line: 28, baseType: !1433, offset: 64)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !599, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 0)
!1436 = !DIDerivedType(tag: DW_TAG_member, scope: !1247, file: !1248, line: 149, baseType: !1437, size: 128, offset: 1152)
!1437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1247, file: !1248, line: 149, size: 128, elements: !1438)
!1438 = !{!1439, !1440}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1437, file: !1248, line: 150, baseType: !232, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1437, file: !1248, line: 151, baseType: !914, size: 128, align: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !902, file: !12, line: 938, baseType: !1442, size: 256, offset: 1088)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !12, line: 896, size: 256, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1442, file: !12, line: 897, baseType: !201, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1442, file: !12, line: 898, baseType: !7, size: 32, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1442, file: !12, line: 899, baseType: !7, size: 32, offset: 96)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1442, file: !12, line: 902, baseType: !7, size: 32, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1442, file: !12, line: 903, baseType: !7, size: 32, offset: 160)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1442, file: !12, line: 904, baseType: !751, size: 64, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !902, file: !12, line: 940, baseType: !342, size: 64, offset: 1344)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !902, file: !12, line: 945, baseType: !202, size: 64, offset: 1408)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !902, file: !12, line: 949, baseType: !207, size: 128, offset: 1472)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !902, file: !12, line: 950, baseType: !207, size: 128, offset: 1600)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !902, file: !12, line: 952, baseType: !580, size: 64, offset: 1728)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !902, file: !12, line: 953, baseType: !1456, size: 32, offset: 1792)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1457, line: 8, baseType: !296)
!1457 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !902, file: !12, line: 954, baseType: !1456, size: 32, offset: 1824)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !862, file: !863, line: 28, baseType: !202, size: 64, offset: 832)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !807, file: !12, line: 1955, baseType: !858, size: 64, offset: 1088)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !807, file: !12, line: 1956, baseType: !858, size: 64, offset: 1152)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !807, file: !12, line: 1957, baseType: !858, size: 64, offset: 1216)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !807, file: !12, line: 1963, baseType: !1464, size: 64, offset: 1280)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!232, !741, !568, !544}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !807, file: !12, line: 1964, baseType: !1468, size: 64, offset: 1344)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!300, !741, !1471}
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !1473, line: 12, size: 256, elements: !1474)
!1473 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!1474 = !{!1475, !1476, !1477, !1478, !1479}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1472, file: !1473, line: 13, baseType: !544, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !1472, file: !1473, line: 16, baseType: !232, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !1472, file: !1473, line: 23, baseType: !201, size: 64, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !1472, file: !1473, line: 30, baseType: !201, size: 64, offset: 128)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !1472, file: !1473, line: 33, baseType: !1480, size: 64, offset: 192)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !481, line: 27, flags: DIFlagFwdDecl)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !807, file: !12, line: 1966, baseType: !1468, size: 64, offset: 1408)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !742, file: !12, line: 1424, baseType: !1484, size: 64, offset: 448)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !29, line: 322, size: 704, elements: !1487)
!1487 = !{!1488, !1534, !1538, !1542, !1543, !1544, !1545, !1546, !1551, !1556, !1560}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !1486, file: !29, line: 323, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!232, !1492}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !29, line: 294, size: 1600, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1519, !1520, !1521}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !1493, file: !29, line: 295, baseType: !787, size: 128)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !1493, file: !29, line: 296, baseType: !207, size: 128, offset: 128)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !1493, file: !29, line: 297, baseType: !207, size: 128, offset: 256)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !1493, file: !29, line: 298, baseType: !207, size: 128, offset: 384)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !1493, file: !29, line: 299, baseType: !267, size: 192, offset: 512)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !1493, file: !29, line: 300, baseType: !249, offset: 704)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !1493, file: !29, line: 301, baseType: !308, size: 32, offset: 704)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !1493, file: !29, line: 302, baseType: !741, size: 64, offset: 768)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !1493, file: !29, line: 303, baseType: !1504, size: 64, offset: 832)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !29, line: 68, size: 64, elements: !1505)
!1505 = !{!1506, !1518}
!1506 = !DIDerivedType(tag: DW_TAG_member, scope: !1504, file: !29, line: 69, baseType: !1507, size: 32)
!1507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1504, file: !29, line: 69, size: 32, elements: !1508)
!1508 = !{!1509, !1510, !1511}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1507, file: !29, line: 70, baseType: !591, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1507, file: !29, line: 71, baseType: !599, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !1507, file: !29, line: 72, baseType: !1512, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !1513, line: 24, baseType: !1514)
!1513 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1513, line: 22, size: 32, elements: !1515)
!1515 = !{!1516}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1514, file: !1513, line: 23, baseType: !1517, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !1513, line: 20, baseType: !597)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1504, file: !29, line: 74, baseType: !28, size: 32, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !1493, file: !29, line: 304, baseType: !751, size: 64, offset: 896)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !1493, file: !29, line: 305, baseType: !201, size: 64, offset: 960)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !1493, file: !29, line: 306, baseType: !1522, size: 576, offset: 1024)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !29, line: 205, size: 576, elements: !1523)
!1523 = !{!1524, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !1522, file: !29, line: 206, baseType: !1525, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !29, line: 66, baseType: !281)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !1522, file: !29, line: 207, baseType: !1525, size: 64, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !1522, file: !29, line: 208, baseType: !1525, size: 64, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !1522, file: !29, line: 209, baseType: !1525, size: 64, offset: 192)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !1522, file: !29, line: 210, baseType: !1525, size: 64, offset: 256)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !1522, file: !29, line: 211, baseType: !1525, size: 64, offset: 320)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !1522, file: !29, line: 212, baseType: !1525, size: 64, offset: 384)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !1522, file: !29, line: 213, baseType: !1306, size: 64, offset: 448)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !1522, file: !29, line: 214, baseType: !1306, size: 64, offset: 512)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !1486, file: !29, line: 324, baseType: !1535, size: 64, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!1492, !741, !232}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !1486, file: !29, line: 325, baseType: !1539, size: 64, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{null, !1492}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !1486, file: !29, line: 326, baseType: !1489, size: 64, offset: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !1486, file: !29, line: 327, baseType: !1489, size: 64, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !1486, file: !29, line: 328, baseType: !1489, size: 64, offset: 320)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !1486, file: !29, line: 329, baseType: !835, size: 64, offset: 384)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !1486, file: !29, line: 332, baseType: !1547, size: 64, offset: 448)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!1550, !584}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !1486, file: !29, line: 333, baseType: !1552, size: 64, offset: 512)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!232, !584, !1555}
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !1486, file: !29, line: 335, baseType: !1557, size: 64, offset: 576)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!232, !584, !1550}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1486, file: !29, line: 337, baseType: !1561, size: 64, offset: 640)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{!232, !741, !1564}
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !742, file: !12, line: 1425, baseType: !1566, size: 64, offset: 512)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !29, line: 428, size: 704, elements: !1569)
!1569 = !{!1570, !1574, !1575, !1579, !1580, !1581, !1596, !1619, !1623, !1624, !1647}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !1568, file: !29, line: 429, baseType: !1571, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!232, !741, !232, !232, !730}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !1568, file: !29, line: 430, baseType: !835, size: 64, offset: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !1568, file: !29, line: 431, baseType: !1576, size: 64, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!232, !741, !7}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !1568, file: !29, line: 432, baseType: !1576, size: 64, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !1568, file: !29, line: 433, baseType: !835, size: 64, offset: 256)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !1568, file: !29, line: 434, baseType: !1582, size: 64, offset: 320)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!232, !741, !232, !1585}
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !29, line: 415, size: 256, elements: !1587)
!1587 = !{!1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !1586, file: !29, line: 416, baseType: !232, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1586, file: !29, line: 417, baseType: !7, size: 32, offset: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !1586, file: !29, line: 418, baseType: !7, size: 32, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !1586, file: !29, line: 420, baseType: !7, size: 32, offset: 96)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !1586, file: !29, line: 421, baseType: !7, size: 32, offset: 128)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !1586, file: !29, line: 422, baseType: !7, size: 32, offset: 160)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !1586, file: !29, line: 423, baseType: !7, size: 32, offset: 192)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !1586, file: !29, line: 424, baseType: !7, size: 32, offset: 224)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !1568, file: !29, line: 435, baseType: !1597, size: 64, offset: 384)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!232, !741, !1504, !1600}
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !29, line: 343, size: 960, elements: !1602)
!1602 = !{!1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !1601, file: !29, line: 344, baseType: !232, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !1601, file: !29, line: 345, baseType: !342, size: 64, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !1601, file: !29, line: 346, baseType: !342, size: 64, offset: 128)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !1601, file: !29, line: 347, baseType: !342, size: 64, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !1601, file: !29, line: 348, baseType: !342, size: 64, offset: 256)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !1601, file: !29, line: 349, baseType: !342, size: 64, offset: 320)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !1601, file: !29, line: 350, baseType: !342, size: 64, offset: 384)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !1601, file: !29, line: 351, baseType: !277, size: 64, offset: 448)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !1601, file: !29, line: 353, baseType: !277, size: 64, offset: 512)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !1601, file: !29, line: 354, baseType: !232, size: 32, offset: 576)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !1601, file: !29, line: 355, baseType: !232, size: 32, offset: 608)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !1601, file: !29, line: 356, baseType: !342, size: 64, offset: 640)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !1601, file: !29, line: 357, baseType: !342, size: 64, offset: 704)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !1601, file: !29, line: 358, baseType: !342, size: 64, offset: 768)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !1601, file: !29, line: 359, baseType: !277, size: 64, offset: 832)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !1601, file: !29, line: 360, baseType: !232, size: 32, offset: 896)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !1568, file: !29, line: 436, baseType: !1620, size: 64, offset: 448)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{!232, !741, !1564, !1600}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !1568, file: !29, line: 438, baseType: !1597, size: 64, offset: 512)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !1568, file: !29, line: 439, baseType: !1625, size: 64, offset: 576)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!232, !741, !1628}
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !29, line: 409, size: 1408, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !1629, file: !29, line: 410, baseType: !7, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !1629, file: !29, line: 411, baseType: !1633, size: 1344, offset: 64)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1634, size: 1344, elements: !799)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !29, line: 395, size: 448, elements: !1635)
!1635 = !{!1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1646}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1634, file: !29, line: 396, baseType: !7, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !1634, file: !29, line: 397, baseType: !7, size: 32, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !1634, file: !29, line: 399, baseType: !7, size: 32, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !1634, file: !29, line: 400, baseType: !7, size: 32, offset: 96)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !1634, file: !29, line: 401, baseType: !7, size: 32, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !1634, file: !29, line: 402, baseType: !7, size: 32, offset: 160)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !1634, file: !29, line: 403, baseType: !7, size: 32, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1634, file: !29, line: 404, baseType: !344, size: 64, offset: 256)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1634, file: !29, line: 405, baseType: !1645, size: 64, offset: 320)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !208, line: 126, baseType: !342)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1634, file: !29, line: 406, baseType: !1645, size: 64, offset: 384)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !1568, file: !29, line: 440, baseType: !1576, size: 64, offset: 640)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !742, file: !12, line: 1426, baseType: !1649, size: 64, offset: 576)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1651)
!1651 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !12, line: 49, flags: DIFlagFwdDecl)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !742, file: !12, line: 1427, baseType: !201, size: 64, offset: 640)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !742, file: !12, line: 1428, baseType: !201, size: 64, offset: 704)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !742, file: !12, line: 1429, baseType: !201, size: 64, offset: 768)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !742, file: !12, line: 1430, baseType: !615, size: 64, offset: 832)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !742, file: !12, line: 1431, baseType: !1291, size: 256, offset: 896)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !742, file: !12, line: 1432, baseType: !232, size: 32, offset: 1152)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !742, file: !12, line: 1433, baseType: !308, size: 32, offset: 1184)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !742, file: !12, line: 1437, baseType: !1660, size: 64, offset: 1216)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1663)
!1663 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !12, line: 1437, flags: DIFlagFwdDecl)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !742, file: !12, line: 1449, baseType: !1665, size: 64, offset: 1280)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !627, line: 34, size: 64, elements: !1666)
!1666 = !{!1667}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1665, file: !627, line: 35, baseType: !630, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !742, file: !12, line: 1450, baseType: !207, size: 128, offset: 1344)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !742, file: !12, line: 1451, baseType: !1670, size: 64, offset: 1472)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1672, line: 22, size: 1344, elements: !1673)
!1672 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1673 = !{!1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !2493, !2494, !2495, !3416, !3417, !3418}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1671, file: !1672, line: 23, baseType: !746, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1671, file: !1672, line: 24, baseType: !232, size: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1671, file: !1672, line: 25, baseType: !584, size: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1671, file: !1672, line: 26, baseType: !741, size: 64, offset: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1671, file: !1672, line: 27, baseType: !267, size: 192, offset: 192)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1671, file: !1672, line: 28, baseType: !202, size: 64, offset: 384)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1671, file: !1672, line: 29, baseType: !202, size: 64, offset: 448)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1671, file: !1672, line: 30, baseType: !232, size: 32, offset: 512)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1671, file: !1672, line: 31, baseType: !732, size: 8, offset: 544)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1671, file: !1672, line: 33, baseType: !207, size: 128, offset: 576)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1671, file: !1672, line: 35, baseType: !1670, size: 64, offset: 704)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1671, file: !1672, line: 36, baseType: !453, size: 8, offset: 768)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1671, file: !1672, line: 37, baseType: !1687, size: 64, offset: 832)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1689, line: 53, size: 6592, elements: !1690)
!1689 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1690 = !{!1691, !1693, !1694, !1695, !1698, !1719, !2472, !2473, !2474, !2475, !2485}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1688, file: !1689, line: 54, baseType: !1692, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !208, line: 125, baseType: !342)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1688, file: !1689, line: 60, baseType: !1692, size: 64, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1688, file: !1689, line: 64, baseType: !201, size: 64, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1688, file: !1689, line: 65, baseType: !1696, size: 64, offset: 192)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1689, line: 65, flags: DIFlagFwdDecl)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1688, file: !1689, line: 66, baseType: !1699, size: 128, offset: 256)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1700, line: 105, size: 128, elements: !1701)
!1700 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1701 = !{!1702, !1703}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1699, file: !1700, line: 110, baseType: !201, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1699, file: !1700, line: 118, baseType: !1704, size: 64, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1700, line: 95, size: 448, elements: !1706)
!1706 = !{!1707, !1708, !1714, !1715, !1716, !1717, !1718}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1705, file: !1700, line: 96, baseType: !271, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1705, file: !1700, line: 97, baseType: !1709, size: 64, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1700, line: 60, baseType: !1711)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{null, !1713}
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1705, file: !1700, line: 98, baseType: !1709, size: 64, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1705, file: !1700, line: 99, baseType: !732, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1705, file: !1700, line: 100, baseType: !732, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1705, file: !1700, line: 101, baseType: !914, size: 128, align: 64, offset: 256)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1705, file: !1700, line: 102, baseType: !1713, size: 64, offset: 384)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1688, file: !1689, line: 68, baseType: !1720, size: 5568, offset: 384)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !47, line: 461, size: 5568, elements: !1721)
!1721 = !{!1722, !2021, !2023, !2026, !2027, !2078, !2151, !2152, !2153, !2154, !2155, !2164, !2290, !2303, !2307, !2308, !2312, !2314, !2315, !2316, !2320, !2326, !2327, !2330, !2334, !2424, !2425, !2426, !2427, !2428, !2460, !2461, !2462, !2465, !2468, !2469, !2470, !2471}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1720, file: !47, line: 462, baseType: !1723, size: 512)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1724, line: 64, size: 512, elements: !1725)
!1724 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1725 = !{!1726, !1727, !1728, !1730, !1772, !1877, !2011, !2016, !2017, !2018, !2019, !2020}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1723, file: !1724, line: 65, baseType: !687, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1723, file: !1724, line: 66, baseType: !207, size: 128, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1723, file: !1724, line: 67, baseType: !1729, size: 64, offset: 192)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1723, file: !1724, line: 68, baseType: !1731, size: 64, offset: 256)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1724, line: 192, size: 704, elements: !1733)
!1733 = !{!1734, !1735, !1736, !1737}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1732, file: !1724, line: 193, baseType: !207, size: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1732, file: !1724, line: 194, baseType: !249, offset: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1732, file: !1724, line: 195, baseType: !1723, size: 512, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1732, file: !1724, line: 196, baseType: !1738, size: 64, offset: 640)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1724, line: 156, size: 192, elements: !1741)
!1741 = !{!1742, !1747, !1752}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1740, file: !1724, line: 157, baseType: !1743, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1744)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!232, !1731, !1729}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1740, file: !1724, line: 158, baseType: !1748, size: 64, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1749)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{!687, !1731, !1729}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1740, file: !1724, line: 159, baseType: !1753, size: 64, offset: 128)
!1753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1754)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!232, !1731, !1729, !1757}
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1724, line: 148, size: 20736, elements: !1759)
!1759 = !{!1760, !1762, !1766, !1767, !1771}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1758, file: !1724, line: 149, baseType: !1761, size: 192)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 192, elements: !799)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1758, file: !1724, line: 150, baseType: !1763, size: 4096, offset: 192)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 4096, elements: !1764)
!1764 = !{!1765}
!1765 = !DISubrange(count: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1758, file: !1724, line: 151, baseType: !232, size: 32, offset: 4288)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1758, file: !1724, line: 152, baseType: !1768, size: 16384, offset: 4320)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 16384, elements: !1769)
!1769 = !{!1770}
!1770 = !DISubrange(count: 2048)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1758, file: !1724, line: 153, baseType: !232, size: 32, offset: 20704)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1723, file: !1724, line: 69, baseType: !1773, size: 64, offset: 320)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1724, line: 138, size: 448, elements: !1775)
!1775 = !{!1776, !1780, !1799, !1801, !1834, !1867, !1871}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1774, file: !1724, line: 139, baseType: !1777, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{null, !1729}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1774, file: !1724, line: 140, baseType: !1781, size: 64, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1784, line: 230, size: 128, elements: !1785)
!1784 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1785 = !{!1786, !1795}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1783, file: !1784, line: 231, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!939, !1729, !1790, !713}
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1784, line: 30, size: 128, elements: !1792)
!1792 = !{!1793, !1794}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1791, file: !1784, line: 31, baseType: !687, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1791, file: !1784, line: 32, baseType: !588, size: 16, offset: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1783, file: !1784, line: 232, baseType: !1796, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!939, !1729, !1790, !687, !867}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1774, file: !1724, line: 141, baseType: !1800, size: 64, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1774, file: !1724, line: 142, baseType: !1802, size: 64, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1805)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1784, line: 84, size: 320, elements: !1806)
!1806 = !{!1807, !1808, !1812, !1831, !1832}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1805, file: !1784, line: 85, baseType: !687, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1805, file: !1784, line: 86, baseType: !1809, size: 64, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{!588, !1729, !1790, !232}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1805, file: !1784, line: 88, baseType: !1813, size: 64, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!588, !1729, !1816, !232}
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1784, line: 168, size: 448, elements: !1818)
!1818 = !{!1819, !1820, !1821, !1822, !1826, !1827}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1817, file: !1784, line: 169, baseType: !1791, size: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1817, file: !1784, line: 170, baseType: !867, size: 64, offset: 128)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1817, file: !1784, line: 171, baseType: !202, size: 64, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1817, file: !1784, line: 172, baseType: !1823, size: 64, offset: 256)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!939, !934, !1729, !1816, !713, !751, !867}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1817, file: !1784, line: 174, baseType: !1823, size: 64, offset: 320)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1817, file: !1784, line: 176, baseType: !1828, size: 64, offset: 384)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!232, !934, !1729, !1816, !487}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1805, file: !1784, line: 90, baseType: !1800, size: 64, offset: 192)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1805, file: !1784, line: 91, baseType: !1833, size: 64, offset: 256)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1774, file: !1724, line: 143, baseType: !1835, size: 64, offset: 256)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!1838, !1729}
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !35, line: 39, size: 384, elements: !1841)
!1841 = !{!1842, !1843, !1847, !1851, !1859, !1863}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1840, file: !35, line: 40, baseType: !34, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !1840, file: !35, line: 41, baseType: !1844, size: 64, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!732}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !1840, file: !35, line: 42, baseType: !1848, size: 64, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!202}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !1840, file: !35, line: 43, baseType: !1852, size: 64, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!1855, !1857}
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !35, line: 19, flags: DIFlagFwdDecl)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !1840, file: !35, line: 44, baseType: !1860, size: 64, offset: 256)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!1855}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !1840, file: !35, line: 45, baseType: !1864, size: 64, offset: 320)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{null, !202}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1774, file: !1724, line: 144, baseType: !1868, size: 64, offset: 320)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!1855, !1729}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1774, file: !1724, line: 145, baseType: !1872, size: 64, offset: 384)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{null, !1729, !1875, !1876}
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1723, file: !1724, line: 70, baseType: !1878, size: 64, offset: 384)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1880, line: 123, size: 1024, elements: !1881)
!1880 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1881 = !{!1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !2004, !2005, !2006, !2007, !2008}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1879, file: !1880, line: 124, baseType: !308, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1879, file: !1880, line: 125, baseType: !308, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1879, file: !1880, line: 135, baseType: !1878, size: 64, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1879, file: !1880, line: 136, baseType: !687, size: 64, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1879, file: !1880, line: 138, baseType: !332, size: 192, align: 64, offset: 192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1879, file: !1880, line: 140, baseType: !1855, size: 64, offset: 384)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1879, file: !1880, line: 141, baseType: !7, size: 32, offset: 448)
!1889 = !DIDerivedType(tag: DW_TAG_member, scope: !1879, file: !1880, line: 142, baseType: !1890, size: 256, offset: 512)
!1890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1879, file: !1880, line: 142, size: 256, elements: !1891)
!1891 = !{!1892, !1944, !1948}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1890, file: !1880, line: 143, baseType: !1893, size: 192)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1880, line: 91, size: 192, elements: !1894)
!1894 = !{!1895, !1896, !1897}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !1893, file: !1880, line: 92, baseType: !201, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1893, file: !1880, line: 94, baseType: !443, size: 64, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1893, file: !1880, line: 100, baseType: !1898, size: 64, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1880, line: 180, size: 704, elements: !1900)
!1900 = !{!1901, !1902, !1903, !1916, !1917, !1918, !1942, !1943}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1899, file: !1880, line: 182, baseType: !1878, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1899, file: !1880, line: 183, baseType: !7, size: 32, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !1899, file: !1880, line: 186, baseType: !1904, size: 192, offset: 128)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1905, line: 19, size: 192, elements: !1906)
!1905 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1906 = !{!1907, !1914, !1915}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1904, file: !1905, line: 20, baseType: !1908, size: 128)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1909, line: 292, size: 128, elements: !1910)
!1909 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1910 = !{!1911, !1912, !1913}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1908, file: !1909, line: 293, baseType: !249)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1908, file: !1909, line: 295, baseType: !544, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1908, file: !1909, line: 296, baseType: !202, size: 64, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1904, file: !1905, line: 21, baseType: !7, size: 32, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1904, file: !1905, line: 22, baseType: !7, size: 32, offset: 160)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !1899, file: !1880, line: 187, baseType: !296, size: 32, offset: 320)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !1899, file: !1880, line: 188, baseType: !296, size: 32, offset: 352)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !1899, file: !1880, line: 189, baseType: !1919, size: 64, offset: 384)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1880, line: 168, size: 320, elements: !1921)
!1921 = !{!1922, !1926, !1930, !1934, !1938}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1920, file: !1880, line: 169, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{!232, !861, !1898}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1920, file: !1880, line: 171, baseType: !1927, size: 64, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!232, !1878, !687, !588}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1920, file: !1880, line: 173, baseType: !1931, size: 64, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{!232, !1878}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1920, file: !1880, line: 174, baseType: !1935, size: 64, offset: 192)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = !DISubroutineType(types: !1937)
!1937 = !{!232, !1878, !1878, !687}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1920, file: !1880, line: 176, baseType: !1939, size: 64, offset: 256)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!232, !861, !1878, !1898}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !1899, file: !1880, line: 192, baseType: !207, size: 128, offset: 448)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !1899, file: !1880, line: 194, baseType: !1065, size: 128, offset: 576)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1890, file: !1880, line: 144, baseType: !1945, size: 64)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1880, line: 103, size: 64, elements: !1946)
!1946 = !{!1947}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !1945, file: !1880, line: 104, baseType: !1878, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1890, file: !1880, line: 145, baseType: !1949, size: 256)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1880, line: 107, size: 256, elements: !1950)
!1950 = !{!1951, !1999, !2002, !2003}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1949, file: !1880, line: 108, baseType: !1952, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1880, line: 217, size: 768, elements: !1955)
!1955 = !{!1956, !1976, !1980, !1981, !1982, !1983, !1984, !1988, !1989, !1990, !1991, !1995}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1954, file: !1880, line: 222, baseType: !1957, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!232, !1960}
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1880, line: 197, size: 1088, elements: !1962)
!1962 = !{!1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1961, file: !1880, line: 199, baseType: !1878, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1961, file: !1880, line: 200, baseType: !934, size: 64, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !1961, file: !1880, line: 201, baseType: !861, size: 64, offset: 128)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1961, file: !1880, line: 202, baseType: !202, size: 64, offset: 192)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1961, file: !1880, line: 205, baseType: !267, size: 192, offset: 256)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !1961, file: !1880, line: 206, baseType: !267, size: 192, offset: 448)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1961, file: !1880, line: 207, baseType: !232, size: 32, offset: 640)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1961, file: !1880, line: 208, baseType: !207, size: 128, offset: 704)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !1961, file: !1880, line: 209, baseType: !713, size: 64, offset: 832)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1961, file: !1880, line: 211, baseType: !867, size: 64, offset: 896)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !1961, file: !1880, line: 212, baseType: !732, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !1961, file: !1880, line: 213, baseType: !732, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1961, file: !1880, line: 214, baseType: !516, size: 64, offset: 1024)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1954, file: !1880, line: 223, baseType: !1977, size: 64, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{null, !1960}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !1954, file: !1880, line: 236, baseType: !895, size: 64, offset: 128)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !1954, file: !1880, line: 238, baseType: !882, size: 64, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !1954, file: !1880, line: 239, baseType: !891, size: 64, offset: 256)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !1954, file: !1880, line: 240, baseType: !887, size: 64, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1954, file: !1880, line: 242, baseType: !1985, size: 64, offset: 384)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{!939, !1960, !713, !867, !751}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1954, file: !1880, line: 252, baseType: !867, size: 64, offset: 448)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !1954, file: !1880, line: 259, baseType: !732, size: 8, offset: 512)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1954, file: !1880, line: 260, baseType: !1985, size: 64, offset: 576)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1954, file: !1880, line: 263, baseType: !1992, size: 64, offset: 640)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!1015, !1960, !1017}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1954, file: !1880, line: 266, baseType: !1996, size: 64, offset: 704)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{!232, !1960, !487}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1949, file: !1880, line: 109, baseType: !2000, size: 64, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1880, line: 31, flags: DIFlagFwdDecl)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1949, file: !1880, line: 110, baseType: !751, size: 64, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !1949, file: !1880, line: 111, baseType: !1878, size: 64, offset: 192)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1879, file: !1880, line: 148, baseType: !202, size: 64, offset: 768)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1879, file: !1880, line: 154, baseType: !342, size: 64, offset: 832)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1879, file: !1880, line: 156, baseType: !230, size: 16, offset: 896)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1879, file: !1880, line: 157, baseType: !588, size: 16, offset: 912)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !1879, file: !1880, line: 158, baseType: !2009, size: 64, offset: 960)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1880, line: 32, flags: DIFlagFwdDecl)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1723, file: !1724, line: 71, baseType: !2012, size: 32, offset: 448)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2013, line: 19, size: 32, elements: !2014)
!2013 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2014 = !{!2015}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2012, file: !2013, line: 20, baseType: !303, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1723, file: !1724, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1723, file: !1724, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1723, file: !1724, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1723, file: !1724, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1723, file: !1724, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1720, file: !47, line: 463, baseType: !2022, size: 64, offset: 512)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1720, file: !47, line: 465, baseType: !2024, size: 64, offset: 576)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !47, line: 36, flags: DIFlagFwdDecl)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1720, file: !47, line: 467, baseType: !687, size: 64, offset: 640)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1720, file: !47, line: 468, baseType: !2028, size: 64, offset: 704)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2030)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !47, line: 87, size: 384, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2038, !2043, !2047}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2030, file: !47, line: 88, baseType: !687, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2030, file: !47, line: 89, baseType: !1802, size: 64, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2030, file: !47, line: 90, baseType: !2035, size: 64, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{!232, !2022, !1757}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2030, file: !47, line: 91, baseType: !2039, size: 64, offset: 192)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{!713, !2022, !2042, !1875, !1876}
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2030, file: !47, line: 93, baseType: !2044, size: 64, offset: 256)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{null, !2022}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2030, file: !47, line: 95, baseType: !2048, size: 64, offset: 320)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2050)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !54, line: 278, size: 1472, elements: !2051)
!2051 = !{!2052, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !2050, file: !54, line: 279, baseType: !2053, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{!232, !2022}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2050, file: !54, line: 280, baseType: !2044, size: 64, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2050, file: !54, line: 281, baseType: !2053, size: 64, offset: 128)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2050, file: !54, line: 282, baseType: !2053, size: 64, offset: 192)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !2050, file: !54, line: 283, baseType: !2053, size: 64, offset: 256)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !2050, file: !54, line: 284, baseType: !2053, size: 64, offset: 320)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !2050, file: !54, line: 285, baseType: !2053, size: 64, offset: 384)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !2050, file: !54, line: 286, baseType: !2053, size: 64, offset: 448)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !2050, file: !54, line: 287, baseType: !2053, size: 64, offset: 512)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !2050, file: !54, line: 288, baseType: !2053, size: 64, offset: 576)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !2050, file: !54, line: 289, baseType: !2053, size: 64, offset: 640)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !2050, file: !54, line: 290, baseType: !2053, size: 64, offset: 704)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !2050, file: !54, line: 291, baseType: !2053, size: 64, offset: 768)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !2050, file: !54, line: 292, baseType: !2053, size: 64, offset: 832)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !2050, file: !54, line: 293, baseType: !2053, size: 64, offset: 896)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !2050, file: !54, line: 294, baseType: !2053, size: 64, offset: 960)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !2050, file: !54, line: 295, baseType: !2053, size: 64, offset: 1024)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !2050, file: !54, line: 296, baseType: !2053, size: 64, offset: 1088)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !2050, file: !54, line: 297, baseType: !2053, size: 64, offset: 1152)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !2050, file: !54, line: 298, baseType: !2053, size: 64, offset: 1216)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2050, file: !54, line: 299, baseType: !2053, size: 64, offset: 1280)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2050, file: !54, line: 300, baseType: !2053, size: 64, offset: 1344)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !2050, file: !54, line: 301, baseType: !2053, size: 64, offset: 1408)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1720, file: !47, line: 470, baseType: !2079, size: 64, offset: 768)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !2081, line: 82, size: 1408, elements: !2082)
!2081 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!2082 = !{!2083, !2084, !2085, !2086, !2087, !2088, !2089, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2146, !2149, !2150}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2080, file: !2081, line: 83, baseType: !687, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2080, file: !2081, line: 84, baseType: !687, size: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !2080, file: !2081, line: 85, baseType: !2022, size: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !2080, file: !2081, line: 86, baseType: !1802, size: 64, offset: 192)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2080, file: !2081, line: 87, baseType: !1802, size: 64, offset: 256)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !2080, file: !2081, line: 88, baseType: !1802, size: 64, offset: 320)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !2080, file: !2081, line: 90, baseType: !2090, size: 64, offset: 384)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!232, !2022, !2093}
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !41, line: 95, size: 1152, elements: !2095)
!2095 = !{!2096, !2097, !2098, !2099, !2100, !2101, !2102, !2106, !2110, !2111, !2112, !2113, !2114, !2122, !2123, !2124, !2125, !2126, !2127}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2094, file: !41, line: 96, baseType: !687, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2094, file: !41, line: 97, baseType: !2079, size: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2094, file: !41, line: 99, baseType: !778, size: 64, offset: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !2094, file: !41, line: 100, baseType: !687, size: 64, offset: 192)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !2094, file: !41, line: 102, baseType: !732, size: 8, offset: 256)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !2094, file: !41, line: 103, baseType: !40, size: 32, offset: 288)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !2094, file: !41, line: 105, baseType: !2103, size: 64, offset: 320)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2105)
!2105 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !41, line: 105, flags: DIFlagFwdDecl)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !2094, file: !41, line: 106, baseType: !2107, size: 64, offset: 384)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2109)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !41, line: 106, flags: DIFlagFwdDecl)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2094, file: !41, line: 108, baseType: !2053, size: 64, offset: 448)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2094, file: !41, line: 109, baseType: !2044, size: 64, offset: 512)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2094, file: !41, line: 110, baseType: !2053, size: 64, offset: 576)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2094, file: !41, line: 111, baseType: !2044, size: 64, offset: 640)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2094, file: !41, line: 112, baseType: !2115, size: 64, offset: 704)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{!232, !2022, !2118}
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !54, line: 52, baseType: !2119)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !54, line: 50, size: 32, elements: !2120)
!2120 = !{!2121}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2119, file: !54, line: 51, baseType: !232, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2094, file: !41, line: 113, baseType: !2053, size: 64, offset: 768)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2094, file: !41, line: 114, baseType: !1802, size: 64, offset: 832)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2094, file: !41, line: 115, baseType: !1802, size: 64, offset: 896)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2094, file: !41, line: 117, baseType: !2048, size: 64, offset: 960)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !2094, file: !41, line: 118, baseType: !2044, size: 64, offset: 1024)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2094, file: !41, line: 120, baseType: !2128, size: 64, offset: 1088)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !41, line: 120, flags: DIFlagFwdDecl)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2080, file: !2081, line: 91, baseType: !2035, size: 64, offset: 448)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2080, file: !2081, line: 92, baseType: !2053, size: 64, offset: 512)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2080, file: !2081, line: 93, baseType: !2044, size: 64, offset: 576)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2080, file: !2081, line: 94, baseType: !2053, size: 64, offset: 640)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2080, file: !2081, line: 95, baseType: !2044, size: 64, offset: 704)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !2080, file: !2081, line: 97, baseType: !2053, size: 64, offset: 768)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2080, file: !2081, line: 98, baseType: !2053, size: 64, offset: 832)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2080, file: !2081, line: 100, baseType: !2115, size: 64, offset: 896)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2080, file: !2081, line: 101, baseType: !2053, size: 64, offset: 960)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !2080, file: !2081, line: 103, baseType: !2053, size: 64, offset: 1024)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !2080, file: !2081, line: 105, baseType: !2053, size: 64, offset: 1088)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2080, file: !2081, line: 107, baseType: !2048, size: 64, offset: 1152)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !2080, file: !2081, line: 109, baseType: !2143, size: 64, offset: 1216)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2145)
!2145 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !2081, line: 109, flags: DIFlagFwdDecl)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2080, file: !2081, line: 111, baseType: !2147, size: 64, offset: 1280)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !2081, line: 111, flags: DIFlagFwdDecl)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !2080, file: !2081, line: 112, baseType: !793, offset: 1344)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !2080, file: !2081, line: 114, baseType: !732, size: 8, offset: 1344)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1720, file: !47, line: 471, baseType: !2093, size: 64, offset: 832)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1720, file: !47, line: 473, baseType: !202, size: 64, offset: 896)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1720, file: !47, line: 475, baseType: !202, size: 64, offset: 960)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1720, file: !47, line: 480, baseType: !267, size: 192, offset: 1024)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1720, file: !47, line: 484, baseType: !2156, size: 576, offset: 1216)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !47, line: 361, size: 576, elements: !2157)
!2157 = !{!2158, !2159, !2160, !2161, !2162, !2163}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !2156, file: !47, line: 362, baseType: !207, size: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !2156, file: !47, line: 363, baseType: !207, size: 128, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !2156, file: !47, line: 364, baseType: !207, size: 128, offset: 256)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !2156, file: !47, line: 365, baseType: !207, size: 128, offset: 384)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !2156, file: !47, line: 366, baseType: !732, size: 8, offset: 512)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2156, file: !47, line: 367, baseType: !46, size: 32, offset: 544)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1720, file: !47, line: 485, baseType: !2165, size: 2304, offset: 1792)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !54, line: 565, size: 2304, elements: !2166)
!2166 = !{!2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2192, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2283, !2287}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !2165, file: !54, line: 566, baseType: !2118, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !2165, file: !54, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !2165, file: !54, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !2165, file: !54, line: 569, baseType: !732, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !2165, file: !54, line: 570, baseType: !732, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !2165, file: !54, line: 571, baseType: !732, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !2165, file: !54, line: 572, baseType: !732, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !2165, file: !54, line: 573, baseType: !732, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !2165, file: !54, line: 574, baseType: !732, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !2165, file: !54, line: 575, baseType: !732, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !2165, file: !54, line: 576, baseType: !732, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !2165, file: !54, line: 577, baseType: !296, size: 32, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2165, file: !54, line: 578, baseType: !249, offset: 96)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2165, file: !54, line: 580, baseType: !207, size: 128, offset: 128)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2165, file: !54, line: 581, baseType: !2182, size: 192, offset: 256)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2183, line: 26, size: 192, elements: !2184)
!2183 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2184 = !{!2185, !2186}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2182, file: !2183, line: 27, baseType: !7, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2182, file: !2183, line: 28, baseType: !2187, size: 128, offset: 64)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2188, line: 43, size: 128, elements: !2189)
!2188 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2189 = !{!2190, !2191}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2187, file: !2188, line: 44, baseType: !404)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2187, file: !2188, line: 45, baseType: !207, size: 128)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !2165, file: !54, line: 582, baseType: !2193, size: 64, offset: 448)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !2195, line: 43, size: 1472, elements: !2196)
!2195 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!2196 = !{!2197, !2198, !2199, !2200, !2201, !2204, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2194, file: !2195, line: 44, baseType: !687, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2194, file: !2195, line: 45, baseType: !232, size: 32, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2194, file: !2195, line: 46, baseType: !207, size: 128, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2194, file: !2195, line: 47, baseType: !249, offset: 256)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2194, file: !2195, line: 48, baseType: !2202, size: 64, offset: 256)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !54, line: 533, flags: DIFlagFwdDecl)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2194, file: !2195, line: 49, baseType: !2205, size: 320, offset: 320)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2206, line: 11, size: 320, elements: !2207)
!2206 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2207 = !{!2208, !2209, !2210, !2215}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2205, file: !2206, line: 16, baseType: !787, size: 128)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2205, file: !2206, line: 17, baseType: !201, size: 64, offset: 128)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2205, file: !2206, line: 18, baseType: !2211, size: 64, offset: 192)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{null, !2214}
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2205, file: !2206, line: 19, baseType: !296, size: 32, offset: 256)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2194, file: !2195, line: 50, baseType: !201, size: 64, offset: 640)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !2194, file: !2195, line: 51, baseType: !387, size: 64, offset: 704)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !2194, file: !2195, line: 52, baseType: !387, size: 64, offset: 768)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !2194, file: !2195, line: 53, baseType: !387, size: 64, offset: 832)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !2194, file: !2195, line: 54, baseType: !387, size: 64, offset: 896)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !2194, file: !2195, line: 55, baseType: !387, size: 64, offset: 960)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !2194, file: !2195, line: 56, baseType: !201, size: 64, offset: 1024)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !2194, file: !2195, line: 57, baseType: !201, size: 64, offset: 1088)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !2194, file: !2195, line: 58, baseType: !201, size: 64, offset: 1152)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !2194, file: !2195, line: 59, baseType: !201, size: 64, offset: 1216)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !2194, file: !2195, line: 60, baseType: !201, size: 64, offset: 1280)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2194, file: !2195, line: 61, baseType: !2022, size: 64, offset: 1344)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2194, file: !2195, line: 62, baseType: !732, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !2194, file: !2195, line: 63, baseType: !732, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !2165, file: !54, line: 583, baseType: !732, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !2165, file: !54, line: 584, baseType: !732, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !2165, file: !54, line: 585, baseType: !732, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !2165, file: !54, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !2165, file: !54, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !2165, file: !54, line: 592, baseType: !379, size: 512, offset: 576)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2165, file: !54, line: 593, baseType: !342, size: 64, offset: 1088)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2165, file: !54, line: 594, baseType: !2238, size: 256, offset: 1152)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2239, line: 102, size: 256, elements: !2240)
!2239 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2240 = !{!2241, !2242, !2243}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2238, file: !2239, line: 103, baseType: !271, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2238, file: !2239, line: 104, baseType: !207, size: 128, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2238, file: !2239, line: 105, baseType: !2244, size: 64, offset: 192)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2239, line: 21, baseType: !2245)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = !DISubroutineType(types: !2247)
!2247 = !{null, !2248}
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !2165, file: !54, line: 595, baseType: !1065, size: 128, offset: 1408)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2165, file: !54, line: 596, baseType: !2202, size: 64, offset: 1536)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !2165, file: !54, line: 597, baseType: !308, size: 32, offset: 1600)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !2165, file: !54, line: 598, baseType: !308, size: 32, offset: 1632)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !2165, file: !54, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !2165, file: !54, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !2165, file: !54, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !2165, file: !54, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !2165, file: !54, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !2165, file: !54, line: 604, baseType: !732, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !2165, file: !54, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !2165, file: !54, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !2165, file: !54, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !2165, file: !54, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !2165, file: !54, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !2165, file: !54, line: 610, baseType: !7, size: 32, offset: 1696)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2165, file: !54, line: 611, baseType: !53, size: 32, offset: 1728)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !2165, file: !54, line: 612, baseType: !61, size: 32, offset: 1760)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !2165, file: !54, line: 613, baseType: !232, size: 32, offset: 1792)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !2165, file: !54, line: 614, baseType: !232, size: 32, offset: 1824)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !2165, file: !54, line: 615, baseType: !342, size: 64, offset: 1856)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !2165, file: !54, line: 616, baseType: !342, size: 64, offset: 1920)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !2165, file: !54, line: 617, baseType: !342, size: 64, offset: 1984)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !2165, file: !54, line: 618, baseType: !342, size: 64, offset: 2048)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !2165, file: !54, line: 620, baseType: !2274, size: 64, offset: 2112)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !54, line: 536, size: 256, elements: !2276)
!2276 = !{!2277, !2278, !2279, !2280}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2275, file: !54, line: 537, baseType: !249)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2275, file: !54, line: 538, baseType: !7, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !2275, file: !54, line: 540, baseType: !207, size: 128, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !2275, file: !54, line: 543, baseType: !2281, size: 64, offset: 192)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !54, line: 534, flags: DIFlagFwdDecl)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !2165, file: !54, line: 621, baseType: !2284, size: 64, offset: 2176)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{null, !2022, !1283}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !2165, file: !54, line: 622, baseType: !2288, size: 64, offset: 2240)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !54, line: 622, flags: DIFlagFwdDecl)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1720, file: !47, line: 486, baseType: !2291, size: 64, offset: 4096)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !54, line: 642, size: 1792, elements: !2293)
!2293 = !{!2294, !2295, !2296, !2300, !2301, !2302}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2292, file: !54, line: 643, baseType: !2050, size: 1472)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2292, file: !54, line: 644, baseType: !2053, size: 64, offset: 1472)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !2292, file: !54, line: 645, baseType: !2297, size: 64, offset: 1536)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2298 = !DISubroutineType(types: !2299)
!2299 = !{null, !2022, !732}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2292, file: !54, line: 646, baseType: !2053, size: 64, offset: 1600)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !2292, file: !54, line: 647, baseType: !2044, size: 64, offset: 1664)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !2292, file: !54, line: 648, baseType: !2044, size: 64, offset: 1728)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1720, file: !47, line: 493, baseType: !2304, size: 64, offset: 4160)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !2306, line: 13, flags: DIFlagFwdDecl)
!2306 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1720, file: !47, line: 499, baseType: !207, size: 128, offset: 4224)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1720, file: !47, line: 502, baseType: !2309, size: 64, offset: 4352)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2311)
!2311 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !47, line: 502, flags: DIFlagFwdDecl)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1720, file: !47, line: 504, baseType: !2313, size: 64, offset: 4416)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1720, file: !47, line: 505, baseType: !342, size: 64, offset: 4480)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1720, file: !47, line: 510, baseType: !342, size: 64, offset: 4544)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1720, file: !47, line: 511, baseType: !2317, size: 64, offset: 4608)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2319)
!2319 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !47, line: 511, flags: DIFlagFwdDecl)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1720, file: !47, line: 513, baseType: !2321, size: 64, offset: 4672)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !47, line: 288, size: 128, elements: !2323)
!2323 = !{!2324, !2325}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2322, file: !47, line: 293, baseType: !7, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !2322, file: !47, line: 294, baseType: !201, size: 64, offset: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1720, file: !47, line: 515, baseType: !207, size: 128, offset: 4736)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1720, file: !47, line: 526, baseType: !2328, offset: 4864)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !2329, line: 5, elements: !263)
!2329 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1720, file: !47, line: 528, baseType: !2331, size: 64, offset: 4864)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !2333, line: 14, flags: DIFlagFwdDecl)
!2333 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1720, file: !47, line: 529, baseType: !2335, size: 64, offset: 4928)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !2337, line: 17, size: 192, elements: !2338)
!2337 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!2338 = !{!2339, !2340, !2423}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !2336, file: !2337, line: 18, baseType: !2335, size: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2336, file: !2337, line: 19, baseType: !2341, size: 64, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2343)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !2337, line: 110, size: 1152, elements: !2344)
!2344 = !{!2345, !2349, !2353, !2359, !2365, !2369, !2373, !2378, !2382, !2383, !2387, !2391, !2395, !2406, !2407, !2408, !2409, !2419}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2343, file: !2337, line: 111, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DISubroutineType(types: !2348)
!2348 = !{!2335, !2335}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !2343, file: !2337, line: 112, baseType: !2350, size: 64, offset: 64)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = !DISubroutineType(types: !2352)
!2352 = !{null, !2335}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !2343, file: !2337, line: 113, baseType: !2354, size: 64, offset: 128)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{!732, !2357}
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2336)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !2343, file: !2337, line: 114, baseType: !2360, size: 64, offset: 192)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!2361 = !DISubroutineType(types: !2362)
!2362 = !{!1855, !2357, !2363}
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !2343, file: !2337, line: 116, baseType: !2366, size: 64, offset: 256)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{!732, !2357, !687}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !2343, file: !2337, line: 118, baseType: !2370, size: 64, offset: 320)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!232, !2357, !687, !7, !202, !867}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !2343, file: !2337, line: 123, baseType: !2374, size: 64, offset: 384)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = !DISubroutineType(types: !2376)
!2376 = !{!232, !2357, !687, !2377, !867}
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !2343, file: !2337, line: 126, baseType: !2379, size: 64, offset: 448)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!687, !2357}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !2343, file: !2337, line: 127, baseType: !2379, size: 64, offset: 512)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !2343, file: !2337, line: 128, baseType: !2384, size: 64, offset: 576)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{!2335, !2357}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !2343, file: !2337, line: 130, baseType: !2388, size: 64, offset: 640)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{!2335, !2357, !2335}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !2343, file: !2337, line: 133, baseType: !2392, size: 64, offset: 704)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!2335, !2357, !687}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !2343, file: !2337, line: 135, baseType: !2396, size: 64, offset: 768)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = !DISubroutineType(types: !2398)
!2398 = !{!232, !2357, !687, !687, !7, !7, !2399}
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !2337, line: 43, size: 640, elements: !2401)
!2401 = !{!2402, !2403, !2404}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2400, file: !2337, line: 44, baseType: !2335, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2400, file: !2337, line: 45, baseType: !7, size: 32, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2400, file: !2337, line: 46, baseType: !2405, size: 512, offset: 128)
!2405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 512, elements: !418)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !2343, file: !2337, line: 140, baseType: !2388, size: 64, offset: 832)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !2343, file: !2337, line: 143, baseType: !2384, size: 64, offset: 896)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !2343, file: !2337, line: 145, baseType: !2346, size: 64, offset: 960)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !2343, file: !2337, line: 146, baseType: !2410, size: 64, offset: 1024)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DISubroutineType(types: !2412)
!2412 = !{!232, !2357, !2413}
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !2337, line: 29, size: 128, elements: !2415)
!2415 = !{!2416, !2417, !2418}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2414, file: !2337, line: 30, baseType: !7, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2414, file: !2337, line: 31, baseType: !7, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !2414, file: !2337, line: 32, baseType: !2357, size: 64, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !2343, file: !2337, line: 148, baseType: !2420, size: 64, offset: 1088)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!232, !2357, !2022}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2336, file: !2337, line: 20, baseType: !2022, size: 64, offset: 128)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1720, file: !47, line: 534, baseType: !746, size: 32, offset: 4992)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1720, file: !47, line: 535, baseType: !296, size: 32, offset: 5024)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1720, file: !47, line: 537, baseType: !249, offset: 5056)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1720, file: !47, line: 538, baseType: !207, size: 128, offset: 5056)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1720, file: !47, line: 540, baseType: !2429, size: 64, offset: 5184)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !2431, line: 54, size: 960, elements: !2432)
!2431 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2439, !2443, !2447, !2448, !2449, !2450, !2454, !2458, !2459}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2430, file: !2431, line: 55, baseType: !687, size: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2430, file: !2431, line: 56, baseType: !778, size: 64, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !2430, file: !2431, line: 58, baseType: !1802, size: 64, offset: 128)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2430, file: !2431, line: 59, baseType: !1802, size: 64, offset: 192)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !2430, file: !2431, line: 60, baseType: !1729, size: 64, offset: 256)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !2430, file: !2431, line: 62, baseType: !2035, size: 64, offset: 320)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2430, file: !2431, line: 63, baseType: !2440, size: 64, offset: 384)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!713, !2022, !2042}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !2430, file: !2431, line: 65, baseType: !2444, size: 64, offset: 448)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{null, !2429}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !2430, file: !2431, line: 66, baseType: !2044, size: 64, offset: 512)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !2430, file: !2431, line: 68, baseType: !2053, size: 64, offset: 576)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !2430, file: !2431, line: 70, baseType: !1838, size: 64, offset: 640)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2430, file: !2431, line: 71, baseType: !2451, size: 64, offset: 704)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!1855, !2022}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2430, file: !2431, line: 73, baseType: !2455, size: 64, offset: 768)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{null, !2022, !1875, !1876}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2430, file: !2431, line: 75, baseType: !2048, size: 64, offset: 832)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2430, file: !2431, line: 77, baseType: !2147, size: 64, offset: 896)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1720, file: !47, line: 541, baseType: !1802, size: 64, offset: 5248)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1720, file: !47, line: 543, baseType: !2044, size: 64, offset: 5312)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1720, file: !47, line: 544, baseType: !2463, size: 64, offset: 5376)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !47, line: 45, flags: DIFlagFwdDecl)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1720, file: !47, line: 545, baseType: !2466, size: 64, offset: 5440)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !47, line: 47, flags: DIFlagFwdDecl)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1720, file: !47, line: 547, baseType: !732, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1720, file: !47, line: 548, baseType: !732, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1720, file: !47, line: 549, baseType: !732, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1720, file: !47, line: 550, baseType: !732, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1688, file: !1689, line: 69, baseType: !1729, size: 64, offset: 5952)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1688, file: !1689, line: 70, baseType: !232, size: 32, offset: 6016)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1688, file: !1689, line: 70, baseType: !232, size: 32, offset: 6048)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1688, file: !1689, line: 71, baseType: !2476, size: 64, offset: 6080)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1689, line: 48, size: 808, elements: !2478)
!2478 = !{!2479, !2483}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2477, file: !1689, line: 49, baseType: !2480, size: 296)
!2480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 296, elements: !2481)
!2481 = !{!2482}
!2482 = !DISubrange(count: 37)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2477, file: !1689, line: 50, baseType: !2484, size: 512, offset: 296)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 512, elements: !1764)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1688, file: !1689, line: 75, baseType: !2486, size: 448, offset: 6144)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !2239, line: 124, size: 448, elements: !2487)
!2487 = !{!2488, !2489, !2490}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2486, file: !2239, line: 125, baseType: !2238, size: 256)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2486, file: !2239, line: 126, baseType: !914, size: 128, align: 64, offset: 256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2486, file: !2239, line: 129, baseType: !2491, size: 64, offset: 384)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2492 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2239, line: 18, flags: DIFlagFwdDecl)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1671, file: !1672, line: 39, baseType: !7, size: 32, offset: 896)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1671, file: !1672, line: 41, baseType: !249, offset: 928)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1671, file: !1672, line: 42, baseType: !2496, size: 64, offset: 960)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1689, line: 167, size: 8512, elements: !2498)
!2498 = !{!2499, !2500, !2501, !2502, !2504, !2505, !2506, !2517, !2518, !2699, !3397, !3398, !3399, !3400, !3401, !3402, !3405, !3406, !3409, !3410, !3411, !3414}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2497, file: !1689, line: 171, baseType: !232, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2497, file: !1689, line: 172, baseType: !232, size: 32, offset: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2497, file: !1689, line: 173, baseType: !232, size: 32, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2497, file: !1689, line: 176, baseType: !2503, size: 256, offset: 96)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 256, elements: !652)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2497, file: !1689, line: 178, baseType: !230, size: 16, offset: 352)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2497, file: !1689, line: 179, baseType: !230, size: 16, offset: 368)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2497, file: !1689, line: 186, baseType: !2507, size: 64, offset: 384)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1689, line: 149, size: 256, elements: !2509)
!2509 = !{!2510, !2511, !2512, !2513}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2508, file: !1689, line: 150, baseType: !914, size: 128, align: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2508, file: !1689, line: 151, baseType: !232, size: 32, offset: 128)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2508, file: !1689, line: 152, baseType: !1687, size: 64, offset: 192)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2508, file: !1689, line: 153, baseType: !2514, offset: 256)
!2514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1687, elements: !2515)
!2515 = !{!2516}
!2516 = !DISubrange(count: -1)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2497, file: !1689, line: 187, baseType: !1688, size: 6592, offset: 448)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2497, file: !1689, line: 189, baseType: !2519, size: 64, offset: 7040)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2521)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !68, line: 1844, size: 960, elements: !2522)
!2522 = !{!2523, !2625, !2629, !2633, !2637, !2641, !2642, !2646, !2650, !2654, !2660, !2664, !2690, !2694, !2695}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2521, file: !68, line: 1845, baseType: !2524, size: 64)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{!2527, !2528}
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1672, line: 515, baseType: !7)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1672, line: 203, size: 832, elements: !2530)
!2530 = !{!2531, !2532, !2533, !2534, !2535, !2536, !2537, !2539, !2540, !2541, !2549, !2554, !2555, !2580, !2581, !2582, !2583, !2584, !2624}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2529, file: !1672, line: 204, baseType: !2528, size: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2529, file: !1672, line: 205, baseType: !2496, size: 64, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2529, file: !1672, line: 206, baseType: !7, size: 32, offset: 128)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2529, file: !1672, line: 210, baseType: !230, size: 16, offset: 160)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2529, file: !1672, line: 211, baseType: !230, size: 16, offset: 176)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2529, file: !1672, line: 212, baseType: !230, size: 16, offset: 192)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2529, file: !1672, line: 213, baseType: !2538, size: 8, offset: 208)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1672, line: 58, baseType: !453)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2529, file: !1672, line: 214, baseType: !453, size: 8, offset: 216)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2529, file: !1672, line: 215, baseType: !308, size: 32, offset: 224)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2529, file: !1672, line: 217, baseType: !2542, size: 192, offset: 256)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !2543, line: 37, size: 192, elements: !2544)
!2543 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!2544 = !{!2545, !2546, !2547, !2548}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !2542, file: !2543, line: 38, baseType: !1692, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !2542, file: !2543, line: 40, baseType: !7, size: 32, offset: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !2542, file: !2543, line: 42, baseType: !7, size: 32, offset: 96)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !2542, file: !2543, line: 44, baseType: !7, size: 32, offset: 128)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2529, file: !1672, line: 219, baseType: !2550, size: 64, offset: 448)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1672, line: 19, baseType: !2552)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{null, !2528}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2529, file: !1672, line: 221, baseType: !202, size: 64, offset: 512)
!2555 = !DIDerivedType(tag: DW_TAG_member, scope: !2529, file: !1672, line: 240, baseType: !2556, size: 64, offset: 576)
!2556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2529, file: !1672, line: 240, size: 64, elements: !2557)
!2557 = !{!2558}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !2556, file: !1672, line: 242, baseType: !2559, size: 64)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2561, line: 313, size: 832, elements: !2562)
!2561 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2562 = !{!2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2578}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !2560, file: !2561, line: 314, baseType: !2528, size: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !2560, file: !2561, line: 316, baseType: !2542, size: 192, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !2560, file: !2561, line: 318, baseType: !230, size: 16, offset: 256)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !2560, file: !2561, line: 319, baseType: !230, size: 16, offset: 272)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !2560, file: !2561, line: 320, baseType: !230, size: 16, offset: 288)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !2560, file: !2561, line: 321, baseType: !230, size: 16, offset: 304)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !2560, file: !2561, line: 323, baseType: !2542, size: 192, offset: 320)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !2560, file: !2561, line: 325, baseType: !2238, size: 256, offset: 512)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !2560, file: !2561, line: 327, baseType: !2572, size: 64, offset: 768)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !2543, line: 31, size: 128, elements: !2574)
!2574 = !{!2575, !2576, !2577}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !2573, file: !2543, line: 32, baseType: !568, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !2573, file: !2543, line: 33, baseType: !7, size: 32, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !2573, file: !2543, line: 34, baseType: !7, size: 32, offset: 96)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !2560, file: !2561, line: 328, baseType: !2579, offset: 832)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2573, elements: !2515)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2529, file: !1672, line: 246, baseType: !230, size: 16, offset: 640)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2529, file: !1672, line: 252, baseType: !230, size: 16, offset: 656)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2529, file: !1672, line: 254, baseType: !308, size: 32, offset: 672)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2529, file: !1672, line: 256, baseType: !2572, size: 64, offset: 704)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2529, file: !1672, line: 258, baseType: !2585, size: 64, offset: 768)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2561, line: 682, size: 2368, elements: !2587)
!2587 = !{!2588, !2591, !2592, !2613, !2614, !2615, !2616, !2617, !2622, !2623}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !2586, file: !2561, line: 683, baseType: !2589, size: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !481, line: 117, flags: DIFlagFwdDecl)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !2586, file: !2561, line: 684, baseType: !7, size: 32, offset: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !2586, file: !2561, line: 686, baseType: !2593, size: 448, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !2594, line: 26, baseType: !2595)
!2594 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !2594, line: 16, size: 448, elements: !2596)
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2602, !2607, !2612}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2595, file: !2594, line: 17, baseType: !249)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !2595, file: !2594, line: 18, baseType: !232, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !2595, file: !2594, line: 19, baseType: !232, size: 32, offset: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2595, file: !2594, line: 20, baseType: !1135, size: 64, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !2595, file: !2594, line: 22, baseType: !202, size: 64, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2595, file: !2594, line: 23, baseType: !2603, size: 64, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !2594, line: 13, baseType: !2605)
!2605 = !DISubroutineType(types: !2606)
!2606 = !{!202, !544, !202}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2595, file: !2594, line: 24, baseType: !2608, size: 64, offset: 256)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !2594, line: 14, baseType: !2610)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{null, !202, !202}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2595, file: !2594, line: 25, baseType: !1065, size: 128, offset: 320)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !2586, file: !2561, line: 687, baseType: !2593, size: 448, offset: 576)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !2586, file: !2561, line: 689, baseType: !2593, size: 448, offset: 1024)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !2586, file: !2561, line: 690, baseType: !2593, size: 448, offset: 1472)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !2586, file: !2561, line: 697, baseType: !249, offset: 1920)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !2586, file: !2561, line: 698, baseType: !2618, size: 128, offset: 1920)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2561, line: 554, size: 128, elements: !2619)
!2619 = !{!2620, !2621}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2618, file: !2561, line: 555, baseType: !2528, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2618, file: !2561, line: 556, baseType: !2528, size: 64, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !2586, file: !2561, line: 699, baseType: !2238, size: 256, offset: 2048)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !2586, file: !2561, line: 700, baseType: !2491, size: 64, offset: 2304)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2529, file: !1672, line: 265, baseType: !2579, offset: 832)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2521, file: !68, line: 1846, baseType: !2626, size: 64, offset: 64)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{!232, !1670, !1211}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2521, file: !68, line: 1847, baseType: !2630, size: 64, offset: 128)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{null, !2496, !1211}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2521, file: !68, line: 1848, baseType: !2634, size: 64, offset: 192)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{!232, !1670, !1692, !568, !7}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2521, file: !68, line: 1849, baseType: !2638, size: 64, offset: 256)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{!232, !1670, !1211, !7, !201}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2521, file: !68, line: 1850, baseType: !2638, size: 64, offset: 320)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2521, file: !68, line: 1851, baseType: !2643, size: 64, offset: 384)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!7, !2496, !7}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2521, file: !68, line: 1853, baseType: !2647, size: 64, offset: 448)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{null, !2496}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2521, file: !68, line: 1854, baseType: !2651, size: 64, offset: 512)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!232, !2496}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2521, file: !68, line: 1855, baseType: !2655, size: 64, offset: 576)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{!232, !1670, !2658}
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !12, line: 51, flags: DIFlagFwdDecl)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2521, file: !68, line: 1857, baseType: !2661, size: 64, offset: 640)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 64)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{null, !1670, !201}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2521, file: !68, line: 1858, baseType: !2665, size: 64, offset: 704)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{!232, !2496, !1692, !7, !2668, !202}
!2668 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !68, line: 354, baseType: !2669)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!232, !2672, !7, !202}
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2674, line: 106, size: 512, elements: !2675)
!2674 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2675 = !{!2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2685, !2686}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2673, file: !2674, line: 107, baseType: !343, size: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2673, file: !2674, line: 108, baseType: !343, size: 64, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2673, file: !2674, line: 109, baseType: !343, size: 64, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2673, file: !2674, line: 110, baseType: !454, size: 8, offset: 192)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2673, file: !2674, line: 111, baseType: !454, size: 8, offset: 200)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2673, file: !2674, line: 112, baseType: !454, size: 8, offset: 208)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2673, file: !2674, line: 113, baseType: !454, size: 8, offset: 216)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2673, file: !2674, line: 114, baseType: !2684, size: 32, offset: 224)
!2684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 32, elements: !1227)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2673, file: !2674, line: 115, baseType: !343, size: 64, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2673, file: !2674, line: 116, baseType: !2687, size: 192, offset: 320)
!2687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 192, elements: !2688)
!2688 = !{!2689}
!2689 = !DISubrange(count: 24)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2521, file: !68, line: 1860, baseType: !2691, size: 64, offset: 768)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{!713, !2496, !2042}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2521, file: !68, line: 1861, baseType: !778, size: 64, offset: 832)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2521, file: !68, line: 1862, baseType: !2696, size: 64, offset: 896)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2698)
!2698 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !68, line: 41, flags: DIFlagFwdDecl)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2497, file: !1689, line: 190, baseType: !2700, size: 64, offset: 7104)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !68, line: 399, size: 14464, elements: !2702)
!2702 = !{!2703, !2919, !3041, !3042, !3045, !3048, !3144, !3145, !3146, !3148, !3149, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3265, !3274, !3275, !3276, !3277, !3278, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2701, file: !68, line: 400, baseType: !2704, size: 64)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64)
!2705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !68, line: 130, size: 2176, elements: !2706)
!2706 = !{!2707, !2708, !2711, !2801, !2802, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2816, !2823, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2917, !2918}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2705, file: !68, line: 131, baseType: !2700, size: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2705, file: !68, line: 132, baseType: !2709, size: 64, offset: 64)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !68, line: 132, flags: DIFlagFwdDecl)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2705, file: !68, line: 133, baseType: !2712, size: 64, offset: 128)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !2714, line: 16, size: 4032, elements: !2715)
!2714 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!2715 = !{!2716, !2722, !2729, !2732, !2733, !2734, !2735, !2736, !2737, !2740, !2741, !2756, !2757, !2758, !2759, !2760, !2762, !2763, !2764, !2765, !2768, !2769, !2770, !2771, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786}
!2716 = !DIDerivedType(tag: DW_TAG_member, scope: !2713, file: !2714, line: 17, baseType: !2717, size: 192)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2713, file: !2714, line: 17, size: 192, elements: !2718)
!2718 = !{!2719, !2720, !2721}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2717, file: !2714, line: 19, baseType: !249)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !2717, file: !2714, line: 27, baseType: !207, size: 128)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2717, file: !2714, line: 32, baseType: !201, size: 64, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2713, file: !2714, line: 38, baseType: !2723, size: 704, offset: 192)
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2239, line: 115, size: 704, elements: !2724)
!2724 = !{!2725, !2726, !2727, !2728}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2723, file: !2239, line: 116, baseType: !2238, size: 256)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2723, file: !2239, line: 117, baseType: !2205, size: 320, offset: 256)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2723, file: !2239, line: 120, baseType: !2491, size: 64, offset: 576)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2723, file: !2239, line: 121, baseType: !232, size: 32, offset: 640)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2713, file: !2714, line: 40, baseType: !2730, size: 64, offset: 896)
!2730 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !467, line: 756, baseType: !2731)
!2731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 64, elements: !472)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !2713, file: !2714, line: 45, baseType: !232, size: 32, offset: 960)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !2713, file: !2714, line: 50, baseType: !232, size: 32, offset: 992)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2713, file: !2714, line: 53, baseType: !201, size: 64, offset: 1024)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !2713, file: !2714, line: 59, baseType: !202, size: 64, offset: 1088)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2713, file: !2714, line: 63, baseType: !2700, size: 64, offset: 1152)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2713, file: !2714, line: 65, baseType: !2738, size: 64, offset: 1216)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !68, line: 40, flags: DIFlagFwdDecl)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2713, file: !2714, line: 71, baseType: !202, size: 64, offset: 1280)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !2713, file: !2714, line: 77, baseType: !2742, size: 192, offset: 1344)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !2743, line: 48, size: 192, elements: !2744)
!2743 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!2744 = !{!2745, !2746, !2747, !2748}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2742, file: !2743, line: 52, baseType: !7, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2742, file: !2743, line: 57, baseType: !7, size: 32, offset: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !2742, file: !2743, line: 62, baseType: !7, size: 32, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2742, file: !2743, line: 67, baseType: !2749, size: 64, offset: 128)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !2743, line: 20, size: 192, elements: !2751)
!2751 = !{!2752, !2753, !2754, !2755}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2750, file: !2743, line: 24, baseType: !201, size: 64)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !2750, file: !2743, line: 29, baseType: !201, size: 64, offset: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !2750, file: !2743, line: 34, baseType: !201, size: 64, offset: 128)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !2750, file: !2743, line: 39, baseType: !249, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !2713, file: !2714, line: 83, baseType: !2709, size: 64, offset: 1536)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !2713, file: !2714, line: 89, baseType: !7, size: 32, offset: 1600)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2713, file: !2714, line: 92, baseType: !230, size: 16, offset: 1632)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !2713, file: !2714, line: 94, baseType: !230, size: 16, offset: 1648)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !2713, file: !2714, line: 96, baseType: !2761, size: 64, offset: 1664)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !2713, file: !2714, line: 99, baseType: !249, offset: 1728)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !2713, file: !2714, line: 104, baseType: !977, size: 320, offset: 1728)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !2713, file: !2714, line: 110, baseType: !308, size: 32, offset: 2048)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2713, file: !2714, line: 116, baseType: !2766, size: 64, offset: 2112)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !2714, line: 9, flags: DIFlagFwdDecl)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !2713, file: !2714, line: 122, baseType: !2766, size: 64, offset: 2176)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !2713, file: !2714, line: 125, baseType: !201, size: 64, offset: 2240)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !2713, file: !2714, line: 127, baseType: !201, size: 64, offset: 2304)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !2713, file: !2714, line: 130, baseType: !2772, size: 448, offset: 2368)
!2772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 448, elements: !2773)
!2773 = !{!2774}
!2774 = !DISubrange(count: 7)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2713, file: !2714, line: 133, baseType: !7, size: 32, offset: 2816)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !2713, file: !2714, line: 135, baseType: !7, size: 32, offset: 2848)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !2713, file: !2714, line: 141, baseType: !308, size: 32, offset: 2880)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !2713, file: !2714, line: 145, baseType: !308, size: 32, offset: 2912)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !2713, file: !2714, line: 148, baseType: !787, size: 128, offset: 2944)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !2713, file: !2714, line: 150, baseType: !787, size: 128, offset: 3072)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2713, file: !2714, line: 152, baseType: !1723, size: 512, offset: 3200)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !2713, file: !2714, line: 155, baseType: !201, size: 64, offset: 3712)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !2713, file: !2714, line: 157, baseType: !201, size: 64, offset: 3776)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !2713, file: !2714, line: 159, baseType: !201, size: 64, offset: 3840)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !2713, file: !2714, line: 175, baseType: !207, size: 128, offset: 3904)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !2713, file: !2714, line: 182, baseType: !2787, offset: 4032)
!2787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2788, elements: !2515)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !2789, line: 16, size: 576, elements: !2790)
!2789 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!2790 = !{!2791, !2793, !2794, !2795, !2796, !2797, !2798, !2800}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !2788, file: !2789, line: 17, baseType: !2792, size: 32)
!2792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1318, size: 32, elements: !1267)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !2788, file: !2789, line: 18, baseType: !1318, size: 16, offset: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !2788, file: !2789, line: 19, baseType: !453, size: 8, offset: 48)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !2788, file: !2789, line: 20, baseType: !453, size: 8, offset: 56)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !2788, file: !2789, line: 21, baseType: !2187, size: 128, offset: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !2788, file: !2789, line: 23, baseType: !917, size: 64, offset: 192)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !2788, file: !2789, line: 24, baseType: !2799, size: 64, offset: 256)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !2788, file: !2789, line: 25, baseType: !2238, size: 256, offset: 320)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2705, file: !68, line: 135, baseType: !7, size: 32, offset: 192)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2705, file: !68, line: 136, baseType: !2803, size: 32, offset: 224)
!2803 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !68, line: 66, baseType: !297)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2705, file: !68, line: 138, baseType: !232, size: 32, offset: 256)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2705, file: !68, line: 139, baseType: !232, size: 32, offset: 288)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2705, file: !68, line: 142, baseType: !7, size: 32, offset: 320)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2705, file: !68, line: 143, baseType: !1692, size: 64, offset: 384)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2705, file: !68, line: 145, baseType: !2528, size: 64, offset: 448)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2705, file: !68, line: 146, baseType: !2528, size: 64, offset: 512)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2705, file: !68, line: 148, baseType: !207, size: 128, offset: 576)
!2811 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !68, line: 157, baseType: !2812, size: 128, offset: 704)
!2812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2705, file: !68, line: 157, size: 128, elements: !2813)
!2813 = !{!2814, !2815}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2812, file: !68, line: 158, baseType: !787, size: 128)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !2812, file: !68, line: 159, baseType: !207, size: 128)
!2816 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !68, line: 167, baseType: !2817, size: 192, offset: 832)
!2817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2705, file: !68, line: 167, size: 192, elements: !2818)
!2818 = !{!2819, !2820, !2821, !2822}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2817, file: !68, line: 168, baseType: !332, size: 192, align: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !2817, file: !68, line: 169, baseType: !2573, size: 128)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !2817, file: !68, line: 170, baseType: !202, size: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2817, file: !68, line: 171, baseType: !232, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !68, line: 180, baseType: !2824, size: 256, offset: 1024)
!2824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2705, file: !68, line: 180, size: 256, elements: !2825)
!2825 = !{!2826, !2861}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !2824, file: !68, line: 184, baseType: !2827, size: 192)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2824, file: !68, line: 181, size: 192, elements: !2828)
!2828 = !{!2829, !2859}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !2827, file: !68, line: 182, baseType: !2830, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2832, line: 73, size: 448, elements: !2833)
!2832 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2833 = !{!2834, !2835, !2848, !2853, !2858}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2831, file: !2832, line: 74, baseType: !2700, size: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2831, file: !2832, line: 75, baseType: !2836, size: 64, offset: 64)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2832, line: 99, size: 704, elements: !2838)
!2838 = !{!2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2837, file: !2832, line: 100, baseType: !271, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2837, file: !2832, line: 101, baseType: !308, size: 32, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2837, file: !2832, line: 102, baseType: !308, size: 32, offset: 96)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2837, file: !2832, line: 105, baseType: !249, offset: 128)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2837, file: !2832, line: 107, baseType: !230, size: 16, offset: 128)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2837, file: !2832, line: 109, baseType: !1908, size: 128, offset: 192)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2837, file: !2832, line: 110, baseType: !2830, size: 64, offset: 320)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2837, file: !2832, line: 111, baseType: !783, size: 64, offset: 384)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2837, file: !2832, line: 113, baseType: !2238, size: 256, offset: 448)
!2848 = !DIDerivedType(tag: DW_TAG_member, scope: !2831, file: !2832, line: 83, baseType: !2849, size: 128, offset: 128)
!2849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2831, file: !2832, line: 83, size: 128, elements: !2850)
!2850 = !{!2851, !2852}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2849, file: !2832, line: 84, baseType: !207, size: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2849, file: !2832, line: 85, baseType: !2589, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, scope: !2831, file: !2832, line: 87, baseType: !2854, size: 128, offset: 256)
!2854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2831, file: !2832, line: 87, size: 128, elements: !2855)
!2855 = !{!2856, !2857}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2854, file: !2832, line: 88, baseType: !787, size: 128)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2854, file: !2832, line: 89, baseType: !914, size: 128, align: 64)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2831, file: !2832, line: 92, baseType: !7, size: 32, offset: 384)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2827, file: !68, line: 183, baseType: !2860, size: 128, offset: 64)
!2860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 128, elements: !1267)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2824, file: !68, line: 190, baseType: !2862, size: 256)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2824, file: !68, line: 186, size: 256, elements: !2863)
!2863 = !{!2864, !2865, !2866}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2862, file: !68, line: 187, baseType: !7, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2862, file: !68, line: 188, baseType: !207, size: 128, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !2862, file: !68, line: 189, baseType: !2867, size: 64, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !68, line: 62, baseType: !2869)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{null, !2704, !2538}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2705, file: !68, line: 193, baseType: !2496, size: 64, offset: 1280)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2705, file: !68, line: 194, baseType: !1687, size: 64, offset: 1344)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2705, file: !68, line: 200, baseType: !342, size: 64, offset: 1408)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2705, file: !68, line: 202, baseType: !342, size: 64, offset: 1472)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2705, file: !68, line: 212, baseType: !230, size: 16, offset: 1536)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2705, file: !68, line: 218, baseType: !230, size: 16, offset: 1552)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2705, file: !68, line: 221, baseType: !230, size: 16, offset: 1568)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2705, file: !68, line: 229, baseType: !230, size: 16, offset: 1584)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2705, file: !68, line: 230, baseType: !230, size: 16, offset: 1600)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2705, file: !68, line: 232, baseType: !67, size: 32, offset: 1632)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2705, file: !68, line: 233, baseType: !303, size: 32, offset: 1664)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2705, file: !68, line: 235, baseType: !7, size: 32, offset: 1696)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2705, file: !68, line: 236, baseType: !201, size: 64, offset: 1728)
!2884 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !68, line: 238, baseType: !2885, size: 256, offset: 1792)
!2885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2705, file: !68, line: 238, size: 256, elements: !2886)
!2886 = !{!2887, !2916}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !2885, file: !68, line: 239, baseType: !2888, size: 256)
!2888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !2889, line: 23, size: 256, elements: !2890)
!2889 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!2890 = !{!2891, !2913, !2915}
!2891 = !DIDerivedType(tag: DW_TAG_member, scope: !2888, file: !2889, line: 24, baseType: !2892, size: 128)
!2892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2888, file: !2889, line: 24, size: 128, elements: !2893)
!2893 = !{!2894, !2906}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2892, file: !2889, line: 25, baseType: !2895, size: 128)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !2896, line: 58, size: 128, elements: !2897)
!2896 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!2897 = !{!2898, !2899, !2904, !2905}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2895, file: !2896, line: 59, baseType: !908, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, scope: !2895, file: !2896, line: 60, baseType: !2900, size: 32, offset: 64)
!2900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2895, file: !2896, line: 60, size: 32, elements: !2901)
!2901 = !{!2902, !2903}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !2900, file: !2896, line: 61, baseType: !7, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !2900, file: !2896, line: 62, baseType: !308, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2895, file: !2896, line: 65, baseType: !962, size: 16, offset: 96)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2895, file: !2896, line: 65, baseType: !962, size: 16, offset: 112)
!2906 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2889, line: 26, baseType: !2907, size: 128)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2892, file: !2889, line: 26, size: 128, elements: !2908)
!2908 = !{!2909, !2910, !2911, !2912}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2907, file: !2889, line: 27, baseType: !908, size: 64)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2907, file: !2889, line: 28, baseType: !7, size: 32, offset: 64)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2907, file: !2889, line: 30, baseType: !962, size: 16, offset: 96)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2907, file: !2889, line: 30, baseType: !962, size: 16, offset: 112)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2888, file: !2889, line: 34, baseType: !2914, size: 64, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !2889, line: 17, baseType: !1864)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2888, file: !2889, line: 35, baseType: !202, size: 64, offset: 192)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !2885, file: !68, line: 240, baseType: !342, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2705, file: !68, line: 246, baseType: !2867, size: 64, offset: 2048)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2705, file: !68, line: 247, baseType: !202, size: 64, offset: 2112)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2701, file: !68, line: 401, baseType: !2920, size: 64, offset: 64)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !74, line: 101, size: 4992, elements: !2922)
!2922 = !{!2923, !3035, !3036, !3037, !3038, !3039}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2921, file: !74, line: 103, baseType: !2924, size: 64)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !74, line: 66, size: 2240, elements: !2926)
!2926 = !{!2927, !2928, !3010, !3011, !3012, !3025, !3026, !3027, !3029, !3030, !3034}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !2925, file: !74, line: 69, baseType: !2589, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2925, file: !74, line: 72, baseType: !2929, size: 1408, offset: 64)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !74, line: 29, size: 1408, elements: !2930)
!2930 = !{!2931, !2935, !2939, !2943, !2947, !2951, !2955, !2959, !2964, !2968, !2972, !2978, !2982, !2983, !2987, !2991, !2995, !2999, !3000, !3004, !3005, !3009}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !2929, file: !74, line: 30, baseType: !2932, size: 64)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{!232, !2700, !2924}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !2929, file: !74, line: 31, baseType: !2936, size: 64, offset: 64)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{null, !2920}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2929, file: !74, line: 32, baseType: !2940, size: 64, offset: 128)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{!232, !2712, !7}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2929, file: !74, line: 33, baseType: !2944, size: 64, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DISubroutineType(types: !2946)
!2946 = !{null, !2712, !7}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !2929, file: !74, line: 34, baseType: !2948, size: 64, offset: 256)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{null, !2712}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !2929, file: !74, line: 36, baseType: !2952, size: 64, offset: 320)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!732, !2700, !2704, !2528}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !2929, file: !74, line: 37, baseType: !2956, size: 64, offset: 384)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!732, !2712, !2528, !7}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !2929, file: !74, line: 38, baseType: !2960, size: 64, offset: 448)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DISubroutineType(types: !2962)
!2962 = !{!232, !2700, !2963, !2528}
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !2929, file: !74, line: 39, baseType: !2965, size: 64, offset: 512)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DISubroutineType(types: !2967)
!2967 = !{null, !2700, !2704, !73}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !2929, file: !74, line: 40, baseType: !2969, size: 64, offset: 576)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{null, !2700, !2704, !2704}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !2929, file: !74, line: 41, baseType: !2973, size: 64, offset: 640)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{null, !7, !2976}
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !74, line: 26, flags: DIFlagFwdDecl)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !2929, file: !74, line: 42, baseType: !2979, size: 64, offset: 704)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{null, !2704}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !2929, file: !74, line: 43, baseType: !2979, size: 64, offset: 768)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !2929, file: !74, line: 44, baseType: !2984, size: 64, offset: 832)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DISubroutineType(types: !2986)
!2986 = !{null, !2712, !211, !732}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !2929, file: !74, line: 45, baseType: !2988, size: 64, offset: 896)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!2704, !2712}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !2929, file: !74, line: 46, baseType: !2992, size: 64, offset: 960)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!732, !2712}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !2929, file: !74, line: 47, baseType: !2996, size: 64, offset: 1024)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{null, !2704, !342}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !2929, file: !74, line: 48, baseType: !2979, size: 64, offset: 1088)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !2929, file: !74, line: 49, baseType: !3001, size: 64, offset: 1152)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{!2704, !2700, !2704}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !2929, file: !74, line: 50, baseType: !3001, size: 64, offset: 1216)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !2929, file: !74, line: 51, baseType: !3006, size: 64, offset: 1280)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DISubroutineType(types: !3008)
!3008 = !{null, !2830}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !2929, file: !74, line: 52, baseType: !3006, size: 64, offset: 1344)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !2925, file: !74, line: 74, baseType: !867, size: 64, offset: 1472)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !2925, file: !74, line: 75, baseType: !867, size: 64, offset: 1536)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !2925, file: !74, line: 76, baseType: !3013, size: 64, offset: 1600)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !74, line: 57, size: 256, elements: !3015)
!3015 = !{!3016, !3017, !3021}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3014, file: !74, line: 58, baseType: !1791, size: 128)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3014, file: !74, line: 59, baseType: !3018, size: 64, offset: 128)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DISubroutineType(types: !3020)
!3020 = !{!939, !2920, !713}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3014, file: !74, line: 60, baseType: !3022, size: 64, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!939, !2920, !687, !867}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !2925, file: !74, line: 77, baseType: !687, size: 64, offset: 1664)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !2925, file: !74, line: 78, baseType: !687, size: 64, offset: 1728)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !2925, file: !74, line: 79, baseType: !3028, size: 32, offset: 1792)
!3028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !2925, file: !74, line: 80, baseType: !778, size: 64, offset: 1856)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !2925, file: !74, line: 87, baseType: !3031, size: 176, offset: 1920)
!3031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 176, elements: !3032)
!3032 = !{!3033}
!3033 = !DISubrange(count: 22)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2925, file: !74, line: 88, baseType: !207, size: 128, offset: 2112)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !2921, file: !74, line: 104, baseType: !202, size: 64, offset: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2921, file: !74, line: 105, baseType: !1723, size: 512, offset: 128)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2921, file: !74, line: 106, baseType: !267, size: 192, offset: 640)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !2921, file: !74, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2921, file: !74, line: 108, baseType: !3040, size: 4096, offset: 896)
!3040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !783, size: 4096, elements: !1764)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2701, file: !68, line: 403, baseType: !1699, size: 128, offset: 128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2701, file: !68, line: 405, baseType: !3043, size: 64, offset: 256)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !68, line: 43, flags: DIFlagFwdDecl)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2701, file: !68, line: 406, baseType: !3046, size: 64, offset: 320)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !68, line: 42, flags: DIFlagFwdDecl)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2701, file: !68, line: 408, baseType: !3049, size: 64, offset: 384)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3051)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !2714, line: 290, size: 960, elements: !3052)
!3052 = !{!3053, !3063, !3064, !3068, !3072, !3076, !3080, !3081, !3085, !3086, !3133, !3137, !3138, !3139, !3140}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !3051, file: !2714, line: 294, baseType: !3054, size: 64)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = !DISubroutineType(types: !3056)
!3056 = !{!2538, !2712, !3057}
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3059)
!3059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !2714, line: 277, size: 128, elements: !3060)
!3060 = !{!3061, !3062}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !3059, file: !2714, line: 278, baseType: !2704, size: 64)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3059, file: !2714, line: 279, baseType: !732, size: 8, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !3051, file: !2714, line: 304, baseType: !2948, size: 64, offset: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !3051, file: !2714, line: 312, baseType: !3065, size: 64, offset: 128)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{!732, !2700}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !3051, file: !2714, line: 317, baseType: !3069, size: 64, offset: 192)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{null, !2700}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3051, file: !2714, line: 322, baseType: !3073, size: 64, offset: 256)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!80, !2704, !732}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3051, file: !2714, line: 327, baseType: !3077, size: 64, offset: 320)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{!232, !2712}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3051, file: !2714, line: 332, baseType: !2979, size: 64, offset: 384)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3051, file: !2714, line: 339, baseType: !3082, size: 64, offset: 448)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = !DISubroutineType(types: !3084)
!3084 = !{!232, !2712, !202, !7}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3051, file: !2714, line: 343, baseType: !2944, size: 64, offset: 512)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !3051, file: !2714, line: 352, baseType: !3087, size: 64, offset: 576)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{!232, !3090, !2704, !7, !7}
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !2714, line: 249, size: 2304, elements: !3092)
!3092 = !{!3093, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3128, !3129, !3131, !3132}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3091, file: !2714, line: 250, baseType: !3094, size: 384)
!3094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3095, size: 384, elements: !799)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !2714, line: 195, size: 128, elements: !3096)
!3096 = !{!3097, !3099, !3100}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !3095, file: !2714, line: 196, baseType: !3098, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !3095, file: !2714, line: 197, baseType: !7, size: 32, offset: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !3095, file: !2714, line: 198, baseType: !7, size: 32, offset: 96)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !3091, file: !2714, line: 251, baseType: !7, size: 32, offset: 384)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3091, file: !2714, line: 252, baseType: !3049, size: 64, offset: 448)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3091, file: !2714, line: 253, baseType: !7, size: 32, offset: 512)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3091, file: !2714, line: 254, baseType: !7, size: 32, offset: 544)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !3091, file: !2714, line: 255, baseType: !7, size: 32, offset: 576)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3091, file: !2714, line: 256, baseType: !7, size: 32, offset: 608)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3091, file: !2714, line: 257, baseType: !232, size: 32, offset: 640)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3091, file: !2714, line: 258, baseType: !7, size: 32, offset: 672)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3091, file: !2714, line: 259, baseType: !7, size: 32, offset: 704)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3091, file: !2714, line: 260, baseType: !202, size: 64, offset: 768)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !3091, file: !2714, line: 261, baseType: !308, size: 32, offset: 832)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !3091, file: !2714, line: 263, baseType: !3113, size: 512, offset: 896)
!3113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !2743, line: 97, size: 512, elements: !3114)
!3114 = !{!3115, !3116, !3117, !3118, !3119, !3125, !3126, !3127}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !3113, file: !2743, line: 101, baseType: !2742, size: 192)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !3113, file: !2743, line: 109, baseType: !3098, size: 64, offset: 192)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !3113, file: !2743, line: 115, baseType: !7, size: 32, offset: 256)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !3113, file: !2743, line: 120, baseType: !308, size: 32, offset: 288)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !3113, file: !2743, line: 125, baseType: !3120, size: 64, offset: 320)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !2743, line: 76, size: 192, elements: !3122)
!3122 = !{!3123, !3124}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !3121, file: !2743, line: 80, baseType: !308, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3121, file: !2743, line: 85, baseType: !1065, size: 128, offset: 64)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !3113, file: !2743, line: 130, baseType: !308, size: 32, offset: 384)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !3113, file: !2743, line: 135, baseType: !732, size: 8, offset: 416)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !3113, file: !2743, line: 141, baseType: !7, size: 32, offset: 448)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !3091, file: !2714, line: 264, baseType: !3113, size: 512, offset: 1408)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3091, file: !2714, line: 265, baseType: !3130, size: 64, offset: 1920)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !3091, file: !2714, line: 267, baseType: !267, size: 192, offset: 1984)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !3091, file: !2714, line: 268, baseType: !207, size: 128, offset: 2176)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !3051, file: !2714, line: 357, baseType: !3134, size: 64, offset: 640)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{null, !3090, !2704, !7}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !3051, file: !2714, line: 363, baseType: !2979, size: 64, offset: 704)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !3051, file: !2714, line: 369, baseType: !2979, size: 64, offset: 768)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !3051, file: !2714, line: 374, baseType: !3065, size: 64, offset: 832)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !3051, file: !2714, line: 380, baseType: !3141, size: 64, offset: 896)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!232, !3090}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2701, file: !68, line: 411, baseType: !2709, size: 64, offset: 448)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2701, file: !68, line: 413, baseType: !7, size: 32, offset: 512)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2701, file: !68, line: 416, baseType: !3147, size: 64, offset: 576)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2701, file: !68, line: 417, baseType: !7, size: 32, offset: 640)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2701, file: !68, line: 419, baseType: !3150, size: 64, offset: 704)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !85, line: 165, size: 4672, elements: !3152)
!3152 = !{!3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3203, !3204, !3205, !3206, !3208, !3209}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3151, file: !85, line: 166, baseType: !342, size: 64)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3151, file: !85, line: 167, baseType: !332, size: 192, align: 64, offset: 64)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !3151, file: !85, line: 168, baseType: !207, size: 128, offset: 256)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3151, file: !85, line: 169, baseType: !201, size: 64, offset: 384)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !3151, file: !85, line: 170, baseType: !201, size: 64, offset: 448)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3151, file: !85, line: 172, baseType: !2012, size: 32, offset: 512)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !3151, file: !85, line: 173, baseType: !7, size: 32, offset: 544)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !3151, file: !85, line: 174, baseType: !7, size: 32, offset: 576)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !3151, file: !85, line: 175, baseType: !7, size: 32, offset: 608)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !3151, file: !85, line: 175, baseType: !7, size: 32, offset: 640)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !3151, file: !85, line: 181, baseType: !271, size: 64, offset: 704)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !3151, file: !85, line: 183, baseType: !3165, size: 2688, offset: 768)
!3165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !85, line: 107, size: 2688, elements: !3166)
!3166 = !{!3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3196, !3197, !3198, !3199, !3200, !3201, !3202}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !3165, file: !85, line: 108, baseType: !3150, size: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3165, file: !85, line: 110, baseType: !201, size: 64, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !3165, file: !85, line: 111, baseType: !201, size: 64, offset: 128)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !3165, file: !85, line: 113, baseType: !207, size: 128, offset: 192)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !3165, file: !85, line: 114, baseType: !207, size: 128, offset: 320)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !3165, file: !85, line: 115, baseType: !207, size: 128, offset: 448)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !3165, file: !85, line: 116, baseType: !207, size: 128, offset: 576)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3165, file: !85, line: 117, baseType: !249, offset: 704)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !3165, file: !85, line: 119, baseType: !3176, size: 256, offset: 704)
!3176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3177, size: 256, elements: !1227)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3178, line: 97, size: 64, elements: !3179)
!3178 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3179 = !{!3180}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3177, file: !3178, line: 98, baseType: !277, size: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !3165, file: !85, line: 121, baseType: !201, size: 64, offset: 960)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !3165, file: !85, line: 123, baseType: !201, size: 64, offset: 1024)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !3165, file: !85, line: 124, baseType: !201, size: 64, offset: 1088)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !3165, file: !85, line: 125, baseType: !201, size: 64, offset: 1152)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !3165, file: !85, line: 126, baseType: !201, size: 64, offset: 1216)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !3165, file: !85, line: 127, baseType: !201, size: 64, offset: 1280)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !3165, file: !85, line: 135, baseType: !201, size: 64, offset: 1344)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !3165, file: !85, line: 136, baseType: !201, size: 64, offset: 1408)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !3165, file: !85, line: 138, baseType: !3190, size: 128, offset: 1472)
!3190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !3191, line: 76, size: 128, elements: !3192)
!3191 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!3192 = !{!3193, !3194, !3195}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3190, file: !3191, line: 78, baseType: !3177, size: 64)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3190, file: !3191, line: 80, baseType: !7, size: 32, offset: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3190, file: !3191, line: 81, baseType: !404, offset: 96)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !3165, file: !85, line: 139, baseType: !232, size: 32, offset: 1600)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !3165, file: !85, line: 140, baseType: !84, size: 32, offset: 1632)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !3165, file: !85, line: 142, baseType: !249, offset: 1664)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !3165, file: !85, line: 143, baseType: !207, size: 128, offset: 1664)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !3165, file: !85, line: 144, baseType: !2723, size: 704, offset: 1792)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !3165, file: !85, line: 146, baseType: !201, size: 64, offset: 2496)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !3165, file: !85, line: 148, baseType: !207, size: 128, offset: 2560)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !3151, file: !85, line: 184, baseType: !207, size: 128, offset: 3456)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !3151, file: !85, line: 190, baseType: !1065, size: 128, offset: 3584)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3151, file: !85, line: 192, baseType: !2022, size: 64, offset: 3712)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3151, file: !85, line: 193, baseType: !3207, size: 512, offset: 3776)
!3207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 512, elements: !1764)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3151, file: !85, line: 194, baseType: !2022, size: 64, offset: 4288)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !3151, file: !85, line: 196, baseType: !2205, size: 320, offset: 4352)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2701, file: !68, line: 425, baseType: !202, size: 64, offset: 768)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2701, file: !68, line: 430, baseType: !201, size: 64, offset: 832)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2701, file: !68, line: 436, baseType: !308, size: 32, offset: 896)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2701, file: !68, line: 442, baseType: !232, size: 32, offset: 928)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2701, file: !68, line: 447, baseType: !544, size: 32, offset: 960)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2701, file: !68, line: 449, baseType: !249, offset: 992)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2701, file: !68, line: 454, baseType: !1723, size: 512, offset: 1024)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2701, file: !68, line: 459, baseType: !1729, size: 64, offset: 1536)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2701, file: !68, line: 462, baseType: !3219, size: 128, offset: 1600)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1689, line: 159, size: 128, elements: !3220)
!3220 = !{!3221, !3250, !3251, !3252, !3253}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3219, file: !1689, line: 160, baseType: !3222, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3224)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !68, line: 1664, size: 320, elements: !3225)
!3225 = !{!3226, !3240, !3241, !3244, !3249}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3224, file: !68, line: 1665, baseType: !3227, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !68, line: 1660, baseType: !3229)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!2538, !3231}
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !68, line: 1651, size: 320, elements: !3233)
!3233 = !{!3234, !3235, !3236, !3237, !3238, !3239}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3232, file: !68, line: 1652, baseType: !202, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3232, file: !68, line: 1653, baseType: !202, size: 64, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3232, file: !68, line: 1654, baseType: !1692, size: 64, offset: 128)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3232, file: !68, line: 1655, baseType: !7, size: 32, offset: 192)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3232, file: !68, line: 1656, baseType: !230, size: 16, offset: 224)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3232, file: !68, line: 1657, baseType: !687, size: 64, offset: 256)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3224, file: !68, line: 1666, baseType: !3227, size: 64, offset: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3224, file: !68, line: 1667, baseType: !3242, size: 64, offset: 128)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !68, line: 1661, baseType: !2980)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3224, file: !68, line: 1668, baseType: !3245, size: 64, offset: 192)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !68, line: 1662, baseType: !3247)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{null, !2704, !7}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3224, file: !68, line: 1669, baseType: !687, size: 64, offset: 256)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3219, file: !1689, line: 161, baseType: !224, size: 8, offset: 64)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3219, file: !1689, line: 162, baseType: !224, size: 8, offset: 72)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3219, file: !1689, line: 163, baseType: !224, size: 8, offset: 80)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3219, file: !1689, line: 164, baseType: !224, size: 8, offset: 88)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2701, file: !68, line: 466, baseType: !2022, size: 64, offset: 1728)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2701, file: !68, line: 467, baseType: !61, size: 32, offset: 1792)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2701, file: !68, line: 468, baseType: !7, size: 32, offset: 1824)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2701, file: !68, line: 474, baseType: !201, size: 64, offset: 1856)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2701, file: !68, line: 476, baseType: !7, size: 32, offset: 1920)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2701, file: !68, line: 477, baseType: !7, size: 32, offset: 1952)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2701, file: !68, line: 484, baseType: !7, size: 32, offset: 1984)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2701, file: !68, line: 485, baseType: !232, size: 32, offset: 2016)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2701, file: !68, line: 487, baseType: !3263, size: 64, offset: 2048)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3264 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !68, line: 44, flags: DIFlagFwdDecl)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2701, file: !68, line: 488, baseType: !3266, size: 5120, offset: 2112)
!3266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3267, size: 5120, elements: !225)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1672, line: 540, size: 320, elements: !3268)
!3268 = !{!3269, !3270, !3271, !3272, !3273}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3267, file: !1672, line: 541, baseType: !342, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3267, file: !1672, line: 542, baseType: !342, size: 64, offset: 64)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3267, file: !1672, line: 543, baseType: !342, size: 64, offset: 128)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3267, file: !1672, line: 544, baseType: !296, size: 32, offset: 192)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3267, file: !1672, line: 545, baseType: !342, size: 64, offset: 256)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2701, file: !68, line: 490, baseType: !2205, size: 320, offset: 7232)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2701, file: !68, line: 491, baseType: !2238, size: 256, offset: 7552)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2701, file: !68, line: 493, baseType: !308, size: 32, offset: 7808)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2701, file: !68, line: 495, baseType: !207, size: 128, offset: 7872)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2701, file: !68, line: 502, baseType: !3279, size: 896, offset: 8000)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !68, line: 321, size: 896, elements: !3280)
!3280 = !{!3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3279, file: !68, line: 322, baseType: !201, size: 64)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3279, file: !68, line: 323, baseType: !201, size: 64, offset: 64)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3279, file: !68, line: 324, baseType: !201, size: 64, offset: 128)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3279, file: !68, line: 326, baseType: !7, size: 32, offset: 192)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3279, file: !68, line: 327, baseType: !7, size: 32, offset: 224)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3279, file: !68, line: 328, baseType: !7, size: 32, offset: 256)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3279, file: !68, line: 329, baseType: !7, size: 32, offset: 288)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3279, file: !68, line: 330, baseType: !7, size: 32, offset: 320)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3279, file: !68, line: 331, baseType: !7, size: 32, offset: 352)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3279, file: !68, line: 332, baseType: !7, size: 32, offset: 384)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3279, file: !68, line: 333, baseType: !7, size: 32, offset: 416)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3279, file: !68, line: 334, baseType: !7, size: 32, offset: 448)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3279, file: !68, line: 335, baseType: !7, size: 32, offset: 480)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3279, file: !68, line: 336, baseType: !7, size: 32, offset: 512)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3279, file: !68, line: 337, baseType: !7, size: 32, offset: 544)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3279, file: !68, line: 338, baseType: !7, size: 32, offset: 576)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3279, file: !68, line: 339, baseType: !7, size: 32, offset: 608)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3279, file: !68, line: 340, baseType: !7, size: 32, offset: 640)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3279, file: !68, line: 341, baseType: !7, size: 32, offset: 672)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3279, file: !68, line: 342, baseType: !7, size: 32, offset: 704)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3279, file: !68, line: 344, baseType: !230, size: 16, offset: 736)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3279, file: !68, line: 345, baseType: !230, size: 16, offset: 752)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3279, file: !68, line: 346, baseType: !230, size: 16, offset: 768)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3279, file: !68, line: 348, baseType: !224, size: 8, offset: 784)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3279, file: !68, line: 349, baseType: !224, size: 8, offset: 792)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3279, file: !68, line: 350, baseType: !224, size: 8, offset: 800)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3279, file: !68, line: 351, baseType: !96, size: 32, offset: 832)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2701, file: !68, line: 504, baseType: !7, size: 32, offset: 8896)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2701, file: !68, line: 534, baseType: !7, size: 32, offset: 8928)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2701, file: !68, line: 535, baseType: !7, size: 32, offset: 8960)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2701, file: !68, line: 536, baseType: !232, size: 32, offset: 8992)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2701, file: !68, line: 537, baseType: !267, size: 192, offset: 9024)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2701, file: !68, line: 544, baseType: !2738, size: 64, offset: 9216)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2701, file: !68, line: 546, baseType: !207, size: 128, offset: 9280)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2701, file: !68, line: 547, baseType: !249, offset: 9408)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2701, file: !68, line: 548, baseType: !2723, size: 704, offset: 9408)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2701, file: !68, line: 550, baseType: !267, size: 192, offset: 10112)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2701, file: !68, line: 551, baseType: !267, size: 192, offset: 10304)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2701, file: !68, line: 557, baseType: !207, size: 128, offset: 10496)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2701, file: !68, line: 558, baseType: !249, offset: 10624)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2701, file: !68, line: 560, baseType: !232, size: 32, offset: 10624)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2701, file: !68, line: 563, baseType: !3323, size: 256, offset: 10688)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3324, line: 18, size: 256, elements: !3325)
!3324 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3325 = !{!3326, !3327, !3328, !3329}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3323, file: !3324, line: 19, baseType: !2022, size: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3323, file: !3324, line: 20, baseType: !232, size: 32, offset: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3323, file: !3324, line: 21, baseType: !2700, size: 64, offset: 128)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3323, file: !3324, line: 22, baseType: !3330, size: 64, offset: 192)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3332)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3324, line: 10, size: 256, elements: !3333)
!3333 = !{!3334, !3375, !3379, !3383}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3332, file: !3324, line: 11, baseType: !3335, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!232, !3338}
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3340, line: 22, size: 1280, elements: !3341)
!3340 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3341 = !{!3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3339, file: !3340, line: 23, baseType: !1284, size: 32)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3339, file: !3340, line: 24, baseType: !297, size: 32, offset: 32)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3339, file: !3340, line: 25, baseType: !297, size: 32, offset: 64)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3339, file: !3340, line: 28, baseType: !297, size: 32, offset: 96)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3339, file: !3340, line: 29, baseType: !343, size: 64, offset: 128)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3339, file: !3340, line: 30, baseType: !343, size: 64, offset: 192)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3339, file: !3340, line: 31, baseType: !297, size: 32, offset: 256)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3339, file: !3340, line: 32, baseType: !297, size: 32, offset: 288)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3339, file: !3340, line: 33, baseType: !297, size: 32, offset: 320)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3339, file: !3340, line: 34, baseType: !297, size: 32, offset: 352)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3339, file: !3340, line: 35, baseType: !343, size: 64, offset: 384)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3339, file: !3340, line: 38, baseType: !297, size: 32, offset: 448)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3339, file: !3340, line: 40, baseType: !297, size: 32, offset: 480)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3339, file: !3340, line: 41, baseType: !297, size: 32, offset: 512)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3339, file: !3340, line: 42, baseType: !297, size: 32, offset: 544)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3339, file: !3340, line: 43, baseType: !343, size: 64, offset: 576)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3339, file: !3340, line: 44, baseType: !343, size: 64, offset: 640)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3339, file: !3340, line: 46, baseType: !297, size: 32, offset: 704)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3339, file: !3340, line: 47, baseType: !297, size: 32, offset: 736)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3339, file: !3340, line: 48, baseType: !343, size: 64, offset: 768)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3339, file: !3340, line: 49, baseType: !297, size: 32, offset: 832)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3339, file: !3340, line: 51, baseType: !297, size: 32, offset: 864)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3339, file: !3340, line: 52, baseType: !297, size: 32, offset: 896)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3339, file: !3340, line: 53, baseType: !297, size: 32, offset: 928)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3339, file: !3340, line: 54, baseType: !297, size: 32, offset: 960)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3339, file: !3340, line: 55, baseType: !297, size: 32, offset: 992)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3339, file: !3340, line: 56, baseType: !297, size: 32, offset: 1024)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3339, file: !3340, line: 57, baseType: !297, size: 32, offset: 1056)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3339, file: !3340, line: 58, baseType: !1284, size: 32, offset: 1088)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3339, file: !3340, line: 59, baseType: !1284, size: 32, offset: 1120)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3339, file: !3340, line: 60, baseType: !343, size: 64, offset: 1152)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3339, file: !3340, line: 61, baseType: !297, size: 32, offset: 1216)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3339, file: !3340, line: 63, baseType: !297, size: 32, offset: 1248)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3332, file: !3324, line: 12, baseType: !3376, size: 64, offset: 64)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DISubroutineType(types: !3378)
!3378 = !{!232, !2704, !3338, !1211}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3332, file: !3324, line: 14, baseType: !3380, size: 64, offset: 128)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!232, !2704, !3338}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3332, file: !3324, line: 15, baseType: !2979, size: 64, offset: 192)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2701, file: !68, line: 570, baseType: !914, size: 128, align: 64, offset: 10944)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2701, file: !68, line: 571, baseType: !1065, size: 128, offset: 11072)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2701, file: !68, line: 576, baseType: !267, size: 192, offset: 11200)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2701, file: !68, line: 578, baseType: !3090, size: 64, offset: 11392)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2701, file: !68, line: 579, baseType: !207, size: 128, offset: 11456)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2701, file: !68, line: 580, baseType: !2586, size: 2368, offset: 11584)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2701, file: !68, line: 582, baseType: !615, size: 64, offset: 13952)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2701, file: !68, line: 589, baseType: !732, size: 8, offset: 14016)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2701, file: !68, line: 591, baseType: !867, size: 64, offset: 14080)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2701, file: !68, line: 594, baseType: !3394, size: 320, offset: 14144)
!3394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 320, elements: !3395)
!3395 = !{!3396}
!3396 = !DISubrange(count: 5)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2497, file: !1689, line: 191, baseType: !202, size: 64, offset: 7168)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2497, file: !1689, line: 193, baseType: !232, size: 32, offset: 7232)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2497, file: !1689, line: 194, baseType: !201, size: 64, offset: 7296)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2497, file: !1689, line: 196, baseType: !1291, size: 256, offset: 7360)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2497, file: !1689, line: 197, baseType: !1729, size: 64, offset: 7616)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2497, file: !1689, line: 199, baseType: !3403, size: 64, offset: 7680)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!3404 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1689, line: 199, flags: DIFlagFwdDecl)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2497, file: !1689, line: 200, baseType: !308, size: 32, offset: 7744)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2497, file: !1689, line: 201, baseType: !3407, size: 64, offset: 7808)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1689, line: 156, flags: DIFlagFwdDecl)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2497, file: !1689, line: 203, baseType: !1723, size: 512, offset: 7872)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2497, file: !1689, line: 208, baseType: !232, size: 32, offset: 8384)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2497, file: !1689, line: 209, baseType: !3412, size: 64, offset: 8448)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1689, line: 157, flags: DIFlagFwdDecl)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2497, file: !1689, line: 210, baseType: !3415, offset: 8512)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !794, line: 192, elements: !263)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1671, file: !1672, line: 43, baseType: !3150, size: 64, offset: 1024)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1671, file: !1672, line: 46, baseType: !232, size: 32, offset: 1088)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1671, file: !1672, line: 48, baseType: !267, size: 192, offset: 1152)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !742, file: !12, line: 1452, baseType: !3150, size: 64, offset: 1536)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !742, file: !12, line: 1453, baseType: !3421, size: 64, offset: 1600)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !12, line: 1453, flags: DIFlagFwdDecl)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !742, file: !12, line: 1454, baseType: !787, size: 128, offset: 1664)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !742, file: !12, line: 1455, baseType: !7, size: 32, offset: 1792)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !742, file: !12, line: 1456, baseType: !3426, size: 2432, offset: 1856)
!3426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !29, line: 518, size: 2432, elements: !3427)
!3427 = !{!3428, !3429, !3430, !3432, !3464}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3426, file: !29, line: 519, baseType: !7, size: 32)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3426, file: !29, line: 520, baseType: !1291, size: 256, offset: 64)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3426, file: !29, line: 521, baseType: !3431, size: 192, offset: 320)
!3431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 192, elements: !799)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3426, file: !29, line: 522, baseType: !3433, size: 1728, offset: 512)
!3433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3434, size: 1728, elements: !799)
!3434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !29, line: 222, size: 576, elements: !3435)
!3435 = !{!3436, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3434, file: !29, line: 223, baseType: !3437, size: 64)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !29, line: 443, size: 256, elements: !3439)
!3439 = !{!3440, !3441, !3454, !3455}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3438, file: !29, line: 444, baseType: !232, size: 32)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3438, file: !29, line: 445, baseType: !3442, size: 64, offset: 64)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3444)
!3444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !29, line: 310, size: 512, elements: !3445)
!3445 = !{!3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453}
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3444, file: !29, line: 311, baseType: !835, size: 64)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3444, file: !29, line: 312, baseType: !835, size: 64, offset: 64)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3444, file: !29, line: 313, baseType: !835, size: 64, offset: 128)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3444, file: !29, line: 314, baseType: !835, size: 64, offset: 192)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3444, file: !29, line: 315, baseType: !1489, size: 64, offset: 256)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3444, file: !29, line: 316, baseType: !1489, size: 64, offset: 320)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3444, file: !29, line: 317, baseType: !1489, size: 64, offset: 384)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3444, file: !29, line: 318, baseType: !1561, size: 64, offset: 448)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3438, file: !29, line: 446, baseType: !778, size: 64, offset: 128)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3438, file: !29, line: 447, baseType: !3437, size: 64, offset: 192)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3434, file: !29, line: 224, baseType: !232, size: 32, offset: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3434, file: !29, line: 226, baseType: !207, size: 128, offset: 128)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3434, file: !29, line: 227, baseType: !201, size: 64, offset: 256)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3434, file: !29, line: 228, baseType: !7, size: 32, offset: 320)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3434, file: !29, line: 229, baseType: !7, size: 32, offset: 352)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3434, file: !29, line: 230, baseType: !1525, size: 64, offset: 384)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3434, file: !29, line: 231, baseType: !1525, size: 64, offset: 448)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3434, file: !29, line: 232, baseType: !202, size: 64, offset: 512)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3426, file: !29, line: 523, baseType: !3465, size: 192, offset: 2240)
!3465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3442, size: 192, elements: !799)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !742, file: !12, line: 1458, baseType: !3467, size: 2112, offset: 4288)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !12, line: 1410, size: 2112, elements: !3468)
!3468 = !{!3469, !3470, !3471}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3467, file: !12, line: 1411, baseType: !232, size: 32)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3467, file: !12, line: 1412, baseType: !1065, size: 128, offset: 64)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3467, file: !12, line: 1413, baseType: !3472, size: 1920, offset: 192)
!3472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3473, size: 1920, elements: !799)
!3473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3474, line: 12, size: 640, elements: !3475)
!3474 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3475 = !{!3476, !3484, !3485, !3490, !3491}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3473, file: !3474, line: 13, baseType: !3477, size: 320)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3478, line: 17, size: 320, elements: !3479)
!3478 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3479 = !{!3480, !3481, !3482, !3483}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3477, file: !3478, line: 18, baseType: !232, size: 32)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3477, file: !3478, line: 19, baseType: !232, size: 32, offset: 32)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3477, file: !3478, line: 20, baseType: !1065, size: 128, offset: 64)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3477, file: !3478, line: 22, baseType: !914, size: 128, align: 64, offset: 192)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3473, file: !3474, line: 14, baseType: !3098, size: 64, offset: 320)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3473, file: !3474, line: 15, baseType: !3486, size: 64, offset: 384)
!3486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3487, line: 16, size: 64, elements: !3488)
!3487 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3488 = !{!3489}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3486, file: !3487, line: 17, baseType: !286, size: 64)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3473, file: !3474, line: 16, baseType: !1065, size: 128, offset: 448)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3473, file: !3474, line: 17, baseType: !308, size: 32, offset: 576)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !742, file: !12, line: 1465, baseType: !202, size: 64, offset: 6400)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !742, file: !12, line: 1468, baseType: !296, size: 32, offset: 6464)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !742, file: !12, line: 1470, baseType: !1306, size: 64, offset: 6528)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !742, file: !12, line: 1471, baseType: !1306, size: 64, offset: 6592)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !742, file: !12, line: 1473, baseType: !297, size: 32, offset: 6656)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !742, file: !12, line: 1474, baseType: !3498, size: 64, offset: 6720)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 64)
!3499 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !12, line: 603, flags: DIFlagFwdDecl)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !742, file: !12, line: 1477, baseType: !2503, size: 256, offset: 6784)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !742, file: !12, line: 1478, baseType: !3502, size: 128, offset: 7040)
!3502 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3503, line: 18, baseType: !3504)
!3503 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3503, line: 16, size: 128, elements: !3505)
!3505 = !{!3506}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3504, file: !3503, line: 17, baseType: !3507, size: 128)
!3507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 128, elements: !225)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !742, file: !12, line: 1480, baseType: !7, size: 32, offset: 7168)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !742, file: !12, line: 1481, baseType: !1211, size: 32, offset: 7200)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !742, file: !12, line: 1487, baseType: !267, size: 192, offset: 7232)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !742, file: !12, line: 1493, baseType: !687, size: 64, offset: 7424)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !742, file: !12, line: 1495, baseType: !667, size: 64, offset: 7488)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !742, file: !12, line: 1500, baseType: !232, size: 32, offset: 7552)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !742, file: !12, line: 1502, baseType: !3515, size: 448, offset: 7616)
!3515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !1473, line: 60, size: 448, elements: !3516)
!3516 = !{!3517, !3522, !3523, !3524, !3525, !3526, !3527}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3515, file: !1473, line: 61, baseType: !3518, size: 64)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!201, !3521, !1471}
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3515, file: !1473, line: 63, baseType: !3518, size: 64, offset: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3515, file: !1473, line: 66, baseType: !300, size: 64, offset: 128)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3515, file: !1473, line: 67, baseType: !232, size: 32, offset: 192)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3515, file: !1473, line: 68, baseType: !7, size: 32, offset: 224)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3515, file: !1473, line: 71, baseType: !207, size: 128, offset: 256)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3515, file: !1473, line: 77, baseType: !3528, size: 64, offset: 384)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !742, file: !12, line: 1505, baseType: !271, size: 64, offset: 8064)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !742, file: !12, line: 1508, baseType: !271, size: 64, offset: 8128)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !742, file: !12, line: 1511, baseType: !232, size: 32, offset: 8192)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !742, file: !12, line: 1514, baseType: !1456, size: 32, offset: 8224)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !742, file: !12, line: 1517, baseType: !2491, size: 64, offset: 8256)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !742, file: !12, line: 1518, baseType: !783, size: 64, offset: 8320)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !742, file: !12, line: 1525, baseType: !1424, size: 64, offset: 8384)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !742, file: !12, line: 1532, baseType: !3537, size: 64, offset: 8448)
!3537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3538, line: 52, size: 64, elements: !3539)
!3538 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3539 = !{!3540}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3537, file: !3538, line: 53, baseType: !3541, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3538, line: 40, size: 256, elements: !3543)
!3543 = !{!3544, !3545, !3550}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3542, file: !3538, line: 42, baseType: !249)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3542, file: !3538, line: 44, baseType: !3546, size: 192)
!3546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3538, line: 28, size: 192, elements: !3547)
!3547 = !{!3548, !3549}
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3546, file: !3538, line: 29, baseType: !207, size: 128)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3546, file: !3538, line: 31, baseType: !300, size: 64, offset: 128)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3542, file: !3538, line: 49, baseType: !300, size: 64, offset: 192)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !742, file: !12, line: 1533, baseType: !3537, size: 64, offset: 8512)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !742, file: !12, line: 1534, baseType: !914, size: 128, align: 64, offset: 8576)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !742, file: !12, line: 1535, baseType: !2238, size: 256, offset: 8704)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !742, file: !12, line: 1537, baseType: !267, size: 192, offset: 8960)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !742, file: !12, line: 1542, baseType: !232, size: 32, offset: 9152)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !742, file: !12, line: 1545, baseType: !249, offset: 9184)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !742, file: !12, line: 1546, baseType: !207, size: 128, offset: 9216)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !742, file: !12, line: 1548, baseType: !249, offset: 9344)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !742, file: !12, line: 1549, baseType: !207, size: 128, offset: 9344)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !616, file: !617, line: 104, baseType: !201, size: 64, offset: 896)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !616, file: !617, line: 105, baseType: !202, size: 64, offset: 960)
!3562 = !DIDerivedType(tag: DW_TAG_member, scope: !616, file: !617, line: 107, baseType: !3563, size: 128, offset: 1024)
!3563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !616, file: !617, line: 107, size: 128, elements: !3564)
!3564 = !{!3565, !3566}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3563, file: !617, line: 108, baseType: !207, size: 128)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3563, file: !617, line: 109, baseType: !3567, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !616, file: !617, line: 111, baseType: !207, size: 128, offset: 1152)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !616, file: !617, line: 112, baseType: !207, size: 128, offset: 1280)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !616, file: !617, line: 120, baseType: !3571, size: 128, offset: 1408)
!3571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !616, file: !617, line: 116, size: 128, elements: !3572)
!3572 = !{!3573, !3574, !3575}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3571, file: !617, line: 117, baseType: !787, size: 128)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3571, file: !617, line: 118, baseType: !626, size: 128)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3571, file: !617, line: 119, baseType: !914, size: 128, align: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !609, file: !12, line: 1866, baseType: !3577, size: 64, offset: 64)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{!687, !615, !584, !3580}
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 64)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !3582, line: 10, size: 128, elements: !3583)
!3582 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!3583 = !{!3584, !3585}
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3581, file: !3582, line: 11, baseType: !1864, size: 64)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !3581, file: !3582, line: 12, baseType: !202, size: 64, offset: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !609, file: !12, line: 1867, baseType: !3587, size: 64, offset: 128)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{!232, !584, !232}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !609, file: !12, line: 1868, baseType: !3591, size: 64, offset: 192)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = !DISubroutineType(types: !3593)
!3593 = !{!3594, !584, !232}
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !12, line: 581, flags: DIFlagFwdDecl)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !609, file: !12, line: 1870, baseType: !3597, size: 64, offset: 256)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!232, !615, !713, !232}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !609, file: !12, line: 1872, baseType: !3601, size: 64, offset: 320)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!232, !584, !615, !588, !732}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !609, file: !12, line: 1873, baseType: !3605, size: 64, offset: 384)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!232, !615, !584, !615}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !609, file: !12, line: 1874, baseType: !3609, size: 64, offset: 448)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DISubroutineType(types: !3611)
!3611 = !{!232, !584, !615}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !609, file: !12, line: 1875, baseType: !3613, size: 64, offset: 512)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!232, !584, !615, !687}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !609, file: !12, line: 1876, baseType: !3617, size: 64, offset: 576)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!232, !584, !615, !588}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !609, file: !12, line: 1877, baseType: !3609, size: 64, offset: 640)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !609, file: !12, line: 1878, baseType: !3622, size: 64, offset: 704)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{!232, !584, !615, !588, !746}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !609, file: !12, line: 1879, baseType: !3626, size: 64, offset: 768)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3627 = !DISubroutineType(types: !3628)
!3628 = !{!232, !584, !615, !584, !615, !7}
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !609, file: !12, line: 1881, baseType: !3630, size: 64, offset: 832)
!3630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 64)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!232, !615, !3633}
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !12, line: 219, size: 640, elements: !3635)
!3635 = !{!3636, !3637, !3638, !3639, !3640, !3641, !3646, !3647, !3648}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !3634, file: !12, line: 220, baseType: !7, size: 32)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !3634, file: !12, line: 221, baseType: !588, size: 16, offset: 32)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !3634, file: !12, line: 222, baseType: !591, size: 32, offset: 64)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !3634, file: !12, line: 223, baseType: !599, size: 32, offset: 96)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !3634, file: !12, line: 224, baseType: !751, size: 64, offset: 128)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !3634, file: !12, line: 225, baseType: !3642, size: 128, offset: 192)
!3642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1307, line: 13, size: 128, elements: !3643)
!3643 = !{!3644, !3645}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3642, file: !1307, line: 14, baseType: !1306, size: 64)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3642, file: !1307, line: 15, baseType: !300, size: 64, offset: 64)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !3634, file: !12, line: 226, baseType: !3642, size: 128, offset: 320)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !3634, file: !12, line: 227, baseType: !3642, size: 128, offset: 448)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !3634, file: !12, line: 234, baseType: !934, size: 64, offset: 576)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !609, file: !12, line: 1882, baseType: !3650, size: 64, offset: 896)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!232, !730, !3653, !296, !7}
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !3655, line: 22, size: 1152, elements: !3656)
!3655 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!3656 = !{!3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !3654, file: !3655, line: 23, baseType: !296, size: 32)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3654, file: !3655, line: 24, baseType: !588, size: 16, offset: 32)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !3654, file: !3655, line: 25, baseType: !7, size: 32, offset: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !3654, file: !3655, line: 26, baseType: !1314, size: 32, offset: 96)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !3654, file: !3655, line: 27, baseType: !342, size: 64, offset: 128)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !3654, file: !3655, line: 28, baseType: !342, size: 64, offset: 192)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3654, file: !3655, line: 37, baseType: !342, size: 64, offset: 256)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3654, file: !3655, line: 38, baseType: !746, size: 32, offset: 320)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !3654, file: !3655, line: 39, baseType: !746, size: 32, offset: 352)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3654, file: !3655, line: 40, baseType: !591, size: 32, offset: 384)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3654, file: !3655, line: 41, baseType: !599, size: 32, offset: 416)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3654, file: !3655, line: 42, baseType: !751, size: 64, offset: 448)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !3654, file: !3655, line: 43, baseType: !3642, size: 128, offset: 512)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !3654, file: !3655, line: 44, baseType: !3642, size: 128, offset: 640)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !3654, file: !3655, line: 45, baseType: !3642, size: 128, offset: 768)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !3654, file: !3655, line: 46, baseType: !3642, size: 128, offset: 896)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3654, file: !3655, line: 47, baseType: !342, size: 64, offset: 1024)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !3654, file: !3655, line: 48, baseType: !342, size: 64, offset: 1088)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !609, file: !12, line: 1883, baseType: !3676, size: 64, offset: 960)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!939, !615, !713, !867}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !609, file: !12, line: 1884, baseType: !3680, size: 64, offset: 1024)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!232, !584, !3683, !342, !342}
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !12, line: 50, flags: DIFlagFwdDecl)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !609, file: !12, line: 1886, baseType: !3686, size: 64, offset: 1088)
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3687 = !DISubroutineType(types: !3688)
!3688 = !{!232, !584, !3689, !232}
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3642, size: 64)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !609, file: !12, line: 1887, baseType: !3691, size: 64, offset: 1152)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!232, !584, !615, !934, !7, !588}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !609, file: !12, line: 1890, baseType: !3617, size: 64, offset: 1216)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !609, file: !12, line: 1891, baseType: !3696, size: 64, offset: 1280)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{!232, !584, !3594, !232}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !585, file: !12, line: 623, baseType: !741, size: 64, offset: 192)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !585, file: !12, line: 624, baseType: !580, size: 64, offset: 256)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !585, file: !12, line: 631, baseType: !201, size: 64, offset: 320)
!3702 = !DIDerivedType(tag: DW_TAG_member, scope: !585, file: !12, line: 639, baseType: !3703, size: 32, offset: 384)
!3703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !585, file: !12, line: 639, size: 32, elements: !3704)
!3704 = !{!3705, !3706}
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3703, file: !12, line: 640, baseType: !3028, size: 32)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3703, file: !12, line: 641, baseType: !7, size: 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !585, file: !12, line: 643, baseType: !746, size: 32, offset: 416)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !585, file: !12, line: 644, baseType: !751, size: 64, offset: 448)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !585, file: !12, line: 645, baseType: !3642, size: 128, offset: 512)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !585, file: !12, line: 646, baseType: !3642, size: 128, offset: 640)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !585, file: !12, line: 647, baseType: !3642, size: 128, offset: 768)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !585, file: !12, line: 648, baseType: !249, offset: 896)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !585, file: !12, line: 649, baseType: !230, size: 16, offset: 896)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !585, file: !12, line: 650, baseType: !453, size: 8, offset: 912)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !585, file: !12, line: 651, baseType: !453, size: 8, offset: 920)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !585, file: !12, line: 652, baseType: !1645, size: 64, offset: 960)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !585, file: !12, line: 659, baseType: !201, size: 64, offset: 1024)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !585, file: !12, line: 660, baseType: !1291, size: 256, offset: 1088)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !585, file: !12, line: 662, baseType: !201, size: 64, offset: 1344)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !585, file: !12, line: 663, baseType: !201, size: 64, offset: 1408)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !585, file: !12, line: 665, baseType: !787, size: 128, offset: 1472)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !585, file: !12, line: 666, baseType: !207, size: 128, offset: 1600)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !585, file: !12, line: 675, baseType: !207, size: 128, offset: 1728)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !585, file: !12, line: 676, baseType: !207, size: 128, offset: 1856)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !585, file: !12, line: 677, baseType: !207, size: 128, offset: 1984)
!3726 = !DIDerivedType(tag: DW_TAG_member, scope: !585, file: !12, line: 678, baseType: !3727, size: 128, offset: 2112)
!3727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !585, file: !12, line: 678, size: 128, elements: !3728)
!3728 = !{!3729, !3730}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3727, file: !12, line: 679, baseType: !783, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3727, file: !12, line: 680, baseType: !914, size: 128, align: 64)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !585, file: !12, line: 682, baseType: !273, size: 64, offset: 2240)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !585, file: !12, line: 683, baseType: !273, size: 64, offset: 2304)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !585, file: !12, line: 684, baseType: !308, size: 32, offset: 2368)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !585, file: !12, line: 685, baseType: !308, size: 32, offset: 2400)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !585, file: !12, line: 686, baseType: !308, size: 32, offset: 2432)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !585, file: !12, line: 688, baseType: !308, size: 32, offset: 2464)
!3737 = !DIDerivedType(tag: DW_TAG_member, scope: !585, file: !12, line: 690, baseType: !3738, size: 64, offset: 2496)
!3738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !585, file: !12, line: 690, size: 64, elements: !3739)
!3739 = !{!3740, !3741}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3738, file: !12, line: 691, baseType: !925, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3738, file: !12, line: 692, baseType: !814, size: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !585, file: !12, line: 694, baseType: !3743, size: 64, offset: 2560)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !12, line: 1100, size: 384, elements: !3745)
!3745 = !{!3746, !3747, !3748, !3749}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3744, file: !12, line: 1101, baseType: !249)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3744, file: !12, line: 1102, baseType: !207, size: 128)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3744, file: !12, line: 1103, baseType: !207, size: 128, offset: 128)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3744, file: !12, line: 1104, baseType: !207, size: 128, offset: 256)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !585, file: !12, line: 695, baseType: !581, size: 1216, align: 64, offset: 2624)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !585, file: !12, line: 696, baseType: !207, size: 128, offset: 3840)
!3752 = !DIDerivedType(tag: DW_TAG_member, scope: !585, file: !12, line: 697, baseType: !3753, size: 64, offset: 3968)
!3753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !585, file: !12, line: 697, size: 64, elements: !3754)
!3754 = !{!3755, !3756, !3757, !3760, !3761}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3753, file: !12, line: 698, baseType: !1178, size: 64)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3753, file: !12, line: 699, baseType: !1670, size: 64)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3753, file: !12, line: 700, baseType: !3758, size: 64)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !12, line: 700, flags: DIFlagFwdDecl)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3753, file: !12, line: 701, baseType: !713, size: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3753, file: !12, line: 702, baseType: !7, size: 32)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !585, file: !12, line: 705, baseType: !297, size: 32, offset: 4032)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !585, file: !12, line: 708, baseType: !297, size: 32, offset: 4064)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !585, file: !12, line: 709, baseType: !3498, size: 64, offset: 4096)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !585, file: !12, line: 720, baseType: !202, size: 64, offset: 4160)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !581, file: !12, line: 453, baseType: !1908, size: 128, offset: 64)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !581, file: !12, line: 454, baseType: !544, size: 32, offset: 192)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !581, file: !12, line: 455, baseType: !308, size: 32, offset: 224)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !581, file: !12, line: 460, baseType: !440, size: 128, offset: 256)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !581, file: !12, line: 461, baseType: !1291, size: 256, offset: 384)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !581, file: !12, line: 462, baseType: !201, size: 64, offset: 640)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !581, file: !12, line: 463, baseType: !201, size: 64, offset: 704)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !581, file: !12, line: 464, baseType: !201, size: 64, offset: 768)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !581, file: !12, line: 465, baseType: !3775, size: 64, offset: 832)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3777)
!3777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !12, line: 367, size: 1408, elements: !3778)
!3778 = !{!3779, !3783, !3787, !3791, !3795, !3799, !3811, !3816, !3820, !3824, !3828, !3832, !3836, !3837, !3841, !3847, !3848, !3849, !3853, !3858, !3862, !3869}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !3777, file: !12, line: 368, baseType: !3780, size: 64)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!232, !568, !826}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !3777, file: !12, line: 369, baseType: !3784, size: 64, offset: 64)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!232, !934, !568}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !3777, file: !12, line: 372, baseType: !3788, size: 64, offset: 128)
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3789, size: 64)
!3789 = !DISubroutineType(types: !3790)
!3790 = !{!232, !580, !826}
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !3777, file: !12, line: 375, baseType: !3792, size: 64, offset: 192)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!232, !568}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !3777, file: !12, line: 381, baseType: !3796, size: 64, offset: 256)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!232, !934, !580, !211, !7}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !3777, file: !12, line: 383, baseType: !3800, size: 64, offset: 320)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{null, !3803}
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !972, line: 795, size: 256, elements: !3805)
!3805 = !{!3806, !3807, !3808, !3809, !3810}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3804, file: !972, line: 796, baseType: !934, size: 64)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !3804, file: !972, line: 797, baseType: !580, size: 64, offset: 64)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !3804, file: !972, line: 799, baseType: !201, size: 64, offset: 128)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !3804, file: !972, line: 800, baseType: !7, size: 32, offset: 192)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !3804, file: !972, line: 801, baseType: !7, size: 32, offset: 224)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !3777, file: !12, line: 385, baseType: !3812, size: 64, offset: 384)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!232, !934, !580, !751, !7, !7, !3815, !1135}
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !3777, file: !12, line: 388, baseType: !3817, size: 64, offset: 448)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!232, !934, !580, !751, !7, !7, !568, !202}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !3777, file: !12, line: 393, baseType: !3821, size: 64, offset: 512)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!1692, !580, !1692}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !3777, file: !12, line: 394, baseType: !3825, size: 64, offset: 576)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{null, !568, !7, !7}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !3777, file: !12, line: 395, baseType: !3829, size: 64, offset: 640)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{!232, !568, !544}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !3777, file: !12, line: 396, baseType: !3833, size: 64, offset: 704)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{null, !568}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !3777, file: !12, line: 397, baseType: !947, size: 64, offset: 768)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !3777, file: !12, line: 402, baseType: !3838, size: 64, offset: 832)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!232, !580, !568, !568, !101}
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !3777, file: !12, line: 404, baseType: !3842, size: 64, offset: 896)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!732, !568, !3845}
!3845 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !3846, line: 305, baseType: !7)
!3846 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !3777, file: !12, line: 405, baseType: !3833, size: 64, offset: 960)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !3777, file: !12, line: 406, baseType: !3792, size: 64, offset: 1024)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !3777, file: !12, line: 407, baseType: !3850, size: 64, offset: 1088)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DISubroutineType(types: !3852)
!3852 = !{!232, !568, !201, !201}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !3777, file: !12, line: 409, baseType: !3854, size: 64, offset: 1152)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{null, !568, !3857, !3857}
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !3777, file: !12, line: 410, baseType: !3859, size: 64, offset: 1216)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!232, !580, !568}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !3777, file: !12, line: 413, baseType: !3863, size: 64, offset: 1280)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!232, !3866, !934, !3868}
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 64)
!3867 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !12, line: 61, flags: DIFlagFwdDecl)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !3777, file: !12, line: 415, baseType: !3870, size: 64, offset: 1344)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{null, !934}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !581, file: !12, line: 466, baseType: !201, size: 64, offset: 896)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !581, file: !12, line: 467, baseType: !1456, size: 32, offset: 960)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !581, file: !12, line: 468, baseType: !249, offset: 992)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !581, file: !12, line: 469, baseType: !207, size: 128, offset: 1024)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !581, file: !12, line: 470, baseType: !202, size: 64, offset: 1152)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !576, file: !481, line: 87, baseType: !201, size: 64, offset: 192)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !576, file: !481, line: 94, baseType: !201, size: 64, offset: 256)
!3880 = !DIDerivedType(tag: DW_TAG_member, scope: !573, file: !481, line: 96, baseType: !3881, size: 64)
!3881 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !573, file: !481, line: 96, size: 64, elements: !3882)
!3882 = !{!3883}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !3881, file: !481, line: 101, baseType: !3884, size: 64)
!3884 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !208, line: 143, baseType: !342)
!3885 = !DIDerivedType(tag: DW_TAG_member, scope: !573, file: !481, line: 103, baseType: !3886, size: 320)
!3886 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !573, file: !481, line: 103, size: 320, elements: !3887)
!3887 = !{!3888, !3898, !3899, !3900}
!3888 = !DIDerivedType(tag: DW_TAG_member, scope: !3886, file: !481, line: 104, baseType: !3889, size: 128)
!3889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3886, file: !481, line: 104, size: 128, elements: !3890)
!3890 = !{!3891, !3892}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !3889, file: !481, line: 105, baseType: !207, size: 128)
!3892 = !DIDerivedType(tag: DW_TAG_member, scope: !3889, file: !481, line: 106, baseType: !3893, size: 128)
!3893 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3889, file: !481, line: 106, size: 128, elements: !3894)
!3894 = !{!3895, !3896, !3897}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3893, file: !481, line: 107, baseType: !568, size: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3893, file: !481, line: 109, baseType: !232, size: 32, offset: 64)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !3893, file: !481, line: 110, baseType: !232, size: 32, offset: 96)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !3886, file: !481, line: 117, baseType: !2589, size: 64, offset: 128)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !3886, file: !481, line: 119, baseType: !202, size: 64, offset: 192)
!3900 = !DIDerivedType(tag: DW_TAG_member, scope: !3886, file: !481, line: 120, baseType: !3901, size: 64, offset: 256)
!3901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3886, file: !481, line: 120, size: 64, elements: !3902)
!3902 = !{!3903, !3904, !3905}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !3901, file: !481, line: 121, baseType: !202, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !3901, file: !481, line: 122, baseType: !201, size: 64)
!3905 = !DIDerivedType(tag: DW_TAG_member, scope: !3901, file: !481, line: 123, baseType: !3906, size: 32)
!3906 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3901, file: !481, line: 123, size: 32, elements: !3907)
!3907 = !{!3908, !3909, !3910}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !3906, file: !481, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3906, file: !481, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3906, file: !481, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3911 = !DIDerivedType(tag: DW_TAG_member, scope: !573, file: !481, line: 130, baseType: !3912, size: 192)
!3912 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !573, file: !481, line: 130, size: 192, elements: !3913)
!3913 = !{!3914, !3915, !3916, !3917, !3918}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !3912, file: !481, line: 131, baseType: !201, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !3912, file: !481, line: 134, baseType: !224, size: 8, offset: 64)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !3912, file: !481, line: 135, baseType: !224, size: 8, offset: 72)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !3912, file: !481, line: 136, baseType: !308, size: 32, offset: 96)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !3912, file: !481, line: 137, baseType: !7, size: 32, offset: 128)
!3919 = !DIDerivedType(tag: DW_TAG_member, scope: !573, file: !481, line: 139, baseType: !3920, size: 256)
!3920 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !573, file: !481, line: 139, size: 256, elements: !3921)
!3921 = !{!3922, !3923, !3924}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !3920, file: !481, line: 140, baseType: !201, size: 64)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !3920, file: !481, line: 141, baseType: !308, size: 32, offset: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !3920, file: !481, line: 143, baseType: !207, size: 128, offset: 128)
!3925 = !DIDerivedType(tag: DW_TAG_member, scope: !573, file: !481, line: 145, baseType: !3926, size: 256)
!3926 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !573, file: !481, line: 145, size: 256, elements: !3927)
!3927 = !{!3928, !3929, !3931, !3932, !3937}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !3926, file: !481, line: 146, baseType: !201, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !3926, file: !481, line: 147, baseType: !3930, size: 64, offset: 64)
!3930 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !499, line: 509, baseType: !568)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !3926, file: !481, line: 148, baseType: !201, size: 64, offset: 128)
!3932 = !DIDerivedType(tag: DW_TAG_member, scope: !3926, file: !481, line: 149, baseType: !3933, size: 64, offset: 192)
!3933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3926, file: !481, line: 149, size: 64, elements: !3934)
!3934 = !{!3935, !3936}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !3933, file: !481, line: 150, baseType: !479, size: 64)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !3933, file: !481, line: 151, baseType: !308, size: 32)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !3926, file: !481, line: 156, baseType: !249, offset: 256)
!3938 = !DIDerivedType(tag: DW_TAG_member, scope: !573, file: !481, line: 159, baseType: !3939, size: 128)
!3939 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !573, file: !481, line: 159, size: 128, elements: !3940)
!3940 = !{!3941, !3985}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3939, file: !481, line: 161, baseType: !3942, size: 64)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !109, line: 110, size: 1152, elements: !3944)
!3944 = !{!3945, !3955, !3956, !3957, !3958, !3959, !3960, !3972, !3973, !3974}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3943, file: !109, line: 111, baseType: !3946, size: 384)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !109, line: 19, size: 384, elements: !3947)
!3947 = !{!3948, !3950, !3951, !3952, !3953, !3954}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3946, file: !109, line: 20, baseType: !3949, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !201)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3946, file: !109, line: 21, baseType: !3949, size: 64, offset: 64)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3946, file: !109, line: 22, baseType: !3949, size: 64, offset: 128)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3946, file: !109, line: 23, baseType: !201, size: 64, offset: 192)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3946, file: !109, line: 24, baseType: !201, size: 64, offset: 256)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3946, file: !109, line: 25, baseType: !201, size: 64, offset: 320)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3943, file: !109, line: 112, baseType: !1713, size: 64, offset: 384)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3943, file: !109, line: 113, baseType: !1699, size: 128, offset: 448)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3943, file: !109, line: 114, baseType: !2182, size: 192, offset: 576)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3943, file: !109, line: 115, baseType: !108, size: 32, offset: 768)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3943, file: !109, line: 116, baseType: !7, size: 32, offset: 800)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3943, file: !109, line: 117, baseType: !3961, size: 64, offset: 832)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3963)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !109, line: 67, size: 256, elements: !3964)
!3964 = !{!3965, !3966, !3970, !3971}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3963, file: !109, line: 73, baseType: !3833, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3963, file: !109, line: 78, baseType: !3967, size: 64, offset: 64)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{null, !3942}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3963, file: !109, line: 83, baseType: !3967, size: 64, offset: 128)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3963, file: !109, line: 89, baseType: !534, size: 64, offset: 192)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3943, file: !109, line: 118, baseType: !202, size: 64, offset: 896)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3943, file: !109, line: 119, baseType: !232, size: 32, offset: 960)
!3974 = !DIDerivedType(tag: DW_TAG_member, scope: !3943, file: !109, line: 120, baseType: !3975, size: 128, offset: 1024)
!3975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3943, file: !109, line: 120, size: 128, elements: !3976)
!3976 = !{!3977, !3983}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3975, file: !109, line: 121, baseType: !3978, size: 128)
!3978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3979, line: 6, size: 128, elements: !3980)
!3979 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3980 = !{!3981, !3982}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3978, file: !3979, line: 7, baseType: !342, size: 64)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3978, file: !3979, line: 8, baseType: !342, size: 64, offset: 64)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3975, file: !109, line: 122, baseType: !3984)
!3984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3978, elements: !1434)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3939, file: !481, line: 162, baseType: !202, size: 64, offset: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !573, file: !481, line: 176, baseType: !914, size: 128, align: 64)
!3987 = !DIDerivedType(tag: DW_TAG_member, scope: !569, file: !481, line: 179, baseType: !3988, size: 32, offset: 384)
!3988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !569, file: !481, line: 179, size: 32, elements: !3989)
!3989 = !{!3990, !3991, !3992, !3993}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3988, file: !481, line: 184, baseType: !308, size: 32)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3988, file: !481, line: 192, baseType: !7, size: 32)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3988, file: !481, line: 194, baseType: !7, size: 32)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3988, file: !481, line: 195, baseType: !232, size: 32)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !569, file: !481, line: 199, baseType: !308, size: 32, offset: 416)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !539, file: !116, line: 522, baseType: !568, size: 64, offset: 512)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !539, file: !116, line: 528, baseType: !3997, size: 64, offset: 576)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !539, file: !116, line: 532, baseType: !265, size: 64, offset: 640)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !539, file: !116, line: 536, baseType: !3930, size: 64, offset: 704)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !518, file: !116, line: 563, baseType: !4001, size: 64, offset: 320)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!537, !538, !115}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !518, file: !116, line: 565, baseType: !4005, size: 64, offset: 384)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{null, !538, !201, !201}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !518, file: !116, line: 567, baseType: !4009, size: 64, offset: 448)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!201, !487}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !518, file: !116, line: 571, baseType: !534, size: 64, offset: 512)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !518, file: !116, line: 574, baseType: !534, size: 64, offset: 576)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !518, file: !116, line: 579, baseType: !4015, size: 64, offset: 640)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!232, !487, !201, !202, !232, !232}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !518, file: !116, line: 585, baseType: !4019, size: 64, offset: 704)
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4020, size: 64)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{!687, !487}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !518, file: !116, line: 615, baseType: !4023, size: 64, offset: 768)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!568, !487, !201}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !488, file: !481, line: 359, baseType: !201, size: 64, offset: 1216)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !488, file: !481, line: 361, baseType: !934, size: 64, offset: 1280)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !488, file: !481, line: 362, baseType: !202, size: 64, offset: 1344)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !488, file: !481, line: 365, baseType: !271, size: 64, offset: 1408)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !488, file: !481, line: 373, baseType: !4031, offset: 1472)
!4031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !481, line: 296, elements: !263)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !484, file: !481, line: 391, baseType: !443, size: 64, offset: 64)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !484, file: !481, line: 392, baseType: !342, size: 64, offset: 128)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !484, file: !481, line: 394, baseType: !1166, size: 64, offset: 192)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !484, file: !481, line: 398, baseType: !201, size: 64, offset: 256)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !484, file: !481, line: 399, baseType: !201, size: 64, offset: 320)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !484, file: !481, line: 405, baseType: !201, size: 64, offset: 384)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !484, file: !481, line: 406, baseType: !201, size: 64, offset: 448)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !484, file: !481, line: 407, baseType: !4040, size: 64, offset: 512)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !499, line: 286, baseType: !4042)
!4042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !499, line: 286, size: 64, elements: !4043)
!4043 = !{!4044}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !4042, file: !499, line: 286, baseType: !4045, size: 64)
!4045 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !504, line: 18, baseType: !201)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !484, file: !481, line: 416, baseType: !308, size: 32, offset: 576)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !484, file: !481, line: 428, baseType: !308, size: 32, offset: 608)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !484, file: !481, line: 437, baseType: !308, size: 32, offset: 640)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !484, file: !481, line: 447, baseType: !308, size: 32, offset: 672)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !484, file: !481, line: 450, baseType: !271, size: 64, offset: 704)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !484, file: !481, line: 452, baseType: !232, size: 32, offset: 768)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !484, file: !481, line: 454, baseType: !249, offset: 800)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !484, file: !481, line: 457, baseType: !1291, size: 256, offset: 832)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !484, file: !481, line: 459, baseType: !207, size: 128, offset: 1088)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !484, file: !481, line: 466, baseType: !201, size: 64, offset: 1216)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !484, file: !481, line: 467, baseType: !201, size: 64, offset: 1280)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !484, file: !481, line: 469, baseType: !201, size: 64, offset: 1344)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !484, file: !481, line: 470, baseType: !201, size: 64, offset: 1408)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !484, file: !481, line: 471, baseType: !273, size: 64, offset: 1472)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !484, file: !481, line: 472, baseType: !201, size: 64, offset: 1536)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !484, file: !481, line: 473, baseType: !201, size: 64, offset: 1600)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !484, file: !481, line: 474, baseType: !201, size: 64, offset: 1664)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !484, file: !481, line: 475, baseType: !201, size: 64, offset: 1728)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !484, file: !481, line: 477, baseType: !249, offset: 1792)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !484, file: !481, line: 478, baseType: !201, size: 64, offset: 1792)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !484, file: !481, line: 478, baseType: !201, size: 64, offset: 1856)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !484, file: !481, line: 478, baseType: !201, size: 64, offset: 1920)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !484, file: !481, line: 478, baseType: !201, size: 64, offset: 1984)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !484, file: !481, line: 479, baseType: !201, size: 64, offset: 2048)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !484, file: !481, line: 479, baseType: !201, size: 64, offset: 2112)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !484, file: !481, line: 479, baseType: !201, size: 64, offset: 2176)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !484, file: !481, line: 480, baseType: !201, size: 64, offset: 2240)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !484, file: !481, line: 480, baseType: !201, size: 64, offset: 2304)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !484, file: !481, line: 480, baseType: !201, size: 64, offset: 2368)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !484, file: !481, line: 480, baseType: !201, size: 64, offset: 2432)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !484, file: !481, line: 482, baseType: !4077, size: 2816, offset: 2496)
!4077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 2816, elements: !4078)
!4078 = !{!4079}
!4079 = !DISubrange(count: 44)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !484, file: !481, line: 488, baseType: !4081, size: 256, offset: 5312)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !4082, line: 60, size: 256, elements: !4083)
!4082 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!4083 = !{!4084}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4081, file: !4082, line: 61, baseType: !4085, size: 256)
!4085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 256, elements: !1227)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !484, file: !481, line: 490, baseType: !4087, size: 64, offset: 5568)
!4087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4088, size: 64)
!4088 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !481, line: 490, flags: DIFlagFwdDecl)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !484, file: !481, line: 493, baseType: !4090, size: 896, offset: 5632)
!4090 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !4091, line: 53, baseType: !4092)
!4091 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!4092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4091, line: 13, size: 896, elements: !4093)
!4093 = !{!4094, !4095, !4096, !4097, !4100, !4101, !4102, !4103, !4123, !4124, !4125}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !4092, file: !4091, line: 18, baseType: !342, size: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !4092, file: !4091, line: 28, baseType: !273, size: 64, offset: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !4092, file: !4091, line: 31, baseType: !1291, size: 256, offset: 128)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !4092, file: !4091, line: 32, baseType: !4098, size: 64, offset: 384)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !4091, line: 32, flags: DIFlagFwdDecl)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !4092, file: !4091, line: 37, baseType: !230, size: 16, offset: 448)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4092, file: !4091, line: 40, baseType: !267, size: 192, offset: 512)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !4092, file: !4091, line: 41, baseType: !202, size: 64, offset: 704)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !4092, file: !4091, line: 42, baseType: !4104, size: 64, offset: 768)
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4106)
!4106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !4107, line: 13, size: 896, elements: !4108)
!4107 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!4108 = !{!4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4121, !4122}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4106, file: !4107, line: 14, baseType: !202, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4106, file: !4107, line: 15, baseType: !201, size: 64, offset: 64)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !4106, file: !4107, line: 17, baseType: !201, size: 64, offset: 128)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !4106, file: !4107, line: 17, baseType: !201, size: 64, offset: 192)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !4106, file: !4107, line: 19, baseType: !300, size: 64, offset: 256)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !4106, file: !4107, line: 21, baseType: !300, size: 64, offset: 320)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !4106, file: !4107, line: 22, baseType: !300, size: 64, offset: 384)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !4106, file: !4107, line: 23, baseType: !300, size: 64, offset: 448)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !4106, file: !4107, line: 24, baseType: !300, size: 64, offset: 512)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !4106, file: !4107, line: 25, baseType: !300, size: 64, offset: 576)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !4106, file: !4107, line: 26, baseType: !300, size: 64, offset: 640)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !4106, file: !4107, line: 27, baseType: !300, size: 64, offset: 704)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !4106, file: !4107, line: 28, baseType: !300, size: 64, offset: 768)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !4106, file: !4107, line: 29, baseType: !300, size: 64, offset: 832)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !4092, file: !4091, line: 44, baseType: !308, size: 32, offset: 832)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !4092, file: !4091, line: 50, baseType: !962, size: 16, offset: 864)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !4092, file: !4091, line: 51, baseType: !4126, size: 16, offset: 880)
!4126 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !278, line: 18, baseType: !4127)
!4127 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !280, line: 23, baseType: !1318)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !484, file: !481, line: 495, baseType: !201, size: 64, offset: 6528)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !484, file: !481, line: 497, baseType: !4130, size: 64, offset: 6592)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !481, line: 381, size: 384, elements: !4132)
!4132 = !{!4133, !4134, !4140}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4131, file: !481, line: 382, baseType: !308, size: 32)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !4131, file: !481, line: 383, baseType: !4135, size: 128, offset: 64)
!4135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !481, line: 376, size: 128, elements: !4136)
!4136 = !{!4137, !4138}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4135, file: !481, line: 377, baseType: !286, size: 64)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4135, file: !481, line: 378, baseType: !4139, size: 64, offset: 64)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4135, size: 64)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !4131, file: !481, line: 384, baseType: !2182, size: 192, offset: 192)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !484, file: !481, line: 500, baseType: !249, offset: 6656)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !484, file: !481, line: 501, baseType: !4143, size: 64, offset: 6656)
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4144 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !481, line: 387, flags: DIFlagFwdDecl)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !484, file: !481, line: 516, baseType: !1424, size: 64, offset: 6720)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !484, file: !481, line: 519, baseType: !934, size: 64, offset: 6784)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !484, file: !481, line: 521, baseType: !4148, size: 64, offset: 6848)
!4148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 64)
!4149 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !481, line: 521, flags: DIFlagFwdDecl)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !484, file: !481, line: 545, baseType: !308, size: 32, offset: 6912)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !484, file: !481, line: 548, baseType: !732, size: 8, offset: 6944)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !484, file: !481, line: 550, baseType: !4153, offset: 6952)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4154, line: 142, elements: !263)
!4154 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !484, file: !481, line: 554, baseType: !2238, size: 256, offset: 6976)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !484, file: !481, line: 557, baseType: !296, size: 32, offset: 7232)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !480, file: !481, line: 565, baseType: !4158, offset: 7296)
!4158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, elements: !2515)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !287, file: !288, line: 758, baseType: !479, size: 64, offset: 3968)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !287, file: !288, line: 761, baseType: !4161, size: 320, offset: 4032)
!4161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !4082, line: 34, size: 320, elements: !4162)
!4162 = !{!4163, !4164}
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !4161, file: !4082, line: 35, baseType: !342, size: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !4161, file: !4082, line: 36, baseType: !4165, size: 256, offset: 64)
!4165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 256, elements: !1227)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !287, file: !288, line: 766, baseType: !232, size: 32, offset: 4352)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !287, file: !288, line: 767, baseType: !232, size: 32, offset: 4384)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !287, file: !288, line: 768, baseType: !232, size: 32, offset: 4416)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !287, file: !288, line: 770, baseType: !232, size: 32, offset: 4448)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !287, file: !288, line: 772, baseType: !201, size: 64, offset: 4480)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !287, file: !288, line: 775, baseType: !7, size: 32, offset: 4544)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !287, file: !288, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !287, file: !288, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !287, file: !288, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !287, file: !288, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !287, file: !288, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !287, file: !288, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !287, file: !288, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !287, file: !288, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !287, file: !288, line: 831, baseType: !201, size: 64, offset: 4672)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !287, file: !288, line: 833, baseType: !4182, size: 384, offset: 4736)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !122, line: 25, size: 384, elements: !4183)
!4183 = !{!4184, !4189}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4182, file: !122, line: 26, baseType: !4185, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4186, size: 64)
!4186 = !DISubroutineType(types: !4187)
!4187 = !{!300, !4188}
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4182, size: 64)
!4189 = !DIDerivedType(tag: DW_TAG_member, scope: !4182, file: !122, line: 27, baseType: !4190, size: 320, offset: 64)
!4190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4182, file: !122, line: 27, size: 320, elements: !4191)
!4191 = !{!4192, !4202, !4227}
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !4190, file: !122, line: 36, baseType: !4193, size: 320)
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4190, file: !122, line: 29, size: 320, elements: !4194)
!4194 = !{!4195, !4197, !4198, !4199, !4200, !4201}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !4193, file: !122, line: 30, baseType: !4196, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4193, file: !122, line: 31, baseType: !296, size: 32, offset: 64)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4193, file: !122, line: 32, baseType: !296, size: 32, offset: 96)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !4193, file: !122, line: 33, baseType: !296, size: 32, offset: 128)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4193, file: !122, line: 34, baseType: !342, size: 64, offset: 192)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !4193, file: !122, line: 35, baseType: !4196, size: 64, offset: 256)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !4190, file: !122, line: 46, baseType: !4203, size: 192)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4190, file: !122, line: 38, size: 192, elements: !4204)
!4204 = !{!4205, !4206, !4207, !4226}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !4203, file: !122, line: 39, baseType: !422, size: 32)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4203, file: !122, line: 40, baseType: !121, size: 32, offset: 32)
!4207 = !DIDerivedType(tag: DW_TAG_member, scope: !4203, file: !122, line: 41, baseType: !4208, size: 64, offset: 64)
!4208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4203, file: !122, line: 41, size: 64, elements: !4209)
!4209 = !{!4210, !4218}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !4208, file: !122, line: 42, baseType: !4211, size: 64)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !4213, line: 7, size: 128, elements: !4214)
!4213 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!4214 = !{!4215, !4217}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4212, file: !4213, line: 8, baseType: !4216, size: 64)
!4216 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !424, line: 93, baseType: !281)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4212, file: !4213, line: 9, baseType: !281, size: 64, offset: 64)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !4208, file: !122, line: 43, baseType: !4219, size: 64)
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 64)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !4221, line: 7, size: 64, elements: !4222)
!4221 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!4222 = !{!4223, !4225}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4220, file: !4221, line: 8, baseType: !4224, size: 32)
!4224 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !4221, line: 5, baseType: !1283)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4220, file: !4221, line: 9, baseType: !1283, size: 32, offset: 32)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4203, file: !122, line: 45, baseType: !342, size: 64, offset: 128)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4190, file: !122, line: 54, baseType: !4228, size: 256)
!4228 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4190, file: !122, line: 48, size: 256, elements: !4229)
!4229 = !{!4230, !4233, !4234, !4235, !4236}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !4228, file: !122, line: 49, baseType: !4231, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!4232 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !122, line: 14, flags: DIFlagFwdDecl)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !4228, file: !122, line: 50, baseType: !232, size: 32, offset: 64)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !4228, file: !122, line: 51, baseType: !232, size: 32, offset: 96)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4228, file: !122, line: 52, baseType: !201, size: 64, offset: 128)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4228, file: !122, line: 53, baseType: !201, size: 64, offset: 192)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !287, file: !288, line: 835, baseType: !4238, size: 32, offset: 5120)
!4238 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !208, line: 22, baseType: !4239)
!4239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !424, line: 28, baseType: !232)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !287, file: !288, line: 836, baseType: !4238, size: 32, offset: 5152)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !287, file: !288, line: 840, baseType: !201, size: 64, offset: 5184)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !287, file: !288, line: 849, baseType: !286, size: 64, offset: 5248)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !287, file: !288, line: 852, baseType: !286, size: 64, offset: 5312)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !287, file: !288, line: 857, baseType: !207, size: 128, offset: 5376)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !287, file: !288, line: 858, baseType: !207, size: 128, offset: 5504)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !287, file: !288, line: 859, baseType: !286, size: 64, offset: 5632)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !287, file: !288, line: 867, baseType: !207, size: 128, offset: 5696)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !287, file: !288, line: 868, baseType: !207, size: 128, offset: 5824)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !287, file: !288, line: 871, baseType: !1219, size: 64, offset: 5952)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !287, file: !288, line: 872, baseType: !4251, size: 512, offset: 6016)
!4251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 512, elements: !1227)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !287, file: !288, line: 873, baseType: !207, size: 128, offset: 6528)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !287, file: !288, line: 874, baseType: !207, size: 128, offset: 6656)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !287, file: !288, line: 876, baseType: !4255, size: 64, offset: 6784)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !287, file: !288, line: 879, baseType: !855, size: 64, offset: 6848)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !287, file: !288, line: 882, baseType: !855, size: 64, offset: 6912)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !287, file: !288, line: 884, baseType: !342, size: 64, offset: 6976)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !287, file: !288, line: 885, baseType: !342, size: 64, offset: 7040)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !287, file: !288, line: 890, baseType: !342, size: 64, offset: 7104)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !287, file: !288, line: 891, baseType: !4262, size: 128, offset: 7168)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !288, line: 242, size: 128, elements: !4263)
!4263 = !{!4264, !4265, !4266}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4262, file: !288, line: 244, baseType: !342, size: 64)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4262, file: !288, line: 245, baseType: !342, size: 64, offset: 64)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4262, file: !288, line: 246, baseType: !404, offset: 128)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !287, file: !288, line: 900, baseType: !201, size: 64, offset: 7296)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !287, file: !288, line: 901, baseType: !201, size: 64, offset: 7360)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !287, file: !288, line: 904, baseType: !342, size: 64, offset: 7424)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !287, file: !288, line: 907, baseType: !342, size: 64, offset: 7488)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !287, file: !288, line: 910, baseType: !201, size: 64, offset: 7552)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !287, file: !288, line: 911, baseType: !201, size: 64, offset: 7616)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !287, file: !288, line: 914, baseType: !4274, size: 640, offset: 7680)
!4274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !4275, line: 123, size: 640, elements: !4276)
!4275 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!4276 = !{!4277, !4283, !4284}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !4274, file: !4275, line: 124, baseType: !4278, size: 576)
!4278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4279, size: 576, elements: !799)
!4279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !4275, line: 108, size: 192, elements: !4280)
!4280 = !{!4281, !4282}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !4279, file: !4275, line: 109, baseType: !342, size: 64)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !4279, file: !4275, line: 110, baseType: !437, size: 128, offset: 64)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !4274, file: !4275, line: 125, baseType: !7, size: 32, offset: 576)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !4274, file: !4275, line: 126, baseType: !7, size: 32, offset: 608)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !287, file: !288, line: 917, baseType: !4286, size: 192, offset: 8320)
!4286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !4275, line: 134, size: 192, elements: !4287)
!4287 = !{!4288, !4289}
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4286, file: !4275, line: 135, baseType: !914, size: 128, align: 64)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !4286, file: !4275, line: 136, baseType: !7, size: 32, offset: 128)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !287, file: !288, line: 923, baseType: !1245, size: 64, offset: 8512)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !287, file: !288, line: 926, baseType: !1245, size: 64, offset: 8576)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !287, file: !288, line: 929, baseType: !1245, size: 64, offset: 8640)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !287, file: !288, line: 933, baseType: !1275, size: 64, offset: 8704)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !287, file: !288, line: 943, baseType: !4295, size: 128, offset: 8768)
!4295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 128, elements: !225)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !287, file: !288, line: 945, baseType: !4297, size: 64, offset: 8896)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !288, line: 49, flags: DIFlagFwdDecl)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !287, file: !288, line: 956, baseType: !4300, size: 64, offset: 8960)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !288, line: 45, flags: DIFlagFwdDecl)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !287, file: !288, line: 959, baseType: !4303, size: 64, offset: 9024)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !288, line: 959, flags: DIFlagFwdDecl)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !287, file: !288, line: 962, baseType: !4306, size: 64, offset: 9088)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !288, line: 66, flags: DIFlagFwdDecl)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !287, file: !288, line: 966, baseType: !4309, size: 64, offset: 9152)
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !288, line: 50, flags: DIFlagFwdDecl)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !287, file: !288, line: 969, baseType: !4312, size: 64, offset: 9216)
!4312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4313, size: 64)
!4313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !4314, line: 82, size: 7296, elements: !4315)
!4314 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!4315 = !{!4316, !4317, !4318, !4319, !4320, !4321, !4322, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4351, !4360, !4361, !4363, !4364, !4365, !4368, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4398, !4399, !4406, !4407, !4408, !4409, !4410, !4411}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !4313, file: !4314, line: 83, baseType: !303, size: 32)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !4313, file: !4314, line: 84, baseType: !308, size: 32, offset: 32)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4313, file: !4314, line: 85, baseType: !232, size: 32, offset: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !4313, file: !4314, line: 86, baseType: !207, size: 128, offset: 128)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !4313, file: !4314, line: 88, baseType: !1065, size: 128, offset: 256)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !4313, file: !4314, line: 91, baseType: !286, size: 64, offset: 384)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !4313, file: !4314, line: 94, baseType: !4323, size: 192, offset: 448)
!4323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !4324, line: 30, size: 192, elements: !4325)
!4324 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!4325 = !{!4326, !4327}
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4323, file: !4324, line: 31, baseType: !207, size: 128)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4323, file: !4324, line: 32, baseType: !4328, size: 64, offset: 128)
!4328 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !4329, line: 25, baseType: !4330)
!4329 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!4330 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4329, line: 23, size: 64, elements: !4331)
!4331 = !{!4332}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !4330, file: !4329, line: 24, baseType: !471, size: 64)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !4313, file: !4314, line: 97, baseType: !783, size: 64, offset: 640)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !4313, file: !4314, line: 100, baseType: !232, size: 32, offset: 704)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !4313, file: !4314, line: 106, baseType: !232, size: 32, offset: 736)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !4313, file: !4314, line: 107, baseType: !286, size: 64, offset: 768)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !4313, file: !4314, line: 110, baseType: !232, size: 32, offset: 832)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4313, file: !4314, line: 111, baseType: !7, size: 32, offset: 864)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !4313, file: !4314, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !4313, file: !4314, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !4313, file: !4314, line: 128, baseType: !232, size: 32, offset: 928)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !4313, file: !4314, line: 129, baseType: !207, size: 128, offset: 960)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !4313, file: !4314, line: 132, baseType: !379, size: 512, offset: 1088)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !4313, file: !4314, line: 133, baseType: !387, size: 64, offset: 1600)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !4313, file: !4314, line: 140, baseType: !4346, size: 256, offset: 1664)
!4346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4347, size: 256, elements: !1267)
!4347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !4314, line: 38, size: 128, elements: !4348)
!4348 = !{!4349, !4350}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4347, file: !4314, line: 39, baseType: !342, size: 64)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !4347, file: !4314, line: 40, baseType: !342, size: 64, offset: 64)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !4313, file: !4314, line: 146, baseType: !4352, size: 192, offset: 1920)
!4352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !4314, line: 66, size: 192, elements: !4353)
!4353 = !{!4354}
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !4352, file: !4314, line: 67, baseType: !4355, size: 192)
!4355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !4314, line: 47, size: 192, elements: !4356)
!4356 = !{!4357, !4358, !4359}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4355, file: !4314, line: 48, baseType: !273, size: 64)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4355, file: !4314, line: 49, baseType: !273, size: 64, offset: 64)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !4355, file: !4314, line: 50, baseType: !273, size: 64, offset: 128)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !4313, file: !4314, line: 150, baseType: !4274, size: 640, offset: 2112)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !4313, file: !4314, line: 153, baseType: !4362, size: 256, offset: 2752)
!4362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1219, size: 256, elements: !1227)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !4313, file: !4314, line: 159, baseType: !1219, size: 64, offset: 3008)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !4313, file: !4314, line: 162, baseType: !232, size: 32, offset: 3072)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4313, file: !4314, line: 164, baseType: !4366, size: 64, offset: 3136)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !4314, line: 164, flags: DIFlagFwdDecl)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !4313, file: !4314, line: 175, baseType: !4369, size: 32, offset: 3200)
!4369 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !427, line: 805, baseType: !4370)
!4370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 798, size: 32, elements: !4371)
!4371 = !{!4372, !4373}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !4370, file: !427, line: 803, baseType: !621, size: 32)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4370, file: !427, line: 804, baseType: !249, offset: 32)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4313, file: !4314, line: 176, baseType: !342, size: 64, offset: 3264)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4313, file: !4314, line: 176, baseType: !342, size: 64, offset: 3328)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !4313, file: !4314, line: 176, baseType: !342, size: 64, offset: 3392)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !4313, file: !4314, line: 176, baseType: !342, size: 64, offset: 3456)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !4313, file: !4314, line: 177, baseType: !342, size: 64, offset: 3520)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !4313, file: !4314, line: 178, baseType: !342, size: 64, offset: 3584)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !4313, file: !4314, line: 179, baseType: !4262, size: 128, offset: 3648)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !4313, file: !4314, line: 180, baseType: !201, size: 64, offset: 3776)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !4313, file: !4314, line: 180, baseType: !201, size: 64, offset: 3840)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !4313, file: !4314, line: 180, baseType: !201, size: 64, offset: 3904)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !4313, file: !4314, line: 180, baseType: !201, size: 64, offset: 3968)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !4313, file: !4314, line: 181, baseType: !201, size: 64, offset: 4032)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !4313, file: !4314, line: 181, baseType: !201, size: 64, offset: 4096)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !4313, file: !4314, line: 181, baseType: !201, size: 64, offset: 4160)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !4313, file: !4314, line: 181, baseType: !201, size: 64, offset: 4224)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !4313, file: !4314, line: 182, baseType: !201, size: 64, offset: 4288)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !4313, file: !4314, line: 182, baseType: !201, size: 64, offset: 4352)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !4313, file: !4314, line: 182, baseType: !201, size: 64, offset: 4416)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !4313, file: !4314, line: 182, baseType: !201, size: 64, offset: 4480)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !4313, file: !4314, line: 183, baseType: !201, size: 64, offset: 4544)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !4313, file: !4314, line: 183, baseType: !201, size: 64, offset: 4608)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !4313, file: !4314, line: 184, baseType: !4396, offset: 4672)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !4397, line: 12, elements: !263)
!4397 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !4313, file: !4314, line: 192, baseType: !344, size: 64, offset: 4672)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !4313, file: !4314, line: 203, baseType: !4400, size: 2048, offset: 4736)
!4400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4401, size: 2048, elements: !225)
!4401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !4402, line: 43, size: 128, elements: !4403)
!4402 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!4403 = !{!4404, !4405}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !4401, file: !4402, line: 44, baseType: !869, size: 64)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !4401, file: !4402, line: 45, baseType: !869, size: 64, offset: 64)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !4313, file: !4314, line: 220, baseType: !732, size: 8, offset: 6784)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !4313, file: !4314, line: 221, baseType: !1318, size: 16, offset: 6800)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !4313, file: !4314, line: 222, baseType: !1318, size: 16, offset: 6816)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !4313, file: !4314, line: 224, baseType: !479, size: 64, offset: 6848)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !4313, file: !4314, line: 227, baseType: !267, size: 192, offset: 6912)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !4313, file: !4314, line: 233, baseType: !267, size: 192, offset: 7104)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !287, file: !288, line: 970, baseType: !4413, size: 64, offset: 9280)
!4413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4414, size: 64)
!4414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !4314, line: 20, size: 16576, elements: !4415)
!4415 = !{!4416, !4417, !4418, !4419}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !4414, file: !4314, line: 21, baseType: !249)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4414, file: !4314, line: 22, baseType: !303, size: 32)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !4414, file: !4314, line: 23, baseType: !1065, size: 128, offset: 64)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4414, file: !4314, line: 24, baseType: !4420, size: 16384, offset: 192)
!4420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4421, size: 16384, elements: !1764)
!4421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !4324, line: 49, size: 256, elements: !4422)
!4422 = !{!4423}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !4421, file: !4324, line: 50, baseType: !4424, size: 256)
!4424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !4324, line: 35, size: 256, elements: !4425)
!4425 = !{!4426, !4433, !4434, !4440}
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4424, file: !4324, line: 37, baseType: !4427, size: 64)
!4427 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !4428, line: 19, baseType: !4429)
!4428 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !4428, line: 18, baseType: !4431)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{null, !232}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4424, file: !4324, line: 38, baseType: !201, size: 64, offset: 64)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4424, file: !4324, line: 44, baseType: !4435, size: 64, offset: 128)
!4435 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !4428, line: 22, baseType: !4436)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !4428, line: 21, baseType: !4438)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{null}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4424, file: !4324, line: 46, baseType: !4328, size: 64, offset: 192)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !287, file: !288, line: 971, baseType: !4328, size: 64, offset: 9344)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !287, file: !288, line: 972, baseType: !4328, size: 64, offset: 9408)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !287, file: !288, line: 974, baseType: !4328, size: 64, offset: 9472)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !287, file: !288, line: 975, baseType: !4323, size: 192, offset: 9536)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !287, file: !288, line: 976, baseType: !201, size: 64, offset: 9728)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !287, file: !288, line: 977, baseType: !867, size: 64, offset: 9792)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !287, file: !288, line: 978, baseType: !7, size: 32, offset: 9856)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !287, file: !288, line: 980, baseType: !917, size: 64, offset: 9920)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !287, file: !288, line: 989, baseType: !4450, size: 128, offset: 9984)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !4451, line: 35, size: 128, elements: !4452)
!4451 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!4452 = !{!4453, !4454, !4455}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4450, file: !4451, line: 36, baseType: !232, size: 32)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !4450, file: !4451, line: 37, baseType: !308, size: 32, offset: 32)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4450, file: !4451, line: 38, baseType: !4456, size: 64, offset: 64)
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4457, size: 64)
!4457 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !4451, line: 23, flags: DIFlagFwdDecl)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !287, file: !288, line: 992, baseType: !342, size: 64, offset: 10112)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !287, file: !288, line: 993, baseType: !342, size: 64, offset: 10176)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !287, file: !288, line: 996, baseType: !249, offset: 10240)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !287, file: !288, line: 999, baseType: !404, offset: 10240)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !287, file: !288, line: 1001, baseType: !4463, size: 64, offset: 10240)
!4463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !288, line: 636, size: 64, elements: !4464)
!4464 = !{!4465}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4463, file: !288, line: 637, baseType: !4466, size: 64)
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !287, file: !288, line: 1005, baseType: !440, size: 128, offset: 10304)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !287, file: !288, line: 1007, baseType: !286, size: 64, offset: 10432)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !287, file: !288, line: 1009, baseType: !4470, size: 64, offset: 10496)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !288, line: 1009, flags: DIFlagFwdDecl)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !287, file: !288, line: 1043, baseType: !202, size: 64, offset: 10560)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !287, file: !288, line: 1046, baseType: !4474, size: 64, offset: 10624)
!4474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !287, file: !288, line: 1050, baseType: !4476, size: 64, offset: 10688)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 64)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !68, line: 1236, size: 320, elements: !4478)
!4478 = !{!4479, !4480, !4481, !4482, !4483}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !4477, file: !68, line: 1237, baseType: !207, size: 128)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !4477, file: !68, line: 1238, baseType: !207, size: 128, offset: 128)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !4477, file: !68, line: 1239, baseType: !230, size: 16, offset: 256)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !4477, file: !68, line: 1240, baseType: !732, size: 8, offset: 272)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !4477, file: !68, line: 1241, baseType: !732, size: 8, offset: 280)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !287, file: !288, line: 1054, baseType: !4485, size: 64, offset: 10752)
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 64)
!4486 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !288, line: 55, flags: DIFlagFwdDecl)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !287, file: !288, line: 1056, baseType: !3150, size: 64, offset: 10816)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !287, file: !288, line: 1058, baseType: !2836, size: 64, offset: 10880)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !287, file: !288, line: 1061, baseType: !4490, size: 64, offset: 10944)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !288, line: 43, flags: DIFlagFwdDecl)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !287, file: !288, line: 1064, baseType: !201, size: 64, offset: 11008)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !287, file: !288, line: 1065, baseType: !4494, size: 64, offset: 11072)
!4494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4495, size: 64)
!4495 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !4324, line: 14, baseType: !4496)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !4324, line: 12, size: 384, elements: !4497)
!4497 = !{!4498}
!4498 = !DIDerivedType(tag: DW_TAG_member, scope: !4496, file: !4324, line: 13, baseType: !4499, size: 384)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4496, file: !4324, line: 13, size: 384, elements: !4500)
!4500 = !{!4501, !4502, !4503, !4504}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !4499, file: !4324, line: 13, baseType: !232, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !4499, file: !4324, line: 13, baseType: !232, size: 32, offset: 32)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !4499, file: !4324, line: 13, baseType: !232, size: 32, offset: 64)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !4499, file: !4324, line: 13, baseType: !4505, size: 256, offset: 128)
!4505 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !4506, line: 32, size: 256, elements: !4507)
!4506 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!4507 = !{!4508, !4513, !4526, !4532, !4541, !4561, !4566}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !4505, file: !4506, line: 37, baseType: !4509, size: 64)
!4509 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4505, file: !4506, line: 34, size: 64, elements: !4510)
!4510 = !{!4511, !4512}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4509, file: !4506, line: 35, baseType: !4239, size: 32)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4509, file: !4506, line: 36, baseType: !597, size: 32, offset: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !4505, file: !4506, line: 45, baseType: !4514, size: 192)
!4514 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4505, file: !4506, line: 40, size: 192, elements: !4515)
!4515 = !{!4516, !4518, !4519, !4525}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !4514, file: !4506, line: 41, baseType: !4517, size: 32)
!4517 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !424, line: 95, baseType: !232)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !4514, file: !4506, line: 42, baseType: !232, size: 32, offset: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4514, file: !4506, line: 43, baseType: !4520, size: 64, offset: 64)
!4520 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !4506, line: 11, baseType: !4521)
!4521 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !4506, line: 8, size: 64, elements: !4522)
!4522 = !{!4523, !4524}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !4521, file: !4506, line: 9, baseType: !232, size: 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !4521, file: !4506, line: 10, baseType: !202, size: 64)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !4514, file: !4506, line: 44, baseType: !232, size: 32, offset: 128)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !4505, file: !4506, line: 52, baseType: !4527, size: 128)
!4527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4505, file: !4506, line: 48, size: 128, elements: !4528)
!4528 = !{!4529, !4530, !4531}
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4527, file: !4506, line: 49, baseType: !4239, size: 32)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4527, file: !4506, line: 50, baseType: !597, size: 32, offset: 32)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4527, file: !4506, line: 51, baseType: !4520, size: 64, offset: 64)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !4505, file: !4506, line: 61, baseType: !4533, size: 256)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4505, file: !4506, line: 55, size: 256, elements: !4534)
!4534 = !{!4535, !4536, !4537, !4538, !4540}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4533, file: !4506, line: 56, baseType: !4239, size: 32)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4533, file: !4506, line: 57, baseType: !597, size: 32, offset: 32)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !4533, file: !4506, line: 58, baseType: !232, size: 32, offset: 64)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !4533, file: !4506, line: 59, baseType: !4539, size: 64, offset: 128)
!4539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !424, line: 94, baseType: !941)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !4533, file: !4506, line: 60, baseType: !4539, size: 64, offset: 192)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !4505, file: !4506, line: 95, baseType: !4542, size: 256)
!4542 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4505, file: !4506, line: 64, size: 256, elements: !4543)
!4543 = !{!4544, !4545}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !4542, file: !4506, line: 65, baseType: !202, size: 64)
!4545 = !DIDerivedType(tag: DW_TAG_member, scope: !4542, file: !4506, line: 77, baseType: !4546, size: 192, offset: 64)
!4546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4542, file: !4506, line: 77, size: 192, elements: !4547)
!4547 = !{!4548, !4549, !4556}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !4546, file: !4506, line: 82, baseType: !1318, size: 16)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !4546, file: !4506, line: 88, baseType: !4550, size: 192)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4546, file: !4506, line: 84, size: 192, elements: !4551)
!4551 = !{!4552, !4554, !4555}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !4550, file: !4506, line: 85, baseType: !4553, size: 64)
!4553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 64, elements: !418)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !4550, file: !4506, line: 86, baseType: !202, size: 64, offset: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !4550, file: !4506, line: 87, baseType: !202, size: 64, offset: 128)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !4546, file: !4506, line: 93, baseType: !4557, size: 96)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4546, file: !4506, line: 90, size: 96, elements: !4558)
!4558 = !{!4559, !4560}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !4557, file: !4506, line: 91, baseType: !4553, size: 64)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !4557, file: !4506, line: 92, baseType: !297, size: 32, offset: 64)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !4505, file: !4506, line: 101, baseType: !4562, size: 128)
!4562 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4505, file: !4506, line: 98, size: 128, elements: !4563)
!4563 = !{!4564, !4565}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !4562, file: !4506, line: 99, baseType: !300, size: 64)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !4562, file: !4506, line: 100, baseType: !232, size: 32, offset: 64)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !4505, file: !4506, line: 108, baseType: !4567, size: 128)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4505, file: !4506, line: 104, size: 128, elements: !4568)
!4568 = !{!4569, !4570, !4571}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4567, file: !4506, line: 105, baseType: !202, size: 64)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4567, file: !4506, line: 106, baseType: !232, size: 32, offset: 64)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4567, file: !4506, line: 107, baseType: !7, size: 32, offset: 96)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !287, file: !288, line: 1067, baseType: !4396, offset: 11136)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !287, file: !288, line: 1099, baseType: !4574, size: 64, offset: 11136)
!4574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4575, size: 64)
!4575 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !288, line: 56, flags: DIFlagFwdDecl)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !287, file: !288, line: 1103, baseType: !207, size: 128, offset: 11200)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !287, file: !288, line: 1104, baseType: !4578, size: 64, offset: 11328)
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !288, line: 46, flags: DIFlagFwdDecl)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !287, file: !288, line: 1105, baseType: !267, size: 192, offset: 11392)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !287, file: !288, line: 1106, baseType: !7, size: 32, offset: 11584)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !287, file: !288, line: 1109, baseType: !4583, size: 128, offset: 11648)
!4583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4584, size: 128, elements: !1267)
!4584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4585, size: 64)
!4585 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !288, line: 51, flags: DIFlagFwdDecl)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !287, file: !288, line: 1110, baseType: !267, size: 192, offset: 11776)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !287, file: !288, line: 1111, baseType: !207, size: 128, offset: 11968)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !287, file: !288, line: 1173, baseType: !4589, size: 64, offset: 12096)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4591, line: 62, size: 256, align: 256, elements: !4592)
!4591 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4592 = !{!4593, !4594, !4595, !4600}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4590, file: !4591, line: 75, baseType: !297, size: 32)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4590, file: !4591, line: 90, baseType: !297, size: 32, offset: 32)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4590, file: !4591, line: 124, baseType: !4596, size: 64, offset: 64)
!4596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4590, file: !4591, line: 109, size: 64, elements: !4597)
!4597 = !{!4598, !4599}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4596, file: !4591, line: 110, baseType: !343, size: 64)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4596, file: !4591, line: 112, baseType: !343, size: 64)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4590, file: !4591, line: 144, baseType: !297, size: 32, offset: 128)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !287, file: !288, line: 1174, baseType: !296, size: 32, offset: 12160)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !287, file: !288, line: 1179, baseType: !201, size: 64, offset: 12224)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !287, file: !288, line: 1182, baseType: !4604, size: 128, offset: 12288)
!4604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !4082, line: 76, size: 128, elements: !4605)
!4605 = !{!4606, !4611, !4612}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4604, file: !4082, line: 85, baseType: !4607, size: 64)
!4607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4608, line: 7, size: 64, elements: !4609)
!4608 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4609 = !{!4610}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4607, file: !4608, line: 12, baseType: !468, size: 64)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4604, file: !4082, line: 88, baseType: !732, size: 8, offset: 64)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4604, file: !4082, line: 95, baseType: !732, size: 8, offset: 72)
!4613 = !DIDerivedType(tag: DW_TAG_member, scope: !287, file: !288, line: 1184, baseType: !4614, size: 128, offset: 12416)
!4614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !287, file: !288, line: 1184, size: 128, elements: !4615)
!4615 = !{!4616, !4617}
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4614, file: !288, line: 1185, baseType: !303, size: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4614, file: !288, line: 1186, baseType: !914, size: 128, align: 64)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !287, file: !288, line: 1190, baseType: !1178, size: 64, offset: 12544)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !287, file: !288, line: 1192, baseType: !4620, size: 128, offset: 12608)
!4620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !4082, line: 64, size: 128, elements: !4621)
!4621 = !{!4622, !4623, !4624}
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4620, file: !4082, line: 65, baseType: !568, size: 64)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4620, file: !4082, line: 67, baseType: !297, size: 32, offset: 64)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4620, file: !4082, line: 68, baseType: !297, size: 32, offset: 96)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !287, file: !288, line: 1206, baseType: !232, size: 32, offset: 12736)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !287, file: !288, line: 1207, baseType: !232, size: 32, offset: 12768)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !287, file: !288, line: 1209, baseType: !201, size: 64, offset: 12800)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !287, file: !288, line: 1219, baseType: !342, size: 64, offset: 12864)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !287, file: !288, line: 1220, baseType: !342, size: 64, offset: 12928)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !287, file: !288, line: 1317, baseType: !232, size: 32, offset: 12992)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !287, file: !288, line: 1319, baseType: !286, size: 64, offset: 13056)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !287, file: !288, line: 1322, baseType: !4633, size: 64, offset: 13120)
!4633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 64)
!4634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4635, line: 56, size: 512, elements: !4636)
!4635 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4636 = !{!4637, !4638, !4639, !4640, !4641, !4642, !4643, !4645}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4634, file: !4635, line: 57, baseType: !4633, size: 64)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4634, file: !4635, line: 58, baseType: !202, size: 64, offset: 64)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4634, file: !4635, line: 59, baseType: !201, size: 64, offset: 128)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4634, file: !4635, line: 60, baseType: !201, size: 64, offset: 192)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4634, file: !4635, line: 61, baseType: !3815, size: 64, offset: 256)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4634, file: !4635, line: 62, baseType: !7, size: 32, offset: 320)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4634, file: !4635, line: 63, baseType: !4644, size: 64, offset: 384)
!4644 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !208, line: 153, baseType: !342)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4634, file: !4635, line: 64, baseType: !1855, size: 64, offset: 448)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !287, file: !288, line: 1326, baseType: !303, size: 32, offset: 13184)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !287, file: !288, line: 1342, baseType: !202, size: 64, offset: 13248)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !287, file: !288, line: 1343, baseType: !343, size: 64, offset: 13312)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !287, file: !288, line: 1344, baseType: !342, size: 64, offset: 13376)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !287, file: !288, line: 1345, baseType: !343, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !287, file: !288, line: 1346, baseType: !343, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !287, file: !288, line: 1347, baseType: !343, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !287, file: !288, line: 1348, baseType: !914, size: 128, align: 64, offset: 13504)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !287, file: !288, line: 1358, baseType: !4655, size: 34816, offset: 13824)
!4655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4656, line: 485, size: 34816, elements: !4657)
!4656 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4657 = !{!4658, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4687, !4688, !4689, !4690, !4691, !4692, !4695, !4696, !4697}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4655, file: !4656, line: 487, baseType: !4659, size: 192)
!4659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4660, size: 192, elements: !799)
!4660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4661, line: 16, size: 64, elements: !4662)
!4661 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4662 = !{!4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4660, file: !4661, line: 17, baseType: !962, size: 16)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4660, file: !4661, line: 18, baseType: !962, size: 16, offset: 16)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4660, file: !4661, line: 19, baseType: !962, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4660, file: !4661, line: 19, baseType: !962, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4660, file: !4661, line: 19, baseType: !962, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4660, file: !4661, line: 19, baseType: !962, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4660, file: !4661, line: 19, baseType: !962, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4660, file: !4661, line: 20, baseType: !962, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4660, file: !4661, line: 20, baseType: !962, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4660, file: !4661, line: 20, baseType: !962, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4660, file: !4661, line: 20, baseType: !962, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4660, file: !4661, line: 20, baseType: !962, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4660, file: !4661, line: 20, baseType: !962, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4655, file: !4656, line: 491, baseType: !201, size: 64, offset: 192)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4655, file: !4656, line: 495, baseType: !230, size: 16, offset: 256)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4655, file: !4656, line: 496, baseType: !230, size: 16, offset: 272)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4655, file: !4656, line: 497, baseType: !230, size: 16, offset: 288)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4655, file: !4656, line: 498, baseType: !230, size: 16, offset: 304)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4655, file: !4656, line: 502, baseType: !201, size: 64, offset: 320)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4655, file: !4656, line: 503, baseType: !201, size: 64, offset: 384)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4655, file: !4656, line: 514, baseType: !4684, size: 256, offset: 448)
!4684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4685, size: 256, elements: !1227)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4656, line: 483, flags: DIFlagFwdDecl)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4655, file: !4656, line: 516, baseType: !201, size: 64, offset: 704)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4655, file: !4656, line: 518, baseType: !201, size: 64, offset: 768)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4655, file: !4656, line: 520, baseType: !201, size: 64, offset: 832)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4655, file: !4656, line: 521, baseType: !201, size: 64, offset: 896)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4655, file: !4656, line: 522, baseType: !201, size: 64, offset: 960)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4655, file: !4656, line: 528, baseType: !4693, size: 64, offset: 1024)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4656, line: 10, flags: DIFlagFwdDecl)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4655, file: !4656, line: 535, baseType: !201, size: 64, offset: 1088)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4655, file: !4656, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4655, file: !4656, line: 540, baseType: !4698, size: 33280, offset: 1536)
!4698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4699, line: 317, size: 33280, elements: !4700)
!4699 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4700 = !{!4701, !4702, !4703}
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4698, file: !4699, line: 330, baseType: !7, size: 32)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4698, file: !4699, line: 337, baseType: !201, size: 64, offset: 64)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4698, file: !4699, line: 348, baseType: !4704, size: 32768, offset: 512)
!4704 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4699, line: 304, size: 32768, elements: !4705)
!4705 = !{!4706, !4721, !4758, !4808, !4821}
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4704, file: !4699, line: 305, baseType: !4707, size: 896)
!4707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4699, line: 12, size: 896, elements: !4708)
!4708 = !{!4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4720}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4707, file: !4699, line: 13, baseType: !296, size: 32)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4707, file: !4699, line: 14, baseType: !296, size: 32, offset: 32)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4707, file: !4699, line: 15, baseType: !296, size: 32, offset: 64)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4707, file: !4699, line: 16, baseType: !296, size: 32, offset: 96)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4707, file: !4699, line: 17, baseType: !296, size: 32, offset: 128)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4707, file: !4699, line: 18, baseType: !296, size: 32, offset: 160)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4707, file: !4699, line: 19, baseType: !296, size: 32, offset: 192)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4707, file: !4699, line: 22, baseType: !4717, size: 640, offset: 224)
!4717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 640, elements: !4718)
!4718 = !{!4719}
!4719 = !DISubrange(count: 20)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4707, file: !4699, line: 25, baseType: !296, size: 32, offset: 864)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4704, file: !4699, line: 306, baseType: !4722, size: 4096, align: 128)
!4722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4699, line: 34, size: 4096, align: 128, elements: !4723)
!4723 = !{!4724, !4725, !4726, !4727, !4728, !4743, !4744, !4745, !4747, !4749, !4753}
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4722, file: !4699, line: 35, baseType: !962, size: 16)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4722, file: !4699, line: 36, baseType: !962, size: 16, offset: 16)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4722, file: !4699, line: 37, baseType: !962, size: 16, offset: 32)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4722, file: !4699, line: 38, baseType: !962, size: 16, offset: 48)
!4728 = !DIDerivedType(tag: DW_TAG_member, scope: !4722, file: !4699, line: 39, baseType: !4729, size: 128, offset: 64)
!4729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4722, file: !4699, line: 39, size: 128, elements: !4730)
!4730 = !{!4731, !4736}
!4731 = !DIDerivedType(tag: DW_TAG_member, scope: !4729, file: !4699, line: 40, baseType: !4732, size: 128)
!4732 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4729, file: !4699, line: 40, size: 128, elements: !4733)
!4733 = !{!4734, !4735}
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4732, file: !4699, line: 41, baseType: !342, size: 64)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4732, file: !4699, line: 42, baseType: !342, size: 64, offset: 64)
!4736 = !DIDerivedType(tag: DW_TAG_member, scope: !4729, file: !4699, line: 44, baseType: !4737, size: 128)
!4737 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4729, file: !4699, line: 44, size: 128, elements: !4738)
!4738 = !{!4739, !4740, !4741, !4742}
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4737, file: !4699, line: 45, baseType: !296, size: 32)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4737, file: !4699, line: 46, baseType: !296, size: 32, offset: 32)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4737, file: !4699, line: 47, baseType: !296, size: 32, offset: 64)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4737, file: !4699, line: 48, baseType: !296, size: 32, offset: 96)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4722, file: !4699, line: 51, baseType: !296, size: 32, offset: 192)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4722, file: !4699, line: 52, baseType: !296, size: 32, offset: 224)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4722, file: !4699, line: 55, baseType: !4746, size: 1024, offset: 256)
!4746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 1024, elements: !652)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4722, file: !4699, line: 58, baseType: !4748, size: 2048, offset: 1280)
!4748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 2048, elements: !1764)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4722, file: !4699, line: 60, baseType: !4750, size: 384, offset: 3328)
!4750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 384, elements: !4751)
!4751 = !{!4752}
!4752 = !DISubrange(count: 12)
!4753 = !DIDerivedType(tag: DW_TAG_member, scope: !4722, file: !4699, line: 62, baseType: !4754, size: 384, offset: 3712)
!4754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4722, file: !4699, line: 62, size: 384, elements: !4755)
!4755 = !{!4756, !4757}
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4754, file: !4699, line: 63, baseType: !4750, size: 384)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4754, file: !4699, line: 64, baseType: !4750, size: 384)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4704, file: !4699, line: 307, baseType: !4759, size: 1088)
!4759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4699, line: 79, size: 1088, elements: !4760)
!4760 = !{!4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4807}
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4759, file: !4699, line: 80, baseType: !296, size: 32)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4759, file: !4699, line: 81, baseType: !296, size: 32, offset: 32)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4759, file: !4699, line: 82, baseType: !296, size: 32, offset: 64)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4759, file: !4699, line: 83, baseType: !296, size: 32, offset: 96)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4759, file: !4699, line: 84, baseType: !296, size: 32, offset: 128)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4759, file: !4699, line: 85, baseType: !296, size: 32, offset: 160)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4759, file: !4699, line: 86, baseType: !296, size: 32, offset: 192)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4759, file: !4699, line: 88, baseType: !4717, size: 640, offset: 224)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4759, file: !4699, line: 89, baseType: !453, size: 8, offset: 864)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4759, file: !4699, line: 90, baseType: !453, size: 8, offset: 872)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4759, file: !4699, line: 91, baseType: !453, size: 8, offset: 880)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4759, file: !4699, line: 92, baseType: !453, size: 8, offset: 888)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4759, file: !4699, line: 93, baseType: !453, size: 8, offset: 896)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4759, file: !4699, line: 94, baseType: !453, size: 8, offset: 904)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4759, file: !4699, line: 95, baseType: !4776, size: 64, offset: 960)
!4776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4777, size: 64)
!4777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4778, line: 11, size: 128, elements: !4779)
!4778 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4779 = !{!4780, !4781}
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4777, file: !4778, line: 12, baseType: !300, size: 64)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4777, file: !4778, line: 13, baseType: !4782, size: 64, offset: 64)
!4782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4783, size: 64)
!4783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4784, line: 56, size: 1344, elements: !4785)
!4784 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4785 = !{!4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4783, file: !4784, line: 61, baseType: !201, size: 64)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4783, file: !4784, line: 62, baseType: !201, size: 64, offset: 64)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4783, file: !4784, line: 63, baseType: !201, size: 64, offset: 128)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4783, file: !4784, line: 64, baseType: !201, size: 64, offset: 192)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4783, file: !4784, line: 65, baseType: !201, size: 64, offset: 256)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4783, file: !4784, line: 66, baseType: !201, size: 64, offset: 320)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4783, file: !4784, line: 68, baseType: !201, size: 64, offset: 384)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4783, file: !4784, line: 69, baseType: !201, size: 64, offset: 448)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4783, file: !4784, line: 70, baseType: !201, size: 64, offset: 512)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4783, file: !4784, line: 71, baseType: !201, size: 64, offset: 576)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4783, file: !4784, line: 72, baseType: !201, size: 64, offset: 640)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4783, file: !4784, line: 73, baseType: !201, size: 64, offset: 704)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4783, file: !4784, line: 74, baseType: !201, size: 64, offset: 768)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4783, file: !4784, line: 75, baseType: !201, size: 64, offset: 832)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4783, file: !4784, line: 76, baseType: !201, size: 64, offset: 896)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4783, file: !4784, line: 81, baseType: !201, size: 64, offset: 960)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4783, file: !4784, line: 83, baseType: !201, size: 64, offset: 1024)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4783, file: !4784, line: 84, baseType: !201, size: 64, offset: 1088)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4783, file: !4784, line: 85, baseType: !201, size: 64, offset: 1152)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4783, file: !4784, line: 86, baseType: !201, size: 64, offset: 1216)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4783, file: !4784, line: 87, baseType: !201, size: 64, offset: 1280)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4759, file: !4699, line: 96, baseType: !296, size: 32, offset: 1024)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4704, file: !4699, line: 308, baseType: !4809, size: 4608, align: 512)
!4809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4699, line: 289, size: 4608, align: 512, elements: !4810)
!4810 = !{!4811, !4812, !4819}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4809, file: !4699, line: 290, baseType: !4722, size: 4096, align: 128)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4809, file: !4699, line: 291, baseType: !4813, size: 512, offset: 4096)
!4813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4699, line: 268, size: 512, elements: !4814)
!4814 = !{!4815, !4816, !4817}
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4813, file: !4699, line: 269, baseType: !342, size: 64)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4813, file: !4699, line: 270, baseType: !342, size: 64, offset: 64)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4813, file: !4699, line: 271, baseType: !4818, size: 384, offset: 128)
!4818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 384, elements: !1336)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4809, file: !4699, line: 292, baseType: !4820, offset: 4608)
!4820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, elements: !1434)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4704, file: !4699, line: 309, baseType: !4822, size: 32768)
!4822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 32768, elements: !4823)
!4823 = !{!4824}
!4824 = !DISubrange(count: 4096)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !243, file: !154, line: 545, baseType: !4255, size: 64, offset: 832)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !243, file: !154, line: 547, baseType: !1065, size: 128, offset: 896)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !243, file: !154, line: 548, baseType: !4828, size: 64, offset: 1024)
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !154, line: 32, size: 2880, elements: !4830)
!4830 = !{!4831, !4832, !4833, !4837, !4841, !4845, !4846, !4847, !4851, !4855, !4856, !4857, !4858, !4859, !4863, !4864, !4868, !4895, !4899, !4903, !4907, !4911, !4915, !4919, !4923, !4924, !4928, !4932, !4936, !4940, !4941, !4944, !4945, !4946, !4947, !4948, !4949, !4950, !4951, !4952, !4953, !4954, !4955, !4956, !4957, !4958, !4959, !4960, !4961, !4962, !4963, !4977, !4978, !4979, !4980, !4981, !4984}
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !4829, file: !154, line: 33, baseType: !778, size: 64)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4829, file: !154, line: 34, baseType: !687, size: 64, offset: 64)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4829, file: !154, line: 43, baseType: !4834, size: 64, offset: 128)
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = !DISubroutineType(types: !4836)
!4836 = !{!687, !242}
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4829, file: !154, line: 50, baseType: !4838, size: 64, offset: 192)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = !DISubroutineType(types: !4840)
!4840 = !{!232, !238, !7, !202}
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !4829, file: !154, line: 65, baseType: !4842, size: 64, offset: 256)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!232, !242, !214}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !4829, file: !154, line: 66, baseType: !4842, size: 64, offset: 320)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !4829, file: !154, line: 102, baseType: !4842, size: 64, offset: 384)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !4829, file: !154, line: 112, baseType: !4848, size: 64, offset: 448)
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{null, !242, !962}
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !4829, file: !154, line: 132, baseType: !4852, size: 64, offset: 512)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!232, !214}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !4829, file: !154, line: 133, baseType: !4852, size: 64, offset: 576)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !4829, file: !154, line: 134, baseType: !4852, size: 64, offset: 640)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !4829, file: !154, line: 135, baseType: !4852, size: 64, offset: 704)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !4829, file: !154, line: 136, baseType: !4852, size: 64, offset: 768)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !4829, file: !154, line: 164, baseType: !4860, size: 64, offset: 832)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!232, !238}
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !4829, file: !154, line: 195, baseType: !4860, size: 64, offset: 896)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !4829, file: !154, line: 206, baseType: !4865, size: 64, offset: 960)
!4865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4866, size: 64)
!4866 = !DISubroutineType(types: !4867)
!4867 = !{null, !238}
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !4829, file: !154, line: 220, baseType: !4869, size: 64, offset: 1024)
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = !DISubroutineType(types: !4871)
!4871 = !{!232, !4872}
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !128, line: 289, size: 6272, align: 64, elements: !4874)
!4874 = !{!4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !4873, file: !128, line: 290, baseType: !238, size: 64)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !4873, file: !128, line: 291, baseType: !207, size: 128, offset: 64)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4873, file: !128, line: 292, baseType: !207, size: 128, offset: 192)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4873, file: !128, line: 293, baseType: !1720, size: 5568, offset: 320)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !4873, file: !128, line: 294, baseType: !2012, size: 32, offset: 5888)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !4873, file: !128, line: 295, baseType: !7, size: 32, offset: 5920)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4873, file: !128, line: 296, baseType: !7, size: 32, offset: 5952)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !4873, file: !128, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !4873, file: !128, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !4873, file: !128, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !4873, file: !128, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !4873, file: !128, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !4873, file: !128, line: 310, baseType: !308, size: 32, offset: 6016)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !4873, file: !128, line: 311, baseType: !308, size: 32, offset: 6048)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !4873, file: !128, line: 317, baseType: !7, size: 32, offset: 6080)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !4873, file: !128, line: 318, baseType: !7, size: 32, offset: 6112)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !4873, file: !128, line: 321, baseType: !689, size: 8, offset: 6144)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4873, file: !128, line: 322, baseType: !127, size: 32, offset: 6176)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !4873, file: !128, line: 323, baseType: !202, size: 64, offset: 6208)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !4873, file: !128, line: 324, baseType: !4158, offset: 6272)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !4829, file: !154, line: 230, baseType: !4896, size: 64, offset: 1088)
!4896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4897, size: 64)
!4897 = !DISubroutineType(types: !4898)
!4898 = !{null, !4872}
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !4829, file: !154, line: 241, baseType: !4900, size: 64, offset: 1152)
!4900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4901, size: 64)
!4901 = !DISubroutineType(types: !4902)
!4902 = !{!232, !242, !201}
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !4829, file: !154, line: 250, baseType: !4904, size: 64, offset: 1216)
!4904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4905, size: 64)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{null, !242}
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !4829, file: !154, line: 263, baseType: !4908, size: 64, offset: 1280)
!4908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4909, size: 64)
!4909 = !DISubroutineType(types: !4910)
!4910 = !{!232, !238, !232}
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !4829, file: !154, line: 271, baseType: !4912, size: 64, offset: 1344)
!4912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4913, size: 64)
!4913 = !DISubroutineType(types: !4914)
!4914 = !{!232, !242}
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !4829, file: !154, line: 278, baseType: !4916, size: 64, offset: 1408)
!4916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4917, size: 64)
!4917 = !DISubroutineType(types: !4918)
!4918 = !{!732, !2704}
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !4829, file: !154, line: 288, baseType: !4920, size: 64, offset: 1472)
!4920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4921, size: 64)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{!232, !238, !1670, !1692, !855}
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !4829, file: !154, line: 297, baseType: !4865, size: 64, offset: 1536)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !4829, file: !154, line: 306, baseType: !4925, size: 64, offset: 1600)
!4925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4926, size: 64)
!4926 = !DISubroutineType(types: !4927)
!4927 = !{!232, !861, !242}
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4829, file: !154, line: 307, baseType: !4929, size: 64, offset: 1664)
!4929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4930, size: 64)
!4930 = !DISubroutineType(types: !4931)
!4931 = !{!232, !242, !713, !232}
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !4829, file: !154, line: 316, baseType: !4933, size: 64, offset: 1728)
!4933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4934, size: 64)
!4934 = !DISubroutineType(types: !4935)
!4935 = !{!80, !214}
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !4829, file: !154, line: 326, baseType: !4937, size: 64, offset: 1792)
!4937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4938, size: 64)
!4938 = !DISubroutineType(types: !4939)
!4939 = !{!232, !242, !232}
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !4829, file: !154, line: 334, baseType: !687, size: 64, offset: 1856)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !4829, file: !154, line: 340, baseType: !4942, size: 64, offset: 1920)
!4942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4943, size: 64)
!4943 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !154, line: 340, flags: DIFlagFwdDecl)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !4829, file: !154, line: 347, baseType: !232, size: 32, offset: 1984)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !4829, file: !154, line: 356, baseType: !232, size: 32, offset: 2016)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !4829, file: !154, line: 362, baseType: !230, size: 16, offset: 2048)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !4829, file: !154, line: 363, baseType: !230, size: 16, offset: 2064)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !4829, file: !154, line: 368, baseType: !7, size: 32, offset: 2080)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4829, file: !154, line: 373, baseType: !7, size: 32, offset: 2112)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !4829, file: !154, line: 379, baseType: !201, size: 64, offset: 2176)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !4829, file: !154, line: 381, baseType: !201, size: 64, offset: 2240)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !4829, file: !154, line: 400, baseType: !1318, size: 16, offset: 2304)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4829, file: !154, line: 406, baseType: !224, size: 8, offset: 2320)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !4829, file: !154, line: 409, baseType: !232, size: 32, offset: 2336)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !4829, file: !154, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !4829, file: !154, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !4829, file: !154, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !4829, file: !154, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !4829, file: !154, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !4829, file: !154, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !4829, file: !154, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !4829, file: !154, line: 445, baseType: !7, size: 32, offset: 2400)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !4829, file: !154, line: 459, baseType: !4964, size: 64, offset: 2432)
!4964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4965, size: 64)
!4965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4966, size: 64)
!4966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !47, line: 99, size: 256, elements: !4967)
!4967 = !{!4968, !4969, !4973}
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4966, file: !47, line: 100, baseType: !1791, size: 128)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4966, file: !47, line: 101, baseType: !4970, size: 64, offset: 128)
!4970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4971, size: 64)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!939, !2022, !4965, !713}
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4966, file: !47, line: 103, baseType: !4974, size: 64, offset: 192)
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!939, !2022, !4965, !687, !867}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !4829, file: !154, line: 464, baseType: !4964, size: 64, offset: 2496)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !4829, file: !154, line: 470, baseType: !1802, size: 64, offset: 2560)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !4829, file: !154, line: 479, baseType: !342, size: 64, offset: 2624)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !4829, file: !154, line: 484, baseType: !7, size: 32, offset: 2688)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !4829, file: !154, line: 485, baseType: !4982, size: 64, offset: 2752)
!4982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4983, size: 64)
!4983 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !154, line: 19, flags: DIFlagFwdDecl)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !4829, file: !154, line: 488, baseType: !232, size: 32, offset: 2816)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !243, file: !154, line: 549, baseType: !4986, size: 64, offset: 1088)
!4986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4987, size: 64)
!4987 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !154, line: 23, flags: DIFlagFwdDecl)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !243, file: !154, line: 552, baseType: !3091, size: 2304, offset: 1152)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !243, file: !154, line: 554, baseType: !308, size: 32, offset: 3456)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !243, file: !154, line: 556, baseType: !7, size: 32, offset: 3488)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !243, file: !154, line: 558, baseType: !7, size: 32, offset: 3520)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !243, file: !154, line: 560, baseType: !7, size: 32, offset: 3552)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !243, file: !154, line: 563, baseType: !232, size: 32, offset: 3584)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !243, file: !154, line: 564, baseType: !201, size: 64, offset: 3648)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !243, file: !154, line: 573, baseType: !7, size: 32, offset: 3712)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !243, file: !154, line: 574, baseType: !7, size: 32, offset: 3744)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !243, file: !154, line: 575, baseType: !342, size: 64, offset: 3776)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !243, file: !154, line: 584, baseType: !7, size: 32, offset: 3840)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !243, file: !154, line: 593, baseType: !230, size: 16, offset: 3872)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !243, file: !154, line: 595, baseType: !232, size: 32, offset: 3904)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !243, file: !154, line: 596, baseType: !232, size: 32, offset: 3936)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !243, file: !154, line: 597, baseType: !1318, size: 16, offset: 3968)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !243, file: !154, line: 598, baseType: !230, size: 16, offset: 3984)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !243, file: !154, line: 599, baseType: !230, size: 16, offset: 4000)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !243, file: !154, line: 600, baseType: !7, size: 32, offset: 4032)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !243, file: !154, line: 601, baseType: !7, size: 32, offset: 4064)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !243, file: !154, line: 602, baseType: !201, size: 64, offset: 4096)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !243, file: !154, line: 603, baseType: !201, size: 64, offset: 4160)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !243, file: !154, line: 612, baseType: !7, size: 32, offset: 4224)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !243, file: !154, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !243, file: !154, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !243, file: !154, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !243, file: !154, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !243, file: !154, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !243, file: !154, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !243, file: !154, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !243, file: !154, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !243, file: !154, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !243, file: !154, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !243, file: !154, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !243, file: !154, line: 653, baseType: !5022, size: 160, offset: 4272)
!5022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 160, elements: !4718)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !243, file: !154, line: 654, baseType: !2491, size: 64, offset: 4480)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !243, file: !154, line: 659, baseType: !2491, size: 64, offset: 4544)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !243, file: !154, line: 664, baseType: !7, size: 32, offset: 4608)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !243, file: !154, line: 667, baseType: !7, size: 32, offset: 4640)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !243, file: !154, line: 668, baseType: !224, size: 8, offset: 4672)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !243, file: !154, line: 671, baseType: !201, size: 64, offset: 4736)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !243, file: !154, line: 672, baseType: !201, size: 64, offset: 4800)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !243, file: !154, line: 673, baseType: !224, size: 8, offset: 4864)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !243, file: !154, line: 674, baseType: !224, size: 8, offset: 4872)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !243, file: !154, line: 675, baseType: !7, size: 32, offset: 4896)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !243, file: !154, line: 678, baseType: !153, size: 32, offset: 4928)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !243, file: !154, line: 681, baseType: !1720, size: 5568, offset: 4992)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !243, file: !154, line: 681, baseType: !1720, size: 5568, offset: 10560)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !243, file: !154, line: 687, baseType: !202, size: 64, offset: 16128)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !243, file: !154, line: 693, baseType: !2022, size: 64, offset: 16192)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !243, file: !154, line: 700, baseType: !4158, align: 64, offset: 16256)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !239, file: !128, line: 103, baseType: !2700, size: 64, offset: 64)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !239, file: !128, line: 106, baseType: !207, size: 128, offset: 128)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !239, file: !128, line: 107, baseType: !207, size: 128, offset: 256)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !239, file: !128, line: 109, baseType: !308, size: 32, offset: 384)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !239, file: !128, line: 110, baseType: !308, size: 32, offset: 416)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !239, file: !128, line: 112, baseType: !308, size: 32, offset: 448)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !239, file: !128, line: 113, baseType: !249, offset: 480)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !239, file: !128, line: 114, baseType: !207, size: 128, offset: 512)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !239, file: !128, line: 115, baseType: !230, size: 16, offset: 640)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !239, file: !128, line: 116, baseType: !230, size: 16, offset: 656)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !239, file: !128, line: 117, baseType: !230, size: 16, offset: 672)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !239, file: !128, line: 118, baseType: !230, size: 16, offset: 688)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !239, file: !128, line: 119, baseType: !201, size: 64, offset: 704)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !239, file: !128, line: 120, baseType: !201, size: 64, offset: 768)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !239, file: !128, line: 123, baseType: !201, size: 64, offset: 832)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !239, file: !128, line: 125, baseType: !7, size: 32, offset: 896)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !239, file: !128, line: 125, baseType: !7, size: 32, offset: 928)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !239, file: !128, line: 126, baseType: !342, size: 64, offset: 960)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !239, file: !128, line: 127, baseType: !7, size: 32, offset: 1024)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !239, file: !128, line: 129, baseType: !7, size: 32, offset: 1056)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !239, file: !128, line: 131, baseType: !202, size: 64, offset: 1088)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !239, file: !128, line: 132, baseType: !224, size: 8, offset: 1152)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !239, file: !128, line: 133, baseType: !689, size: 8, offset: 1160)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !239, file: !128, line: 134, baseType: !689, size: 8, offset: 1168)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !239, file: !128, line: 135, baseType: !267, size: 192, offset: 1216)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !239, file: !128, line: 136, baseType: !224, size: 8, offset: 1408)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !239, file: !128, line: 137, baseType: !228, size: 64, offset: 1472)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !239, file: !128, line: 138, baseType: !687, size: 64, offset: 1536)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !239, file: !128, line: 139, baseType: !687, size: 64, offset: 1600)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !239, file: !128, line: 140, baseType: !687, size: 64, offset: 1664)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !239, file: !128, line: 143, baseType: !5070, size: 64, offset: 1728)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 64)
!5071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !128, line: 95, size: 192, elements: !5072)
!5072 = !{!5073, !5074, !5075}
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5071, file: !128, line: 96, baseType: !914, size: 128, align: 64)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5071, file: !128, line: 97, baseType: !232, size: 32, offset: 128)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5071, file: !128, line: 98, baseType: !5076, offset: 160)
!5076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, elements: !2515)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !239, file: !128, line: 144, baseType: !5070, size: 64, offset: 1792)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !239, file: !128, line: 145, baseType: !5070, size: 64, offset: 1856)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !239, file: !128, line: 146, baseType: !5070, size: 64, offset: 1920)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !239, file: !128, line: 147, baseType: !224, size: 8, offset: 1984)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !239, file: !128, line: 148, baseType: !4872, size: 64, offset: 2048)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !239, file: !128, line: 150, baseType: !5083, size: 64, offset: 2112)
!5083 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !128, line: 18, baseType: !343)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !239, file: !128, line: 154, baseType: !7, size: 32, offset: 2176)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !239, file: !128, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !239, file: !128, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !239, file: !128, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !239, file: !128, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !239, file: !128, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !239, file: !128, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !239, file: !128, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !239, file: !128, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !239, file: !128, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !239, file: !128, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !239, file: !128, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !239, file: !128, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !239, file: !128, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !239, file: !128, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !239, file: !128, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !239, file: !128, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !239, file: !128, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !239, file: !128, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !239, file: !128, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !239, file: !128, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !239, file: !128, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !239, file: !128, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !239, file: !128, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !239, file: !128, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !239, file: !128, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !239, file: !128, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !239, file: !128, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !239, file: !128, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !239, file: !128, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !239, file: !128, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !239, file: !128, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !239, file: !128, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !239, file: !128, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !239, file: !128, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !239, file: !128, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !239, file: !128, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !239, file: !128, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !239, file: !128, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !239, file: !128, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !239, file: !128, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !239, file: !128, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !239, file: !128, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !239, file: !128, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !239, file: !128, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !239, file: !128, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !239, file: !128, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !239, file: !128, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !239, file: !128, line: 208, baseType: !732, size: 8, offset: 2256)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !239, file: !128, line: 210, baseType: !308, size: 32, offset: 2272)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !239, file: !128, line: 212, baseType: !471, size: 64, offset: 2304)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !239, file: !128, line: 213, baseType: !471, size: 64, offset: 2368)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !239, file: !128, line: 214, baseType: !207, size: 128, offset: 2432)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !239, file: !128, line: 215, baseType: !2238, size: 256, offset: 2560)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !239, file: !128, line: 217, baseType: !7, size: 32, offset: 2816)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !239, file: !128, line: 220, baseType: !308, size: 32, offset: 2848)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !239, file: !128, line: 221, baseType: !308, size: 32, offset: 2880)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !239, file: !128, line: 222, baseType: !308, size: 32, offset: 2912)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !239, file: !128, line: 224, baseType: !1720, size: 5568, offset: 2944)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !239, file: !128, line: 225, baseType: !1720, size: 5568, offset: 8512)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !239, file: !128, line: 227, baseType: !5145, size: 256, offset: 14080)
!5145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !2239, line: 168, size: 256, elements: !5146)
!5146 = !{!5147}
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5145, file: !2239, line: 169, baseType: !2238, size: 256)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !239, file: !128, line: 228, baseType: !2238, size: 256, offset: 14336)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !239, file: !128, line: 230, baseType: !5150, size: 64, offset: 14592)
!5150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5151, size: 64)
!5151 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !128, line: 230, flags: DIFlagFwdDecl)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !239, file: !128, line: 231, baseType: !202, size: 64, offset: 14656)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !239, file: !128, line: 233, baseType: !867, size: 64, offset: 14720)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !239, file: !128, line: 234, baseType: !202, size: 64, offset: 14784)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !239, file: !128, line: 236, baseType: !224, size: 8, offset: 14848)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !239, file: !128, line: 237, baseType: !267, size: 192, offset: 14912)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !239, file: !128, line: 238, baseType: !135, size: 32, offset: 15104)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !239, file: !128, line: 239, baseType: !286, size: 64, offset: 15168)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !239, file: !128, line: 240, baseType: !4158, offset: 15232)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !215, file: !216, line: 71, baseType: !207, size: 128, offset: 512)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !215, file: !216, line: 72, baseType: !2723, size: 704, offset: 640)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !215, file: !216, line: 74, baseType: !914, size: 128, align: 64, offset: 1344)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !215, file: !216, line: 76, baseType: !232, size: 32, offset: 1472)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !215, file: !216, line: 83, baseType: !201, size: 64, offset: 1536)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !215, file: !216, line: 85, baseType: !232, size: 32, offset: 1600)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !215, file: !216, line: 86, baseType: !232, size: 32, offset: 1632)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !215, file: !216, line: 88, baseType: !224, size: 8, offset: 1664)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !215, file: !216, line: 89, baseType: !224, size: 8, offset: 1672)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !215, file: !216, line: 90, baseType: !224, size: 8, offset: 1680)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !215, file: !216, line: 92, baseType: !230, size: 16, offset: 1696)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !215, file: !216, line: 93, baseType: !146, size: 32, offset: 1728)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !215, file: !216, line: 96, baseType: !228, size: 64, offset: 1792)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !215, file: !216, line: 100, baseType: !5174, size: 192, offset: 1856)
!5174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !216, line: 35, size: 192, elements: !5175)
!5175 = !{!5176, !5191}
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !5174, file: !216, line: 36, baseType: !5177, size: 128)
!5177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !5178, line: 42, size: 128, elements: !5179)
!5178 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!5179 = !{!5180, !5189, !5190}
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !5177, file: !5178, line: 43, baseType: !5181, size: 64)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 64)
!5182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !5178, line: 11, size: 256, elements: !5183)
!5183 = !{!5184, !5185, !5186, !5187, !5188}
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !5182, file: !5178, line: 12, baseType: !201, size: 64)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5182, file: !5178, line: 13, baseType: !7, size: 32, offset: 64)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5182, file: !5178, line: 14, baseType: !7, size: 32, offset: 96)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !5182, file: !5178, line: 15, baseType: !3884, size: 64, offset: 128)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !5182, file: !5178, line: 17, baseType: !7, size: 32, offset: 192)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !5177, file: !5178, line: 44, baseType: !7, size: 32, offset: 64)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !5177, file: !5178, line: 45, baseType: !7, size: 32, offset: 96)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5174, file: !216, line: 37, baseType: !7, size: 32, offset: 128)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !215, file: !216, line: 101, baseType: !5193, size: 64, offset: 2048)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5174, size: 64)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !215, file: !216, line: 103, baseType: !7, size: 32, offset: 2112)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !215, file: !216, line: 106, baseType: !7, size: 32, offset: 2144)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !215, file: !216, line: 112, baseType: !2704, size: 64, offset: 2176)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !215, file: !216, line: 115, baseType: !228, size: 64, offset: 2240)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !215, file: !216, line: 123, baseType: !5199, size: 64, offset: 2304)
!5199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5200, size: 64)
!5200 = !DISubroutineType(types: !5201)
!5201 = !{null, !214}
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !215, file: !216, line: 129, baseType: !5203, size: 512, offset: 2368)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !216, line: 41, size: 512, elements: !5204)
!5204 = !{!5205, !5206, !5207, !5208, !5209, !5210, !5212, !5213, !5214, !5215}
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5203, file: !216, line: 42, baseType: !713, size: 64)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !5203, file: !216, line: 43, baseType: !232, size: 32, offset: 64)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5203, file: !216, line: 44, baseType: !5181, size: 64, offset: 128)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !5203, file: !216, line: 45, baseType: !232, size: 32, offset: 192)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !5203, file: !216, line: 47, baseType: !3884, size: 64, offset: 256)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !5203, file: !216, line: 49, baseType: !5211, size: 32, offset: 320)
!5211 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !232)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !5203, file: !216, line: 50, baseType: !5211, size: 32, offset: 352)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !5203, file: !216, line: 51, baseType: !5211, size: 32, offset: 384)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !5203, file: !216, line: 52, baseType: !5211, size: 32, offset: 416)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !5203, file: !216, line: 53, baseType: !5211, size: 32, offset: 448)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !215, file: !216, line: 131, baseType: !228, size: 64, offset: 2880)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !215, file: !216, line: 139, baseType: !232, size: 32, offset: 2944)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !215, file: !216, line: 140, baseType: !232, size: 32, offset: 2976)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !215, file: !216, line: 141, baseType: !201, size: 64, offset: 3008)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !215, file: !216, line: 143, baseType: !224, size: 8, offset: 3072)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !215, file: !216, line: 144, baseType: !7, size: 32, offset: 3104)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cur_residue", scope: !204, file: !164, line: 285, baseType: !7, size: 32, offset: 192)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "saved_prv_sg", scope: !204, file: !164, line: 286, baseType: !5181, size: 64, offset: 256)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cur_sg", scope: !204, file: !164, line: 287, baseType: !5181, size: 64, offset: 320)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tot_residue", scope: !204, file: !164, line: 288, baseType: !7, size: 32, offset: 384)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !204, file: !164, line: 290, baseType: !453, size: 8, offset: 416)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !204, file: !164, line: 295, baseType: !5228, size: 16, offset: 424)
!5228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 16, elements: !1267)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "orig_tag", scope: !204, file: !164, line: 296, baseType: !5228, size: 16, offset: 440)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !204, file: !164, line: 298, baseType: !453, size: 8, offset: 456)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !204, file: !164, line: 299, baseType: !453, size: 8, offset: 464)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "sense_ptr", scope: !204, file: !164, line: 301, baseType: !228, size: 64, offset: 512)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sense_ptr", scope: !204, file: !164, line: 302, baseType: !228, size: 64, offset: 576)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "sense_dma", scope: !204, file: !164, line: 303, baseType: !3884, size: 64, offset: 640)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "eh_done", scope: !204, file: !164, line: 305, baseType: !4255, size: 64, offset: 704)
!5236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 64)
!5237 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !211)
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 64)
!5239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_transport_attrs", file: !194, line: 18, size: 640, elements: !5240)
!5240 = !{!5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5239, file: !194, line: 19, baseType: !232, size: 32)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "min_period", scope: !5239, file: !194, line: 20, baseType: !232, size: 32, offset: 32)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5239, file: !194, line: 21, baseType: !232, size: 32, offset: 64)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "max_offset", scope: !5239, file: !194, line: 22, baseType: !232, size: 32, offset: 96)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !5239, file: !194, line: 23, baseType: !7, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "max_width", scope: !5239, file: !194, line: 24, baseType: !7, size: 1, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "iu", scope: !5239, file: !194, line: 25, baseType: !7, size: 1, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "max_iu", scope: !5239, file: !194, line: 26, baseType: !7, size: 1, offset: 131, flags: DIFlagBitField, extraData: i64 128)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !5239, file: !194, line: 27, baseType: !7, size: 1, offset: 132, flags: DIFlagBitField, extraData: i64 128)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "qas", scope: !5239, file: !194, line: 28, baseType: !7, size: 1, offset: 133, flags: DIFlagBitField, extraData: i64 128)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "max_qas", scope: !5239, file: !194, line: 29, baseType: !7, size: 1, offset: 134, flags: DIFlagBitField, extraData: i64 128)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "wr_flow", scope: !5239, file: !194, line: 30, baseType: !7, size: 1, offset: 135, flags: DIFlagBitField, extraData: i64 128)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "rd_strm", scope: !5239, file: !194, line: 31, baseType: !7, size: 1, offset: 136, flags: DIFlagBitField, extraData: i64 128)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "rti", scope: !5239, file: !194, line: 32, baseType: !7, size: 1, offset: 137, flags: DIFlagBitField, extraData: i64 128)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "pcomp_en", scope: !5239, file: !194, line: 33, baseType: !7, size: 1, offset: 138, flags: DIFlagBitField, extraData: i64 128)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "hold_mcs", scope: !5239, file: !194, line: 34, baseType: !7, size: 1, offset: 139, flags: DIFlagBitField, extraData: i64 128)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "initial_dv", scope: !5239, file: !194, line: 35, baseType: !7, size: 1, offset: 140, flags: DIFlagBitField, extraData: i64 128)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5239, file: !194, line: 36, baseType: !201, size: 64, offset: 192)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "support_sync", scope: !5239, file: !194, line: 38, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "support_wide", scope: !5239, file: !194, line: 39, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "support_dt", scope: !5239, file: !194, line: 40, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "support_dt_only", scope: !5239, file: !194, line: 41, baseType: !7, size: 32, offset: 288)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "support_ius", scope: !5239, file: !194, line: 42, baseType: !7, size: 32, offset: 320)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "support_qas", scope: !5239, file: !194, line: 43, baseType: !7, size: 32, offset: 352)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "dv_pending", scope: !5239, file: !194, line: 45, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "dv_in_progress", scope: !5239, file: !194, line: 46, baseType: !7, size: 1, offset: 385, flags: DIFlagBitField, extraData: i64 384)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "dv_mutex", scope: !5239, file: !194, line: 47, baseType: !267, size: 192, offset: 448)
!5268 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !208, line: 37, baseType: !201)
!5269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5270, size: 64)
!5270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "esp_cmd_priv", file: !164, line: 258, size: 256, elements: !5271)
!5271 = !{!5272, !5273, !5274, !5275, !5276}
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "num_sg", scope: !5270, file: !164, line: 259, baseType: !232, size: 32)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "cur_residue", scope: !5270, file: !164, line: 260, baseType: !232, size: 32, offset: 32)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "prv_sg", scope: !5270, file: !164, line: 261, baseType: !5181, size: 64, offset: 64)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "cur_sg", scope: !5270, file: !164, line: 262, baseType: !5181, size: 64, offset: 128)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "tot_residue", scope: !5270, file: !164, line: 263, baseType: !232, size: 32, offset: 192)
!5277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5278, size: 64)
!5278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5237)
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 64)
!5280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_host_attrs", file: !194, line: 57, size: 32, elements: !5281)
!5281 = !{!5282}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !5280, file: !194, line: 58, baseType: !193, size: 32)
!5283 = !{!5284, !5405, !5407, !5412, !5417, !5422, !5427, !5432, !5477, !5529, !5534, !5539, !5541, !5544, !5549, !5551, !0, !5556, !5558, !5564, !5569, !5571, !5576, !5578, !5583, !5588}
!5284 = !DIGlobalVariableExpression(var: !5285, expr: !DIExpression())
!5285 = distinct !DIGlobalVariable(name: "instance", scope: !5286, file: !3, line: 2390, type: !232, isLocal: true, isDefinition: true)
!5286 = distinct !DISubprogram(name: "scsi_esp_register", scope: !3, file: !3, line: 2388, type: !5287, scopeLine: 2389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !263)
!5287 = !DISubroutineType(types: !5288)
!5288 = !{!232, !5289}
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5290, size: 64)
!5290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "esp", file: !164, line: 425, size: 6720, elements: !5291)
!5291 = !{!5292, !5293, !5294, !5324, !5325, !5326, !5327, !5328, !5329, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5356, !5357, !5359, !5372, !5373, !5375, !5376, !5377, !5378, !5379, !5380, !5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404}
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5290, file: !164, line: 426, baseType: !202, size: 64)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "dma_regs", scope: !5290, file: !164, line: 427, baseType: !202, size: 64, offset: 64)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5290, file: !164, line: 429, baseType: !5295, size: 64, offset: 128)
!5295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5296, size: 64)
!5296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5297)
!5297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "esp_driver_ops", file: !164, line: 365, size: 576, elements: !5298)
!5298 = !{!5299, !5303, !5307, !5309, !5313, !5317, !5318, !5319, !5323}
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "esp_write8", scope: !5297, file: !164, line: 370, baseType: !5300, size: 64)
!5300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5301, size: 64)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{null, !5289, !453, !201}
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "esp_read8", scope: !5297, file: !164, line: 371, baseType: !5304, size: 64, offset: 64)
!5304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5305, size: 64)
!5305 = !DISubroutineType(types: !5306)
!5306 = !{!453, !5289, !201}
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !5297, file: !164, line: 378, baseType: !5308, size: 64, offset: 128)
!5308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5287, size: 64)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length_limit", scope: !5297, file: !164, line: 383, baseType: !5310, size: 64, offset: 192)
!5310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5311, size: 64)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{!296, !5289, !296, !296}
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "reset_dma", scope: !5297, file: !164, line: 390, baseType: !5314, size: 64, offset: 256)
!5314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5315, size: 64)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{null, !5289}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain", scope: !5297, file: !164, line: 395, baseType: !5314, size: 64, offset: 320)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "dma_invalidate", scope: !5297, file: !164, line: 398, baseType: !5314, size: 64, offset: 384)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "send_dma_cmd", scope: !5297, file: !164, line: 410, baseType: !5320, size: 64, offset: 448)
!5320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5321, size: 64)
!5321 = !DISubroutineType(types: !5322)
!5322 = !{null, !5289, !296, !296, !296, !232, !453}
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "dma_error", scope: !5297, file: !164, line: 416, baseType: !5308, size: 64, offset: 512)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5290, file: !164, line: 431, baseType: !242, size: 64, offset: 192)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5290, file: !164, line: 432, baseType: !2022, size: 64, offset: 256)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "active_cmd", scope: !5290, file: !164, line: 434, baseType: !203, size: 64, offset: 320)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "queued_cmds", scope: !5290, file: !164, line: 436, baseType: !207, size: 128, offset: 384)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "active_cmds", scope: !5290, file: !164, line: 437, baseType: !207, size: 128, offset: 512)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "command_block", scope: !5290, file: !164, line: 439, baseType: !5330, size: 64, offset: 640)
!5330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "command_block_dma", scope: !5290, file: !164, line: 440, baseType: !3884, size: 64, offset: 704)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "data_dma_len", scope: !5290, file: !164, line: 442, baseType: !7, size: 32, offset: 768)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "sreg", scope: !5290, file: !164, line: 447, baseType: !453, size: 8, offset: 800)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "seqreg", scope: !5290, file: !164, line: 448, baseType: !453, size: 8, offset: 808)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "sreg2", scope: !5290, file: !164, line: 449, baseType: !453, size: 8, offset: 816)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "ireg", scope: !5290, file: !164, line: 450, baseType: !453, size: 8, offset: 824)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "prev_hme_dmacsr", scope: !5290, file: !164, line: 452, baseType: !296, size: 32, offset: 832)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "prev_soff", scope: !5290, file: !164, line: 453, baseType: !453, size: 8, offset: 864)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "prev_stp", scope: !5290, file: !164, line: 454, baseType: !453, size: 8, offset: 872)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cfg3", scope: !5290, file: !164, line: 455, baseType: !453, size: 8, offset: 880)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "num_tags", scope: !5290, file: !164, line: 456, baseType: !453, size: 8, offset: 888)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "esp_cmd_pool", scope: !5290, file: !164, line: 458, baseType: !207, size: 128, offset: 896)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !5290, file: !164, line: 460, baseType: !5344, size: 2048, offset: 1024)
!5344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5345, size: 2048, elements: !225)
!5345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "esp_target_data", file: !164, line: 321, size: 128, elements: !5346)
!5346 = !{!5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5355}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "esp_period", scope: !5345, file: !164, line: 326, baseType: !453, size: 8)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "esp_offset", scope: !5345, file: !164, line: 327, baseType: !453, size: 8, offset: 8)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "esp_config3", scope: !5345, file: !164, line: 328, baseType: !453, size: 8, offset: 16)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5345, file: !164, line: 330, baseType: !453, size: 8, offset: 24)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "nego_goal_period", scope: !5345, file: !164, line: 341, baseType: !453, size: 8, offset: 32)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "nego_goal_offset", scope: !5345, file: !164, line: 342, baseType: !453, size: 8, offset: 40)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "nego_goal_width", scope: !5345, file: !164, line: 343, baseType: !453, size: 8, offset: 48)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "nego_goal_tags", scope: !5345, file: !164, line: 344, baseType: !453, size: 8, offset: 56)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "starget", scope: !5345, file: !164, line: 346, baseType: !4872, size: 64, offset: 64)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_cnt", scope: !5290, file: !164, line: 462, baseType: !232, size: 32, offset: 3072)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "fifo", scope: !5290, file: !164, line: 463, baseType: !5358, size: 128, offset: 3104)
!5358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 128, elements: !225)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "esp_event_log", scope: !5290, file: !164, line: 465, baseType: !5360, size: 2304, offset: 3232)
!5360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5361, size: 2304, elements: !652)
!5361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "esp_event_ent", file: !164, line: 349, size: 72, elements: !5362)
!5362 = !{!5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5361, file: !164, line: 350, baseType: !453, size: 8)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5361, file: !164, line: 353, baseType: !453, size: 8, offset: 8)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "sreg", scope: !5361, file: !164, line: 355, baseType: !453, size: 8, offset: 16)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "seqreg", scope: !5361, file: !164, line: 356, baseType: !453, size: 8, offset: 24)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "sreg2", scope: !5361, file: !164, line: 357, baseType: !453, size: 8, offset: 32)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "ireg", scope: !5361, file: !164, line: 358, baseType: !453, size: 8, offset: 40)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "select_state", scope: !5361, file: !164, line: 359, baseType: !453, size: 8, offset: 48)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5361, file: !164, line: 360, baseType: !453, size: 8, offset: 56)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !5361, file: !164, line: 361, baseType: !453, size: 8, offset: 64)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "esp_event_cur", scope: !5290, file: !164, line: 466, baseType: !232, size: 32, offset: 5536)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "msg_out", scope: !5290, file: !164, line: 468, baseType: !5374, size: 64, offset: 5568)
!5374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 64, elements: !418)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "msg_out_len", scope: !5290, file: !164, line: 469, baseType: !232, size: 32, offset: 5632)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "msg_in", scope: !5290, file: !164, line: 471, baseType: !5374, size: 64, offset: 5664)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "msg_in_len", scope: !5290, file: !164, line: 472, baseType: !232, size: 32, offset: 5728)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "bursts", scope: !5290, file: !164, line: 474, baseType: !453, size: 8, offset: 5760)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "config1", scope: !5290, file: !164, line: 475, baseType: !453, size: 8, offset: 5768)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "config2", scope: !5290, file: !164, line: 476, baseType: !453, size: 8, offset: 5776)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "config4", scope: !5290, file: !164, line: 477, baseType: !453, size: 8, offset: 5784)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_id", scope: !5290, file: !164, line: 479, baseType: !453, size: 8, offset: 5792)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_id_mask", scope: !5290, file: !164, line: 480, baseType: !296, size: 32, offset: 5824)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5290, file: !164, line: 482, baseType: !163, size: 32, offset: 5856)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5290, file: !164, line: 484, baseType: !296, size: 32, offset: 5888)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "select_state", scope: !5290, file: !164, line: 493, baseType: !453, size: 8, offset: 5920)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5290, file: !164, line: 499, baseType: !453, size: 8, offset: 5928)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "cfact", scope: !5290, file: !164, line: 517, baseType: !296, size: 32, offset: 5952)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "cfreq", scope: !5290, file: !164, line: 518, baseType: !296, size: 32, offset: 5984)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "ccycle", scope: !5290, file: !164, line: 519, baseType: !296, size: 32, offset: 6016)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "ctick", scope: !5290, file: !164, line: 520, baseType: !296, size: 32, offset: 6048)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "neg_defp", scope: !5290, file: !164, line: 521, baseType: !296, size: 32, offset: 6080)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "sync_defp", scope: !5290, file: !164, line: 522, baseType: !296, size: 32, offset: 6112)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "max_period", scope: !5290, file: !164, line: 525, baseType: !296, size: 32, offset: 6144)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "min_period", scope: !5290, file: !164, line: 526, baseType: !296, size: 32, offset: 6176)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "radelay", scope: !5290, file: !164, line: 527, baseType: !296, size: 32, offset: 6208)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_bytes_ptr", scope: !5290, file: !164, line: 530, baseType: !5330, size: 64, offset: 6272)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_bytes_left", scope: !5290, file: !164, line: 531, baseType: !232, size: 32, offset: 6336)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "eh_reset", scope: !5290, file: !164, line: 533, baseType: !4255, size: 64, offset: 6400)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !5290, file: !164, line: 535, baseType: !202, size: 64, offset: 6464)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "dmarev", scope: !5290, file: !164, line: 536, baseType: !232, size: 32, offset: 6528)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_reg", scope: !5290, file: !164, line: 539, baseType: !5330, size: 64, offset: 6592)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "send_cmd_error", scope: !5290, file: !164, line: 540, baseType: !232, size: 32, offset: 6656)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "send_cmd_residual", scope: !5290, file: !164, line: 541, baseType: !296, size: 32, offset: 6688)
!5405 = !DIGlobalVariableExpression(var: !5406, expr: !DIExpression())
!5406 = distinct !DIGlobalVariable(name: "scsi_esp_template", scope: !2, file: !3, line: 2674, type: !4829, isLocal: false, isDefinition: true)
!5407 = !DIGlobalVariableExpression(var: !5408, expr: !DIExpression())
!5408 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description316", scope: !2, file: !3, line: 2768, type: !5409, isLocal: true, isDefinition: true, align: 8)
!5409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 336, elements: !5410)
!5410 = !{!5411}
!5411 = !DISubrange(count: 42)
!5412 = !DIGlobalVariableExpression(var: !5413, expr: !DIExpression())
!5413 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author317", scope: !2, file: !3, line: 2769, type: !5414, isLocal: true, isDefinition: true, align: 8)
!5414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 432, elements: !5415)
!5415 = !{!5416}
!5416 = !DISubrange(count: 54)
!5417 = !DIGlobalVariableExpression(var: !5418, expr: !DIExpression())
!5418 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file318", scope: !2, file: !3, line: 2770, type: !5419, isLocal: true, isDefinition: true, align: 8)
!5419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 288, elements: !5420)
!5420 = !{!5421}
!5421 = !DISubrange(count: 36)
!5422 = !DIGlobalVariableExpression(var: !5423, expr: !DIExpression())
!5423 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license319", scope: !2, file: !3, line: 2770, type: !5424, isLocal: true, isDefinition: true, align: 8)
!5424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 168, elements: !5425)
!5425 = !{!5426}
!5426 = !DISubrange(count: 21)
!5427 = !DIGlobalVariableExpression(var: !5428, expr: !DIExpression())
!5428 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version320", scope: !2, file: !3, line: 2771, type: !5429, isLocal: true, isDefinition: true, align: 8)
!5429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 184, elements: !5430)
!5430 = !{!5431}
!5431 = !DISubrange(count: 23)
!5432 = !DIGlobalVariableExpression(var: !5433, expr: !DIExpression())
!5433 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 2771, type: !5434, isLocal: true, isDefinition: true)
!5434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5435)
!5435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5436, size: 64)
!5436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5437)
!5437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !5438, line: 65, size: 576, align: 64, elements: !5439)
!5438 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!5439 = !{!5440, !5475, !5476}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !5437, file: !5438, line: 66, baseType: !5441, size: 448)
!5441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !5438, line: 54, size: 448, elements: !5442)
!5442 = !{!5443, !5444, !5459, !5463, !5467, !5471}
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5441, file: !5438, line: 55, baseType: !1791, size: 128)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5441, file: !5438, line: 56, baseType: !5445, size: 64, offset: 128)
!5445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5446, size: 64)
!5446 = !DISubroutineType(types: !5447)
!5447 = !{!939, !5448, !5449, !713}
!5448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5441, size: 64)
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5450, size: 64)
!5450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !5438, line: 46, size: 768, elements: !5451)
!5451 = !{!5452, !5453, !5454, !5455, !5458}
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5450, file: !5438, line: 47, baseType: !1723, size: 512)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5450, file: !5438, line: 48, baseType: !778, size: 64, offset: 512)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !5450, file: !5438, line: 49, baseType: !1729, size: 64, offset: 576)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !5450, file: !5438, line: 50, baseType: !5456, size: 64, offset: 640)
!5456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5457, size: 64)
!5457 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !5438, line: 50, flags: DIFlagFwdDecl)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !5450, file: !5438, line: 51, baseType: !4255, size: 64, offset: 704)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5441, file: !5438, line: 58, baseType: !5460, size: 64, offset: 192)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!5461 = !DISubroutineType(types: !5462)
!5462 = !{!939, !5448, !5449, !687, !867}
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !5441, file: !5438, line: 60, baseType: !5464, size: 64, offset: 256)
!5464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5465, size: 64)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{null, !778, !687}
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !5441, file: !5438, line: 61, baseType: !5468, size: 64, offset: 320)
!5468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5469, size: 64)
!5469 = !DISubroutineType(types: !5470)
!5470 = !{!232, !778}
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5441, file: !5438, line: 62, baseType: !5472, size: 64, offset: 384)
!5472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5473, size: 64)
!5473 = !DISubroutineType(types: !5474)
!5474 = !{null, !778}
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !5437, file: !5438, line: 67, baseType: !687, size: 64, offset: 448)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5437, file: !5438, line: 68, baseType: !687, size: 64, offset: 512)
!5477 = !DIGlobalVariableExpression(var: !5478, expr: !DIExpression())
!5478 = distinct !DIGlobalVariable(name: "__param_esp_bus_reset_settle", scope: !2, file: !3, line: 2773, type: !5479, isLocal: true, isDefinition: true, align: 64)
!5479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5480)
!5480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !5481, line: 69, size: 320, elements: !5482)
!5481 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!5482 = !{!5483, !5484, !5485, !5501, !5503, !5507, !5508}
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5480, file: !5481, line: 70, baseType: !687, size: 64)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5480, file: !5481, line: 71, baseType: !778, size: 64, offset: 64)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5480, file: !5481, line: 72, baseType: !5486, size: 64, offset: 128)
!5486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5487, size: 64)
!5487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5488)
!5488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !5481, line: 47, size: 256, elements: !5489)
!5489 = !{!5490, !5491, !5496, !5500}
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5488, file: !5481, line: 49, baseType: !7, size: 32)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !5488, file: !5481, line: 51, baseType: !5492, size: 64, offset: 64)
!5492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5493, size: 64)
!5493 = !DISubroutineType(types: !5494)
!5494 = !{!232, !687, !5495}
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5479, size: 64)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5488, file: !5481, line: 53, baseType: !5497, size: 64, offset: 128)
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5498, size: 64)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{!232, !713, !5495}
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5488, file: !5481, line: 55, baseType: !1864, size: 64, offset: 192)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !5480, file: !5481, line: 73, baseType: !5502, size: 16, offset: 192)
!5502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !962)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5480, file: !5481, line: 74, baseType: !5504, size: 8, offset: 208)
!5504 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !278, line: 16, baseType: !5505)
!5505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !280, line: 20, baseType: !5506)
!5506 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5480, file: !5481, line: 75, baseType: !453, size: 8, offset: 216)
!5508 = !DIDerivedType(tag: DW_TAG_member, scope: !5480, file: !5481, line: 76, baseType: !5509, size: 64, offset: 256)
!5509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5480, file: !5481, line: 76, size: 64, elements: !5510)
!5510 = !{!5511, !5512, !5519}
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5509, file: !5481, line: 77, baseType: !202, size: 64)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5509, file: !5481, line: 78, baseType: !5513, size: 64)
!5513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5514, size: 64)
!5514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5515)
!5515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !5481, line: 86, size: 128, elements: !5516)
!5516 = !{!5517, !5518}
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !5515, file: !5481, line: 87, baseType: !7, size: 32)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5515, file: !5481, line: 88, baseType: !713, size: 64, offset: 64)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !5509, file: !5481, line: 79, baseType: !5520, size: 64)
!5520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5521, size: 64)
!5521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5522)
!5522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !5481, line: 92, size: 256, elements: !5523)
!5523 = !{!5524, !5525, !5526, !5527, !5528}
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5522, file: !5481, line: 94, baseType: !7, size: 32)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !5522, file: !5481, line: 95, baseType: !7, size: 32, offset: 32)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5522, file: !5481, line: 96, baseType: !3098, size: 64, offset: 64)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5522, file: !5481, line: 97, baseType: !5486, size: 64, offset: 128)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !5522, file: !5481, line: 98, baseType: !202, size: 64, offset: 192)
!5529 = !DIGlobalVariableExpression(var: !5530, expr: !DIExpression())
!5530 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_esp_bus_reset_settletype321", scope: !2, file: !3, line: 2773, type: !5531, isLocal: true, isDefinition: true, align: 8)
!5531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 344, elements: !5532)
!5532 = !{!5533}
!5533 = !DISubrange(count: 43)
!5534 = !DIGlobalVariableExpression(var: !5535, expr: !DIExpression())
!5535 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_esp_bus_reset_settle322", scope: !2, file: !3, line: 2774, type: !5536, isLocal: true, isDefinition: true, align: 8)
!5536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 568, elements: !5537)
!5537 = !{!5538}
!5538 = !DISubrange(count: 71)
!5539 = !DIGlobalVariableExpression(var: !5540, expr: !DIExpression())
!5540 = distinct !DIGlobalVariable(name: "__param_esp_debug", scope: !2, file: !3, line: 2777, type: !5479, isLocal: true, isDefinition: true, align: 64)
!5541 = !DIGlobalVariableExpression(var: !5542, expr: !DIExpression())
!5542 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_esp_debugtype323", scope: !2, file: !3, line: 2777, type: !5543, isLocal: true, isDefinition: true, align: 8)
!5543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 256, elements: !652)
!5544 = !DIGlobalVariableExpression(var: !5545, expr: !DIExpression())
!5545 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_esp_debug324", scope: !2, file: !3, line: 2778, type: !5546, isLocal: true, isDefinition: true, align: 8)
!5546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 3208, elements: !5547)
!5547 = !{!5548}
!5548 = !DISubrange(count: 401)
!5549 = !DIGlobalVariableExpression(var: !5550, expr: !DIExpression())
!5550 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_esp_init325", scope: !2, file: !3, line: 2793, type: !202, isLocal: true, isDefinition: true)
!5551 = !DIGlobalVariableExpression(var: !5552, expr: !DIExpression())
!5552 = distinct !DIGlobalVariable(name: "__exitcall_esp_exit", scope: !2, file: !3, line: 2794, type: !5553, isLocal: true, isDefinition: true)
!5553 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !5554, line: 117, baseType: !5555)
!5554 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!5555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4438, size: 64)
!5556 = !DIGlobalVariableExpression(var: !5557, expr: !DIExpression())
!5557 = distinct !DIGlobalVariable(name: "esp_transport_template", scope: !2, file: !3, line: 2386, type: !4986, isLocal: true, isDefinition: true)
!5558 = !DIGlobalVariableExpression(var: !5559, expr: !DIExpression())
!5559 = distinct !DIGlobalVariable(name: "__warned", scope: !5560, file: !5561, line: 275, type: !732, isLocal: true, isDefinition: true)
!5560 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !5561, file: !5561, line: 271, type: !5562, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!5561 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!3884, !2022, !202, !867, !146, !201}
!5564 = !DIGlobalVariableExpression(var: !5565, expr: !DIExpression())
!5565 = distinct !DIGlobalVariable(name: "esp_chip_names", scope: !2, file: !3, line: 2374, type: !5566, isLocal: true, isDefinition: true)
!5566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !687, size: 576, elements: !5567)
!5567 = !{!5568}
!5568 = !DISubrange(count: 9)
!5569 = !DIGlobalVariableExpression(var: !5570, expr: !DIExpression())
!5570 = distinct !DIGlobalVariable(name: "esp_bus_reset_settle", scope: !2, file: !3, line: 39, type: !232, isLocal: true, isDefinition: true)
!5571 = !DIGlobalVariableExpression(var: !5572, expr: !DIExpression())
!5572 = distinct !DIGlobalVariable(name: "__key", scope: !5573, file: !2183, line: 88, type: !793, isLocal: true, isDefinition: true)
!5573 = distinct !DISubprogram(name: "__init_completion", scope: !2183, file: !2183, line: 85, type: !5574, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{null, !4255}
!5576 = !DIGlobalVariableExpression(var: !5577, expr: !DIExpression())
!5577 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 2771, type: !5437, isLocal: true, isDefinition: true)
!5578 = !DIGlobalVariableExpression(var: !5579, expr: !DIExpression())
!5579 = distinct !DIGlobalVariable(name: "__param_str_esp_bus_reset_settle", scope: !2, file: !3, line: 2773, type: !5580, isLocal: true, isDefinition: true)
!5580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 240, elements: !5581)
!5581 = !{!5582}
!5582 = !DISubrange(count: 30)
!5583 = !DIGlobalVariableExpression(var: !5584, expr: !DIExpression())
!5584 = distinct !DIGlobalVariable(name: "__param_str_esp_debug", scope: !2, file: !3, line: 2777, type: !5585, isLocal: true, isDefinition: true)
!5585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 152, elements: !5586)
!5586 = !{!5587}
!5587 = !DISubrange(count: 19)
!5588 = !DIGlobalVariableExpression(var: !5589, expr: !DIExpression())
!5589 = distinct !DIGlobalVariable(name: "esp_transport_ops", scope: !2, file: !3, line: 2741, type: !5590, isLocal: true, isDefinition: true)
!5590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_function_template", file: !194, line: 94, size: 1664, elements: !5591)
!5591 = !{!5592, !5593, !5597, !5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5622, !5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633}
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "get_period", scope: !5590, file: !194, line: 95, baseType: !4896, size: 64)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "set_period", scope: !5590, file: !194, line: 96, baseType: !5594, size: 64, offset: 64)
!5594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5595, size: 64)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{null, !4872, !232}
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "get_offset", scope: !5590, file: !194, line: 97, baseType: !4896, size: 64, offset: 128)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "set_offset", scope: !5590, file: !194, line: 98, baseType: !5594, size: 64, offset: 192)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "get_width", scope: !5590, file: !194, line: 99, baseType: !4896, size: 64, offset: 256)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "set_width", scope: !5590, file: !194, line: 100, baseType: !5594, size: 64, offset: 320)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "get_iu", scope: !5590, file: !194, line: 101, baseType: !4896, size: 64, offset: 384)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "set_iu", scope: !5590, file: !194, line: 102, baseType: !5594, size: 64, offset: 448)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "get_dt", scope: !5590, file: !194, line: 103, baseType: !4896, size: 64, offset: 512)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "set_dt", scope: !5590, file: !194, line: 104, baseType: !5594, size: 64, offset: 576)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "get_qas", scope: !5590, file: !194, line: 105, baseType: !4896, size: 64, offset: 640)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "set_qas", scope: !5590, file: !194, line: 106, baseType: !5594, size: 64, offset: 704)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "get_wr_flow", scope: !5590, file: !194, line: 107, baseType: !4896, size: 64, offset: 768)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "set_wr_flow", scope: !5590, file: !194, line: 108, baseType: !5594, size: 64, offset: 832)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "get_rd_strm", scope: !5590, file: !194, line: 109, baseType: !4896, size: 64, offset: 896)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "set_rd_strm", scope: !5590, file: !194, line: 110, baseType: !5594, size: 64, offset: 960)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "get_rti", scope: !5590, file: !194, line: 111, baseType: !4896, size: 64, offset: 1024)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "set_rti", scope: !5590, file: !194, line: 112, baseType: !5594, size: 64, offset: 1088)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "get_pcomp_en", scope: !5590, file: !194, line: 113, baseType: !4896, size: 64, offset: 1152)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "set_pcomp_en", scope: !5590, file: !194, line: 114, baseType: !5594, size: 64, offset: 1216)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "get_hold_mcs", scope: !5590, file: !194, line: 115, baseType: !4896, size: 64, offset: 1280)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "set_hold_mcs", scope: !5590, file: !194, line: 116, baseType: !5594, size: 64, offset: 1344)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "get_signalling", scope: !5590, file: !194, line: 117, baseType: !4904, size: 64, offset: 1408)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "set_signalling", scope: !5590, file: !194, line: 118, baseType: !5619, size: 64, offset: 1472)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5620, size: 64)
!5620 = !DISubroutineType(types: !5621)
!5621 = !{null, !242, !193}
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "deny_binding", scope: !5590, file: !194, line: 119, baseType: !4869, size: 64, offset: 1536)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "show_period", scope: !5590, file: !194, line: 124, baseType: !201, size: 1, offset: 1600, flags: DIFlagBitField, extraData: i64 1600)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "show_offset", scope: !5590, file: !194, line: 125, baseType: !201, size: 1, offset: 1601, flags: DIFlagBitField, extraData: i64 1600)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "show_width", scope: !5590, file: !194, line: 126, baseType: !201, size: 1, offset: 1602, flags: DIFlagBitField, extraData: i64 1600)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "show_iu", scope: !5590, file: !194, line: 127, baseType: !201, size: 1, offset: 1603, flags: DIFlagBitField, extraData: i64 1600)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "show_dt", scope: !5590, file: !194, line: 128, baseType: !201, size: 1, offset: 1604, flags: DIFlagBitField, extraData: i64 1600)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "show_qas", scope: !5590, file: !194, line: 129, baseType: !201, size: 1, offset: 1605, flags: DIFlagBitField, extraData: i64 1600)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "show_wr_flow", scope: !5590, file: !194, line: 130, baseType: !201, size: 1, offset: 1606, flags: DIFlagBitField, extraData: i64 1600)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "show_rd_strm", scope: !5590, file: !194, line: 131, baseType: !201, size: 1, offset: 1607, flags: DIFlagBitField, extraData: i64 1600)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "show_rti", scope: !5590, file: !194, line: 132, baseType: !201, size: 1, offset: 1608, flags: DIFlagBitField, extraData: i64 1600)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "show_pcomp_en", scope: !5590, file: !194, line: 133, baseType: !201, size: 1, offset: 1609, flags: DIFlagBitField, extraData: i64 1600)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "show_hold_mcs", scope: !5590, file: !194, line: 134, baseType: !201, size: 1, offset: 1610, flags: DIFlagBitField, extraData: i64 1600)
!5634 = !{!"rsp"}
!5635 = !{i32 7, !"Dwarf Version", i32 4}
!5636 = !{i32 2, !"Debug Info Version", i32 3}
!5637 = !{i32 1, !"wchar_size", i32 2}
!5638 = !{i32 1, !"Code Model", i32 2}
!5639 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5640 = distinct !DISubprogram(name: "scsi_esp_cmd", scope: !3, file: !3, line: 130, type: !5641, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !263)
!5641 = !DISubroutineType(types: !5642)
!5642 = !{null, !5289, !453}
!5643 = !DILocalVariable(name: "esp", arg: 1, scope: !5640, file: !3, line: 130, type: !5289)
!5644 = !DILocation(line: 130, column: 31, scope: !5640)
!5645 = !DILocalVariable(name: "val", arg: 2, scope: !5640, file: !3, line: 130, type: !453)
!5646 = !DILocation(line: 130, column: 39, scope: !5640)
!5647 = !DILocalVariable(name: "p", scope: !5640, file: !3, line: 132, type: !5648)
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 64)
!5649 = !DILocation(line: 132, column: 24, scope: !5640)
!5650 = !DILocalVariable(name: "idx", scope: !5640, file: !3, line: 133, type: !232)
!5651 = !DILocation(line: 133, column: 6, scope: !5640)
!5652 = !DILocation(line: 133, column: 12, scope: !5640)
!5653 = !DILocation(line: 133, column: 17, scope: !5640)
!5654 = !DILocation(line: 135, column: 7, scope: !5640)
!5655 = !DILocation(line: 135, column: 12, scope: !5640)
!5656 = !DILocation(line: 135, column: 26, scope: !5640)
!5657 = !DILocation(line: 135, column: 4, scope: !5640)
!5658 = !DILocation(line: 136, column: 2, scope: !5640)
!5659 = !DILocation(line: 136, column: 5, scope: !5640)
!5660 = !DILocation(line: 136, column: 10, scope: !5640)
!5661 = !DILocation(line: 137, column: 11, scope: !5640)
!5662 = !DILocation(line: 137, column: 2, scope: !5640)
!5663 = !DILocation(line: 137, column: 5, scope: !5640)
!5664 = !DILocation(line: 137, column: 9, scope: !5640)
!5665 = !DILocation(line: 138, column: 20, scope: !5640)
!5666 = !DILocation(line: 138, column: 25, scope: !5640)
!5667 = !DILocation(line: 138, column: 2, scope: !5640)
!5668 = !DILocation(line: 140, column: 24, scope: !5640)
!5669 = !DILocation(line: 140, column: 28, scope: !5640)
!5670 = !DILocation(line: 140, column: 33, scope: !5640)
!5671 = !DILocation(line: 140, column: 2, scope: !5640)
!5672 = !DILocation(line: 140, column: 7, scope: !5640)
!5673 = !DILocation(line: 140, column: 21, scope: !5640)
!5674 = !DILocation(line: 142, column: 2, scope: !5640)
!5675 = !DILocation(line: 142, column: 2, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 142, column: 2)
!5677 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 142, column: 2)
!5678 = !DILocation(line: 142, column: 2, scope: !5677)
!5679 = !DILocation(line: 143, column: 2, scope: !5640)
!5680 = !DILocation(line: 144, column: 1, scope: !5640)
!5681 = distinct !DISubprogram(name: "esp_log_fill_regs", scope: !3, file: !3, line: 119, type: !5682, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!5682 = !DISubroutineType(types: !5683)
!5683 = !{null, !5289, !5648}
!5684 = !DILocalVariable(name: "esp", arg: 1, scope: !5681, file: !3, line: 119, type: !5289)
!5685 = !DILocation(line: 119, column: 43, scope: !5681)
!5686 = !DILocalVariable(name: "p", arg: 2, scope: !5681, file: !3, line: 120, type: !5648)
!5687 = !DILocation(line: 120, column: 32, scope: !5681)
!5688 = !DILocation(line: 122, column: 12, scope: !5681)
!5689 = !DILocation(line: 122, column: 17, scope: !5681)
!5690 = !DILocation(line: 122, column: 2, scope: !5681)
!5691 = !DILocation(line: 122, column: 5, scope: !5681)
!5692 = !DILocation(line: 122, column: 10, scope: !5681)
!5693 = !DILocation(line: 123, column: 14, scope: !5681)
!5694 = !DILocation(line: 123, column: 19, scope: !5681)
!5695 = !DILocation(line: 123, column: 2, scope: !5681)
!5696 = !DILocation(line: 123, column: 5, scope: !5681)
!5697 = !DILocation(line: 123, column: 12, scope: !5681)
!5698 = !DILocation(line: 124, column: 13, scope: !5681)
!5699 = !DILocation(line: 124, column: 18, scope: !5681)
!5700 = !DILocation(line: 124, column: 2, scope: !5681)
!5701 = !DILocation(line: 124, column: 5, scope: !5681)
!5702 = !DILocation(line: 124, column: 11, scope: !5681)
!5703 = !DILocation(line: 125, column: 12, scope: !5681)
!5704 = !DILocation(line: 125, column: 17, scope: !5681)
!5705 = !DILocation(line: 125, column: 2, scope: !5681)
!5706 = !DILocation(line: 125, column: 5, scope: !5681)
!5707 = !DILocation(line: 125, column: 10, scope: !5681)
!5708 = !DILocation(line: 126, column: 20, scope: !5681)
!5709 = !DILocation(line: 126, column: 25, scope: !5681)
!5710 = !DILocation(line: 126, column: 2, scope: !5681)
!5711 = !DILocation(line: 126, column: 5, scope: !5681)
!5712 = !DILocation(line: 126, column: 18, scope: !5681)
!5713 = !DILocation(line: 127, column: 13, scope: !5681)
!5714 = !DILocation(line: 127, column: 18, scope: !5681)
!5715 = !DILocation(line: 127, column: 2, scope: !5681)
!5716 = !DILocation(line: 127, column: 5, scope: !5681)
!5717 = !DILocation(line: 127, column: 11, scope: !5681)
!5718 = !DILocation(line: 128, column: 1, scope: !5681)
!5719 = distinct !DISubprogram(name: "scsi_esp_intr", scope: !3, file: !3, line: 2182, type: !5720, scopeLine: 2183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !263)
!5720 = !DISubroutineType(types: !5721)
!5721 = !{!5722, !232, !202}
!5722 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !176, line: 17, baseType: !175)
!5723 = !DILocalVariable(name: "lock", arg: 1, scope: !5724, file: !5725, line: 407, type: !265)
!5724 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5725, file: !5725, line: 407, type: !5726, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!5725 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5726 = !DISubroutineType(types: !5727)
!5727 = !{null, !265, !201}
!5728 = !DILocation(line: 407, column: 64, scope: !5724, inlinedAt: !5729)
!5729 = distinct !DILocation(line: 2208, column: 2, scope: !5719)
!5730 = !DILocalVariable(name: "flags", arg: 2, scope: !5724, file: !5725, line: 407, type: !201)
!5731 = !DILocation(line: 407, column: 84, scope: !5724, inlinedAt: !5729)
!5732 = !DILocalVariable(name: "lock", arg: 1, scope: !5733, file: !5725, line: 327, type: !265)
!5733 = distinct !DISubprogram(name: "spinlock_check", scope: !5725, file: !5725, line: 327, type: !5734, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{!5736, !265}
!5736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!5737 = !DILocation(line: 327, column: 67, scope: !5733, inlinedAt: !5738)
!5738 = distinct !DILocation(line: 2188, column: 2, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2188, column: 2)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 2188, column: 2)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 2188, column: 2)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 2188, column: 2)
!5743 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 2188, column: 2)
!5744 = !DILocalVariable(name: "irq", arg: 1, scope: !5719, file: !3, line: 2182, type: !232)
!5745 = !DILocation(line: 2182, column: 31, scope: !5719)
!5746 = !DILocalVariable(name: "dev_id", arg: 2, scope: !5719, file: !3, line: 2182, type: !202)
!5747 = !DILocation(line: 2182, column: 42, scope: !5719)
!5748 = !DILocalVariable(name: "esp", scope: !5719, file: !3, line: 2184, type: !5289)
!5749 = !DILocation(line: 2184, column: 14, scope: !5719)
!5750 = !DILocation(line: 2184, column: 20, scope: !5719)
!5751 = !DILocalVariable(name: "flags", scope: !5719, file: !3, line: 2185, type: !201)
!5752 = !DILocation(line: 2185, column: 16, scope: !5719)
!5753 = !DILocalVariable(name: "ret", scope: !5719, file: !3, line: 2186, type: !5722)
!5754 = !DILocation(line: 2186, column: 14, scope: !5719)
!5755 = !DILocation(line: 2188, column: 2, scope: !5719)
!5756 = !DILocation(line: 2188, column: 2, scope: !5743)
!5757 = !DILocalVariable(name: "__dummy", scope: !5758, file: !3, line: 2188, type: !201)
!5758 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 2188, column: 2)
!5759 = !DILocation(line: 2188, column: 2, scope: !5758)
!5760 = !DILocalVariable(name: "__dummy2", scope: !5758, file: !3, line: 2188, type: !201)
!5761 = !DILocation(line: 2188, column: 2, scope: !5742)
!5762 = !DILocation(line: 2188, column: 2, scope: !5741)
!5763 = !DILocation(line: 2188, column: 2, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 2188, column: 2)
!5765 = !DILocalVariable(name: "__dummy", scope: !5766, file: !3, line: 2188, type: !201)
!5766 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 2188, column: 2)
!5767 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 2188, column: 2)
!5768 = !DILocation(line: 2188, column: 2, scope: !5766)
!5769 = !DILocalVariable(name: "__dummy2", scope: !5766, file: !3, line: 2188, type: !201)
!5770 = !DILocation(line: 2188, column: 2, scope: !5767)
!5771 = !DILocation(line: 2188, column: 2, scope: !5740)
!5772 = !{i32 -2141288550}
!5773 = !DILocation(line: 2188, column: 2, scope: !5739)
!5774 = !DILocation(line: 329, column: 10, scope: !5733, inlinedAt: !5738)
!5775 = !DILocation(line: 329, column: 16, scope: !5733, inlinedAt: !5738)
!5776 = !DILocation(line: 2189, column: 6, scope: !5719)
!5777 = !DILocation(line: 2190, column: 6, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 2190, column: 6)
!5779 = !DILocation(line: 2190, column: 11, scope: !5778)
!5780 = !DILocation(line: 2190, column: 16, scope: !5778)
!5781 = !DILocation(line: 2190, column: 28, scope: !5778)
!5782 = !DILocation(line: 2190, column: 6, scope: !5719)
!5783 = !DILocation(line: 2191, column: 7, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 2190, column: 34)
!5785 = !DILocation(line: 2192, column: 3, scope: !5784)
!5786 = !DILocalVariable(name: "i", scope: !5787, file: !3, line: 2193, type: !232)
!5787 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 2192, column: 12)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 2192, column: 3)
!5789 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 2192, column: 3)
!5790 = !DILocation(line: 2193, column: 8, scope: !5787)
!5791 = !DILocation(line: 2195, column: 20, scope: !5787)
!5792 = !DILocation(line: 2195, column: 4, scope: !5787)
!5793 = !DILocation(line: 2196, column: 10, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 2196, column: 8)
!5795 = !DILocation(line: 2196, column: 15, scope: !5794)
!5796 = !DILocation(line: 2196, column: 21, scope: !5794)
!5797 = !DILocation(line: 2196, column: 8, scope: !5787)
!5798 = !DILocation(line: 2197, column: 5, scope: !5794)
!5799 = !DILocation(line: 2198, column: 4, scope: !5787)
!5800 = !DILocation(line: 2198, column: 9, scope: !5787)
!5801 = !DILocation(line: 2198, column: 15, scope: !5787)
!5802 = !DILocation(line: 2200, column: 11, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 2200, column: 4)
!5804 = !DILocation(line: 2200, column: 9, scope: !5803)
!5805 = !DILocation(line: 2200, column: 16, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 2200, column: 4)
!5807 = !DILocation(line: 2200, column: 18, scope: !5806)
!5808 = !DILocation(line: 2200, column: 4, scope: !5803)
!5809 = !DILocation(line: 2201, column: 9, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 2201, column: 9)
!5811 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 2200, column: 45)
!5812 = !DILocation(line: 2201, column: 14, scope: !5810)
!5813 = !DILocation(line: 2201, column: 19, scope: !5810)
!5814 = !DILocation(line: 2201, column: 31, scope: !5810)
!5815 = !DILocation(line: 2201, column: 9, scope: !5811)
!5816 = !DILocation(line: 2202, column: 6, scope: !5810)
!5817 = !DILocation(line: 2203, column: 4, scope: !5811)
!5818 = !DILocation(line: 2200, column: 41, scope: !5806)
!5819 = !DILocation(line: 2200, column: 4, scope: !5806)
!5820 = distinct !{!5820, !5808, !5821}
!5821 = !DILocation(line: 2203, column: 4, scope: !5803)
!5822 = !DILocation(line: 2204, column: 8, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 2204, column: 8)
!5824 = !DILocation(line: 2204, column: 10, scope: !5823)
!5825 = !DILocation(line: 2204, column: 8, scope: !5787)
!5826 = !DILocation(line: 2205, column: 5, scope: !5823)
!5827 = !DILocation(line: 2192, column: 3, scope: !5788)
!5828 = distinct !{!5828, !5829, !5830}
!5829 = !DILocation(line: 2192, column: 3, scope: !5789)
!5830 = !DILocation(line: 2206, column: 3, scope: !5789)
!5831 = !DILocation(line: 2207, column: 2, scope: !5784)
!5832 = !DILocation(line: 2208, column: 25, scope: !5719)
!5833 = !DILocation(line: 2208, column: 30, scope: !5719)
!5834 = !DILocation(line: 2208, column: 36, scope: !5719)
!5835 = !DILocation(line: 2208, column: 47, scope: !5719)
!5836 = !DILocalVariable(name: "__dummy", scope: !5837, file: !5725, line: 409, type: !201)
!5837 = distinct !DILexicalBlock(scope: !5838, file: !5725, line: 409, column: 2)
!5838 = distinct !DILexicalBlock(scope: !5724, file: !5725, line: 409, column: 2)
!5839 = !DILocation(line: 409, column: 2, scope: !5837, inlinedAt: !5729)
!5840 = !DILocalVariable(name: "__dummy2", scope: !5837, file: !5725, line: 409, type: !201)
!5841 = !DILocalVariable(name: "__dummy", scope: !5842, file: !5725, line: 409, type: !201)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !5725, line: 409, column: 2)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !5725, line: 409, column: 2)
!5844 = distinct !DILexicalBlock(scope: !5845, file: !5725, line: 409, column: 2)
!5845 = distinct !DILexicalBlock(scope: !5838, file: !5725, line: 409, column: 2)
!5846 = !DILocation(line: 409, column: 2, scope: !5842, inlinedAt: !5729)
!5847 = !DILocalVariable(name: "__dummy2", scope: !5842, file: !5725, line: 409, type: !201)
!5848 = !DILocation(line: 409, column: 2, scope: !5843, inlinedAt: !5729)
!5849 = !DILocation(line: 409, column: 2, scope: !5850, inlinedAt: !5729)
!5850 = distinct !DILexicalBlock(scope: !5845, file: !5725, line: 409, column: 2)
!5851 = !{i32 -2145462890}
!5852 = !DILocation(line: 409, column: 2, scope: !5853, inlinedAt: !5729)
!5853 = distinct !DILexicalBlock(scope: !5850, file: !5725, line: 409, column: 2)
!5854 = !DILocation(line: 2210, column: 9, scope: !5719)
!5855 = !DILocation(line: 2210, column: 2, scope: !5719)
!5856 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !5857, file: !5857, line: 666, type: !5858, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!5857 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!5858 = !DISubroutineType(types: !5859)
!5859 = !{!201}
!5860 = !DILocalVariable(name: "f", scope: !5856, file: !5857, line: 668, type: !201)
!5861 = !DILocation(line: 668, column: 16, scope: !5856)
!5862 = !DILocation(line: 670, column: 6, scope: !5856)
!5863 = !DILocation(line: 670, column: 4, scope: !5856)
!5864 = !DILocation(line: 671, column: 2, scope: !5856)
!5865 = !DILocation(line: 672, column: 9, scope: !5856)
!5866 = !DILocation(line: 672, column: 2, scope: !5856)
!5867 = distinct !DISubprogram(name: "__esp_interrupt", scope: !3, file: !3, line: 2105, type: !5315, scopeLine: 2106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!5868 = !DILocalVariable(name: "esp", arg: 1, scope: !5867, file: !3, line: 2105, type: !5289)
!5869 = !DILocation(line: 2105, column: 41, scope: !5867)
!5870 = !DILocalVariable(name: "finish_reset", scope: !5867, file: !3, line: 2107, type: !232)
!5871 = !DILocation(line: 2107, column: 6, scope: !5867)
!5872 = !DILocalVariable(name: "intr_done", scope: !5867, file: !3, line: 2107, type: !232)
!5873 = !DILocation(line: 2107, column: 20, scope: !5867)
!5874 = !DILocalVariable(name: "phase", scope: !5867, file: !3, line: 2108, type: !453)
!5875 = !DILocation(line: 2108, column: 5, scope: !5867)
!5876 = !DILocation(line: 2113, column: 14, scope: !5867)
!5877 = !DILocation(line: 2113, column: 2, scope: !5867)
!5878 = !DILocation(line: 2113, column: 7, scope: !5867)
!5879 = !DILocation(line: 2113, column: 12, scope: !5867)
!5880 = !DILocation(line: 2114, column: 16, scope: !5867)
!5881 = !DILocation(line: 2114, column: 2, scope: !5867)
!5882 = !DILocation(line: 2114, column: 7, scope: !5867)
!5883 = !DILocation(line: 2114, column: 14, scope: !5867)
!5884 = !DILocation(line: 2115, column: 14, scope: !5867)
!5885 = !DILocation(line: 2115, column: 2, scope: !5867)
!5886 = !DILocation(line: 2115, column: 7, scope: !5867)
!5887 = !DILocation(line: 2115, column: 12, scope: !5867)
!5888 = !DILocation(line: 2117, column: 6, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 2117, column: 6)
!5890 = !DILocation(line: 2117, column: 11, scope: !5889)
!5891 = !DILocation(line: 2117, column: 17, scope: !5889)
!5892 = !DILocation(line: 2117, column: 6, scope: !5867)
!5893 = !DILocation(line: 2118, column: 16, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 2117, column: 39)
!5895 = !DILocation(line: 2119, column: 2, scope: !5894)
!5896 = !DILocation(line: 2120, column: 29, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 2120, column: 7)
!5898 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 2119, column: 9)
!5899 = !DILocation(line: 2120, column: 7, scope: !5897)
!5900 = !DILocation(line: 2120, column: 7, scope: !5898)
!5901 = !DILocation(line: 2121, column: 4, scope: !5897)
!5902 = !DILocation(line: 2123, column: 38, scope: !5898)
!5903 = !DILocation(line: 2123, column: 18, scope: !5898)
!5904 = !DILocation(line: 2123, column: 16, scope: !5898)
!5905 = !DILocation(line: 2124, column: 7, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 2124, column: 7)
!5907 = !DILocation(line: 2124, column: 20, scope: !5906)
!5908 = !DILocation(line: 2124, column: 7, scope: !5898)
!5909 = !DILocation(line: 2125, column: 4, scope: !5906)
!5910 = !DILocation(line: 2128, column: 6, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 2128, column: 6)
!5912 = !DILocation(line: 2128, column: 11, scope: !5911)
!5913 = !DILocation(line: 2128, column: 16, scope: !5911)
!5914 = !DILocation(line: 2128, column: 6, scope: !5867)
!5915 = !DILocation(line: 2129, column: 16, scope: !5911)
!5916 = !DILocation(line: 2129, column: 3, scope: !5911)
!5917 = !DILocation(line: 2131, column: 6, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 2131, column: 6)
!5919 = !DILocation(line: 2131, column: 6, scope: !5867)
!5920 = !DILocation(line: 2132, column: 21, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 2131, column: 20)
!5922 = !DILocation(line: 2132, column: 3, scope: !5921)
!5923 = !DILocation(line: 2133, column: 7, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 2133, column: 7)
!5925 = !DILocation(line: 2133, column: 12, scope: !5924)
!5926 = !DILocation(line: 2133, column: 7, scope: !5921)
!5927 = !DILocation(line: 2134, column: 13, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 2133, column: 22)
!5929 = !DILocation(line: 2134, column: 18, scope: !5928)
!5930 = !DILocation(line: 2134, column: 4, scope: !5928)
!5931 = !DILocation(line: 2135, column: 4, scope: !5928)
!5932 = !DILocation(line: 2135, column: 9, scope: !5928)
!5933 = !DILocation(line: 2135, column: 18, scope: !5928)
!5934 = !DILocation(line: 2136, column: 3, scope: !5928)
!5935 = !DILocation(line: 2137, column: 3, scope: !5921)
!5936 = !DILocation(line: 2140, column: 11, scope: !5867)
!5937 = !DILocation(line: 2140, column: 16, scope: !5867)
!5938 = !DILocation(line: 2140, column: 21, scope: !5867)
!5939 = !DILocation(line: 2140, column: 10, scope: !5867)
!5940 = !DILocation(line: 2140, column: 8, scope: !5867)
!5941 = !DILocation(line: 2141, column: 6, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 2141, column: 6)
!5943 = !DILocation(line: 2141, column: 11, scope: !5942)
!5944 = !DILocation(line: 2141, column: 15, scope: !5942)
!5945 = !DILocation(line: 2141, column: 6, scope: !5867)
!5946 = !DILocation(line: 2142, column: 9, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 2142, column: 7)
!5948 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 2141, column: 26)
!5949 = !DILocation(line: 2142, column: 15, scope: !5947)
!5950 = !DILocation(line: 2142, column: 26, scope: !5947)
!5951 = !DILocation(line: 2142, column: 29, scope: !5947)
!5952 = !DILocation(line: 2142, column: 35, scope: !5947)
!5953 = !DILocation(line: 2142, column: 47, scope: !5947)
!5954 = !DILocation(line: 2143, column: 8, scope: !5947)
!5955 = !DILocation(line: 2143, column: 13, scope: !5947)
!5956 = !DILocation(line: 2143, column: 26, scope: !5947)
!5957 = !DILocation(line: 2143, column: 45, scope: !5947)
!5958 = !DILocation(line: 2144, column: 8, scope: !5947)
!5959 = !DILocation(line: 2144, column: 13, scope: !5947)
!5960 = !DILocation(line: 2144, column: 19, scope: !5947)
!5961 = !DILocation(line: 2144, column: 39, scope: !5947)
!5962 = !DILocation(line: 2145, column: 8, scope: !5947)
!5963 = !DILocation(line: 2145, column: 13, scope: !5947)
!5964 = !DILocation(line: 2145, column: 19, scope: !5947)
!5965 = !DILocation(line: 2145, column: 43, scope: !5947)
!5966 = !DILocation(line: 2146, column: 8, scope: !5947)
!5967 = !DILocation(line: 2146, column: 13, scope: !5947)
!5968 = !DILocation(line: 2146, column: 18, scope: !5947)
!5969 = !DILocation(line: 2142, column: 7, scope: !5948)
!5970 = !DILocation(line: 2147, column: 17, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 2146, column: 36)
!5972 = !DILocation(line: 2147, column: 4, scope: !5971)
!5973 = !DILocation(line: 2147, column: 9, scope: !5971)
!5974 = !DILocation(line: 2147, column: 15, scope: !5971)
!5975 = !DILocation(line: 2148, column: 10, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 2148, column: 8)
!5977 = !DILocation(line: 2148, column: 15, scope: !5976)
!5978 = !DILocation(line: 2148, column: 21, scope: !5976)
!5979 = !DILocation(line: 2148, column: 41, scope: !5976)
!5980 = !DILocation(line: 2149, column: 9, scope: !5976)
!5981 = !DILocation(line: 2149, column: 14, scope: !5976)
!5982 = !DILocation(line: 2149, column: 20, scope: !5976)
!5983 = !DILocation(line: 2148, column: 8, scope: !5971)
!5984 = !DILocation(line: 2150, column: 19, scope: !5976)
!5985 = !DILocation(line: 2150, column: 5, scope: !5976)
!5986 = !DILocation(line: 2151, column: 3, scope: !5971)
!5987 = !DILocation(line: 2152, column: 2, scope: !5948)
!5988 = !DILocation(line: 2154, column: 2, scope: !5867)
!5989 = !DILocation(line: 2154, column: 2, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 2154, column: 2)
!5991 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 2154, column: 2)
!5992 = !DILocation(line: 2154, column: 2, scope: !5991)
!5993 = !DILocation(line: 2158, column: 12, scope: !5867)
!5994 = !DILocation(line: 2160, column: 6, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 2160, column: 6)
!5996 = !DILocation(line: 2160, column: 11, scope: !5995)
!5997 = !DILocation(line: 2160, column: 16, scope: !5995)
!5998 = !DILocation(line: 2160, column: 6, scope: !5867)
!5999 = !DILocation(line: 2161, column: 3, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 2160, column: 62)
!6001 = !DILocation(line: 2163, column: 7, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 2163, column: 7)
!6003 = !DILocation(line: 2163, column: 12, scope: !6002)
!6004 = !DILocation(line: 2163, column: 17, scope: !6002)
!6005 = !DILocation(line: 2163, column: 7, scope: !6000)
!6006 = !DILocation(line: 2164, column: 21, scope: !6002)
!6007 = !DILocation(line: 2164, column: 4, scope: !6002)
!6008 = !DILocation(line: 2166, column: 22, scope: !6000)
!6009 = !DILocation(line: 2166, column: 3, scope: !6000)
!6010 = !DILocation(line: 2167, column: 2, scope: !6000)
!6011 = !DILocation(line: 2168, column: 7, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 2168, column: 7)
!6013 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 2167, column: 9)
!6014 = !DILocation(line: 2168, column: 12, scope: !6012)
!6015 = !DILocation(line: 2168, column: 17, scope: !6012)
!6016 = !DILocation(line: 2168, column: 7, scope: !6013)
!6017 = !DILocation(line: 2169, column: 8, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 2169, column: 8)
!6019 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 2168, column: 34)
!6020 = !DILocation(line: 2169, column: 13, scope: !6018)
!6021 = !DILocation(line: 2169, column: 8, scope: !6019)
!6022 = !DILocation(line: 2170, column: 30, scope: !6018)
!6023 = !DILocation(line: 2170, column: 12, scope: !6018)
!6024 = !DILocation(line: 2170, column: 5, scope: !6018)
!6025 = !DILocation(line: 2171, column: 30, scope: !6019)
!6026 = !DILocation(line: 2171, column: 16, scope: !6019)
!6027 = !DILocation(line: 2171, column: 14, scope: !6019)
!6028 = !DILocation(line: 2172, column: 3, scope: !6019)
!6029 = !DILocation(line: 2174, column: 8, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 2174, column: 8)
!6031 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 2172, column: 10)
!6032 = !DILocation(line: 2174, column: 13, scope: !6030)
!6033 = !DILocation(line: 2174, column: 26, scope: !6030)
!6034 = !DILocation(line: 2174, column: 8, scope: !6031)
!6035 = !DILocation(line: 2175, column: 35, scope: !6030)
!6036 = !DILocation(line: 2175, column: 17, scope: !6030)
!6037 = !DILocation(line: 2175, column: 15, scope: !6030)
!6038 = !DILocation(line: 2175, column: 5, scope: !6030)
!6039 = !DILocation(line: 2178, column: 2, scope: !5867)
!6040 = !DILocation(line: 2178, column: 10, scope: !5867)
!6041 = !DILocation(line: 2178, column: 9, scope: !5867)
!6042 = !DILocation(line: 2179, column: 33, scope: !5867)
!6043 = !DILocation(line: 2179, column: 15, scope: !5867)
!6044 = !DILocation(line: 2179, column: 13, scope: !5867)
!6045 = distinct !{!6045, !6039, !6046}
!6046 = !DILocation(line: 2179, column: 36, scope: !5867)
!6047 = !DILocation(line: 2180, column: 1, scope: !5867)
!6048 = !DILocalVariable(name: "esp", arg: 1, scope: !5286, file: !3, line: 2388, type: !5289)
!6049 = !DILocation(line: 2388, column: 35, scope: !5286)
!6050 = !DILocalVariable(name: "err", scope: !5286, file: !3, line: 2391, type: !232)
!6051 = !DILocation(line: 2391, column: 6, scope: !5286)
!6052 = !DILocation(line: 2393, column: 7, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 2393, column: 6)
!6054 = !DILocation(line: 2393, column: 12, scope: !6053)
!6055 = !DILocation(line: 2393, column: 6, scope: !5286)
!6056 = !DILocation(line: 2394, column: 3, scope: !6053)
!6057 = !DILocation(line: 2394, column: 8, scope: !6053)
!6058 = !DILocation(line: 2394, column: 17, scope: !6053)
!6059 = !DILocation(line: 2395, column: 26, scope: !5286)
!6060 = !DILocation(line: 2395, column: 2, scope: !5286)
!6061 = !DILocation(line: 2395, column: 7, scope: !5286)
!6062 = !DILocation(line: 2395, column: 13, scope: !5286)
!6063 = !DILocation(line: 2395, column: 24, scope: !5286)
!6064 = !DILocation(line: 2396, column: 2, scope: !5286)
!6065 = !DILocation(line: 2396, column: 7, scope: !5286)
!6066 = !DILocation(line: 2396, column: 13, scope: !5286)
!6067 = !DILocation(line: 2396, column: 21, scope: !5286)
!6068 = !DILocation(line: 2397, column: 2, scope: !5286)
!6069 = !DILocation(line: 2397, column: 7, scope: !5286)
!6070 = !DILocation(line: 2397, column: 13, scope: !5286)
!6071 = !DILocation(line: 2397, column: 25, scope: !5286)
!6072 = !DILocation(line: 2398, column: 25, scope: !5286)
!6073 = !DILocation(line: 2398, column: 2, scope: !5286)
!6074 = !DILocation(line: 2398, column: 7, scope: !5286)
!6075 = !DILocation(line: 2398, column: 13, scope: !5286)
!6076 = !DILocation(line: 2398, column: 23, scope: !5286)
!6077 = !DILocation(line: 2400, column: 23, scope: !5286)
!6078 = !DILocation(line: 2400, column: 2, scope: !5286)
!6079 = !DILocation(line: 2402, column: 19, scope: !5286)
!6080 = !DILocation(line: 2402, column: 2, scope: !5286)
!6081 = !DILocation(line: 2404, column: 19, scope: !5286)
!6082 = !DILocation(line: 2404, column: 2, scope: !5286)
!6083 = !DILocation(line: 2406, column: 19, scope: !5286)
!6084 = !DILocation(line: 2406, column: 2, scope: !5286)
!6085 = !DILocation(line: 2408, column: 24, scope: !5286)
!6086 = !DILocation(line: 2408, column: 29, scope: !5286)
!6087 = !DILocation(line: 2409, column: 6, scope: !5286)
!6088 = !DILocation(line: 2409, column: 11, scope: !5286)
!6089 = !DILocation(line: 2409, column: 17, scope: !5286)
!6090 = !DILocation(line: 2409, column: 28, scope: !5286)
!6091 = !DILocation(line: 2409, column: 33, scope: !5286)
!6092 = !DILocation(line: 2409, column: 39, scope: !5286)
!6093 = !DILocation(line: 2409, column: 44, scope: !5286)
!6094 = !DILocation(line: 2410, column: 6, scope: !5286)
!6095 = !DILocation(line: 2410, column: 11, scope: !5286)
!6096 = !DILocation(line: 2410, column: 17, scope: !5286)
!6097 = !DILocation(line: 2408, column: 2, scope: !5286)
!6098 = !DILocation(line: 2411, column: 24, scope: !5286)
!6099 = !DILocation(line: 2411, column: 29, scope: !5286)
!6100 = !DILocation(line: 2413, column: 6, scope: !5286)
!6101 = !DILocation(line: 2413, column: 11, scope: !5286)
!6102 = !DILocation(line: 2413, column: 17, scope: !5286)
!6103 = !DILocation(line: 2413, column: 43, scope: !5286)
!6104 = !DILocation(line: 2413, column: 48, scope: !5286)
!6105 = !DILocation(line: 2413, column: 28, scope: !5286)
!6106 = !DILocation(line: 2414, column: 6, scope: !5286)
!6107 = !DILocation(line: 2414, column: 11, scope: !5286)
!6108 = !DILocation(line: 2414, column: 17, scope: !5286)
!6109 = !DILocation(line: 2414, column: 28, scope: !5286)
!6110 = !DILocation(line: 2414, column: 33, scope: !5286)
!6111 = !DILocation(line: 2414, column: 40, scope: !5286)
!6112 = !DILocation(line: 2414, column: 45, scope: !5286)
!6113 = !DILocation(line: 2411, column: 2, scope: !5286)
!6114 = !DILocation(line: 2417, column: 9, scope: !5286)
!6115 = !DILocation(line: 2417, column: 2, scope: !5286)
!6116 = !DILocation(line: 2419, column: 22, scope: !5286)
!6117 = !DILocation(line: 2419, column: 27, scope: !5286)
!6118 = !DILocation(line: 2419, column: 33, scope: !5286)
!6119 = !DILocation(line: 2419, column: 38, scope: !5286)
!6120 = !DILocation(line: 2419, column: 8, scope: !5286)
!6121 = !DILocation(line: 2419, column: 6, scope: !5286)
!6122 = !DILocation(line: 2420, column: 6, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 2420, column: 6)
!6124 = !DILocation(line: 2420, column: 6, scope: !5286)
!6125 = !DILocation(line: 2421, column: 10, scope: !6123)
!6126 = !DILocation(line: 2421, column: 3, scope: !6123)
!6127 = !DILocation(line: 2423, column: 10, scope: !5286)
!6128 = !DILocation(line: 2425, column: 17, scope: !5286)
!6129 = !DILocation(line: 2425, column: 22, scope: !5286)
!6130 = !DILocation(line: 2425, column: 2, scope: !5286)
!6131 = !DILocation(line: 2427, column: 2, scope: !5286)
!6132 = !DILocation(line: 2428, column: 1, scope: !5286)
!6133 = distinct !DISubprogram(name: "esp_set_clock_params", scope: !3, file: !3, line: 2313, type: !5315, scopeLine: 2314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6134 = !DILocalVariable(name: "esp", arg: 1, scope: !6133, file: !3, line: 2313, type: !5289)
!6135 = !DILocation(line: 2313, column: 46, scope: !6133)
!6136 = !DILocalVariable(name: "fhz", scope: !6133, file: !3, line: 2315, type: !232)
!6137 = !DILocation(line: 2315, column: 6, scope: !6133)
!6138 = !DILocalVariable(name: "ccf", scope: !6133, file: !3, line: 2316, type: !453)
!6139 = !DILocation(line: 2316, column: 5, scope: !6133)
!6140 = !DILocation(line: 2350, column: 8, scope: !6133)
!6141 = !DILocation(line: 2350, column: 13, scope: !6133)
!6142 = !DILocation(line: 2350, column: 6, scope: !6133)
!6143 = !DILocation(line: 2352, column: 10, scope: !6133)
!6144 = !DILocation(line: 2352, column: 14, scope: !6133)
!6145 = !DILocation(line: 2352, column: 25, scope: !6133)
!6146 = !DILocation(line: 2352, column: 30, scope: !6133)
!6147 = !DILocation(line: 2352, column: 8, scope: !6133)
!6148 = !DILocation(line: 2352, column: 6, scope: !6133)
!6149 = !DILocation(line: 2353, column: 6, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 2353, column: 6)
!6151 = !DILocation(line: 2353, column: 10, scope: !6150)
!6152 = !DILocation(line: 2353, column: 6, scope: !6133)
!6153 = !DILocation(line: 2354, column: 7, scope: !6150)
!6154 = !DILocation(line: 2354, column: 3, scope: !6150)
!6155 = !DILocation(line: 2361, column: 6, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 2361, column: 6)
!6157 = !DILocation(line: 2361, column: 10, scope: !6156)
!6158 = !DILocation(line: 2361, column: 21, scope: !6156)
!6159 = !DILocation(line: 2361, column: 24, scope: !6156)
!6160 = !DILocation(line: 2361, column: 28, scope: !6156)
!6161 = !DILocation(line: 2361, column: 32, scope: !6156)
!6162 = !DILocation(line: 2361, column: 35, scope: !6156)
!6163 = !DILocation(line: 2361, column: 39, scope: !6156)
!6164 = !DILocation(line: 2361, column: 6, scope: !6133)
!6165 = !DILocation(line: 2362, column: 7, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 2361, column: 44)
!6167 = !DILocation(line: 2363, column: 7, scope: !6166)
!6168 = !DILocation(line: 2364, column: 2, scope: !6166)
!6169 = !DILocation(line: 2366, column: 16, scope: !6133)
!6170 = !DILocation(line: 2366, column: 20, scope: !6133)
!6171 = !DILocation(line: 2366, column: 31, scope: !6133)
!6172 = !DILocation(line: 2366, column: 2, scope: !6133)
!6173 = !DILocation(line: 2366, column: 7, scope: !6133)
!6174 = !DILocation(line: 2366, column: 13, scope: !6133)
!6175 = !DILocation(line: 2367, column: 15, scope: !6133)
!6176 = !DILocation(line: 2367, column: 2, scope: !6133)
!6177 = !DILocation(line: 2367, column: 7, scope: !6133)
!6178 = !DILocation(line: 2367, column: 13, scope: !6133)
!6179 = !DILocation(line: 2368, column: 16, scope: !6133)
!6180 = !DILocation(line: 2368, column: 2, scope: !6133)
!6181 = !DILocation(line: 2368, column: 7, scope: !6133)
!6182 = !DILocation(line: 2368, column: 14, scope: !6133)
!6183 = !DILocation(line: 2369, column: 15, scope: !6133)
!6184 = !DILocation(line: 2369, column: 2, scope: !6133)
!6185 = !DILocation(line: 2369, column: 7, scope: !6133)
!6186 = !DILocation(line: 2369, column: 13, scope: !6133)
!6187 = !DILocation(line: 2370, column: 18, scope: !6133)
!6188 = !DILocation(line: 2370, column: 2, scope: !6133)
!6189 = !DILocation(line: 2370, column: 7, scope: !6133)
!6190 = !DILocation(line: 2370, column: 16, scope: !6133)
!6191 = !DILocation(line: 2371, column: 2, scope: !6133)
!6192 = !DILocation(line: 2371, column: 7, scope: !6133)
!6193 = !DILocation(line: 2371, column: 17, scope: !6133)
!6194 = !DILocation(line: 2372, column: 1, scope: !6133)
!6195 = distinct !DISubprogram(name: "esp_get_revision", scope: !3, file: !3, line: 2214, type: !5315, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6196 = !DILocalVariable(name: "esp", arg: 1, scope: !6195, file: !3, line: 2214, type: !5289)
!6197 = !DILocation(line: 2214, column: 42, scope: !6195)
!6198 = !DILocalVariable(name: "val", scope: !6195, file: !3, line: 2216, type: !453)
!6199 = !DILocation(line: 2216, column: 5, scope: !6195)
!6200 = !DILocation(line: 2218, column: 41, scope: !6195)
!6201 = !DILocation(line: 2218, column: 46, scope: !6195)
!6202 = !DILocation(line: 2218, column: 54, scope: !6195)
!6203 = !DILocation(line: 2218, column: 38, scope: !6195)
!6204 = !DILocation(line: 2218, column: 17, scope: !6195)
!6205 = !DILocation(line: 2218, column: 2, scope: !6195)
!6206 = !DILocation(line: 2218, column: 7, scope: !6195)
!6207 = !DILocation(line: 2218, column: 15, scope: !6195)
!6208 = !DILocation(line: 2219, column: 6, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 2219, column: 6)
!6210 = !DILocation(line: 2219, column: 11, scope: !6209)
!6211 = !DILocation(line: 2219, column: 19, scope: !6209)
!6212 = !DILocation(line: 2219, column: 6, scope: !6195)
!6213 = !DILocation(line: 2220, column: 3, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 2219, column: 25)
!6215 = !DILocation(line: 2220, column: 8, scope: !6214)
!6216 = !DILocation(line: 2220, column: 16, scope: !6214)
!6217 = !DILocation(line: 2221, column: 3, scope: !6214)
!6218 = !DILocation(line: 2223, column: 9, scope: !6214)
!6219 = !DILocation(line: 2223, column: 7, scope: !6214)
!6220 = !DILocation(line: 2224, column: 7, scope: !6214)
!6221 = !DILocation(line: 2226, column: 3, scope: !6214)
!6222 = !DILocation(line: 2226, column: 8, scope: !6214)
!6223 = !DILocation(line: 2226, column: 16, scope: !6214)
!6224 = !DILocation(line: 2227, column: 7, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 2227, column: 7)
!6226 = !DILocation(line: 2227, column: 11, scope: !6225)
!6227 = !DILocation(line: 2227, column: 7, scope: !6214)
!6228 = !DILocation(line: 2233, column: 4, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 2227, column: 63)
!6230 = !DILocation(line: 2233, column: 9, scope: !6229)
!6231 = !DILocation(line: 2233, column: 13, scope: !6229)
!6232 = !DILocation(line: 2234, column: 4, scope: !6229)
!6233 = !DILocation(line: 2236, column: 2, scope: !6214)
!6234 = !DILocation(line: 2238, column: 22, scope: !6195)
!6235 = !DILocation(line: 2238, column: 2, scope: !6195)
!6236 = !DILocation(line: 2239, column: 2, scope: !6195)
!6237 = !DILocation(line: 2239, column: 7, scope: !6195)
!6238 = !DILocation(line: 2239, column: 17, scope: !6195)
!6239 = !DILocation(line: 2240, column: 2, scope: !6195)
!6240 = !DILocation(line: 2241, column: 2, scope: !6195)
!6241 = !DILocation(line: 2242, column: 2, scope: !6195)
!6242 = !DILocation(line: 2244, column: 8, scope: !6195)
!6243 = !DILocation(line: 2244, column: 6, scope: !6195)
!6244 = !DILocation(line: 2245, column: 6, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 2245, column: 6)
!6246 = !DILocation(line: 2245, column: 10, scope: !6245)
!6247 = !DILocation(line: 2245, column: 6, scope: !6195)
!6248 = !DILocation(line: 2249, column: 3, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 2245, column: 16)
!6250 = !DILocation(line: 2249, column: 8, scope: !6249)
!6251 = !DILocation(line: 2249, column: 12, scope: !6249)
!6252 = !DILocation(line: 2250, column: 2, scope: !6249)
!6253 = !DILocation(line: 2251, column: 23, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 2250, column: 9)
!6255 = !DILocation(line: 2251, column: 3, scope: !6254)
!6256 = !DILocation(line: 2252, column: 3, scope: !6254)
!6257 = !DILocation(line: 2252, column: 8, scope: !6254)
!6258 = !DILocation(line: 2252, column: 18, scope: !6254)
!6259 = !DILocation(line: 2253, column: 3, scope: !6254)
!6260 = !DILocation(line: 2258, column: 7, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 2258, column: 7)
!6262 = !DILocation(line: 2258, column: 12, scope: !6261)
!6263 = !DILocation(line: 2258, column: 18, scope: !6261)
!6264 = !DILocation(line: 2258, column: 23, scope: !6261)
!6265 = !DILocation(line: 2258, column: 26, scope: !6261)
!6266 = !DILocation(line: 2258, column: 31, scope: !6261)
!6267 = !DILocation(line: 2258, column: 37, scope: !6261)
!6268 = !DILocation(line: 2258, column: 7, scope: !6254)
!6269 = !DILocation(line: 2259, column: 4, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2258, column: 51)
!6271 = !DILocation(line: 2259, column: 9, scope: !6270)
!6272 = !DILocation(line: 2259, column: 13, scope: !6270)
!6273 = !DILocation(line: 2260, column: 4, scope: !6270)
!6274 = !DILocation(line: 2260, column: 9, scope: !6270)
!6275 = !DILocation(line: 2260, column: 19, scope: !6270)
!6276 = !DILocation(line: 2261, column: 3, scope: !6270)
!6277 = !DILocation(line: 2262, column: 4, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2261, column: 10)
!6279 = !DILocation(line: 2262, column: 9, scope: !6278)
!6280 = !DILocation(line: 2262, column: 13, scope: !6278)
!6281 = !DILocation(line: 2265, column: 1, scope: !6195)
!6282 = distinct !DISubprogram(name: "esp_init_swstate", scope: !3, file: !3, line: 2267, type: !5315, scopeLine: 2268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6283 = !DILocalVariable(name: "esp", arg: 1, scope: !6282, file: !3, line: 2267, type: !5289)
!6284 = !DILocation(line: 2267, column: 42, scope: !6282)
!6285 = !DILocalVariable(name: "i", scope: !6282, file: !3, line: 2269, type: !232)
!6286 = !DILocation(line: 2269, column: 6, scope: !6282)
!6287 = !DILocation(line: 2271, column: 18, scope: !6282)
!6288 = !DILocation(line: 2271, column: 23, scope: !6282)
!6289 = !DILocation(line: 2271, column: 2, scope: !6282)
!6290 = !DILocation(line: 2272, column: 18, scope: !6282)
!6291 = !DILocation(line: 2272, column: 23, scope: !6282)
!6292 = !DILocation(line: 2272, column: 2, scope: !6282)
!6293 = !DILocation(line: 2273, column: 18, scope: !6282)
!6294 = !DILocation(line: 2273, column: 23, scope: !6282)
!6295 = !DILocation(line: 2273, column: 2, scope: !6282)
!6296 = !DILocation(line: 2279, column: 9, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 2279, column: 2)
!6298 = !DILocation(line: 2279, column: 7, scope: !6297)
!6299 = !DILocation(line: 2279, column: 15, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 2279, column: 2)
!6301 = !DILocation(line: 2279, column: 17, scope: !6300)
!6302 = !DILocation(line: 2279, column: 2, scope: !6297)
!6303 = !DILocation(line: 2280, column: 3, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 2279, column: 40)
!6305 = !DILocation(line: 2280, column: 8, scope: !6304)
!6306 = !DILocation(line: 2280, column: 15, scope: !6304)
!6307 = !DILocation(line: 2280, column: 18, scope: !6304)
!6308 = !DILocation(line: 2280, column: 24, scope: !6304)
!6309 = !DILocation(line: 2281, column: 3, scope: !6304)
!6310 = !DILocation(line: 2281, column: 8, scope: !6304)
!6311 = !DILocation(line: 2281, column: 15, scope: !6304)
!6312 = !DILocation(line: 2281, column: 18, scope: !6304)
!6313 = !DILocation(line: 2281, column: 35, scope: !6304)
!6314 = !DILocation(line: 2282, column: 3, scope: !6304)
!6315 = !DILocation(line: 2282, column: 8, scope: !6304)
!6316 = !DILocation(line: 2282, column: 15, scope: !6304)
!6317 = !DILocation(line: 2282, column: 18, scope: !6304)
!6318 = !DILocation(line: 2282, column: 35, scope: !6304)
!6319 = !DILocation(line: 2283, column: 3, scope: !6304)
!6320 = !DILocation(line: 2283, column: 8, scope: !6304)
!6321 = !DILocation(line: 2283, column: 15, scope: !6304)
!6322 = !DILocation(line: 2283, column: 18, scope: !6304)
!6323 = !DILocation(line: 2283, column: 34, scope: !6304)
!6324 = !DILocation(line: 2284, column: 3, scope: !6304)
!6325 = !DILocation(line: 2284, column: 8, scope: !6304)
!6326 = !DILocation(line: 2284, column: 15, scope: !6304)
!6327 = !DILocation(line: 2284, column: 18, scope: !6304)
!6328 = !DILocation(line: 2284, column: 33, scope: !6304)
!6329 = !DILocation(line: 2285, column: 2, scope: !6304)
!6330 = !DILocation(line: 2279, column: 36, scope: !6300)
!6331 = !DILocation(line: 2279, column: 2, scope: !6300)
!6332 = distinct !{!6332, !6302, !6333}
!6333 = !DILocation(line: 2285, column: 2, scope: !6297)
!6334 = !DILocation(line: 2286, column: 1, scope: !6282)
!6335 = distinct !DISubprogram(name: "esp_bootup_reset", scope: !3, file: !3, line: 2289, type: !5315, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6336 = !DILocalVariable(name: "esp", arg: 1, scope: !6335, file: !3, line: 2289, type: !5289)
!6337 = !DILocation(line: 2289, column: 42, scope: !6335)
!6338 = !DILocalVariable(name: "val", scope: !6335, file: !3, line: 2291, type: !453)
!6339 = !DILocation(line: 2291, column: 5, scope: !6335)
!6340 = !DILocation(line: 2294, column: 2, scope: !6335)
!6341 = !DILocation(line: 2294, column: 7, scope: !6335)
!6342 = !DILocation(line: 2294, column: 12, scope: !6335)
!6343 = !DILocation(line: 2294, column: 22, scope: !6335)
!6344 = !DILocation(line: 2297, column: 16, scope: !6335)
!6345 = !DILocation(line: 2297, column: 2, scope: !6335)
!6346 = !DILocation(line: 2300, column: 8, scope: !6335)
!6347 = !DILocation(line: 2300, column: 6, scope: !6335)
!6348 = !DILocation(line: 2301, column: 6, scope: !6335)
!6349 = !DILocation(line: 2302, column: 2, scope: !6335)
!6350 = !DILocation(line: 2304, column: 15, scope: !6335)
!6351 = !DILocation(line: 2304, column: 2, scope: !6335)
!6352 = !DILocation(line: 2305, column: 2, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 2305, column: 2)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 2305, column: 2)
!6355 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 2305, column: 2)
!6356 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 2305, column: 2)
!6357 = !DILocation(line: 2307, column: 2, scope: !6335)
!6358 = !DILocation(line: 2310, column: 2, scope: !6335)
!6359 = !DILocation(line: 2311, column: 1, scope: !6335)
!6360 = distinct !DISubprogram(name: "ssleep", scope: !6361, file: !6361, line: 63, type: !6362, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6361 = !DIFile(filename: "./include/linux/delay.h", directory: "/home/lizy2001/genbc/linux")
!6362 = !DISubroutineType(types: !6363)
!6363 = !{null, !7}
!6364 = !DILocalVariable(name: "seconds", arg: 1, scope: !6360, file: !6361, line: 63, type: !7)
!6365 = !DILocation(line: 63, column: 40, scope: !6360)
!6366 = !DILocation(line: 65, column: 9, scope: !6360)
!6367 = !DILocation(line: 65, column: 17, scope: !6360)
!6368 = !DILocation(line: 65, column: 2, scope: !6360)
!6369 = !DILocation(line: 66, column: 1, scope: !6360)
!6370 = distinct !DISubprogram(name: "scsi_add_host", scope: !154, file: !154, line: 753, type: !6371, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6371 = !DISubroutineType(types: !6372)
!6372 = !{!232, !242, !2022}
!6373 = !DILocalVariable(name: "host", arg: 1, scope: !6370, file: !154, line: 753, type: !242)
!6374 = !DILocation(line: 753, column: 64, scope: !6370)
!6375 = !DILocalVariable(name: "dev", arg: 2, scope: !6370, file: !154, line: 754, type: !2022)
!6376 = !DILocation(line: 754, column: 26, scope: !6370)
!6377 = !DILocation(line: 756, column: 32, scope: !6370)
!6378 = !DILocation(line: 756, column: 38, scope: !6370)
!6379 = !DILocation(line: 756, column: 43, scope: !6370)
!6380 = !DILocation(line: 756, column: 9, scope: !6370)
!6381 = !DILocation(line: 756, column: 2, scope: !6370)
!6382 = distinct !DISubprogram(name: "scsi_esp_unregister", scope: !3, file: !3, line: 2431, type: !5315, scopeLine: 2432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6383 = !DILocalVariable(name: "esp", arg: 1, scope: !6382, file: !3, line: 2431, type: !5289)
!6384 = !DILocation(line: 2431, column: 38, scope: !6382)
!6385 = !DILocation(line: 2433, column: 19, scope: !6382)
!6386 = !DILocation(line: 2433, column: 24, scope: !6382)
!6387 = !DILocation(line: 2433, column: 2, scope: !6382)
!6388 = !DILocation(line: 2434, column: 1, scope: !6382)
!6389 = distinct !DISubprogram(name: "esp_info", scope: !3, file: !3, line: 2669, type: !4835, scopeLine: 2670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6390 = !DILocalVariable(name: "host", arg: 1, scope: !6389, file: !3, line: 2669, type: !242)
!6391 = !DILocation(line: 2669, column: 47, scope: !6389)
!6392 = !DILocation(line: 2671, column: 2, scope: !6389)
!6393 = distinct !DISubprogram(name: "esp_queuecommand", scope: !3, file: !3, line: 986, type: !4843, scopeLine: 986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6394 = !DILocation(line: 407, column: 64, scope: !5724, inlinedAt: !6395)
!6395 = distinct !DILocation(line: 986, column: 8, scope: !6393)
!6396 = !DILocation(line: 407, column: 84, scope: !5724, inlinedAt: !6395)
!6397 = !DILocation(line: 327, column: 67, scope: !5733, inlinedAt: !6398)
!6398 = distinct !DILocation(line: 986, column: 8, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 986, column: 8)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 986, column: 8)
!6401 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 986, column: 8)
!6402 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 986, column: 8)
!6403 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 986, column: 8)
!6404 = !DILocalVariable(name: "shost", arg: 1, scope: !6393, file: !3, line: 986, type: !242)
!6405 = !DILocation(line: 986, column: 8, scope: !6393)
!6406 = !DILocalVariable(name: "cmd", arg: 2, scope: !6393, file: !3, line: 986, type: !214)
!6407 = !DILocalVariable(name: "irq_flags", scope: !6393, file: !3, line: 986, type: !201)
!6408 = !DILocalVariable(name: "rc", scope: !6393, file: !3, line: 986, type: !232)
!6409 = !DILocation(line: 986, column: 8, scope: !6403)
!6410 = !DILocalVariable(name: "__dummy", scope: !6411, file: !3, line: 986, type: !201)
!6411 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 986, column: 8)
!6412 = !DILocation(line: 986, column: 8, scope: !6411)
!6413 = !DILocalVariable(name: "__dummy2", scope: !6411, file: !3, line: 986, type: !201)
!6414 = !DILocation(line: 986, column: 8, scope: !6402)
!6415 = !DILocation(line: 986, column: 8, scope: !6401)
!6416 = !DILocation(line: 986, column: 8, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 986, column: 8)
!6418 = !DILocalVariable(name: "__dummy", scope: !6419, file: !3, line: 986, type: !201)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 986, column: 8)
!6420 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 986, column: 8)
!6421 = !DILocation(line: 986, column: 8, scope: !6419)
!6422 = !DILocalVariable(name: "__dummy2", scope: !6419, file: !3, line: 986, type: !201)
!6423 = !DILocation(line: 986, column: 8, scope: !6420)
!6424 = !DILocation(line: 986, column: 8, scope: !6400)
!6425 = !{i32 -2141316111}
!6426 = !DILocation(line: 986, column: 8, scope: !6399)
!6427 = !DILocation(line: 329, column: 10, scope: !5733, inlinedAt: !6398)
!6428 = !DILocation(line: 329, column: 16, scope: !5733, inlinedAt: !6398)
!6429 = !DILocation(line: 409, column: 2, scope: !5837, inlinedAt: !6395)
!6430 = !DILocation(line: 409, column: 2, scope: !5842, inlinedAt: !6395)
!6431 = !DILocation(line: 409, column: 2, scope: !5843, inlinedAt: !6395)
!6432 = !DILocation(line: 409, column: 2, scope: !5850, inlinedAt: !6395)
!6433 = !DILocation(line: 409, column: 2, scope: !5853, inlinedAt: !6395)
!6434 = distinct !DISubprogram(name: "esp_eh_abort_handler", scope: !3, file: !3, line: 2501, type: !4853, scopeLine: 2502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6435 = !DILocation(line: 407, column: 64, scope: !5724, inlinedAt: !6436)
!6436 = distinct !DILocation(line: 2606, column: 2, scope: !6434)
!6437 = !DILocation(line: 407, column: 84, scope: !5724, inlinedAt: !6436)
!6438 = !DILocation(line: 407, column: 64, scope: !5724, inlinedAt: !6439)
!6439 = distinct !DILocation(line: 2598, column: 3, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 2595, column: 54)
!6441 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2595, column: 6)
!6442 = !DILocation(line: 407, column: 84, scope: !5724, inlinedAt: !6439)
!6443 = !DILocation(line: 327, column: 67, scope: !5733, inlinedAt: !6444)
!6444 = distinct !DILocation(line: 2596, column: 3, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 2596, column: 3)
!6446 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2596, column: 3)
!6447 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 2596, column: 3)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 2596, column: 3)
!6449 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2596, column: 3)
!6450 = !DILocation(line: 407, column: 64, scope: !5724, inlinedAt: !6451)
!6451 = distinct !DILocation(line: 2593, column: 2, scope: !6434)
!6452 = !DILocation(line: 407, column: 84, scope: !5724, inlinedAt: !6451)
!6453 = !DILocation(line: 327, column: 67, scope: !5733, inlinedAt: !6454)
!6454 = distinct !DILocation(line: 2530, column: 2, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 2530, column: 2)
!6456 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 2530, column: 2)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 2530, column: 2)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 2530, column: 2)
!6459 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2530, column: 2)
!6460 = !DILocation(line: 407, column: 64, scope: !5724, inlinedAt: !6461)
!6461 = distinct !DILocation(line: 2528, column: 2, scope: !6434)
!6462 = !DILocation(line: 407, column: 84, scope: !5724, inlinedAt: !6461)
!6463 = !DILocation(line: 407, column: 64, scope: !5724, inlinedAt: !6464)
!6464 = distinct !DILocation(line: 2614, column: 2, scope: !6434)
!6465 = !DILocation(line: 407, column: 84, scope: !5724, inlinedAt: !6464)
!6466 = !DILocation(line: 327, column: 67, scope: !5733, inlinedAt: !6467)
!6467 = distinct !DILocation(line: 2511, column: 2, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 2511, column: 2)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2511, column: 2)
!6470 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 2511, column: 2)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2511, column: 2)
!6472 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2511, column: 2)
!6473 = !DILocalVariable(name: "cmd", arg: 1, scope: !6434, file: !3, line: 2501, type: !214)
!6474 = !DILocation(line: 2501, column: 51, scope: !6434)
!6475 = !DILocalVariable(name: "esp", scope: !6434, file: !3, line: 2503, type: !5289)
!6476 = !DILocation(line: 2503, column: 14, scope: !6434)
!6477 = !DILocation(line: 2503, column: 31, scope: !6434)
!6478 = !DILocation(line: 2503, column: 36, scope: !6434)
!6479 = !DILocation(line: 2503, column: 44, scope: !6434)
!6480 = !DILocation(line: 2503, column: 20, scope: !6434)
!6481 = !DILocalVariable(name: "ent", scope: !6434, file: !3, line: 2504, type: !203)
!6482 = !DILocation(line: 2504, column: 24, scope: !6434)
!6483 = !DILocalVariable(name: "tmp", scope: !6434, file: !3, line: 2504, type: !203)
!6484 = !DILocation(line: 2504, column: 30, scope: !6434)
!6485 = !DILocalVariable(name: "eh_done", scope: !6434, file: !3, line: 2505, type: !2182)
!6486 = !DILocation(line: 2505, column: 20, scope: !6434)
!6487 = !DILocalVariable(name: "flags", scope: !6434, file: !3, line: 2506, type: !201)
!6488 = !DILocation(line: 2506, column: 16, scope: !6434)
!6489 = !DILocation(line: 2511, column: 2, scope: !6434)
!6490 = !DILocation(line: 2511, column: 2, scope: !6472)
!6491 = !DILocalVariable(name: "__dummy", scope: !6492, file: !3, line: 2511, type: !201)
!6492 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 2511, column: 2)
!6493 = !DILocation(line: 2511, column: 2, scope: !6492)
!6494 = !DILocalVariable(name: "__dummy2", scope: !6492, file: !3, line: 2511, type: !201)
!6495 = !DILocation(line: 2511, column: 2, scope: !6471)
!6496 = !DILocation(line: 2511, column: 2, scope: !6470)
!6497 = !DILocation(line: 2511, column: 2, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2511, column: 2)
!6499 = !DILocalVariable(name: "__dummy", scope: !6500, file: !3, line: 2511, type: !201)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 2511, column: 2)
!6501 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 2511, column: 2)
!6502 = !DILocation(line: 2511, column: 2, scope: !6500)
!6503 = !DILocalVariable(name: "__dummy2", scope: !6500, file: !3, line: 2511, type: !201)
!6504 = !DILocation(line: 2511, column: 2, scope: !6501)
!6505 = !DILocation(line: 2511, column: 2, scope: !6469)
!6506 = !{i32 -2141285460}
!6507 = !DILocation(line: 2511, column: 2, scope: !6468)
!6508 = !DILocation(line: 329, column: 10, scope: !5733, inlinedAt: !6467)
!6509 = !DILocation(line: 329, column: 16, scope: !5733, inlinedAt: !6467)
!6510 = !DILocation(line: 2512, column: 2, scope: !6434)
!6511 = !DILocation(line: 2514, column: 8, scope: !6434)
!6512 = !DILocation(line: 2514, column: 13, scope: !6434)
!6513 = !DILocation(line: 2514, column: 6, scope: !6434)
!6514 = !DILocation(line: 2515, column: 6, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2515, column: 6)
!6516 = !DILocation(line: 2515, column: 6, scope: !6434)
!6517 = !DILocation(line: 2516, column: 3, scope: !6515)
!6518 = !DILocalVariable(name: "__mptr", scope: !6519, file: !3, line: 2519, type: !202)
!6519 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 2519, column: 2)
!6520 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2519, column: 2)
!6521 = !DILocation(line: 2519, column: 2, scope: !6519)
!6522 = !DILocation(line: 2519, column: 2, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 2519, column: 2)
!6524 = !DILocation(line: 2519, column: 2, scope: !6520)
!6525 = !DILocation(line: 2519, column: 2, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 2519, column: 2)
!6527 = !DILocation(line: 2520, column: 3, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 2519, column: 52)
!6529 = !DILocation(line: 2522, column: 2, scope: !6528)
!6530 = !DILocalVariable(name: "__mptr", scope: !6531, file: !3, line: 2519, type: !202)
!6531 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 2519, column: 2)
!6532 = !DILocation(line: 2519, column: 2, scope: !6531)
!6533 = !DILocation(line: 2519, column: 2, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 2519, column: 2)
!6535 = distinct !{!6535, !6524, !6536}
!6536 = !DILocation(line: 2522, column: 2, scope: !6520)
!6537 = !DILocalVariable(name: "__mptr", scope: !6538, file: !3, line: 2523, type: !202)
!6538 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 2523, column: 2)
!6539 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2523, column: 2)
!6540 = !DILocation(line: 2523, column: 2, scope: !6538)
!6541 = !DILocation(line: 2523, column: 2, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 2523, column: 2)
!6543 = !DILocation(line: 2523, column: 2, scope: !6539)
!6544 = !DILocation(line: 2523, column: 2, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 2523, column: 2)
!6546 = !DILocation(line: 2524, column: 3, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 2523, column: 52)
!6548 = !DILocation(line: 2526, column: 2, scope: !6547)
!6549 = !DILocalVariable(name: "__mptr", scope: !6550, file: !3, line: 2523, type: !202)
!6550 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 2523, column: 2)
!6551 = !DILocation(line: 2523, column: 2, scope: !6550)
!6552 = !DILocation(line: 2523, column: 2, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 2523, column: 2)
!6554 = distinct !{!6554, !6543, !6555}
!6555 = !DILocation(line: 2526, column: 2, scope: !6539)
!6556 = !DILocation(line: 2527, column: 19, scope: !6434)
!6557 = !DILocation(line: 2527, column: 2, scope: !6434)
!6558 = !DILocation(line: 2528, column: 25, scope: !6434)
!6559 = !DILocation(line: 2528, column: 30, scope: !6434)
!6560 = !DILocation(line: 2528, column: 36, scope: !6434)
!6561 = !DILocation(line: 2528, column: 47, scope: !6434)
!6562 = !DILocation(line: 409, column: 2, scope: !5837, inlinedAt: !6461)
!6563 = !DILocation(line: 409, column: 2, scope: !5842, inlinedAt: !6461)
!6564 = !DILocation(line: 409, column: 2, scope: !5843, inlinedAt: !6461)
!6565 = !DILocation(line: 409, column: 2, scope: !5850, inlinedAt: !6461)
!6566 = !DILocation(line: 409, column: 2, scope: !5853, inlinedAt: !6461)
!6567 = !DILocation(line: 2530, column: 2, scope: !6434)
!6568 = !DILocation(line: 2530, column: 2, scope: !6459)
!6569 = !DILocalVariable(name: "__dummy", scope: !6570, file: !3, line: 2530, type: !201)
!6570 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 2530, column: 2)
!6571 = !DILocation(line: 2530, column: 2, scope: !6570)
!6572 = !DILocalVariable(name: "__dummy2", scope: !6570, file: !3, line: 2530, type: !201)
!6573 = !DILocation(line: 2530, column: 2, scope: !6458)
!6574 = !DILocation(line: 2530, column: 2, scope: !6457)
!6575 = !DILocation(line: 2530, column: 2, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 2530, column: 2)
!6577 = !DILocalVariable(name: "__dummy", scope: !6578, file: !3, line: 2530, type: !201)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 2530, column: 2)
!6579 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 2530, column: 2)
!6580 = !DILocation(line: 2530, column: 2, scope: !6578)
!6581 = !DILocalVariable(name: "__dummy2", scope: !6578, file: !3, line: 2530, type: !201)
!6582 = !DILocation(line: 2530, column: 2, scope: !6579)
!6583 = !DILocation(line: 2530, column: 2, scope: !6456)
!6584 = !{i32 -2141276042}
!6585 = !DILocation(line: 2530, column: 2, scope: !6455)
!6586 = !DILocation(line: 329, column: 10, scope: !5733, inlinedAt: !6454)
!6587 = !DILocation(line: 329, column: 16, scope: !5733, inlinedAt: !6454)
!6588 = !DILocation(line: 2532, column: 6, scope: !6434)
!6589 = !DILocalVariable(name: "__mptr", scope: !6590, file: !3, line: 2533, type: !202)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2533, column: 2)
!6591 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2533, column: 2)
!6592 = !DILocation(line: 2533, column: 2, scope: !6590)
!6593 = !DILocation(line: 2533, column: 2, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 2533, column: 2)
!6595 = !DILocation(line: 2533, column: 2, scope: !6591)
!6596 = !DILocation(line: 2533, column: 2, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2533, column: 2)
!6598 = !DILocation(line: 2534, column: 7, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 2534, column: 7)
!6600 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 2533, column: 52)
!6601 = !DILocation(line: 2534, column: 12, scope: !6599)
!6602 = !DILocation(line: 2534, column: 19, scope: !6599)
!6603 = !DILocation(line: 2534, column: 16, scope: !6599)
!6604 = !DILocation(line: 2534, column: 7, scope: !6600)
!6605 = !DILocation(line: 2535, column: 10, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 2534, column: 24)
!6607 = !DILocation(line: 2535, column: 8, scope: !6606)
!6608 = !DILocation(line: 2536, column: 4, scope: !6606)
!6609 = !DILocation(line: 2538, column: 2, scope: !6600)
!6610 = !DILocalVariable(name: "__mptr", scope: !6611, file: !3, line: 2533, type: !202)
!6611 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 2533, column: 2)
!6612 = !DILocation(line: 2533, column: 2, scope: !6611)
!6613 = !DILocation(line: 2533, column: 2, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 2533, column: 2)
!6615 = distinct !{!6615, !6595, !6616}
!6616 = !DILocation(line: 2538, column: 2, scope: !6591)
!6617 = !DILocation(line: 2540, column: 6, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2540, column: 6)
!6619 = !DILocation(line: 2540, column: 6, scope: !6434)
!6620 = !DILocation(line: 2544, column: 13, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 2540, column: 11)
!6622 = !DILocation(line: 2544, column: 18, scope: !6621)
!6623 = !DILocation(line: 2544, column: 3, scope: !6621)
!6624 = !DILocation(line: 2546, column: 3, scope: !6621)
!6625 = !DILocation(line: 2546, column: 8, scope: !6621)
!6626 = !DILocation(line: 2546, column: 15, scope: !6621)
!6627 = !DILocation(line: 2547, column: 3, scope: !6621)
!6628 = !DILocation(line: 2547, column: 8, scope: !6621)
!6629 = !DILocation(line: 2547, column: 18, scope: !6621)
!6630 = !DILocation(line: 2549, column: 15, scope: !6621)
!6631 = !DILocation(line: 2549, column: 20, scope: !6621)
!6632 = !DILocation(line: 2549, column: 3, scope: !6621)
!6633 = !DILocation(line: 2551, column: 3, scope: !6621)
!6634 = !DILocation(line: 2554, column: 2, scope: !6434)
!6635 = !DILocation(line: 2556, column: 8, scope: !6434)
!6636 = !DILocation(line: 2556, column: 13, scope: !6434)
!6637 = !DILocation(line: 2556, column: 6, scope: !6434)
!6638 = !DILocation(line: 2557, column: 6, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2557, column: 6)
!6640 = !DILocation(line: 2557, column: 10, scope: !6639)
!6641 = !DILocation(line: 2557, column: 13, scope: !6639)
!6642 = !DILocation(line: 2557, column: 18, scope: !6639)
!6643 = !DILocation(line: 2557, column: 25, scope: !6639)
!6644 = !DILocation(line: 2557, column: 22, scope: !6639)
!6645 = !DILocation(line: 2557, column: 6, scope: !6434)
!6646 = !DILocation(line: 2562, column: 7, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 2562, column: 7)
!6648 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 2557, column: 30)
!6649 = !DILocation(line: 2562, column: 12, scope: !6647)
!6650 = !DILocation(line: 2562, column: 7, scope: !6648)
!6651 = !DILocation(line: 2563, column: 4, scope: !6647)
!6652 = !DILocation(line: 2568, column: 3, scope: !6648)
!6653 = !DILocation(line: 2568, column: 8, scope: !6648)
!6654 = !DILocation(line: 2568, column: 19, scope: !6648)
!6655 = !DILocation(line: 2569, column: 3, scope: !6648)
!6656 = !DILocation(line: 2569, column: 8, scope: !6648)
!6657 = !DILocation(line: 2569, column: 20, scope: !6648)
!6658 = !DILocation(line: 2570, column: 3, scope: !6648)
!6659 = !DILocation(line: 2570, column: 8, scope: !6648)
!6660 = !DILocation(line: 2570, column: 16, scope: !6648)
!6661 = !DILocation(line: 2572, column: 16, scope: !6648)
!6662 = !DILocation(line: 2572, column: 3, scope: !6648)
!6663 = !DILocation(line: 2573, column: 2, scope: !6648)
!6664 = !DILocation(line: 2590, column: 3, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 2573, column: 9)
!6666 = !DILocation(line: 2593, column: 25, scope: !6434)
!6667 = !DILocation(line: 2593, column: 30, scope: !6434)
!6668 = !DILocation(line: 2593, column: 36, scope: !6434)
!6669 = !DILocation(line: 2593, column: 47, scope: !6434)
!6670 = !DILocation(line: 409, column: 2, scope: !5837, inlinedAt: !6451)
!6671 = !DILocation(line: 409, column: 2, scope: !5842, inlinedAt: !6451)
!6672 = !DILocation(line: 409, column: 2, scope: !5843, inlinedAt: !6451)
!6673 = !DILocation(line: 409, column: 2, scope: !5850, inlinedAt: !6451)
!6674 = !DILocation(line: 409, column: 2, scope: !5853, inlinedAt: !6451)
!6675 = !DILocation(line: 2595, column: 7, scope: !6441)
!6676 = !DILocation(line: 2595, column: 6, scope: !6434)
!6677 = !DILocation(line: 2596, column: 3, scope: !6440)
!6678 = !DILocation(line: 2596, column: 3, scope: !6449)
!6679 = !DILocalVariable(name: "__dummy", scope: !6680, file: !3, line: 2596, type: !201)
!6680 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 2596, column: 3)
!6681 = !DILocation(line: 2596, column: 3, scope: !6680)
!6682 = !DILocalVariable(name: "__dummy2", scope: !6680, file: !3, line: 2596, type: !201)
!6683 = !DILocation(line: 2596, column: 3, scope: !6448)
!6684 = !DILocation(line: 2596, column: 3, scope: !6447)
!6685 = !DILocation(line: 2596, column: 3, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2596, column: 3)
!6687 = !DILocalVariable(name: "__dummy", scope: !6688, file: !3, line: 2596, type: !201)
!6688 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 2596, column: 3)
!6689 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 2596, column: 3)
!6690 = !DILocation(line: 2596, column: 3, scope: !6688)
!6691 = !DILocalVariable(name: "__dummy2", scope: !6688, file: !3, line: 2596, type: !201)
!6692 = !DILocation(line: 2596, column: 3, scope: !6689)
!6693 = !DILocation(line: 2596, column: 3, scope: !6446)
!6694 = !{i32 -2141271020}
!6695 = !DILocation(line: 2596, column: 3, scope: !6445)
!6696 = !DILocation(line: 329, column: 10, scope: !5733, inlinedAt: !6444)
!6697 = !DILocation(line: 329, column: 16, scope: !5733, inlinedAt: !6444)
!6698 = !DILocation(line: 2597, column: 3, scope: !6440)
!6699 = !DILocation(line: 2597, column: 8, scope: !6440)
!6700 = !DILocation(line: 2597, column: 16, scope: !6440)
!6701 = !DILocation(line: 2598, column: 26, scope: !6440)
!6702 = !DILocation(line: 2598, column: 31, scope: !6440)
!6703 = !DILocation(line: 2598, column: 37, scope: !6440)
!6704 = !DILocation(line: 2598, column: 48, scope: !6440)
!6705 = !DILocation(line: 409, column: 2, scope: !5837, inlinedAt: !6439)
!6706 = !DILocation(line: 409, column: 2, scope: !5842, inlinedAt: !6439)
!6707 = !DILocation(line: 409, column: 2, scope: !5843, inlinedAt: !6439)
!6708 = !DILocation(line: 409, column: 2, scope: !5850, inlinedAt: !6439)
!6709 = !DILocation(line: 409, column: 2, scope: !5853, inlinedAt: !6439)
!6710 = !DILocation(line: 2600, column: 3, scope: !6440)
!6711 = !DILocation(line: 2603, column: 2, scope: !6434)
!6712 = !DILabel(scope: !6434, name: "out_success", file: !3, line: 2605)
!6713 = !DILocation(line: 2605, column: 1, scope: !6434)
!6714 = !DILocation(line: 2606, column: 25, scope: !6434)
!6715 = !DILocation(line: 2606, column: 30, scope: !6434)
!6716 = !DILocation(line: 2606, column: 36, scope: !6434)
!6717 = !DILocation(line: 2606, column: 47, scope: !6434)
!6718 = !DILocation(line: 409, column: 2, scope: !5837, inlinedAt: !6436)
!6719 = !DILocation(line: 409, column: 2, scope: !5842, inlinedAt: !6436)
!6720 = !DILocation(line: 409, column: 2, scope: !5843, inlinedAt: !6436)
!6721 = !DILocation(line: 409, column: 2, scope: !5850, inlinedAt: !6436)
!6722 = !DILocation(line: 409, column: 2, scope: !5853, inlinedAt: !6436)
!6723 = !DILocation(line: 2607, column: 2, scope: !6434)
!6724 = !DILabel(scope: !6434, name: "out_failure", file: !3, line: 2609)
!6725 = !DILocation(line: 2609, column: 1, scope: !6434)
!6726 = !DILocation(line: 2614, column: 25, scope: !6434)
!6727 = !DILocation(line: 2614, column: 30, scope: !6434)
!6728 = !DILocation(line: 2614, column: 36, scope: !6434)
!6729 = !DILocation(line: 2614, column: 47, scope: !6434)
!6730 = !DILocation(line: 409, column: 2, scope: !5837, inlinedAt: !6464)
!6731 = !DILocation(line: 409, column: 2, scope: !5842, inlinedAt: !6464)
!6732 = !DILocation(line: 409, column: 2, scope: !5843, inlinedAt: !6464)
!6733 = !DILocation(line: 409, column: 2, scope: !5850, inlinedAt: !6464)
!6734 = !DILocation(line: 409, column: 2, scope: !5853, inlinedAt: !6464)
!6735 = !DILocation(line: 2615, column: 2, scope: !6434)
!6736 = !DILocation(line: 2616, column: 1, scope: !6434)
!6737 = distinct !DISubprogram(name: "esp_eh_bus_reset_handler", scope: !3, file: !3, line: 2618, type: !4853, scopeLine: 2619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6738 = !DILocation(line: 327, column: 67, scope: !5733, inlinedAt: !6739)
!6739 = distinct !DILocation(line: 2643, column: 3, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 2643, column: 3)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 2643, column: 3)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 2643, column: 3)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 2643, column: 3)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 2643, column: 3)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 2642, column: 55)
!6746 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2642, column: 6)
!6747 = !DILocation(line: 407, column: 64, scope: !5724, inlinedAt: !6748)
!6748 = distinct !DILocation(line: 2638, column: 2, scope: !6737)
!6749 = !DILocation(line: 407, column: 84, scope: !5724, inlinedAt: !6748)
!6750 = !DILocation(line: 407, column: 64, scope: !5724, inlinedAt: !6751)
!6751 = distinct !DILocation(line: 2645, column: 3, scope: !6745)
!6752 = !DILocation(line: 407, column: 84, scope: !5724, inlinedAt: !6751)
!6753 = !DILocation(line: 327, column: 67, scope: !5733, inlinedAt: !6754)
!6754 = distinct !DILocation(line: 2626, column: 2, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 2626, column: 2)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 2626, column: 2)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 2626, column: 2)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 2626, column: 2)
!6759 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2626, column: 2)
!6760 = !DILocalVariable(name: "cmd", arg: 1, scope: !6737, file: !3, line: 2618, type: !214)
!6761 = !DILocation(line: 2618, column: 55, scope: !6737)
!6762 = !DILocalVariable(name: "esp", scope: !6737, file: !3, line: 2620, type: !5289)
!6763 = !DILocation(line: 2620, column: 14, scope: !6737)
!6764 = !DILocation(line: 2620, column: 31, scope: !6737)
!6765 = !DILocation(line: 2620, column: 36, scope: !6737)
!6766 = !DILocation(line: 2620, column: 44, scope: !6737)
!6767 = !DILocation(line: 2620, column: 20, scope: !6737)
!6768 = !DILocalVariable(name: "eh_reset", scope: !6737, file: !3, line: 2621, type: !2182)
!6769 = !DILocation(line: 2621, column: 20, scope: !6737)
!6770 = !DILocalVariable(name: "flags", scope: !6737, file: !3, line: 2622, type: !201)
!6771 = !DILocation(line: 2622, column: 16, scope: !6737)
!6772 = !DILocation(line: 2624, column: 2, scope: !6737)
!6773 = !DILocation(line: 2626, column: 2, scope: !6737)
!6774 = !DILocation(line: 2626, column: 2, scope: !6759)
!6775 = !DILocalVariable(name: "__dummy", scope: !6776, file: !3, line: 2626, type: !201)
!6776 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 2626, column: 2)
!6777 = !DILocation(line: 2626, column: 2, scope: !6776)
!6778 = !DILocalVariable(name: "__dummy2", scope: !6776, file: !3, line: 2626, type: !201)
!6779 = !DILocation(line: 2626, column: 2, scope: !6758)
!6780 = !DILocation(line: 2626, column: 2, scope: !6757)
!6781 = !DILocation(line: 2626, column: 2, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 2626, column: 2)
!6783 = !DILocalVariable(name: "__dummy", scope: !6784, file: !3, line: 2626, type: !201)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 2626, column: 2)
!6785 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 2626, column: 2)
!6786 = !DILocation(line: 2626, column: 2, scope: !6784)
!6787 = !DILocalVariable(name: "__dummy2", scope: !6784, file: !3, line: 2626, type: !201)
!6788 = !DILocation(line: 2626, column: 2, scope: !6785)
!6789 = !DILocation(line: 2626, column: 2, scope: !6756)
!6790 = !{i32 -2141269867}
!6791 = !DILocation(line: 2626, column: 2, scope: !6755)
!6792 = !DILocation(line: 329, column: 10, scope: !5733, inlinedAt: !6754)
!6793 = !DILocation(line: 329, column: 16, scope: !5733, inlinedAt: !6754)
!6794 = !DILocation(line: 2628, column: 2, scope: !6737)
!6795 = !DILocation(line: 2628, column: 7, scope: !6737)
!6796 = !DILocation(line: 2628, column: 16, scope: !6737)
!6797 = !DILocation(line: 2635, column: 2, scope: !6737)
!6798 = !DILocation(line: 2635, column: 7, scope: !6737)
!6799 = !DILocation(line: 2635, column: 13, scope: !6737)
!6800 = !DILocation(line: 2636, column: 15, scope: !6737)
!6801 = !DILocation(line: 2636, column: 2, scope: !6737)
!6802 = !DILocation(line: 2638, column: 25, scope: !6737)
!6803 = !DILocation(line: 2638, column: 30, scope: !6737)
!6804 = !DILocation(line: 2638, column: 36, scope: !6737)
!6805 = !DILocation(line: 2638, column: 47, scope: !6737)
!6806 = !DILocation(line: 409, column: 2, scope: !5837, inlinedAt: !6748)
!6807 = !DILocation(line: 409, column: 2, scope: !5842, inlinedAt: !6748)
!6808 = !DILocation(line: 409, column: 2, scope: !5843, inlinedAt: !6748)
!6809 = !DILocation(line: 409, column: 2, scope: !5850, inlinedAt: !6748)
!6810 = !DILocation(line: 409, column: 2, scope: !5853, inlinedAt: !6748)
!6811 = !DILocation(line: 2640, column: 9, scope: !6737)
!6812 = !DILocation(line: 2640, column: 2, scope: !6737)
!6813 = !DILocation(line: 2642, column: 7, scope: !6746)
!6814 = !DILocation(line: 2642, column: 6, scope: !6737)
!6815 = !DILocation(line: 2643, column: 3, scope: !6745)
!6816 = !DILocation(line: 2643, column: 3, scope: !6744)
!6817 = !DILocalVariable(name: "__dummy", scope: !6818, file: !3, line: 2643, type: !201)
!6818 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 2643, column: 3)
!6819 = !DILocation(line: 2643, column: 3, scope: !6818)
!6820 = !DILocalVariable(name: "__dummy2", scope: !6818, file: !3, line: 2643, type: !201)
!6821 = !DILocation(line: 2643, column: 3, scope: !6743)
!6822 = !DILocation(line: 2643, column: 3, scope: !6742)
!6823 = !DILocation(line: 2643, column: 3, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 2643, column: 3)
!6825 = !DILocalVariable(name: "__dummy", scope: !6826, file: !3, line: 2643, type: !201)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 2643, column: 3)
!6827 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 2643, column: 3)
!6828 = !DILocation(line: 2643, column: 3, scope: !6826)
!6829 = !DILocalVariable(name: "__dummy2", scope: !6826, file: !3, line: 2643, type: !201)
!6830 = !DILocation(line: 2643, column: 3, scope: !6827)
!6831 = !DILocation(line: 2643, column: 3, scope: !6741)
!6832 = !{i32 -2141268755}
!6833 = !DILocation(line: 2643, column: 3, scope: !6740)
!6834 = !DILocation(line: 329, column: 10, scope: !5733, inlinedAt: !6739)
!6835 = !DILocation(line: 329, column: 16, scope: !5733, inlinedAt: !6739)
!6836 = !DILocation(line: 2644, column: 3, scope: !6745)
!6837 = !DILocation(line: 2644, column: 8, scope: !6745)
!6838 = !DILocation(line: 2644, column: 17, scope: !6745)
!6839 = !DILocation(line: 2645, column: 26, scope: !6745)
!6840 = !DILocation(line: 2645, column: 31, scope: !6745)
!6841 = !DILocation(line: 2645, column: 37, scope: !6745)
!6842 = !DILocation(line: 2645, column: 48, scope: !6745)
!6843 = !DILocation(line: 409, column: 2, scope: !5837, inlinedAt: !6751)
!6844 = !DILocation(line: 409, column: 2, scope: !5842, inlinedAt: !6751)
!6845 = !DILocation(line: 409, column: 2, scope: !5843, inlinedAt: !6751)
!6846 = !DILocation(line: 409, column: 2, scope: !5850, inlinedAt: !6751)
!6847 = !DILocation(line: 409, column: 2, scope: !5853, inlinedAt: !6751)
!6848 = !DILocation(line: 2647, column: 3, scope: !6745)
!6849 = !DILocation(line: 2650, column: 2, scope: !6737)
!6850 = !DILocation(line: 2651, column: 1, scope: !6737)
!6851 = distinct !DISubprogram(name: "esp_eh_host_reset_handler", scope: !3, file: !3, line: 2654, type: !4853, scopeLine: 2655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6852 = !DILocation(line: 407, column: 64, scope: !5724, inlinedAt: !6853)
!6853 = distinct !DILocation(line: 2662, column: 2, scope: !6851)
!6854 = !DILocation(line: 407, column: 84, scope: !5724, inlinedAt: !6853)
!6855 = !DILocation(line: 327, column: 67, scope: !5733, inlinedAt: !6856)
!6856 = distinct !DILocation(line: 2659, column: 2, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 2659, column: 2)
!6858 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 2659, column: 2)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 2659, column: 2)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 2659, column: 2)
!6861 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2659, column: 2)
!6862 = !DILocalVariable(name: "cmd", arg: 1, scope: !6851, file: !3, line: 2654, type: !214)
!6863 = !DILocation(line: 2654, column: 56, scope: !6851)
!6864 = !DILocalVariable(name: "esp", scope: !6851, file: !3, line: 2656, type: !5289)
!6865 = !DILocation(line: 2656, column: 14, scope: !6851)
!6866 = !DILocation(line: 2656, column: 31, scope: !6851)
!6867 = !DILocation(line: 2656, column: 36, scope: !6851)
!6868 = !DILocation(line: 2656, column: 44, scope: !6851)
!6869 = !DILocation(line: 2656, column: 20, scope: !6851)
!6870 = !DILocalVariable(name: "flags", scope: !6851, file: !3, line: 2657, type: !201)
!6871 = !DILocation(line: 2657, column: 16, scope: !6851)
!6872 = !DILocation(line: 2659, column: 2, scope: !6851)
!6873 = !DILocation(line: 2659, column: 2, scope: !6861)
!6874 = !DILocalVariable(name: "__dummy", scope: !6875, file: !3, line: 2659, type: !201)
!6875 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 2659, column: 2)
!6876 = !DILocation(line: 2659, column: 2, scope: !6875)
!6877 = !DILocalVariable(name: "__dummy2", scope: !6875, file: !3, line: 2659, type: !201)
!6878 = !DILocation(line: 2659, column: 2, scope: !6860)
!6879 = !DILocation(line: 2659, column: 2, scope: !6859)
!6880 = !DILocation(line: 2659, column: 2, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 2659, column: 2)
!6882 = !DILocalVariable(name: "__dummy", scope: !6883, file: !3, line: 2659, type: !201)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 2659, column: 2)
!6884 = distinct !DILexicalBlock(scope: !6881, file: !3, line: 2659, column: 2)
!6885 = !DILocation(line: 2659, column: 2, scope: !6883)
!6886 = !DILocalVariable(name: "__dummy2", scope: !6883, file: !3, line: 2659, type: !201)
!6887 = !DILocation(line: 2659, column: 2, scope: !6884)
!6888 = !DILocation(line: 2659, column: 2, scope: !6858)
!6889 = !{i32 -2141267647}
!6890 = !DILocation(line: 2659, column: 2, scope: !6857)
!6891 = !DILocation(line: 329, column: 10, scope: !5733, inlinedAt: !6856)
!6892 = !DILocation(line: 329, column: 16, scope: !5733, inlinedAt: !6856)
!6893 = !DILocation(line: 2660, column: 19, scope: !6851)
!6894 = !DILocation(line: 2660, column: 2, scope: !6851)
!6895 = !DILocation(line: 2661, column: 20, scope: !6851)
!6896 = !DILocation(line: 2661, column: 2, scope: !6851)
!6897 = !DILocation(line: 2662, column: 25, scope: !6851)
!6898 = !DILocation(line: 2662, column: 30, scope: !6851)
!6899 = !DILocation(line: 2662, column: 36, scope: !6851)
!6900 = !DILocation(line: 2662, column: 47, scope: !6851)
!6901 = !DILocation(line: 409, column: 2, scope: !5837, inlinedAt: !6853)
!6902 = !DILocation(line: 409, column: 2, scope: !5842, inlinedAt: !6853)
!6903 = !DILocation(line: 409, column: 2, scope: !5843, inlinedAt: !6853)
!6904 = !DILocation(line: 409, column: 2, scope: !5850, inlinedAt: !6853)
!6905 = !DILocation(line: 409, column: 2, scope: !5853, inlinedAt: !6853)
!6906 = !DILocation(line: 2664, column: 9, scope: !6851)
!6907 = !DILocation(line: 2664, column: 2, scope: !6851)
!6908 = !DILocation(line: 2666, column: 2, scope: !6851)
!6909 = distinct !DISubprogram(name: "esp_slave_alloc", scope: !3, file: !3, line: 2455, type: !4861, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6910 = !DILocalVariable(name: "dev", arg: 1, scope: !6909, file: !3, line: 2455, type: !238)
!6911 = !DILocation(line: 2455, column: 48, scope: !6909)
!6912 = !DILocalVariable(name: "esp", scope: !6909, file: !3, line: 2457, type: !5289)
!6913 = !DILocation(line: 2457, column: 14, scope: !6909)
!6914 = !DILocation(line: 2457, column: 31, scope: !6909)
!6915 = !DILocation(line: 2457, column: 36, scope: !6909)
!6916 = !DILocation(line: 2457, column: 20, scope: !6909)
!6917 = !DILocalVariable(name: "tp", scope: !6909, file: !3, line: 2458, type: !6918)
!6918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5345, size: 64)
!6919 = !DILocation(line: 2458, column: 26, scope: !6909)
!6920 = !DILocation(line: 2458, column: 32, scope: !6909)
!6921 = !DILocation(line: 2458, column: 37, scope: !6909)
!6922 = !DILocation(line: 2458, column: 44, scope: !6909)
!6923 = !DILocation(line: 2458, column: 49, scope: !6909)
!6924 = !DILocalVariable(name: "lp", scope: !6909, file: !3, line: 2459, type: !6925)
!6925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6926, size: 64)
!6926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "esp_lun_data", file: !164, line: 314, size: 16512, elements: !6927)
!6927 = !{!6928, !6929, !6930, !6931}
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "non_tagged_cmd", scope: !6926, file: !164, line: 315, baseType: !203, size: 64)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "num_tagged", scope: !6926, file: !164, line: 316, baseType: !232, size: 32, offset: 64)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "hold", scope: !6926, file: !164, line: 317, baseType: !232, size: 32, offset: 96)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_cmds", scope: !6926, file: !164, line: 318, baseType: !6932, size: 16384, offset: 128)
!6932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 16384, elements: !6933)
!6933 = !{!6934}
!6934 = !DISubrange(count: 256)
!6935 = !DILocation(line: 2459, column: 23, scope: !6909)
!6936 = !DILocation(line: 2461, column: 7, scope: !6909)
!6937 = !DILocation(line: 2461, column: 5, scope: !6909)
!6938 = !DILocation(line: 2462, column: 7, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2462, column: 6)
!6940 = !DILocation(line: 2462, column: 6, scope: !6909)
!6941 = !DILocation(line: 2463, column: 3, scope: !6939)
!6942 = !DILocation(line: 2464, column: 18, scope: !6909)
!6943 = !DILocation(line: 2464, column: 2, scope: !6909)
!6944 = !DILocation(line: 2464, column: 7, scope: !6909)
!6945 = !DILocation(line: 2464, column: 16, scope: !6909)
!6946 = !DILocation(line: 2466, column: 32, scope: !6909)
!6947 = !DILocation(line: 2466, column: 37, scope: !6909)
!6948 = !DILocation(line: 2466, column: 2, scope: !6909)
!6949 = !DILocation(line: 2466, column: 30, scope: !6909)
!6950 = !DILocation(line: 2467, column: 2, scope: !6909)
!6951 = !DILocation(line: 2467, column: 30, scope: !6909)
!6952 = !DILocation(line: 2469, column: 6, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2469, column: 6)
!6954 = !DILocation(line: 2469, column: 11, scope: !6953)
!6955 = !DILocation(line: 2469, column: 17, scope: !6953)
!6956 = !DILocation(line: 2469, column: 6, scope: !6909)
!6957 = !DILocation(line: 2470, column: 3, scope: !6953)
!6958 = !DILocation(line: 2470, column: 30, scope: !6953)
!6959 = !DILocation(line: 2472, column: 3, scope: !6953)
!6960 = !DILocation(line: 2472, column: 30, scope: !6953)
!6961 = !DILocation(line: 2474, column: 2, scope: !6909)
!6962 = !DILocation(line: 2475, column: 1, scope: !6909)
!6963 = distinct !DISubprogram(name: "esp_slave_configure", scope: !3, file: !3, line: 2477, type: !4861, scopeLine: 2478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6964 = !DILocalVariable(name: "dev", arg: 1, scope: !6963, file: !3, line: 2477, type: !238)
!6965 = !DILocation(line: 2477, column: 52, scope: !6963)
!6966 = !DILocalVariable(name: "esp", scope: !6963, file: !3, line: 2479, type: !5289)
!6967 = !DILocation(line: 2479, column: 14, scope: !6963)
!6968 = !DILocation(line: 2479, column: 31, scope: !6963)
!6969 = !DILocation(line: 2479, column: 36, scope: !6963)
!6970 = !DILocation(line: 2479, column: 20, scope: !6963)
!6971 = !DILocalVariable(name: "tp", scope: !6963, file: !3, line: 2480, type: !6918)
!6972 = !DILocation(line: 2480, column: 26, scope: !6963)
!6973 = !DILocation(line: 2480, column: 32, scope: !6963)
!6974 = !DILocation(line: 2480, column: 37, scope: !6963)
!6975 = !DILocation(line: 2480, column: 44, scope: !6963)
!6976 = !DILocation(line: 2480, column: 49, scope: !6963)
!6977 = !DILocation(line: 2482, column: 6, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 2482, column: 6)
!6979 = !DILocation(line: 2482, column: 11, scope: !6978)
!6980 = !DILocation(line: 2482, column: 6, scope: !6963)
!6981 = !DILocation(line: 2483, column: 27, scope: !6978)
!6982 = !DILocation(line: 2483, column: 32, scope: !6978)
!6983 = !DILocation(line: 2483, column: 37, scope: !6978)
!6984 = !DILocation(line: 2483, column: 3, scope: !6978)
!6985 = !DILocation(line: 2485, column: 2, scope: !6963)
!6986 = !DILocation(line: 2485, column: 6, scope: !6963)
!6987 = !DILocation(line: 2485, column: 12, scope: !6963)
!6988 = !DILocation(line: 2487, column: 7, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 2487, column: 6)
!6990 = !DILocation(line: 2487, column: 6, scope: !6963)
!6991 = !DILocation(line: 2488, column: 17, scope: !6989)
!6992 = !DILocation(line: 2488, column: 3, scope: !6989)
!6993 = !DILocation(line: 2490, column: 2, scope: !6963)
!6994 = distinct !DISubprogram(name: "esp_slave_destroy", scope: !3, file: !3, line: 2493, type: !4866, scopeLine: 2494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!6995 = !DILocalVariable(name: "dev", arg: 1, scope: !6994, file: !3, line: 2493, type: !238)
!6996 = !DILocation(line: 2493, column: 51, scope: !6994)
!6997 = !DILocalVariable(name: "lp", scope: !6994, file: !3, line: 2495, type: !6925)
!6998 = !DILocation(line: 2495, column: 23, scope: !6994)
!6999 = !DILocation(line: 2495, column: 28, scope: !6994)
!7000 = !DILocation(line: 2495, column: 33, scope: !6994)
!7001 = !DILocation(line: 2497, column: 8, scope: !6994)
!7002 = !DILocation(line: 2497, column: 2, scope: !6994)
!7003 = !DILocation(line: 2498, column: 2, scope: !6994)
!7004 = !DILocation(line: 2498, column: 7, scope: !6994)
!7005 = !DILocation(line: 2498, column: 16, scope: !6994)
!7006 = !DILocation(line: 2499, column: 1, scope: !6994)
!7007 = distinct !DISubprogram(name: "esp_target_alloc", scope: !3, file: !3, line: 2437, type: !4870, scopeLine: 2438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7008 = !DILocalVariable(name: "starget", arg: 1, scope: !7007, file: !3, line: 2437, type: !4872)
!7009 = !DILocation(line: 2437, column: 49, scope: !7007)
!7010 = !DILocalVariable(name: "esp", scope: !7007, file: !3, line: 2439, type: !5289)
!7011 = !DILocation(line: 2439, column: 14, scope: !7007)
!7012 = !DILocation(line: 2439, column: 45, scope: !7007)
!7013 = !DILocation(line: 2439, column: 54, scope: !7007)
!7014 = !DILocation(line: 2439, column: 31, scope: !7007)
!7015 = !DILocation(line: 2439, column: 20, scope: !7007)
!7016 = !DILocalVariable(name: "tp", scope: !7007, file: !3, line: 2440, type: !6918)
!7017 = !DILocation(line: 2440, column: 26, scope: !7007)
!7018 = !DILocation(line: 2440, column: 32, scope: !7007)
!7019 = !DILocation(line: 2440, column: 37, scope: !7007)
!7020 = !DILocation(line: 2440, column: 44, scope: !7007)
!7021 = !DILocation(line: 2440, column: 53, scope: !7007)
!7022 = !DILocation(line: 2442, column: 16, scope: !7007)
!7023 = !DILocation(line: 2442, column: 2, scope: !7007)
!7024 = !DILocation(line: 2442, column: 6, scope: !7007)
!7025 = !DILocation(line: 2442, column: 14, scope: !7007)
!7026 = !DILocation(line: 2444, column: 2, scope: !7007)
!7027 = distinct !DISubprogram(name: "esp_target_destroy", scope: !3, file: !3, line: 2447, type: !4897, scopeLine: 2448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7028 = !DILocalVariable(name: "starget", arg: 1, scope: !7027, file: !3, line: 2447, type: !4872)
!7029 = !DILocation(line: 2447, column: 52, scope: !7027)
!7030 = !DILocalVariable(name: "esp", scope: !7027, file: !3, line: 2449, type: !5289)
!7031 = !DILocation(line: 2449, column: 14, scope: !7027)
!7032 = !DILocation(line: 2449, column: 45, scope: !7027)
!7033 = !DILocation(line: 2449, column: 54, scope: !7027)
!7034 = !DILocation(line: 2449, column: 31, scope: !7027)
!7035 = !DILocation(line: 2449, column: 20, scope: !7027)
!7036 = !DILocalVariable(name: "tp", scope: !7027, file: !3, line: 2450, type: !6918)
!7037 = !DILocation(line: 2450, column: 26, scope: !7027)
!7038 = !DILocation(line: 2450, column: 32, scope: !7027)
!7039 = !DILocation(line: 2450, column: 37, scope: !7027)
!7040 = !DILocation(line: 2450, column: 44, scope: !7027)
!7041 = !DILocation(line: 2450, column: 53, scope: !7027)
!7042 = !DILocation(line: 2452, column: 2, scope: !7027)
!7043 = !DILocation(line: 2452, column: 6, scope: !7027)
!7044 = !DILocation(line: 2452, column: 14, scope: !7027)
!7045 = !DILocation(line: 2453, column: 1, scope: !7027)
!7046 = distinct !DISubprogram(name: "esp_exit", scope: !3, file: !3, line: 2763, type: !4438, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7047 = !DILocation(line: 2765, column: 24, scope: !7046)
!7048 = !DILocation(line: 2765, column: 2, scope: !7046)
!7049 = !DILocation(line: 2766, column: 1, scope: !7046)
!7050 = distinct !DISubprogram(name: "esp_init", scope: !3, file: !3, line: 2751, type: !7051, scopeLine: 2752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7051 = !DISubroutineType(types: !7052)
!7052 = !{!232}
!7053 = !DILocation(line: 2753, column: 2, scope: !7050)
!7054 = !DILocation(line: 2753, column: 2, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7050, file: !3, line: 2753, column: 2)
!7056 = !DILocation(line: 2756, column: 27, scope: !7050)
!7057 = !DILocation(line: 2756, column: 25, scope: !7050)
!7058 = !DILocation(line: 2757, column: 7, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7050, file: !3, line: 2757, column: 6)
!7060 = !DILocation(line: 2757, column: 6, scope: !7050)
!7061 = !DILocation(line: 2758, column: 3, scope: !7059)
!7062 = !DILocation(line: 2760, column: 2, scope: !7050)
!7063 = !DILocation(line: 2761, column: 1, scope: !7050)
!7064 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !5857, file: !5857, line: 646, type: !5858, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7065 = !DILocalVariable(name: "__ret", scope: !7066, file: !5857, line: 648, type: !201)
!7066 = distinct !DILexicalBlock(scope: !7064, file: !5857, line: 648, column: 9)
!7067 = !DILocation(line: 648, column: 9, scope: !7066)
!7068 = !DILocalVariable(name: "__edi", scope: !7066, file: !5857, line: 648, type: !201)
!7069 = !DILocalVariable(name: "__esi", scope: !7066, file: !5857, line: 648, type: !201)
!7070 = !DILocalVariable(name: "__edx", scope: !7066, file: !5857, line: 648, type: !201)
!7071 = !DILocalVariable(name: "__ecx", scope: !7066, file: !5857, line: 648, type: !201)
!7072 = !DILocalVariable(name: "__eax", scope: !7066, file: !5857, line: 648, type: !201)
!7073 = !DILocation(line: 648, column: 9, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !5857, line: 648, column: 9)
!7075 = distinct !DILexicalBlock(scope: !7066, file: !5857, line: 648, column: 9)
!7076 = !{i32 -2145636748, i32 -2145634433, i32 -2145634199, i32 -2145634148, i32 -2145634120, i32 -2145634095, i32 -2145634411, i32 -2145634398, i32 -2145633960, i32 -2145633841, i32 -2145634306, i32 -2145634279, i32 -2145634251, i32 -2145634221}
!7077 = !DILocalVariable(name: "__mask", scope: !7078, file: !5857, line: 648, type: !201)
!7078 = distinct !DILexicalBlock(scope: !7074, file: !5857, line: 648, column: 9)
!7079 = !DILocation(line: 648, column: 9, scope: !7078)
!7080 = !DILocation(line: 648, column: 9, scope: !7075)
!7081 = !DILocation(line: 648, column: 2, scope: !7064)
!7082 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !5857, file: !5857, line: 656, type: !4438, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7083 = !DILocalVariable(name: "__edi", scope: !7084, file: !5857, line: 658, type: !201)
!7084 = distinct !DILexicalBlock(scope: !7082, file: !5857, line: 658, column: 2)
!7085 = !DILocation(line: 658, column: 2, scope: !7084)
!7086 = !DILocalVariable(name: "__esi", scope: !7084, file: !5857, line: 658, type: !201)
!7087 = !DILocalVariable(name: "__edx", scope: !7084, file: !5857, line: 658, type: !201)
!7088 = !DILocalVariable(name: "__ecx", scope: !7084, file: !5857, line: 658, type: !201)
!7089 = !DILocalVariable(name: "__eax", scope: !7084, file: !5857, line: 658, type: !201)
!7090 = !{i32 -2145629654, i32 -2145628922, i32 -2145628688, i32 -2145628637, i32 -2145628609, i32 -2145628584, i32 -2145628900, i32 -2145628887, i32 -2145628449, i32 -2145628330, i32 -2145628795, i32 -2145628768, i32 -2145628740, i32 -2145628710}
!7091 = !DILocation(line: 659, column: 1, scope: !7082)
!7092 = distinct !DISubprogram(name: "esp_check_gross_error", scope: !3, file: !3, line: 988, type: !5287, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7093 = !DILocalVariable(name: "esp", arg: 1, scope: !7092, file: !3, line: 988, type: !5289)
!7094 = !DILocation(line: 988, column: 46, scope: !7092)
!7095 = !DILocation(line: 990, column: 6, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 990, column: 6)
!7097 = !DILocation(line: 990, column: 11, scope: !7096)
!7098 = !DILocation(line: 990, column: 16, scope: !7096)
!7099 = !DILocation(line: 990, column: 6, scope: !7092)
!7100 = !DILocation(line: 997, column: 3, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 990, column: 33)
!7102 = !DILocation(line: 1000, column: 3, scope: !7101)
!7103 = !DILocation(line: 1002, column: 2, scope: !7092)
!7104 = !DILocation(line: 1003, column: 1, scope: !7092)
!7105 = distinct !DISubprogram(name: "esp_check_spur_intr", scope: !3, file: !3, line: 1005, type: !5287, scopeLine: 1006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7106 = !DILocalVariable(name: "esp", arg: 1, scope: !7105, file: !3, line: 1005, type: !5289)
!7107 = !DILocation(line: 1005, column: 44, scope: !7105)
!7108 = !DILocation(line: 1007, column: 10, scope: !7105)
!7109 = !DILocation(line: 1007, column: 15, scope: !7105)
!7110 = !DILocation(line: 1007, column: 2, scope: !7105)
!7111 = !DILocation(line: 1013, column: 3, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 1007, column: 20)
!7113 = !DILocation(line: 1013, column: 8, scope: !7112)
!7114 = !DILocation(line: 1013, column: 13, scope: !7112)
!7115 = !DILocation(line: 1014, column: 3, scope: !7112)
!7116 = !DILocation(line: 1017, column: 9, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 1017, column: 7)
!7118 = !DILocation(line: 1017, column: 14, scope: !7117)
!7119 = !DILocation(line: 1017, column: 19, scope: !7117)
!7120 = !DILocation(line: 1017, column: 7, scope: !7112)
!7121 = !DILocation(line: 1018, column: 8, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 1018, column: 8)
!7123 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1017, column: 37)
!7124 = !DILocation(line: 1018, column: 13, scope: !7122)
!7125 = !DILocation(line: 1018, column: 18, scope: !7122)
!7126 = !DILocation(line: 1018, column: 8, scope: !7123)
!7127 = !DILocation(line: 1019, column: 5, scope: !7122)
!7128 = !DILocation(line: 1024, column: 9, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 1024, column: 8)
!7130 = !DILocation(line: 1024, column: 14, scope: !7129)
!7131 = !DILocation(line: 1024, column: 19, scope: !7129)
!7132 = !DILocation(line: 1024, column: 29, scope: !7129)
!7133 = !DILocation(line: 1024, column: 8, scope: !7123)
!7134 = !DILocation(line: 1025, column: 5, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 1024, column: 35)
!7136 = !DILocation(line: 1028, column: 5, scope: !7135)
!7137 = !DILocation(line: 1031, column: 4, scope: !7123)
!7138 = !DILocation(line: 1034, column: 4, scope: !7123)
!7139 = !DILocation(line: 1036, column: 3, scope: !7112)
!7140 = !DILocation(line: 1039, column: 2, scope: !7105)
!7141 = !DILocation(line: 1040, column: 1, scope: !7105)
!7142 = distinct !DISubprogram(name: "esp_reset_cleanup", scope: !3, file: !3, line: 2063, type: !5315, scopeLine: 2064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7143 = !DILocalVariable(name: "esp", arg: 1, scope: !7142, file: !3, line: 2063, type: !5289)
!7144 = !DILocation(line: 2063, column: 43, scope: !7142)
!7145 = !DILocalVariable(name: "ent", scope: !7142, file: !3, line: 2065, type: !203)
!7146 = !DILocation(line: 2065, column: 24, scope: !7142)
!7147 = !DILocalVariable(name: "tmp", scope: !7142, file: !3, line: 2065, type: !203)
!7148 = !DILocation(line: 2065, column: 30, scope: !7142)
!7149 = !DILocalVariable(name: "i", scope: !7142, file: !3, line: 2066, type: !232)
!7150 = !DILocation(line: 2066, column: 6, scope: !7142)
!7151 = !DILocalVariable(name: "__mptr", scope: !7152, file: !3, line: 2068, type: !202)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 2068, column: 2)
!7153 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 2068, column: 2)
!7154 = !DILocation(line: 2068, column: 2, scope: !7152)
!7155 = !DILocation(line: 2068, column: 2, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 2068, column: 2)
!7157 = !DILocation(line: 2068, column: 2, scope: !7153)
!7158 = !DILocalVariable(name: "__mptr", scope: !7159, file: !3, line: 2068, type: !202)
!7159 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 2068, column: 2)
!7160 = !DILocation(line: 2068, column: 2, scope: !7159)
!7161 = !DILocation(line: 2068, column: 2, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 2068, column: 2)
!7163 = !DILocation(line: 2068, column: 2, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 2068, column: 2)
!7165 = !DILocalVariable(name: "cmd", scope: !7166, file: !3, line: 2069, type: !214)
!7166 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 2068, column: 62)
!7167 = !DILocation(line: 2069, column: 21, scope: !7166)
!7168 = !DILocation(line: 2069, column: 27, scope: !7166)
!7169 = !DILocation(line: 2069, column: 32, scope: !7166)
!7170 = !DILocation(line: 2071, column: 13, scope: !7166)
!7171 = !DILocation(line: 2071, column: 18, scope: !7166)
!7172 = !DILocation(line: 2071, column: 3, scope: !7166)
!7173 = !DILocation(line: 2072, column: 3, scope: !7166)
!7174 = !DILocation(line: 2072, column: 8, scope: !7166)
!7175 = !DILocation(line: 2072, column: 15, scope: !7166)
!7176 = !DILocation(line: 2073, column: 3, scope: !7166)
!7177 = !DILocation(line: 2073, column: 8, scope: !7166)
!7178 = !DILocation(line: 2073, column: 18, scope: !7166)
!7179 = !DILocation(line: 2074, column: 15, scope: !7166)
!7180 = !DILocation(line: 2074, column: 20, scope: !7166)
!7181 = !DILocation(line: 2074, column: 3, scope: !7166)
!7182 = !DILocation(line: 2075, column: 2, scope: !7166)
!7183 = !DILocalVariable(name: "__mptr", scope: !7184, file: !3, line: 2068, type: !202)
!7184 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 2068, column: 2)
!7185 = !DILocation(line: 2068, column: 2, scope: !7184)
!7186 = !DILocation(line: 2068, column: 2, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 2068, column: 2)
!7188 = distinct !{!7188, !7157, !7189}
!7189 = !DILocation(line: 2075, column: 2, scope: !7153)
!7190 = !DILocalVariable(name: "__mptr", scope: !7191, file: !3, line: 2077, type: !202)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 2077, column: 2)
!7192 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 2077, column: 2)
!7193 = !DILocation(line: 2077, column: 2, scope: !7191)
!7194 = !DILocation(line: 2077, column: 2, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7191, file: !3, line: 2077, column: 2)
!7196 = !DILocation(line: 2077, column: 2, scope: !7192)
!7197 = !DILocalVariable(name: "__mptr", scope: !7198, file: !3, line: 2077, type: !202)
!7198 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 2077, column: 2)
!7199 = !DILocation(line: 2077, column: 2, scope: !7198)
!7200 = !DILocation(line: 2077, column: 2, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 2077, column: 2)
!7202 = !DILocation(line: 2077, column: 2, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 2077, column: 2)
!7204 = !DILocation(line: 2078, column: 7, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 2078, column: 7)
!7206 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 2077, column: 62)
!7207 = !DILocation(line: 2078, column: 14, scope: !7205)
!7208 = !DILocation(line: 2078, column: 19, scope: !7205)
!7209 = !DILocation(line: 2078, column: 11, scope: !7205)
!7210 = !DILocation(line: 2078, column: 7, scope: !7206)
!7211 = !DILocation(line: 2079, column: 4, scope: !7205)
!7212 = !DILocation(line: 2079, column: 9, scope: !7205)
!7213 = !DILocation(line: 2079, column: 20, scope: !7205)
!7214 = !DILocation(line: 2080, column: 25, scope: !7206)
!7215 = !DILocation(line: 2080, column: 30, scope: !7206)
!7216 = !DILocation(line: 2080, column: 3, scope: !7206)
!7217 = !DILocation(line: 2081, column: 2, scope: !7206)
!7218 = !DILocalVariable(name: "__mptr", scope: !7219, file: !3, line: 2077, type: !202)
!7219 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 2077, column: 2)
!7220 = !DILocation(line: 2077, column: 2, scope: !7219)
!7221 = !DILocation(line: 2077, column: 2, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7219, file: !3, line: 2077, column: 2)
!7223 = distinct !{!7223, !7196, !7224}
!7224 = !DILocation(line: 2081, column: 2, scope: !7192)
!7225 = !DILocation(line: 2083, column: 2, scope: !7142)
!7226 = !DILocation(line: 2083, column: 2, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 2083, column: 2)
!7228 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 2083, column: 2)
!7229 = !DILocation(line: 2083, column: 2, scope: !7228)
!7230 = !DILocation(line: 2083, column: 2, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 2083, column: 2)
!7232 = !DILocation(line: 2083, column: 2, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 2083, column: 2)
!7234 = !DILocation(line: 2083, column: 2, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 2083, column: 2)
!7236 = !{i32 -2141291330, i32 -2141291301, i32 -2141291255, i32 -2141291197, i32 -2141291143, i32 -2141291089, i32 -2141291034, i32 -2141291003}
!7237 = !DILocation(line: 2083, column: 2, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 2083, column: 2)
!7239 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 2083, column: 2)
!7240 = !{i32 -2141290556, i32 -2141290549, i32 -2141290495, i32 -2141290464, i32 -2141290434}
!7241 = !DILocation(line: 2083, column: 2, scope: !7239)
!7242 = !DILocation(line: 2086, column: 9, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 2086, column: 2)
!7244 = !DILocation(line: 2086, column: 7, scope: !7243)
!7245 = !DILocation(line: 2086, column: 14, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 2086, column: 2)
!7247 = !DILocation(line: 2086, column: 16, scope: !7246)
!7248 = !DILocation(line: 2086, column: 2, scope: !7243)
!7249 = !DILocalVariable(name: "tp", scope: !7250, file: !3, line: 2087, type: !6918)
!7250 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 2086, column: 39)
!7251 = !DILocation(line: 2087, column: 27, scope: !7250)
!7252 = !DILocation(line: 2087, column: 33, scope: !7250)
!7253 = !DILocation(line: 2087, column: 38, scope: !7250)
!7254 = !DILocation(line: 2087, column: 45, scope: !7250)
!7255 = !DILocation(line: 2089, column: 3, scope: !7250)
!7256 = !DILocation(line: 2089, column: 7, scope: !7250)
!7257 = !DILocation(line: 2089, column: 18, scope: !7250)
!7258 = !DILocation(line: 2090, column: 3, scope: !7250)
!7259 = !DILocation(line: 2090, column: 7, scope: !7250)
!7260 = !DILocation(line: 2090, column: 18, scope: !7250)
!7261 = !DILocation(line: 2091, column: 3, scope: !7250)
!7262 = !DILocation(line: 2091, column: 7, scope: !7250)
!7263 = !DILocation(line: 2091, column: 19, scope: !7250)
!7264 = !DILocation(line: 2094, column: 3, scope: !7250)
!7265 = !DILocation(line: 2094, column: 7, scope: !7250)
!7266 = !DILocation(line: 2094, column: 13, scope: !7250)
!7267 = !DILocation(line: 2095, column: 3, scope: !7250)
!7268 = !DILocation(line: 2095, column: 7, scope: !7250)
!7269 = !DILocation(line: 2095, column: 13, scope: !7250)
!7270 = !DILocation(line: 2097, column: 7, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 2097, column: 7)
!7272 = !DILocation(line: 2097, column: 11, scope: !7271)
!7273 = !DILocation(line: 2097, column: 7, scope: !7250)
!7274 = !DILocation(line: 2098, column: 30, scope: !7271)
!7275 = !DILocation(line: 2098, column: 34, scope: !7271)
!7276 = !DILocation(line: 2098, column: 4, scope: !7271)
!7277 = !DILocation(line: 2100, column: 2, scope: !7250)
!7278 = !DILocation(line: 2086, column: 35, scope: !7246)
!7279 = !DILocation(line: 2086, column: 2, scope: !7246)
!7280 = distinct !{!7280, !7248, !7281}
!7281 = !DILocation(line: 2100, column: 2, scope: !7243)
!7282 = !DILocation(line: 2101, column: 2, scope: !7142)
!7283 = !DILocation(line: 2101, column: 7, scope: !7142)
!7284 = !DILocation(line: 2101, column: 13, scope: !7142)
!7285 = !DILocation(line: 2102, column: 1, scope: !7142)
!7286 = distinct !DISubprogram(name: "hme_read_fifo", scope: !3, file: !3, line: 218, type: !5315, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7287 = !DILocalVariable(name: "esp", arg: 1, scope: !7286, file: !3, line: 218, type: !5289)
!7288 = !DILocation(line: 218, column: 39, scope: !7286)
!7289 = !DILocalVariable(name: "fcnt", scope: !7286, file: !3, line: 220, type: !232)
!7290 = !DILocation(line: 220, column: 6, scope: !7286)
!7291 = !DILocation(line: 220, column: 13, scope: !7286)
!7292 = !DILocation(line: 220, column: 35, scope: !7286)
!7293 = !DILocalVariable(name: "idx", scope: !7286, file: !3, line: 221, type: !232)
!7294 = !DILocation(line: 221, column: 6, scope: !7286)
!7295 = !DILocation(line: 223, column: 2, scope: !7286)
!7296 = !DILocation(line: 223, column: 13, scope: !7286)
!7297 = !DILocation(line: 224, column: 22, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 223, column: 17)
!7299 = !DILocation(line: 224, column: 3, scope: !7298)
!7300 = !DILocation(line: 224, column: 8, scope: !7298)
!7301 = !DILocation(line: 224, column: 16, scope: !7298)
!7302 = !DILocation(line: 224, column: 20, scope: !7298)
!7303 = !DILocation(line: 225, column: 22, scope: !7298)
!7304 = !DILocation(line: 225, column: 3, scope: !7298)
!7305 = !DILocation(line: 225, column: 8, scope: !7298)
!7306 = !DILocation(line: 225, column: 16, scope: !7298)
!7307 = !DILocation(line: 225, column: 20, scope: !7298)
!7308 = distinct !{!7308, !7295, !7309}
!7309 = !DILocation(line: 226, column: 2, scope: !7286)
!7310 = !DILocation(line: 227, column: 6, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 227, column: 6)
!7312 = !DILocation(line: 227, column: 11, scope: !7311)
!7313 = !DILocation(line: 227, column: 17, scope: !7311)
!7314 = !DILocation(line: 227, column: 6, scope: !7286)
!7315 = !DILocation(line: 228, column: 3, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 227, column: 37)
!7317 = !DILocation(line: 229, column: 22, scope: !7316)
!7318 = !DILocation(line: 229, column: 3, scope: !7316)
!7319 = !DILocation(line: 229, column: 8, scope: !7316)
!7320 = !DILocation(line: 229, column: 16, scope: !7316)
!7321 = !DILocation(line: 229, column: 20, scope: !7316)
!7322 = !DILocation(line: 230, column: 16, scope: !7316)
!7323 = !DILocation(line: 230, column: 3, scope: !7316)
!7324 = !DILocation(line: 231, column: 2, scope: !7316)
!7325 = !DILocation(line: 232, column: 18, scope: !7286)
!7326 = !DILocation(line: 232, column: 2, scope: !7286)
!7327 = !DILocation(line: 232, column: 7, scope: !7286)
!7328 = !DILocation(line: 232, column: 16, scope: !7286)
!7329 = !DILocation(line: 233, column: 1, scope: !7286)
!7330 = distinct !DISubprogram(name: "esp_dump_cmd_log", scope: !3, file: !3, line: 180, type: !5315, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7331 = !DILocalVariable(name: "esp", arg: 1, scope: !7330, file: !3, line: 180, type: !5289)
!7332 = !DILocation(line: 180, column: 42, scope: !7330)
!7333 = !DILocalVariable(name: "idx", scope: !7330, file: !3, line: 182, type: !232)
!7334 = !DILocation(line: 182, column: 6, scope: !7330)
!7335 = !DILocation(line: 182, column: 12, scope: !7330)
!7336 = !DILocation(line: 182, column: 17, scope: !7330)
!7337 = !DILocalVariable(name: "stop", scope: !7330, file: !3, line: 183, type: !232)
!7338 = !DILocation(line: 183, column: 6, scope: !7330)
!7339 = !DILocation(line: 183, column: 13, scope: !7330)
!7340 = !DILocation(line: 185, column: 2, scope: !7330)
!7341 = !DILocation(line: 186, column: 2, scope: !7330)
!7342 = !DILocalVariable(name: "p", scope: !7343, file: !3, line: 187, type: !5648)
!7343 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 186, column: 5)
!7344 = !DILocation(line: 187, column: 25, scope: !7343)
!7345 = !DILocation(line: 187, column: 30, scope: !7343)
!7346 = !DILocation(line: 187, column: 35, scope: !7343)
!7347 = !DILocation(line: 187, column: 49, scope: !7343)
!7348 = !DILocation(line: 189, column: 3, scope: !7343)
!7349 = !DILocation(line: 197, column: 10, scope: !7343)
!7350 = !DILocation(line: 197, column: 14, scope: !7343)
!7351 = !DILocation(line: 197, column: 19, scope: !7343)
!7352 = !DILocation(line: 197, column: 7, scope: !7343)
!7353 = !DILocation(line: 198, column: 2, scope: !7343)
!7354 = !DILocation(line: 198, column: 11, scope: !7330)
!7355 = !DILocation(line: 198, column: 18, scope: !7330)
!7356 = !DILocation(line: 198, column: 15, scope: !7330)
!7357 = distinct !{!7357, !7341, !7358}
!7358 = !DILocation(line: 198, column: 22, scope: !7330)
!7359 = !DILocation(line: 199, column: 1, scope: !7330)
!7360 = distinct !DISubprogram(name: "esp_schedule_reset", scope: !3, file: !3, line: 1042, type: !5315, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7361 = !DILocalVariable(name: "esp", arg: 1, scope: !7360, file: !3, line: 1042, type: !5289)
!7362 = !DILocation(line: 1042, column: 44, scope: !7360)
!7363 = !DILocation(line: 1044, column: 2, scope: !7360)
!7364 = !DILocation(line: 1044, column: 2, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 1044, column: 2)
!7366 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 1044, column: 2)
!7367 = !DILocation(line: 1044, column: 2, scope: !7366)
!7368 = !DILocation(line: 1046, column: 2, scope: !7360)
!7369 = !DILocation(line: 1046, column: 7, scope: !7360)
!7370 = !DILocation(line: 1046, column: 13, scope: !7360)
!7371 = !DILocation(line: 1047, column: 12, scope: !7360)
!7372 = !DILocation(line: 1047, column: 2, scope: !7360)
!7373 = !DILocation(line: 1048, column: 1, scope: !7360)
!7374 = distinct !DISubprogram(name: "esp_finish_select", scope: !3, file: !3, line: 1230, type: !5287, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7375 = !DILocalVariable(name: "esp", arg: 1, scope: !7374, file: !3, line: 1230, type: !5289)
!7376 = !DILocation(line: 1230, column: 42, scope: !7374)
!7377 = !DILocalVariable(name: "ent", scope: !7374, file: !3, line: 1232, type: !203)
!7378 = !DILocation(line: 1232, column: 24, scope: !7374)
!7379 = !DILocalVariable(name: "cmd", scope: !7374, file: !3, line: 1233, type: !214)
!7380 = !DILocation(line: 1233, column: 20, scope: !7374)
!7381 = !DILocation(line: 1236, column: 2, scope: !7374)
!7382 = !DILocation(line: 1236, column: 7, scope: !7374)
!7383 = !DILocation(line: 1236, column: 20, scope: !7374)
!7384 = !DILocation(line: 1238, column: 16, scope: !7374)
!7385 = !DILocation(line: 1238, column: 37, scope: !7374)
!7386 = !DILocation(line: 1238, column: 2, scope: !7374)
!7387 = !DILocation(line: 1238, column: 7, scope: !7374)
!7388 = !DILocation(line: 1238, column: 14, scope: !7374)
!7389 = !DILocation(line: 1239, column: 8, scope: !7374)
!7390 = !DILocation(line: 1239, column: 13, scope: !7374)
!7391 = !DILocation(line: 1239, column: 6, scope: !7374)
!7392 = !DILocation(line: 1240, column: 8, scope: !7374)
!7393 = !DILocation(line: 1240, column: 13, scope: !7374)
!7394 = !DILocation(line: 1240, column: 6, scope: !7374)
!7395 = !DILocation(line: 1242, column: 6, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 1242, column: 6)
!7397 = !DILocation(line: 1242, column: 11, scope: !7396)
!7398 = !DILocation(line: 1242, column: 16, scope: !7396)
!7399 = !DILocation(line: 1242, column: 26, scope: !7396)
!7400 = !DILocation(line: 1242, column: 6, scope: !7374)
!7401 = !DILocation(line: 1246, column: 22, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 1242, column: 32)
!7403 = !DILocation(line: 1246, column: 3, scope: !7402)
!7404 = !DILocation(line: 1247, column: 19, scope: !7402)
!7405 = !DILocation(line: 1247, column: 24, scope: !7402)
!7406 = !DILocation(line: 1247, column: 29, scope: !7402)
!7407 = !DILocation(line: 1247, column: 3, scope: !7402)
!7408 = !DILocation(line: 1248, column: 3, scope: !7402)
!7409 = !DILocation(line: 1251, column: 2, scope: !7374)
!7410 = !DILocation(line: 1251, column: 7, scope: !7374)
!7411 = !DILocation(line: 1251, column: 12, scope: !7374)
!7412 = !DILocation(line: 1251, column: 27, scope: !7374)
!7413 = !DILocation(line: 1253, column: 6, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 1253, column: 6)
!7415 = !DILocation(line: 1253, column: 11, scope: !7414)
!7416 = !DILocation(line: 1253, column: 16, scope: !7414)
!7417 = !DILocation(line: 1253, column: 6, scope: !7374)
!7418 = !DILocalVariable(name: "tp", scope: !7419, file: !3, line: 1254, type: !6918)
!7419 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 1253, column: 53)
!7420 = !DILocation(line: 1254, column: 27, scope: !7419)
!7421 = !DILocation(line: 1254, column: 33, scope: !7419)
!7422 = !DILocation(line: 1254, column: 38, scope: !7419)
!7423 = !DILocation(line: 1254, column: 45, scope: !7419)
!7424 = !DILocation(line: 1254, column: 50, scope: !7419)
!7425 = !DILocation(line: 1254, column: 58, scope: !7419)
!7426 = !DILocation(line: 1260, column: 9, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7419, file: !3, line: 1260, column: 7)
!7428 = !DILocation(line: 1260, column: 14, scope: !7427)
!7429 = !DILocation(line: 1260, column: 20, scope: !7427)
!7430 = !DILocation(line: 1260, column: 7, scope: !7419)
!7431 = !DILocation(line: 1261, column: 18, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 1260, column: 47)
!7433 = !DILocation(line: 1261, column: 23, scope: !7432)
!7434 = !DILocation(line: 1261, column: 4, scope: !7432)
!7435 = !DILocation(line: 1262, column: 21, scope: !7432)
!7436 = !DILocation(line: 1262, column: 26, scope: !7432)
!7437 = !DILocation(line: 1262, column: 31, scope: !7432)
!7438 = !DILocation(line: 1262, column: 39, scope: !7432)
!7439 = !DILocation(line: 1262, column: 4, scope: !7432)
!7440 = !DILocation(line: 1263, column: 4, scope: !7432)
!7441 = !DILocation(line: 1263, column: 8, scope: !7432)
!7442 = !DILocation(line: 1263, column: 14, scope: !7432)
!7443 = !DILocation(line: 1264, column: 4, scope: !7432)
!7444 = !DILocation(line: 1264, column: 9, scope: !7432)
!7445 = !DILocation(line: 1264, column: 23, scope: !7432)
!7446 = !DILocation(line: 1265, column: 4, scope: !7432)
!7447 = !DILocation(line: 1265, column: 9, scope: !7432)
!7448 = !DILocation(line: 1265, column: 24, scope: !7432)
!7449 = !DILocation(line: 1266, column: 3, scope: !7432)
!7450 = !DILocation(line: 1267, column: 20, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 1266, column: 10)
!7452 = !DILocation(line: 1267, column: 25, scope: !7451)
!7453 = !DILocation(line: 1267, column: 4, scope: !7451)
!7454 = !DILocation(line: 1273, column: 14, scope: !7419)
!7455 = !DILocation(line: 1273, column: 19, scope: !7419)
!7456 = !DILocation(line: 1273, column: 26, scope: !7419)
!7457 = !DILocation(line: 1273, column: 31, scope: !7419)
!7458 = !DILocation(line: 1273, column: 3, scope: !7419)
!7459 = !DILocation(line: 1274, column: 3, scope: !7419)
!7460 = !DILocation(line: 1274, column: 8, scope: !7419)
!7461 = !DILocation(line: 1274, column: 19, scope: !7419)
!7462 = !DILocation(line: 1279, column: 3, scope: !7419)
!7463 = !DILocation(line: 1282, column: 6, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 1282, column: 6)
!7465 = !DILocation(line: 1282, column: 11, scope: !7464)
!7466 = !DILocation(line: 1282, column: 16, scope: !7464)
!7467 = !DILocation(line: 1282, column: 6, scope: !7374)
!7468 = !DILocalVariable(name: "dev", scope: !7469, file: !3, line: 1283, type: !238)
!7469 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 1282, column: 32)
!7470 = !DILocation(line: 1283, column: 23, scope: !7469)
!7471 = !DILocation(line: 1283, column: 29, scope: !7469)
!7472 = !DILocation(line: 1283, column: 34, scope: !7469)
!7473 = !DILocation(line: 1289, column: 3, scope: !7469)
!7474 = !DILocation(line: 1289, column: 8, scope: !7469)
!7475 = !DILocation(line: 1289, column: 15, scope: !7469)
!7476 = !DILocation(line: 1289, column: 20, scope: !7469)
!7477 = !DILocation(line: 1289, column: 24, scope: !7469)
!7478 = !DILocation(line: 1289, column: 30, scope: !7469)
!7479 = !DILocation(line: 1291, column: 16, scope: !7469)
!7480 = !DILocation(line: 1291, column: 3, scope: !7469)
!7481 = !DILocation(line: 1292, column: 19, scope: !7469)
!7482 = !DILocation(line: 1292, column: 24, scope: !7469)
!7483 = !DILocation(line: 1292, column: 29, scope: !7469)
!7484 = !DILocation(line: 1292, column: 3, scope: !7469)
!7485 = !DILocation(line: 1293, column: 3, scope: !7469)
!7486 = !DILocation(line: 1296, column: 6, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 1296, column: 6)
!7488 = !DILocation(line: 1296, column: 11, scope: !7487)
!7489 = !DILocation(line: 1296, column: 16, scope: !7487)
!7490 = !DILocation(line: 1296, column: 6, scope: !7374)
!7491 = !DILocation(line: 1300, column: 7, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 1300, column: 7)
!7493 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 1296, column: 54)
!7494 = !DILocation(line: 1300, column: 12, scope: !7492)
!7495 = !DILocation(line: 1300, column: 16, scope: !7492)
!7496 = !DILocation(line: 1300, column: 7, scope: !7493)
!7497 = !DILocalVariable(name: "fcnt", scope: !7498, file: !3, line: 1301, type: !232)
!7498 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1300, column: 27)
!7499 = !DILocation(line: 1301, column: 8, scope: !7498)
!7500 = !DILocation(line: 1301, column: 15, scope: !7498)
!7501 = !DILocation(line: 1301, column: 37, scope: !7498)
!7502 = !DILocation(line: 1303, column: 17, scope: !7498)
!7503 = !DILocation(line: 1303, column: 4, scope: !7498)
!7504 = !DILocation(line: 1305, column: 9, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 1305, column: 8)
!7506 = !DILocation(line: 1305, column: 14, scope: !7505)
!7507 = !DILocation(line: 1306, column: 10, scope: !7505)
!7508 = !DILocation(line: 1306, column: 15, scope: !7505)
!7509 = !DILocation(line: 1306, column: 25, scope: !7505)
!7510 = !DILocation(line: 1307, column: 11, scope: !7505)
!7511 = !DILocation(line: 1307, column: 16, scope: !7505)
!7512 = !DILocation(line: 1307, column: 21, scope: !7505)
!7513 = !DILocation(line: 1307, column: 39, scope: !7505)
!7514 = !DILocation(line: 1305, column: 8, scope: !7498)
!7515 = !DILocation(line: 1308, column: 20, scope: !7505)
!7516 = !DILocation(line: 1308, column: 5, scope: !7505)
!7517 = !DILocation(line: 1309, column: 3, scope: !7498)
!7518 = !DILocation(line: 1314, column: 13, scope: !7493)
!7519 = !DILocation(line: 1314, column: 3, scope: !7493)
!7520 = !DILocation(line: 1315, column: 3, scope: !7493)
!7521 = !DILocation(line: 1318, column: 2, scope: !7374)
!7522 = !DILocation(line: 1320, column: 21, scope: !7374)
!7523 = !DILocation(line: 1320, column: 2, scope: !7374)
!7524 = !DILocation(line: 1321, column: 2, scope: !7374)
!7525 = !DILocation(line: 1322, column: 1, scope: !7374)
!7526 = distinct !DISubprogram(name: "esp_reconnect", scope: !3, file: !3, line: 1145, type: !5287, scopeLine: 1146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7527 = !DILocalVariable(name: "x", arg: 1, scope: !7528, file: !7529, line: 283, type: !232)
!7528 = distinct !DISubprogram(name: "ffs", scope: !7529, file: !7529, line: 283, type: !1171, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7529 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7530 = !DILocation(line: 283, column: 36, scope: !7528, inlinedAt: !7531)
!7531 = distinct !DILocation(line: 1175, column: 12, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 1160, column: 9)
!7533 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 1154, column: 6)
!7534 = !DILocalVariable(name: "r", scope: !7528, file: !7529, line: 285, type: !232)
!7535 = !DILocation(line: 285, column: 6, scope: !7528, inlinedAt: !7531)
!7536 = !DILocalVariable(name: "esp", arg: 1, scope: !7526, file: !3, line: 1145, type: !5289)
!7537 = !DILocation(line: 1145, column: 38, scope: !7526)
!7538 = !DILocalVariable(name: "ent", scope: !7526, file: !3, line: 1147, type: !203)
!7539 = !DILocation(line: 1147, column: 24, scope: !7526)
!7540 = !DILocalVariable(name: "tp", scope: !7526, file: !3, line: 1148, type: !6918)
!7541 = !DILocation(line: 1148, column: 26, scope: !7526)
!7542 = !DILocalVariable(name: "lp", scope: !7526, file: !3, line: 1149, type: !6925)
!7543 = !DILocation(line: 1149, column: 23, scope: !7526)
!7544 = !DILocalVariable(name: "dev", scope: !7526, file: !3, line: 1150, type: !238)
!7545 = !DILocation(line: 1150, column: 22, scope: !7526)
!7546 = !DILocalVariable(name: "target", scope: !7526, file: !3, line: 1151, type: !232)
!7547 = !DILocation(line: 1151, column: 6, scope: !7526)
!7548 = !DILocalVariable(name: "lun", scope: !7526, file: !3, line: 1151, type: !232)
!7549 = !DILocation(line: 1151, column: 14, scope: !7526)
!7550 = !DILocation(line: 1153, column: 2, scope: !7526)
!7551 = !DILocation(line: 1153, column: 2, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 1153, column: 2)
!7553 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 1153, column: 2)
!7554 = !DILocation(line: 1153, column: 2, scope: !7553)
!7555 = !DILocation(line: 1153, column: 2, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 1153, column: 2)
!7557 = !DILocation(line: 1153, column: 2, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 1153, column: 2)
!7559 = !DILocation(line: 1153, column: 2, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 1153, column: 2)
!7561 = !{i32 -2141312420, i32 -2141312391, i32 -2141312345, i32 -2141312287, i32 -2141312233, i32 -2141312179, i32 -2141312124, i32 -2141312093}
!7562 = !DILocation(line: 1153, column: 2, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 1153, column: 2)
!7564 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 1153, column: 2)
!7565 = !{i32 -2141311646, i32 -2141311639, i32 -2141311585, i32 -2141311554, i32 -2141311524}
!7566 = !DILocation(line: 1153, column: 2, scope: !7564)
!7567 = !DILocation(line: 1154, column: 6, scope: !7533)
!7568 = !DILocation(line: 1154, column: 11, scope: !7533)
!7569 = !DILocation(line: 1154, column: 15, scope: !7533)
!7570 = !DILocation(line: 1154, column: 6, scope: !7526)
!7571 = !DILocation(line: 1158, column: 12, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 1154, column: 26)
!7573 = !DILocation(line: 1158, column: 17, scope: !7572)
!7574 = !DILocation(line: 1158, column: 10, scope: !7572)
!7575 = !DILocation(line: 1159, column: 9, scope: !7572)
!7576 = !DILocation(line: 1159, column: 14, scope: !7572)
!7577 = !DILocation(line: 1159, column: 22, scope: !7572)
!7578 = !DILocation(line: 1159, column: 7, scope: !7572)
!7579 = !DILocation(line: 1160, column: 2, scope: !7572)
!7580 = !DILocalVariable(name: "bits", scope: !7532, file: !3, line: 1161, type: !453)
!7581 = !DILocation(line: 1161, column: 6, scope: !7532)
!7582 = !DILocation(line: 1161, column: 13, scope: !7532)
!7583 = !DILocation(line: 1169, column: 9, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 1169, column: 7)
!7585 = !DILocation(line: 1169, column: 16, scope: !7584)
!7586 = !DILocation(line: 1169, column: 21, scope: !7584)
!7587 = !DILocation(line: 1169, column: 14, scope: !7584)
!7588 = !DILocation(line: 1169, column: 7, scope: !7532)
!7589 = !DILocation(line: 1170, column: 4, scope: !7584)
!7590 = !DILocation(line: 1171, column: 12, scope: !7532)
!7591 = !DILocation(line: 1171, column: 17, scope: !7532)
!7592 = !DILocation(line: 1171, column: 11, scope: !7532)
!7593 = !DILocation(line: 1171, column: 8, scope: !7532)
!7594 = !DILocation(line: 1172, column: 8, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 1172, column: 7)
!7596 = !DILocation(line: 1172, column: 13, scope: !7595)
!7597 = !DILocation(line: 1172, column: 17, scope: !7595)
!7598 = !DILocation(line: 1172, column: 25, scope: !7595)
!7599 = !DILocation(line: 1172, column: 30, scope: !7595)
!7600 = !DILocation(line: 1172, column: 22, scope: !7595)
!7601 = !DILocation(line: 1172, column: 7, scope: !7532)
!7602 = !DILocation(line: 1173, column: 4, scope: !7595)
!7603 = !DILocation(line: 1175, column: 16, scope: !7532)
!7604 = !DILocation(line: 299, column: 14, scope: !7528, inlinedAt: !7531)
!7605 = !DILocation(line: 297, column: 2, scope: !7528, inlinedAt: !7531)
!7606 = !{i32 307548}
!7607 = !DILocation(line: 310, column: 9, scope: !7528, inlinedAt: !7531)
!7608 = !DILocation(line: 310, column: 11, scope: !7528, inlinedAt: !7531)
!7609 = !DILocation(line: 1175, column: 22, scope: !7532)
!7610 = !DILocation(line: 1175, column: 10, scope: !7532)
!7611 = !DILocation(line: 1176, column: 10, scope: !7532)
!7612 = !DILocation(line: 1176, column: 31, scope: !7532)
!7613 = !DILocation(line: 1176, column: 7, scope: !7532)
!7614 = !DILocation(line: 1178, column: 16, scope: !7532)
!7615 = !DILocation(line: 1178, column: 3, scope: !7532)
!7616 = !DILocation(line: 1179, column: 7, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 1179, column: 7)
!7618 = !DILocation(line: 1179, column: 12, scope: !7617)
!7619 = !DILocation(line: 1179, column: 16, scope: !7617)
!7620 = !DILocation(line: 1179, column: 7, scope: !7532)
!7621 = !DILocalVariable(name: "ireg", scope: !7622, file: !3, line: 1180, type: !453)
!7622 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 1179, column: 27)
!7623 = !DILocation(line: 1180, column: 7, scope: !7622)
!7624 = !DILocation(line: 1180, column: 14, scope: !7622)
!7625 = !DILocation(line: 1186, column: 8, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 1186, column: 8)
!7627 = !DILocation(line: 1186, column: 13, scope: !7626)
!7628 = !DILocation(line: 1186, column: 8, scope: !7622)
!7629 = !DILocation(line: 1187, column: 5, scope: !7626)
!7630 = !DILocation(line: 1188, column: 3, scope: !7622)
!7631 = !DILocation(line: 1189, column: 16, scope: !7532)
!7632 = !DILocation(line: 1189, column: 3, scope: !7532)
!7633 = !DILocation(line: 1192, column: 21, scope: !7526)
!7634 = !DILocation(line: 1192, column: 26, scope: !7526)
!7635 = !DILocation(line: 1192, column: 2, scope: !7526)
!7636 = !DILocation(line: 1193, column: 24, scope: !7526)
!7637 = !DILocation(line: 1193, column: 29, scope: !7526)
!7638 = !DILocation(line: 1193, column: 2, scope: !7526)
!7639 = !DILocation(line: 1195, column: 15, scope: !7526)
!7640 = !DILocation(line: 1195, column: 2, scope: !7526)
!7641 = !DILocation(line: 1197, column: 6, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 1197, column: 6)
!7643 = !DILocation(line: 1197, column: 11, scope: !7642)
!7644 = !DILocation(line: 1197, column: 15, scope: !7642)
!7645 = !DILocation(line: 1197, column: 6, scope: !7526)
!7646 = !DILocation(line: 1198, column: 3, scope: !7642)
!7647 = !DILocation(line: 1201, column: 8, scope: !7526)
!7648 = !DILocation(line: 1201, column: 13, scope: !7526)
!7649 = !DILocation(line: 1201, column: 20, scope: !7526)
!7650 = !DILocation(line: 1201, column: 5, scope: !7526)
!7651 = !DILocation(line: 1202, column: 39, scope: !7526)
!7652 = !DILocation(line: 1202, column: 43, scope: !7526)
!7653 = !DILocation(line: 1202, column: 52, scope: !7526)
!7654 = !DILocation(line: 1202, column: 8, scope: !7526)
!7655 = !DILocation(line: 1202, column: 6, scope: !7526)
!7656 = !DILocation(line: 1203, column: 7, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 1203, column: 6)
!7658 = !DILocation(line: 1203, column: 6, scope: !7526)
!7659 = !DILocation(line: 1204, column: 3, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 1203, column: 12)
!7661 = !DILocation(line: 1207, column: 3, scope: !7660)
!7662 = !DILocation(line: 1209, column: 7, scope: !7526)
!7663 = !DILocation(line: 1209, column: 12, scope: !7526)
!7664 = !DILocation(line: 1209, column: 5, scope: !7526)
!7665 = !DILocation(line: 1211, column: 8, scope: !7526)
!7666 = !DILocation(line: 1211, column: 12, scope: !7526)
!7667 = !DILocation(line: 1211, column: 6, scope: !7526)
!7668 = !DILocation(line: 1212, column: 7, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 1212, column: 6)
!7670 = !DILocation(line: 1212, column: 6, scope: !7526)
!7671 = !DILocation(line: 1213, column: 32, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 1212, column: 12)
!7673 = !DILocation(line: 1213, column: 37, scope: !7672)
!7674 = !DILocation(line: 1213, column: 9, scope: !7672)
!7675 = !DILocation(line: 1213, column: 7, scope: !7672)
!7676 = !DILocation(line: 1214, column: 8, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 1214, column: 7)
!7678 = !DILocation(line: 1214, column: 7, scope: !7672)
!7679 = !DILocation(line: 1215, column: 4, scope: !7677)
!7680 = !DILocation(line: 1216, column: 2, scope: !7672)
!7681 = !DILocation(line: 1218, column: 20, scope: !7526)
!7682 = !DILocation(line: 1218, column: 2, scope: !7526)
!7683 = !DILocation(line: 1218, column: 7, scope: !7526)
!7684 = !DILocation(line: 1218, column: 18, scope: !7526)
!7685 = !DILocation(line: 1220, column: 12, scope: !7526)
!7686 = !DILocation(line: 1220, column: 2, scope: !7526)
!7687 = !DILocation(line: 1221, column: 23, scope: !7526)
!7688 = !DILocation(line: 1221, column: 28, scope: !7526)
!7689 = !DILocation(line: 1221, column: 2, scope: !7526)
!7690 = !DILocation(line: 1222, column: 2, scope: !7526)
!7691 = !DILocation(line: 1222, column: 7, scope: !7526)
!7692 = !DILocation(line: 1222, column: 13, scope: !7526)
!7693 = !DILocation(line: 1223, column: 2, scope: !7526)
!7694 = !DILabel(scope: !7526, name: "do_reset", file: !3, line: 1225)
!7695 = !DILocation(line: 1225, column: 1, scope: !7526)
!7696 = !DILocation(line: 1226, column: 21, scope: !7526)
!7697 = !DILocation(line: 1226, column: 2, scope: !7526)
!7698 = !DILocation(line: 1227, column: 2, scope: !7526)
!7699 = !DILocation(line: 1228, column: 1, scope: !7526)
!7700 = distinct !DISubprogram(name: "esp_process_event", scope: !3, file: !3, line: 1697, type: !5287, scopeLine: 1698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!7701 = !DILocalVariable(name: "esp", arg: 1, scope: !7700, file: !3, line: 1697, type: !5289)
!7702 = !DILocation(line: 1697, column: 42, scope: !7700)
!7703 = !DILocalVariable(name: "write", scope: !7700, file: !3, line: 1699, type: !232)
!7704 = !DILocation(line: 1699, column: 6, scope: !7700)
!7705 = !DILocalVariable(name: "i", scope: !7700, file: !3, line: 1699, type: !232)
!7706 = !DILocation(line: 1699, column: 13, scope: !7700)
!7707 = !DILocation(line: 1699, column: 2, scope: !7700)
!7708 = !DILabel(scope: !7700, name: "again", file: !3, line: 1701)
!7709 = !DILocation(line: 1701, column: 1, scope: !7700)
!7710 = !DILocation(line: 1702, column: 8, scope: !7700)
!7711 = !DILocation(line: 1703, column: 2, scope: !7700)
!7712 = !DILocation(line: 1703, column: 2, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 1703, column: 2)
!7714 = distinct !DILexicalBlock(scope: !7700, file: !3, line: 1703, column: 2)
!7715 = !DILocation(line: 1703, column: 2, scope: !7714)
!7716 = !DILocation(line: 1705, column: 10, scope: !7700)
!7717 = !DILocation(line: 1705, column: 15, scope: !7700)
!7718 = !DILocation(line: 1705, column: 2, scope: !7700)
!7719 = !DILocation(line: 1707, column: 11, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7700, file: !3, line: 1705, column: 22)
!7721 = !DILocation(line: 1707, column: 16, scope: !7720)
!7722 = !DILocation(line: 1707, column: 21, scope: !7720)
!7723 = !DILocation(line: 1707, column: 3, scope: !7720)
!7724 = !DILocation(line: 1709, column: 14, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1707, column: 39)
!7726 = !DILocation(line: 1709, column: 4, scope: !7725)
!7727 = !DILocation(line: 1710, column: 4, scope: !7725)
!7728 = !DILocation(line: 1712, column: 14, scope: !7725)
!7729 = !DILocation(line: 1712, column: 4, scope: !7725)
!7730 = !DILocation(line: 1713, column: 4, scope: !7725)
!7731 = !DILocation(line: 1715, column: 19, scope: !7725)
!7732 = !DILocation(line: 1715, column: 4, scope: !7725)
!7733 = !DILocation(line: 1716, column: 17, scope: !7725)
!7734 = !DILocation(line: 1716, column: 4, scope: !7725)
!7735 = !DILocation(line: 1717, column: 14, scope: !7725)
!7736 = !DILocation(line: 1717, column: 4, scope: !7725)
!7737 = !DILocation(line: 1718, column: 4, scope: !7725)
!7738 = !DILocation(line: 1718, column: 9, scope: !7725)
!7739 = !DILocation(line: 1718, column: 15, scope: !7725)
!7740 = !DILocation(line: 1719, column: 4, scope: !7725)
!7741 = !DILocation(line: 1722, column: 14, scope: !7725)
!7742 = !DILocation(line: 1722, column: 4, scope: !7725)
!7743 = !DILocation(line: 1723, column: 4, scope: !7725)
!7744 = !DILocation(line: 1726, column: 14, scope: !7725)
!7745 = !DILocation(line: 1726, column: 4, scope: !7725)
!7746 = !DILocation(line: 1727, column: 4, scope: !7725)
!7747 = !DILocation(line: 1730, column: 14, scope: !7725)
!7748 = !DILocation(line: 1730, column: 4, scope: !7725)
!7749 = !DILocation(line: 1731, column: 4, scope: !7725)
!7750 = !DILocation(line: 1734, column: 4, scope: !7725)
!7751 = !DILocation(line: 1737, column: 23, scope: !7725)
!7752 = !DILocation(line: 1737, column: 4, scope: !7725)
!7753 = !DILocation(line: 1738, column: 4, scope: !7725)
!7754 = !DILocation(line: 1740, column: 3, scope: !7720)
!7755 = !DILocation(line: 1743, column: 9, scope: !7720)
!7756 = !DILocation(line: 1743, column: 3, scope: !7720)
!7757 = !DILocalVariable(name: "ent", scope: !7758, file: !3, line: 1747, type: !203)
!7758 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1746, column: 27)
!7759 = !DILocation(line: 1747, column: 25, scope: !7758)
!7760 = !DILocation(line: 1747, column: 31, scope: !7758)
!7761 = !DILocation(line: 1747, column: 36, scope: !7758)
!7762 = !DILocalVariable(name: "cmd", scope: !7758, file: !3, line: 1748, type: !214)
!7763 = !DILocation(line: 1748, column: 21, scope: !7758)
!7764 = !DILocation(line: 1748, column: 27, scope: !7758)
!7765 = !DILocation(line: 1748, column: 32, scope: !7758)
!7766 = !DILocalVariable(name: "dma_addr", scope: !7758, file: !3, line: 1749, type: !3884)
!7767 = !DILocation(line: 1749, column: 14, scope: !7758)
!7768 = !DILocation(line: 1749, column: 42, scope: !7758)
!7769 = !DILocation(line: 1749, column: 47, scope: !7758)
!7770 = !DILocation(line: 1749, column: 25, scope: !7758)
!7771 = !DILocalVariable(name: "dma_len", scope: !7758, file: !3, line: 1750, type: !7)
!7772 = !DILocation(line: 1750, column: 16, scope: !7758)
!7773 = !DILocation(line: 1750, column: 42, scope: !7758)
!7774 = !DILocation(line: 1750, column: 47, scope: !7758)
!7775 = !DILocation(line: 1750, column: 26, scope: !7758)
!7776 = !DILocation(line: 1752, column: 7, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 1752, column: 7)
!7778 = !DILocation(line: 1752, column: 12, scope: !7777)
!7779 = !DILocation(line: 1752, column: 16, scope: !7777)
!7780 = !DILocation(line: 1752, column: 7, scope: !7758)
!7781 = !DILocation(line: 1753, column: 17, scope: !7777)
!7782 = !DILocation(line: 1753, column: 4, scope: !7777)
!7783 = !DILocation(line: 1755, column: 7, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 1755, column: 7)
!7785 = !DILocation(line: 1755, column: 7, scope: !7758)
!7786 = !DILocation(line: 1756, column: 4, scope: !7784)
!7787 = !DILocation(line: 1756, column: 9, scope: !7784)
!7788 = !DILocation(line: 1756, column: 15, scope: !7784)
!7789 = !DILocation(line: 1758, column: 4, scope: !7784)
!7790 = !DILocation(line: 1758, column: 9, scope: !7784)
!7791 = !DILocation(line: 1758, column: 15, scope: !7784)
!7792 = !DILocation(line: 1760, column: 7, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 1760, column: 7)
!7794 = !DILocation(line: 1760, column: 12, scope: !7793)
!7795 = !DILocation(line: 1760, column: 17, scope: !7793)
!7796 = !DILocation(line: 1760, column: 7, scope: !7758)
!7797 = !DILocation(line: 1761, column: 14, scope: !7793)
!7798 = !DILocation(line: 1761, column: 19, scope: !7793)
!7799 = !DILocation(line: 1761, column: 24, scope: !7793)
!7800 = !DILocation(line: 1761, column: 41, scope: !7793)
!7801 = !DILocation(line: 1761, column: 46, scope: !7793)
!7802 = !DILocation(line: 1762, column: 13, scope: !7793)
!7803 = !DILocation(line: 1761, column: 12, scope: !7793)
!7804 = !DILocation(line: 1761, column: 4, scope: !7793)
!7805 = !DILocation(line: 1764, column: 35, scope: !7793)
!7806 = !DILocation(line: 1764, column: 40, scope: !7793)
!7807 = !DILocation(line: 1764, column: 50, scope: !7793)
!7808 = !DILocation(line: 1764, column: 14, scope: !7793)
!7809 = !DILocation(line: 1764, column: 12, scope: !7793)
!7810 = !DILocation(line: 1766, column: 23, scope: !7758)
!7811 = !DILocation(line: 1766, column: 3, scope: !7758)
!7812 = !DILocation(line: 1766, column: 8, scope: !7758)
!7813 = !DILocation(line: 1766, column: 21, scope: !7758)
!7814 = !DILocation(line: 1768, column: 8, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 1768, column: 7)
!7816 = !DILocation(line: 1768, column: 7, scope: !7758)
!7817 = !DILocation(line: 1769, column: 4, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 1768, column: 17)
!7819 = !DILocation(line: 1771, column: 4, scope: !7818)
!7820 = !DILocation(line: 1775, column: 23, scope: !7818)
!7821 = !DILocation(line: 1775, column: 4, scope: !7818)
!7822 = !DILocation(line: 1776, column: 4, scope: !7818)
!7823 = !DILocation(line: 1779, column: 3, scope: !7758)
!7824 = !DILocation(line: 1779, column: 3, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 1779, column: 3)
!7826 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 1779, column: 3)
!7827 = !DILocation(line: 1779, column: 3, scope: !7826)
!7828 = !DILocation(line: 1782, column: 3, scope: !7758)
!7829 = !DILocation(line: 1782, column: 8, scope: !7758)
!7830 = !DILocation(line: 1782, column: 13, scope: !7758)
!7831 = !DILocation(line: 1782, column: 26, scope: !7758)
!7832 = !DILocation(line: 1782, column: 31, scope: !7758)
!7833 = !DILocation(line: 1782, column: 41, scope: !7758)
!7834 = !DILocation(line: 1782, column: 50, scope: !7758)
!7835 = !DILocation(line: 1783, column: 12, scope: !7758)
!7836 = !DILocation(line: 1784, column: 13, scope: !7758)
!7837 = !DILocation(line: 1784, column: 3, scope: !7758)
!7838 = !DILocation(line: 1785, column: 3, scope: !7758)
!7839 = !DILocalVariable(name: "ent", scope: !7840, file: !3, line: 1788, type: !203)
!7840 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1787, column: 28)
!7841 = !DILocation(line: 1788, column: 25, scope: !7840)
!7842 = !DILocation(line: 1788, column: 31, scope: !7840)
!7843 = !DILocation(line: 1788, column: 36, scope: !7840)
!7844 = !DILocalVariable(name: "cmd", scope: !7840, file: !3, line: 1789, type: !214)
!7845 = !DILocation(line: 1789, column: 21, scope: !7840)
!7846 = !DILocation(line: 1789, column: 27, scope: !7840)
!7847 = !DILocation(line: 1789, column: 32, scope: !7840)
!7848 = !DILocalVariable(name: "bytes_sent", scope: !7840, file: !3, line: 1790, type: !232)
!7849 = !DILocation(line: 1790, column: 7, scope: !7840)
!7850 = !DILocation(line: 1792, column: 7, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 1792, column: 7)
!7852 = !DILocation(line: 1792, column: 12, scope: !7851)
!7853 = !DILocation(line: 1792, column: 17, scope: !7851)
!7854 = !DILocation(line: 1792, column: 27, scope: !7851)
!7855 = !DILocation(line: 1792, column: 7, scope: !7840)
!7856 = !DILocation(line: 1793, column: 4, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 1792, column: 33)
!7858 = !DILocation(line: 1795, column: 23, scope: !7857)
!7859 = !DILocation(line: 1795, column: 4, scope: !7857)
!7860 = !DILocation(line: 1796, column: 4, scope: !7857)
!7861 = !DILocation(line: 1799, column: 7, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 1799, column: 7)
!7863 = !DILocation(line: 1799, column: 12, scope: !7862)
!7864 = !DILocation(line: 1799, column: 18, scope: !7862)
!7865 = !DILocation(line: 1799, column: 7, scope: !7840)
!7866 = !DILocation(line: 1802, column: 4, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7862, file: !3, line: 1799, column: 40)
!7868 = !DILocation(line: 1802, column: 9, scope: !7867)
!7869 = !DILocation(line: 1802, column: 14, scope: !7867)
!7870 = !DILocation(line: 1802, column: 24, scope: !7867)
!7871 = !DILocation(line: 1803, column: 3, scope: !7867)
!7872 = !DILocation(line: 1804, column: 3, scope: !7840)
!7873 = !DILocation(line: 1804, column: 8, scope: !7840)
!7874 = !DILocation(line: 1804, column: 13, scope: !7840)
!7875 = !DILocation(line: 1804, column: 28, scope: !7840)
!7876 = !DILocation(line: 1806, column: 7, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 1806, column: 7)
!7878 = !DILocation(line: 1806, column: 12, scope: !7877)
!7879 = !DILocation(line: 1806, column: 17, scope: !7877)
!7880 = !DILocation(line: 1806, column: 7, scope: !7840)
!7881 = !DILocation(line: 1810, column: 4, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 1806, column: 36)
!7883 = !DILocation(line: 1812, column: 23, scope: !7882)
!7884 = !DILocation(line: 1812, column: 4, scope: !7882)
!7885 = !DILocation(line: 1813, column: 4, scope: !7882)
!7886 = !DILocation(line: 1816, column: 36, scope: !7840)
!7887 = !DILocation(line: 1816, column: 41, scope: !7840)
!7888 = !DILocation(line: 1816, column: 46, scope: !7840)
!7889 = !DILocation(line: 1816, column: 16, scope: !7840)
!7890 = !DILocation(line: 1816, column: 14, scope: !7840)
!7891 = !DILocation(line: 1818, column: 3, scope: !7840)
!7892 = !DILocation(line: 1818, column: 3, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 1818, column: 3)
!7894 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 1818, column: 3)
!7895 = !DILocation(line: 1818, column: 3, scope: !7894)
!7896 = !DILocation(line: 1821, column: 7, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 1821, column: 7)
!7898 = !DILocation(line: 1821, column: 18, scope: !7897)
!7899 = !DILocation(line: 1821, column: 7, scope: !7840)
!7900 = !DILocation(line: 1823, column: 23, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 1821, column: 23)
!7902 = !DILocation(line: 1823, column: 4, scope: !7901)
!7903 = !DILocation(line: 1824, column: 4, scope: !7901)
!7904 = !DILocation(line: 1827, column: 19, scope: !7840)
!7905 = !DILocation(line: 1827, column: 24, scope: !7840)
!7906 = !DILocation(line: 1827, column: 29, scope: !7840)
!7907 = !DILocation(line: 1827, column: 34, scope: !7840)
!7908 = !DILocation(line: 1827, column: 3, scope: !7840)
!7909 = !DILocation(line: 1828, column: 13, scope: !7840)
!7910 = !DILocation(line: 1828, column: 3, scope: !7840)
!7911 = !DILocation(line: 1829, column: 3, scope: !7840)
!7912 = !DILocalVariable(name: "ent", scope: !7913, file: !3, line: 1833, type: !203)
!7913 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1832, column: 25)
!7914 = !DILocation(line: 1833, column: 25, scope: !7913)
!7915 = !DILocation(line: 1833, column: 31, scope: !7913)
!7916 = !DILocation(line: 1833, column: 36, scope: !7913)
!7917 = !DILocation(line: 1835, column: 7, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 1835, column: 7)
!7919 = !DILocation(line: 1835, column: 12, scope: !7918)
!7920 = !DILocation(line: 1835, column: 17, scope: !7918)
!7921 = !DILocation(line: 1835, column: 7, scope: !7913)
!7922 = !DILocation(line: 1836, column: 18, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1835, column: 35)
!7924 = !DILocation(line: 1836, column: 4, scope: !7923)
!7925 = !DILocation(line: 1836, column: 9, scope: !7923)
!7926 = !DILocation(line: 1836, column: 16, scope: !7923)
!7927 = !DILocation(line: 1837, column: 19, scope: !7923)
!7928 = !DILocation(line: 1837, column: 4, scope: !7923)
!7929 = !DILocation(line: 1837, column: 9, scope: !7923)
!7930 = !DILocation(line: 1837, column: 17, scope: !7923)
!7931 = !DILocation(line: 1838, column: 17, scope: !7923)
!7932 = !DILocation(line: 1838, column: 4, scope: !7923)
!7933 = !DILocation(line: 1839, column: 3, scope: !7923)
!7934 = !DILocation(line: 1839, column: 14, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1839, column: 14)
!7936 = !DILocation(line: 1839, column: 19, scope: !7935)
!7937 = !DILocation(line: 1839, column: 24, scope: !7935)
!7938 = !DILocation(line: 1839, column: 14, scope: !7918)
!7939 = !DILocation(line: 1840, column: 18, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 1839, column: 43)
!7941 = !DILocation(line: 1840, column: 4, scope: !7940)
!7942 = !DILocation(line: 1840, column: 9, scope: !7940)
!7943 = !DILocation(line: 1840, column: 16, scope: !7940)
!7944 = !DILocation(line: 1841, column: 4, scope: !7940)
!7945 = !DILocation(line: 1841, column: 9, scope: !7940)
!7946 = !DILocation(line: 1841, column: 17, scope: !7940)
!7947 = !DILocation(line: 1842, column: 14, scope: !7940)
!7948 = !DILocation(line: 1842, column: 4, scope: !7940)
!7949 = !DILocation(line: 1843, column: 4, scope: !7940)
!7950 = !DILocation(line: 1846, column: 7, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 1846, column: 7)
!7952 = !DILocation(line: 1846, column: 12, scope: !7951)
!7953 = !DILocation(line: 1846, column: 20, scope: !7951)
!7954 = !DILocation(line: 1846, column: 7, scope: !7913)
!7955 = !DILocation(line: 1847, column: 4, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 1846, column: 41)
!7957 = !DILocation(line: 1850, column: 23, scope: !7956)
!7958 = !DILocation(line: 1850, column: 4, scope: !7956)
!7959 = !DILocation(line: 1851, column: 4, scope: !7956)
!7960 = !DILocation(line: 1854, column: 13, scope: !7913)
!7961 = !DILocation(line: 1854, column: 3, scope: !7913)
!7962 = !DILocation(line: 1855, column: 3, scope: !7913)
!7963 = !DILocation(line: 1855, column: 8, scope: !7913)
!7964 = !DILocation(line: 1855, column: 14, scope: !7913)
!7965 = !DILocation(line: 1856, column: 3, scope: !7913)
!7966 = !DILocalVariable(name: "ent", scope: !7967, file: !3, line: 1859, type: !203)
!7967 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1858, column: 27)
!7968 = !DILocation(line: 1859, column: 25, scope: !7967)
!7969 = !DILocation(line: 1859, column: 31, scope: !7967)
!7970 = !DILocation(line: 1859, column: 36, scope: !7967)
!7971 = !DILocalVariable(name: "cmd", scope: !7967, file: !3, line: 1860, type: !214)
!7972 = !DILocation(line: 1860, column: 21, scope: !7967)
!7973 = !DILocation(line: 1860, column: 27, scope: !7967)
!7974 = !DILocation(line: 1860, column: 32, scope: !7967)
!7975 = !DILocation(line: 1862, column: 7, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1862, column: 7)
!7977 = !DILocation(line: 1862, column: 12, scope: !7976)
!7978 = !DILocation(line: 1862, column: 20, scope: !7976)
!7979 = !DILocation(line: 1862, column: 40, scope: !7976)
!7980 = !DILocation(line: 1863, column: 7, scope: !7976)
!7981 = !DILocation(line: 1863, column: 12, scope: !7976)
!7982 = !DILocation(line: 1863, column: 20, scope: !7976)
!7983 = !DILocation(line: 1862, column: 7, scope: !7967)
!7984 = !DILocation(line: 1864, column: 17, scope: !7976)
!7985 = !DILocation(line: 1864, column: 4, scope: !7976)
!7986 = !DILocation(line: 1866, column: 7, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1866, column: 7)
!7988 = !DILocation(line: 1866, column: 12, scope: !7987)
!7989 = !DILocation(line: 1866, column: 20, scope: !7987)
!7990 = !DILocation(line: 1866, column: 7, scope: !7967)
!7991 = !DILocation(line: 1867, column: 4, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 1866, column: 41)
!7993 = !DILocation(line: 1867, column: 4, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1867, column: 4)
!7995 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1867, column: 4)
!7996 = !DILocation(line: 1867, column: 4, scope: !7995)
!7997 = !DILocation(line: 1869, column: 8, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1869, column: 8)
!7999 = !DILocation(line: 1869, column: 13, scope: !7998)
!8000 = !DILocation(line: 1869, column: 20, scope: !7998)
!8001 = !DILocation(line: 1869, column: 8, scope: !7992)
!8002 = !DILocation(line: 1870, column: 26, scope: !7998)
!8003 = !DILocation(line: 1870, column: 31, scope: !7998)
!8004 = !DILocation(line: 1870, column: 5, scope: !7998)
!8005 = !DILocation(line: 1872, column: 8, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1872, column: 8)
!8007 = !DILocation(line: 1872, column: 13, scope: !8006)
!8008 = !DILocation(line: 1872, column: 20, scope: !8006)
!8009 = !DILocation(line: 1872, column: 48, scope: !8006)
!8010 = !DILocation(line: 1873, column: 10, scope: !8006)
!8011 = !DILocation(line: 1873, column: 15, scope: !8006)
!8012 = !DILocation(line: 1873, column: 21, scope: !8006)
!8013 = !DILocation(line: 1872, column: 8, scope: !7992)
!8014 = !DILocation(line: 1874, column: 5, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 1873, column: 48)
!8016 = !DILocation(line: 1874, column: 10, scope: !8015)
!8017 = !DILocation(line: 1874, column: 16, scope: !8015)
!8018 = !DILocation(line: 1875, column: 19, scope: !8015)
!8019 = !DILocation(line: 1875, column: 24, scope: !8015)
!8020 = !DILocation(line: 1875, column: 5, scope: !8015)
!8021 = !DILocation(line: 1876, column: 4, scope: !8015)
!8022 = !DILocation(line: 1877, column: 21, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 1876, column: 11)
!8024 = !DILocation(line: 1877, column: 26, scope: !8023)
!8025 = !DILocation(line: 1877, column: 31, scope: !8023)
!8026 = !DILocation(line: 1878, column: 22, scope: !8023)
!8027 = !DILocation(line: 1878, column: 27, scope: !8023)
!8028 = !DILocation(line: 1879, column: 15, scope: !8023)
!8029 = !DILocation(line: 1879, column: 20, scope: !8023)
!8030 = !DILocation(line: 1878, column: 7, scope: !8023)
!8031 = !DILocation(line: 1877, column: 5, scope: !8023)
!8032 = !DILocation(line: 1882, column: 3, scope: !7992)
!8033 = !DILocation(line: 1882, column: 14, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 1882, column: 14)
!8035 = !DILocation(line: 1882, column: 19, scope: !8034)
!8036 = !DILocation(line: 1882, column: 27, scope: !8034)
!8037 = !DILocation(line: 1882, column: 14, scope: !7987)
!8038 = !DILocation(line: 1883, column: 4, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 1882, column: 42)
!8040 = !DILocation(line: 1883, column: 4, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 1883, column: 4)
!8042 = distinct !DILexicalBlock(scope: !8039, file: !3, line: 1883, column: 4)
!8043 = !DILocation(line: 1883, column: 4, scope: !8042)
!8044 = !DILocation(line: 1887, column: 4, scope: !8039)
!8045 = !DILocation(line: 1887, column: 9, scope: !8039)
!8046 = !DILocation(line: 1887, column: 20, scope: !8039)
!8047 = !DILocation(line: 1888, column: 30, scope: !8039)
!8048 = !DILocation(line: 1888, column: 4, scope: !8039)
!8049 = !DILocation(line: 1889, column: 3, scope: !8039)
!8050 = !DILocation(line: 1890, column: 4, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 1889, column: 10)
!8052 = !DILocation(line: 1893, column: 23, scope: !8051)
!8053 = !DILocation(line: 1893, column: 4, scope: !8051)
!8054 = !DILocation(line: 1894, column: 4, scope: !8051)
!8055 = !DILocation(line: 1896, column: 7, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1896, column: 7)
!8057 = !DILocation(line: 1896, column: 12, scope: !8056)
!8058 = !DILocation(line: 1896, column: 7, scope: !7967)
!8059 = !DILocation(line: 1897, column: 4, scope: !8056)
!8060 = !DILocation(line: 1897, column: 9, scope: !8056)
!8061 = !DILocation(line: 1897, column: 15, scope: !8056)
!8062 = !DILocation(line: 1898, column: 3, scope: !7967)
!8063 = !DILocation(line: 1901, column: 16, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1900, column: 25)
!8065 = !DILocation(line: 1901, column: 3, scope: !8064)
!8066 = !DILocation(line: 1903, column: 7, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 1903, column: 7)
!8068 = !DILocation(line: 1903, column: 17, scope: !8067)
!8069 = !DILocation(line: 1903, column: 7, scope: !8064)
!8070 = !DILocalVariable(name: "i", scope: !8071, file: !3, line: 1904, type: !232)
!8071 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 1903, column: 37)
!8072 = !DILocation(line: 1904, column: 8, scope: !8071)
!8073 = !DILocation(line: 1905, column: 4, scope: !8071)
!8074 = !DILocation(line: 1906, column: 11, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 1906, column: 4)
!8076 = !DILocation(line: 1906, column: 9, scope: !8075)
!8077 = !DILocation(line: 1906, column: 16, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 1906, column: 4)
!8079 = !DILocation(line: 1906, column: 20, scope: !8078)
!8080 = !DILocation(line: 1906, column: 25, scope: !8078)
!8081 = !DILocation(line: 1906, column: 18, scope: !8078)
!8082 = !DILocation(line: 1906, column: 4, scope: !8075)
!8083 = !DILocation(line: 1907, column: 21, scope: !8078)
!8084 = !DILocation(line: 1907, column: 26, scope: !8078)
!8085 = !DILocation(line: 1907, column: 34, scope: !8078)
!8086 = !DILocation(line: 1907, column: 5, scope: !8078)
!8087 = !DILocation(line: 1906, column: 39, scope: !8078)
!8088 = !DILocation(line: 1906, column: 4, scope: !8078)
!8089 = distinct !{!8089, !8082, !8090}
!8090 = !DILocation(line: 1907, column: 36, scope: !8075)
!8091 = !DILocation(line: 1908, column: 4, scope: !8071)
!8092 = !DILocation(line: 1909, column: 3, scope: !8071)
!8093 = !DILocation(line: 1911, column: 7, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 1911, column: 7)
!8095 = !DILocation(line: 1911, column: 12, scope: !8094)
!8096 = !DILocation(line: 1911, column: 16, scope: !8094)
!8097 = !DILocation(line: 1911, column: 7, scope: !8064)
!8098 = !DILocalVariable(name: "i", scope: !8099, file: !3, line: 1912, type: !232)
!8099 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 1911, column: 27)
!8100 = !DILocation(line: 1912, column: 8, scope: !8099)
!8101 = !DILocation(line: 1915, column: 11, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 1915, column: 4)
!8103 = !DILocation(line: 1915, column: 9, scope: !8102)
!8104 = !DILocation(line: 1915, column: 16, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 1915, column: 4)
!8106 = !DILocation(line: 1915, column: 20, scope: !8105)
!8107 = !DILocation(line: 1915, column: 25, scope: !8105)
!8108 = !DILocation(line: 1915, column: 18, scope: !8105)
!8109 = !DILocation(line: 1915, column: 4, scope: !8102)
!8110 = !DILocation(line: 1916, column: 5, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8105, file: !3, line: 1915, column: 43)
!8112 = !DILocation(line: 1917, column: 5, scope: !8111)
!8113 = !DILocation(line: 1918, column: 4, scope: !8111)
!8114 = !DILocation(line: 1915, column: 39, scope: !8105)
!8115 = !DILocation(line: 1915, column: 4, scope: !8105)
!8116 = distinct !{!8116, !8109, !8117}
!8117 = !DILocation(line: 1918, column: 4, scope: !8102)
!8118 = !DILocation(line: 1919, column: 17, scope: !8099)
!8119 = !DILocation(line: 1919, column: 4, scope: !8099)
!8120 = !DILocation(line: 1920, column: 3, scope: !8099)
!8121 = !DILocation(line: 1921, column: 8, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 1921, column: 8)
!8123 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 1920, column: 10)
!8124 = !DILocation(line: 1921, column: 13, scope: !8122)
!8125 = !DILocation(line: 1921, column: 25, scope: !8122)
!8126 = !DILocation(line: 1921, column: 8, scope: !8123)
!8127 = !DILocation(line: 1922, column: 5, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 1921, column: 31)
!8129 = !DILocation(line: 1923, column: 18, scope: !8128)
!8130 = !DILocation(line: 1923, column: 5, scope: !8128)
!8131 = !DILocation(line: 1924, column: 4, scope: !8128)
!8132 = !DILocation(line: 1924, column: 15, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 1924, column: 15)
!8134 = !DILocation(line: 1924, column: 20, scope: !8133)
!8135 = !DILocation(line: 1924, column: 26, scope: !8133)
!8136 = !DILocation(line: 1924, column: 15, scope: !8122)
!8137 = !DILocation(line: 1925, column: 12, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 1925, column: 5)
!8139 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1924, column: 47)
!8140 = !DILocation(line: 1925, column: 10, scope: !8138)
!8141 = !DILocation(line: 1925, column: 17, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 1925, column: 5)
!8143 = !DILocation(line: 1925, column: 21, scope: !8142)
!8144 = !DILocation(line: 1925, column: 26, scope: !8142)
!8145 = !DILocation(line: 1925, column: 19, scope: !8142)
!8146 = !DILocation(line: 1925, column: 5, scope: !8138)
!8147 = !DILocation(line: 1926, column: 6, scope: !8142)
!8148 = !DILocation(line: 1925, column: 40, scope: !8142)
!8149 = !DILocation(line: 1925, column: 5, scope: !8142)
!8150 = distinct !{!8150, !8146, !8151}
!8151 = !DILocation(line: 1926, column: 6, scope: !8138)
!8152 = !DILocation(line: 1927, column: 18, scope: !8139)
!8153 = !DILocation(line: 1927, column: 5, scope: !8139)
!8154 = !DILocation(line: 1928, column: 4, scope: !8139)
!8155 = !DILocation(line: 1930, column: 12, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1928, column: 11)
!8157 = !DILocation(line: 1930, column: 17, scope: !8156)
!8158 = !DILocation(line: 1931, column: 12, scope: !8156)
!8159 = !DILocation(line: 1931, column: 17, scope: !8156)
!8160 = !DILocation(line: 1930, column: 5, scope: !8156)
!8161 = !DILocation(line: 1932, column: 12, scope: !8156)
!8162 = !DILocation(line: 1932, column: 17, scope: !8156)
!8163 = !DILocation(line: 1934, column: 5, scope: !8156)
!8164 = !DILocation(line: 1934, column: 10, scope: !8156)
!8165 = !DILocation(line: 1934, column: 15, scope: !8156)
!8166 = !DILocation(line: 1934, column: 28, scope: !8156)
!8167 = !DILocation(line: 1935, column: 14, scope: !8156)
!8168 = !DILocation(line: 1935, column: 19, scope: !8156)
!8169 = !DILocation(line: 1936, column: 14, scope: !8156)
!8170 = !DILocation(line: 1936, column: 19, scope: !8156)
!8171 = !DILocation(line: 1937, column: 14, scope: !8156)
!8172 = !DILocation(line: 1937, column: 19, scope: !8156)
!8173 = !DILocation(line: 1942, column: 13, scope: !8064)
!8174 = !DILocation(line: 1942, column: 3, scope: !8064)
!8175 = !DILocation(line: 1943, column: 3, scope: !8064)
!8176 = !DILocation(line: 1946, column: 7, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1946, column: 7)
!8178 = !DILocation(line: 1946, column: 12, scope: !8177)
!8179 = !DILocation(line: 1946, column: 16, scope: !8177)
!8180 = !DILocation(line: 1946, column: 7, scope: !7720)
!8181 = !DILocation(line: 1947, column: 17, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 1946, column: 27)
!8183 = !DILocation(line: 1947, column: 4, scope: !8182)
!8184 = !DILocation(line: 1948, column: 3, scope: !8182)
!8185 = !DILocation(line: 1949, column: 8, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 1949, column: 8)
!8187 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 1948, column: 10)
!8188 = !DILocation(line: 1949, column: 13, scope: !8186)
!8189 = !DILocation(line: 1949, column: 25, scope: !8186)
!8190 = !DILocation(line: 1949, column: 8, scope: !8187)
!8191 = !DILocation(line: 1950, column: 5, scope: !8186)
!8192 = !DILocation(line: 1950, column: 10, scope: !8186)
!8193 = !DILocation(line: 1950, column: 15, scope: !8186)
!8194 = !DILocation(line: 1950, column: 30, scope: !8186)
!8195 = !DILocation(line: 1955, column: 10, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 1955, column: 8)
!8197 = !DILocation(line: 1955, column: 15, scope: !8196)
!8198 = !DILocation(line: 1955, column: 20, scope: !8196)
!8199 = !DILocation(line: 1955, column: 8, scope: !8187)
!8200 = !DILocation(line: 1956, column: 18, scope: !8196)
!8201 = !DILocation(line: 1956, column: 5, scope: !8196)
!8202 = !DILocation(line: 1959, column: 3, scope: !7720)
!8203 = !DILocation(line: 1959, column: 8, scope: !7720)
!8204 = !DILocation(line: 1959, column: 20, scope: !7720)
!8205 = !DILocation(line: 1961, column: 13, scope: !7720)
!8206 = !DILocation(line: 1961, column: 3, scope: !7720)
!8207 = !DILocation(line: 1962, column: 3, scope: !7720)
!8208 = !DILocation(line: 1964, column: 7, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1964, column: 7)
!8210 = !DILocation(line: 1964, column: 12, scope: !8209)
!8211 = !DILocation(line: 1964, column: 17, scope: !8209)
!8212 = !DILocation(line: 1964, column: 7, scope: !7720)
!8213 = !DILocation(line: 1965, column: 8, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 1965, column: 8)
!8215 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 1964, column: 35)
!8216 = !DILocation(line: 1965, column: 13, scope: !8214)
!8217 = !DILocation(line: 1965, column: 17, scope: !8214)
!8218 = !DILocation(line: 1965, column: 8, scope: !8215)
!8219 = !DILocation(line: 1966, column: 11, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 1966, column: 9)
!8221 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 1965, column: 28)
!8222 = !DILocation(line: 1966, column: 34, scope: !8220)
!8223 = !DILocation(line: 1966, column: 9, scope: !8221)
!8224 = !DILocation(line: 1968, column: 19, scope: !8220)
!8225 = !DILocation(line: 1968, column: 6, scope: !8220)
!8226 = !DILocation(line: 1969, column: 4, scope: !8221)
!8227 = !DILocation(line: 1970, column: 18, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 1969, column: 11)
!8229 = !DILocation(line: 1970, column: 5, scope: !8228)
!8230 = !DILocation(line: 1971, column: 9, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 1971, column: 9)
!8232 = !DILocation(line: 1971, column: 14, scope: !8231)
!8233 = !DILocation(line: 1971, column: 18, scope: !8231)
!8234 = !DILocation(line: 1971, column: 9, scope: !8228)
!8235 = !DILocation(line: 1972, column: 19, scope: !8231)
!8236 = !DILocation(line: 1972, column: 6, scope: !8231)
!8237 = !DILocation(line: 1974, column: 17, scope: !8215)
!8238 = !DILocation(line: 1974, column: 4, scope: !8215)
!8239 = !DILocation(line: 1975, column: 4, scope: !8215)
!8240 = !DILocation(line: 1975, column: 9, scope: !8215)
!8241 = !DILocation(line: 1975, column: 15, scope: !8215)
!8242 = !DILocation(line: 1976, column: 4, scope: !8215)
!8243 = !DILocation(line: 1978, column: 7, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1978, column: 7)
!8245 = !DILocation(line: 1978, column: 12, scope: !8244)
!8246 = !DILocation(line: 1978, column: 17, scope: !8244)
!8247 = !DILocation(line: 1978, column: 7, scope: !7720)
!8248 = !DILocalVariable(name: "val", scope: !8249, file: !3, line: 1979, type: !453)
!8249 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 1978, column: 35)
!8250 = !DILocation(line: 1979, column: 7, scope: !8249)
!8251 = !DILocation(line: 1981, column: 8, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 1981, column: 8)
!8253 = !DILocation(line: 1981, column: 13, scope: !8252)
!8254 = !DILocation(line: 1981, column: 17, scope: !8252)
!8255 = !DILocation(line: 1981, column: 8, scope: !8249)
!8256 = !DILocation(line: 1982, column: 11, scope: !8252)
!8257 = !DILocation(line: 1982, column: 16, scope: !8252)
!8258 = !DILocation(line: 1982, column: 9, scope: !8252)
!8259 = !DILocation(line: 1982, column: 5, scope: !8252)
!8260 = !DILocation(line: 1984, column: 11, scope: !8252)
!8261 = !DILocation(line: 1984, column: 9, scope: !8252)
!8262 = !DILocation(line: 1985, column: 37, scope: !8249)
!8263 = !DILocation(line: 1985, column: 4, scope: !8249)
!8264 = !DILocation(line: 1985, column: 9, scope: !8249)
!8265 = !DILocation(line: 1985, column: 16, scope: !8249)
!8266 = !DILocation(line: 1985, column: 21, scope: !8249)
!8267 = !DILocation(line: 1985, column: 31, scope: !8249)
!8268 = !DILocation(line: 1985, column: 35, scope: !8249)
!8269 = !DILocation(line: 1987, column: 4, scope: !8249)
!8270 = !DILocation(line: 1987, column: 4, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 1987, column: 4)
!8272 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 1987, column: 4)
!8273 = !DILocation(line: 1987, column: 4, scope: !8272)
!8274 = !DILocation(line: 1989, column: 27, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 1989, column: 8)
!8276 = !DILocation(line: 1989, column: 9, scope: !8275)
!8277 = !DILocation(line: 1989, column: 8, scope: !8249)
!8278 = !DILocation(line: 1990, column: 5, scope: !8275)
!8279 = !DILocation(line: 1990, column: 10, scope: !8275)
!8280 = !DILocation(line: 1990, column: 21, scope: !8275)
!8281 = !DILocation(line: 1992, column: 8, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 1992, column: 8)
!8283 = !DILocation(line: 1992, column: 13, scope: !8282)
!8284 = !DILocation(line: 1992, column: 17, scope: !8282)
!8285 = !DILocation(line: 1992, column: 8, scope: !8249)
!8286 = !DILocation(line: 1993, column: 18, scope: !8282)
!8287 = !DILocation(line: 1993, column: 5, scope: !8282)
!8288 = !DILocation(line: 1995, column: 17, scope: !8249)
!8289 = !DILocation(line: 1995, column: 4, scope: !8249)
!8290 = !DILocation(line: 1998, column: 8, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 1998, column: 8)
!8292 = !DILocation(line: 1998, column: 13, scope: !8291)
!8293 = !DILocation(line: 1998, column: 19, scope: !8291)
!8294 = !DILocation(line: 1998, column: 8, scope: !8249)
!8295 = !DILocation(line: 1999, column: 5, scope: !8291)
!8296 = !DILocation(line: 2001, column: 8, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 2001, column: 8)
!8298 = !DILocation(line: 2001, column: 13, scope: !8297)
!8299 = !DILocation(line: 2001, column: 19, scope: !8297)
!8300 = !DILocation(line: 2001, column: 8, scope: !8249)
!8301 = !DILocation(line: 2002, column: 15, scope: !8297)
!8302 = !DILocation(line: 2002, column: 5, scope: !8297)
!8303 = !DILocation(line: 2003, column: 3, scope: !8249)
!8304 = !DILocation(line: 2004, column: 4, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 2003, column: 10)
!8306 = !DILocation(line: 2006, column: 23, scope: !8305)
!8307 = !DILocation(line: 2006, column: 4, scope: !8305)
!8308 = !DILocation(line: 2007, column: 4, scope: !8305)
!8309 = !DILocation(line: 2009, column: 3, scope: !7720)
!8310 = !DILocation(line: 2011, column: 10, scope: !7720)
!8311 = !DILocation(line: 2011, column: 15, scope: !7720)
!8312 = !DILocation(line: 2011, column: 30, scope: !7720)
!8313 = !DILocation(line: 2011, column: 35, scope: !7720)
!8314 = !DILocation(line: 2012, column: 10, scope: !7720)
!8315 = !DILocation(line: 2012, column: 15, scope: !7720)
!8316 = !DILocation(line: 2011, column: 3, scope: !7720)
!8317 = !DILocation(line: 2013, column: 20, scope: !7720)
!8318 = !DILocation(line: 2013, column: 25, scope: !7720)
!8319 = !DILocation(line: 2013, column: 30, scope: !7720)
!8320 = !DILocation(line: 2013, column: 3, scope: !7720)
!8321 = !DILocation(line: 2014, column: 13, scope: !7720)
!8322 = !DILocation(line: 2014, column: 3, scope: !7720)
!8323 = !DILocation(line: 2015, column: 3, scope: !7720)
!8324 = !DILocation(line: 2015, column: 8, scope: !7720)
!8325 = !DILocation(line: 2015, column: 14, scope: !7720)
!8326 = !DILocation(line: 2016, column: 3, scope: !7720)
!8327 = !DILocation(line: 2018, column: 3, scope: !7720)
!8328 = !DILocation(line: 2018, column: 8, scope: !7720)
!8329 = !DILocation(line: 2018, column: 13, scope: !7720)
!8330 = !DILocation(line: 2018, column: 28, scope: !7720)
!8331 = !DILocation(line: 2019, column: 7, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 2019, column: 7)
!8333 = !DILocation(line: 2019, column: 12, scope: !8332)
!8334 = !DILocation(line: 2019, column: 17, scope: !8332)
!8335 = !DILocation(line: 2019, column: 7, scope: !7720)
!8336 = !DILocation(line: 2020, column: 14, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8332, file: !3, line: 2019, column: 35)
!8338 = !DILocation(line: 2020, column: 4, scope: !8337)
!8339 = !DILocation(line: 2021, column: 4, scope: !8337)
!8340 = !DILocation(line: 2023, column: 22, scope: !7720)
!8341 = !DILocation(line: 2023, column: 3, scope: !7720)
!8342 = !DILocation(line: 2024, column: 3, scope: !7720)
!8343 = !DILocation(line: 2027, column: 16, scope: !7720)
!8344 = !DILocation(line: 2027, column: 3, scope: !7720)
!8345 = !DILocation(line: 2028, column: 3, scope: !7720)
!8346 = !DILocation(line: 2031, column: 3, scope: !7720)
!8347 = !DILocation(line: 2033, column: 22, scope: !7720)
!8348 = !DILocation(line: 2033, column: 3, scope: !7720)
!8349 = !DILocation(line: 2034, column: 3, scope: !7720)
!8350 = !DILocation(line: 2036, column: 2, scope: !7700)
!8351 = !DILocation(line: 2037, column: 1, scope: !7700)
!8352 = distinct !DISubprogram(name: "list_del", scope: !8353, file: !8353, line: 144, type: !8354, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8353 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!8354 = !DISubroutineType(types: !8355)
!8355 = !{null, !211}
!8356 = !DILocalVariable(name: "entry", arg: 1, scope: !8352, file: !8353, line: 144, type: !211)
!8357 = !DILocation(line: 144, column: 47, scope: !8352)
!8358 = !DILocation(line: 146, column: 19, scope: !8352)
!8359 = !DILocation(line: 146, column: 2, scope: !8352)
!8360 = !DILocation(line: 147, column: 2, scope: !8352)
!8361 = !DILocation(line: 147, column: 9, scope: !8352)
!8362 = !DILocation(line: 147, column: 14, scope: !8352)
!8363 = !DILocation(line: 148, column: 2, scope: !8352)
!8364 = !DILocation(line: 148, column: 9, scope: !8352)
!8365 = !DILocation(line: 148, column: 14, scope: !8352)
!8366 = !DILocation(line: 149, column: 1, scope: !8352)
!8367 = distinct !DISubprogram(name: "esp_put_ent", scope: !3, file: !3, line: 893, type: !8368, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8368 = !DISubroutineType(types: !8369)
!8369 = !{null, !5289, !203}
!8370 = !DILocalVariable(name: "esp", arg: 1, scope: !8367, file: !3, line: 893, type: !5289)
!8371 = !DILocation(line: 893, column: 37, scope: !8367)
!8372 = !DILocalVariable(name: "ent", arg: 2, scope: !8367, file: !3, line: 893, type: !203)
!8373 = !DILocation(line: 893, column: 64, scope: !8367)
!8374 = !DILocation(line: 895, column: 12, scope: !8367)
!8375 = !DILocation(line: 895, column: 17, scope: !8367)
!8376 = !DILocation(line: 895, column: 24, scope: !8367)
!8377 = !DILocation(line: 895, column: 29, scope: !8367)
!8378 = !DILocation(line: 895, column: 2, scope: !8367)
!8379 = !DILocation(line: 896, column: 1, scope: !8367)
!8380 = distinct !DISubprogram(name: "esp_reset_cleanup_one", scope: !3, file: !3, line: 2039, type: !8368, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8381 = !DILocalVariable(name: "esp", arg: 1, scope: !8380, file: !3, line: 2039, type: !5289)
!8382 = !DILocation(line: 2039, column: 47, scope: !8380)
!8383 = !DILocalVariable(name: "ent", arg: 2, scope: !8380, file: !3, line: 2039, type: !203)
!8384 = !DILocation(line: 2039, column: 74, scope: !8380)
!8385 = !DILocalVariable(name: "cmd", scope: !8380, file: !3, line: 2041, type: !214)
!8386 = !DILocation(line: 2041, column: 20, scope: !8380)
!8387 = !DILocation(line: 2041, column: 26, scope: !8380)
!8388 = !DILocation(line: 2041, column: 31, scope: !8380)
!8389 = !DILocation(line: 2043, column: 16, scope: !8380)
!8390 = !DILocation(line: 2043, column: 21, scope: !8380)
!8391 = !DILocation(line: 2043, column: 2, scope: !8380)
!8392 = !DILocation(line: 2044, column: 19, scope: !8380)
!8393 = !DILocation(line: 2044, column: 24, scope: !8380)
!8394 = !DILocation(line: 2044, column: 29, scope: !8380)
!8395 = !DILocation(line: 2044, column: 37, scope: !8380)
!8396 = !DILocation(line: 2044, column: 2, scope: !8380)
!8397 = !DILocation(line: 2045, column: 2, scope: !8380)
!8398 = !DILocation(line: 2045, column: 7, scope: !8380)
!8399 = !DILocation(line: 2045, column: 14, scope: !8380)
!8400 = !DILocation(line: 2047, column: 6, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 2047, column: 6)
!8402 = !DILocation(line: 2047, column: 11, scope: !8401)
!8403 = !DILocation(line: 2047, column: 17, scope: !8401)
!8404 = !DILocation(line: 2047, column: 6, scope: !8380)
!8405 = !DILocation(line: 2048, column: 19, scope: !8401)
!8406 = !DILocation(line: 2048, column: 24, scope: !8401)
!8407 = !DILocation(line: 2048, column: 3, scope: !8401)
!8408 = !DILocation(line: 2050, column: 2, scope: !8380)
!8409 = !DILocation(line: 2050, column: 7, scope: !8380)
!8410 = !DILocation(line: 2050, column: 17, scope: !8380)
!8411 = !DILocation(line: 2051, column: 12, scope: !8380)
!8412 = !DILocation(line: 2051, column: 17, scope: !8380)
!8413 = !DILocation(line: 2051, column: 2, scope: !8380)
!8414 = !DILocation(line: 2052, column: 14, scope: !8380)
!8415 = !DILocation(line: 2052, column: 19, scope: !8380)
!8416 = !DILocation(line: 2052, column: 2, scope: !8380)
!8417 = !DILocation(line: 2053, column: 1, scope: !8380)
!8418 = distinct !DISubprogram(name: "esp_clear_hold", scope: !3, file: !3, line: 2055, type: !8419, scopeLine: 2056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8419 = !DISubroutineType(types: !8420)
!8420 = !{null, !238, !202}
!8421 = !DILocalVariable(name: "dev", arg: 1, scope: !8418, file: !3, line: 2055, type: !238)
!8422 = !DILocation(line: 2055, column: 48, scope: !8418)
!8423 = !DILocalVariable(name: "data", arg: 2, scope: !8418, file: !3, line: 2055, type: !202)
!8424 = !DILocation(line: 2055, column: 59, scope: !8418)
!8425 = !DILocalVariable(name: "lp", scope: !8418, file: !3, line: 2057, type: !6925)
!8426 = !DILocation(line: 2057, column: 23, scope: !8418)
!8427 = !DILocation(line: 2057, column: 28, scope: !8418)
!8428 = !DILocation(line: 2057, column: 33, scope: !8418)
!8429 = !DILocation(line: 2059, column: 2, scope: !8418)
!8430 = !DILocation(line: 2059, column: 2, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 2059, column: 2)
!8432 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 2059, column: 2)
!8433 = !DILocation(line: 2059, column: 2, scope: !8432)
!8434 = !DILocation(line: 2059, column: 2, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 2059, column: 2)
!8436 = !DILocation(line: 2059, column: 2, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 2059, column: 2)
!8438 = !DILocation(line: 2059, column: 2, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 2059, column: 2)
!8440 = !{i32 -2141303998, i32 -2141303969, i32 -2141303923, i32 -2141303865, i32 -2141303811, i32 -2141303757, i32 -2141303702, i32 -2141303671}
!8441 = !DILocation(line: 2059, column: 2, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 2059, column: 2)
!8443 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 2059, column: 2)
!8444 = !{i32 -2141303224, i32 -2141303217, i32 -2141303163, i32 -2141303132, i32 -2141303102}
!8445 = !DILocation(line: 2059, column: 2, scope: !8443)
!8446 = !DILocation(line: 2060, column: 2, scope: !8418)
!8447 = !DILocation(line: 2060, column: 6, scope: !8418)
!8448 = !DILocation(line: 2060, column: 11, scope: !8418)
!8449 = !DILocation(line: 2061, column: 1, scope: !8418)
!8450 = distinct !DISubprogram(name: "__list_del_entry", scope: !8353, file: !8353, line: 130, type: !8354, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8451 = !DILocalVariable(name: "entry", arg: 1, scope: !8450, file: !8353, line: 130, type: !211)
!8452 = !DILocation(line: 130, column: 55, scope: !8450)
!8453 = !DILocation(line: 132, column: 30, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8450, file: !8353, line: 132, column: 6)
!8455 = !DILocation(line: 132, column: 7, scope: !8454)
!8456 = !DILocation(line: 132, column: 6, scope: !8450)
!8457 = !DILocation(line: 133, column: 3, scope: !8454)
!8458 = !DILocation(line: 135, column: 13, scope: !8450)
!8459 = !DILocation(line: 135, column: 20, scope: !8450)
!8460 = !DILocation(line: 135, column: 26, scope: !8450)
!8461 = !DILocation(line: 135, column: 33, scope: !8450)
!8462 = !DILocation(line: 135, column: 2, scope: !8450)
!8463 = !DILocation(line: 136, column: 1, scope: !8450)
!8464 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !8353, file: !8353, line: 51, type: !8465, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8465 = !DISubroutineType(types: !8466)
!8466 = !{!732, !211}
!8467 = !DILocalVariable(name: "entry", arg: 1, scope: !8464, file: !8353, line: 51, type: !211)
!8468 = !DILocation(line: 51, column: 61, scope: !8464)
!8469 = !DILocation(line: 53, column: 2, scope: !8464)
!8470 = distinct !DISubprogram(name: "__list_del", scope: !8353, file: !8353, line: 110, type: !8471, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8471 = !DISubroutineType(types: !8472)
!8472 = !{null, !211, !211}
!8473 = !DILocalVariable(name: "prev", arg: 1, scope: !8470, file: !8353, line: 110, type: !211)
!8474 = !DILocation(line: 110, column: 50, scope: !8470)
!8475 = !DILocalVariable(name: "next", arg: 2, scope: !8470, file: !8353, line: 110, type: !211)
!8476 = !DILocation(line: 110, column: 75, scope: !8470)
!8477 = !DILocation(line: 112, column: 15, scope: !8470)
!8478 = !DILocation(line: 112, column: 2, scope: !8470)
!8479 = !DILocation(line: 112, column: 8, scope: !8470)
!8480 = !DILocation(line: 112, column: 13, scope: !8470)
!8481 = !DILocation(line: 113, column: 2, scope: !8470)
!8482 = !DILocation(line: 113, column: 2, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8470, file: !8353, line: 113, column: 2)
!8484 = !DILocation(line: 113, column: 2, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8483, file: !8353, line: 113, column: 2)
!8486 = !DILocation(line: 113, column: 2, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8483, file: !8353, line: 113, column: 2)
!8488 = !DILocation(line: 114, column: 1, scope: !8470)
!8489 = distinct !DISubprogram(name: "list_add", scope: !8353, file: !8353, line: 84, type: !8471, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8490 = !DILocalVariable(name: "new", arg: 1, scope: !8489, file: !8353, line: 84, type: !211)
!8491 = !DILocation(line: 84, column: 47, scope: !8489)
!8492 = !DILocalVariable(name: "head", arg: 2, scope: !8489, file: !8353, line: 84, type: !211)
!8493 = !DILocation(line: 84, column: 70, scope: !8489)
!8494 = !DILocation(line: 86, column: 13, scope: !8489)
!8495 = !DILocation(line: 86, column: 18, scope: !8489)
!8496 = !DILocation(line: 86, column: 24, scope: !8489)
!8497 = !DILocation(line: 86, column: 30, scope: !8489)
!8498 = !DILocation(line: 86, column: 2, scope: !8489)
!8499 = !DILocation(line: 87, column: 1, scope: !8489)
!8500 = distinct !DISubprogram(name: "__list_add", scope: !8353, file: !8353, line: 63, type: !8501, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8501 = !DISubroutineType(types: !8502)
!8502 = !{null, !211, !211, !211}
!8503 = !DILocalVariable(name: "new", arg: 1, scope: !8500, file: !8353, line: 63, type: !211)
!8504 = !DILocation(line: 63, column: 49, scope: !8500)
!8505 = !DILocalVariable(name: "prev", arg: 2, scope: !8500, file: !8353, line: 64, type: !211)
!8506 = !DILocation(line: 64, column: 28, scope: !8500)
!8507 = !DILocalVariable(name: "next", arg: 3, scope: !8500, file: !8353, line: 65, type: !211)
!8508 = !DILocation(line: 65, column: 28, scope: !8500)
!8509 = !DILocation(line: 67, column: 24, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8500, file: !8353, line: 67, column: 6)
!8511 = !DILocation(line: 67, column: 29, scope: !8510)
!8512 = !DILocation(line: 67, column: 35, scope: !8510)
!8513 = !DILocation(line: 67, column: 7, scope: !8510)
!8514 = !DILocation(line: 67, column: 6, scope: !8500)
!8515 = !DILocation(line: 68, column: 3, scope: !8510)
!8516 = !DILocation(line: 70, column: 15, scope: !8500)
!8517 = !DILocation(line: 70, column: 2, scope: !8500)
!8518 = !DILocation(line: 70, column: 8, scope: !8500)
!8519 = !DILocation(line: 70, column: 13, scope: !8500)
!8520 = !DILocation(line: 71, column: 14, scope: !8500)
!8521 = !DILocation(line: 71, column: 2, scope: !8500)
!8522 = !DILocation(line: 71, column: 7, scope: !8500)
!8523 = !DILocation(line: 71, column: 12, scope: !8500)
!8524 = !DILocation(line: 72, column: 14, scope: !8500)
!8525 = !DILocation(line: 72, column: 2, scope: !8500)
!8526 = !DILocation(line: 72, column: 7, scope: !8500)
!8527 = !DILocation(line: 72, column: 12, scope: !8500)
!8528 = !DILocation(line: 73, column: 2, scope: !8500)
!8529 = !DILocation(line: 73, column: 2, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8500, file: !8353, line: 73, column: 2)
!8531 = !DILocation(line: 73, column: 2, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8530, file: !8353, line: 73, column: 2)
!8533 = !DILocation(line: 73, column: 2, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8530, file: !8353, line: 73, column: 2)
!8535 = !DILocation(line: 74, column: 1, scope: !8500)
!8536 = distinct !DISubprogram(name: "__list_add_valid", scope: !8353, file: !8353, line: 45, type: !8537, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8537 = !DISubroutineType(types: !8538)
!8538 = !{!732, !211, !211, !211}
!8539 = !DILocalVariable(name: "new", arg: 1, scope: !8536, file: !8353, line: 45, type: !211)
!8540 = !DILocation(line: 45, column: 55, scope: !8536)
!8541 = !DILocalVariable(name: "prev", arg: 2, scope: !8536, file: !8353, line: 46, type: !211)
!8542 = !DILocation(line: 46, column: 23, scope: !8536)
!8543 = !DILocalVariable(name: "next", arg: 3, scope: !8536, file: !8353, line: 47, type: !211)
!8544 = !DILocation(line: 47, column: 23, scope: !8536)
!8545 = !DILocation(line: 49, column: 2, scope: !8536)
!8546 = distinct !DISubprogram(name: "esp_unmap_dma", scope: !3, file: !3, line: 459, type: !8547, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{null, !5289, !214}
!8549 = !DILocalVariable(name: "esp", arg: 1, scope: !8546, file: !3, line: 459, type: !5289)
!8550 = !DILocation(line: 459, column: 39, scope: !8546)
!8551 = !DILocalVariable(name: "cmd", arg: 2, scope: !8546, file: !3, line: 459, type: !214)
!8552 = !DILocation(line: 459, column: 62, scope: !8546)
!8553 = !DILocation(line: 461, column: 8, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 461, column: 6)
!8555 = !DILocation(line: 461, column: 13, scope: !8554)
!8556 = !DILocation(line: 461, column: 19, scope: !8554)
!8557 = !DILocation(line: 461, column: 6, scope: !8546)
!8558 = !DILocation(line: 462, column: 18, scope: !8554)
!8559 = !DILocation(line: 462, column: 3, scope: !8554)
!8560 = !DILocation(line: 463, column: 1, scope: !8546)
!8561 = distinct !DISubprogram(name: "esp_free_lun_tag", scope: !3, file: !3, line: 617, type: !8562, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8562 = !DISubroutineType(types: !8563)
!8563 = !{null, !203, !6925}
!8564 = !DILocalVariable(name: "ent", arg: 1, scope: !8561, file: !3, line: 617, type: !203)
!8565 = !DILocation(line: 617, column: 52, scope: !8561)
!8566 = !DILocalVariable(name: "lp", arg: 2, scope: !8561, file: !3, line: 618, type: !6925)
!8567 = !DILocation(line: 618, column: 30, scope: !8561)
!8568 = !DILocation(line: 620, column: 6, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 620, column: 6)
!8570 = !DILocation(line: 620, column: 11, scope: !8569)
!8571 = !DILocation(line: 620, column: 6, scope: !8561)
!8572 = !DILocation(line: 621, column: 3, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 620, column: 24)
!8574 = !DILocation(line: 621, column: 3, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 621, column: 3)
!8576 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 621, column: 3)
!8577 = !DILocation(line: 621, column: 3, scope: !8576)
!8578 = !DILocation(line: 621, column: 3, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 621, column: 3)
!8580 = !DILocation(line: 621, column: 3, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 621, column: 3)
!8582 = !DILocation(line: 621, column: 3, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 621, column: 3)
!8584 = !{i32 -2141326562, i32 -2141326533, i32 -2141326487, i32 -2141326429, i32 -2141326375, i32 -2141326321, i32 -2141326266, i32 -2141326235}
!8585 = !DILocation(line: 621, column: 3, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 621, column: 3)
!8587 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 621, column: 3)
!8588 = !{i32 -2141325789, i32 -2141325782, i32 -2141325728, i32 -2141325697, i32 -2141325667}
!8589 = !DILocation(line: 621, column: 3, scope: !8587)
!8590 = !DILocation(line: 622, column: 3, scope: !8573)
!8591 = !DILocation(line: 622, column: 7, scope: !8573)
!8592 = !DILocation(line: 622, column: 19, scope: !8573)
!8593 = !DILocation(line: 622, column: 24, scope: !8573)
!8594 = !DILocation(line: 622, column: 37, scope: !8573)
!8595 = !DILocation(line: 623, column: 3, scope: !8573)
!8596 = !DILocation(line: 623, column: 7, scope: !8573)
!8597 = !DILocation(line: 623, column: 17, scope: !8573)
!8598 = !DILocation(line: 624, column: 2, scope: !8573)
!8599 = !DILocation(line: 625, column: 3, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 624, column: 9)
!8601 = !DILocation(line: 625, column: 3, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 625, column: 3)
!8603 = distinct !DILexicalBlock(scope: !8600, file: !3, line: 625, column: 3)
!8604 = !DILocation(line: 625, column: 3, scope: !8603)
!8605 = !DILocation(line: 625, column: 3, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 625, column: 3)
!8607 = !DILocation(line: 625, column: 3, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 625, column: 3)
!8609 = !DILocation(line: 625, column: 3, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 625, column: 3)
!8611 = !{i32 -2141325322, i32 -2141325293, i32 -2141325247, i32 -2141325189, i32 -2141325135, i32 -2141325081, i32 -2141325026, i32 -2141324995}
!8612 = !DILocation(line: 625, column: 3, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 625, column: 3)
!8614 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 625, column: 3)
!8615 = !{i32 -2141324549, i32 -2141324542, i32 -2141324488, i32 -2141324457, i32 -2141324427}
!8616 = !DILocation(line: 625, column: 3, scope: !8614)
!8617 = !DILocation(line: 626, column: 3, scope: !8600)
!8618 = !DILocation(line: 626, column: 7, scope: !8600)
!8619 = !DILocation(line: 626, column: 22, scope: !8600)
!8620 = !DILocation(line: 628, column: 1, scope: !8561)
!8621 = distinct !DISubprogram(name: "esp_unmap_sense", scope: !3, file: !3, line: 642, type: !8368, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8622 = !DILocalVariable(name: "esp", arg: 1, scope: !8621, file: !3, line: 642, type: !5289)
!8623 = !DILocation(line: 642, column: 41, scope: !8621)
!8624 = !DILocalVariable(name: "ent", arg: 2, scope: !8621, file: !3, line: 642, type: !203)
!8625 = !DILocation(line: 642, column: 68, scope: !8621)
!8626 = !DILocation(line: 644, column: 8, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 644, column: 6)
!8628 = !DILocation(line: 644, column: 13, scope: !8627)
!8629 = !DILocation(line: 644, column: 19, scope: !8627)
!8630 = !DILocation(line: 644, column: 6, scope: !8621)
!8631 = !DILocation(line: 645, column: 3, scope: !8627)
!8632 = !DILocation(line: 647, column: 2, scope: !8621)
!8633 = !DILocation(line: 647, column: 7, scope: !8621)
!8634 = !DILocation(line: 647, column: 17, scope: !8621)
!8635 = !DILocation(line: 648, column: 1, scope: !8621)
!8636 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !5561, file: !5561, line: 283, type: !8637, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8637 = !DISubroutineType(types: !8638)
!8638 = !{null, !2022, !3884, !867, !146, !201}
!8639 = !DILocalVariable(name: "dev", arg: 1, scope: !8636, file: !5561, line: 283, type: !2022)
!8640 = !DILocation(line: 283, column: 58, scope: !8636)
!8641 = !DILocalVariable(name: "addr", arg: 2, scope: !8636, file: !5561, line: 283, type: !3884)
!8642 = !DILocation(line: 283, column: 74, scope: !8636)
!8643 = !DILocalVariable(name: "size", arg: 3, scope: !8636, file: !5561, line: 284, type: !867)
!8644 = !DILocation(line: 284, column: 10, scope: !8636)
!8645 = !DILocalVariable(name: "dir", arg: 4, scope: !8636, file: !5561, line: 284, type: !146)
!8646 = !DILocation(line: 284, column: 40, scope: !8636)
!8647 = !DILocalVariable(name: "attrs", arg: 5, scope: !8636, file: !5561, line: 284, type: !201)
!8648 = !DILocation(line: 284, column: 59, scope: !8636)
!8649 = !DILocation(line: 286, column: 30, scope: !8636)
!8650 = !DILocation(line: 286, column: 35, scope: !8636)
!8651 = !DILocation(line: 286, column: 41, scope: !8636)
!8652 = !DILocation(line: 286, column: 47, scope: !8636)
!8653 = !DILocation(line: 286, column: 52, scope: !8636)
!8654 = !DILocation(line: 286, column: 9, scope: !8636)
!8655 = !DILocation(line: 286, column: 2, scope: !8636)
!8656 = distinct !DISubprogram(name: "esp_event", scope: !3, file: !3, line: 165, type: !5641, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8657 = !DILocalVariable(name: "esp", arg: 1, scope: !8656, file: !3, line: 165, type: !5289)
!8658 = !DILocation(line: 165, column: 35, scope: !8656)
!8659 = !DILocalVariable(name: "val", arg: 2, scope: !8656, file: !3, line: 165, type: !453)
!8660 = !DILocation(line: 165, column: 43, scope: !8656)
!8661 = !DILocalVariable(name: "p", scope: !8656, file: !3, line: 167, type: !5648)
!8662 = !DILocation(line: 167, column: 24, scope: !8656)
!8663 = !DILocalVariable(name: "idx", scope: !8656, file: !3, line: 168, type: !232)
!8664 = !DILocation(line: 168, column: 6, scope: !8656)
!8665 = !DILocation(line: 168, column: 12, scope: !8656)
!8666 = !DILocation(line: 168, column: 17, scope: !8656)
!8667 = !DILocation(line: 170, column: 7, scope: !8656)
!8668 = !DILocation(line: 170, column: 12, scope: !8656)
!8669 = !DILocation(line: 170, column: 26, scope: !8656)
!8670 = !DILocation(line: 170, column: 4, scope: !8656)
!8671 = !DILocation(line: 171, column: 2, scope: !8656)
!8672 = !DILocation(line: 171, column: 5, scope: !8656)
!8673 = !DILocation(line: 171, column: 10, scope: !8656)
!8674 = !DILocation(line: 172, column: 11, scope: !8656)
!8675 = !DILocation(line: 172, column: 2, scope: !8656)
!8676 = !DILocation(line: 172, column: 5, scope: !8656)
!8677 = !DILocation(line: 172, column: 9, scope: !8656)
!8678 = !DILocation(line: 173, column: 20, scope: !8656)
!8679 = !DILocation(line: 173, column: 25, scope: !8656)
!8680 = !DILocation(line: 173, column: 2, scope: !8656)
!8681 = !DILocation(line: 175, column: 24, scope: !8656)
!8682 = !DILocation(line: 175, column: 28, scope: !8656)
!8683 = !DILocation(line: 175, column: 33, scope: !8656)
!8684 = !DILocation(line: 175, column: 2, scope: !8656)
!8685 = !DILocation(line: 175, column: 7, scope: !8656)
!8686 = !DILocation(line: 175, column: 21, scope: !8656)
!8687 = !DILocation(line: 177, column: 15, scope: !8656)
!8688 = !DILocation(line: 177, column: 2, scope: !8656)
!8689 = !DILocation(line: 177, column: 7, scope: !8656)
!8690 = !DILocation(line: 177, column: 13, scope: !8656)
!8691 = !DILocation(line: 178, column: 1, scope: !8656)
!8692 = distinct !DISubprogram(name: "esp_cmd_is_done", scope: !3, file: !3, line: 898, type: !8693, scopeLine: 900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8693 = !DISubroutineType(types: !8694)
!8694 = !{null, !5289, !203, !214, !7}
!8695 = !DILocalVariable(name: "esp", arg: 1, scope: !8692, file: !3, line: 898, type: !5289)
!8696 = !DILocation(line: 898, column: 41, scope: !8692)
!8697 = !DILocalVariable(name: "ent", arg: 2, scope: !8692, file: !3, line: 898, type: !203)
!8698 = !DILocation(line: 898, column: 68, scope: !8692)
!8699 = !DILocalVariable(name: "cmd", arg: 3, scope: !8692, file: !3, line: 899, type: !214)
!8700 = !DILocation(line: 899, column: 26, scope: !8692)
!8701 = !DILocalVariable(name: "result", arg: 4, scope: !8692, file: !3, line: 899, type: !7)
!8702 = !DILocation(line: 899, column: 44, scope: !8692)
!8703 = !DILocalVariable(name: "dev", scope: !8692, file: !3, line: 901, type: !238)
!8704 = !DILocation(line: 901, column: 22, scope: !8692)
!8705 = !DILocation(line: 901, column: 28, scope: !8692)
!8706 = !DILocation(line: 901, column: 33, scope: !8692)
!8707 = !DILocalVariable(name: "tgt", scope: !8692, file: !3, line: 902, type: !232)
!8708 = !DILocation(line: 902, column: 6, scope: !8692)
!8709 = !DILocation(line: 902, column: 12, scope: !8692)
!8710 = !DILocation(line: 902, column: 17, scope: !8692)
!8711 = !DILocalVariable(name: "lun", scope: !8692, file: !3, line: 903, type: !232)
!8712 = !DILocation(line: 903, column: 6, scope: !8692)
!8713 = !DILocation(line: 903, column: 12, scope: !8692)
!8714 = !DILocation(line: 903, column: 17, scope: !8692)
!8715 = !DILocation(line: 905, column: 2, scope: !8692)
!8716 = !DILocation(line: 905, column: 7, scope: !8692)
!8717 = !DILocation(line: 905, column: 18, scope: !8692)
!8718 = !DILocation(line: 906, column: 16, scope: !8692)
!8719 = !DILocation(line: 906, column: 21, scope: !8692)
!8720 = !DILocation(line: 906, column: 2, scope: !8692)
!8721 = !DILocation(line: 907, column: 19, scope: !8692)
!8722 = !DILocation(line: 907, column: 24, scope: !8692)
!8723 = !DILocation(line: 907, column: 29, scope: !8692)
!8724 = !DILocation(line: 907, column: 2, scope: !8692)
!8725 = !DILocation(line: 908, column: 16, scope: !8692)
!8726 = !DILocation(line: 908, column: 2, scope: !8692)
!8727 = !DILocation(line: 908, column: 7, scope: !8692)
!8728 = !DILocation(line: 908, column: 14, scope: !8692)
!8729 = !DILocation(line: 910, column: 6, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8692, file: !3, line: 910, column: 6)
!8731 = !DILocation(line: 910, column: 11, scope: !8730)
!8732 = !DILocation(line: 910, column: 6, scope: !8692)
!8733 = !DILocation(line: 911, column: 12, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 910, column: 20)
!8735 = !DILocation(line: 911, column: 17, scope: !8734)
!8736 = !DILocation(line: 911, column: 3, scope: !8734)
!8737 = !DILocation(line: 912, column: 3, scope: !8734)
!8738 = !DILocation(line: 912, column: 8, scope: !8734)
!8739 = !DILocation(line: 912, column: 16, scope: !8734)
!8740 = !DILocation(line: 913, column: 2, scope: !8734)
!8741 = !DILocation(line: 915, column: 6, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8692, file: !3, line: 915, column: 6)
!8743 = !DILocation(line: 915, column: 11, scope: !8742)
!8744 = !DILocation(line: 915, column: 17, scope: !8742)
!8745 = !DILocation(line: 915, column: 6, scope: !8692)
!8746 = !DILocation(line: 916, column: 19, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 915, column: 43)
!8748 = !DILocation(line: 916, column: 24, scope: !8747)
!8749 = !DILocation(line: 916, column: 3, scope: !8747)
!8750 = !DILocation(line: 922, column: 3, scope: !8747)
!8751 = !DILocation(line: 922, column: 8, scope: !8747)
!8752 = !DILocation(line: 922, column: 15, scope: !8747)
!8753 = !DILocation(line: 927, column: 3, scope: !8747)
!8754 = !DILocation(line: 927, column: 8, scope: !8747)
!8755 = !DILocation(line: 927, column: 14, scope: !8747)
!8756 = !DILocation(line: 928, column: 7, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 928, column: 7)
!8758 = !DILocation(line: 928, column: 17, scope: !8757)
!8759 = !DILocation(line: 928, column: 7, scope: !8747)
!8760 = !DILocalVariable(name: "i", scope: !8761, file: !3, line: 929, type: !232)
!8761 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 928, column: 40)
!8762 = !DILocation(line: 929, column: 8, scope: !8761)
!8763 = !DILocation(line: 932, column: 11, scope: !8761)
!8764 = !DILocation(line: 932, column: 16, scope: !8761)
!8765 = !DILocation(line: 932, column: 22, scope: !8761)
!8766 = !DILocation(line: 932, column: 33, scope: !8761)
!8767 = !DILocation(line: 932, column: 38, scope: !8761)
!8768 = !DILocation(line: 931, column: 4, scope: !8761)
!8769 = !DILocation(line: 933, column: 11, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8761, file: !3, line: 933, column: 4)
!8771 = !DILocation(line: 933, column: 9, scope: !8770)
!8772 = !DILocation(line: 933, column: 16, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 933, column: 4)
!8774 = !DILocation(line: 933, column: 18, scope: !8773)
!8775 = !DILocation(line: 933, column: 4, scope: !8770)
!8776 = !DILocation(line: 934, column: 21, scope: !8773)
!8777 = !DILocation(line: 934, column: 26, scope: !8773)
!8778 = !DILocation(line: 934, column: 39, scope: !8773)
!8779 = !DILocation(line: 934, column: 5, scope: !8773)
!8780 = !DILocation(line: 933, column: 25, scope: !8773)
!8781 = !DILocation(line: 933, column: 4, scope: !8773)
!8782 = distinct !{!8782, !8775, !8783}
!8783 = !DILocation(line: 934, column: 41, scope: !8770)
!8784 = !DILocation(line: 935, column: 4, scope: !8761)
!8785 = !DILocation(line: 936, column: 3, scope: !8761)
!8786 = !DILocation(line: 937, column: 2, scope: !8747)
!8787 = !DILocation(line: 939, column: 2, scope: !8692)
!8788 = !DILocation(line: 939, column: 7, scope: !8692)
!8789 = !DILocation(line: 939, column: 17, scope: !8692)
!8790 = !DILocation(line: 941, column: 12, scope: !8692)
!8791 = !DILocation(line: 941, column: 17, scope: !8692)
!8792 = !DILocation(line: 941, column: 2, scope: !8692)
!8793 = !DILocation(line: 942, column: 14, scope: !8692)
!8794 = !DILocation(line: 942, column: 19, scope: !8692)
!8795 = !DILocation(line: 942, column: 2, scope: !8692)
!8796 = !DILocation(line: 944, column: 28, scope: !8692)
!8797 = !DILocation(line: 944, column: 2, scope: !8692)
!8798 = !DILocation(line: 945, column: 1, scope: !8692)
!8799 = distinct !DISubprogram(name: "list_move", scope: !8353, file: !8353, line: 213, type: !8471, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8800 = !DILocalVariable(name: "list", arg: 1, scope: !8799, file: !8353, line: 213, type: !211)
!8801 = !DILocation(line: 213, column: 48, scope: !8799)
!8802 = !DILocalVariable(name: "head", arg: 2, scope: !8799, file: !8353, line: 213, type: !211)
!8803 = !DILocation(line: 213, column: 72, scope: !8799)
!8804 = !DILocation(line: 215, column: 19, scope: !8799)
!8805 = !DILocation(line: 215, column: 2, scope: !8799)
!8806 = !DILocation(line: 216, column: 11, scope: !8799)
!8807 = !DILocation(line: 216, column: 17, scope: !8799)
!8808 = !DILocation(line: 216, column: 2, scope: !8799)
!8809 = !DILocation(line: 217, column: 1, scope: !8799)
!8810 = distinct !DISubprogram(name: "esp_flush_fifo", scope: !3, file: !3, line: 201, type: !5315, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8811 = !DILocalVariable(name: "esp", arg: 1, scope: !8810, file: !3, line: 201, type: !5289)
!8812 = !DILocation(line: 201, column: 40, scope: !8810)
!8813 = !DILocation(line: 203, column: 15, scope: !8810)
!8814 = !DILocation(line: 203, column: 2, scope: !8810)
!8815 = !DILocation(line: 204, column: 6, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8810, file: !3, line: 204, column: 6)
!8817 = !DILocation(line: 204, column: 11, scope: !8816)
!8818 = !DILocation(line: 204, column: 15, scope: !8816)
!8819 = !DILocation(line: 204, column: 6, scope: !8810)
!8820 = !DILocalVariable(name: "lim", scope: !8821, file: !3, line: 205, type: !232)
!8821 = distinct !DILexicalBlock(scope: !8816, file: !3, line: 204, column: 26)
!8822 = !DILocation(line: 205, column: 7, scope: !8821)
!8823 = !DILocation(line: 207, column: 3, scope: !8821)
!8824 = !DILocation(line: 207, column: 10, scope: !8821)
!8825 = !DILocation(line: 207, column: 32, scope: !8821)
!8826 = !DILocation(line: 208, column: 8, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 208, column: 8)
!8828 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 207, column: 49)
!8829 = !DILocation(line: 208, column: 14, scope: !8827)
!8830 = !DILocation(line: 208, column: 8, scope: !8828)
!8831 = !DILocation(line: 209, column: 5, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 208, column: 20)
!8833 = !DILocation(line: 211, column: 5, scope: !8832)
!8834 = !DILocation(line: 213, column: 4, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 213, column: 4)
!8836 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 213, column: 4)
!8837 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 213, column: 4)
!8838 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 213, column: 4)
!8839 = distinct !{!8839, !8823, !8840}
!8840 = !DILocation(line: 214, column: 3, scope: !8821)
!8841 = !DILocation(line: 215, column: 2, scope: !8821)
!8842 = !DILocation(line: 216, column: 1, scope: !8810)
!8843 = distinct !DISubprogram(name: "esp_maybe_execute_command", scope: !3, file: !3, line: 735, type: !5315, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!8844 = !DILocalVariable(name: "esp", arg: 1, scope: !8843, file: !3, line: 735, type: !5289)
!8845 = !DILocation(line: 735, column: 51, scope: !8843)
!8846 = !DILocalVariable(name: "tp", scope: !8843, file: !3, line: 737, type: !6918)
!8847 = !DILocation(line: 737, column: 26, scope: !8843)
!8848 = !DILocalVariable(name: "dev", scope: !8843, file: !3, line: 738, type: !238)
!8849 = !DILocation(line: 738, column: 22, scope: !8843)
!8850 = !DILocalVariable(name: "cmd", scope: !8843, file: !3, line: 739, type: !214)
!8851 = !DILocation(line: 739, column: 20, scope: !8843)
!8852 = !DILocalVariable(name: "ent", scope: !8843, file: !3, line: 740, type: !203)
!8853 = !DILocation(line: 740, column: 24, scope: !8843)
!8854 = !DILocalVariable(name: "select_and_stop", scope: !8843, file: !3, line: 741, type: !732)
!8855 = !DILocation(line: 741, column: 7, scope: !8843)
!8856 = !DILocalVariable(name: "tgt", scope: !8843, file: !3, line: 742, type: !232)
!8857 = !DILocation(line: 742, column: 6, scope: !8843)
!8858 = !DILocalVariable(name: "lun", scope: !8843, file: !3, line: 742, type: !232)
!8859 = !DILocation(line: 742, column: 11, scope: !8843)
!8860 = !DILocalVariable(name: "i", scope: !8843, file: !3, line: 742, type: !232)
!8861 = !DILocation(line: 742, column: 16, scope: !8843)
!8862 = !DILocalVariable(name: "val", scope: !8843, file: !3, line: 743, type: !296)
!8863 = !DILocation(line: 743, column: 6, scope: !8843)
!8864 = !DILocalVariable(name: "start_cmd", scope: !8843, file: !3, line: 743, type: !296)
!8865 = !DILocation(line: 743, column: 11, scope: !8843)
!8866 = !DILocalVariable(name: "p", scope: !8843, file: !3, line: 744, type: !5330)
!8867 = !DILocation(line: 744, column: 6, scope: !8843)
!8868 = !DILocation(line: 746, column: 6, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 746, column: 6)
!8870 = !DILocation(line: 746, column: 11, scope: !8869)
!8871 = !DILocation(line: 746, column: 22, scope: !8869)
!8872 = !DILocation(line: 747, column: 7, scope: !8869)
!8873 = !DILocation(line: 747, column: 12, scope: !8869)
!8874 = !DILocation(line: 747, column: 18, scope: !8869)
!8875 = !DILocation(line: 746, column: 6, scope: !8843)
!8876 = !DILocation(line: 748, column: 3, scope: !8869)
!8877 = !DILocation(line: 750, column: 39, scope: !8843)
!8878 = !DILocation(line: 750, column: 8, scope: !8843)
!8879 = !DILocation(line: 750, column: 6, scope: !8843)
!8880 = !DILocation(line: 751, column: 7, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 751, column: 6)
!8882 = !DILocation(line: 751, column: 6, scope: !8843)
!8883 = !DILocation(line: 752, column: 3, scope: !8881)
!8884 = !DILocation(line: 754, column: 6, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 754, column: 6)
!8886 = !DILocation(line: 754, column: 11, scope: !8885)
!8887 = !DILocation(line: 754, column: 17, scope: !8885)
!8888 = !DILocation(line: 754, column: 6, scope: !8843)
!8889 = !DILocation(line: 755, column: 17, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 754, column: 43)
!8891 = !DILocation(line: 755, column: 22, scope: !8890)
!8892 = !DILocation(line: 755, column: 3, scope: !8890)
!8893 = !DILocation(line: 756, column: 3, scope: !8890)
!8894 = !DILocation(line: 759, column: 8, scope: !8843)
!8895 = !DILocation(line: 759, column: 13, scope: !8843)
!8896 = !DILocation(line: 759, column: 6, scope: !8843)
!8897 = !DILocation(line: 760, column: 8, scope: !8843)
!8898 = !DILocation(line: 760, column: 13, scope: !8843)
!8899 = !DILocation(line: 760, column: 6, scope: !8843)
!8900 = !DILocation(line: 761, column: 8, scope: !8843)
!8901 = !DILocation(line: 761, column: 13, scope: !8843)
!8902 = !DILocation(line: 761, column: 6, scope: !8843)
!8903 = !DILocation(line: 762, column: 8, scope: !8843)
!8904 = !DILocation(line: 762, column: 13, scope: !8843)
!8905 = !DILocation(line: 762, column: 6, scope: !8843)
!8906 = !DILocation(line: 763, column: 8, scope: !8843)
!8907 = !DILocation(line: 763, column: 13, scope: !8843)
!8908 = !DILocation(line: 763, column: 20, scope: !8843)
!8909 = !DILocation(line: 763, column: 5, scope: !8843)
!8910 = !DILocation(line: 765, column: 13, scope: !8843)
!8911 = !DILocation(line: 765, column: 18, scope: !8843)
!8912 = !DILocation(line: 765, column: 25, scope: !8843)
!8913 = !DILocation(line: 765, column: 30, scope: !8843)
!8914 = !DILocation(line: 765, column: 2, scope: !8843)
!8915 = !DILocation(line: 767, column: 20, scope: !8843)
!8916 = !DILocation(line: 767, column: 2, scope: !8843)
!8917 = !DILocation(line: 767, column: 7, scope: !8843)
!8918 = !DILocation(line: 767, column: 18, scope: !8843)
!8919 = !DILocation(line: 769, column: 14, scope: !8843)
!8920 = !DILocation(line: 769, column: 19, scope: !8843)
!8921 = !DILocation(line: 769, column: 2, scope: !8843)
!8922 = !DILocation(line: 770, column: 20, scope: !8843)
!8923 = !DILocation(line: 770, column: 25, scope: !8843)
!8924 = !DILocation(line: 770, column: 2, scope: !8843)
!8925 = !DILocation(line: 772, column: 8, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 772, column: 6)
!8927 = !DILocation(line: 772, column: 13, scope: !8926)
!8928 = !DILocation(line: 772, column: 21, scope: !8926)
!8929 = !DILocation(line: 772, column: 26, scope: !8926)
!8930 = !DILocation(line: 772, column: 29, scope: !8926)
!8931 = !DILocation(line: 772, column: 34, scope: !8926)
!8932 = !DILocation(line: 772, column: 42, scope: !8926)
!8933 = !DILocation(line: 772, column: 48, scope: !8926)
!8934 = !DILocation(line: 772, column: 51, scope: !8926)
!8935 = !DILocation(line: 772, column: 56, scope: !8926)
!8936 = !DILocation(line: 772, column: 64, scope: !8926)
!8937 = !DILocation(line: 772, column: 6, scope: !8843)
!8938 = !DILocation(line: 773, column: 19, scope: !8926)
!8939 = !DILocation(line: 773, column: 3, scope: !8926)
!8940 = !DILocation(line: 775, column: 6, scope: !8843)
!8941 = !DILocation(line: 775, column: 11, scope: !8843)
!8942 = !DILocation(line: 775, column: 4, scope: !8843)
!8943 = !DILocation(line: 777, column: 2, scope: !8843)
!8944 = !DILocation(line: 777, column: 7, scope: !8843)
!8945 = !DILocation(line: 777, column: 19, scope: !8843)
!8946 = !DILocation(line: 778, column: 6, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 778, column: 6)
!8948 = !DILocation(line: 778, column: 10, scope: !8947)
!8949 = !DILocation(line: 778, column: 16, scope: !8947)
!8950 = !DILocation(line: 778, column: 6, scope: !8843)
!8951 = !DILocation(line: 782, column: 7, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 782, column: 7)
!8953 = distinct !DILexicalBlock(scope: !8947, file: !3, line: 778, column: 38)
!8954 = !DILocation(line: 782, column: 11, scope: !8952)
!8955 = !DILocation(line: 782, column: 17, scope: !8952)
!8956 = !DILocation(line: 782, column: 7, scope: !8953)
!8957 = !DILocation(line: 783, column: 4, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8952, file: !3, line: 782, column: 35)
!8959 = !DILocation(line: 783, column: 8, scope: !8958)
!8960 = !DILocation(line: 783, column: 14, scope: !8958)
!8961 = !DILocation(line: 784, column: 4, scope: !8958)
!8962 = !DILocation(line: 784, column: 8, scope: !8958)
!8963 = !DILocation(line: 784, column: 25, scope: !8958)
!8964 = !DILocation(line: 785, column: 4, scope: !8958)
!8965 = !DILocation(line: 785, column: 8, scope: !8958)
!8966 = !DILocation(line: 785, column: 25, scope: !8958)
!8967 = !DILocation(line: 786, column: 4, scope: !8958)
!8968 = !DILocation(line: 786, column: 8, scope: !8958)
!8969 = !DILocation(line: 786, column: 24, scope: !8958)
!8970 = !DILocation(line: 787, column: 4, scope: !8958)
!8971 = !DILocation(line: 787, column: 8, scope: !8958)
!8972 = !DILocation(line: 787, column: 23, scope: !8958)
!8973 = !DILocation(line: 788, column: 3, scope: !8958)
!8974 = !DILocation(line: 791, column: 7, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 791, column: 7)
!8976 = !DILocation(line: 791, column: 33, scope: !8975)
!8977 = !DILocation(line: 791, column: 37, scope: !8975)
!8978 = !DILocation(line: 791, column: 30, scope: !8975)
!8979 = !DILocation(line: 791, column: 53, scope: !8975)
!8980 = !DILocation(line: 792, column: 7, scope: !8975)
!8981 = !DILocation(line: 792, column: 34, scope: !8975)
!8982 = !DILocation(line: 792, column: 38, scope: !8975)
!8983 = !DILocation(line: 792, column: 31, scope: !8975)
!8984 = !DILocation(line: 792, column: 55, scope: !8975)
!8985 = !DILocation(line: 793, column: 7, scope: !8975)
!8986 = !DILocation(line: 793, column: 34, scope: !8975)
!8987 = !DILocation(line: 793, column: 38, scope: !8975)
!8988 = !DILocation(line: 793, column: 31, scope: !8975)
!8989 = !DILocation(line: 791, column: 7, scope: !8953)
!8990 = !DILocation(line: 794, column: 4, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8975, file: !3, line: 793, column: 56)
!8992 = !DILocation(line: 794, column: 8, scope: !8991)
!8993 = !DILocation(line: 794, column: 14, scope: !8991)
!8994 = !DILocation(line: 795, column: 4, scope: !8991)
!8995 = !DILocation(line: 798, column: 7, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 798, column: 7)
!8997 = !DILocation(line: 798, column: 12, scope: !8996)
!8998 = !DILocation(line: 798, column: 16, scope: !8996)
!8999 = !DILocation(line: 798, column: 26, scope: !8996)
!9000 = !DILocation(line: 798, column: 51, scope: !8996)
!9001 = !DILocation(line: 798, column: 29, scope: !8996)
!9002 = !DILocation(line: 798, column: 7, scope: !8953)
!9003 = !DILocation(line: 800, column: 29, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 798, column: 56)
!9005 = !DILocation(line: 800, column: 34, scope: !9004)
!9006 = !DILocation(line: 801, column: 15, scope: !9004)
!9007 = !DILocation(line: 801, column: 19, scope: !9004)
!9008 = !DILocation(line: 800, column: 5, scope: !9004)
!9009 = !DILocation(line: 799, column: 4, scope: !9004)
!9010 = !DILocation(line: 799, column: 9, scope: !9004)
!9011 = !DILocation(line: 799, column: 21, scope: !9004)
!9012 = !DILocation(line: 803, column: 4, scope: !9004)
!9013 = !DILocation(line: 803, column: 8, scope: !9004)
!9014 = !DILocation(line: 803, column: 14, scope: !9004)
!9015 = !DILocation(line: 804, column: 3, scope: !9004)
!9016 = !DILocation(line: 804, column: 36, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 804, column: 14)
!9018 = !DILocation(line: 804, column: 14, scope: !9017)
!9019 = !DILocation(line: 804, column: 14, scope: !8996)
!9020 = !DILocation(line: 806, column: 28, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 804, column: 41)
!9022 = !DILocation(line: 806, column: 33, scope: !9021)
!9023 = !DILocation(line: 807, column: 13, scope: !9021)
!9024 = !DILocation(line: 807, column: 17, scope: !9021)
!9025 = !DILocation(line: 808, column: 13, scope: !9021)
!9026 = !DILocation(line: 808, column: 17, scope: !9021)
!9027 = !DILocation(line: 806, column: 5, scope: !9021)
!9028 = !DILocation(line: 805, column: 4, scope: !9021)
!9029 = !DILocation(line: 805, column: 9, scope: !9021)
!9030 = !DILocation(line: 805, column: 21, scope: !9021)
!9031 = !DILocation(line: 809, column: 4, scope: !9021)
!9032 = !DILocation(line: 809, column: 8, scope: !9021)
!9033 = !DILocation(line: 809, column: 14, scope: !9021)
!9034 = !DILocation(line: 810, column: 3, scope: !9021)
!9035 = !DILocation(line: 811, column: 4, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 810, column: 10)
!9037 = !DILocation(line: 811, column: 8, scope: !9036)
!9038 = !DILocation(line: 811, column: 14, scope: !9036)
!9039 = !DILocation(line: 815, column: 7, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 815, column: 7)
!9041 = !DILocation(line: 815, column: 12, scope: !9040)
!9042 = !DILocation(line: 815, column: 7, scope: !8953)
!9043 = !DILocation(line: 816, column: 20, scope: !9040)
!9044 = !DILocation(line: 816, column: 4, scope: !9040)
!9045 = !DILocation(line: 817, column: 2, scope: !8953)
!9046 = !DILocation(line: 778, column: 18, scope: !8947)
!9047 = !DILabel(scope: !8843, name: "build_identify", file: !3, line: 819)
!9048 = !DILocation(line: 819, column: 1, scope: !8843)
!9049 = !DILocation(line: 820, column: 9, scope: !8843)
!9050 = !DILocation(line: 820, column: 4, scope: !8843)
!9051 = !DILocation(line: 820, column: 7, scope: !8843)
!9052 = !DILocation(line: 822, column: 6, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 822, column: 6)
!9054 = !DILocation(line: 822, column: 11, scope: !9053)
!9055 = !DILocation(line: 822, column: 18, scope: !9053)
!9056 = !DILocation(line: 822, column: 21, scope: !9053)
!9057 = !DILocation(line: 822, column: 26, scope: !9053)
!9058 = !DILocation(line: 822, column: 30, scope: !9053)
!9059 = !DILocation(line: 822, column: 6, scope: !8843)
!9060 = !DILocation(line: 826, column: 19, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 822, column: 41)
!9062 = !DILocation(line: 827, column: 2, scope: !9061)
!9063 = !DILocation(line: 829, column: 6, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 829, column: 6)
!9065 = !DILocation(line: 829, column: 6, scope: !8843)
!9066 = !DILocation(line: 830, column: 25, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 829, column: 23)
!9068 = !DILocation(line: 830, column: 30, scope: !9067)
!9069 = !DILocation(line: 830, column: 3, scope: !9067)
!9070 = !DILocation(line: 830, column: 8, scope: !9067)
!9071 = !DILocation(line: 830, column: 23, scope: !9067)
!9072 = !DILocation(line: 831, column: 25, scope: !9067)
!9073 = !DILocation(line: 831, column: 30, scope: !9067)
!9074 = !DILocation(line: 831, column: 3, scope: !9067)
!9075 = !DILocation(line: 831, column: 8, scope: !9067)
!9076 = !DILocation(line: 831, column: 22, scope: !9067)
!9077 = !DILocation(line: 833, column: 7, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 833, column: 7)
!9079 = !DILocation(line: 833, column: 12, scope: !9078)
!9080 = !DILocation(line: 833, column: 7, scope: !9067)
!9081 = !DILocation(line: 834, column: 13, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 834, column: 4)
!9083 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 833, column: 20)
!9084 = !DILocation(line: 834, column: 18, scope: !9082)
!9085 = !DILocation(line: 834, column: 30, scope: !9082)
!9086 = !DILocation(line: 834, column: 11, scope: !9082)
!9087 = !DILocation(line: 834, column: 9, scope: !9082)
!9088 = !DILocation(line: 835, column: 9, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9082, file: !3, line: 834, column: 4)
!9090 = !DILocation(line: 835, column: 11, scope: !9089)
!9091 = !DILocation(line: 834, column: 4, scope: !9082)
!9092 = !DILocation(line: 836, column: 27, scope: !9089)
!9093 = !DILocation(line: 836, column: 32, scope: !9089)
!9094 = !DILocation(line: 836, column: 40, scope: !9089)
!9095 = !DILocation(line: 836, column: 5, scope: !9089)
!9096 = !DILocation(line: 836, column: 10, scope: !9089)
!9097 = !DILocation(line: 836, column: 18, scope: !9089)
!9098 = !DILocation(line: 836, column: 20, scope: !9089)
!9099 = !DILocation(line: 836, column: 25, scope: !9089)
!9100 = !DILocation(line: 835, column: 18, scope: !9089)
!9101 = !DILocation(line: 834, column: 4, scope: !9089)
!9102 = distinct !{!9102, !9091, !9103}
!9103 = !DILocation(line: 836, column: 41, scope: !9082)
!9104 = !DILocation(line: 837, column: 22, scope: !9083)
!9105 = !DILocation(line: 837, column: 27, scope: !9083)
!9106 = !DILocation(line: 837, column: 4, scope: !9083)
!9107 = !DILocation(line: 837, column: 9, scope: !9083)
!9108 = !DILocation(line: 837, column: 20, scope: !9083)
!9109 = !DILocation(line: 838, column: 22, scope: !9083)
!9110 = !DILocation(line: 838, column: 27, scope: !9083)
!9111 = !DILocation(line: 838, column: 4, scope: !9083)
!9112 = !DILocation(line: 838, column: 9, scope: !9083)
!9113 = !DILocation(line: 838, column: 20, scope: !9083)
!9114 = !DILocation(line: 839, column: 4, scope: !9083)
!9115 = !DILocation(line: 839, column: 9, scope: !9083)
!9116 = !DILocation(line: 839, column: 21, scope: !9083)
!9117 = !DILocation(line: 840, column: 3, scope: !9083)
!9118 = !DILocation(line: 842, column: 13, scope: !9067)
!9119 = !DILocation(line: 843, column: 3, scope: !9067)
!9120 = !DILocation(line: 843, column: 8, scope: !9067)
!9121 = !DILocation(line: 843, column: 21, scope: !9067)
!9122 = !DILocation(line: 844, column: 2, scope: !9067)
!9123 = !DILocation(line: 845, column: 13, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 844, column: 9)
!9125 = !DILocation(line: 846, column: 7, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 846, column: 7)
!9127 = !DILocation(line: 846, column: 12, scope: !9126)
!9128 = !DILocation(line: 846, column: 7, scope: !9124)
!9129 = !DILocation(line: 847, column: 11, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 846, column: 20)
!9131 = !DILocation(line: 847, column: 16, scope: !9130)
!9132 = !DILocation(line: 847, column: 6, scope: !9130)
!9133 = !DILocation(line: 847, column: 9, scope: !9130)
!9134 = !DILocation(line: 848, column: 11, scope: !9130)
!9135 = !DILocation(line: 848, column: 16, scope: !9130)
!9136 = !DILocation(line: 848, column: 6, scope: !9130)
!9137 = !DILocation(line: 848, column: 9, scope: !9130)
!9138 = !DILocation(line: 850, column: 14, scope: !9130)
!9139 = !DILocation(line: 851, column: 3, scope: !9130)
!9140 = !DILocation(line: 853, column: 10, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 853, column: 3)
!9142 = !DILocation(line: 853, column: 8, scope: !9141)
!9143 = !DILocation(line: 853, column: 15, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 853, column: 3)
!9145 = !DILocation(line: 853, column: 19, scope: !9144)
!9146 = !DILocation(line: 853, column: 24, scope: !9144)
!9147 = !DILocation(line: 853, column: 17, scope: !9144)
!9148 = !DILocation(line: 853, column: 3, scope: !9141)
!9149 = !DILocation(line: 854, column: 11, scope: !9144)
!9150 = !DILocation(line: 854, column: 16, scope: !9144)
!9151 = !DILocation(line: 854, column: 21, scope: !9144)
!9152 = !DILocation(line: 854, column: 6, scope: !9144)
!9153 = !DILocation(line: 854, column: 9, scope: !9144)
!9154 = !DILocation(line: 854, column: 4, scope: !9144)
!9155 = !DILocation(line: 853, column: 34, scope: !9144)
!9156 = !DILocation(line: 853, column: 3, scope: !9144)
!9157 = distinct !{!9157, !9148, !9158}
!9158 = !DILocation(line: 854, column: 22, scope: !9141)
!9159 = !DILocation(line: 856, column: 3, scope: !9124)
!9160 = !DILocation(line: 856, column: 8, scope: !9124)
!9161 = !DILocation(line: 856, column: 21, scope: !9124)
!9162 = !DILocation(line: 858, column: 8, scope: !8843)
!9163 = !DILocation(line: 858, column: 6, scope: !8843)
!9164 = !DILocation(line: 859, column: 6, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 859, column: 6)
!9166 = !DILocation(line: 859, column: 11, scope: !9165)
!9167 = !DILocation(line: 859, column: 15, scope: !9165)
!9168 = !DILocation(line: 859, column: 6, scope: !8843)
!9169 = !DILocation(line: 860, column: 7, scope: !9165)
!9170 = !DILocation(line: 860, column: 3, scope: !9165)
!9171 = !DILocation(line: 861, column: 2, scope: !8843)
!9172 = !DILocation(line: 863, column: 21, scope: !8843)
!9173 = !DILocation(line: 863, column: 26, scope: !8843)
!9174 = !DILocation(line: 863, column: 2, scope: !8843)
!9175 = !DILocation(line: 864, column: 24, scope: !8843)
!9176 = !DILocation(line: 864, column: 29, scope: !8843)
!9177 = !DILocation(line: 864, column: 2, scope: !8843)
!9178 = !DILocation(line: 866, column: 9, scope: !8843)
!9179 = !DILocation(line: 866, column: 13, scope: !8843)
!9180 = !DILocation(line: 866, column: 18, scope: !8843)
!9181 = !DILocation(line: 866, column: 11, scope: !8843)
!9182 = !DILocation(line: 866, column: 8, scope: !8843)
!9183 = !DILocation(line: 866, column: 6, scope: !8843)
!9184 = !DILocation(line: 868, column: 6, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 868, column: 6)
!9186 = !DILocation(line: 868, column: 16, scope: !9185)
!9187 = !DILocation(line: 868, column: 6, scope: !8843)
!9188 = !DILocation(line: 869, column: 46, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9185, file: !3, line: 868, column: 37)
!9190 = !DILocation(line: 869, column: 51, scope: !9189)
!9191 = !DILocation(line: 869, column: 3, scope: !9189)
!9192 = !DILocation(line: 870, column: 10, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 870, column: 3)
!9194 = !DILocation(line: 870, column: 8, scope: !9193)
!9195 = !DILocation(line: 870, column: 15, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 870, column: 3)
!9197 = !DILocation(line: 870, column: 19, scope: !9196)
!9198 = !DILocation(line: 870, column: 24, scope: !9196)
!9199 = !DILocation(line: 870, column: 17, scope: !9196)
!9200 = !DILocation(line: 870, column: 3, scope: !9193)
!9201 = !DILocation(line: 871, column: 20, scope: !9196)
!9202 = !DILocation(line: 871, column: 25, scope: !9196)
!9203 = !DILocation(line: 871, column: 30, scope: !9196)
!9204 = !DILocation(line: 871, column: 4, scope: !9196)
!9205 = !DILocation(line: 870, column: 34, scope: !9196)
!9206 = !DILocation(line: 870, column: 3, scope: !9196)
!9207 = distinct !{!9207, !9200, !9208}
!9208 = !DILocation(line: 871, column: 32, scope: !9193)
!9209 = !DILocation(line: 872, column: 3, scope: !9189)
!9210 = !DILocation(line: 873, column: 2, scope: !9189)
!9211 = !DILocation(line: 875, column: 19, scope: !8843)
!9212 = !DILocation(line: 875, column: 24, scope: !8843)
!9213 = !DILocation(line: 875, column: 33, scope: !8843)
!9214 = !DILocation(line: 875, column: 2, scope: !8843)
!9215 = !DILocation(line: 876, column: 1, scope: !8843)
!9216 = distinct !DISubprogram(name: "find_and_prep_issuable_command", scope: !3, file: !3, line: 704, type: !9217, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9217 = !DISubroutineType(types: !9218)
!9218 = !{!203, !5289}
!9219 = !DILocalVariable(name: "esp", arg: 1, scope: !9216, file: !3, line: 704, type: !5289)
!9220 = !DILocation(line: 704, column: 73, scope: !9216)
!9221 = !DILocalVariable(name: "ent", scope: !9216, file: !3, line: 706, type: !203)
!9222 = !DILocation(line: 706, column: 24, scope: !9216)
!9223 = !DILocalVariable(name: "__mptr", scope: !9224, file: !3, line: 708, type: !202)
!9224 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 708, column: 2)
!9225 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 708, column: 2)
!9226 = !DILocation(line: 708, column: 2, scope: !9224)
!9227 = !DILocation(line: 708, column: 2, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 708, column: 2)
!9229 = !DILocation(line: 708, column: 2, scope: !9225)
!9230 = !DILocation(line: 708, column: 2, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 708, column: 2)
!9232 = !DILocalVariable(name: "cmd", scope: !9233, file: !3, line: 709, type: !214)
!9233 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 708, column: 52)
!9234 = !DILocation(line: 709, column: 21, scope: !9233)
!9235 = !DILocation(line: 709, column: 27, scope: !9233)
!9236 = !DILocation(line: 709, column: 32, scope: !9233)
!9237 = !DILocalVariable(name: "dev", scope: !9233, file: !3, line: 710, type: !238)
!9238 = !DILocation(line: 710, column: 23, scope: !9233)
!9239 = !DILocation(line: 710, column: 29, scope: !9233)
!9240 = !DILocation(line: 710, column: 34, scope: !9233)
!9241 = !DILocalVariable(name: "lp", scope: !9233, file: !3, line: 711, type: !6925)
!9242 = !DILocation(line: 711, column: 24, scope: !9233)
!9243 = !DILocation(line: 711, column: 29, scope: !9233)
!9244 = !DILocation(line: 711, column: 34, scope: !9233)
!9245 = !DILocation(line: 713, column: 7, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 713, column: 7)
!9247 = !DILocation(line: 713, column: 12, scope: !9246)
!9248 = !DILocation(line: 713, column: 18, scope: !9246)
!9249 = !DILocation(line: 713, column: 7, scope: !9233)
!9250 = !DILocation(line: 714, column: 4, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 713, column: 44)
!9252 = !DILocation(line: 714, column: 9, scope: !9251)
!9253 = !DILocation(line: 714, column: 16, scope: !9251)
!9254 = !DILocation(line: 715, column: 4, scope: !9251)
!9255 = !DILocation(line: 715, column: 9, scope: !9251)
!9256 = !DILocation(line: 715, column: 16, scope: !9251)
!9257 = !DILocation(line: 716, column: 11, scope: !9251)
!9258 = !DILocation(line: 716, column: 4, scope: !9251)
!9259 = !DILocation(line: 719, column: 30, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 719, column: 7)
!9261 = !DILocation(line: 719, column: 35, scope: !9260)
!9262 = !DILocation(line: 719, column: 43, scope: !9260)
!9263 = !DILocation(line: 719, column: 8, scope: !9260)
!9264 = !DILocation(line: 719, column: 7, scope: !9233)
!9265 = !DILocation(line: 720, column: 4, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9260, file: !3, line: 719, column: 49)
!9267 = !DILocation(line: 720, column: 9, scope: !9266)
!9268 = !DILocation(line: 720, column: 16, scope: !9266)
!9269 = !DILocation(line: 721, column: 4, scope: !9266)
!9270 = !DILocation(line: 721, column: 9, scope: !9266)
!9271 = !DILocation(line: 721, column: 16, scope: !9266)
!9272 = !DILocation(line: 722, column: 3, scope: !9266)
!9273 = !DILocation(line: 723, column: 22, scope: !9233)
!9274 = !DILocation(line: 723, column: 27, scope: !9233)
!9275 = !DILocation(line: 723, column: 3, scope: !9233)
!9276 = !DILocation(line: 723, column: 8, scope: !9233)
!9277 = !DILocation(line: 723, column: 20, scope: !9233)
!9278 = !DILocation(line: 724, column: 22, scope: !9233)
!9279 = !DILocation(line: 724, column: 27, scope: !9233)
!9280 = !DILocation(line: 724, column: 3, scope: !9233)
!9281 = !DILocation(line: 724, column: 8, scope: !9233)
!9282 = !DILocation(line: 724, column: 20, scope: !9233)
!9283 = !DILocation(line: 726, column: 25, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 726, column: 7)
!9285 = !DILocation(line: 726, column: 30, scope: !9284)
!9286 = !DILocation(line: 726, column: 7, scope: !9284)
!9287 = !DILocation(line: 726, column: 34, scope: !9284)
!9288 = !DILocation(line: 726, column: 7, scope: !9233)
!9289 = !DILocation(line: 727, column: 4, scope: !9284)
!9290 = !DILocation(line: 729, column: 10, scope: !9233)
!9291 = !DILocation(line: 729, column: 3, scope: !9233)
!9292 = !DILocalVariable(name: "__mptr", scope: !9293, file: !3, line: 708, type: !202)
!9293 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 708, column: 2)
!9294 = !DILocation(line: 708, column: 2, scope: !9293)
!9295 = !DILocation(line: 708, column: 2, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 708, column: 2)
!9297 = distinct !{!9297, !9229, !9298}
!9298 = !DILocation(line: 730, column: 2, scope: !9225)
!9299 = !DILocation(line: 732, column: 2, scope: !9216)
!9300 = !DILocation(line: 733, column: 1, scope: !9216)
!9301 = distinct !DISubprogram(name: "esp_autosense", scope: !3, file: !3, line: 657, type: !8368, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9302 = !DILocalVariable(name: "esp", arg: 1, scope: !9301, file: !3, line: 657, type: !5289)
!9303 = !DILocation(line: 657, column: 39, scope: !9301)
!9304 = !DILocalVariable(name: "ent", arg: 2, scope: !9301, file: !3, line: 657, type: !203)
!9305 = !DILocation(line: 657, column: 66, scope: !9301)
!9306 = !DILocalVariable(name: "cmd", scope: !9301, file: !3, line: 659, type: !214)
!9307 = !DILocation(line: 659, column: 20, scope: !9301)
!9308 = !DILocation(line: 659, column: 26, scope: !9301)
!9309 = !DILocation(line: 659, column: 31, scope: !9301)
!9310 = !DILocalVariable(name: "dev", scope: !9301, file: !3, line: 660, type: !238)
!9311 = !DILocation(line: 660, column: 22, scope: !9301)
!9312 = !DILocation(line: 660, column: 28, scope: !9301)
!9313 = !DILocation(line: 660, column: 33, scope: !9301)
!9314 = !DILocalVariable(name: "tgt", scope: !9301, file: !3, line: 661, type: !232)
!9315 = !DILocation(line: 661, column: 6, scope: !9301)
!9316 = !DILocalVariable(name: "lun", scope: !9301, file: !3, line: 661, type: !232)
!9317 = !DILocation(line: 661, column: 11, scope: !9301)
!9318 = !DILocalVariable(name: "p", scope: !9301, file: !3, line: 662, type: !5330)
!9319 = !DILocation(line: 662, column: 6, scope: !9301)
!9320 = !DILocalVariable(name: "val", scope: !9301, file: !3, line: 662, type: !453)
!9321 = !DILocation(line: 662, column: 9, scope: !9301)
!9322 = !DILocation(line: 664, column: 8, scope: !9301)
!9323 = !DILocation(line: 664, column: 13, scope: !9301)
!9324 = !DILocation(line: 664, column: 6, scope: !9301)
!9325 = !DILocation(line: 665, column: 8, scope: !9301)
!9326 = !DILocation(line: 665, column: 13, scope: !9301)
!9327 = !DILocation(line: 665, column: 6, scope: !9301)
!9328 = !DILocation(line: 668, column: 7, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 668, column: 6)
!9330 = !DILocation(line: 668, column: 12, scope: !9329)
!9331 = !DILocation(line: 668, column: 6, scope: !9301)
!9332 = !DILocation(line: 669, column: 3, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 668, column: 23)
!9334 = !DILocation(line: 669, column: 3, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 669, column: 3)
!9336 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 669, column: 3)
!9337 = !DILocation(line: 669, column: 3, scope: !9336)
!9338 = !DILocation(line: 671, column: 17, scope: !9333)
!9339 = !DILocation(line: 671, column: 22, scope: !9333)
!9340 = !DILocation(line: 671, column: 3, scope: !9333)
!9341 = !DILocation(line: 672, column: 2, scope: !9333)
!9342 = !DILocation(line: 673, column: 25, scope: !9301)
!9343 = !DILocation(line: 673, column: 30, scope: !9301)
!9344 = !DILocation(line: 673, column: 2, scope: !9301)
!9345 = !DILocation(line: 673, column: 7, scope: !9301)
!9346 = !DILocation(line: 673, column: 23, scope: !9301)
!9347 = !DILocation(line: 675, column: 20, scope: !9301)
!9348 = !DILocation(line: 675, column: 2, scope: !9301)
!9349 = !DILocation(line: 675, column: 7, scope: !9301)
!9350 = !DILocation(line: 675, column: 18, scope: !9301)
!9351 = !DILocation(line: 677, column: 6, scope: !9301)
!9352 = !DILocation(line: 677, column: 11, scope: !9301)
!9353 = !DILocation(line: 677, column: 4, scope: !9301)
!9354 = !DILocation(line: 678, column: 2, scope: !9301)
!9355 = !DILocation(line: 678, column: 7, scope: !9301)
!9356 = !DILocation(line: 678, column: 19, scope: !9301)
!9357 = !DILocation(line: 680, column: 9, scope: !9301)
!9358 = !DILocation(line: 680, column: 4, scope: !9301)
!9359 = !DILocation(line: 680, column: 7, scope: !9301)
!9360 = !DILocation(line: 681, column: 4, scope: !9301)
!9361 = !DILocation(line: 681, column: 7, scope: !9301)
!9362 = !DILocation(line: 682, column: 11, scope: !9301)
!9363 = !DILocation(line: 682, column: 16, scope: !9301)
!9364 = !DILocation(line: 682, column: 27, scope: !9301)
!9365 = !DILocation(line: 682, column: 10, scope: !9301)
!9366 = !DILocation(line: 683, column: 4, scope: !9301)
!9367 = !DILocation(line: 683, column: 8, scope: !9301)
!9368 = !DILocation(line: 682, column: 9, scope: !9301)
!9369 = !DILocation(line: 682, column: 4, scope: !9301)
!9370 = !DILocation(line: 682, column: 7, scope: !9301)
!9371 = !DILocation(line: 684, column: 4, scope: !9301)
!9372 = !DILocation(line: 684, column: 7, scope: !9301)
!9373 = !DILocation(line: 685, column: 4, scope: !9301)
!9374 = !DILocation(line: 685, column: 7, scope: !9301)
!9375 = !DILocation(line: 686, column: 4, scope: !9301)
!9376 = !DILocation(line: 686, column: 7, scope: !9301)
!9377 = !DILocation(line: 687, column: 4, scope: !9301)
!9378 = !DILocation(line: 687, column: 7, scope: !9301)
!9379 = !DILocation(line: 689, column: 2, scope: !9301)
!9380 = !DILocation(line: 689, column: 7, scope: !9301)
!9381 = !DILocation(line: 689, column: 20, scope: !9301)
!9382 = !DILocation(line: 691, column: 8, scope: !9301)
!9383 = !DILocation(line: 691, column: 6, scope: !9301)
!9384 = !DILocation(line: 692, column: 6, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 692, column: 6)
!9386 = !DILocation(line: 692, column: 11, scope: !9385)
!9387 = !DILocation(line: 692, column: 15, scope: !9385)
!9388 = !DILocation(line: 692, column: 6, scope: !9301)
!9389 = !DILocation(line: 693, column: 7, scope: !9385)
!9390 = !DILocation(line: 693, column: 3, scope: !9385)
!9391 = !DILocation(line: 694, column: 2, scope: !9301)
!9392 = !DILocation(line: 696, column: 21, scope: !9301)
!9393 = !DILocation(line: 696, column: 26, scope: !9301)
!9394 = !DILocation(line: 696, column: 2, scope: !9301)
!9395 = !DILocation(line: 697, column: 24, scope: !9301)
!9396 = !DILocation(line: 697, column: 29, scope: !9301)
!9397 = !DILocation(line: 697, column: 2, scope: !9301)
!9398 = !DILocation(line: 699, column: 9, scope: !9301)
!9399 = !DILocation(line: 699, column: 13, scope: !9301)
!9400 = !DILocation(line: 699, column: 18, scope: !9301)
!9401 = !DILocation(line: 699, column: 11, scope: !9301)
!9402 = !DILocation(line: 699, column: 8, scope: !9301)
!9403 = !DILocation(line: 699, column: 6, scope: !9301)
!9404 = !DILocation(line: 701, column: 19, scope: !9301)
!9405 = !DILocation(line: 701, column: 24, scope: !9301)
!9406 = !DILocation(line: 701, column: 2, scope: !9301)
!9407 = !DILocation(line: 702, column: 1, scope: !9301)
!9408 = distinct !DISubprogram(name: "esp_map_dma", scope: !3, file: !3, line: 372, type: !8547, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9409 = !DILocalVariable(name: "esp", arg: 1, scope: !9408, file: !3, line: 372, type: !5289)
!9410 = !DILocation(line: 372, column: 37, scope: !9408)
!9411 = !DILocalVariable(name: "cmd", arg: 2, scope: !9408, file: !3, line: 372, type: !214)
!9412 = !DILocation(line: 372, column: 60, scope: !9408)
!9413 = !DILocalVariable(name: "spriv", scope: !9408, file: !3, line: 374, type: !5269)
!9414 = !DILocation(line: 374, column: 23, scope: !9408)
!9415 = !DILocation(line: 374, column: 31, scope: !9408)
!9416 = !DILocalVariable(name: "sg", scope: !9408, file: !3, line: 375, type: !5181)
!9417 = !DILocation(line: 375, column: 22, scope: !9408)
!9418 = !DILocation(line: 375, column: 39, scope: !9408)
!9419 = !DILocation(line: 375, column: 27, scope: !9408)
!9420 = !DILocalVariable(name: "total", scope: !9408, file: !3, line: 376, type: !232)
!9421 = !DILocation(line: 376, column: 6, scope: !9408)
!9422 = !DILocalVariable(name: "i", scope: !9408, file: !3, line: 376, type: !232)
!9423 = !DILocation(line: 376, column: 17, scope: !9408)
!9424 = !DILocalVariable(name: "s", scope: !9408, file: !3, line: 377, type: !5181)
!9425 = !DILocation(line: 377, column: 22, scope: !9408)
!9426 = !DILocation(line: 379, column: 6, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 379, column: 6)
!9428 = !DILocation(line: 379, column: 11, scope: !9427)
!9429 = !DILocation(line: 379, column: 29, scope: !9427)
!9430 = !DILocation(line: 379, column: 6, scope: !9408)
!9431 = !DILocation(line: 380, column: 3, scope: !9427)
!9432 = !DILocation(line: 382, column: 6, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 382, column: 6)
!9434 = !DILocation(line: 382, column: 11, scope: !9433)
!9435 = !DILocation(line: 382, column: 17, scope: !9433)
!9436 = !DILocation(line: 382, column: 6, scope: !9408)
!9437 = !DILocation(line: 387, column: 33, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 382, column: 40)
!9439 = !DILocation(line: 387, column: 19, scope: !9438)
!9440 = !DILocation(line: 387, column: 3, scope: !9438)
!9441 = !DILocation(line: 387, column: 10, scope: !9438)
!9442 = !DILocation(line: 387, column: 17, scope: !9438)
!9443 = !DILocation(line: 389, column: 3, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 389, column: 3)
!9445 = !DILocation(line: 389, column: 3, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 389, column: 3)
!9447 = !DILocation(line: 390, column: 40, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9446, file: !3, line: 389, column: 46)
!9449 = !DILocation(line: 390, column: 32, scope: !9448)
!9450 = !DILocation(line: 390, column: 21, scope: !9448)
!9451 = !DILocation(line: 390, column: 4, scope: !9448)
!9452 = !DILocation(line: 390, column: 7, scope: !9448)
!9453 = !DILocation(line: 390, column: 19, scope: !9448)
!9454 = !DILocation(line: 391, column: 13, scope: !9448)
!9455 = !DILocation(line: 391, column: 10, scope: !9448)
!9456 = !DILocation(line: 392, column: 3, scope: !9448)
!9457 = distinct !{!9457, !9443, !9458}
!9458 = !DILocation(line: 392, column: 3, scope: !9444)
!9459 = !DILocation(line: 393, column: 2, scope: !9438)
!9460 = !DILocation(line: 394, column: 32, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 393, column: 9)
!9462 = !DILocation(line: 394, column: 19, scope: !9461)
!9463 = !DILocation(line: 394, column: 3, scope: !9461)
!9464 = !DILocation(line: 394, column: 10, scope: !9461)
!9465 = !DILocation(line: 394, column: 17, scope: !9461)
!9466 = !DILocation(line: 395, column: 3, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 395, column: 3)
!9468 = !DILocation(line: 395, column: 3, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 395, column: 3)
!9470 = !DILocation(line: 396, column: 13, scope: !9469)
!9471 = !DILocation(line: 396, column: 10, scope: !9469)
!9472 = !DILocation(line: 396, column: 4, scope: !9469)
!9473 = distinct !{!9473, !9466, !9474}
!9474 = !DILocation(line: 396, column: 13, scope: !9467)
!9475 = !DILocation(line: 398, column: 23, scope: !9408)
!9476 = !DILocation(line: 398, column: 2, scope: !9408)
!9477 = !DILocation(line: 398, column: 9, scope: !9408)
!9478 = !DILocation(line: 398, column: 21, scope: !9408)
!9479 = !DILocation(line: 399, column: 2, scope: !9408)
!9480 = !DILocation(line: 399, column: 9, scope: !9408)
!9481 = !DILocation(line: 399, column: 16, scope: !9408)
!9482 = !DILocation(line: 400, column: 18, scope: !9408)
!9483 = !DILocation(line: 400, column: 2, scope: !9408)
!9484 = !DILocation(line: 400, column: 9, scope: !9408)
!9485 = !DILocation(line: 400, column: 16, scope: !9408)
!9486 = !DILocation(line: 401, column: 23, scope: !9408)
!9487 = !DILocation(line: 401, column: 2, scope: !9408)
!9488 = !DILocation(line: 401, column: 9, scope: !9408)
!9489 = !DILocation(line: 401, column: 21, scope: !9408)
!9490 = !DILocation(line: 402, column: 1, scope: !9408)
!9491 = distinct !DISubprogram(name: "esp_save_pointers", scope: !3, file: !3, line: 465, type: !8368, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9492 = !DILocalVariable(name: "esp", arg: 1, scope: !9491, file: !3, line: 465, type: !5289)
!9493 = !DILocation(line: 465, column: 43, scope: !9491)
!9494 = !DILocalVariable(name: "ent", arg: 2, scope: !9491, file: !3, line: 465, type: !203)
!9495 = !DILocation(line: 465, column: 70, scope: !9491)
!9496 = !DILocalVariable(name: "cmd", scope: !9491, file: !3, line: 467, type: !214)
!9497 = !DILocation(line: 467, column: 20, scope: !9491)
!9498 = !DILocation(line: 467, column: 26, scope: !9491)
!9499 = !DILocation(line: 467, column: 31, scope: !9491)
!9500 = !DILocalVariable(name: "spriv", scope: !9491, file: !3, line: 468, type: !5269)
!9501 = !DILocation(line: 468, column: 23, scope: !9491)
!9502 = !DILocation(line: 468, column: 31, scope: !9491)
!9503 = !DILocation(line: 470, column: 6, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 470, column: 6)
!9505 = !DILocation(line: 470, column: 11, scope: !9504)
!9506 = !DILocation(line: 470, column: 17, scope: !9504)
!9507 = !DILocation(line: 470, column: 6, scope: !9491)
!9508 = !DILocation(line: 471, column: 26, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 470, column: 43)
!9510 = !DILocation(line: 471, column: 31, scope: !9509)
!9511 = !DILocation(line: 471, column: 3, scope: !9509)
!9512 = !DILocation(line: 471, column: 8, scope: !9509)
!9513 = !DILocation(line: 471, column: 24, scope: !9509)
!9514 = !DILocation(line: 472, column: 3, scope: !9509)
!9515 = !DILocation(line: 474, column: 27, scope: !9491)
!9516 = !DILocation(line: 474, column: 34, scope: !9491)
!9517 = !DILocation(line: 474, column: 2, scope: !9491)
!9518 = !DILocation(line: 474, column: 7, scope: !9491)
!9519 = !DILocation(line: 474, column: 25, scope: !9491)
!9520 = !DILocation(line: 475, column: 22, scope: !9491)
!9521 = !DILocation(line: 475, column: 29, scope: !9491)
!9522 = !DILocation(line: 475, column: 2, scope: !9491)
!9523 = !DILocation(line: 475, column: 7, scope: !9491)
!9524 = !DILocation(line: 475, column: 20, scope: !9491)
!9525 = !DILocation(line: 476, column: 22, scope: !9491)
!9526 = !DILocation(line: 476, column: 29, scope: !9491)
!9527 = !DILocation(line: 476, column: 2, scope: !9491)
!9528 = !DILocation(line: 476, column: 7, scope: !9491)
!9529 = !DILocation(line: 476, column: 20, scope: !9491)
!9530 = !DILocation(line: 477, column: 27, scope: !9491)
!9531 = !DILocation(line: 477, column: 34, scope: !9491)
!9532 = !DILocation(line: 477, column: 2, scope: !9491)
!9533 = !DILocation(line: 477, column: 7, scope: !9491)
!9534 = !DILocation(line: 477, column: 25, scope: !9491)
!9535 = !DILocation(line: 478, column: 1, scope: !9491)
!9536 = distinct !DISubprogram(name: "esp_need_to_nego_wide", scope: !3, file: !3, line: 552, type: !9537, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9537 = !DISubroutineType(types: !9538)
!9538 = !{!232, !6918}
!9539 = !DILocalVariable(name: "tp", arg: 1, scope: !9536, file: !3, line: 552, type: !6918)
!9540 = !DILocation(line: 552, column: 58, scope: !9536)
!9541 = !DILocalVariable(name: "target", scope: !9536, file: !3, line: 554, type: !4872)
!9542 = !DILocation(line: 554, column: 22, scope: !9536)
!9543 = !DILocation(line: 554, column: 31, scope: !9536)
!9544 = !DILocation(line: 554, column: 35, scope: !9536)
!9545 = !DILocation(line: 556, column: 9, scope: !9536)
!9546 = !DILocation(line: 556, column: 30, scope: !9536)
!9547 = !DILocation(line: 556, column: 34, scope: !9536)
!9548 = !DILocation(line: 556, column: 27, scope: !9536)
!9549 = !DILocation(line: 556, column: 2, scope: !9536)
!9550 = distinct !DISubprogram(name: "esp_need_to_nego_sync", scope: !3, file: !3, line: 559, type: !9537, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9551 = !DILocalVariable(name: "tp", arg: 1, scope: !9550, file: !3, line: 559, type: !6918)
!9552 = !DILocation(line: 559, column: 58, scope: !9550)
!9553 = !DILocalVariable(name: "target", scope: !9550, file: !3, line: 561, type: !4872)
!9554 = !DILocation(line: 561, column: 22, scope: !9550)
!9555 = !DILocation(line: 561, column: 31, scope: !9550)
!9556 = !DILocation(line: 561, column: 35, scope: !9550)
!9557 = !DILocation(line: 564, column: 7, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 564, column: 6)
!9559 = !DILocation(line: 564, column: 26, scope: !9558)
!9560 = !DILocation(line: 564, column: 30, scope: !9558)
!9561 = !DILocation(line: 564, column: 34, scope: !9558)
!9562 = !DILocation(line: 564, column: 6, scope: !9550)
!9563 = !DILocation(line: 565, column: 3, scope: !9558)
!9564 = !DILocation(line: 567, column: 6, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 567, column: 6)
!9566 = !DILocation(line: 567, column: 28, scope: !9565)
!9567 = !DILocation(line: 567, column: 32, scope: !9565)
!9568 = !DILocation(line: 567, column: 25, scope: !9565)
!9569 = !DILocation(line: 567, column: 49, scope: !9565)
!9570 = !DILocation(line: 568, column: 6, scope: !9565)
!9571 = !DILocation(line: 568, column: 28, scope: !9565)
!9572 = !DILocation(line: 568, column: 32, scope: !9565)
!9573 = !DILocation(line: 568, column: 25, scope: !9565)
!9574 = !DILocation(line: 567, column: 6, scope: !9550)
!9575 = !DILocation(line: 569, column: 3, scope: !9565)
!9576 = !DILocation(line: 571, column: 2, scope: !9550)
!9577 = !DILocation(line: 572, column: 1, scope: !9550)
!9578 = distinct !DISubprogram(name: "esp_write_tgt_sync", scope: !3, file: !3, line: 507, type: !9579, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9579 = !DISubroutineType(types: !9580)
!9580 = !{null, !5289, !232}
!9581 = !DILocalVariable(name: "esp", arg: 1, scope: !9578, file: !3, line: 507, type: !5289)
!9582 = !DILocation(line: 507, column: 44, scope: !9578)
!9583 = !DILocalVariable(name: "tgt", arg: 2, scope: !9578, file: !3, line: 507, type: !232)
!9584 = !DILocation(line: 507, column: 53, scope: !9578)
!9585 = !DILocalVariable(name: "off", scope: !9578, file: !3, line: 509, type: !453)
!9586 = !DILocation(line: 509, column: 5, scope: !9578)
!9587 = !DILocation(line: 509, column: 11, scope: !9578)
!9588 = !DILocation(line: 509, column: 16, scope: !9578)
!9589 = !DILocation(line: 509, column: 23, scope: !9578)
!9590 = !DILocation(line: 509, column: 28, scope: !9578)
!9591 = !DILocalVariable(name: "per", scope: !9578, file: !3, line: 510, type: !453)
!9592 = !DILocation(line: 510, column: 5, scope: !9578)
!9593 = !DILocation(line: 510, column: 11, scope: !9578)
!9594 = !DILocation(line: 510, column: 16, scope: !9578)
!9595 = !DILocation(line: 510, column: 23, scope: !9578)
!9596 = !DILocation(line: 510, column: 28, scope: !9578)
!9597 = !DILocation(line: 512, column: 6, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9578, file: !3, line: 512, column: 6)
!9599 = !DILocation(line: 512, column: 13, scope: !9598)
!9600 = !DILocation(line: 512, column: 18, scope: !9598)
!9601 = !DILocation(line: 512, column: 10, scope: !9598)
!9602 = !DILocation(line: 512, column: 6, scope: !9578)
!9603 = !DILocation(line: 513, column: 20, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 512, column: 29)
!9605 = !DILocation(line: 513, column: 3, scope: !9604)
!9606 = !DILocation(line: 513, column: 8, scope: !9604)
!9607 = !DILocation(line: 513, column: 18, scope: !9604)
!9608 = !DILocation(line: 514, column: 3, scope: !9604)
!9609 = !DILocation(line: 515, column: 2, scope: !9604)
!9610 = !DILocation(line: 516, column: 6, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9578, file: !3, line: 516, column: 6)
!9612 = !DILocation(line: 516, column: 13, scope: !9611)
!9613 = !DILocation(line: 516, column: 18, scope: !9611)
!9614 = !DILocation(line: 516, column: 10, scope: !9611)
!9615 = !DILocation(line: 516, column: 6, scope: !9578)
!9616 = !DILocation(line: 517, column: 19, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 516, column: 28)
!9618 = !DILocation(line: 517, column: 3, scope: !9617)
!9619 = !DILocation(line: 517, column: 8, scope: !9617)
!9620 = !DILocation(line: 517, column: 17, scope: !9617)
!9621 = !DILocation(line: 518, column: 3, scope: !9617)
!9622 = !DILocation(line: 519, column: 2, scope: !9617)
!9623 = !DILocation(line: 520, column: 1, scope: !9578)
!9624 = distinct !DISubprogram(name: "esp_write_tgt_config3", scope: !3, file: !3, line: 495, type: !9579, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9625 = !DILocalVariable(name: "esp", arg: 1, scope: !9624, file: !3, line: 495, type: !5289)
!9626 = !DILocation(line: 495, column: 47, scope: !9624)
!9627 = !DILocalVariable(name: "tgt", arg: 2, scope: !9624, file: !3, line: 495, type: !232)
!9628 = !DILocation(line: 495, column: 56, scope: !9624)
!9629 = !DILocation(line: 497, column: 6, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 497, column: 6)
!9631 = !DILocation(line: 497, column: 11, scope: !9630)
!9632 = !DILocation(line: 497, column: 15, scope: !9630)
!9633 = !DILocation(line: 497, column: 6, scope: !9624)
!9634 = !DILocalVariable(name: "val", scope: !9635, file: !3, line: 498, type: !453)
!9635 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 497, column: 26)
!9636 = !DILocation(line: 498, column: 6, scope: !9635)
!9637 = !DILocation(line: 498, column: 12, scope: !9635)
!9638 = !DILocation(line: 498, column: 17, scope: !9635)
!9639 = !DILocation(line: 498, column: 24, scope: !9635)
!9640 = !DILocation(line: 498, column: 29, scope: !9635)
!9641 = !DILocation(line: 500, column: 7, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9635, file: !3, line: 500, column: 7)
!9643 = !DILocation(line: 500, column: 14, scope: !9642)
!9644 = !DILocation(line: 500, column: 19, scope: !9642)
!9645 = !DILocation(line: 500, column: 11, scope: !9642)
!9646 = !DILocation(line: 500, column: 7, scope: !9635)
!9647 = !DILocation(line: 501, column: 21, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 500, column: 30)
!9649 = !DILocation(line: 501, column: 4, scope: !9648)
!9650 = !DILocation(line: 501, column: 9, scope: !9648)
!9651 = !DILocation(line: 501, column: 19, scope: !9648)
!9652 = !DILocation(line: 502, column: 4, scope: !9648)
!9653 = !DILocation(line: 503, column: 3, scope: !9648)
!9654 = !DILocation(line: 504, column: 2, scope: !9635)
!9655 = !DILocation(line: 505, column: 1, scope: !9624)
!9656 = distinct !DISubprogram(name: "esp_send_dma_cmd", scope: !3, file: !3, line: 147, type: !9657, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9657 = !DISubroutineType(types: !9658)
!9658 = !{null, !5289, !232, !232, !232}
!9659 = !DILocalVariable(name: "esp", arg: 1, scope: !9656, file: !3, line: 147, type: !5289)
!9660 = !DILocation(line: 147, column: 42, scope: !9656)
!9661 = !DILocalVariable(name: "len", arg: 2, scope: !9656, file: !3, line: 147, type: !232)
!9662 = !DILocation(line: 147, column: 51, scope: !9656)
!9663 = !DILocalVariable(name: "max_len", arg: 3, scope: !9656, file: !3, line: 147, type: !232)
!9664 = !DILocation(line: 147, column: 60, scope: !9656)
!9665 = !DILocalVariable(name: "cmd", arg: 4, scope: !9656, file: !3, line: 147, type: !232)
!9666 = !DILocation(line: 147, column: 73, scope: !9656)
!9667 = !DILocation(line: 149, column: 6, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9656, file: !3, line: 149, column: 6)
!9669 = !DILocation(line: 149, column: 11, scope: !9668)
!9670 = !DILocation(line: 149, column: 17, scope: !9668)
!9671 = !DILocation(line: 149, column: 6, scope: !9656)
!9672 = !DILocalVariable(name: "i", scope: !9673, file: !3, line: 150, type: !232)
!9673 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 149, column: 38)
!9674 = !DILocation(line: 150, column: 7, scope: !9673)
!9675 = !DILocation(line: 152, column: 16, scope: !9673)
!9676 = !DILocation(line: 152, column: 3, scope: !9673)
!9677 = !DILocation(line: 153, column: 10, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 153, column: 3)
!9679 = !DILocation(line: 153, column: 8, scope: !9678)
!9680 = !DILocation(line: 153, column: 15, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9678, file: !3, line: 153, column: 3)
!9682 = !DILocation(line: 153, column: 19, scope: !9681)
!9683 = !DILocation(line: 153, column: 17, scope: !9681)
!9684 = !DILocation(line: 153, column: 3, scope: !9678)
!9685 = !DILocation(line: 154, column: 4, scope: !9681)
!9686 = !DILocation(line: 153, column: 25, scope: !9681)
!9687 = !DILocation(line: 153, column: 3, scope: !9681)
!9688 = distinct !{!9688, !9684, !9689}
!9689 = !DILocation(line: 154, column: 4, scope: !9678)
!9690 = !DILocation(line: 155, column: 16, scope: !9673)
!9691 = !DILocation(line: 155, column: 21, scope: !9673)
!9692 = !DILocation(line: 155, column: 3, scope: !9673)
!9693 = !DILocation(line: 156, column: 2, scope: !9673)
!9694 = !DILocation(line: 157, column: 7, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 157, column: 7)
!9696 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 156, column: 9)
!9697 = !DILocation(line: 157, column: 12, scope: !9695)
!9698 = !DILocation(line: 157, column: 16, scope: !9695)
!9699 = !DILocation(line: 157, column: 7, scope: !9696)
!9700 = !DILocation(line: 158, column: 17, scope: !9695)
!9701 = !DILocation(line: 158, column: 4, scope: !9695)
!9702 = !DILocation(line: 159, column: 7, scope: !9696)
!9703 = !DILocation(line: 160, column: 3, scope: !9696)
!9704 = !DILocation(line: 160, column: 8, scope: !9696)
!9705 = !DILocation(line: 160, column: 13, scope: !9696)
!9706 = !DILocation(line: 160, column: 26, scope: !9696)
!9707 = !DILocation(line: 160, column: 31, scope: !9696)
!9708 = !DILocation(line: 160, column: 36, scope: !9696)
!9709 = !DILocation(line: 161, column: 12, scope: !9696)
!9710 = !DILocation(line: 161, column: 17, scope: !9696)
!9711 = !DILocation(line: 161, column: 29, scope: !9696)
!9712 = !DILocation(line: 163, column: 1, scope: !9656)
!9713 = distinct !DISubprogram(name: "esp_alloc_lun_tag", scope: !3, file: !3, line: 574, type: !9714, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{!232, !203, !6925}
!9716 = !DILocalVariable(name: "ent", arg: 1, scope: !9713, file: !3, line: 574, type: !203)
!9717 = !DILocation(line: 574, column: 52, scope: !9713)
!9718 = !DILocalVariable(name: "lp", arg: 2, scope: !9713, file: !3, line: 575, type: !6925)
!9719 = !DILocation(line: 575, column: 30, scope: !9713)
!9720 = !DILocation(line: 577, column: 7, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9713, file: !3, line: 577, column: 6)
!9722 = !DILocation(line: 577, column: 12, scope: !9721)
!9723 = !DILocation(line: 577, column: 6, scope: !9713)
!9724 = !DILocation(line: 579, column: 7, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 579, column: 7)
!9726 = distinct !DILexicalBlock(scope: !9721, file: !3, line: 577, column: 25)
!9727 = !DILocation(line: 579, column: 11, scope: !9725)
!9728 = !DILocation(line: 579, column: 7, scope: !9726)
!9729 = !DILocation(line: 580, column: 4, scope: !9725)
!9730 = !DILocation(line: 582, column: 7, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 582, column: 7)
!9732 = !DILocation(line: 582, column: 11, scope: !9731)
!9733 = !DILocation(line: 582, column: 7, scope: !9726)
!9734 = !DILocation(line: 586, column: 8, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 586, column: 8)
!9736 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 582, column: 17)
!9737 = !DILocation(line: 586, column: 12, scope: !9735)
!9738 = !DILocation(line: 586, column: 8, scope: !9736)
!9739 = !DILocation(line: 587, column: 5, scope: !9735)
!9740 = !DILocation(line: 592, column: 4, scope: !9736)
!9741 = !DILocation(line: 592, column: 8, scope: !9736)
!9742 = !DILocation(line: 592, column: 13, scope: !9736)
!9743 = !DILocation(line: 593, column: 3, scope: !9736)
!9744 = !DILocation(line: 593, column: 14, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 593, column: 14)
!9746 = !DILocation(line: 593, column: 18, scope: !9745)
!9747 = !DILocation(line: 593, column: 14, scope: !9731)
!9748 = !DILocation(line: 597, column: 4, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 593, column: 30)
!9750 = !DILocation(line: 597, column: 8, scope: !9749)
!9751 = !DILocation(line: 597, column: 13, scope: !9749)
!9752 = !DILocation(line: 598, column: 4, scope: !9749)
!9753 = !DILocation(line: 601, column: 24, scope: !9726)
!9754 = !DILocation(line: 601, column: 3, scope: !9726)
!9755 = !DILocation(line: 601, column: 7, scope: !9726)
!9756 = !DILocation(line: 601, column: 22, scope: !9726)
!9757 = !DILocation(line: 602, column: 3, scope: !9726)
!9758 = !DILocation(line: 606, column: 6, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9713, file: !3, line: 606, column: 6)
!9760 = !DILocation(line: 606, column: 10, scope: !9759)
!9761 = !DILocation(line: 606, column: 25, scope: !9759)
!9762 = !DILocation(line: 606, column: 28, scope: !9759)
!9763 = !DILocation(line: 606, column: 32, scope: !9759)
!9764 = !DILocation(line: 606, column: 6, scope: !9713)
!9765 = !DILocation(line: 607, column: 3, scope: !9759)
!9766 = !DILocation(line: 609, column: 2, scope: !9713)
!9767 = !DILocation(line: 609, column: 2, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 609, column: 2)
!9769 = distinct !DILexicalBlock(scope: !9713, file: !3, line: 609, column: 2)
!9770 = !DILocation(line: 609, column: 2, scope: !9769)
!9771 = !DILocation(line: 609, column: 2, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9768, file: !3, line: 609, column: 2)
!9773 = !DILocation(line: 609, column: 2, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 609, column: 2)
!9775 = !DILocation(line: 609, column: 2, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 609, column: 2)
!9777 = !{i32 -2141327820, i32 -2141327791, i32 -2141327745, i32 -2141327687, i32 -2141327633, i32 -2141327579, i32 -2141327524, i32 -2141327493}
!9778 = !DILocation(line: 609, column: 2, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 609, column: 2)
!9780 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 609, column: 2)
!9781 = !{i32 -2141327047, i32 -2141327040, i32 -2141326986, i32 -2141326955, i32 -2141326925}
!9782 = !DILocation(line: 609, column: 2, scope: !9780)
!9783 = !DILocation(line: 611, column: 38, scope: !9713)
!9784 = !DILocation(line: 611, column: 2, scope: !9713)
!9785 = !DILocation(line: 611, column: 6, scope: !9713)
!9786 = !DILocation(line: 611, column: 18, scope: !9713)
!9787 = !DILocation(line: 611, column: 23, scope: !9713)
!9788 = !DILocation(line: 611, column: 36, scope: !9713)
!9789 = !DILocation(line: 612, column: 2, scope: !9713)
!9790 = !DILocation(line: 612, column: 6, scope: !9713)
!9791 = !DILocation(line: 612, column: 16, scope: !9713)
!9792 = !DILocation(line: 614, column: 2, scope: !9713)
!9793 = !DILocation(line: 615, column: 1, scope: !9713)
!9794 = distinct !DISubprogram(name: "esp_map_sense", scope: !3, file: !3, line: 630, type: !8368, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9795 = !DILocalVariable(name: "esp", arg: 1, scope: !9794, file: !3, line: 630, type: !5289)
!9796 = !DILocation(line: 630, column: 39, scope: !9794)
!9797 = !DILocalVariable(name: "ent", arg: 2, scope: !9794, file: !3, line: 630, type: !203)
!9798 = !DILocation(line: 630, column: 66, scope: !9794)
!9799 = !DILocation(line: 632, column: 19, scope: !9794)
!9800 = !DILocation(line: 632, column: 24, scope: !9794)
!9801 = !DILocation(line: 632, column: 29, scope: !9794)
!9802 = !DILocation(line: 632, column: 2, scope: !9794)
!9803 = !DILocation(line: 632, column: 7, scope: !9794)
!9804 = !DILocation(line: 632, column: 17, scope: !9794)
!9805 = !DILocation(line: 633, column: 6, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9794, file: !3, line: 633, column: 6)
!9807 = !DILocation(line: 633, column: 11, scope: !9806)
!9808 = !DILocation(line: 633, column: 17, scope: !9806)
!9809 = !DILocation(line: 633, column: 6, scope: !9794)
!9810 = !DILocation(line: 634, column: 31, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 633, column: 40)
!9812 = !DILocation(line: 634, column: 36, scope: !9811)
!9813 = !DILocation(line: 634, column: 20, scope: !9811)
!9814 = !DILocation(line: 634, column: 3, scope: !9811)
!9815 = !DILocation(line: 634, column: 8, scope: !9811)
!9816 = !DILocation(line: 634, column: 18, scope: !9811)
!9817 = !DILocation(line: 635, column: 3, scope: !9811)
!9818 = !DILocation(line: 638, column: 19, scope: !9794)
!9819 = !DILocation(line: 638, column: 2, scope: !9794)
!9820 = !DILocation(line: 638, column: 7, scope: !9794)
!9821 = !DILocation(line: 638, column: 17, scope: !9794)
!9822 = !DILocation(line: 640, column: 1, scope: !9794)
!9823 = !DILocalVariable(name: "dev", arg: 1, scope: !5560, file: !5561, line: 271, type: !2022)
!9824 = !DILocation(line: 271, column: 62, scope: !5560)
!9825 = !DILocalVariable(name: "ptr", arg: 2, scope: !5560, file: !5561, line: 271, type: !202)
!9826 = !DILocation(line: 271, column: 73, scope: !5560)
!9827 = !DILocalVariable(name: "size", arg: 3, scope: !5560, file: !5561, line: 272, type: !867)
!9828 = !DILocation(line: 272, column: 10, scope: !5560)
!9829 = !DILocalVariable(name: "dir", arg: 4, scope: !5560, file: !5561, line: 272, type: !146)
!9830 = !DILocation(line: 272, column: 40, scope: !5560)
!9831 = !DILocalVariable(name: "attrs", arg: 5, scope: !5560, file: !5561, line: 272, type: !201)
!9832 = !DILocation(line: 272, column: 59, scope: !5560)
!9833 = !DILocalVariable(name: "__ret_warn_once", scope: !9834, file: !5561, line: 275, type: !232)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !5561, line: 275, column: 6)
!9835 = distinct !DILexicalBlock(scope: !5560, file: !5561, line: 275, column: 6)
!9836 = !DILocation(line: 275, column: 6, scope: !9834)
!9837 = !DILocation(line: 275, column: 6, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9834, file: !5561, line: 275, column: 6)
!9839 = !DILocation(line: 0, scope: !9838)
!9840 = !DILocation(line: 275, column: 6, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9838, file: !5561, line: 275, column: 6)
!9842 = !DILocalVariable(name: "__ret_warn_on", scope: !9843, file: !5561, line: 275, type: !232)
!9843 = distinct !DILexicalBlock(scope: !9841, file: !5561, line: 275, column: 6)
!9844 = !DILocation(line: 275, column: 6, scope: !9843)
!9845 = !DILocation(line: 275, column: 6, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9843, file: !5561, line: 275, column: 6)
!9847 = !DILocation(line: 275, column: 6, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9846, file: !5561, line: 275, column: 6)
!9849 = !DILocation(line: 275, column: 6, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9848, file: !5561, line: 275, column: 6)
!9851 = !DILocation(line: 275, column: 6, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9848, file: !5561, line: 275, column: 6)
!9853 = !DILocation(line: 275, column: 6, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9852, file: !5561, line: 275, column: 6)
!9855 = !DILocation(line: 275, column: 6, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9852, file: !5561, line: 275, column: 6)
!9857 = !{i32 -2141423360, i32 -2141423331, i32 -2141423285, i32 -2141423227, i32 -2141423173, i32 -2141423119, i32 -2141423064, i32 -2141423033}
!9858 = !DILocation(line: 275, column: 6, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9852, file: !5561, line: 275, column: 6)
!9860 = !{i32 -2141422613, i32 -2141422606, i32 -2141422554, i32 -2141422523, i32 -2141422493}
!9861 = !DILocation(line: 275, column: 6, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9852, file: !5561, line: 275, column: 6)
!9863 = !DILocation(line: 275, column: 6, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9848, file: !5561, line: 275, column: 6)
!9865 = !DILocation(line: 275, column: 6, scope: !9835)
!9866 = !DILocation(line: 275, column: 6, scope: !5560)
!9867 = !DILocation(line: 277, column: 3, scope: !9835)
!9868 = !DILocation(line: 278, column: 23, scope: !5560)
!9869 = !DILocation(line: 278, column: 28, scope: !5560)
!9870 = !DILocation(line: 278, column: 33, scope: !5560)
!9871 = !DILocation(line: 278, column: 2, scope: !5560)
!9872 = !DILocation(line: 279, column: 28, scope: !5560)
!9873 = !DILocation(line: 279, column: 33, scope: !5560)
!9874 = !DILocation(line: 279, column: 52, scope: !5560)
!9875 = !DILocation(line: 280, column: 4, scope: !5560)
!9876 = !DILocation(line: 280, column: 10, scope: !5560)
!9877 = !DILocation(line: 280, column: 15, scope: !5560)
!9878 = !DILocation(line: 279, column: 9, scope: !5560)
!9879 = !DILocation(line: 279, column: 2, scope: !5560)
!9880 = !DILocation(line: 281, column: 1, scope: !5560)
!9881 = distinct !DISubprogram(name: "dev_name", scope: !47, file: !47, line: 609, type: !9882, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9882 = !DISubroutineType(types: !9883)
!9883 = !{!687, !2363}
!9884 = !DILocalVariable(name: "dev", arg: 1, scope: !9881, file: !47, line: 609, type: !2363)
!9885 = !DILocation(line: 609, column: 57, scope: !9881)
!9886 = !DILocation(line: 612, column: 6, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9881, file: !47, line: 612, column: 6)
!9888 = !DILocation(line: 612, column: 11, scope: !9887)
!9889 = !DILocation(line: 612, column: 6, scope: !9881)
!9890 = !DILocation(line: 613, column: 10, scope: !9887)
!9891 = !DILocation(line: 613, column: 15, scope: !9887)
!9892 = !DILocation(line: 613, column: 3, scope: !9887)
!9893 = !DILocation(line: 615, column: 23, scope: !9881)
!9894 = !DILocation(line: 615, column: 28, scope: !9881)
!9895 = !DILocation(line: 615, column: 9, scope: !9881)
!9896 = !DILocation(line: 615, column: 2, scope: !9881)
!9897 = !DILocation(line: 616, column: 1, scope: !9881)
!9898 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !5561, file: !5561, line: 87, type: !9899, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9899 = !DISubroutineType(types: !9900)
!9900 = !{null, !2022, !1855, !201}
!9901 = !DILocalVariable(name: "dev", arg: 1, scope: !9898, file: !5561, line: 87, type: !2022)
!9902 = !DILocation(line: 87, column: 56, scope: !9898)
!9903 = !DILocalVariable(name: "addr", arg: 2, scope: !9898, file: !5561, line: 87, type: !1855)
!9904 = !DILocation(line: 87, column: 73, scope: !9898)
!9905 = !DILocalVariable(name: "len", arg: 3, scope: !9898, file: !5561, line: 88, type: !201)
!9906 = !DILocation(line: 88, column: 17, scope: !9898)
!9907 = !DILocation(line: 90, column: 1, scope: !9898)
!9908 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !9909, file: !9909, line: 18, type: !9910, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9909 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!9910 = !DISubroutineType(types: !9911)
!9911 = !{!201, !201}
!9912 = !DILocalVariable(name: "x", arg: 1, scope: !9908, file: !9909, line: 18, type: !201)
!9913 = !DILocation(line: 18, column: 63, scope: !9908)
!9914 = !DILocalVariable(name: "y", scope: !9908, file: !9909, line: 20, type: !201)
!9915 = !DILocation(line: 20, column: 16, scope: !9908)
!9916 = !DILocation(line: 20, column: 20, scope: !9908)
!9917 = !DILocation(line: 20, column: 22, scope: !9908)
!9918 = !DILocation(line: 23, column: 6, scope: !9908)
!9919 = !DILocation(line: 23, column: 12, scope: !9908)
!9920 = !DILocation(line: 23, column: 16, scope: !9908)
!9921 = !DILocation(line: 23, column: 14, scope: !9908)
!9922 = !DILocation(line: 23, column: 11, scope: !9908)
!9923 = !DILocation(line: 23, column: 21, scope: !9908)
!9924 = !DILocation(line: 23, column: 55, scope: !9908)
!9925 = !DILocation(line: 23, column: 53, scope: !9908)
!9926 = !DILocation(line: 23, column: 8, scope: !9908)
!9927 = !DILocation(line: 23, column: 4, scope: !9908)
!9928 = !DILocation(line: 25, column: 9, scope: !9908)
!9929 = !DILocation(line: 25, column: 2, scope: !9908)
!9930 = distinct !DISubprogram(name: "kobject_name", scope: !1724, file: !1724, line: 88, type: !9931, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9931 = !DISubroutineType(types: !9932)
!9932 = !{!687, !9933}
!9933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9934, size: 64)
!9934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1723)
!9935 = !DILocalVariable(name: "kobj", arg: 1, scope: !9930, file: !1724, line: 88, type: !9933)
!9936 = !DILocation(line: 88, column: 62, scope: !9930)
!9937 = !DILocation(line: 90, column: 9, scope: !9930)
!9938 = !DILocation(line: 90, column: 15, scope: !9930)
!9939 = !DILocation(line: 90, column: 2, scope: !9930)
!9940 = distinct !DISubprogram(name: "scsi_sglist", scope: !216, file: !216, line: 184, type: !9941, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{!5181, !214}
!9943 = !DILocalVariable(name: "cmd", arg: 1, scope: !9940, file: !216, line: 184, type: !214)
!9944 = !DILocation(line: 184, column: 65, scope: !9940)
!9945 = !DILocation(line: 186, column: 9, scope: !9940)
!9946 = !DILocation(line: 186, column: 14, scope: !9940)
!9947 = !DILocation(line: 186, column: 18, scope: !9940)
!9948 = !DILocation(line: 186, column: 24, scope: !9940)
!9949 = !DILocation(line: 186, column: 2, scope: !9940)
!9950 = distinct !DISubprogram(name: "scsi_sg_count", scope: !216, file: !216, line: 179, type: !9951, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9951 = !DISubroutineType(types: !9952)
!9952 = !{!7, !214}
!9953 = !DILocalVariable(name: "cmd", arg: 1, scope: !9950, file: !216, line: 179, type: !214)
!9954 = !DILocation(line: 179, column: 56, scope: !9950)
!9955 = !DILocation(line: 181, column: 9, scope: !9950)
!9956 = !DILocation(line: 181, column: 14, scope: !9950)
!9957 = !DILocation(line: 181, column: 18, scope: !9950)
!9958 = !DILocation(line: 181, column: 24, scope: !9950)
!9959 = !DILocation(line: 181, column: 2, scope: !9950)
!9960 = distinct !DISubprogram(name: "sg_virt", scope: !5178, file: !5178, line: 256, type: !9961, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{!202, !5181}
!9963 = !DILocalVariable(name: "page", arg: 1, scope: !9964, file: !116, line: 1514, type: !9967)
!9964 = distinct !DISubprogram(name: "lowmem_page_address", scope: !116, file: !116, line: 1514, type: !9965, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9965 = !DISubroutineType(types: !9966)
!9966 = !{!202, !9967}
!9967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9968, size: 64)
!9968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!9969 = !DILocation(line: 1514, column: 69, scope: !9964, inlinedAt: !9970)
!9970 = distinct !DILocation(line: 258, column: 9, scope: !9960)
!9971 = !DILocalVariable(name: "sg", arg: 1, scope: !9960, file: !5178, line: 256, type: !5181)
!9972 = !DILocation(line: 256, column: 49, scope: !9960)
!9973 = !DILocation(line: 258, column: 9, scope: !9960)
!9974 = !DILocation(line: 1516, column: 9, scope: !9964, inlinedAt: !9970)
!9975 = !DILocation(line: 258, column: 37, scope: !9960)
!9976 = !DILocation(line: 258, column: 41, scope: !9960)
!9977 = !DILocation(line: 258, column: 35, scope: !9960)
!9978 = !DILocation(line: 258, column: 2, scope: !9960)
!9979 = distinct !DISubprogram(name: "sg_page", scope: !5178, file: !5178, line: 124, type: !9980, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9980 = !DISubroutineType(types: !9981)
!9981 = !{!568, !5181}
!9982 = !DILocalVariable(name: "sg", arg: 1, scope: !9979, file: !5178, line: 124, type: !5181)
!9983 = !DILocation(line: 124, column: 56, scope: !9979)
!9984 = !DILocation(line: 129, column: 26, scope: !9979)
!9985 = !DILocation(line: 129, column: 31, scope: !9979)
!9986 = !DILocation(line: 129, column: 41, scope: !9979)
!9987 = !DILocation(line: 129, column: 9, scope: !9979)
!9988 = !DILocation(line: 129, column: 2, scope: !9979)
!9989 = distinct !DISubprogram(name: "esp_reconnect_with_tag", scope: !3, file: !3, line: 1054, type: !9990, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!9990 = !DISubroutineType(types: !9991)
!9991 = !{!203, !5289, !6925}
!9992 = !DILocalVariable(name: "esp", arg: 1, scope: !9989, file: !3, line: 1054, type: !5289)
!9993 = !DILocation(line: 1054, column: 65, scope: !9989)
!9994 = !DILocalVariable(name: "lp", arg: 2, scope: !9989, file: !3, line: 1055, type: !6925)
!9995 = !DILocation(line: 1055, column: 32, scope: !9989)
!9996 = !DILocalVariable(name: "ent", scope: !9989, file: !3, line: 1057, type: !203)
!9997 = !DILocation(line: 1057, column: 24, scope: !9989)
!9998 = !DILocalVariable(name: "i", scope: !9989, file: !3, line: 1058, type: !232)
!9999 = !DILocation(line: 1058, column: 6, scope: !9989)
!10000 = !DILocation(line: 1060, column: 7, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1060, column: 6)
!10002 = !DILocation(line: 1060, column: 11, scope: !10001)
!10003 = !DILocation(line: 1060, column: 6, scope: !9989)
!10004 = !DILocation(line: 1061, column: 3, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10001, file: !3, line: 1060, column: 23)
!10006 = !DILocation(line: 1063, column: 3, scope: !10005)
!10007 = !DILocation(line: 1066, column: 2, scope: !9989)
!10008 = !DILocation(line: 1066, column: 2, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 1066, column: 2)
!10010 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1066, column: 2)
!10011 = !DILocation(line: 1066, column: 2, scope: !10010)
!10012 = !DILocation(line: 1068, column: 9, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1068, column: 2)
!10014 = !DILocation(line: 1068, column: 7, scope: !10013)
!10015 = !DILocation(line: 1068, column: 14, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10013, file: !3, line: 1068, column: 2)
!10017 = !DILocation(line: 1068, column: 16, scope: !10016)
!10018 = !DILocation(line: 1068, column: 2, scope: !10013)
!10019 = !DILocation(line: 1069, column: 7, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10021, file: !3, line: 1069, column: 7)
!10021 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 1068, column: 43)
!10022 = !DILocation(line: 1069, column: 12, scope: !10020)
!10023 = !DILocation(line: 1069, column: 17, scope: !10020)
!10024 = !DILocation(line: 1069, column: 29, scope: !10020)
!10025 = !DILocation(line: 1069, column: 7, scope: !10021)
!10026 = !DILocation(line: 1070, column: 4, scope: !10020)
!10027 = !DILocation(line: 1071, column: 2, scope: !10021)
!10028 = !DILocation(line: 1068, column: 39, scope: !10016)
!10029 = !DILocation(line: 1068, column: 2, scope: !10016)
!10030 = distinct !{!10030, !10018, !10031}
!10031 = !DILocation(line: 1071, column: 2, scope: !10013)
!10032 = !DILocation(line: 1072, column: 6, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1072, column: 6)
!10034 = !DILocation(line: 1072, column: 8, scope: !10033)
!10035 = !DILocation(line: 1072, column: 6, scope: !9989)
!10036 = !DILocation(line: 1073, column: 3, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 1072, column: 31)
!10038 = !DILocation(line: 1075, column: 3, scope: !10037)
!10039 = !DILocation(line: 1078, column: 14, scope: !9989)
!10040 = !DILocation(line: 1078, column: 2, scope: !9989)
!10041 = !DILocation(line: 1078, column: 7, scope: !9989)
!10042 = !DILocation(line: 1078, column: 12, scope: !9989)
!10043 = !DILocation(line: 1079, column: 14, scope: !9989)
!10044 = !DILocation(line: 1079, column: 2, scope: !9989)
!10045 = !DILocation(line: 1079, column: 7, scope: !9989)
!10046 = !DILocation(line: 1079, column: 12, scope: !9989)
!10047 = !DILocation(line: 1081, column: 2, scope: !9989)
!10048 = !DILocation(line: 1081, column: 2, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 1081, column: 2)
!10050 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1081, column: 2)
!10051 = !DILocation(line: 1081, column: 2, scope: !10050)
!10052 = !DILocation(line: 1084, column: 6, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1084, column: 6)
!10054 = !DILocation(line: 1084, column: 11, scope: !10053)
!10055 = !DILocation(line: 1084, column: 16, scope: !10053)
!10056 = !DILocation(line: 1084, column: 6, scope: !9989)
!10057 = !DILocation(line: 1085, column: 3, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10053, file: !3, line: 1084, column: 31)
!10059 = !DILocation(line: 1087, column: 3, scope: !10058)
!10060 = !DILocation(line: 1090, column: 7, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1090, column: 6)
!10062 = !DILocation(line: 1090, column: 12, scope: !10061)
!10063 = !DILocation(line: 1090, column: 17, scope: !10061)
!10064 = !DILocation(line: 1090, column: 35, scope: !10061)
!10065 = !DILocation(line: 1090, column: 6, scope: !9989)
!10066 = !DILocation(line: 1091, column: 3, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 1090, column: 47)
!10068 = !DILocation(line: 1093, column: 3, scope: !10067)
!10069 = !DILocation(line: 1097, column: 2, scope: !9989)
!10070 = !DILocation(line: 1097, column: 7, scope: !9989)
!10071 = !DILocation(line: 1097, column: 24, scope: !9989)
!10072 = !DILocation(line: 1098, column: 2, scope: !9989)
!10073 = !DILocation(line: 1098, column: 7, scope: !9989)
!10074 = !DILocation(line: 1098, column: 24, scope: !9989)
!10075 = !DILocation(line: 1099, column: 2, scope: !9989)
!10076 = !DILocation(line: 1099, column: 7, scope: !9989)
!10077 = !DILocation(line: 1099, column: 12, scope: !9989)
!10078 = !DILocation(line: 1099, column: 25, scope: !9989)
!10079 = !DILocation(line: 1099, column: 30, scope: !9989)
!10080 = !DILocation(line: 1099, column: 35, scope: !9989)
!10081 = !DILocation(line: 1103, column: 15, scope: !9989)
!10082 = !DILocation(line: 1103, column: 2, scope: !9989)
!10083 = !DILocation(line: 1105, column: 9, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1105, column: 2)
!10085 = !DILocation(line: 1105, column: 7, scope: !10084)
!10086 = !DILocation(line: 1105, column: 14, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 1105, column: 2)
!10088 = !DILocation(line: 1105, column: 16, scope: !10087)
!10089 = !DILocation(line: 1105, column: 2, scope: !10084)
!10090 = !DILocation(line: 1106, column: 7, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 1106, column: 7)
!10092 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 1105, column: 47)
!10093 = !DILocation(line: 1106, column: 12, scope: !10091)
!10094 = !DILocation(line: 1106, column: 17, scope: !10091)
!10095 = !DILocation(line: 1106, column: 29, scope: !10091)
!10096 = !DILocation(line: 1106, column: 7, scope: !10092)
!10097 = !DILocation(line: 1107, column: 16, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1106, column: 35)
!10099 = !DILocation(line: 1107, column: 4, scope: !10098)
!10100 = !DILocation(line: 1107, column: 9, scope: !10098)
!10101 = !DILocation(line: 1107, column: 14, scope: !10098)
!10102 = !DILocation(line: 1108, column: 16, scope: !10098)
!10103 = !DILocation(line: 1108, column: 4, scope: !10098)
!10104 = !DILocation(line: 1108, column: 9, scope: !10098)
!10105 = !DILocation(line: 1108, column: 14, scope: !10098)
!10106 = !DILocation(line: 1109, column: 8, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 1109, column: 8)
!10108 = !DILocation(line: 1109, column: 13, scope: !10107)
!10109 = !DILocation(line: 1109, column: 18, scope: !10107)
!10110 = !DILocation(line: 1109, column: 8, scope: !10098)
!10111 = !DILocation(line: 1110, column: 5, scope: !10107)
!10112 = !DILocation(line: 1111, column: 3, scope: !10098)
!10113 = !DILocation(line: 1112, column: 3, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 1112, column: 3)
!10115 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 1112, column: 3)
!10116 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 1112, column: 3)
!10117 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 1112, column: 3)
!10118 = !DILocation(line: 1113, column: 2, scope: !10092)
!10119 = !DILocation(line: 1105, column: 43, scope: !10087)
!10120 = !DILocation(line: 1105, column: 2, scope: !10087)
!10121 = distinct !{!10121, !10089, !10122}
!10122 = !DILocation(line: 1113, column: 2, scope: !10084)
!10123 = !DILocation(line: 1114, column: 6, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1114, column: 6)
!10125 = !DILocation(line: 1114, column: 8, scope: !10124)
!10126 = !DILocation(line: 1114, column: 6, scope: !9989)
!10127 = !DILocation(line: 1115, column: 3, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 1114, column: 35)
!10129 = !DILocation(line: 1116, column: 3, scope: !10128)
!10130 = !DILocation(line: 1118, column: 2, scope: !9989)
!10131 = !DILocation(line: 1118, column: 7, scope: !9989)
!10132 = !DILocation(line: 1118, column: 12, scope: !9989)
!10133 = !DILocation(line: 1118, column: 22, scope: !9989)
!10134 = !DILocation(line: 1119, column: 2, scope: !9989)
!10135 = !DILocation(line: 1119, column: 7, scope: !9989)
!10136 = !DILocation(line: 1119, column: 12, scope: !9989)
!10137 = !DILocation(line: 1119, column: 27, scope: !9989)
!10138 = !DILocation(line: 1121, column: 2, scope: !9989)
!10139 = !DILocation(line: 1121, column: 2, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 1121, column: 2)
!10141 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1121, column: 2)
!10142 = !DILocation(line: 1121, column: 2, scope: !10141)
!10143 = !DILocation(line: 1126, column: 6, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1126, column: 6)
!10145 = !DILocation(line: 1126, column: 11, scope: !10144)
!10146 = !DILocation(line: 1126, column: 28, scope: !10144)
!10147 = !DILocation(line: 1126, column: 47, scope: !10144)
!10148 = !DILocation(line: 1127, column: 6, scope: !10144)
!10149 = !DILocation(line: 1127, column: 11, scope: !10144)
!10150 = !DILocation(line: 1127, column: 28, scope: !10144)
!10151 = !DILocation(line: 1126, column: 6, scope: !9989)
!10152 = !DILocation(line: 1128, column: 3, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 1127, column: 49)
!10154 = !DILocation(line: 1131, column: 3, scope: !10153)
!10155 = !DILocation(line: 1134, column: 8, scope: !9989)
!10156 = !DILocation(line: 1134, column: 12, scope: !9989)
!10157 = !DILocation(line: 1134, column: 24, scope: !9989)
!10158 = !DILocation(line: 1134, column: 29, scope: !9989)
!10159 = !DILocation(line: 1134, column: 6, scope: !9989)
!10160 = !DILocation(line: 1135, column: 7, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1135, column: 6)
!10162 = !DILocation(line: 1135, column: 6, scope: !9989)
!10163 = !DILocation(line: 1136, column: 3, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 1135, column: 12)
!10165 = !DILocation(line: 1139, column: 3, scope: !10164)
!10166 = !DILocation(line: 1142, column: 9, scope: !9989)
!10167 = !DILocation(line: 1142, column: 2, scope: !9989)
!10168 = !DILocation(line: 1143, column: 1, scope: !9989)
!10169 = distinct !DISubprogram(name: "esp_restore_pointers", scope: !3, file: !3, line: 480, type: !8368, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10170 = !DILocalVariable(name: "esp", arg: 1, scope: !10169, file: !3, line: 480, type: !5289)
!10171 = !DILocation(line: 480, column: 46, scope: !10169)
!10172 = !DILocalVariable(name: "ent", arg: 2, scope: !10169, file: !3, line: 480, type: !203)
!10173 = !DILocation(line: 480, column: 73, scope: !10169)
!10174 = !DILocalVariable(name: "cmd", scope: !10169, file: !3, line: 482, type: !214)
!10175 = !DILocation(line: 482, column: 20, scope: !10169)
!10176 = !DILocation(line: 482, column: 26, scope: !10169)
!10177 = !DILocation(line: 482, column: 31, scope: !10169)
!10178 = !DILocalVariable(name: "spriv", scope: !10169, file: !3, line: 483, type: !5269)
!10179 = !DILocation(line: 483, column: 23, scope: !10169)
!10180 = !DILocation(line: 483, column: 31, scope: !10169)
!10181 = !DILocation(line: 485, column: 6, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 485, column: 6)
!10183 = !DILocation(line: 485, column: 11, scope: !10182)
!10184 = !DILocation(line: 485, column: 17, scope: !10182)
!10185 = !DILocation(line: 485, column: 6, scope: !10169)
!10186 = !DILocation(line: 486, column: 20, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10182, file: !3, line: 485, column: 43)
!10188 = !DILocation(line: 486, column: 25, scope: !10187)
!10189 = !DILocation(line: 486, column: 3, scope: !10187)
!10190 = !DILocation(line: 486, column: 8, scope: !10187)
!10191 = !DILocation(line: 486, column: 18, scope: !10187)
!10192 = !DILocation(line: 487, column: 3, scope: !10187)
!10193 = !DILocation(line: 489, column: 23, scope: !10169)
!10194 = !DILocation(line: 489, column: 28, scope: !10169)
!10195 = !DILocation(line: 489, column: 2, scope: !10169)
!10196 = !DILocation(line: 489, column: 9, scope: !10169)
!10197 = !DILocation(line: 489, column: 21, scope: !10169)
!10198 = !DILocation(line: 490, column: 18, scope: !10169)
!10199 = !DILocation(line: 490, column: 23, scope: !10169)
!10200 = !DILocation(line: 490, column: 2, scope: !10169)
!10201 = !DILocation(line: 490, column: 9, scope: !10169)
!10202 = !DILocation(line: 490, column: 16, scope: !10169)
!10203 = !DILocation(line: 491, column: 18, scope: !10169)
!10204 = !DILocation(line: 491, column: 23, scope: !10169)
!10205 = !DILocation(line: 491, column: 2, scope: !10169)
!10206 = !DILocation(line: 491, column: 9, scope: !10169)
!10207 = !DILocation(line: 491, column: 16, scope: !10169)
!10208 = !DILocation(line: 492, column: 23, scope: !10169)
!10209 = !DILocation(line: 492, column: 28, scope: !10169)
!10210 = !DILocation(line: 492, column: 2, scope: !10169)
!10211 = !DILocation(line: 492, column: 9, scope: !10169)
!10212 = !DILocation(line: 492, column: 21, scope: !10169)
!10213 = !DILocation(line: 493, column: 1, scope: !10169)
!10214 = distinct !DISubprogram(name: "esp_cur_dma_addr", scope: !3, file: !3, line: 404, type: !10215, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10215 = !DISubroutineType(types: !10216)
!10216 = !{!3884, !203, !214}
!10217 = !DILocalVariable(name: "ent", arg: 1, scope: !10214, file: !3, line: 404, type: !203)
!10218 = !DILocation(line: 404, column: 58, scope: !10214)
!10219 = !DILocalVariable(name: "cmd", arg: 2, scope: !10214, file: !3, line: 405, type: !214)
!10220 = !DILocation(line: 405, column: 26, scope: !10214)
!10221 = !DILocalVariable(name: "p", scope: !10214, file: !3, line: 407, type: !5269)
!10222 = !DILocation(line: 407, column: 23, scope: !10214)
!10223 = !DILocation(line: 407, column: 27, scope: !10214)
!10224 = !DILocation(line: 409, column: 6, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 409, column: 6)
!10226 = !DILocation(line: 409, column: 11, scope: !10225)
!10227 = !DILocation(line: 409, column: 17, scope: !10225)
!10228 = !DILocation(line: 409, column: 6, scope: !10214)
!10229 = !DILocation(line: 410, column: 10, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 409, column: 43)
!10231 = !DILocation(line: 410, column: 15, scope: !10230)
!10232 = !DILocation(line: 411, column: 5, scope: !10230)
!10233 = !DILocation(line: 411, column: 10, scope: !10230)
!10234 = !DILocation(line: 411, column: 22, scope: !10230)
!10235 = !DILocation(line: 411, column: 27, scope: !10230)
!10236 = !DILocation(line: 411, column: 20, scope: !10230)
!10237 = !DILocation(line: 410, column: 25, scope: !10230)
!10238 = !DILocation(line: 410, column: 3, scope: !10230)
!10239 = !DILocation(line: 414, column: 9, scope: !10214)
!10240 = !DILocation(line: 415, column: 4, scope: !10214)
!10241 = !DILocation(line: 416, column: 4, scope: !10214)
!10242 = !DILocation(line: 416, column: 7, scope: !10214)
!10243 = !DILocation(line: 415, column: 26, scope: !10214)
!10244 = !DILocation(line: 415, column: 3, scope: !10214)
!10245 = !DILocation(line: 414, column: 35, scope: !10214)
!10246 = !DILocation(line: 414, column: 2, scope: !10214)
!10247 = !DILocation(line: 417, column: 1, scope: !10214)
!10248 = distinct !DISubprogram(name: "esp_cur_dma_len", scope: !3, file: !3, line: 419, type: !10249, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{!7, !203, !214}
!10251 = !DILocalVariable(name: "ent", arg: 1, scope: !10248, file: !3, line: 419, type: !203)
!10252 = !DILocation(line: 419, column: 59, scope: !10248)
!10253 = !DILocalVariable(name: "cmd", arg: 2, scope: !10248, file: !3, line: 420, type: !214)
!10254 = !DILocation(line: 420, column: 27, scope: !10248)
!10255 = !DILocalVariable(name: "p", scope: !10248, file: !3, line: 422, type: !5269)
!10256 = !DILocation(line: 422, column: 23, scope: !10248)
!10257 = !DILocation(line: 422, column: 27, scope: !10248)
!10258 = !DILocation(line: 424, column: 6, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 424, column: 6)
!10260 = !DILocation(line: 424, column: 11, scope: !10259)
!10261 = !DILocation(line: 424, column: 17, scope: !10259)
!10262 = !DILocation(line: 424, column: 6, scope: !10248)
!10263 = !DILocation(line: 426, column: 5, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10259, file: !3, line: 424, column: 43)
!10265 = !DILocation(line: 426, column: 10, scope: !10264)
!10266 = !DILocation(line: 426, column: 22, scope: !10264)
!10267 = !DILocation(line: 426, column: 27, scope: !10264)
!10268 = !DILocation(line: 426, column: 20, scope: !10264)
!10269 = !DILocation(line: 425, column: 32, scope: !10264)
!10270 = !DILocation(line: 425, column: 10, scope: !10264)
!10271 = !DILocation(line: 425, column: 3, scope: !10264)
!10272 = !DILocation(line: 428, column: 9, scope: !10248)
!10273 = !DILocation(line: 428, column: 12, scope: !10248)
!10274 = !DILocation(line: 428, column: 2, scope: !10248)
!10275 = !DILocation(line: 429, column: 1, scope: !10248)
!10276 = distinct !DISubprogram(name: "esp_dma_length_limit", scope: !3, file: !3, line: 522, type: !5311, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10277 = !DILocalVariable(name: "esp", arg: 1, scope: !10276, file: !3, line: 522, type: !5289)
!10278 = !DILocation(line: 522, column: 45, scope: !10276)
!10279 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !10276, file: !3, line: 522, type: !296)
!10280 = !DILocation(line: 522, column: 54, scope: !10276)
!10281 = !DILocalVariable(name: "dma_len", arg: 3, scope: !10276, file: !3, line: 522, type: !296)
!10282 = !DILocation(line: 522, column: 68, scope: !10276)
!10283 = !DILocation(line: 524, column: 6, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 524, column: 6)
!10285 = !DILocation(line: 524, column: 11, scope: !10284)
!10286 = !DILocation(line: 524, column: 15, scope: !10284)
!10287 = !DILocation(line: 524, column: 6, scope: !10276)
!10288 = !DILocation(line: 526, column: 7, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10290, file: !3, line: 526, column: 7)
!10290 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 524, column: 26)
!10291 = !DILocation(line: 526, column: 15, scope: !10289)
!10292 = !DILocation(line: 526, column: 7, scope: !10290)
!10293 = !DILocation(line: 527, column: 12, scope: !10289)
!10294 = !DILocation(line: 527, column: 4, scope: !10289)
!10295 = !DILocation(line: 528, column: 2, scope: !10290)
!10296 = !DILocalVariable(name: "base", scope: !10297, file: !3, line: 529, type: !296)
!10297 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 528, column: 9)
!10298 = !DILocation(line: 529, column: 7, scope: !10297)
!10299 = !DILocalVariable(name: "end", scope: !10297, file: !3, line: 529, type: !296)
!10300 = !DILocation(line: 529, column: 13, scope: !10297)
!10301 = !DILocation(line: 537, column: 7, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10297, file: !3, line: 537, column: 7)
!10303 = !DILocation(line: 537, column: 15, scope: !10302)
!10304 = !DILocation(line: 537, column: 7, scope: !10297)
!10305 = !DILocation(line: 538, column: 12, scope: !10302)
!10306 = !DILocation(line: 538, column: 4, scope: !10302)
!10307 = !DILocation(line: 543, column: 10, scope: !10297)
!10308 = !DILocation(line: 543, column: 19, scope: !10297)
!10309 = !DILocation(line: 543, column: 8, scope: !10297)
!10310 = !DILocation(line: 544, column: 9, scope: !10297)
!10311 = !DILocation(line: 544, column: 16, scope: !10297)
!10312 = !DILocation(line: 544, column: 14, scope: !10297)
!10313 = !DILocation(line: 544, column: 7, scope: !10297)
!10314 = !DILocation(line: 545, column: 7, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10297, file: !3, line: 545, column: 7)
!10316 = !DILocation(line: 545, column: 11, scope: !10315)
!10317 = !DILocation(line: 545, column: 7, scope: !10297)
!10318 = !DILocation(line: 546, column: 8, scope: !10315)
!10319 = !DILocation(line: 546, column: 4, scope: !10315)
!10320 = !DILocation(line: 547, column: 13, scope: !10297)
!10321 = !DILocation(line: 547, column: 19, scope: !10297)
!10322 = !DILocation(line: 547, column: 17, scope: !10297)
!10323 = !DILocation(line: 547, column: 11, scope: !10297)
!10324 = !DILocation(line: 549, column: 9, scope: !10276)
!10325 = !DILocation(line: 549, column: 2, scope: !10276)
!10326 = distinct !DISubprogram(name: "esp_data_bytes_sent", scope: !3, file: !3, line: 1324, type: !10327, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10327 = !DISubroutineType(types: !10328)
!10328 = !{!232, !5289, !203, !214}
!10329 = !DILocalVariable(name: "esp", arg: 1, scope: !10326, file: !3, line: 1324, type: !5289)
!10330 = !DILocation(line: 1324, column: 44, scope: !10326)
!10331 = !DILocalVariable(name: "ent", arg: 2, scope: !10326, file: !3, line: 1324, type: !203)
!10332 = !DILocation(line: 1324, column: 71, scope: !10326)
!10333 = !DILocalVariable(name: "cmd", arg: 3, scope: !10326, file: !3, line: 1325, type: !214)
!10334 = !DILocation(line: 1325, column: 29, scope: !10326)
!10335 = !DILocalVariable(name: "fifo_cnt", scope: !10326, file: !3, line: 1327, type: !232)
!10336 = !DILocation(line: 1327, column: 6, scope: !10326)
!10337 = !DILocalVariable(name: "ecount", scope: !10326, file: !3, line: 1327, type: !232)
!10338 = !DILocation(line: 1327, column: 16, scope: !10326)
!10339 = !DILocalVariable(name: "bytes_sent", scope: !10326, file: !3, line: 1327, type: !232)
!10340 = !DILocation(line: 1327, column: 24, scope: !10326)
!10341 = !DILocalVariable(name: "flush_fifo", scope: !10326, file: !3, line: 1327, type: !232)
!10342 = !DILocation(line: 1327, column: 36, scope: !10326)
!10343 = !DILocation(line: 1329, column: 13, scope: !10326)
!10344 = !DILocation(line: 1329, column: 35, scope: !10326)
!10345 = !DILocation(line: 1329, column: 11, scope: !10326)
!10346 = !DILocation(line: 1330, column: 6, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 1330, column: 6)
!10348 = !DILocation(line: 1330, column: 11, scope: !10347)
!10349 = !DILocation(line: 1330, column: 21, scope: !10347)
!10350 = !DILocation(line: 1330, column: 6, scope: !10326)
!10351 = !DILocation(line: 1331, column: 12, scope: !10347)
!10352 = !DILocation(line: 1331, column: 3, scope: !10347)
!10353 = !DILocation(line: 1333, column: 9, scope: !10326)
!10354 = !DILocation(line: 1334, column: 8, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 1334, column: 6)
!10356 = !DILocation(line: 1334, column: 13, scope: !10355)
!10357 = !DILocation(line: 1334, column: 18, scope: !10355)
!10358 = !DILocation(line: 1334, column: 6, scope: !10326)
!10359 = !DILocation(line: 1335, column: 27, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 1334, column: 36)
!10361 = !DILocation(line: 1335, column: 13, scope: !10360)
!10362 = !DILocation(line: 1336, column: 22, scope: !10360)
!10363 = !DILocation(line: 1336, column: 8, scope: !10360)
!10364 = !DILocation(line: 1336, column: 44, scope: !10360)
!10365 = !DILocation(line: 1335, column: 48, scope: !10360)
!10366 = !DILocation(line: 1335, column: 10, scope: !10360)
!10367 = !DILocation(line: 1337, column: 7, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 1337, column: 7)
!10369 = !DILocation(line: 1337, column: 12, scope: !10368)
!10370 = !DILocation(line: 1337, column: 16, scope: !10368)
!10371 = !DILocation(line: 1337, column: 7, scope: !10360)
!10372 = !DILocation(line: 1338, column: 29, scope: !10368)
!10373 = !DILocation(line: 1338, column: 15, scope: !10368)
!10374 = !DILocation(line: 1338, column: 49, scope: !10368)
!10375 = !DILocation(line: 1338, column: 11, scope: !10368)
!10376 = !DILocation(line: 1338, column: 4, scope: !10368)
!10377 = !DILocation(line: 1339, column: 7, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 1339, column: 7)
!10379 = !DILocation(line: 1339, column: 12, scope: !10378)
!10380 = !DILocation(line: 1339, column: 16, scope: !10378)
!10381 = !DILocation(line: 1339, column: 26, scope: !10378)
!10382 = !DILocation(line: 1339, column: 30, scope: !10378)
!10383 = !DILocation(line: 1339, column: 35, scope: !10378)
!10384 = !DILocation(line: 1339, column: 43, scope: !10378)
!10385 = !DILocation(line: 1339, column: 7, scope: !10360)
!10386 = !DILocation(line: 1340, column: 29, scope: !10378)
!10387 = !DILocation(line: 1340, column: 15, scope: !10378)
!10388 = !DILocation(line: 1340, column: 50, scope: !10378)
!10389 = !DILocation(line: 1340, column: 11, scope: !10378)
!10390 = !DILocation(line: 1340, column: 4, scope: !10378)
!10391 = !DILocation(line: 1341, column: 2, scope: !10360)
!10392 = !DILocation(line: 1343, column: 15, scope: !10326)
!10393 = !DILocation(line: 1343, column: 20, scope: !10326)
!10394 = !DILocation(line: 1343, column: 13, scope: !10326)
!10395 = !DILocation(line: 1344, column: 16, scope: !10326)
!10396 = !DILocation(line: 1344, column: 13, scope: !10326)
!10397 = !DILocation(line: 1345, column: 16, scope: !10326)
!10398 = !DILocation(line: 1345, column: 21, scope: !10326)
!10399 = !DILocation(line: 1345, column: 13, scope: !10326)
!10400 = !DILocation(line: 1355, column: 6, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 1355, column: 6)
!10402 = !DILocation(line: 1355, column: 15, scope: !10401)
!10403 = !DILocation(line: 1355, column: 20, scope: !10401)
!10404 = !DILocation(line: 1355, column: 23, scope: !10401)
!10405 = !DILocation(line: 1355, column: 28, scope: !10401)
!10406 = !DILocation(line: 1355, column: 34, scope: !10401)
!10407 = !DILocation(line: 1355, column: 6, scope: !10326)
!10408 = !DILocalVariable(name: "count", scope: !10409, file: !3, line: 1356, type: !867)
!10409 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 1355, column: 59)
!10410 = !DILocation(line: 1356, column: 10, scope: !10409)
!10411 = !DILocalVariable(name: "offset", scope: !10409, file: !3, line: 1357, type: !867)
!10412 = !DILocation(line: 1357, column: 10, scope: !10409)
!10413 = !DILocation(line: 1357, column: 19, scope: !10409)
!10414 = !DILocalVariable(name: "bval", scope: !10409, file: !3, line: 1358, type: !453)
!10415 = !DILocation(line: 1358, column: 6, scope: !10409)
!10416 = !DILocation(line: 1358, column: 13, scope: !10409)
!10417 = !DILocation(line: 1360, column: 7, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 1360, column: 7)
!10419 = !DILocation(line: 1360, column: 12, scope: !10418)
!10420 = !DILocation(line: 1360, column: 18, scope: !10418)
!10421 = !DILocation(line: 1360, column: 7, scope: !10409)
!10422 = !DILocation(line: 1361, column: 33, scope: !10418)
!10423 = !DILocation(line: 1361, column: 4, scope: !10418)
!10424 = !DILocation(line: 1361, column: 9, scope: !10418)
!10425 = !DILocation(line: 1361, column: 19, scope: !10418)
!10426 = !DILocation(line: 1361, column: 31, scope: !10418)
!10427 = !DILocalVariable(name: "p", scope: !10428, file: !3, line: 1363, type: !5269)
!10428 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 1362, column: 8)
!10429 = !DILocation(line: 1363, column: 25, scope: !10428)
!10430 = !DILocation(line: 1363, column: 29, scope: !10428)
!10431 = !DILocalVariable(name: "ptr", scope: !10428, file: !3, line: 1364, type: !5330)
!10432 = !DILocation(line: 1364, column: 8, scope: !10428)
!10433 = !DILocation(line: 1366, column: 30, scope: !10428)
!10434 = !DILocation(line: 1366, column: 33, scope: !10428)
!10435 = !DILocation(line: 1366, column: 41, scope: !10428)
!10436 = !DILocation(line: 1366, column: 44, scope: !10428)
!10437 = !DILocation(line: 1366, column: 10, scope: !10428)
!10438 = !DILocation(line: 1366, column: 8, scope: !10428)
!10439 = !DILocation(line: 1368, column: 8, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 1368, column: 8)
!10441 = !DILocation(line: 1368, column: 8, scope: !10428)
!10442 = !DILocation(line: 1369, column: 23, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 1368, column: 21)
!10444 = !DILocation(line: 1369, column: 7, scope: !10443)
!10445 = !DILocation(line: 1369, column: 13, scope: !10443)
!10446 = !DILocation(line: 1369, column: 11, scope: !10443)
!10447 = !DILocation(line: 1369, column: 21, scope: !10443)
!10448 = !DILocation(line: 1370, column: 27, scope: !10443)
!10449 = !DILocation(line: 1370, column: 5, scope: !10443)
!10450 = !DILocation(line: 1371, column: 4, scope: !10443)
!10451 = !DILocation(line: 1373, column: 17, scope: !10409)
!10452 = !DILocation(line: 1373, column: 14, scope: !10409)
!10453 = !DILocation(line: 1374, column: 3, scope: !10409)
!10454 = !DILocation(line: 1374, column: 8, scope: !10409)
!10455 = !DILocation(line: 1374, column: 14, scope: !10409)
!10456 = !DILocation(line: 1375, column: 2, scope: !10409)
!10457 = !DILocation(line: 1376, column: 8, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 1376, column: 6)
!10459 = !DILocation(line: 1376, column: 13, scope: !10458)
!10460 = !DILocation(line: 1376, column: 19, scope: !10458)
!10461 = !DILocation(line: 1376, column: 6, scope: !10326)
!10462 = !DILocation(line: 1377, column: 17, scope: !10458)
!10463 = !DILocation(line: 1377, column: 14, scope: !10458)
!10464 = !DILocation(line: 1377, column: 3, scope: !10458)
!10465 = !DILocation(line: 1379, column: 13, scope: !10326)
!10466 = !DILocation(line: 1380, column: 7, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 1380, column: 6)
!10468 = !DILocation(line: 1380, column: 12, scope: !10467)
!10469 = !DILocation(line: 1380, column: 6, scope: !10326)
!10470 = !DILocation(line: 1382, column: 14, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 1380, column: 23)
!10472 = !DILocation(line: 1383, column: 2, scope: !10471)
!10473 = !DILocation(line: 1384, column: 7, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 1384, column: 7)
!10475 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 1383, column: 9)
!10476 = !DILocation(line: 1384, column: 12, scope: !10474)
!10477 = !DILocation(line: 1384, column: 16, scope: !10474)
!10478 = !DILocation(line: 1384, column: 7, scope: !10475)
!10479 = !DILocalVariable(name: "fflags", scope: !10480, file: !3, line: 1385, type: !296)
!10480 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 1384, column: 27)
!10481 = !DILocation(line: 1385, column: 8, scope: !10480)
!10482 = !DILocalVariable(name: "phase", scope: !10480, file: !3, line: 1385, type: !296)
!10483 = !DILocation(line: 1385, column: 16, scope: !10480)
!10484 = !DILocation(line: 1398, column: 16, scope: !10480)
!10485 = !DILocation(line: 1398, column: 4, scope: !10480)
!10486 = !DILocation(line: 1398, column: 9, scope: !10480)
!10487 = !DILocation(line: 1398, column: 14, scope: !10480)
!10488 = !DILocation(line: 1399, column: 12, scope: !10480)
!10489 = !DILocation(line: 1399, column: 17, scope: !10480)
!10490 = !DILocation(line: 1399, column: 22, scope: !10480)
!10491 = !DILocation(line: 1399, column: 10, scope: !10480)
!10492 = !DILocation(line: 1400, column: 13, scope: !10480)
!10493 = !DILocation(line: 1400, column: 11, scope: !10480)
!10494 = !DILocation(line: 1402, column: 9, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10480, file: !3, line: 1402, column: 8)
!10496 = !DILocation(line: 1402, column: 15, scope: !10495)
!10497 = !DILocation(line: 1402, column: 26, scope: !10495)
!10498 = !DILocation(line: 1403, column: 10, scope: !10495)
!10499 = !DILocation(line: 1403, column: 17, scope: !10495)
!10500 = !DILocation(line: 1403, column: 37, scope: !10495)
!10501 = !DILocation(line: 1404, column: 9, scope: !10495)
!10502 = !DILocation(line: 1404, column: 15, scope: !10495)
!10503 = !DILocation(line: 1404, column: 26, scope: !10495)
!10504 = !DILocation(line: 1405, column: 10, scope: !10495)
!10505 = !DILocation(line: 1405, column: 17, scope: !10495)
!10506 = !DILocation(line: 1402, column: 8, scope: !10480)
!10507 = !DILocation(line: 1406, column: 5, scope: !10495)
!10508 = !DILocation(line: 1407, column: 3, scope: !10480)
!10509 = !DILocation(line: 1408, column: 9, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 1408, column: 7)
!10511 = !DILocation(line: 1408, column: 14, scope: !10510)
!10512 = !DILocation(line: 1408, column: 20, scope: !10510)
!10513 = !DILocation(line: 1408, column: 7, scope: !10475)
!10514 = !DILocation(line: 1409, column: 15, scope: !10510)
!10515 = !DILocation(line: 1409, column: 4, scope: !10510)
!10516 = !DILocation(line: 1412, column: 6, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 1412, column: 6)
!10518 = !DILocation(line: 1412, column: 6, scope: !10326)
!10519 = !DILocation(line: 1413, column: 18, scope: !10517)
!10520 = !DILocation(line: 1413, column: 3, scope: !10517)
!10521 = !DILocation(line: 1415, column: 9, scope: !10326)
!10522 = !DILocation(line: 1415, column: 2, scope: !10326)
!10523 = !DILocation(line: 1416, column: 1, scope: !10326)
!10524 = distinct !DISubprogram(name: "esp_advance_dma", scope: !3, file: !3, line: 431, type: !8693, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10525 = !DILocalVariable(name: "esp", arg: 1, scope: !10524, file: !3, line: 431, type: !5289)
!10526 = !DILocation(line: 431, column: 41, scope: !10524)
!10527 = !DILocalVariable(name: "ent", arg: 2, scope: !10524, file: !3, line: 431, type: !203)
!10528 = !DILocation(line: 431, column: 68, scope: !10524)
!10529 = !DILocalVariable(name: "cmd", arg: 3, scope: !10524, file: !3, line: 432, type: !214)
!10530 = !DILocation(line: 432, column: 26, scope: !10524)
!10531 = !DILocalVariable(name: "len", arg: 4, scope: !10524, file: !3, line: 432, type: !7)
!10532 = !DILocation(line: 432, column: 44, scope: !10524)
!10533 = !DILocalVariable(name: "p", scope: !10524, file: !3, line: 434, type: !5269)
!10534 = !DILocation(line: 434, column: 23, scope: !10524)
!10535 = !DILocation(line: 434, column: 27, scope: !10524)
!10536 = !DILocation(line: 436, column: 6, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 436, column: 6)
!10538 = !DILocation(line: 436, column: 11, scope: !10537)
!10539 = !DILocation(line: 436, column: 17, scope: !10537)
!10540 = !DILocation(line: 436, column: 6, scope: !10524)
!10541 = !DILocation(line: 437, column: 21, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10537, file: !3, line: 436, column: 43)
!10543 = !DILocation(line: 437, column: 3, scope: !10542)
!10544 = !DILocation(line: 437, column: 8, scope: !10542)
!10545 = !DILocation(line: 437, column: 18, scope: !10542)
!10546 = !DILocation(line: 438, column: 3, scope: !10542)
!10547 = !DILocation(line: 441, column: 20, scope: !10524)
!10548 = !DILocation(line: 441, column: 2, scope: !10524)
!10549 = !DILocation(line: 441, column: 5, scope: !10524)
!10550 = !DILocation(line: 441, column: 17, scope: !10524)
!10551 = !DILocation(line: 442, column: 20, scope: !10524)
!10552 = !DILocation(line: 442, column: 2, scope: !10524)
!10553 = !DILocation(line: 442, column: 5, scope: !10524)
!10554 = !DILocation(line: 442, column: 17, scope: !10524)
!10555 = !DILocation(line: 443, column: 6, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 443, column: 6)
!10557 = !DILocation(line: 443, column: 9, scope: !10556)
!10558 = !DILocation(line: 443, column: 21, scope: !10556)
!10559 = !DILocation(line: 443, column: 25, scope: !10556)
!10560 = !DILocation(line: 443, column: 28, scope: !10556)
!10561 = !DILocation(line: 443, column: 31, scope: !10556)
!10562 = !DILocation(line: 443, column: 43, scope: !10556)
!10563 = !DILocation(line: 443, column: 6, scope: !10524)
!10564 = !DILocation(line: 444, column: 3, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 443, column: 48)
!10566 = !DILocation(line: 446, column: 3, scope: !10565)
!10567 = !DILocation(line: 449, column: 3, scope: !10565)
!10568 = !DILocation(line: 449, column: 6, scope: !10565)
!10569 = !DILocation(line: 449, column: 18, scope: !10565)
!10570 = !DILocation(line: 450, column: 3, scope: !10565)
!10571 = !DILocation(line: 450, column: 6, scope: !10565)
!10572 = !DILocation(line: 450, column: 18, scope: !10565)
!10573 = !DILocation(line: 451, column: 2, scope: !10565)
!10574 = !DILocation(line: 452, column: 7, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 452, column: 6)
!10576 = !DILocation(line: 452, column: 10, scope: !10575)
!10577 = !DILocation(line: 452, column: 22, scope: !10575)
!10578 = !DILocation(line: 452, column: 25, scope: !10575)
!10579 = !DILocation(line: 452, column: 28, scope: !10575)
!10580 = !DILocation(line: 452, column: 6, scope: !10524)
!10581 = !DILocation(line: 453, column: 15, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 452, column: 41)
!10583 = !DILocation(line: 453, column: 18, scope: !10582)
!10584 = !DILocation(line: 453, column: 3, scope: !10582)
!10585 = !DILocation(line: 453, column: 6, scope: !10582)
!10586 = !DILocation(line: 453, column: 13, scope: !10582)
!10587 = !DILocation(line: 454, column: 23, scope: !10582)
!10588 = !DILocation(line: 454, column: 26, scope: !10582)
!10589 = !DILocation(line: 454, column: 15, scope: !10582)
!10590 = !DILocation(line: 454, column: 3, scope: !10582)
!10591 = !DILocation(line: 454, column: 6, scope: !10582)
!10592 = !DILocation(line: 454, column: 13, scope: !10582)
!10593 = !DILocation(line: 455, column: 20, scope: !10582)
!10594 = !DILocation(line: 455, column: 3, scope: !10582)
!10595 = !DILocation(line: 455, column: 6, scope: !10582)
!10596 = !DILocation(line: 455, column: 18, scope: !10582)
!10597 = !DILocation(line: 456, column: 2, scope: !10582)
!10598 = !DILocation(line: 457, column: 1, scope: !10524)
!10599 = distinct !DISubprogram(name: "esp_event_queue_full", scope: !3, file: !3, line: 953, type: !8368, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10600 = !DILocalVariable(name: "esp", arg: 1, scope: !10599, file: !3, line: 953, type: !5289)
!10601 = !DILocation(line: 953, column: 46, scope: !10599)
!10602 = !DILocalVariable(name: "ent", arg: 2, scope: !10599, file: !3, line: 953, type: !203)
!10603 = !DILocation(line: 953, column: 73, scope: !10599)
!10604 = !DILocalVariable(name: "dev", scope: !10599, file: !3, line: 955, type: !238)
!10605 = !DILocation(line: 955, column: 22, scope: !10599)
!10606 = !DILocation(line: 955, column: 28, scope: !10599)
!10607 = !DILocation(line: 955, column: 33, scope: !10599)
!10608 = !DILocation(line: 955, column: 38, scope: !10599)
!10609 = !DILocalVariable(name: "lp", scope: !10599, file: !3, line: 956, type: !6925)
!10610 = !DILocation(line: 956, column: 23, scope: !10599)
!10611 = !DILocation(line: 956, column: 28, scope: !10599)
!10612 = !DILocation(line: 956, column: 33, scope: !10599)
!10613 = !DILocation(line: 958, column: 24, scope: !10599)
!10614 = !DILocation(line: 958, column: 29, scope: !10599)
!10615 = !DILocation(line: 958, column: 33, scope: !10599)
!10616 = !DILocation(line: 958, column: 44, scope: !10599)
!10617 = !DILocation(line: 958, column: 2, scope: !10599)
!10618 = !DILocation(line: 959, column: 1, scope: !10599)
!10619 = distinct !DISubprogram(name: "compose_result", scope: !3, file: !3, line: 947, type: !10620, scopeLine: 949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10620 = !DISubroutineType(types: !10621)
!10621 = !{!7, !7, !7, !7}
!10622 = !DILocalVariable(name: "status", arg: 1, scope: !10619, file: !3, line: 947, type: !7)
!10623 = !DILocation(line: 947, column: 49, scope: !10619)
!10624 = !DILocalVariable(name: "message", arg: 2, scope: !10619, file: !3, line: 947, type: !7)
!10625 = !DILocation(line: 947, column: 70, scope: !10619)
!10626 = !DILocalVariable(name: "driver_code", arg: 3, scope: !10619, file: !3, line: 948, type: !7)
!10627 = !DILocation(line: 948, column: 21, scope: !10619)
!10628 = !DILocation(line: 950, column: 10, scope: !10619)
!10629 = !DILocation(line: 950, column: 20, scope: !10619)
!10630 = !DILocation(line: 950, column: 28, scope: !10619)
!10631 = !DILocation(line: 950, column: 17, scope: !10619)
!10632 = !DILocation(line: 950, column: 37, scope: !10619)
!10633 = !DILocation(line: 950, column: 49, scope: !10619)
!10634 = !DILocation(line: 950, column: 34, scope: !10619)
!10635 = !DILocation(line: 950, column: 2, scope: !10619)
!10636 = distinct !DISubprogram(name: "esp_msgin_process", scope: !3, file: !3, line: 1625, type: !5287, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10637 = !DILocalVariable(name: "esp", arg: 1, scope: !10636, file: !3, line: 1625, type: !5289)
!10638 = !DILocation(line: 1625, column: 42, scope: !10636)
!10639 = !DILocalVariable(name: "msg0", scope: !10636, file: !3, line: 1627, type: !453)
!10640 = !DILocation(line: 1627, column: 5, scope: !10636)
!10641 = !DILocation(line: 1627, column: 12, scope: !10636)
!10642 = !DILocation(line: 1627, column: 17, scope: !10636)
!10643 = !DILocalVariable(name: "len", scope: !10636, file: !3, line: 1628, type: !232)
!10644 = !DILocation(line: 1628, column: 6, scope: !10636)
!10645 = !DILocation(line: 1628, column: 12, scope: !10636)
!10646 = !DILocation(line: 1628, column: 17, scope: !10636)
!10647 = !DILocation(line: 1630, column: 6, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 1630, column: 6)
!10649 = !DILocation(line: 1630, column: 11, scope: !10648)
!10650 = !DILocation(line: 1630, column: 6, scope: !10636)
!10651 = !DILocation(line: 1632, column: 3, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 1630, column: 19)
!10653 = !DILocation(line: 1634, column: 3, scope: !10652)
!10654 = !DILocation(line: 1637, column: 10, scope: !10636)
!10655 = !DILocation(line: 1637, column: 2, scope: !10636)
!10656 = !DILocation(line: 1639, column: 7, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 1639, column: 7)
!10658 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 1637, column: 16)
!10659 = !DILocation(line: 1639, column: 11, scope: !10657)
!10660 = !DILocation(line: 1639, column: 7, scope: !10658)
!10661 = !DILocation(line: 1640, column: 4, scope: !10657)
!10662 = !DILocation(line: 1641, column: 7, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 1641, column: 7)
!10664 = !DILocation(line: 1641, column: 13, scope: !10663)
!10665 = !DILocation(line: 1641, column: 18, scope: !10663)
!10666 = !DILocation(line: 1641, column: 28, scope: !10663)
!10667 = !DILocation(line: 1641, column: 11, scope: !10663)
!10668 = !DILocation(line: 1641, column: 7, scope: !10658)
!10669 = !DILocation(line: 1642, column: 4, scope: !10663)
!10670 = !DILocation(line: 1643, column: 22, scope: !10658)
!10671 = !DILocation(line: 1643, column: 3, scope: !10658)
!10672 = !DILocation(line: 1644, column: 3, scope: !10658)
!10673 = !DILocalVariable(name: "ent", scope: !10674, file: !3, line: 1647, type: !203)
!10674 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 1646, column: 28)
!10675 = !DILocation(line: 1647, column: 25, scope: !10674)
!10676 = !DILocalVariable(name: "spriv", scope: !10674, file: !3, line: 1648, type: !5269)
!10677 = !DILocation(line: 1648, column: 24, scope: !10674)
!10678 = !DILocation(line: 1649, column: 7, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 1649, column: 7)
!10680 = !DILocation(line: 1649, column: 11, scope: !10679)
!10681 = !DILocation(line: 1649, column: 7, scope: !10674)
!10682 = !DILocation(line: 1650, column: 4, scope: !10679)
!10683 = !DILocation(line: 1652, column: 7, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 1652, column: 7)
!10685 = !DILocation(line: 1652, column: 12, scope: !10684)
!10686 = !DILocation(line: 1652, column: 22, scope: !10684)
!10687 = !DILocation(line: 1652, column: 7, scope: !10674)
!10688 = !DILocation(line: 1653, column: 4, scope: !10684)
!10689 = !DILocation(line: 1655, column: 9, scope: !10674)
!10690 = !DILocation(line: 1655, column: 14, scope: !10674)
!10691 = !DILocation(line: 1655, column: 7, scope: !10674)
!10692 = !DILocation(line: 1656, column: 11, scope: !10674)
!10693 = !DILocation(line: 1656, column: 9, scope: !10674)
!10694 = !DILocation(line: 1658, column: 7, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 1658, column: 7)
!10696 = !DILocation(line: 1658, column: 14, scope: !10695)
!10697 = !DILocation(line: 1658, column: 29, scope: !10695)
!10698 = !DILocation(line: 1658, column: 26, scope: !10695)
!10699 = !DILocation(line: 1658, column: 7, scope: !10674)
!10700 = !DILocation(line: 1659, column: 20, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 1658, column: 56)
!10702 = !DILocation(line: 1659, column: 27, scope: !10701)
!10703 = !DILocation(line: 1659, column: 4, scope: !10701)
!10704 = !DILocation(line: 1659, column: 11, scope: !10701)
!10705 = !DILocation(line: 1659, column: 18, scope: !10701)
!10706 = !DILocation(line: 1660, column: 4, scope: !10701)
!10707 = !DILocation(line: 1660, column: 11, scope: !10701)
!10708 = !DILocation(line: 1660, column: 23, scope: !10701)
!10709 = !DILocation(line: 1661, column: 3, scope: !10701)
!10710 = !DILocation(line: 1662, column: 4, scope: !10695)
!10711 = !DILocation(line: 1662, column: 11, scope: !10695)
!10712 = !DILocation(line: 1662, column: 22, scope: !10695)
!10713 = !DILocation(line: 1663, column: 3, scope: !10674)
!10714 = !DILocation(line: 1663, column: 10, scope: !10674)
!10715 = !DILocation(line: 1663, column: 21, scope: !10674)
!10716 = !DILocation(line: 1664, column: 3, scope: !10674)
!10717 = !DILocation(line: 1667, column: 3, scope: !10658)
!10718 = !DILocation(line: 1669, column: 24, scope: !10658)
!10719 = !DILocation(line: 1669, column: 29, scope: !10658)
!10720 = !DILocation(line: 1669, column: 34, scope: !10658)
!10721 = !DILocation(line: 1669, column: 3, scope: !10658)
!10722 = !DILocation(line: 1670, column: 3, scope: !10658)
!10723 = !DILocation(line: 1672, column: 21, scope: !10658)
!10724 = !DILocation(line: 1672, column: 26, scope: !10658)
!10725 = !DILocation(line: 1672, column: 31, scope: !10658)
!10726 = !DILocation(line: 1672, column: 3, scope: !10658)
!10727 = !DILocation(line: 1673, column: 3, scope: !10658)
!10728 = !DILocalVariable(name: "ent", scope: !10729, file: !3, line: 1677, type: !203)
!10729 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 1676, column: 19)
!10730 = !DILocation(line: 1677, column: 25, scope: !10729)
!10731 = !DILocation(line: 1677, column: 31, scope: !10729)
!10732 = !DILocation(line: 1677, column: 36, scope: !10729)
!10733 = !DILocation(line: 1679, column: 18, scope: !10729)
!10734 = !DILocation(line: 1679, column: 3, scope: !10729)
!10735 = !DILocation(line: 1679, column: 8, scope: !10729)
!10736 = !DILocation(line: 1679, column: 16, scope: !10729)
!10737 = !DILocation(line: 1680, column: 13, scope: !10729)
!10738 = !DILocation(line: 1680, column: 3, scope: !10729)
!10739 = !DILocation(line: 1681, column: 3, scope: !10729)
!10740 = !DILocation(line: 1681, column: 8, scope: !10729)
!10741 = !DILocation(line: 1681, column: 14, scope: !10729)
!10742 = !DILocation(line: 1682, column: 3, scope: !10729)
!10743 = !DILocation(line: 1685, column: 20, scope: !10658)
!10744 = !DILocation(line: 1685, column: 3, scope: !10658)
!10745 = !DILocation(line: 1686, column: 3, scope: !10658)
!10746 = !DILabel(scope: !10658, name: "do_reject", file: !3, line: 1689)
!10747 = !DILocation(line: 1689, column: 2, scope: !10658)
!10748 = !DILocation(line: 1690, column: 3, scope: !10658)
!10749 = !DILocation(line: 1690, column: 8, scope: !10658)
!10750 = !DILocation(line: 1690, column: 19, scope: !10658)
!10751 = !DILocation(line: 1691, column: 3, scope: !10658)
!10752 = !DILocation(line: 1691, column: 8, scope: !10658)
!10753 = !DILocation(line: 1691, column: 20, scope: !10658)
!10754 = !DILocation(line: 1692, column: 16, scope: !10658)
!10755 = !DILocation(line: 1692, column: 3, scope: !10658)
!10756 = !DILocation(line: 1693, column: 3, scope: !10658)
!10757 = !DILocation(line: 1695, column: 1, scope: !10636)
!10758 = distinct !DISubprogram(name: "esp_msgin_extended", scope: !3, file: !3, line: 1597, type: !5315, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10759 = !DILocalVariable(name: "esp", arg: 1, scope: !10758, file: !3, line: 1597, type: !5289)
!10760 = !DILocation(line: 1597, column: 44, scope: !10758)
!10761 = !DILocalVariable(name: "ent", scope: !10758, file: !3, line: 1599, type: !203)
!10762 = !DILocation(line: 1599, column: 24, scope: !10758)
!10763 = !DILocation(line: 1599, column: 30, scope: !10758)
!10764 = !DILocation(line: 1599, column: 35, scope: !10758)
!10765 = !DILocalVariable(name: "cmd", scope: !10758, file: !3, line: 1600, type: !214)
!10766 = !DILocation(line: 1600, column: 20, scope: !10758)
!10767 = !DILocation(line: 1600, column: 26, scope: !10758)
!10768 = !DILocation(line: 1600, column: 31, scope: !10758)
!10769 = !DILocalVariable(name: "tp", scope: !10758, file: !3, line: 1601, type: !6918)
!10770 = !DILocation(line: 1601, column: 26, scope: !10758)
!10771 = !DILocalVariable(name: "tgt", scope: !10758, file: !3, line: 1602, type: !232)
!10772 = !DILocation(line: 1602, column: 6, scope: !10758)
!10773 = !DILocation(line: 1602, column: 12, scope: !10758)
!10774 = !DILocation(line: 1602, column: 17, scope: !10758)
!10775 = !DILocation(line: 1602, column: 25, scope: !10758)
!10776 = !DILocation(line: 1604, column: 8, scope: !10758)
!10777 = !DILocation(line: 1604, column: 13, scope: !10758)
!10778 = !DILocation(line: 1604, column: 20, scope: !10758)
!10779 = !DILocation(line: 1604, column: 5, scope: !10758)
!10780 = !DILocation(line: 1605, column: 6, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1605, column: 6)
!10782 = !DILocation(line: 1605, column: 11, scope: !10781)
!10783 = !DILocation(line: 1605, column: 21, scope: !10781)
!10784 = !DILocation(line: 1605, column: 6, scope: !10758)
!10785 = !DILocation(line: 1606, column: 18, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 1605, column: 39)
!10787 = !DILocation(line: 1606, column: 23, scope: !10786)
!10788 = !DILocation(line: 1606, column: 3, scope: !10786)
!10789 = !DILocation(line: 1607, column: 3, scope: !10786)
!10790 = !DILocation(line: 1609, column: 6, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1609, column: 6)
!10792 = !DILocation(line: 1609, column: 11, scope: !10791)
!10793 = !DILocation(line: 1609, column: 21, scope: !10791)
!10794 = !DILocation(line: 1609, column: 6, scope: !10758)
!10795 = !DILocation(line: 1610, column: 18, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10791, file: !3, line: 1609, column: 39)
!10797 = !DILocation(line: 1610, column: 23, scope: !10796)
!10798 = !DILocation(line: 1610, column: 3, scope: !10796)
!10799 = !DILocation(line: 1611, column: 3, scope: !10796)
!10800 = !DILocation(line: 1614, column: 2, scope: !10758)
!10801 = !DILocation(line: 1617, column: 2, scope: !10758)
!10802 = !DILocation(line: 1617, column: 7, scope: !10758)
!10803 = !DILocation(line: 1617, column: 18, scope: !10758)
!10804 = !DILocation(line: 1618, column: 2, scope: !10758)
!10805 = !DILocation(line: 1618, column: 7, scope: !10758)
!10806 = !DILocation(line: 1618, column: 19, scope: !10758)
!10807 = !DILocation(line: 1619, column: 15, scope: !10758)
!10808 = !DILocation(line: 1619, column: 2, scope: !10758)
!10809 = !DILocation(line: 1620, column: 1, scope: !10758)
!10810 = distinct !DISubprogram(name: "esp_msgin_reject", scope: !3, file: !3, line: 1457, type: !5315, scopeLine: 1458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10811 = !DILocalVariable(name: "esp", arg: 1, scope: !10810, file: !3, line: 1457, type: !5289)
!10812 = !DILocation(line: 1457, column: 42, scope: !10810)
!10813 = !DILocalVariable(name: "ent", scope: !10810, file: !3, line: 1459, type: !203)
!10814 = !DILocation(line: 1459, column: 24, scope: !10810)
!10815 = !DILocation(line: 1459, column: 30, scope: !10810)
!10816 = !DILocation(line: 1459, column: 35, scope: !10810)
!10817 = !DILocalVariable(name: "cmd", scope: !10810, file: !3, line: 1460, type: !214)
!10818 = !DILocation(line: 1460, column: 20, scope: !10810)
!10819 = !DILocation(line: 1460, column: 26, scope: !10810)
!10820 = !DILocation(line: 1460, column: 31, scope: !10810)
!10821 = !DILocalVariable(name: "tp", scope: !10810, file: !3, line: 1461, type: !6918)
!10822 = !DILocation(line: 1461, column: 26, scope: !10810)
!10823 = !DILocalVariable(name: "tgt", scope: !10810, file: !3, line: 1462, type: !232)
!10824 = !DILocation(line: 1462, column: 6, scope: !10810)
!10825 = !DILocation(line: 1464, column: 8, scope: !10810)
!10826 = !DILocation(line: 1464, column: 13, scope: !10810)
!10827 = !DILocation(line: 1464, column: 21, scope: !10810)
!10828 = !DILocation(line: 1464, column: 6, scope: !10810)
!10829 = !DILocation(line: 1465, column: 8, scope: !10810)
!10830 = !DILocation(line: 1465, column: 13, scope: !10810)
!10831 = !DILocation(line: 1465, column: 20, scope: !10810)
!10832 = !DILocation(line: 1465, column: 5, scope: !10810)
!10833 = !DILocation(line: 1467, column: 6, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 1467, column: 6)
!10835 = !DILocation(line: 1467, column: 10, scope: !10834)
!10836 = !DILocation(line: 1467, column: 16, scope: !10834)
!10837 = !DILocation(line: 1467, column: 6, scope: !10810)
!10838 = !DILocation(line: 1468, column: 3, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 1467, column: 37)
!10840 = !DILocation(line: 1468, column: 7, scope: !10839)
!10841 = !DILocation(line: 1468, column: 13, scope: !10839)
!10842 = !DILocation(line: 1470, column: 30, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 1470, column: 7)
!10844 = !DILocation(line: 1470, column: 8, scope: !10843)
!10845 = !DILocation(line: 1470, column: 7, scope: !10839)
!10846 = !DILocation(line: 1471, column: 4, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 1470, column: 35)
!10848 = !DILocation(line: 1471, column: 8, scope: !10847)
!10849 = !DILocation(line: 1471, column: 14, scope: !10847)
!10850 = !DILocation(line: 1472, column: 17, scope: !10847)
!10851 = !DILocation(line: 1472, column: 4, scope: !10847)
!10852 = !DILocation(line: 1473, column: 3, scope: !10847)
!10853 = !DILocation(line: 1475, column: 28, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 1473, column: 10)
!10855 = !DILocation(line: 1475, column: 33, scope: !10854)
!10856 = !DILocation(line: 1476, column: 13, scope: !10854)
!10857 = !DILocation(line: 1476, column: 17, scope: !10854)
!10858 = !DILocation(line: 1477, column: 13, scope: !10854)
!10859 = !DILocation(line: 1477, column: 17, scope: !10854)
!10860 = !DILocation(line: 1475, column: 5, scope: !10854)
!10861 = !DILocation(line: 1474, column: 4, scope: !10854)
!10862 = !DILocation(line: 1474, column: 9, scope: !10854)
!10863 = !DILocation(line: 1474, column: 21, scope: !10854)
!10864 = !DILocation(line: 1478, column: 4, scope: !10854)
!10865 = !DILocation(line: 1478, column: 8, scope: !10854)
!10866 = !DILocation(line: 1478, column: 14, scope: !10854)
!10867 = !DILocation(line: 1479, column: 17, scope: !10854)
!10868 = !DILocation(line: 1479, column: 4, scope: !10854)
!10869 = !DILocation(line: 1481, column: 3, scope: !10839)
!10870 = !DILocation(line: 1484, column: 6, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 1484, column: 6)
!10872 = !DILocation(line: 1484, column: 10, scope: !10871)
!10873 = !DILocation(line: 1484, column: 16, scope: !10871)
!10874 = !DILocation(line: 1484, column: 6, scope: !10810)
!10875 = !DILocation(line: 1485, column: 3, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 1484, column: 37)
!10877 = !DILocation(line: 1485, column: 7, scope: !10876)
!10878 = !DILocation(line: 1485, column: 13, scope: !10876)
!10879 = !DILocation(line: 1486, column: 3, scope: !10876)
!10880 = !DILocation(line: 1486, column: 7, scope: !10876)
!10881 = !DILocation(line: 1486, column: 18, scope: !10876)
!10882 = !DILocation(line: 1487, column: 3, scope: !10876)
!10883 = !DILocation(line: 1487, column: 7, scope: !10876)
!10884 = !DILocation(line: 1487, column: 18, scope: !10876)
!10885 = !DILocation(line: 1488, column: 15, scope: !10876)
!10886 = !DILocation(line: 1488, column: 20, scope: !10876)
!10887 = !DILocation(line: 1488, column: 3, scope: !10876)
!10888 = !DILocation(line: 1489, column: 16, scope: !10876)
!10889 = !DILocation(line: 1489, column: 3, scope: !10876)
!10890 = !DILocation(line: 1490, column: 3, scope: !10876)
!10891 = !DILocation(line: 1493, column: 2, scope: !10810)
!10892 = !DILocation(line: 1494, column: 21, scope: !10810)
!10893 = !DILocation(line: 1494, column: 2, scope: !10810)
!10894 = !DILocation(line: 1495, column: 1, scope: !10810)
!10895 = distinct !DISubprogram(name: "esp_msgin_sdtr", scope: !3, file: !3, line: 1497, type: !10896, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!10896 = !DISubroutineType(types: !10897)
!10897 = !{null, !5289, !6918}
!10898 = !DILocalVariable(name: "esp", arg: 1, scope: !10895, file: !3, line: 1497, type: !5289)
!10899 = !DILocation(line: 1497, column: 40, scope: !10895)
!10900 = !DILocalVariable(name: "tp", arg: 2, scope: !10895, file: !3, line: 1497, type: !6918)
!10901 = !DILocation(line: 1497, column: 69, scope: !10895)
!10902 = !DILocalVariable(name: "period", scope: !10895, file: !3, line: 1499, type: !453)
!10903 = !DILocation(line: 1499, column: 5, scope: !10895)
!10904 = !DILocation(line: 1499, column: 14, scope: !10895)
!10905 = !DILocation(line: 1499, column: 19, scope: !10895)
!10906 = !DILocalVariable(name: "offset", scope: !10895, file: !3, line: 1500, type: !453)
!10907 = !DILocation(line: 1500, column: 5, scope: !10895)
!10908 = !DILocation(line: 1500, column: 14, scope: !10895)
!10909 = !DILocation(line: 1500, column: 19, scope: !10895)
!10910 = !DILocalVariable(name: "stp", scope: !10895, file: !3, line: 1501, type: !453)
!10911 = !DILocation(line: 1501, column: 5, scope: !10895)
!10912 = !DILocation(line: 1503, column: 8, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 1503, column: 6)
!10914 = !DILocation(line: 1503, column: 12, scope: !10913)
!10915 = !DILocation(line: 1503, column: 18, scope: !10913)
!10916 = !DILocation(line: 1503, column: 6, scope: !10895)
!10917 = !DILocation(line: 1504, column: 3, scope: !10913)
!10918 = !DILocation(line: 1506, column: 6, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 1506, column: 6)
!10920 = !DILocation(line: 1506, column: 13, scope: !10919)
!10921 = !DILocation(line: 1506, column: 6, scope: !10895)
!10922 = !DILocation(line: 1507, column: 3, scope: !10919)
!10923 = !DILocation(line: 1509, column: 6, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 1509, column: 6)
!10925 = !DILocation(line: 1509, column: 6, scope: !10895)
!10926 = !DILocalVariable(name: "one_clock", scope: !10927, file: !3, line: 1510, type: !232)
!10927 = distinct !DILexicalBlock(scope: !10924, file: !3, line: 1509, column: 14)
!10928 = !DILocation(line: 1510, column: 7, scope: !10927)
!10929 = !DILocation(line: 1512, column: 7, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 1512, column: 7)
!10931 = !DILocation(line: 1512, column: 16, scope: !10930)
!10932 = !DILocation(line: 1512, column: 21, scope: !10930)
!10933 = !DILocation(line: 1512, column: 14, scope: !10930)
!10934 = !DILocation(line: 1512, column: 7, scope: !10927)
!10935 = !DILocation(line: 1513, column: 20, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 1512, column: 33)
!10937 = !DILocation(line: 1513, column: 11, scope: !10936)
!10938 = !DILocation(line: 1514, column: 4, scope: !10936)
!10939 = !DILocation(line: 1516, column: 7, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 1516, column: 7)
!10941 = !DILocation(line: 1516, column: 16, scope: !10940)
!10942 = !DILocation(line: 1516, column: 21, scope: !10940)
!10943 = !DILocation(line: 1516, column: 14, scope: !10940)
!10944 = !DILocation(line: 1516, column: 7, scope: !10927)
!10945 = !DILocation(line: 1517, column: 4, scope: !10940)
!10946 = !DILocation(line: 1519, column: 15, scope: !10927)
!10947 = !DILocation(line: 1519, column: 20, scope: !10927)
!10948 = !DILocation(line: 1519, column: 27, scope: !10927)
!10949 = !DILocation(line: 1519, column: 13, scope: !10927)
!10950 = !DILocation(line: 1520, column: 9, scope: !10927)
!10951 = !DILocation(line: 1520, column: 7, scope: !10927)
!10952 = !DILocation(line: 1521, column: 7, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 1521, column: 7)
!10954 = !DILocation(line: 1521, column: 11, scope: !10953)
!10955 = !DILocation(line: 1521, column: 14, scope: !10953)
!10956 = !DILocation(line: 1521, column: 19, scope: !10953)
!10957 = !DILocation(line: 1521, column: 23, scope: !10953)
!10958 = !DILocation(line: 1521, column: 7, scope: !10927)
!10959 = !DILocation(line: 1522, column: 8, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10961, file: !3, line: 1522, column: 8)
!10961 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 1521, column: 34)
!10962 = !DILocation(line: 1522, column: 12, scope: !10960)
!10963 = !DILocation(line: 1522, column: 8, scope: !10961)
!10964 = !DILocation(line: 1523, column: 8, scope: !10960)
!10965 = !DILocation(line: 1523, column: 5, scope: !10960)
!10966 = !DILocation(line: 1524, column: 3, scope: !10961)
!10967 = !DILocation(line: 1525, column: 2, scope: !10927)
!10968 = !DILocation(line: 1526, column: 7, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10924, file: !3, line: 1525, column: 9)
!10970 = !DILocation(line: 1529, column: 14, scope: !10895)
!10971 = !DILocation(line: 1529, column: 19, scope: !10895)
!10972 = !DILocation(line: 1529, column: 23, scope: !10895)
!10973 = !DILocation(line: 1529, column: 31, scope: !10895)
!10974 = !DILocation(line: 1529, column: 39, scope: !10895)
!10975 = !DILocation(line: 1529, column: 44, scope: !10895)
!10976 = !DILocation(line: 1529, column: 2, scope: !10895)
!10977 = !DILocation(line: 1530, column: 2, scope: !10895)
!10978 = !DILabel(scope: !10895, name: "do_reject", file: !3, line: 1532)
!10979 = !DILocation(line: 1532, column: 1, scope: !10895)
!10980 = !DILocation(line: 1533, column: 2, scope: !10895)
!10981 = !DILocation(line: 1533, column: 7, scope: !10895)
!10982 = !DILocation(line: 1533, column: 18, scope: !10895)
!10983 = !DILocation(line: 1534, column: 2, scope: !10895)
!10984 = !DILocation(line: 1534, column: 7, scope: !10895)
!10985 = !DILocation(line: 1534, column: 19, scope: !10895)
!10986 = !DILocation(line: 1535, column: 15, scope: !10895)
!10987 = !DILocation(line: 1535, column: 2, scope: !10895)
!10988 = !DILocation(line: 1536, column: 2, scope: !10895)
!10989 = !DILabel(scope: !10895, name: "do_sdtr", file: !3, line: 1538)
!10990 = !DILocation(line: 1538, column: 1, scope: !10895)
!10991 = !DILocation(line: 1539, column: 25, scope: !10895)
!10992 = !DILocation(line: 1539, column: 2, scope: !10895)
!10993 = !DILocation(line: 1539, column: 6, scope: !10895)
!10994 = !DILocation(line: 1539, column: 23, scope: !10895)
!10995 = !DILocation(line: 1540, column: 25, scope: !10895)
!10996 = !DILocation(line: 1540, column: 2, scope: !10895)
!10997 = !DILocation(line: 1540, column: 6, scope: !10895)
!10998 = !DILocation(line: 1540, column: 23, scope: !10895)
!10999 = !DILocation(line: 1542, column: 26, scope: !10895)
!11000 = !DILocation(line: 1542, column: 31, scope: !10895)
!11001 = !DILocation(line: 1543, column: 11, scope: !10895)
!11002 = !DILocation(line: 1543, column: 15, scope: !10895)
!11003 = !DILocation(line: 1544, column: 11, scope: !10895)
!11004 = !DILocation(line: 1544, column: 15, scope: !10895)
!11005 = !DILocation(line: 1542, column: 3, scope: !10895)
!11006 = !DILocation(line: 1541, column: 2, scope: !10895)
!11007 = !DILocation(line: 1541, column: 7, scope: !10895)
!11008 = !DILocation(line: 1541, column: 19, scope: !10895)
!11009 = !DILocation(line: 1545, column: 15, scope: !10895)
!11010 = !DILocation(line: 1545, column: 2, scope: !10895)
!11011 = !DILocation(line: 1546, column: 1, scope: !10895)
!11012 = distinct !DISubprogram(name: "esp_msgin_wdtr", scope: !3, file: !3, line: 1548, type: !10896, scopeLine: 1549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11013 = !DILocalVariable(name: "esp", arg: 1, scope: !11012, file: !3, line: 1548, type: !5289)
!11014 = !DILocation(line: 1548, column: 40, scope: !11012)
!11015 = !DILocalVariable(name: "tp", arg: 2, scope: !11012, file: !3, line: 1548, type: !6918)
!11016 = !DILocation(line: 1548, column: 69, scope: !11012)
!11017 = !DILocalVariable(name: "size", scope: !11012, file: !3, line: 1550, type: !232)
!11018 = !DILocation(line: 1550, column: 6, scope: !11012)
!11019 = !DILocation(line: 1550, column: 18, scope: !11012)
!11020 = !DILocation(line: 1550, column: 23, scope: !11012)
!11021 = !DILocation(line: 1550, column: 15, scope: !11012)
!11022 = !DILocalVariable(name: "cfg3", scope: !11012, file: !3, line: 1551, type: !453)
!11023 = !DILocation(line: 1551, column: 5, scope: !11012)
!11024 = !DILocation(line: 1553, column: 6, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 1553, column: 6)
!11026 = !DILocation(line: 1553, column: 11, scope: !11025)
!11027 = !DILocation(line: 1553, column: 15, scope: !11025)
!11028 = !DILocation(line: 1553, column: 6, scope: !11012)
!11029 = !DILocation(line: 1554, column: 3, scope: !11025)
!11030 = !DILocation(line: 1556, column: 6, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 1556, column: 6)
!11032 = !DILocation(line: 1556, column: 11, scope: !11031)
!11033 = !DILocation(line: 1556, column: 16, scope: !11031)
!11034 = !DILocation(line: 1556, column: 19, scope: !11031)
!11035 = !DILocation(line: 1556, column: 24, scope: !11031)
!11036 = !DILocation(line: 1556, column: 6, scope: !11012)
!11037 = !DILocation(line: 1557, column: 3, scope: !11031)
!11038 = !DILocation(line: 1559, column: 8, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 1559, column: 6)
!11040 = !DILocation(line: 1559, column: 12, scope: !11039)
!11041 = !DILocation(line: 1559, column: 18, scope: !11039)
!11042 = !DILocation(line: 1559, column: 6, scope: !11012)
!11043 = !DILocation(line: 1560, column: 3, scope: !11039)
!11044 = !DILocation(line: 1562, column: 9, scope: !11012)
!11045 = !DILocation(line: 1562, column: 13, scope: !11012)
!11046 = !DILocation(line: 1562, column: 7, scope: !11012)
!11047 = !DILocation(line: 1563, column: 6, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 1563, column: 6)
!11049 = !DILocation(line: 1563, column: 11, scope: !11048)
!11050 = !DILocation(line: 1563, column: 6, scope: !11012)
!11051 = !DILocation(line: 1564, column: 3, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 1563, column: 18)
!11053 = !DILocation(line: 1564, column: 7, scope: !11052)
!11054 = !DILocation(line: 1564, column: 13, scope: !11052)
!11055 = !DILocation(line: 1565, column: 8, scope: !11052)
!11056 = !DILocation(line: 1566, column: 2, scope: !11052)
!11057 = !DILocation(line: 1567, column: 3, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 1566, column: 9)
!11059 = !DILocation(line: 1567, column: 7, scope: !11058)
!11060 = !DILocation(line: 1567, column: 13, scope: !11058)
!11061 = !DILocation(line: 1568, column: 8, scope: !11058)
!11062 = !DILocation(line: 1570, column: 20, scope: !11012)
!11063 = !DILocation(line: 1570, column: 2, scope: !11012)
!11064 = !DILocation(line: 1570, column: 6, scope: !11012)
!11065 = !DILocation(line: 1570, column: 18, scope: !11012)
!11066 = !DILocation(line: 1571, column: 19, scope: !11012)
!11067 = !DILocation(line: 1571, column: 2, scope: !11012)
!11068 = !DILocation(line: 1571, column: 7, scope: !11012)
!11069 = !DILocation(line: 1571, column: 17, scope: !11012)
!11070 = !DILocation(line: 1572, column: 2, scope: !11012)
!11071 = !DILocation(line: 1574, column: 2, scope: !11012)
!11072 = !DILocation(line: 1574, column: 6, scope: !11012)
!11073 = !DILocation(line: 1574, column: 12, scope: !11012)
!11074 = !DILocation(line: 1576, column: 2, scope: !11012)
!11075 = !DILocation(line: 1576, column: 26, scope: !11012)
!11076 = !DILocation(line: 1577, column: 2, scope: !11012)
!11077 = !DILocation(line: 1577, column: 26, scope: !11012)
!11078 = !DILocation(line: 1578, column: 29, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 1578, column: 6)
!11080 = !DILocation(line: 1578, column: 7, scope: !11079)
!11081 = !DILocation(line: 1578, column: 6, scope: !11012)
!11082 = !DILocation(line: 1579, column: 3, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 1578, column: 34)
!11084 = !DILocation(line: 1579, column: 7, scope: !11083)
!11085 = !DILocation(line: 1579, column: 13, scope: !11083)
!11086 = !DILocation(line: 1580, column: 16, scope: !11083)
!11087 = !DILocation(line: 1580, column: 3, scope: !11083)
!11088 = !DILocation(line: 1581, column: 2, scope: !11083)
!11089 = !DILocation(line: 1583, column: 27, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 1581, column: 9)
!11091 = !DILocation(line: 1583, column: 32, scope: !11090)
!11092 = !DILocation(line: 1584, column: 12, scope: !11090)
!11093 = !DILocation(line: 1584, column: 16, scope: !11090)
!11094 = !DILocation(line: 1585, column: 12, scope: !11090)
!11095 = !DILocation(line: 1585, column: 16, scope: !11090)
!11096 = !DILocation(line: 1583, column: 4, scope: !11090)
!11097 = !DILocation(line: 1582, column: 3, scope: !11090)
!11098 = !DILocation(line: 1582, column: 8, scope: !11090)
!11099 = !DILocation(line: 1582, column: 20, scope: !11090)
!11100 = !DILocation(line: 1586, column: 3, scope: !11090)
!11101 = !DILocation(line: 1586, column: 7, scope: !11090)
!11102 = !DILocation(line: 1586, column: 13, scope: !11090)
!11103 = !DILocation(line: 1587, column: 16, scope: !11090)
!11104 = !DILocation(line: 1587, column: 3, scope: !11090)
!11105 = !DILocation(line: 1589, column: 2, scope: !11012)
!11106 = !DILabel(scope: !11012, name: "do_reject", file: !3, line: 1591)
!11107 = !DILocation(line: 1591, column: 1, scope: !11012)
!11108 = !DILocation(line: 1592, column: 2, scope: !11012)
!11109 = !DILocation(line: 1592, column: 7, scope: !11012)
!11110 = !DILocation(line: 1592, column: 18, scope: !11012)
!11111 = !DILocation(line: 1593, column: 2, scope: !11012)
!11112 = !DILocation(line: 1593, column: 7, scope: !11012)
!11113 = !DILocation(line: 1593, column: 19, scope: !11012)
!11114 = !DILocation(line: 1594, column: 15, scope: !11012)
!11115 = !DILocation(line: 1594, column: 2, scope: !11012)
!11116 = !DILocation(line: 1595, column: 1, scope: !11012)
!11117 = distinct !DISubprogram(name: "esp_setsync", scope: !3, file: !3, line: 1418, type: !11118, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11118 = !DISubroutineType(types: !11119)
!11119 = !{null, !5289, !6918, !453, !453, !453, !453}
!11120 = !DILocalVariable(name: "esp", arg: 1, scope: !11117, file: !3, line: 1418, type: !5289)
!11121 = !DILocation(line: 1418, column: 37, scope: !11117)
!11122 = !DILocalVariable(name: "tp", arg: 2, scope: !11117, file: !3, line: 1418, type: !6918)
!11123 = !DILocation(line: 1418, column: 66, scope: !11117)
!11124 = !DILocalVariable(name: "scsi_period", arg: 3, scope: !11117, file: !3, line: 1419, type: !453)
!11125 = !DILocation(line: 1419, column: 7, scope: !11117)
!11126 = !DILocalVariable(name: "scsi_offset", arg: 4, scope: !11117, file: !3, line: 1419, type: !453)
!11127 = !DILocation(line: 1419, column: 23, scope: !11117)
!11128 = !DILocalVariable(name: "esp_stp", arg: 5, scope: !11117, file: !3, line: 1420, type: !453)
!11129 = !DILocation(line: 1420, column: 7, scope: !11117)
!11130 = !DILocalVariable(name: "esp_soff", arg: 6, scope: !11117, file: !3, line: 1420, type: !453)
!11131 = !DILocation(line: 1420, column: 19, scope: !11117)
!11132 = !DILocation(line: 1422, column: 28, scope: !11117)
!11133 = !DILocation(line: 1422, column: 2, scope: !11117)
!11134 = !DILocation(line: 1422, column: 26, scope: !11117)
!11135 = !DILocation(line: 1423, column: 28, scope: !11117)
!11136 = !DILocation(line: 1423, column: 2, scope: !11117)
!11137 = !DILocation(line: 1423, column: 26, scope: !11117)
!11138 = !DILocation(line: 1424, column: 28, scope: !11117)
!11139 = !DILocation(line: 1424, column: 32, scope: !11117)
!11140 = !DILocation(line: 1424, column: 38, scope: !11117)
!11141 = !DILocation(line: 1424, column: 27, scope: !11117)
!11142 = !DILocation(line: 1424, column: 2, scope: !11117)
!11143 = !DILocation(line: 1424, column: 25, scope: !11117)
!11144 = !DILocation(line: 1426, column: 6, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 1426, column: 6)
!11146 = !DILocation(line: 1426, column: 6, scope: !11117)
!11147 = !DILocation(line: 1427, column: 11, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11145, file: !3, line: 1426, column: 16)
!11149 = !DILocation(line: 1428, column: 15, scope: !11148)
!11150 = !DILocation(line: 1428, column: 20, scope: !11148)
!11151 = !DILocation(line: 1428, column: 12, scope: !11148)
!11152 = !DILocation(line: 1429, column: 7, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11148, file: !3, line: 1429, column: 7)
!11154 = !DILocation(line: 1429, column: 12, scope: !11153)
!11155 = !DILocation(line: 1429, column: 16, scope: !11153)
!11156 = !DILocation(line: 1429, column: 7, scope: !11148)
!11157 = !DILocalVariable(name: "bit", scope: !11158, file: !3, line: 1430, type: !453)
!11158 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 1429, column: 27)
!11159 = !DILocation(line: 1430, column: 7, scope: !11158)
!11160 = !DILocation(line: 1431, column: 8, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11158, file: !3, line: 1431, column: 8)
!11162 = !DILocation(line: 1431, column: 13, scope: !11161)
!11163 = !DILocation(line: 1431, column: 17, scope: !11161)
!11164 = !DILocation(line: 1431, column: 8, scope: !11158)
!11165 = !DILocation(line: 1432, column: 9, scope: !11161)
!11166 = !DILocation(line: 1432, column: 5, scope: !11161)
!11167 = !DILocation(line: 1434, column: 8, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11158, file: !3, line: 1434, column: 8)
!11169 = !DILocation(line: 1434, column: 20, scope: !11168)
!11170 = !DILocation(line: 1434, column: 8, scope: !11158)
!11171 = !DILocation(line: 1435, column: 9, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !3, line: 1435, column: 9)
!11173 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 1434, column: 26)
!11174 = !DILocation(line: 1435, column: 14, scope: !11172)
!11175 = !DILocation(line: 1435, column: 18, scope: !11172)
!11176 = !DILocation(line: 1435, column: 9, scope: !11173)
!11177 = !DILocation(line: 1436, column: 19, scope: !11172)
!11178 = !DILocation(line: 1436, column: 24, scope: !11172)
!11179 = !DILocation(line: 1436, column: 18, scope: !11172)
!11180 = !DILocation(line: 1436, column: 15, scope: !11172)
!11181 = !DILocation(line: 1436, column: 6, scope: !11172)
!11182 = !DILocation(line: 1437, column: 24, scope: !11173)
!11183 = !DILocation(line: 1437, column: 5, scope: !11173)
!11184 = !DILocation(line: 1437, column: 9, scope: !11173)
!11185 = !DILocation(line: 1437, column: 21, scope: !11173)
!11186 = !DILocation(line: 1438, column: 4, scope: !11173)
!11187 = !DILocation(line: 1439, column: 25, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 1438, column: 11)
!11189 = !DILocation(line: 1439, column: 24, scope: !11188)
!11190 = !DILocation(line: 1439, column: 5, scope: !11188)
!11191 = !DILocation(line: 1439, column: 9, scope: !11188)
!11192 = !DILocation(line: 1439, column: 21, scope: !11188)
!11193 = !DILocation(line: 1441, column: 21, scope: !11158)
!11194 = !DILocation(line: 1441, column: 25, scope: !11158)
!11195 = !DILocation(line: 1441, column: 4, scope: !11158)
!11196 = !DILocation(line: 1441, column: 9, scope: !11158)
!11197 = !DILocation(line: 1441, column: 19, scope: !11158)
!11198 = !DILocation(line: 1442, column: 4, scope: !11158)
!11199 = !DILocation(line: 1443, column: 3, scope: !11158)
!11200 = !DILocation(line: 1444, column: 2, scope: !11148)
!11201 = !DILocation(line: 1446, column: 35, scope: !11117)
!11202 = !DILocation(line: 1446, column: 19, scope: !11117)
!11203 = !DILocation(line: 1446, column: 24, scope: !11117)
!11204 = !DILocation(line: 1446, column: 33, scope: !11117)
!11205 = !DILocation(line: 1446, column: 2, scope: !11117)
!11206 = !DILocation(line: 1446, column: 6, scope: !11117)
!11207 = !DILocation(line: 1446, column: 17, scope: !11117)
!11208 = !DILocation(line: 1447, column: 36, scope: !11117)
!11209 = !DILocation(line: 1447, column: 19, scope: !11117)
!11210 = !DILocation(line: 1447, column: 24, scope: !11117)
!11211 = !DILocation(line: 1447, column: 34, scope: !11117)
!11212 = !DILocation(line: 1447, column: 2, scope: !11117)
!11213 = !DILocation(line: 1447, column: 6, scope: !11117)
!11214 = !DILocation(line: 1447, column: 17, scope: !11117)
!11215 = !DILocation(line: 1449, column: 2, scope: !11117)
!11216 = !DILocation(line: 1450, column: 2, scope: !11117)
!11217 = !DILocation(line: 1452, column: 2, scope: !11117)
!11218 = !DILocation(line: 1452, column: 6, scope: !11117)
!11219 = !DILocation(line: 1452, column: 12, scope: !11117)
!11220 = !DILocation(line: 1454, column: 29, scope: !11117)
!11221 = !DILocation(line: 1454, column: 33, scope: !11117)
!11222 = !DILocation(line: 1454, column: 2, scope: !11117)
!11223 = !DILocation(line: 1455, column: 1, scope: !11117)
!11224 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !5857, file: !5857, line: 651, type: !11225, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11225 = !DISubroutineType(types: !11226)
!11226 = !{null, !201}
!11227 = !DILocalVariable(name: "f", arg: 1, scope: !11224, file: !5857, line: 651, type: !201)
!11228 = !DILocation(line: 651, column: 65, scope: !11224)
!11229 = !DILocalVariable(name: "__edi", scope: !11230, file: !5857, line: 653, type: !201)
!11230 = distinct !DILexicalBlock(scope: !11224, file: !5857, line: 653, column: 2)
!11231 = !DILocation(line: 653, column: 2, scope: !11230)
!11232 = !DILocalVariable(name: "__esi", scope: !11230, file: !5857, line: 653, type: !201)
!11233 = !DILocalVariable(name: "__edx", scope: !11230, file: !5857, line: 653, type: !201)
!11234 = !DILocalVariable(name: "__ecx", scope: !11230, file: !5857, line: 653, type: !201)
!11235 = !DILocalVariable(name: "__eax", scope: !11230, file: !5857, line: 653, type: !201)
!11236 = !{i32 -2145632281, i32 -2145631531, i32 -2145631297, i32 -2145631246, i32 -2145631218, i32 -2145631193, i32 -2145631509, i32 -2145631496, i32 -2145631058, i32 -2145630939, i32 -2145631404, i32 -2145631377, i32 -2145631349, i32 -2145631319}
!11237 = !DILocation(line: 654, column: 1, scope: !11224)
!11238 = distinct !DISubprogram(name: "esp_set_all_config3", scope: !3, file: !3, line: 235, type: !5641, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11239 = !DILocalVariable(name: "esp", arg: 1, scope: !11238, file: !3, line: 235, type: !5289)
!11240 = !DILocation(line: 235, column: 45, scope: !11238)
!11241 = !DILocalVariable(name: "val", arg: 2, scope: !11238, file: !3, line: 235, type: !453)
!11242 = !DILocation(line: 235, column: 53, scope: !11238)
!11243 = !DILocalVariable(name: "i", scope: !11238, file: !3, line: 237, type: !232)
!11244 = !DILocation(line: 237, column: 6, scope: !11238)
!11245 = !DILocation(line: 239, column: 9, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11238, file: !3, line: 239, column: 2)
!11247 = !DILocation(line: 239, column: 7, scope: !11246)
!11248 = !DILocation(line: 239, column: 14, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 239, column: 2)
!11250 = !DILocation(line: 239, column: 16, scope: !11249)
!11251 = !DILocation(line: 239, column: 2, scope: !11246)
!11252 = !DILocation(line: 240, column: 32, scope: !11249)
!11253 = !DILocation(line: 240, column: 3, scope: !11249)
!11254 = !DILocation(line: 240, column: 8, scope: !11249)
!11255 = !DILocation(line: 240, column: 15, scope: !11249)
!11256 = !DILocation(line: 240, column: 18, scope: !11249)
!11257 = !DILocation(line: 240, column: 30, scope: !11249)
!11258 = !DILocation(line: 239, column: 35, scope: !11249)
!11259 = !DILocation(line: 239, column: 2, scope: !11249)
!11260 = distinct !{!11260, !11251, !11261}
!11261 = !DILocation(line: 240, column: 32, scope: !11246)
!11262 = !DILocation(line: 241, column: 1, scope: !11238)
!11263 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !8353, file: !8353, line: 33, type: !8354, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11264 = !DILocalVariable(name: "list", arg: 1, scope: !11263, file: !8353, line: 33, type: !211)
!11265 = !DILocation(line: 33, column: 53, scope: !11263)
!11266 = !DILocation(line: 35, column: 2, scope: !11263)
!11267 = !DILocation(line: 35, column: 2, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11263, file: !8353, line: 35, column: 2)
!11269 = !DILocation(line: 35, column: 2, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11268, file: !8353, line: 35, column: 2)
!11271 = !DILocation(line: 35, column: 2, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11268, file: !8353, line: 35, column: 2)
!11273 = !DILocation(line: 36, column: 15, scope: !11263)
!11274 = !DILocation(line: 36, column: 2, scope: !11263)
!11275 = !DILocation(line: 36, column: 8, scope: !11263)
!11276 = !DILocation(line: 36, column: 13, scope: !11263)
!11277 = !DILocation(line: 37, column: 1, scope: !11263)
!11278 = distinct !DISubprogram(name: "esp_reset_esp", scope: !3, file: !3, line: 244, type: !5315, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11279 = !DILocalVariable(name: "esp", arg: 1, scope: !11278, file: !3, line: 244, type: !5289)
!11280 = !DILocation(line: 244, column: 39, scope: !11278)
!11281 = !DILocation(line: 247, column: 15, scope: !11278)
!11282 = !DILocation(line: 247, column: 2, scope: !11278)
!11283 = !DILocation(line: 248, column: 15, scope: !11278)
!11284 = !DILocation(line: 248, column: 2, scope: !11278)
!11285 = !DILocation(line: 249, column: 6, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 249, column: 6)
!11287 = !DILocation(line: 249, column: 11, scope: !11286)
!11288 = !DILocation(line: 249, column: 15, scope: !11286)
!11289 = !DILocation(line: 249, column: 6, scope: !11278)
!11290 = !DILocation(line: 250, column: 3, scope: !11286)
!11291 = !DILocation(line: 251, column: 15, scope: !11278)
!11292 = !DILocation(line: 251, column: 2, scope: !11278)
!11293 = !DILocation(line: 256, column: 27, scope: !11278)
!11294 = !DILocation(line: 256, column: 32, scope: !11278)
!11295 = !DILocation(line: 256, column: 25, scope: !11278)
!11296 = !DILocation(line: 256, column: 40, scope: !11278)
!11297 = !DILocation(line: 256, column: 2, scope: !11278)
!11298 = !DILocation(line: 256, column: 7, scope: !11278)
!11299 = !DILocation(line: 256, column: 18, scope: !11278)
!11300 = !DILocation(line: 257, column: 6, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 257, column: 6)
!11302 = !DILocation(line: 257, column: 11, scope: !11301)
!11303 = !DILocation(line: 257, column: 15, scope: !11301)
!11304 = !DILocation(line: 257, column: 6, scope: !11278)
!11305 = !DILocalVariable(name: "family_code", scope: !11306, file: !3, line: 258, type: !453)
!11306 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 257, column: 24)
!11307 = !DILocation(line: 258, column: 6, scope: !11306)
!11308 = !DILocation(line: 258, column: 20, scope: !11306)
!11309 = !DILocation(line: 260, column: 7, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 260, column: 7)
!11311 = !DILocation(line: 260, column: 19, scope: !11310)
!11312 = !DILocation(line: 260, column: 7, scope: !11306)
!11313 = !DILocation(line: 261, column: 4, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11310, file: !3, line: 260, column: 36)
!11315 = !DILocation(line: 261, column: 9, scope: !11314)
!11316 = !DILocation(line: 261, column: 13, scope: !11314)
!11317 = !DILocation(line: 262, column: 3, scope: !11314)
!11318 = !DILocation(line: 262, column: 14, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11310, file: !3, line: 262, column: 14)
!11320 = !DILocation(line: 262, column: 26, scope: !11319)
!11321 = !DILocation(line: 262, column: 14, scope: !11310)
!11322 = !DILocation(line: 263, column: 4, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11319, file: !3, line: 262, column: 42)
!11324 = !DILocation(line: 263, column: 9, scope: !11323)
!11325 = !DILocation(line: 263, column: 13, scope: !11323)
!11326 = !DILocation(line: 264, column: 3, scope: !11323)
!11327 = !DILocation(line: 264, column: 14, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11319, file: !3, line: 264, column: 14)
!11329 = !DILocation(line: 264, column: 26, scope: !11328)
!11330 = !DILocation(line: 264, column: 14, scope: !11319)
!11331 = !DILocation(line: 265, column: 4, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 264, column: 42)
!11333 = !DILocation(line: 265, column: 9, scope: !11332)
!11334 = !DILocation(line: 265, column: 13, scope: !11332)
!11335 = !DILocation(line: 267, column: 4, scope: !11332)
!11336 = !DILocation(line: 268, column: 3, scope: !11332)
!11337 = !DILocation(line: 269, column: 4, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 268, column: 10)
!11339 = !DILocation(line: 269, column: 9, scope: !11338)
!11340 = !DILocation(line: 269, column: 13, scope: !11338)
!11341 = !DILocation(line: 271, column: 27, scope: !11306)
!11342 = !DILocation(line: 271, column: 32, scope: !11306)
!11343 = !DILocation(line: 271, column: 25, scope: !11306)
!11344 = !DILocation(line: 271, column: 40, scope: !11306)
!11345 = !DILocation(line: 271, column: 3, scope: !11306)
!11346 = !DILocation(line: 271, column: 8, scope: !11306)
!11347 = !DILocation(line: 271, column: 19, scope: !11306)
!11348 = !DILocation(line: 272, column: 2, scope: !11306)
!11349 = !DILocation(line: 273, column: 27, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 272, column: 9)
!11351 = !DILocation(line: 273, column: 32, scope: !11350)
!11352 = !DILocation(line: 273, column: 25, scope: !11350)
!11353 = !DILocation(line: 273, column: 40, scope: !11350)
!11354 = !DILocation(line: 273, column: 3, scope: !11350)
!11355 = !DILocation(line: 273, column: 8, scope: !11350)
!11356 = !DILocation(line: 273, column: 19, scope: !11350)
!11357 = !DILocation(line: 275, column: 6, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 275, column: 6)
!11359 = !DILocation(line: 275, column: 11, scope: !11358)
!11360 = !DILocation(line: 275, column: 15, scope: !11358)
!11361 = !DILocation(line: 275, column: 6, scope: !11278)
!11362 = !DILocalVariable(name: "config4", scope: !11363, file: !3, line: 280, type: !453)
!11363 = distinct !DILexicalBlock(scope: !11358, file: !3, line: 275, column: 26)
!11364 = !DILocation(line: 280, column: 6, scope: !11363)
!11365 = !DILocation(line: 281, column: 3, scope: !11363)
!11366 = !DILocation(line: 282, column: 13, scope: !11363)
!11367 = !DILocation(line: 282, column: 11, scope: !11363)
!11368 = !DILocation(line: 283, column: 7, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 283, column: 7)
!11370 = !DILocation(line: 283, column: 15, scope: !11369)
!11371 = !DILocation(line: 283, column: 7, scope: !11363)
!11372 = !DILocation(line: 284, column: 4, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 283, column: 34)
!11374 = !DILocation(line: 284, column: 9, scope: !11373)
!11375 = !DILocation(line: 284, column: 13, scope: !11373)
!11376 = !DILocation(line: 285, column: 4, scope: !11373)
!11377 = !DILocation(line: 286, column: 3, scope: !11373)
!11378 = !DILocation(line: 287, column: 2, scope: !11363)
!11379 = !DILocation(line: 288, column: 21, scope: !11278)
!11380 = !DILocation(line: 288, column: 26, scope: !11278)
!11381 = !DILocation(line: 288, column: 37, scope: !11278)
!11382 = !DILocation(line: 288, column: 41, scope: !11278)
!11383 = !DILocation(line: 288, column: 2, scope: !11278)
!11384 = !DILocation(line: 288, column: 7, scope: !11278)
!11385 = !DILocation(line: 288, column: 18, scope: !11278)
!11386 = !DILocation(line: 289, column: 21, scope: !11278)
!11387 = !DILocation(line: 289, column: 26, scope: !11278)
!11388 = !DILocation(line: 289, column: 37, scope: !11278)
!11389 = !DILocation(line: 289, column: 41, scope: !11278)
!11390 = !DILocation(line: 289, column: 2, scope: !11278)
!11391 = !DILocation(line: 289, column: 7, scope: !11278)
!11392 = !DILocation(line: 289, column: 18, scope: !11278)
!11393 = !DILocation(line: 291, column: 2, scope: !11278)
!11394 = !DILocation(line: 292, column: 10, scope: !11278)
!11395 = !DILocation(line: 292, column: 15, scope: !11278)
!11396 = !DILocation(line: 292, column: 2, scope: !11278)
!11397 = !DILocation(line: 295, column: 3, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 292, column: 20)
!11399 = !DILocation(line: 298, column: 3, scope: !11398)
!11400 = !DILocation(line: 299, column: 3, scope: !11398)
!11401 = !DILocation(line: 303, column: 3, scope: !11398)
!11402 = !DILocation(line: 304, column: 20, scope: !11398)
!11403 = !DILocation(line: 304, column: 25, scope: !11398)
!11404 = !DILocation(line: 304, column: 35, scope: !11398)
!11405 = !DILocation(line: 304, column: 3, scope: !11398)
!11406 = !DILocation(line: 304, column: 8, scope: !11398)
!11407 = !DILocation(line: 304, column: 18, scope: !11398)
!11408 = !DILocation(line: 305, column: 3, scope: !11398)
!11409 = !DILocation(line: 306, column: 3, scope: !11398)
!11410 = !DILocation(line: 309, column: 3, scope: !11398)
!11411 = !DILocation(line: 309, column: 8, scope: !11398)
!11412 = !DILocation(line: 309, column: 16, scope: !11398)
!11413 = !DILocation(line: 315, column: 3, scope: !11398)
!11414 = !DILocation(line: 316, column: 7, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 316, column: 7)
!11416 = !DILocation(line: 316, column: 12, scope: !11415)
!11417 = !DILocation(line: 316, column: 16, scope: !11415)
!11418 = !DILocation(line: 316, column: 7, scope: !11398)
!11419 = !DILocalVariable(name: "cfg3", scope: !11420, file: !3, line: 317, type: !453)
!11420 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 316, column: 27)
!11421 = !DILocation(line: 317, column: 7, scope: !11420)
!11422 = !DILocation(line: 317, column: 14, scope: !11420)
!11423 = !DILocation(line: 317, column: 19, scope: !11420)
!11424 = !DILocation(line: 317, column: 29, scope: !11420)
!11425 = !DILocation(line: 319, column: 9, scope: !11420)
!11426 = !DILocation(line: 320, column: 8, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11420, file: !3, line: 320, column: 8)
!11428 = !DILocation(line: 320, column: 13, scope: !11427)
!11429 = !DILocation(line: 320, column: 21, scope: !11427)
!11430 = !DILocation(line: 320, column: 8, scope: !11420)
!11431 = !DILocation(line: 321, column: 10, scope: !11427)
!11432 = !DILocation(line: 321, column: 5, scope: !11427)
!11433 = !DILocation(line: 322, column: 24, scope: !11420)
!11434 = !DILocation(line: 322, column: 29, scope: !11420)
!11435 = !DILocation(line: 322, column: 4, scope: !11420)
!11436 = !DILocation(line: 323, column: 3, scope: !11420)
!11437 = !DILocalVariable(name: "cfg3", scope: !11438, file: !3, line: 324, type: !296)
!11438 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 323, column: 10)
!11439 = !DILocation(line: 324, column: 8, scope: !11438)
!11440 = !DILocation(line: 324, column: 15, scope: !11438)
!11441 = !DILocation(line: 324, column: 20, scope: !11438)
!11442 = !DILocation(line: 324, column: 30, scope: !11438)
!11443 = !DILocation(line: 326, column: 9, scope: !11438)
!11444 = !DILocation(line: 327, column: 24, scope: !11438)
!11445 = !DILocation(line: 327, column: 29, scope: !11438)
!11446 = !DILocation(line: 327, column: 4, scope: !11438)
!11447 = !DILocation(line: 329, column: 20, scope: !11398)
!11448 = !DILocation(line: 329, column: 25, scope: !11398)
!11449 = !DILocation(line: 329, column: 35, scope: !11398)
!11450 = !DILocation(line: 329, column: 3, scope: !11398)
!11451 = !DILocation(line: 329, column: 8, scope: !11398)
!11452 = !DILocation(line: 329, column: 18, scope: !11398)
!11453 = !DILocation(line: 330, column: 3, scope: !11398)
!11454 = !DILocation(line: 331, column: 7, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 331, column: 7)
!11456 = !DILocation(line: 331, column: 12, scope: !11455)
!11457 = !DILocation(line: 331, column: 16, scope: !11455)
!11458 = !DILocation(line: 331, column: 7, scope: !11398)
!11459 = !DILocation(line: 332, column: 4, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11455, file: !3, line: 331, column: 27)
!11461 = !DILocation(line: 332, column: 9, scope: !11460)
!11462 = !DILocation(line: 332, column: 17, scope: !11460)
!11463 = !DILocation(line: 333, column: 3, scope: !11460)
!11464 = !DILocation(line: 334, column: 8, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 334, column: 8)
!11466 = distinct !DILexicalBlock(scope: !11455, file: !3, line: 333, column: 10)
!11467 = !DILocation(line: 334, column: 13, scope: !11465)
!11468 = !DILocation(line: 334, column: 19, scope: !11465)
!11469 = !DILocation(line: 334, column: 8, scope: !11466)
!11470 = !DILocation(line: 335, column: 5, scope: !11465)
!11471 = !DILocation(line: 335, column: 10, scope: !11465)
!11472 = !DILocation(line: 335, column: 18, scope: !11465)
!11473 = !DILocation(line: 337, column: 5, scope: !11465)
!11474 = !DILocation(line: 337, column: 10, scope: !11465)
!11475 = !DILocation(line: 337, column: 18, scope: !11465)
!11476 = !DILocation(line: 339, column: 3, scope: !11398)
!11477 = !DILocation(line: 343, column: 3, scope: !11398)
!11478 = !DILocation(line: 344, column: 23, scope: !11398)
!11479 = !DILocation(line: 345, column: 10, scope: !11398)
!11480 = !DILocation(line: 345, column: 15, scope: !11398)
!11481 = !DILocation(line: 345, column: 25, scope: !11398)
!11482 = !DILocation(line: 345, column: 37, scope: !11398)
!11483 = !DILocation(line: 345, column: 9, scope: !11398)
!11484 = !DILocation(line: 344, column: 3, scope: !11398)
!11485 = !DILocation(line: 347, column: 20, scope: !11398)
!11486 = !DILocation(line: 347, column: 25, scope: !11398)
!11487 = !DILocation(line: 347, column: 35, scope: !11398)
!11488 = !DILocation(line: 347, column: 3, scope: !11398)
!11489 = !DILocation(line: 347, column: 8, scope: !11398)
!11490 = !DILocation(line: 347, column: 18, scope: !11398)
!11491 = !DILocation(line: 348, column: 3, scope: !11398)
!11492 = !DILocation(line: 349, column: 3, scope: !11398)
!11493 = !DILocation(line: 349, column: 8, scope: !11398)
!11494 = !DILocation(line: 349, column: 16, scope: !11398)
!11495 = !DILocation(line: 350, column: 3, scope: !11398)
!11496 = !DILocation(line: 353, column: 3, scope: !11398)
!11497 = !DILocation(line: 357, column: 2, scope: !11278)
!11498 = !DILocation(line: 359, column: 2, scope: !11278)
!11499 = !DILocation(line: 359, column: 7, scope: !11278)
!11500 = !DILocation(line: 359, column: 16, scope: !11278)
!11501 = !DILocation(line: 360, column: 2, scope: !11278)
!11502 = !DILocation(line: 362, column: 2, scope: !11278)
!11503 = !DILocation(line: 362, column: 7, scope: !11278)
!11504 = !DILocation(line: 362, column: 17, scope: !11278)
!11505 = !DILocation(line: 363, column: 2, scope: !11278)
!11506 = !DILocation(line: 365, column: 2, scope: !11278)
!11507 = !DILocation(line: 368, column: 2, scope: !11278)
!11508 = !DILocation(line: 369, column: 2, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 369, column: 2)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 369, column: 2)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 369, column: 2)
!11512 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 369, column: 2)
!11513 = !DILocation(line: 370, column: 1, scope: !11278)
!11514 = distinct !DISubprogram(name: "esp_queuecommand_lck", scope: !3, file: !3, line: 961, type: !11515, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11515 = !DISubroutineType(types: !11516)
!11516 = !{!232, !214, !5199}
!11517 = !DILocalVariable(name: "cmd", arg: 1, scope: !11514, file: !3, line: 961, type: !214)
!11518 = !DILocation(line: 961, column: 51, scope: !11514)
!11519 = !DILocalVariable(name: "done", arg: 2, scope: !11514, file: !3, line: 961, type: !5199)
!11520 = !DILocation(line: 961, column: 63, scope: !11514)
!11521 = !DILocalVariable(name: "dev", scope: !11514, file: !3, line: 963, type: !238)
!11522 = !DILocation(line: 963, column: 22, scope: !11514)
!11523 = !DILocation(line: 963, column: 28, scope: !11514)
!11524 = !DILocation(line: 963, column: 33, scope: !11514)
!11525 = !DILocalVariable(name: "esp", scope: !11514, file: !3, line: 964, type: !5289)
!11526 = !DILocation(line: 964, column: 14, scope: !11514)
!11527 = !DILocation(line: 964, column: 31, scope: !11514)
!11528 = !DILocation(line: 964, column: 36, scope: !11514)
!11529 = !DILocation(line: 964, column: 20, scope: !11514)
!11530 = !DILocalVariable(name: "spriv", scope: !11514, file: !3, line: 965, type: !5269)
!11531 = !DILocation(line: 965, column: 23, scope: !11514)
!11532 = !DILocalVariable(name: "ent", scope: !11514, file: !3, line: 966, type: !203)
!11533 = !DILocation(line: 966, column: 24, scope: !11514)
!11534 = !DILocation(line: 968, column: 20, scope: !11514)
!11535 = !DILocation(line: 968, column: 8, scope: !11514)
!11536 = !DILocation(line: 968, column: 6, scope: !11514)
!11537 = !DILocation(line: 969, column: 7, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11514, file: !3, line: 969, column: 6)
!11539 = !DILocation(line: 969, column: 6, scope: !11514)
!11540 = !DILocation(line: 970, column: 3, scope: !11538)
!11541 = !DILocation(line: 972, column: 13, scope: !11514)
!11542 = !DILocation(line: 972, column: 2, scope: !11514)
!11543 = !DILocation(line: 972, column: 7, scope: !11514)
!11544 = !DILocation(line: 972, column: 11, scope: !11514)
!11545 = !DILocation(line: 974, column: 19, scope: !11514)
!11546 = !DILocation(line: 974, column: 2, scope: !11514)
!11547 = !DILocation(line: 974, column: 7, scope: !11514)
!11548 = !DILocation(line: 974, column: 17, scope: !11514)
!11549 = !DILocation(line: 976, column: 10, scope: !11514)
!11550 = !DILocation(line: 976, column: 8, scope: !11514)
!11551 = !DILocation(line: 977, column: 2, scope: !11514)
!11552 = !DILocation(line: 977, column: 9, scope: !11514)
!11553 = !DILocation(line: 977, column: 16, scope: !11514)
!11554 = !DILocation(line: 979, column: 17, scope: !11514)
!11555 = !DILocation(line: 979, column: 22, scope: !11514)
!11556 = !DILocation(line: 979, column: 29, scope: !11514)
!11557 = !DILocation(line: 979, column: 34, scope: !11514)
!11558 = !DILocation(line: 979, column: 2, scope: !11514)
!11559 = !DILocation(line: 981, column: 28, scope: !11514)
!11560 = !DILocation(line: 981, column: 2, scope: !11514)
!11561 = !DILocation(line: 983, column: 2, scope: !11514)
!11562 = !DILocation(line: 984, column: 1, scope: !11514)
!11563 = distinct !DISubprogram(name: "shost_priv", scope: !154, file: !154, line: 710, type: !11564, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11564 = !DISubroutineType(types: !11565)
!11565 = !{!202, !242}
!11566 = !DILocalVariable(name: "shost", arg: 1, scope: !11563, file: !154, line: 710, type: !242)
!11567 = !DILocation(line: 710, column: 50, scope: !11563)
!11568 = !DILocation(line: 712, column: 17, scope: !11563)
!11569 = !DILocation(line: 712, column: 24, scope: !11563)
!11570 = !DILocation(line: 712, column: 9, scope: !11563)
!11571 = !DILocation(line: 712, column: 2, scope: !11563)
!11572 = distinct !DISubprogram(name: "esp_get_ent", scope: !3, file: !3, line: 878, type: !9217, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11573 = !DILocalVariable(name: "esp", arg: 1, scope: !11572, file: !3, line: 878, type: !5289)
!11574 = !DILocation(line: 878, column: 54, scope: !11572)
!11575 = !DILocalVariable(name: "head", scope: !11572, file: !3, line: 880, type: !211)
!11576 = !DILocation(line: 880, column: 20, scope: !11572)
!11577 = !DILocation(line: 880, column: 28, scope: !11572)
!11578 = !DILocation(line: 880, column: 33, scope: !11572)
!11579 = !DILocalVariable(name: "ret", scope: !11572, file: !3, line: 881, type: !203)
!11580 = !DILocation(line: 881, column: 24, scope: !11572)
!11581 = !DILocation(line: 883, column: 17, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 883, column: 6)
!11583 = !DILocation(line: 883, column: 6, scope: !11582)
!11584 = !DILocation(line: 883, column: 6, scope: !11572)
!11585 = !DILocation(line: 884, column: 9, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 883, column: 24)
!11587 = !DILocation(line: 884, column: 7, scope: !11586)
!11588 = !DILocation(line: 885, column: 2, scope: !11586)
!11589 = !DILocalVariable(name: "__mptr", scope: !11590, file: !3, line: 886, type: !202)
!11590 = distinct !DILexicalBlock(scope: !11591, file: !3, line: 886, column: 9)
!11591 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 885, column: 9)
!11592 = !DILocation(line: 886, column: 9, scope: !11590)
!11593 = !DILocation(line: 886, column: 9, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 886, column: 9)
!11595 = !DILocation(line: 886, column: 7, scope: !11591)
!11596 = !DILocation(line: 887, column: 13, scope: !11591)
!11597 = !DILocation(line: 887, column: 18, scope: !11591)
!11598 = !DILocation(line: 887, column: 3, scope: !11591)
!11599 = !DILocation(line: 888, column: 10, scope: !11591)
!11600 = !DILocation(line: 888, column: 3, scope: !11591)
!11601 = !DILocation(line: 890, column: 9, scope: !11572)
!11602 = !DILocation(line: 890, column: 2, scope: !11572)
!11603 = distinct !DISubprogram(name: "list_add_tail", scope: !8353, file: !8353, line: 98, type: !8471, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11604 = !DILocalVariable(name: "new", arg: 1, scope: !11603, file: !8353, line: 98, type: !211)
!11605 = !DILocation(line: 98, column: 52, scope: !11603)
!11606 = !DILocalVariable(name: "head", arg: 2, scope: !11603, file: !8353, line: 98, type: !211)
!11607 = !DILocation(line: 98, column: 75, scope: !11603)
!11608 = !DILocation(line: 100, column: 13, scope: !11603)
!11609 = !DILocation(line: 100, column: 18, scope: !11603)
!11610 = !DILocation(line: 100, column: 24, scope: !11603)
!11611 = !DILocation(line: 100, column: 30, scope: !11603)
!11612 = !DILocation(line: 100, column: 2, scope: !11603)
!11613 = !DILocation(line: 101, column: 1, scope: !11603)
!11614 = distinct !DISubprogram(name: "list_empty", scope: !8353, file: !8353, line: 280, type: !11615, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11615 = !DISubroutineType(types: !11616)
!11616 = !{!232, !11617}
!11617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11618, size: 64)
!11618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!11619 = !DILocalVariable(name: "head", arg: 1, scope: !11614, file: !8353, line: 280, type: !11617)
!11620 = !DILocation(line: 280, column: 54, scope: !11614)
!11621 = !DILocation(line: 282, column: 9, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11614, file: !8353, line: 282, column: 9)
!11623 = !DILocation(line: 282, column: 9, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11622, file: !8353, line: 282, column: 9)
!11625 = !DILocation(line: 282, column: 34, scope: !11614)
!11626 = !DILocation(line: 282, column: 31, scope: !11614)
!11627 = !DILocation(line: 282, column: 2, scope: !11614)
!11628 = distinct !DISubprogram(name: "kzalloc", scope: !187, file: !187, line: 662, type: !11629, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{!202, !867, !544}
!11631 = !DILocalVariable(name: "s", arg: 1, scope: !11632, file: !187, line: 445, type: !2589)
!11632 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !187, file: !187, line: 445, type: !11633, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11633 = !DISubroutineType(types: !11634)
!11634 = !{!202, !2589, !544, !867}
!11635 = !DILocation(line: 445, column: 72, scope: !11632, inlinedAt: !11636)
!11636 = distinct !DILocation(line: 552, column: 10, scope: !11637, inlinedAt: !11640)
!11637 = distinct !DILexicalBlock(scope: !11638, file: !187, line: 540, column: 34)
!11638 = distinct !DILexicalBlock(scope: !11639, file: !187, line: 540, column: 6)
!11639 = distinct !DISubprogram(name: "kmalloc", scope: !187, file: !187, line: 538, type: !11629, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11640 = distinct !DILocation(line: 664, column: 9, scope: !11628)
!11641 = !DILocalVariable(name: "flags", arg: 2, scope: !11632, file: !187, line: 446, type: !544)
!11642 = !DILocation(line: 446, column: 9, scope: !11632, inlinedAt: !11636)
!11643 = !DILocalVariable(name: "size", arg: 3, scope: !11632, file: !187, line: 446, type: !867)
!11644 = !DILocation(line: 446, column: 23, scope: !11632, inlinedAt: !11636)
!11645 = !DILocalVariable(name: "ret", scope: !11632, file: !187, line: 448, type: !202)
!11646 = !DILocation(line: 448, column: 8, scope: !11632, inlinedAt: !11636)
!11647 = !DILocalVariable(name: "flags", arg: 1, scope: !11648, file: !187, line: 318, type: !544)
!11648 = distinct !DISubprogram(name: "kmalloc_type", scope: !187, file: !187, line: 318, type: !11649, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11649 = !DISubroutineType(types: !11650)
!11650 = !{!186, !544}
!11651 = !DILocation(line: 318, column: 67, scope: !11648, inlinedAt: !11652)
!11652 = distinct !DILocation(line: 553, column: 20, scope: !11637, inlinedAt: !11640)
!11653 = !DILocalVariable(name: "size", arg: 1, scope: !11654, file: !187, line: 346, type: !867)
!11654 = distinct !DISubprogram(name: "kmalloc_index", scope: !187, file: !187, line: 346, type: !11655, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11655 = !DISubroutineType(types: !11656)
!11656 = !{!7, !867}
!11657 = !DILocation(line: 346, column: 58, scope: !11654, inlinedAt: !11658)
!11658 = distinct !DILocation(line: 547, column: 11, scope: !11637, inlinedAt: !11640)
!11659 = !DILocalVariable(name: "size", arg: 1, scope: !11660, file: !187, line: 472, type: !867)
!11660 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !187, file: !187, line: 472, type: !11661, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11661 = !DISubroutineType(types: !11662)
!11662 = !{!202, !867, !544, !7}
!11663 = !DILocation(line: 472, column: 28, scope: !11660, inlinedAt: !11664)
!11664 = distinct !DILocation(line: 481, column: 9, scope: !11665, inlinedAt: !11666)
!11665 = distinct !DISubprogram(name: "kmalloc_large", scope: !187, file: !187, line: 478, type: !11629, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11666 = distinct !DILocation(line: 545, column: 11, scope: !11667, inlinedAt: !11640)
!11667 = distinct !DILexicalBlock(scope: !11637, file: !187, line: 544, column: 7)
!11668 = !DILocalVariable(name: "flags", arg: 2, scope: !11660, file: !187, line: 472, type: !544)
!11669 = !DILocation(line: 472, column: 40, scope: !11660, inlinedAt: !11664)
!11670 = !DILocalVariable(name: "order", arg: 3, scope: !11660, file: !187, line: 472, type: !7)
!11671 = !DILocation(line: 472, column: 60, scope: !11660, inlinedAt: !11664)
!11672 = !DILocalVariable(name: "size", arg: 1, scope: !11665, file: !187, line: 478, type: !867)
!11673 = !DILocation(line: 478, column: 51, scope: !11665, inlinedAt: !11666)
!11674 = !DILocalVariable(name: "flags", arg: 2, scope: !11665, file: !187, line: 478, type: !544)
!11675 = !DILocation(line: 478, column: 63, scope: !11665, inlinedAt: !11666)
!11676 = !DILocalVariable(name: "order", scope: !11665, file: !187, line: 480, type: !7)
!11677 = !DILocation(line: 480, column: 15, scope: !11665, inlinedAt: !11666)
!11678 = !DILocalVariable(name: "size", arg: 1, scope: !11639, file: !187, line: 538, type: !867)
!11679 = !DILocation(line: 538, column: 45, scope: !11639, inlinedAt: !11640)
!11680 = !DILocalVariable(name: "flags", arg: 2, scope: !11639, file: !187, line: 538, type: !544)
!11681 = !DILocation(line: 538, column: 57, scope: !11639, inlinedAt: !11640)
!11682 = !DILocalVariable(name: "index", scope: !11637, file: !187, line: 542, type: !7)
!11683 = !DILocation(line: 542, column: 16, scope: !11637, inlinedAt: !11640)
!11684 = !DILocalVariable(name: "size", arg: 1, scope: !11628, file: !187, line: 662, type: !867)
!11685 = !DILocation(line: 662, column: 36, scope: !11628)
!11686 = !DILocalVariable(name: "flags", arg: 2, scope: !11628, file: !187, line: 662, type: !544)
!11687 = !DILocation(line: 662, column: 48, scope: !11628)
!11688 = !DILocation(line: 664, column: 17, scope: !11628)
!11689 = !DILocation(line: 664, column: 23, scope: !11628)
!11690 = !DILocation(line: 664, column: 29, scope: !11628)
!11691 = !DILocation(line: 540, column: 27, scope: !11638, inlinedAt: !11640)
!11692 = !DILocation(line: 540, column: 6, scope: !11638, inlinedAt: !11640)
!11693 = !DILocation(line: 540, column: 6, scope: !11639, inlinedAt: !11640)
!11694 = !DILocation(line: 544, column: 7, scope: !11667, inlinedAt: !11640)
!11695 = !DILocation(line: 544, column: 12, scope: !11667, inlinedAt: !11640)
!11696 = !DILocation(line: 544, column: 7, scope: !11637, inlinedAt: !11640)
!11697 = !DILocation(line: 545, column: 25, scope: !11667, inlinedAt: !11640)
!11698 = !DILocation(line: 545, column: 31, scope: !11667, inlinedAt: !11640)
!11699 = !DILocation(line: 480, column: 33, scope: !11665, inlinedAt: !11666)
!11700 = !DILocation(line: 480, column: 23, scope: !11665, inlinedAt: !11666)
!11701 = !DILocation(line: 481, column: 29, scope: !11665, inlinedAt: !11666)
!11702 = !DILocation(line: 481, column: 35, scope: !11665, inlinedAt: !11666)
!11703 = !DILocation(line: 481, column: 42, scope: !11665, inlinedAt: !11666)
!11704 = !DILocation(line: 474, column: 23, scope: !11660, inlinedAt: !11664)
!11705 = !DILocation(line: 474, column: 29, scope: !11660, inlinedAt: !11664)
!11706 = !DILocation(line: 474, column: 36, scope: !11660, inlinedAt: !11664)
!11707 = !DILocation(line: 474, column: 9, scope: !11660, inlinedAt: !11664)
!11708 = !DILocation(line: 545, column: 4, scope: !11667, inlinedAt: !11640)
!11709 = !DILocation(line: 547, column: 25, scope: !11637, inlinedAt: !11640)
!11710 = !DILocation(line: 348, column: 7, scope: !11711, inlinedAt: !11658)
!11711 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 348, column: 6)
!11712 = !DILocation(line: 348, column: 6, scope: !11654, inlinedAt: !11658)
!11713 = !DILocation(line: 349, column: 3, scope: !11711, inlinedAt: !11658)
!11714 = !DILocation(line: 351, column: 6, scope: !11715, inlinedAt: !11658)
!11715 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 351, column: 6)
!11716 = !DILocation(line: 351, column: 11, scope: !11715, inlinedAt: !11658)
!11717 = !DILocation(line: 351, column: 6, scope: !11654, inlinedAt: !11658)
!11718 = !DILocation(line: 352, column: 3, scope: !11715, inlinedAt: !11658)
!11719 = !DILocation(line: 354, column: 32, scope: !11720, inlinedAt: !11658)
!11720 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 354, column: 6)
!11721 = !DILocation(line: 354, column: 37, scope: !11720, inlinedAt: !11658)
!11722 = !DILocation(line: 354, column: 42, scope: !11720, inlinedAt: !11658)
!11723 = !DILocation(line: 354, column: 45, scope: !11720, inlinedAt: !11658)
!11724 = !DILocation(line: 354, column: 50, scope: !11720, inlinedAt: !11658)
!11725 = !DILocation(line: 354, column: 6, scope: !11654, inlinedAt: !11658)
!11726 = !DILocation(line: 355, column: 3, scope: !11720, inlinedAt: !11658)
!11727 = !DILocation(line: 356, column: 32, scope: !11728, inlinedAt: !11658)
!11728 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 356, column: 6)
!11729 = !DILocation(line: 356, column: 37, scope: !11728, inlinedAt: !11658)
!11730 = !DILocation(line: 356, column: 43, scope: !11728, inlinedAt: !11658)
!11731 = !DILocation(line: 356, column: 46, scope: !11728, inlinedAt: !11658)
!11732 = !DILocation(line: 356, column: 51, scope: !11728, inlinedAt: !11658)
!11733 = !DILocation(line: 356, column: 6, scope: !11654, inlinedAt: !11658)
!11734 = !DILocation(line: 357, column: 3, scope: !11728, inlinedAt: !11658)
!11735 = !DILocation(line: 358, column: 6, scope: !11736, inlinedAt: !11658)
!11736 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 358, column: 6)
!11737 = !DILocation(line: 358, column: 11, scope: !11736, inlinedAt: !11658)
!11738 = !DILocation(line: 358, column: 6, scope: !11654, inlinedAt: !11658)
!11739 = !DILocation(line: 358, column: 26, scope: !11736, inlinedAt: !11658)
!11740 = !DILocation(line: 359, column: 6, scope: !11741, inlinedAt: !11658)
!11741 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 359, column: 6)
!11742 = !DILocation(line: 359, column: 11, scope: !11741, inlinedAt: !11658)
!11743 = !DILocation(line: 359, column: 6, scope: !11654, inlinedAt: !11658)
!11744 = !DILocation(line: 359, column: 26, scope: !11741, inlinedAt: !11658)
!11745 = !DILocation(line: 360, column: 6, scope: !11746, inlinedAt: !11658)
!11746 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 360, column: 6)
!11747 = !DILocation(line: 360, column: 11, scope: !11746, inlinedAt: !11658)
!11748 = !DILocation(line: 360, column: 6, scope: !11654, inlinedAt: !11658)
!11749 = !DILocation(line: 360, column: 26, scope: !11746, inlinedAt: !11658)
!11750 = !DILocation(line: 361, column: 6, scope: !11751, inlinedAt: !11658)
!11751 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 361, column: 6)
!11752 = !DILocation(line: 361, column: 11, scope: !11751, inlinedAt: !11658)
!11753 = !DILocation(line: 361, column: 6, scope: !11654, inlinedAt: !11658)
!11754 = !DILocation(line: 361, column: 26, scope: !11751, inlinedAt: !11658)
!11755 = !DILocation(line: 362, column: 6, scope: !11756, inlinedAt: !11658)
!11756 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 362, column: 6)
!11757 = !DILocation(line: 362, column: 11, scope: !11756, inlinedAt: !11658)
!11758 = !DILocation(line: 362, column: 6, scope: !11654, inlinedAt: !11658)
!11759 = !DILocation(line: 362, column: 26, scope: !11756, inlinedAt: !11658)
!11760 = !DILocation(line: 363, column: 6, scope: !11761, inlinedAt: !11658)
!11761 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 363, column: 6)
!11762 = !DILocation(line: 363, column: 11, scope: !11761, inlinedAt: !11658)
!11763 = !DILocation(line: 363, column: 6, scope: !11654, inlinedAt: !11658)
!11764 = !DILocation(line: 363, column: 26, scope: !11761, inlinedAt: !11658)
!11765 = !DILocation(line: 364, column: 6, scope: !11766, inlinedAt: !11658)
!11766 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 364, column: 6)
!11767 = !DILocation(line: 364, column: 11, scope: !11766, inlinedAt: !11658)
!11768 = !DILocation(line: 364, column: 6, scope: !11654, inlinedAt: !11658)
!11769 = !DILocation(line: 364, column: 26, scope: !11766, inlinedAt: !11658)
!11770 = !DILocation(line: 365, column: 6, scope: !11771, inlinedAt: !11658)
!11771 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 365, column: 6)
!11772 = !DILocation(line: 365, column: 11, scope: !11771, inlinedAt: !11658)
!11773 = !DILocation(line: 365, column: 6, scope: !11654, inlinedAt: !11658)
!11774 = !DILocation(line: 365, column: 26, scope: !11771, inlinedAt: !11658)
!11775 = !DILocation(line: 366, column: 6, scope: !11776, inlinedAt: !11658)
!11776 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 366, column: 6)
!11777 = !DILocation(line: 366, column: 11, scope: !11776, inlinedAt: !11658)
!11778 = !DILocation(line: 366, column: 6, scope: !11654, inlinedAt: !11658)
!11779 = !DILocation(line: 366, column: 26, scope: !11776, inlinedAt: !11658)
!11780 = !DILocation(line: 367, column: 6, scope: !11781, inlinedAt: !11658)
!11781 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 367, column: 6)
!11782 = !DILocation(line: 367, column: 11, scope: !11781, inlinedAt: !11658)
!11783 = !DILocation(line: 367, column: 6, scope: !11654, inlinedAt: !11658)
!11784 = !DILocation(line: 367, column: 26, scope: !11781, inlinedAt: !11658)
!11785 = !DILocation(line: 368, column: 6, scope: !11786, inlinedAt: !11658)
!11786 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 368, column: 6)
!11787 = !DILocation(line: 368, column: 11, scope: !11786, inlinedAt: !11658)
!11788 = !DILocation(line: 368, column: 6, scope: !11654, inlinedAt: !11658)
!11789 = !DILocation(line: 368, column: 26, scope: !11786, inlinedAt: !11658)
!11790 = !DILocation(line: 369, column: 6, scope: !11791, inlinedAt: !11658)
!11791 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 369, column: 6)
!11792 = !DILocation(line: 369, column: 11, scope: !11791, inlinedAt: !11658)
!11793 = !DILocation(line: 369, column: 6, scope: !11654, inlinedAt: !11658)
!11794 = !DILocation(line: 369, column: 26, scope: !11791, inlinedAt: !11658)
!11795 = !DILocation(line: 370, column: 6, scope: !11796, inlinedAt: !11658)
!11796 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 370, column: 6)
!11797 = !DILocation(line: 370, column: 11, scope: !11796, inlinedAt: !11658)
!11798 = !DILocation(line: 370, column: 6, scope: !11654, inlinedAt: !11658)
!11799 = !DILocation(line: 370, column: 26, scope: !11796, inlinedAt: !11658)
!11800 = !DILocation(line: 371, column: 6, scope: !11801, inlinedAt: !11658)
!11801 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 371, column: 6)
!11802 = !DILocation(line: 371, column: 11, scope: !11801, inlinedAt: !11658)
!11803 = !DILocation(line: 371, column: 6, scope: !11654, inlinedAt: !11658)
!11804 = !DILocation(line: 371, column: 26, scope: !11801, inlinedAt: !11658)
!11805 = !DILocation(line: 372, column: 6, scope: !11806, inlinedAt: !11658)
!11806 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 372, column: 6)
!11807 = !DILocation(line: 372, column: 11, scope: !11806, inlinedAt: !11658)
!11808 = !DILocation(line: 372, column: 6, scope: !11654, inlinedAt: !11658)
!11809 = !DILocation(line: 372, column: 26, scope: !11806, inlinedAt: !11658)
!11810 = !DILocation(line: 373, column: 6, scope: !11811, inlinedAt: !11658)
!11811 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 373, column: 6)
!11812 = !DILocation(line: 373, column: 11, scope: !11811, inlinedAt: !11658)
!11813 = !DILocation(line: 373, column: 6, scope: !11654, inlinedAt: !11658)
!11814 = !DILocation(line: 373, column: 26, scope: !11811, inlinedAt: !11658)
!11815 = !DILocation(line: 374, column: 6, scope: !11816, inlinedAt: !11658)
!11816 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 374, column: 6)
!11817 = !DILocation(line: 374, column: 11, scope: !11816, inlinedAt: !11658)
!11818 = !DILocation(line: 374, column: 6, scope: !11654, inlinedAt: !11658)
!11819 = !DILocation(line: 374, column: 26, scope: !11816, inlinedAt: !11658)
!11820 = !DILocation(line: 375, column: 6, scope: !11821, inlinedAt: !11658)
!11821 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 375, column: 6)
!11822 = !DILocation(line: 375, column: 11, scope: !11821, inlinedAt: !11658)
!11823 = !DILocation(line: 375, column: 6, scope: !11654, inlinedAt: !11658)
!11824 = !DILocation(line: 375, column: 27, scope: !11821, inlinedAt: !11658)
!11825 = !DILocation(line: 376, column: 6, scope: !11826, inlinedAt: !11658)
!11826 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 376, column: 6)
!11827 = !DILocation(line: 376, column: 11, scope: !11826, inlinedAt: !11658)
!11828 = !DILocation(line: 376, column: 6, scope: !11654, inlinedAt: !11658)
!11829 = !DILocation(line: 376, column: 32, scope: !11826, inlinedAt: !11658)
!11830 = !DILocation(line: 377, column: 6, scope: !11831, inlinedAt: !11658)
!11831 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 377, column: 6)
!11832 = !DILocation(line: 377, column: 11, scope: !11831, inlinedAt: !11658)
!11833 = !DILocation(line: 377, column: 6, scope: !11654, inlinedAt: !11658)
!11834 = !DILocation(line: 377, column: 32, scope: !11831, inlinedAt: !11658)
!11835 = !DILocation(line: 378, column: 6, scope: !11836, inlinedAt: !11658)
!11836 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 378, column: 6)
!11837 = !DILocation(line: 378, column: 11, scope: !11836, inlinedAt: !11658)
!11838 = !DILocation(line: 378, column: 6, scope: !11654, inlinedAt: !11658)
!11839 = !DILocation(line: 378, column: 32, scope: !11836, inlinedAt: !11658)
!11840 = !DILocation(line: 379, column: 6, scope: !11841, inlinedAt: !11658)
!11841 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 379, column: 6)
!11842 = !DILocation(line: 379, column: 11, scope: !11841, inlinedAt: !11658)
!11843 = !DILocation(line: 379, column: 6, scope: !11654, inlinedAt: !11658)
!11844 = !DILocation(line: 379, column: 33, scope: !11841, inlinedAt: !11658)
!11845 = !DILocation(line: 380, column: 6, scope: !11846, inlinedAt: !11658)
!11846 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 380, column: 6)
!11847 = !DILocation(line: 380, column: 11, scope: !11846, inlinedAt: !11658)
!11848 = !DILocation(line: 380, column: 6, scope: !11654, inlinedAt: !11658)
!11849 = !DILocation(line: 380, column: 33, scope: !11846, inlinedAt: !11658)
!11850 = !DILocation(line: 381, column: 6, scope: !11851, inlinedAt: !11658)
!11851 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 381, column: 6)
!11852 = !DILocation(line: 381, column: 11, scope: !11851, inlinedAt: !11658)
!11853 = !DILocation(line: 381, column: 6, scope: !11654, inlinedAt: !11658)
!11854 = !DILocation(line: 381, column: 33, scope: !11851, inlinedAt: !11658)
!11855 = !DILocation(line: 382, column: 2, scope: !11856, inlinedAt: !11658)
!11856 = distinct !DILexicalBlock(scope: !11857, file: !187, line: 382, column: 2)
!11857 = distinct !DILexicalBlock(scope: !11654, file: !187, line: 382, column: 2)
!11858 = !{i32 -2144584643, i32 -2144584614, i32 -2144584568, i32 -2144584510, i32 -2144584456, i32 -2144584402, i32 -2144584347, i32 -2144584316}
!11859 = !DILocation(line: 382, column: 2, scope: !11860, inlinedAt: !11658)
!11860 = distinct !DILexicalBlock(scope: !11861, file: !187, line: 382, column: 2)
!11861 = distinct !DILexicalBlock(scope: !11857, file: !187, line: 382, column: 2)
!11862 = !{i32 -2144583873, i32 -2144583866, i32 -2144583812, i32 -2144583781, i32 -2144583751}
!11863 = !DILocation(line: 382, column: 2, scope: !11861, inlinedAt: !11658)
!11864 = !DILocation(line: 386, column: 1, scope: !11654, inlinedAt: !11658)
!11865 = !DILocation(line: 547, column: 9, scope: !11637, inlinedAt: !11640)
!11866 = !DILocation(line: 549, column: 8, scope: !11867, inlinedAt: !11640)
!11867 = distinct !DILexicalBlock(scope: !11637, file: !187, line: 549, column: 7)
!11868 = !DILocation(line: 549, column: 7, scope: !11637, inlinedAt: !11640)
!11869 = !DILocation(line: 550, column: 4, scope: !11867, inlinedAt: !11640)
!11870 = !DILocation(line: 553, column: 33, scope: !11637, inlinedAt: !11640)
!11871 = !DILocation(line: 325, column: 6, scope: !11872, inlinedAt: !11652)
!11872 = distinct !DILexicalBlock(scope: !11648, file: !187, line: 325, column: 6)
!11873 = !DILocation(line: 325, column: 6, scope: !11648, inlinedAt: !11652)
!11874 = !DILocation(line: 326, column: 3, scope: !11872, inlinedAt: !11652)
!11875 = !DILocation(line: 332, column: 9, scope: !11648, inlinedAt: !11652)
!11876 = !DILocation(line: 332, column: 15, scope: !11648, inlinedAt: !11652)
!11877 = !DILocation(line: 332, column: 2, scope: !11648, inlinedAt: !11652)
!11878 = !DILocation(line: 336, column: 1, scope: !11648, inlinedAt: !11652)
!11879 = !DILocation(line: 553, column: 5, scope: !11637, inlinedAt: !11640)
!11880 = !DILocation(line: 553, column: 41, scope: !11637, inlinedAt: !11640)
!11881 = !DILocation(line: 554, column: 5, scope: !11637, inlinedAt: !11640)
!11882 = !DILocation(line: 554, column: 12, scope: !11637, inlinedAt: !11640)
!11883 = !DILocation(line: 448, column: 31, scope: !11632, inlinedAt: !11636)
!11884 = !DILocation(line: 448, column: 34, scope: !11632, inlinedAt: !11636)
!11885 = !DILocation(line: 448, column: 14, scope: !11632, inlinedAt: !11636)
!11886 = !DILocation(line: 450, column: 22, scope: !11632, inlinedAt: !11636)
!11887 = !DILocation(line: 450, column: 25, scope: !11632, inlinedAt: !11636)
!11888 = !DILocation(line: 450, column: 30, scope: !11632, inlinedAt: !11636)
!11889 = !DILocation(line: 450, column: 36, scope: !11632, inlinedAt: !11636)
!11890 = !DILocation(line: 450, column: 8, scope: !11632, inlinedAt: !11636)
!11891 = !DILocation(line: 450, column: 6, scope: !11632, inlinedAt: !11636)
!11892 = !DILocation(line: 451, column: 9, scope: !11632, inlinedAt: !11636)
!11893 = !DILocation(line: 552, column: 3, scope: !11637, inlinedAt: !11640)
!11894 = !DILocation(line: 557, column: 19, scope: !11639, inlinedAt: !11640)
!11895 = !DILocation(line: 557, column: 25, scope: !11639, inlinedAt: !11640)
!11896 = !DILocation(line: 557, column: 9, scope: !11639, inlinedAt: !11640)
!11897 = !DILocation(line: 557, column: 2, scope: !11639, inlinedAt: !11640)
!11898 = !DILocation(line: 558, column: 1, scope: !11639, inlinedAt: !11640)
!11899 = !DILocation(line: 664, column: 2, scope: !11628)
!11900 = distinct !DISubprogram(name: "get_order", scope: !11901, file: !11901, line: 29, type: !11902, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11901 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11902 = !DISubroutineType(types: !11903)
!11903 = !{!232, !201}
!11904 = !DILocalVariable(name: "x", arg: 1, scope: !11905, file: !7529, line: 366, type: !343)
!11905 = distinct !DISubprogram(name: "fls64", scope: !7529, file: !7529, line: 366, type: !11906, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11906 = !DISubroutineType(types: !11907)
!11907 = !{!232, !343}
!11908 = !DILocation(line: 366, column: 40, scope: !11905, inlinedAt: !11909)
!11909 = distinct !DILocation(line: 46, column: 9, scope: !11900)
!11910 = !DILocalVariable(name: "bitpos", scope: !11905, file: !7529, line: 368, type: !232)
!11911 = !DILocation(line: 368, column: 6, scope: !11905, inlinedAt: !11909)
!11912 = !DILocalVariable(name: "size", arg: 1, scope: !11900, file: !11901, line: 29, type: !201)
!11913 = !DILocation(line: 29, column: 63, scope: !11900)
!11914 = !DILocation(line: 31, column: 27, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11900, file: !11901, line: 31, column: 6)
!11916 = !DILocation(line: 31, column: 6, scope: !11915)
!11917 = !DILocation(line: 31, column: 6, scope: !11900)
!11918 = !DILocation(line: 32, column: 8, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11920, file: !11901, line: 32, column: 7)
!11920 = distinct !DILexicalBlock(scope: !11915, file: !11901, line: 31, column: 34)
!11921 = !DILocation(line: 32, column: 7, scope: !11920)
!11922 = !DILocation(line: 33, column: 4, scope: !11919)
!11923 = !DILocation(line: 35, column: 7, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11920, file: !11901, line: 35, column: 7)
!11925 = !DILocation(line: 35, column: 12, scope: !11924)
!11926 = !DILocation(line: 35, column: 7, scope: !11920)
!11927 = !DILocation(line: 36, column: 4, scope: !11924)
!11928 = !DILocation(line: 38, column: 10, scope: !11920)
!11929 = !DILocation(line: 38, column: 28, scope: !11920)
!11930 = !DILocation(line: 38, column: 41, scope: !11920)
!11931 = !DILocation(line: 38, column: 3, scope: !11920)
!11932 = !DILocation(line: 41, column: 6, scope: !11900)
!11933 = !DILocation(line: 42, column: 7, scope: !11900)
!11934 = !DILocation(line: 46, column: 15, scope: !11900)
!11935 = !DILocation(line: 374, column: 2, scope: !11905, inlinedAt: !11909)
!11936 = !DILocation(line: 376, column: 14, scope: !11905, inlinedAt: !11909)
!11937 = !{i32 309615}
!11938 = !DILocation(line: 377, column: 9, scope: !11905, inlinedAt: !11909)
!11939 = !DILocation(line: 377, column: 16, scope: !11905, inlinedAt: !11909)
!11940 = !DILocation(line: 46, column: 2, scope: !11900)
!11941 = !DILocation(line: 48, column: 1, scope: !11900)
!11942 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11943, file: !11943, line: 30, type: !11944, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11943 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11944 = !DISubroutineType(types: !11945)
!11945 = !{!232, !342}
!11946 = !DILocation(line: 366, column: 40, scope: !11905, inlinedAt: !11947)
!11947 = distinct !DILocation(line: 32, column: 9, scope: !11942)
!11948 = !DILocation(line: 368, column: 6, scope: !11905, inlinedAt: !11947)
!11949 = !DILocalVariable(name: "n", arg: 1, scope: !11942, file: !11943, line: 30, type: !342)
!11950 = !DILocation(line: 30, column: 21, scope: !11942)
!11951 = !DILocation(line: 32, column: 15, scope: !11942)
!11952 = !DILocation(line: 374, column: 2, scope: !11905, inlinedAt: !11947)
!11953 = !DILocation(line: 376, column: 14, scope: !11905, inlinedAt: !11947)
!11954 = !DILocation(line: 377, column: 9, scope: !11905, inlinedAt: !11947)
!11955 = !DILocation(line: 377, column: 16, scope: !11905, inlinedAt: !11947)
!11956 = !DILocation(line: 32, column: 18, scope: !11942)
!11957 = !DILocation(line: 32, column: 2, scope: !11942)
!11958 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !11959, file: !11959, line: 137, type: !11960, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11959 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!11960 = !DISubroutineType(types: !11961)
!11961 = !{!202, !2589, !1855, !867, !544}
!11962 = !DILocalVariable(name: "s", arg: 1, scope: !11958, file: !11959, line: 137, type: !2589)
!11963 = !DILocation(line: 137, column: 54, scope: !11958)
!11964 = !DILocalVariable(name: "object", arg: 2, scope: !11958, file: !11959, line: 137, type: !1855)
!11965 = !DILocation(line: 137, column: 69, scope: !11958)
!11966 = !DILocalVariable(name: "size", arg: 3, scope: !11958, file: !11959, line: 138, type: !867)
!11967 = !DILocation(line: 138, column: 12, scope: !11958)
!11968 = !DILocalVariable(name: "flags", arg: 4, scope: !11958, file: !11959, line: 138, type: !544)
!11969 = !DILocation(line: 138, column: 24, scope: !11958)
!11970 = !DILocation(line: 140, column: 17, scope: !11958)
!11971 = !DILocation(line: 140, column: 2, scope: !11958)
!11972 = !DILocalVariable(name: "x", arg: 1, scope: !5573, file: !2183, line: 85, type: !4255)
!11973 = !DILocation(line: 85, column: 57, scope: !5573)
!11974 = !DILocation(line: 87, column: 2, scope: !5573)
!11975 = !DILocation(line: 87, column: 5, scope: !5573)
!11976 = !DILocation(line: 87, column: 10, scope: !5573)
!11977 = !DILocation(line: 88, column: 2, scope: !5573)
!11978 = !DILocation(line: 88, column: 2, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !5573, file: !2183, line: 88, column: 2)
!11980 = !DILocation(line: 89, column: 1, scope: !5573)
!11981 = distinct !DISubprogram(name: "dev_to_shost", scope: !154, file: !154, line: 717, type: !11982, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!11982 = !DISubroutineType(types: !11983)
!11983 = !{!242, !2022}
!11984 = !DILocalVariable(name: "dev", arg: 1, scope: !11981, file: !154, line: 717, type: !2022)
!11985 = !DILocation(line: 717, column: 61, scope: !11981)
!11986 = !DILocation(line: 719, column: 2, scope: !11981)
!11987 = !DILocation(line: 719, column: 30, scope: !11981)
!11988 = !DILocation(line: 719, column: 10, scope: !11981)
!11989 = !DILocation(line: 719, column: 9, scope: !11981)
!11990 = !DILocation(line: 720, column: 8, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11992, file: !154, line: 720, column: 7)
!11992 = distinct !DILexicalBlock(scope: !11981, file: !154, line: 719, column: 36)
!11993 = !DILocation(line: 720, column: 13, scope: !11991)
!11994 = !DILocation(line: 720, column: 7, scope: !11992)
!11995 = !DILocation(line: 721, column: 4, scope: !11991)
!11996 = !DILocation(line: 722, column: 9, scope: !11992)
!11997 = !DILocation(line: 722, column: 14, scope: !11992)
!11998 = !DILocation(line: 722, column: 7, scope: !11992)
!11999 = distinct !{!11999, !11986, !12000}
!12000 = !DILocation(line: 723, column: 2, scope: !11981)
!12001 = !DILocalVariable(name: "__mptr", scope: !12002, file: !154, line: 724, type: !202)
!12002 = distinct !DILexicalBlock(scope: !11981, file: !154, line: 724, column: 9)
!12003 = !DILocation(line: 724, column: 9, scope: !12002)
!12004 = !DILocation(line: 724, column: 9, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12002, file: !154, line: 724, column: 9)
!12006 = !DILocation(line: 724, column: 2, scope: !11981)
!12007 = !DILocation(line: 725, column: 1, scope: !11981)
!12008 = distinct !DISubprogram(name: "esp_set_period", scope: !3, file: !3, line: 2721, type: !5595, scopeLine: 2722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!12009 = !DILocalVariable(name: "target", arg: 1, scope: !12008, file: !3, line: 2721, type: !4872)
!12010 = !DILocation(line: 2721, column: 48, scope: !12008)
!12011 = !DILocalVariable(name: "period", arg: 2, scope: !12008, file: !3, line: 2721, type: !232)
!12012 = !DILocation(line: 2721, column: 60, scope: !12008)
!12013 = !DILocalVariable(name: "host", scope: !12008, file: !3, line: 2723, type: !242)
!12014 = !DILocation(line: 2723, column: 20, scope: !12008)
!12015 = !DILocation(line: 2723, column: 40, scope: !12008)
!12016 = !DILocation(line: 2723, column: 48, scope: !12008)
!12017 = !DILocation(line: 2723, column: 52, scope: !12008)
!12018 = !DILocation(line: 2723, column: 27, scope: !12008)
!12019 = !DILocalVariable(name: "esp", scope: !12008, file: !3, line: 2724, type: !5289)
!12020 = !DILocation(line: 2724, column: 14, scope: !12008)
!12021 = !DILocation(line: 2724, column: 31, scope: !12008)
!12022 = !DILocation(line: 2724, column: 20, scope: !12008)
!12023 = !DILocalVariable(name: "tp", scope: !12008, file: !3, line: 2725, type: !6918)
!12024 = !DILocation(line: 2725, column: 26, scope: !12008)
!12025 = !DILocation(line: 2725, column: 32, scope: !12008)
!12026 = !DILocation(line: 2725, column: 37, scope: !12008)
!12027 = !DILocation(line: 2725, column: 44, scope: !12008)
!12028 = !DILocation(line: 2725, column: 52, scope: !12008)
!12029 = !DILocation(line: 2727, column: 25, scope: !12008)
!12030 = !DILocation(line: 2727, column: 2, scope: !12008)
!12031 = !DILocation(line: 2727, column: 6, scope: !12008)
!12032 = !DILocation(line: 2727, column: 23, scope: !12008)
!12033 = !DILocation(line: 2728, column: 2, scope: !12008)
!12034 = !DILocation(line: 2728, column: 6, scope: !12008)
!12035 = !DILocation(line: 2728, column: 12, scope: !12008)
!12036 = !DILocation(line: 2729, column: 1, scope: !12008)
!12037 = distinct !DISubprogram(name: "esp_set_offset", scope: !3, file: !3, line: 2708, type: !5595, scopeLine: 2709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!12038 = !DILocalVariable(name: "target", arg: 1, scope: !12037, file: !3, line: 2708, type: !4872)
!12039 = !DILocation(line: 2708, column: 48, scope: !12037)
!12040 = !DILocalVariable(name: "offset", arg: 2, scope: !12037, file: !3, line: 2708, type: !232)
!12041 = !DILocation(line: 2708, column: 60, scope: !12037)
!12042 = !DILocalVariable(name: "host", scope: !12037, file: !3, line: 2710, type: !242)
!12043 = !DILocation(line: 2710, column: 20, scope: !12037)
!12044 = !DILocation(line: 2710, column: 40, scope: !12037)
!12045 = !DILocation(line: 2710, column: 48, scope: !12037)
!12046 = !DILocation(line: 2710, column: 52, scope: !12037)
!12047 = !DILocation(line: 2710, column: 27, scope: !12037)
!12048 = !DILocalVariable(name: "esp", scope: !12037, file: !3, line: 2711, type: !5289)
!12049 = !DILocation(line: 2711, column: 14, scope: !12037)
!12050 = !DILocation(line: 2711, column: 31, scope: !12037)
!12051 = !DILocation(line: 2711, column: 20, scope: !12037)
!12052 = !DILocalVariable(name: "tp", scope: !12037, file: !3, line: 2712, type: !6918)
!12053 = !DILocation(line: 2712, column: 26, scope: !12037)
!12054 = !DILocation(line: 2712, column: 32, scope: !12037)
!12055 = !DILocation(line: 2712, column: 37, scope: !12037)
!12056 = !DILocation(line: 2712, column: 44, scope: !12037)
!12057 = !DILocation(line: 2712, column: 52, scope: !12037)
!12058 = !DILocation(line: 2714, column: 6, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 2714, column: 6)
!12060 = !DILocation(line: 2714, column: 11, scope: !12059)
!12061 = !DILocation(line: 2714, column: 17, scope: !12059)
!12062 = !DILocation(line: 2714, column: 6, scope: !12037)
!12063 = !DILocation(line: 2715, column: 3, scope: !12059)
!12064 = !DILocation(line: 2715, column: 7, scope: !12059)
!12065 = !DILocation(line: 2715, column: 24, scope: !12059)
!12066 = !DILocation(line: 2717, column: 26, scope: !12059)
!12067 = !DILocation(line: 2717, column: 3, scope: !12059)
!12068 = !DILocation(line: 2717, column: 7, scope: !12059)
!12069 = !DILocation(line: 2717, column: 24, scope: !12059)
!12070 = !DILocation(line: 2718, column: 2, scope: !12037)
!12071 = !DILocation(line: 2718, column: 6, scope: !12037)
!12072 = !DILocation(line: 2718, column: 12, scope: !12037)
!12073 = !DILocation(line: 2719, column: 1, scope: !12037)
!12074 = distinct !DISubprogram(name: "esp_set_width", scope: !3, file: !3, line: 2731, type: !5595, scopeLine: 2732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!12075 = !DILocalVariable(name: "target", arg: 1, scope: !12074, file: !3, line: 2731, type: !4872)
!12076 = !DILocation(line: 2731, column: 47, scope: !12074)
!12077 = !DILocalVariable(name: "width", arg: 2, scope: !12074, file: !3, line: 2731, type: !232)
!12078 = !DILocation(line: 2731, column: 59, scope: !12074)
!12079 = !DILocalVariable(name: "host", scope: !12074, file: !3, line: 2733, type: !242)
!12080 = !DILocation(line: 2733, column: 20, scope: !12074)
!12081 = !DILocation(line: 2733, column: 40, scope: !12074)
!12082 = !DILocation(line: 2733, column: 48, scope: !12074)
!12083 = !DILocation(line: 2733, column: 52, scope: !12074)
!12084 = !DILocation(line: 2733, column: 27, scope: !12074)
!12085 = !DILocalVariable(name: "esp", scope: !12074, file: !3, line: 2734, type: !5289)
!12086 = !DILocation(line: 2734, column: 14, scope: !12074)
!12087 = !DILocation(line: 2734, column: 31, scope: !12074)
!12088 = !DILocation(line: 2734, column: 20, scope: !12074)
!12089 = !DILocalVariable(name: "tp", scope: !12074, file: !3, line: 2735, type: !6918)
!12090 = !DILocation(line: 2735, column: 26, scope: !12074)
!12091 = !DILocation(line: 2735, column: 32, scope: !12074)
!12092 = !DILocation(line: 2735, column: 37, scope: !12074)
!12093 = !DILocation(line: 2735, column: 44, scope: !12074)
!12094 = !DILocation(line: 2735, column: 52, scope: !12074)
!12095 = !DILocation(line: 2737, column: 25, scope: !12074)
!12096 = !DILocation(line: 2737, column: 24, scope: !12074)
!12097 = !DILocation(line: 2737, column: 2, scope: !12074)
!12098 = !DILocation(line: 2737, column: 6, scope: !12074)
!12099 = !DILocation(line: 2737, column: 22, scope: !12074)
!12100 = !DILocation(line: 2738, column: 2, scope: !12074)
!12101 = !DILocation(line: 2738, column: 6, scope: !12074)
!12102 = !DILocation(line: 2738, column: 12, scope: !12074)
!12103 = !DILocation(line: 2739, column: 1, scope: !12074)
!12104 = distinct !DISubprogram(name: "esp_get_signalling", scope: !3, file: !3, line: 2695, type: !4905, scopeLine: 2696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !263)
!12105 = !DILocalVariable(name: "host", arg: 1, scope: !12104, file: !3, line: 2695, type: !242)
!12106 = !DILocation(line: 2695, column: 50, scope: !12104)
!12107 = !DILocalVariable(name: "esp", scope: !12104, file: !3, line: 2697, type: !5289)
!12108 = !DILocation(line: 2697, column: 14, scope: !12104)
!12109 = !DILocation(line: 2697, column: 31, scope: !12104)
!12110 = !DILocation(line: 2697, column: 20, scope: !12104)
!12111 = !DILocalVariable(name: "type", scope: !12104, file: !3, line: 2698, type: !193)
!12112 = !DILocation(line: 2698, column: 23, scope: !12104)
!12113 = !DILocation(line: 2700, column: 6, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 2700, column: 6)
!12115 = !DILocation(line: 2700, column: 11, scope: !12114)
!12116 = !DILocation(line: 2700, column: 17, scope: !12114)
!12117 = !DILocation(line: 2700, column: 6, scope: !12104)
!12118 = !DILocation(line: 2701, column: 8, scope: !12114)
!12119 = !DILocation(line: 2701, column: 3, scope: !12114)
!12120 = !DILocation(line: 2703, column: 8, scope: !12114)
!12121 = !DILocation(line: 2705, column: 25, scope: !12104)
!12122 = !DILocation(line: 2705, column: 2, scope: !12104)
!12123 = !DILocation(line: 2705, column: 23, scope: !12104)
!12124 = !DILocation(line: 2706, column: 1, scope: !12104)
