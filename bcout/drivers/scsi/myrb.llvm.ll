; ModuleID = '../bcout/drivers/scsi/myrb.llvm.bc'
source_filename = "drivers/scsi/myrb.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_myrb_init_module6:\09\09\09"
module asm ".long\09myrb_init_module - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.myrb_privdata = type { i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)*, i32 (i32, i8*)*, i32 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.66, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.31, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.31 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.68, %union.anon.69, %union.anon.70, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.73, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.67, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.67 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.cpumask = type { [1 x i64] }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.68 = type { %struct.hlist_node }
%union.anon.69 = type { %struct.rb_node }
%union.anon.70 = type { %struct.anon.72 }
%struct.anon.72 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.73 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.74, void (i8*)*, i8* }
%union.anon.74 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.75, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.75 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.pci_vpd = type opaque
%union.anon.66 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.myrb_hba = type { i32, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.pci_dev*, %struct.Scsi_Host*, %struct.workqueue_struct*, [20 x i8], %struct.delayed_work, i64, i64, %struct.dma_pool*, %struct.dma_pool*, %struct.spinlock, void (%struct.myrb_hba*, %struct.myrb_cmdblk*)*, void (%union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*)*, void (i8*)*, void (i8*)*, void (i8*)*, i32, [20 x i8], [12 x i8], i32, i64, i64, i8*, i8*, i64, i64, %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*, i64, i64, %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox*, %struct.myrb_cmdblk, %struct.myrb_cmdblk, %struct.mutex, %struct.myrb_enquiry*, i64, %struct.myrb_error_entry*, i64, i16, %struct.myrb_ldev_info*, i64, %struct.myrb_bgi_status, %struct.mutex }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.scsi_transport_template = type opaque
%struct.dma_pool = type opaque
%union.myrb_cmd_mbox = type { [4 x i32] }
%struct.myrb_stat_mbox = type { i8, i8, i16 }
%struct.myrb_cmdblk = type { %union.myrb_cmd_mbox, i16, %struct.completion*, %struct.myrb_dcdb*, i64, %struct.myrb_sge*, i64 }
%struct.myrb_dcdb = type { i16, i16, i32, i8, i8, [12 x i8], [64 x i8], i8, i8 }
%struct.myrb_sge = type { i32, i32 }
%struct.myrb_enquiry = type { i8, [3 x i8], [32 x i32], i16, %struct.anon.88, i8, i8, i8, i8, i8, i8, i8, i16, i8, [3 x i8], i8, i8, i8, %struct.anon.89, [21 x %struct.anon.90], [62 x i8] }
%struct.anon.88 = type { i8 }
%struct.anon.89 = type { i8 }
%struct.anon.90 = type { i8, i8 }
%struct.myrb_error_entry = type { i8, i8, i8, i8 }
%struct.myrb_ldev_info = type { i32, i8, [3 x i8] }
%struct.myrb_bgi_status = type { i32, i32, [12 x i8], i32, i8, i8, [6 x i8] }
%struct.raid_template = type { %struct.transport_container }
%struct.transport_container = type { %struct.attribute_container, %struct.attribute_group* }
%struct.attribute_container = type { %struct.list_head, %struct.klist, %struct.class*, %struct.attribute_group*, %struct.device_attribute**, i32 (%struct.attribute_container*, %struct.device*)*, i64 }
%struct.klist = type { %struct.spinlock, %struct.list_head, void (%struct.klist_node*)*, void (%struct.klist_node*)* }
%struct.klist_node = type { i8*, %struct.list_head, %struct.kref }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.myrb_devstate_name_entry = type { i8, i8* }
%struct.myrb_raidlevel_name_entry = type { i8, i8* }
%struct.raid_function_template = type { i8*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.anon.77 = type { i8, i8, [14 x i8] }
%struct.anon.87 = type { i8, i8, i8, i8, i32, i32, [4 x i8] }
%struct.anon.85 = type { i8, i8, %struct.anon.86, i32, i32, i8, [3 x i8] }
%struct.anon.86 = type { i16 }
%struct.myrb_enquiry2 = type { %struct.anon.91, %struct.anon.92, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.anon.93, i16, i16, i16, [12 x i8], i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, [8 x i8], i8, [11 x i8], i16, i16, i16, i16, i16, %struct.anon.94, [5 x i8], i16, i8, i8, %struct.anon.95, [8 x i8] }
%struct.anon.91 = type { i8, i8, i8, i8 }
%struct.anon.92 = type { i8, i8, i8, i8 }
%struct.anon.93 = type { i8, i8 }
%struct.anon.94 = type { i8 }
%struct.anon.95 = type { i32 }
%struct.myrb_config2 = type { i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x %struct.anon.96], i8, i8, i8, i8, i8, [29 x i8], i8, [9 x i8], i16 }
%struct.anon.96 = type { i8 }
%struct.anon.78 = type { i8, i8, [6 x i8], i32, [4 x i8] }
%struct.myrb_pdev_state = type <{ i16, i8, i8, i32, i8, i32, i16 }>
%struct.raid_data = type { %struct.list_head, i32, i32, i32, i32 }
%struct.anon.81 = type { i8, i8, i8, i8, i8, [3 x i8], i32, [4 x i8] }
%struct.myrb_rbld_progress = type { i32, i32, i32 }
%struct.anon.83 = type { i8, i8, [2 x i8], i8, [3 x i8], i32, [4 x i8] }
%struct.anon.80 = type { i8, i8, [5 x i8], i8, [8 x i8] }
%struct.anon.79 = type { i8, i8, i8, [5 x i8], i32, [4 x i8] }
%struct.myrb_log_entry = type { i8, i8, i16, i16, [26 x i8] }
%struct.scsi_sense_hdr = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.82 = type { i8, i8, i8, i8, i16, [2 x i8], i32, [4 x i8] }

@DAC960_LA_privdata = dso_local global %struct.myrb_privdata { i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)* @DAC960_LA_hw_init, i32 (i32, i8*)* @DAC960_LA_intr_handler, i32 128 }, align 8, !dbg !0
@DAC960_PG_privdata = dso_local global %struct.myrb_privdata { i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)* @DAC960_PG_hw_init, i32 (i32, i8*)* @DAC960_PG_intr_handler, i32 8192 }, align 8, !dbg !6322
@DAC960_PD_privdata = dso_local global %struct.myrb_privdata { i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)* @DAC960_PD_hw_init, i32 (i32, i8*)* @DAC960_PD_intr_handler, i32 128 }, align 8, !dbg !6324
@DAC960_P_privdata = dso_local global %struct.myrb_privdata { i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)* @DAC960_P_hw_init, i32 (i32, i8*)* @DAC960_P_intr_handler, i32 128 }, align 8, !dbg !6326
@myrb_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([5 x %struct.pci_device_id], [5 x %struct.pci_device_id]* @myrb_id_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @myrb_probe, void (%struct.pci_dev*)* @myrb_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !6392
@myrb_raid_template = internal global %struct.raid_template* null, align 8, !dbg !6351
@__UNIQUE_ID___addressable_myrb_init_module318 = internal global i8* bitcast (i32 ()* @myrb_init_module to i8*), section ".discard.addressable", align 8, !dbg !6328
@__exitcall_myrb_cleanup_module = internal global void ()* @myrb_cleanup_module, section ".exitcall.exit", align 8, !dbg !6330
@__UNIQUE_ID_description319 = internal constant [78 x i8] c"myrb.description=Mylex DAC960/AcceleRAID/eXtremeRAID driver (Block interface)\00", section ".modinfo", align 1, !dbg !6335
@__UNIQUE_ID_author320 = internal constant [44 x i8] c"myrb.author=Hannes Reinecke <hare@suse.com>\00", section ".modinfo", align 1, !dbg !6340
@__UNIQUE_ID_file321 = internal constant [28 x i8] c"myrb.file=drivers/scsi/myrb\00", section ".modinfo", align 1, !dbg !6343
@__UNIQUE_ID_license322 = internal constant [17 x i8] c"myrb.license=GPL\00", section ".modinfo", align 1, !dbg !6348
@.str = private unnamed_addr constant [47 x i8] c"Timeout waiting for Controller Initialisation\0A\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"Unable to Enable Memory Mailbox Interface\0A\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"Physical Device %d:%d Not Responding\0A\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"Spinning Up Drives\0A\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"Configuration Checksum Error\0A\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"Mirror Race Recovery Failed\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"Mirror Race Recovery In Progress\0A\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"Physical Device %d:%d COD Mismatch\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"Logical Drive Installation Aborted\0A\00", align 1
@.str.9 = private unnamed_addr constant [41 x i8] c"Mirror Race On A Critical Logical Drive\0A\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"New Controller Configuration Found\0A\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"Fatal Memory Parity Error\0A\00", align 1
@.str.12 = private unnamed_addr constant [35 x i8] c"Unknown Initialization Error %02X\0A\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"DMA mask out of range\0A\00", align 1
@.str.14 = private unnamed_addr constant [39 x i8] c"Failed to enable mailbox, statux %02X\0A\00", align 1
@.str.15 = private unnamed_addr constant [35 x i8] c"Timeout waiting for empty mailbox\0A\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"Timeout waiting for mailbox status\0A\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"Unhandled command completion %d\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.18 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"Irrecoverable Data Error\0A\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"Unexpected Error Status %04X\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.21 = private unnamed_addr constant [5 x i8] c"myrb\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"IO port 0x%lx busy\0A\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"Unable to allocate DMA mapped memory\0A\00", align 1
@myrb_id_table = internal constant [5 x %struct.pci_device_id] [%struct.pci_device_id { i32 4113, i32 4197, i32 4201, i32 32, i32 0, i32 0, i64 ptrtoint (%struct.myrb_privdata* @DAC960_LA_privdata to i64) }, %struct.pci_device_id { i32 4201, i32 16, i32 -1, i32 -1, i32 0, i32 0, i64 ptrtoint (%struct.myrb_privdata* @DAC960_PG_privdata to i64) }, %struct.pci_device_id { i32 4201, i32 2, i32 -1, i32 -1, i32 0, i32 0, i64 ptrtoint (%struct.myrb_privdata* @DAC960_PD_privdata to i64) }, %struct.pci_device_id { i32 4201, i32 1, i32 -1, i32 -1, i32 0, i32 0, i64 ptrtoint (%struct.myrb_privdata* @DAC960_P_privdata to i64) }, %struct.pci_device_id zeroinitializer], align 16, !dbg !6394
@.str.24 = private unnamed_addr constant [30 x i8] c"scsi_add_host failed with %d\0A\00", align 1
@myrb_template = internal global %struct.scsi_host_template { %struct.module* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i8* (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32, i8*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* @myrb_queuecommand, void (%struct.Scsi_Host*, i16)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* @myrb_host_reset, i32 (%struct.scsi_device*)* @myrb_slave_alloc, i32 (%struct.scsi_device*)* @myrb_slave_configure, void (%struct.scsi_device*)* @myrb_slave_destroy, i32 (%struct.scsi_target*)* null, void (%struct.scsi_target*)* null, i32 (%struct.Scsi_Host*, i64)* null, void (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32)* null, i32 (%struct.Scsi_Host*)* null, i1 (%struct.request*)* null, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)* @myrb_biosparam, void (%struct.scsi_device*)* null, i32 (%struct.seq_file*, %struct.Scsi_Host*)* null, i32 (%struct.Scsi_Host*, i8*, i32)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, i32)* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), %struct.proc_dir_entry* null, i32 0, i32 -1, i16 0, i16 0, i32 0, i32 0, i64 0, i64 0, i16 0, i8 0, i32 0, i8 0, i32 0, %struct.device_attribute** getelementptr inbounds ([5 x %struct.device_attribute*], [5 x %struct.device_attribute*]* @myrb_shost_attrs, i32 0, i32 0), %struct.device_attribute** getelementptr inbounds ([5 x %struct.device_attribute*], [5 x %struct.device_attribute*]* @myrb_sdev_attrs, i32 0, i32 0), %struct.attribute_group** null, i64 0, i32 64, %struct.scsi_host_cmd_pool* null, i32 0 }, align 8, !dbg !6404
@.str.25 = private unnamed_addr constant [31 x i8] c"Unable to allocate Controller\0A\00", align 1
@myrb_detect.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6397
@.str.26 = private unnamed_addr constant [16 x i8] c"&cb->dcmd_mutex\00", align 1
@myrb_detect.__key.27 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6402
@.str.28 = private unnamed_addr constant [15 x i8] c"&cb->dma_mutex\00", align 1
@.str.29 = private unnamed_addr constant [42 x i8] c"Unable to map Controller Register Window\0A\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"Unable to acquire IRQ Channel %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"Failed to initialize Controller\0A\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"DAC960\00", align 1
@myrb_shost_attrs = internal global [5 x %struct.device_attribute*] [%struct.device_attribute* @dev_attr_ctlr_num, %struct.device_attribute* @dev_attr_model, %struct.device_attribute* @dev_attr_firmware, %struct.device_attribute* @dev_attr_flush_cache, %struct.device_attribute* null], align 16, !dbg !6419
@myrb_sdev_attrs = internal global [5 x %struct.device_attribute*] [%struct.device_attribute* @dev_attr_rebuild, %struct.device_attribute* @dev_attr_consistency_check, %struct.device_attribute* @dev_attr_raid_state, %struct.device_attribute* @dev_attr_raid_level, %struct.device_attribute* null], align 16, !dbg !6430
@__const.myrb_inquiry.inq = private unnamed_addr constant [36 x i8] c"\00\00\03\02 \00\01\00MYLEX                       ", align 16
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.33 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.34 = private unnamed_addr constant [27 x i8] c"include/linux/raid_class.h\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !6406
@.str.35 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.36 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.37 = private unnamed_addr constant [20 x i8] c"drivers/scsi/myrb.c\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@.str.38 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.39 = private unnamed_addr constant [21 x i8] c"Logical drive is %s\0A\00", align 1
@myrb_devstate_name_list = internal global [6 x %struct.myrb_devstate_name_entry] [%struct.myrb_devstate_name_entry { i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0) }, %struct.myrb_devstate_name_entry { i8 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0) }, %struct.myrb_devstate_name_entry { i8 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0) }, %struct.myrb_devstate_name_entry { i8 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i32 0, i32 0) }, %struct.myrb_devstate_name_entry { i8 16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0) }, %struct.myrb_devstate_name_entry { i8 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i32 0, i32 0) }], align 16, !dbg !6412
@.str.40 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"Dead\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"WriteOnly\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"Online\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"Critical\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"Standby\00", align 1
@.str.46 = private unnamed_addr constant [8 x i8] c"Offline\00", align 1
@dev_attr_ctlr_num = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @ctlr_num_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6422
@dev_attr_model = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @model_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6424
@dev_attr_firmware = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @firmware_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6426
@dev_attr_flush_cache = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i32 0, i32 0), i16 128 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @flush_cache_store }, align 8, !dbg !6428
@.str.47 = private unnamed_addr constant [9 x i8] c"ctlr_num\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"%u\0A\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"model\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"firmware\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"flush_cache\00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"Cache Flush Completed\0A\00", align 1
@.str.54 = private unnamed_addr constant [31 x i8] c"Cache Flush Failed, status %x\0A\00", align 1
@dev_attr_rebuild = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @rebuild_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @rebuild_store }, align 8, !dbg !6432
@dev_attr_consistency_check = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.72, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @consistency_check_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @consistency_check_store }, align 8, !dbg !6434
@dev_attr_raid_state = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @raid_state_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @raid_state_store }, align 8, !dbg !6436
@dev_attr_raid_level = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.98, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @raid_level_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6438
@.str.55 = private unnamed_addr constant [8 x i8] c"rebuild\00", align 1
@.str.56 = private unnamed_addr constant [34 x i8] c"physical device - not rebuilding\0A\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"not rebuilding\0A\00", align 1
@.str.58 = private unnamed_addr constant [27 x i8] c"rebuilding block %u of %u\0A\00", align 1
@.str.59 = private unnamed_addr constant [44 x i8] c"Rebuild Not Initiated; already in progress\0A\00", align 1
@.str.60 = private unnamed_addr constant [40 x i8] c"Rebuild Not Cancelled; not in progress\0A\00", align 1
@.str.61 = private unnamed_addr constant [48 x i8] c"Cancellation of Rebuild Failed - Out of Memory\0A\00", align 1
@.str.62 = private unnamed_addr constant [12 x i8] c"Rebuild %s\0A\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"Initiated\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"Cancelled\00", align 1
@.str.65 = private unnamed_addr constant [36 x i8] c"Rebuild Not Cancelled, status 0x%x\0A\00", align 1
@.str.66 = private unnamed_addr constant [48 x i8] c"Attempt to Rebuild Online or Unresponsive Drive\00", align 1
@.str.67 = private unnamed_addr constant [31 x i8] c"New Disk Failed During Rebuild\00", align 1
@.str.68 = private unnamed_addr constant [23 x i8] c"Invalid Device Address\00", align 1
@.str.69 = private unnamed_addr constant [20 x i8] c"Already in Progress\00", align 1
@.str.70 = private unnamed_addr constant [21 x i8] c"Rebuild Failed - %s\0A\00", align 1
@.str.71 = private unnamed_addr constant [29 x i8] c"Rebuild Failed, status 0x%x\0A\00", align 1
@.str.72 = private unnamed_addr constant [18 x i8] c"consistency_check\00", align 1
@.str.73 = private unnamed_addr constant [54 x i8] c"Check Consistency Not Initiated; already in progress\0A\00", align 1
@.str.74 = private unnamed_addr constant [50 x i8] c"Check Consistency Not Cancelled; not in progress\0A\00", align 1
@.str.75 = private unnamed_addr constant [58 x i8] c"Cancellation of Check Consistency Failed - Out of Memory\0A\00", align 1
@.str.76 = private unnamed_addr constant [22 x i8] c"Check Consistency %s\0A\00", align 1
@.str.77 = private unnamed_addr constant [46 x i8] c"Check Consistency Not Cancelled, status 0x%x\0A\00", align 1
@.str.78 = private unnamed_addr constant [34 x i8] c"Dependent Physical Device is DEAD\00", align 1
@.str.79 = private unnamed_addr constant [38 x i8] c"Invalid or Nonredundant Logical Drive\00", align 1
@.str.80 = private unnamed_addr constant [31 x i8] c"Check Consistency Failed - %s\0A\00", align 1
@.str.81 = private unnamed_addr constant [39 x i8] c"Check Consistency Failed, status 0x%x\0A\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"raid_state\00", align 1
@.str.83 = private unnamed_addr constant [9 x i8] c"Unknown\0A\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c"Invalid (%02X)\0A\00", align 1
@.str.85 = private unnamed_addr constant [39 x i8] c"Failed to get device state, status %x\0A\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"Removed\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"kill\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"offline\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"online\00", align 1
@.str.90 = private unnamed_addr constant [8 x i8] c"standby\00", align 1
@.str.91 = private unnamed_addr constant [41 x i8] c"Failed - no physical device information\0A\00", align 1
@.str.92 = private unnamed_addr constant [29 x i8] c"Failed - device not present\0A\00", align 1
@.str.93 = private unnamed_addr constant [33 x i8] c"Failed - Unable to Start Device\0A\00", align 1
@.str.94 = private unnamed_addr constant [31 x i8] c"Failed - No Device at Address\0A\00", align 1
@.str.95 = private unnamed_addr constant [48 x i8] c"Failed - Invalid Channel or Target or Modifier\0A\00", align 1
@.str.96 = private unnamed_addr constant [23 x i8] c"Failed - Channel Busy\0A\00", align 1
@.str.97 = private unnamed_addr constant [33 x i8] c"Failed - Unexpected Status %04X\0A\00", align 1
@.str.98 = private unnamed_addr constant [11 x i8] c"raid_level\00", align 1
@.str.99 = private unnamed_addr constant [16 x i8] c"Physical Drive\0A\00", align 1
@myrb_raidlevel_name_list = internal global [6 x %struct.myrb_raidlevel_name_entry] [%struct.myrb_raidlevel_name_entry { i8 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i32 0, i32 0) }, %struct.myrb_raidlevel_name_entry { i8 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i32 0, i32 0) }, %struct.myrb_raidlevel_name_entry { i8 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i32 0, i32 0) }, %struct.myrb_raidlevel_name_entry { i8 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i32 0, i32 0) }, %struct.myrb_raidlevel_name_entry { i8 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i32 0, i32 0) }, %struct.myrb_raidlevel_name_entry { i8 7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i32 0, i32 0) }], align 16, !dbg !6440
@.str.100 = private unnamed_addr constant [6 x i8] c"RAID0\00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"RAID1\00", align 1
@.str.102 = private unnamed_addr constant [6 x i8] c"RAID3\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"RAID5\00", align 1
@.str.104 = private unnamed_addr constant [6 x i8] c"RAID6\00", align 1
@.str.105 = private unnamed_addr constant [5 x i8] c"JBOD\00", align 1
@.str.106 = private unnamed_addr constant [39 x i8] c"Failed to allocate V1 enquiry2 memory\0A\00", align 1
@.str.107 = private unnamed_addr constant [38 x i8] c"Failed to allocate V1 config2 memory\0A\00", align 1
@.str.108 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.109 = private unnamed_addr constant [28 x i8] c"Failed it issue V1 Enquiry\0A\00", align 1
@.str.110 = private unnamed_addr constant [29 x i8] c"Failed to issue V1 Enquiry2\0A\00", align 1
@.str.111 = private unnamed_addr constant [29 x i8] c"Failed to issue ReadConfig2\0A\00", align 1
@.str.112 = private unnamed_addr constant [41 x i8] c"Failed to get logical drive information\0A\00", align 1
@.str.113 = private unnamed_addr constant [9 x i8] c"DAC960PU\00", align 1
@.str.114 = private unnamed_addr constant [9 x i8] c"DAC960PD\00", align 1
@.str.115 = private unnamed_addr constant [9 x i8] c"DAC960PL\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"DAC960PG\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"DAC960PJ\00", align 1
@.str.118 = private unnamed_addr constant [9 x i8] c"DAC960PR\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c"DAC960PT\00", align 1
@.str.120 = private unnamed_addr constant [11 x i8] c"DAC960PTL0\00", align 1
@.str.121 = private unnamed_addr constant [10 x i8] c"DAC960PRL\00", align 1
@.str.122 = private unnamed_addr constant [11 x i8] c"DAC960PTL1\00", align 1
@.str.123 = private unnamed_addr constant [17 x i8] c"eXtremeRAID 1100\00", align 1
@.str.124 = private unnamed_addr constant [18 x i8] c"Unknown Model %X\0A\00", align 1
@.str.125 = private unnamed_addr constant [16 x i8] c"%u.%02u-%c-%02u\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"2.73\00", align 1
@.str.127 = private unnamed_addr constant [35 x i8] c"Firmware Version '%s' unsupported\0A\00", align 1
@.str.128 = private unnamed_addr constant [5 x i8] c"4.08\00", align 1
@.str.129 = private unnamed_addr constant [5 x i8] c"5.08\00", align 1
@.str.130 = private unnamed_addr constant [36 x i8] c"Configuring %s PCI RAID Controller\0A\00", align 1
@.str.131 = private unnamed_addr constant [43 x i8] c"  Firmware Version: %s, Memory Size: %dMB\0A\00", align 1
@.str.132 = private unnamed_addr constant [57 x i8] c"  I/O Address: n/a, PCI Address: 0x%lX, IRQ Channel: %d\0A\00", align 1
@.str.133 = private unnamed_addr constant [59 x i8] c"  I/O Address: 0x%lX, PCI Address: 0x%lX, IRQ Channel: %d\0A\00", align 1
@.str.134 = private unnamed_addr constant [62 x i8] c"  Controller Queue Depth: %d, Maximum Blocks per Command: %d\0A\00", align 1
@.str.135 = private unnamed_addr constant [67 x i8] c"  Driver Queue Depth: %d, Scatter/Gather Limit: %d of %d Segments\0A\00", align 1
@.str.136 = private unnamed_addr constant [65 x i8] c"  Stripe Size: %dKB, Segment Size: %dKB, BIOS Geometry: %d/%d%s\0A\00", align 1
@.str.137 = private unnamed_addr constant [38 x i8] c"  SAF-TE Enclosure Management Enabled\00", align 1
@.str.138 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.139 = private unnamed_addr constant [45 x i8] c"  Physical: %d/%d channels %d/%d/%d devices\0A\00", align 1
@.str.140 = private unnamed_addr constant [38 x i8] c"  Logical: 1/1 channels, %d/%d disks\0A\00", align 1
@.str.141 = private unnamed_addr constant [3 x i8] c"\012\00", align 1
@.str.142 = private unnamed_addr constant [29 x i8] c"Logical Drive %d Now Exists\0A\00", align 1
@.str.143 = private unnamed_addr constant [35 x i8] c"Logical Drive %d No Longer Exists\0A\00", align 1
@.str.144 = private unnamed_addr constant [37 x i8] c"Deferred Write Error Flag is now %s\0A\00", align 1
@.str.145 = private unnamed_addr constant [5 x i8] c"TRUE\00", align 1
@.str.146 = private unnamed_addr constant [6 x i8] c"FALSE\00", align 1
@.str.147 = private unnamed_addr constant [35 x i8] c"Event log %d/%d (%d/%d) available\0A\00", align 1
@.str.148 = private unnamed_addr constant [40 x i8] c"Logical drive count changed (%d/%d/%d)\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.149 = private unnamed_addr constant [42 x i8] c"Consistency Check Completed Successfully\0A\00", align 1
@.str.150 = private unnamed_addr constant [40 x i8] c"Consistency Check Completed with Error\0A\00", align 1
@.str.151 = private unnamed_addr constant [51 x i8] c"Consistency Check Failed - Physical Device Failed\0A\00", align 1
@.str.152 = private unnamed_addr constant [49 x i8] c"Consistency Check Failed - Logical Drive Failed\0A\00", align 1
@.str.153 = private unnamed_addr constant [41 x i8] c"Consistency Check Failed - Other Causes\0A\00", align 1
@.str.154 = private unnamed_addr constant [43 x i8] c"Consistency Check Successfully Terminated\0A\00", align 1
@.str.155 = private unnamed_addr constant [37 x i8] c"Adding Logical Drive %d in state %s\0A\00", align 1
@.str.156 = private unnamed_addr constant [28 x i8] c"Logical Drive %d is now %s\0A\00", align 1
@.str.157 = private unnamed_addr constant [31 x i8] c"Logical Drive is now WRITE %s\0A\00", align 1
@.str.158 = private unnamed_addr constant [5 x i8] c"BACK\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"THRU\00", align 1
@.str.160 = private unnamed_addr constant [31 x i8] c"Failed to allocate bgi memory\0A\00", align 1
@.str.161 = private unnamed_addr constant [35 x i8] c"Background Initialization Started\0A\00", align 1
@.str.162 = private unnamed_addr constant [55 x i8] c"Background Initialization in Progress: %d%% completed\0A\00", align 1
@.str.163 = private unnamed_addr constant [37 x i8] c"Background Initialization Suspended\0A\00", align 1
@.str.164 = private unnamed_addr constant [37 x i8] c"Background Initialization Cancelled\0A\00", align 1
@.str.165 = private unnamed_addr constant [50 x i8] c"Background Initialization Completed Successfully\0A\00", align 1
@.str.166 = private unnamed_addr constant [35 x i8] c"Background Initialization Aborted\0A\00", align 1
@.str.167 = private unnamed_addr constant [8 x i8] c"myrb_sg\00", align 1
@.str.168 = private unnamed_addr constant [28 x i8] c"Failed to allocate SG pool\0A\00", align 1
@.str.169 = private unnamed_addr constant [10 x i8] c"myrb_dcdb\00", align 1
@.str.170 = private unnamed_addr constant [30 x i8] c"Failed to allocate DCDB pool\0A\00", align 1
@.str.171 = private unnamed_addr constant [11 x i8] c"myrb_wq_%d\00", align 1
@.str.172 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.173 = private unnamed_addr constant [28 x i8] c"Failed to create workqueue\0A\00", align 1
@.str.174 = private unnamed_addr constant [41 x i8] c"Failed to get event log %d, status %04x\0A\00", align 1
@.str.175 = private unnamed_addr constant [26 x i8] c"Physical drive %d:%d: %s\0A\00", align 1
@myrb_event_msg = internal global [13 x i8*] [i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.189, i32 0, i32 0)], align 16, !dbg !6447
@.str.176 = private unnamed_addr constant [43 x i8] c"Physical drive %d:%d: Sense: %X/%02X/%02X\0A\00", align 1
@.str.177 = private unnamed_addr constant [37 x i8] c"killed because write recovery failed\00", align 1
@.str.178 = private unnamed_addr constant [41 x i8] c"killed because of SCSI bus reset failure\00", align 1
@.str.179 = private unnamed_addr constant [41 x i8] c"killed because of double check condition\00", align 1
@.str.180 = private unnamed_addr constant [30 x i8] c"killed because it was removed\00", align 1
@.str.181 = private unnamed_addr constant [43 x i8] c"killed because of gross error on SCSI chip\00", align 1
@.str.182 = private unnamed_addr constant [46 x i8] c"killed because of bad tag returned from drive\00", align 1
@.str.183 = private unnamed_addr constant [42 x i8] c"killed because of timeout on SCSI command\00", align 1
@.str.184 = private unnamed_addr constant [56 x i8] c"killed because of reset SCSI command issued from system\00", align 1
@.str.185 = private unnamed_addr constant [57 x i8] c"killed because busy or parity error count exceeded limit\00", align 1
@.str.186 = private unnamed_addr constant [51 x i8] c"killed because of 'kill drive' command from system\00", align 1
@.str.187 = private unnamed_addr constant [36 x i8] c"killed because of selection timeout\00", align 1
@.str.188 = private unnamed_addr constant [40 x i8] c"killed due to SCSI phase sequence error\00", align 1
@.str.189 = private unnamed_addr constant [29 x i8] c"killed due to unknown status\00", align 1
@.str.190 = private unnamed_addr constant [54 x i8] c"Errors: Parity = %d, Soft = %d, Hard = %d, Misc = %d\0A\00", align 1
@.str.191 = private unnamed_addr constant [37 x i8] c"Rebuild in Progress, %d%% completed\0A\00", align 1
@.str.192 = private unnamed_addr constant [45 x i8] c"Rebuild Failed due to Logical Drive Failure\0A\00", align 1
@.str.193 = private unnamed_addr constant [50 x i8] c"Rebuild Failed due to Bad Blocks on Other Drives\0A\00", align 1
@.str.194 = private unnamed_addr constant [54 x i8] c"Rebuild Failed due to Failure of Drive Being Rebuilt\0A\00", align 1
@.str.195 = private unnamed_addr constant [32 x i8] c"Rebuild Completed Successfully\0A\00", align 1
@.str.196 = private unnamed_addr constant [33 x i8] c"Rebuild Successfully Terminated\0A\00", align 1
@.str.197 = private unnamed_addr constant [47 x i8] c"Consistency Check in Progress: %d%% completed\0A\00", align 1
@.str.198 = private unnamed_addr constant [3 x i8] c"\015\00", align 1
@.str.199 = private unnamed_addr constant [18 x i8] c"Flushing Cache...\00", align 1
@myrb_raid_functions = internal global %struct.raid_function_template { i8* bitcast (%struct.scsi_host_template* @myrb_template to i8*), i32 (%struct.device*)* @myrb_is_raid, void (%struct.device*)* @myrb_get_resync, void (%struct.device*)* @myrb_get_state }, align 8, !dbg !6452
@llvm.used = appending global [7 x i8*] [i8* bitcast (void ()* @myrb_cleanup_module to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_myrb_init_module318 to i8*), i8* bitcast (void ()** @__exitcall_myrb_cleanup_module to i8*), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__UNIQUE_ID_description319, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_author320, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_file321, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__UNIQUE_ID_license322, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @DAC960_LA_hw_init(%struct.pci_dev* %pdev, %struct.myrb_hba* %cb, i8* %base) #0 !dbg !6466 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %base.addr = alloca i8*, align 8
  %timeout = alloca i32, align 4
  %error = alloca i8, align 1
  %parm0 = alloca i8, align 1
  %parm1 = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6467, metadata !DIExpression()), !dbg !6468
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !6469, metadata !DIExpression()), !dbg !6470
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !6471, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !6473, metadata !DIExpression()), !dbg !6474
  store i32 0, i32* %timeout, align 4, !dbg !6474
  call void @llvm.dbg.declare(metadata i8* %error, metadata !6475, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.declare(metadata i8* %parm0, metadata !6477, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.declare(metadata i8* %parm1, metadata !6479, metadata !DIExpression()), !dbg !6480
  %0 = load i8*, i8** %base.addr, align 8, !dbg !6481
  call void @DAC960_LA_disable_intr(i8* %0) #11, !dbg !6482
  %1 = load i8*, i8** %base.addr, align 8, !dbg !6483
  call void @DAC960_LA_ack_hw_mbox_status(i8* %1) #11, !dbg !6484
  call void @__const_udelay(i64 4295000) #11, !dbg !6485
  br label %while.cond, !dbg !6490

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i8*, i8** %base.addr, align 8, !dbg !6491
  %call = call zeroext i1 @DAC960_LA_init_in_progress(i8* %2) #11, !dbg !6492
  br i1 %call, label %land.rhs, label %land.end, !dbg !6493

land.rhs:                                         ; preds = %while.cond
  %3 = load i32, i32* %timeout, align 4, !dbg !6494
  %cmp = icmp slt i32 %3, 1000000, !dbg !6495
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !6496
  br i1 %4, label %while.body, label %while.end, !dbg !6490

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %base.addr, align 8, !dbg !6497
  %call1 = call zeroext i1 @DAC960_LA_read_error_status(i8* %5, i8* %error, i8* %parm0, i8* %parm1) #11, !dbg !6500
  br i1 %call1, label %land.lhs.true, label %if.end, !dbg !6501

land.lhs.true:                                    ; preds = %while.body
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6502
  %7 = load i8, i8* %error, align 1, !dbg !6503
  %8 = load i8, i8* %parm0, align 1, !dbg !6504
  %9 = load i8, i8* %parm1, align 1, !dbg !6505
  %call2 = call zeroext i1 @myrb_err_status(%struct.myrb_hba* %6, i8 zeroext %7, i8 zeroext %8, i8 zeroext %9) #11, !dbg !6506
  br i1 %call2, label %if.then, label %if.end, !dbg !6507

if.then:                                          ; preds = %land.lhs.true
  store i32 -19, i32* %retval, align 4, !dbg !6508
  br label %return, !dbg !6508

if.end:                                           ; preds = %land.lhs.true, %while.body
  call void @__const_udelay(i64 42950) #11, !dbg !6509
  %10 = load i32, i32* %timeout, align 4, !dbg !6514
  %inc = add i32 %10, 1, !dbg !6514
  store i32 %inc, i32* %timeout, align 4, !dbg !6514
  br label %while.cond, !dbg !6490, !llvm.loop !6515

while.end:                                        ; preds = %land.end
  %11 = load i32, i32* %timeout, align 4, !dbg !6517
  %cmp3 = icmp eq i32 %11, 1000000, !dbg !6519
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6520

if.then4:                                         ; preds = %while.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6521
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !6521
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0)) #12, !dbg !6521
  store i32 -110, i32* %retval, align 4, !dbg !6523
  br label %return, !dbg !6523

if.end5:                                          ; preds = %while.end
  %13 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6524
  %call6 = call zeroext i1 @myrb_enable_mmio(%struct.myrb_hba* %13, i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)* @DAC960_LA_mbox_init) #11, !dbg !6526
  br i1 %call6, label %if.end9, label %if.then7, !dbg !6527

if.then7:                                         ; preds = %if.end5
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6528
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !6528
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev8, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !6528
  %15 = load i8*, i8** %base.addr, align 8, !dbg !6530
  call void @DAC960_LA_reset_ctrl(i8* %15) #11, !dbg !6531
  store i32 -19, i32* %retval, align 4, !dbg !6532
  br label %return, !dbg !6532

if.end9:                                          ; preds = %if.end5
  %16 = load i8*, i8** %base.addr, align 8, !dbg !6533
  call void @DAC960_LA_enable_intr(i8* %16) #11, !dbg !6534
  %17 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6535
  %qcmd = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %17, i32 0, i32 27, !dbg !6536
  store void (%struct.myrb_hba*, %struct.myrb_cmdblk*)* @myrb_qcmd, void (%struct.myrb_hba*, %struct.myrb_cmdblk*)** %qcmd, align 8, !dbg !6537
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6538
  %write_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 28, !dbg !6539
  store void (%union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*)* @DAC960_LA_write_cmd_mbox, void (%union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*)** %write_cmd_mbox, align 8, !dbg !6540
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6541
  %dual_mode_interface = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 8, !dbg !6543
  %20 = load i8, i8* %dual_mode_interface, align 8, !dbg !6543
  %tobool = trunc i8 %20 to i1, !dbg !6543
  br i1 %tobool, label %if.then10, label %if.else, !dbg !6544

if.then10:                                        ; preds = %if.end9
  %21 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6545
  %get_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %21, i32 0, i32 29, !dbg !6546
  store void (i8*)* @DAC960_LA_mem_mbox_new_cmd, void (i8*)** %get_cmd_mbox, align 8, !dbg !6547
  br label %if.end12, !dbg !6545

if.else:                                          ; preds = %if.end9
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6548
  %get_cmd_mbox11 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 29, !dbg !6549
  store void (i8*)* @DAC960_LA_hw_mbox_new_cmd, void (i8*)** %get_cmd_mbox11, align 8, !dbg !6550
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then10
  %23 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6551
  %disable_intr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %23, i32 0, i32 30, !dbg !6552
  store void (i8*)* @DAC960_LA_disable_intr, void (i8*)** %disable_intr, align 8, !dbg !6553
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6554
  %reset = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 31, !dbg !6555
  store void (i8*)* @DAC960_LA_reset_ctrl, void (i8*)** %reset, align 8, !dbg !6556
  store i32 0, i32* %retval, align 4, !dbg !6557
  br label %return, !dbg !6557

return:                                           ; preds = %if.end12, %if.then7, %if.then4, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !6558
  ret i32 %25, !dbg !6558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @DAC960_LA_intr_handler(i32 %irq, i8* %arg) #0 !dbg !6559 {
entry:
  %lock.addr.i57 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i57, metadata !6560, metadata !DIExpression()), !dbg !6565
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6567, metadata !DIExpression()), !dbg !6568
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6569, metadata !DIExpression()), !dbg !6574
  %irq.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %base = alloca i8*, align 8
  %next_stat_mbox = alloca %struct.myrb_stat_mbox*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %id = alloca i8, align 1
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6581, metadata !DIExpression()), !dbg !6582
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6583, metadata !DIExpression()), !dbg !6584
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !6585, metadata !DIExpression()), !dbg !6586
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !6587
  %1 = bitcast i8* %0 to %struct.myrb_hba*, !dbg !6587
  store %struct.myrb_hba* %1, %struct.myrb_hba** %cb, align 8, !dbg !6586
  call void @llvm.dbg.declare(metadata i8** %base, metadata !6588, metadata !DIExpression()), !dbg !6589
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6590
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 38, !dbg !6591
  %3 = load i8*, i8** %io_base, align 8, !dbg !6591
  store i8* %3, i8** %base, align 8, !dbg !6589
  call void @llvm.dbg.declare(metadata %struct.myrb_stat_mbox** %next_stat_mbox, metadata !6592, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6594, metadata !DIExpression()), !dbg !6595
  br label %do.body, !dbg !6596

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6597

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6598, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6601, metadata !DIExpression()), !dbg !6600
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6600
  %conv = zext i1 %cmp to i32, !dbg !6600
  store i32 1, i32* %tmp, align 4, !dbg !6600
  %4 = load i32, i32* %tmp, align 4, !dbg !6600
  br label %do.body2, !dbg !6602

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6603

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6604

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6606, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6610, metadata !DIExpression()), !dbg !6609
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6609
  %conv8 = zext i1 %cmp7 to i32, !dbg !6609
  store i32 1, i32* %tmp9, align 4, !dbg !6609
  %5 = load i32, i32* %tmp9, align 4, !dbg !6609
  %call = call i64 @arch_local_irq_save() #11, !dbg !6611
  store i64 %call, i64* %flags, align 8, !dbg !6611
  br label %do.end, !dbg !6611

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6604

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6603

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6612, !srcloc !6613
  br label %do.body12, !dbg !6612

do.body12:                                        ; preds = %do.body11
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6614
  %queue_lock = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %6, i32 0, i32 26, !dbg !6614
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6615
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !6616
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !6616
  br label %do.end14, !dbg !6614

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6612

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6603

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6602

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6597

do.end18:                                         ; preds = %do.end17
  %9 = load i8*, i8** %base, align 8, !dbg !6617
  call void @DAC960_LA_ack_intr(i8* %9) #11, !dbg !6618
  %10 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6619
  %next_stat_mbox19 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %10, i32 0, i32 51, !dbg !6620
  %11 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox19, align 8, !dbg !6620
  store %struct.myrb_stat_mbox* %11, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6621
  br label %while.cond, !dbg !6622

while.cond:                                       ; preds = %if.end54, %do.end18
  %12 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6623
  %valid = getelementptr inbounds %struct.myrb_stat_mbox, %struct.myrb_stat_mbox* %12, i32 0, i32 1, !dbg !6624
  %bf.load = load i8, i8* %valid, align 1, !dbg !6624
  %bf.lshr = lshr i8 %bf.load, 7, !dbg !6624
  %tobool = icmp ne i8 %bf.lshr, 0, !dbg !6622
  br i1 %tobool, label %while.body, label %while.end, !dbg !6622

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %id, metadata !6625, metadata !DIExpression()), !dbg !6627
  %13 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6628
  %id20 = getelementptr inbounds %struct.myrb_stat_mbox, %struct.myrb_stat_mbox* %13, i32 0, i32 0, !dbg !6629
  %14 = load i8, i8* %id20, align 2, !dbg !6629
  store i8 %14, i8* %id, align 1, !dbg !6627
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !6630, metadata !DIExpression()), !dbg !6631
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %scmd, align 8, !dbg !6631
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !6632, metadata !DIExpression()), !dbg !6633
  store %struct.myrb_cmdblk* null, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6633
  %15 = load i8, i8* %id, align 1, !dbg !6634
  %conv21 = zext i8 %15 to i32, !dbg !6634
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !6636
  br i1 %cmp22, label %if.then, label %if.else, !dbg !6637

if.then:                                          ; preds = %while.body
  %16 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6638
  %dcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %16, i32 0, i32 52, !dbg !6639
  store %struct.myrb_cmdblk* %dcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6640
  br label %if.end35, !dbg !6641

if.else:                                          ; preds = %while.body
  %17 = load i8, i8* %id, align 1, !dbg !6642
  %conv24 = zext i8 %17 to i32, !dbg !6642
  %cmp25 = icmp eq i32 %conv24, 2, !dbg !6644
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !6645

if.then27:                                        ; preds = %if.else
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6646
  %mcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 53, !dbg !6647
  store %struct.myrb_cmdblk* %mcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6648
  br label %if.end34, !dbg !6649

if.else28:                                        ; preds = %if.else
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6650
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 18, !dbg !6652
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6652
  %21 = load i8, i8* %id, align 1, !dbg !6653
  %conv29 = zext i8 %21 to i32, !dbg !6653
  %sub = sub i32 %conv29, 3, !dbg !6654
  %call30 = call %struct.scsi_cmnd* @scsi_host_find_tag(%struct.Scsi_Host* %20, i32 %sub) #11, !dbg !6655
  store %struct.scsi_cmnd* %call30, %struct.scsi_cmnd** %scmd, align 8, !dbg !6656
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !6657
  %tobool31 = icmp ne %struct.scsi_cmnd* %22, null, !dbg !6657
  br i1 %tobool31, label %if.then32, label %if.end, !dbg !6659

if.then32:                                        ; preds = %if.else28
  %23 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !6660
  %call33 = call i8* @scsi_cmd_priv(%struct.scsi_cmnd* %23) #11, !dbg !6661
  %24 = bitcast i8* %call33 to %struct.myrb_cmdblk*, !dbg !6661
  store %struct.myrb_cmdblk* %24, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6662
  br label %if.end, !dbg !6663

if.end:                                           ; preds = %if.then32, %if.else28
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then27
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then
  %25 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6664
  %tobool36 = icmp ne %struct.myrb_cmdblk* %25, null, !dbg !6664
  br i1 %tobool36, label %if.then37, label %if.else39, !dbg !6666

if.then37:                                        ; preds = %if.end35
  %26 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6667
  %status = getelementptr inbounds %struct.myrb_stat_mbox, %struct.myrb_stat_mbox* %26, i32 0, i32 2, !dbg !6668
  %27 = load i16, i16* %status, align 2, !dbg !6668
  %28 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6669
  %status38 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %28, i32 0, i32 1, !dbg !6670
  store i16 %27, i16* %status38, align 8, !dbg !6671
  br label %if.end41, !dbg !6669

if.else39:                                        ; preds = %if.end35
  %29 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6672
  %pdev = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %29, i32 0, i32 17, !dbg !6672
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6672
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !6672
  %31 = load i8, i8* %id, align 1, !dbg !6672
  %conv40 = zext i8 %31 to i32, !dbg !6672
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i32 %conv40) #12, !dbg !6672
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then37
  %32 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6673
  %33 = bitcast %struct.myrb_stat_mbox* %32 to i8*, !dbg !6674
  call void @llvm.memset.p0i8.i64(i8* align 2 %33, i8 0, i64 4, i1 false), !dbg !6674
  %34 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6675
  %incdec.ptr = getelementptr %struct.myrb_stat_mbox, %struct.myrb_stat_mbox* %34, i32 1, !dbg !6675
  store %struct.myrb_stat_mbox* %incdec.ptr, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6675
  %35 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6677
  %last_stat_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %35, i32 0, i32 50, !dbg !6678
  %36 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %last_stat_mbox, align 8, !dbg !6678
  %cmp42 = icmp ugt %struct.myrb_stat_mbox* %incdec.ptr, %36, !dbg !6679
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !6680

if.then44:                                        ; preds = %if.end41
  %37 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6681
  %first_stat_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %37, i32 0, i32 49, !dbg !6682
  %38 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %first_stat_mbox, align 8, !dbg !6682
  store %struct.myrb_stat_mbox* %38, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6683
  br label %if.end45, !dbg !6684

if.end45:                                         ; preds = %if.then44, %if.end41
  %39 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6685
  %tobool46 = icmp ne %struct.myrb_cmdblk* %39, null, !dbg !6685
  br i1 %tobool46, label %if.then47, label %if.end54, !dbg !6687

if.then47:                                        ; preds = %if.end45
  %40 = load i8, i8* %id, align 1, !dbg !6688
  %conv48 = zext i8 %40 to i32, !dbg !6688
  %cmp49 = icmp slt i32 %conv48, 3, !dbg !6691
  br i1 %cmp49, label %if.then51, label %if.else52, !dbg !6692

if.then51:                                        ; preds = %if.then47
  %41 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6693
  %42 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6694
  call void @myrb_handle_cmdblk(%struct.myrb_hba* %41, %struct.myrb_cmdblk* %42) #11, !dbg !6695
  br label %if.end53, !dbg !6695

if.else52:                                        ; preds = %if.then47
  %43 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6696
  %44 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6697
  %45 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !6698
  call void @myrb_handle_scsi(%struct.myrb_hba* %43, %struct.myrb_cmdblk* %44, %struct.scsi_cmnd* %45) #11, !dbg !6699
  br label %if.end53

if.end53:                                         ; preds = %if.else52, %if.then51
  br label %if.end54, !dbg !6700

if.end54:                                         ; preds = %if.end53, %if.end45
  br label %while.cond, !dbg !6622, !llvm.loop !6701

while.end:                                        ; preds = %while.cond
  %46 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6703
  %47 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6704
  %next_stat_mbox55 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %47, i32 0, i32 51, !dbg !6705
  store %struct.myrb_stat_mbox* %46, %struct.myrb_stat_mbox** %next_stat_mbox55, align 8, !dbg !6706
  %48 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6707
  %queue_lock56 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %48, i32 0, i32 26, !dbg !6708
  %49 = load i64, i64* %flags, align 8, !dbg !6709
  store %struct.spinlock* %queue_lock56, %struct.spinlock** %lock.addr.i57, align 8
  store i64 %49, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1034, metadata !6710, metadata !DIExpression()) #7, !dbg !6713
  call void @llvm.dbg.declare(metadata !1034, metadata !6714, metadata !DIExpression()) #7, !dbg !6713
  store i32 1, i32* %tmp.i, align 4, !dbg !6713
  %50 = load i32, i32* %tmp.i, align 4, !dbg !6713
  call void @llvm.dbg.declare(metadata !1034, metadata !6715, metadata !DIExpression()) #7, !dbg !6720
  call void @llvm.dbg.declare(metadata !1034, metadata !6721, metadata !DIExpression()) #7, !dbg !6720
  store i32 1, i32* %tmp8.i, align 4, !dbg !6720
  %51 = load i32, i32* %tmp8.i, align 4, !dbg !6720
  %52 = load i64, i64* %flags.addr.i, align 8, !dbg !6722
  call void @arch_local_irq_restore(i64 %52) #13, !dbg !6722
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6723, !srcloc !6725
  %53 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i57, align 8, !dbg !6726
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0, !dbg !6726
  %rlock.i58 = bitcast %union.anon.1* %54 to %struct.raw_spinlock*, !dbg !6726
  ret i32 1, !dbg !6728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @DAC960_PG_hw_init(%struct.pci_dev* %pdev, %struct.myrb_hba* %cb, i8* %base) #0 !dbg !6729 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %base.addr = alloca i8*, align 8
  %timeout = alloca i32, align 4
  %error = alloca i8, align 1
  %parm0 = alloca i8, align 1
  %parm1 = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6730, metadata !DIExpression()), !dbg !6731
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !6732, metadata !DIExpression()), !dbg !6733
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !6734, metadata !DIExpression()), !dbg !6735
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !6736, metadata !DIExpression()), !dbg !6737
  store i32 0, i32* %timeout, align 4, !dbg !6737
  call void @llvm.dbg.declare(metadata i8* %error, metadata !6738, metadata !DIExpression()), !dbg !6739
  call void @llvm.dbg.declare(metadata i8* %parm0, metadata !6740, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.declare(metadata i8* %parm1, metadata !6742, metadata !DIExpression()), !dbg !6743
  %0 = load i8*, i8** %base.addr, align 8, !dbg !6744
  call void @DAC960_PG_disable_intr(i8* %0) #11, !dbg !6745
  %1 = load i8*, i8** %base.addr, align 8, !dbg !6746
  call void @DAC960_PG_ack_hw_mbox_status(i8* %1) #11, !dbg !6747
  call void @__const_udelay(i64 4295000) #11, !dbg !6748
  br label %while.cond, !dbg !6753

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i8*, i8** %base.addr, align 8, !dbg !6754
  %call = call zeroext i1 @DAC960_PG_init_in_progress(i8* %2) #11, !dbg !6755
  br i1 %call, label %land.rhs, label %land.end, !dbg !6756

land.rhs:                                         ; preds = %while.cond
  %3 = load i32, i32* %timeout, align 4, !dbg !6757
  %cmp = icmp slt i32 %3, 1000000, !dbg !6758
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !6759
  br i1 %4, label %while.body, label %while.end, !dbg !6753

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %base.addr, align 8, !dbg !6760
  %call1 = call zeroext i1 @DAC960_PG_read_error_status(i8* %5, i8* %error, i8* %parm0, i8* %parm1) #11, !dbg !6763
  br i1 %call1, label %land.lhs.true, label %if.end, !dbg !6764

land.lhs.true:                                    ; preds = %while.body
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6765
  %7 = load i8, i8* %error, align 1, !dbg !6766
  %8 = load i8, i8* %parm0, align 1, !dbg !6767
  %9 = load i8, i8* %parm1, align 1, !dbg !6768
  %call2 = call zeroext i1 @myrb_err_status(%struct.myrb_hba* %6, i8 zeroext %7, i8 zeroext %8, i8 zeroext %9) #11, !dbg !6769
  br i1 %call2, label %if.then, label %if.end, !dbg !6770

if.then:                                          ; preds = %land.lhs.true
  store i32 -5, i32* %retval, align 4, !dbg !6771
  br label %return, !dbg !6771

if.end:                                           ; preds = %land.lhs.true, %while.body
  call void @__const_udelay(i64 42950) #11, !dbg !6772
  %10 = load i32, i32* %timeout, align 4, !dbg !6777
  %inc = add i32 %10, 1, !dbg !6777
  store i32 %inc, i32* %timeout, align 4, !dbg !6777
  br label %while.cond, !dbg !6753, !llvm.loop !6778

while.end:                                        ; preds = %land.end
  %11 = load i32, i32* %timeout, align 4, !dbg !6780
  %cmp3 = icmp eq i32 %11, 1000000, !dbg !6782
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6783

if.then4:                                         ; preds = %while.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6784
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !6784
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0)) #12, !dbg !6784
  store i32 -110, i32* %retval, align 4, !dbg !6786
  br label %return, !dbg !6786

if.end5:                                          ; preds = %while.end
  %13 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6787
  %call6 = call zeroext i1 @myrb_enable_mmio(%struct.myrb_hba* %13, i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)* @DAC960_PG_mbox_init) #11, !dbg !6789
  br i1 %call6, label %if.end9, label %if.then7, !dbg !6790

if.then7:                                         ; preds = %if.end5
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6791
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !6791
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev8, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !6791
  %15 = load i8*, i8** %base.addr, align 8, !dbg !6793
  call void @DAC960_PG_reset_ctrl(i8* %15) #11, !dbg !6794
  store i32 -19, i32* %retval, align 4, !dbg !6795
  br label %return, !dbg !6795

if.end9:                                          ; preds = %if.end5
  %16 = load i8*, i8** %base.addr, align 8, !dbg !6796
  call void @DAC960_PG_enable_intr(i8* %16) #11, !dbg !6797
  %17 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6798
  %qcmd = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %17, i32 0, i32 27, !dbg !6799
  store void (%struct.myrb_hba*, %struct.myrb_cmdblk*)* @myrb_qcmd, void (%struct.myrb_hba*, %struct.myrb_cmdblk*)** %qcmd, align 8, !dbg !6800
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6801
  %write_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 28, !dbg !6802
  store void (%union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*)* @DAC960_PG_write_cmd_mbox, void (%union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*)** %write_cmd_mbox, align 8, !dbg !6803
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6804
  %dual_mode_interface = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 8, !dbg !6806
  %20 = load i8, i8* %dual_mode_interface, align 8, !dbg !6806
  %tobool = trunc i8 %20 to i1, !dbg !6806
  br i1 %tobool, label %if.then10, label %if.else, !dbg !6807

if.then10:                                        ; preds = %if.end9
  %21 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6808
  %get_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %21, i32 0, i32 29, !dbg !6809
  store void (i8*)* @DAC960_PG_mem_mbox_new_cmd, void (i8*)** %get_cmd_mbox, align 8, !dbg !6810
  br label %if.end12, !dbg !6808

if.else:                                          ; preds = %if.end9
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6811
  %get_cmd_mbox11 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 29, !dbg !6812
  store void (i8*)* @DAC960_PG_hw_mbox_new_cmd, void (i8*)** %get_cmd_mbox11, align 8, !dbg !6813
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then10
  %23 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6814
  %disable_intr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %23, i32 0, i32 30, !dbg !6815
  store void (i8*)* @DAC960_PG_disable_intr, void (i8*)** %disable_intr, align 8, !dbg !6816
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6817
  %reset = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 31, !dbg !6818
  store void (i8*)* @DAC960_PG_reset_ctrl, void (i8*)** %reset, align 8, !dbg !6819
  store i32 0, i32* %retval, align 4, !dbg !6820
  br label %return, !dbg !6820

return:                                           ; preds = %if.end12, %if.then7, %if.then4, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !6821
  ret i32 %25, !dbg !6821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @DAC960_PG_intr_handler(i32 %irq, i8* %arg) #0 !dbg !6822 {
entry:
  %lock.addr.i54 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i54, metadata !6560, metadata !DIExpression()), !dbg !6823
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6567, metadata !DIExpression()), !dbg !6825
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6569, metadata !DIExpression()), !dbg !6826
  %irq.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %base = alloca i8*, align 8
  %next_stat_mbox = alloca %struct.myrb_stat_mbox*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %id = alloca i8, align 1
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6833, metadata !DIExpression()), !dbg !6834
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6835, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !6837, metadata !DIExpression()), !dbg !6838
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !6839
  %1 = bitcast i8* %0 to %struct.myrb_hba*, !dbg !6839
  store %struct.myrb_hba* %1, %struct.myrb_hba** %cb, align 8, !dbg !6838
  call void @llvm.dbg.declare(metadata i8** %base, metadata !6840, metadata !DIExpression()), !dbg !6841
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6842
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 38, !dbg !6843
  %3 = load i8*, i8** %io_base, align 8, !dbg !6843
  store i8* %3, i8** %base, align 8, !dbg !6841
  call void @llvm.dbg.declare(metadata %struct.myrb_stat_mbox** %next_stat_mbox, metadata !6844, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6846, metadata !DIExpression()), !dbg !6847
  br label %do.body, !dbg !6848

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6849

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6850, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6853, metadata !DIExpression()), !dbg !6852
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6852
  %conv = zext i1 %cmp to i32, !dbg !6852
  store i32 1, i32* %tmp, align 4, !dbg !6852
  %4 = load i32, i32* %tmp, align 4, !dbg !6852
  br label %do.body2, !dbg !6854

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6855

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6856

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6858, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6862, metadata !DIExpression()), !dbg !6861
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6861
  %conv8 = zext i1 %cmp7 to i32, !dbg !6861
  store i32 1, i32* %tmp9, align 4, !dbg !6861
  %5 = load i32, i32* %tmp9, align 4, !dbg !6861
  %call = call i64 @arch_local_irq_save() #11, !dbg !6863
  store i64 %call, i64* %flags, align 8, !dbg !6863
  br label %do.end, !dbg !6863

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6856

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6855

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6864, !srcloc !6865
  br label %do.body12, !dbg !6864

do.body12:                                        ; preds = %do.body11
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6866
  %queue_lock = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %6, i32 0, i32 26, !dbg !6866
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6867
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !6868
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !6868
  br label %do.end14, !dbg !6866

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6864

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6855

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6854

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6849

do.end18:                                         ; preds = %do.end17
  %9 = load i8*, i8** %base, align 8, !dbg !6869
  call void @DAC960_PG_ack_intr(i8* %9) #11, !dbg !6870
  %10 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6871
  %next_stat_mbox19 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %10, i32 0, i32 51, !dbg !6872
  %11 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox19, align 8, !dbg !6872
  store %struct.myrb_stat_mbox* %11, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6873
  br label %while.cond, !dbg !6874

while.cond:                                       ; preds = %if.end51, %do.end18
  %12 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6875
  %valid = getelementptr inbounds %struct.myrb_stat_mbox, %struct.myrb_stat_mbox* %12, i32 0, i32 1, !dbg !6876
  %bf.load = load i8, i8* %valid, align 1, !dbg !6876
  %bf.lshr = lshr i8 %bf.load, 7, !dbg !6876
  %tobool = icmp ne i8 %bf.lshr, 0, !dbg !6874
  br i1 %tobool, label %while.body, label %while.end, !dbg !6874

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %id, metadata !6877, metadata !DIExpression()), !dbg !6879
  %13 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6880
  %id20 = getelementptr inbounds %struct.myrb_stat_mbox, %struct.myrb_stat_mbox* %13, i32 0, i32 0, !dbg !6881
  %14 = load i8, i8* %id20, align 2, !dbg !6881
  store i8 %14, i8* %id, align 1, !dbg !6879
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !6882, metadata !DIExpression()), !dbg !6883
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %scmd, align 8, !dbg !6883
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !6884, metadata !DIExpression()), !dbg !6885
  store %struct.myrb_cmdblk* null, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6885
  %15 = load i8, i8* %id, align 1, !dbg !6886
  %conv21 = zext i8 %15 to i32, !dbg !6886
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !6888
  br i1 %cmp22, label %if.then, label %if.else, !dbg !6889

if.then:                                          ; preds = %while.body
  %16 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6890
  %dcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %16, i32 0, i32 52, !dbg !6891
  store %struct.myrb_cmdblk* %dcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6892
  br label %if.end35, !dbg !6893

if.else:                                          ; preds = %while.body
  %17 = load i8, i8* %id, align 1, !dbg !6894
  %conv24 = zext i8 %17 to i32, !dbg !6894
  %cmp25 = icmp eq i32 %conv24, 2, !dbg !6896
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !6897

if.then27:                                        ; preds = %if.else
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6898
  %mcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 53, !dbg !6899
  store %struct.myrb_cmdblk* %mcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6900
  br label %if.end34, !dbg !6901

if.else28:                                        ; preds = %if.else
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6902
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 18, !dbg !6904
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6904
  %21 = load i8, i8* %id, align 1, !dbg !6905
  %conv29 = zext i8 %21 to i32, !dbg !6905
  %sub = sub i32 %conv29, 3, !dbg !6906
  %call30 = call %struct.scsi_cmnd* @scsi_host_find_tag(%struct.Scsi_Host* %20, i32 %sub) #11, !dbg !6907
  store %struct.scsi_cmnd* %call30, %struct.scsi_cmnd** %scmd, align 8, !dbg !6908
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !6909
  %tobool31 = icmp ne %struct.scsi_cmnd* %22, null, !dbg !6909
  br i1 %tobool31, label %if.then32, label %if.end, !dbg !6911

if.then32:                                        ; preds = %if.else28
  %23 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !6912
  %call33 = call i8* @scsi_cmd_priv(%struct.scsi_cmnd* %23) #11, !dbg !6913
  %24 = bitcast i8* %call33 to %struct.myrb_cmdblk*, !dbg !6913
  store %struct.myrb_cmdblk* %24, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6914
  br label %if.end, !dbg !6915

if.end:                                           ; preds = %if.then32, %if.else28
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then27
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then
  %25 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6916
  %tobool36 = icmp ne %struct.myrb_cmdblk* %25, null, !dbg !6916
  br i1 %tobool36, label %if.then37, label %if.else39, !dbg !6918

if.then37:                                        ; preds = %if.end35
  %26 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6919
  %status = getelementptr inbounds %struct.myrb_stat_mbox, %struct.myrb_stat_mbox* %26, i32 0, i32 2, !dbg !6920
  %27 = load i16, i16* %status, align 2, !dbg !6920
  %28 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6921
  %status38 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %28, i32 0, i32 1, !dbg !6922
  store i16 %27, i16* %status38, align 8, !dbg !6923
  br label %if.end41, !dbg !6921

if.else39:                                        ; preds = %if.end35
  %29 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6924
  %pdev = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %29, i32 0, i32 17, !dbg !6924
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6924
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !6924
  %31 = load i8, i8* %id, align 1, !dbg !6924
  %conv40 = zext i8 %31 to i32, !dbg !6924
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i32 %conv40) #12, !dbg !6924
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then37
  %32 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6925
  %33 = bitcast %struct.myrb_stat_mbox* %32 to i8*, !dbg !6926
  call void @llvm.memset.p0i8.i64(i8* align 2 %33, i8 0, i64 4, i1 false), !dbg !6926
  %34 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6927
  %incdec.ptr = getelementptr %struct.myrb_stat_mbox, %struct.myrb_stat_mbox* %34, i32 1, !dbg !6927
  store %struct.myrb_stat_mbox* %incdec.ptr, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6927
  %35 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6929
  %last_stat_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %35, i32 0, i32 50, !dbg !6930
  %36 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %last_stat_mbox, align 8, !dbg !6930
  %cmp42 = icmp ugt %struct.myrb_stat_mbox* %incdec.ptr, %36, !dbg !6931
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !6932

if.then44:                                        ; preds = %if.end41
  %37 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6933
  %first_stat_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %37, i32 0, i32 49, !dbg !6934
  %38 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %first_stat_mbox, align 8, !dbg !6934
  store %struct.myrb_stat_mbox* %38, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6935
  br label %if.end45, !dbg !6936

if.end45:                                         ; preds = %if.then44, %if.end41
  %39 = load i8, i8* %id, align 1, !dbg !6937
  %conv46 = zext i8 %39 to i32, !dbg !6937
  %cmp47 = icmp slt i32 %conv46, 3, !dbg !6939
  br i1 %cmp47, label %if.then49, label %if.else50, !dbg !6940

if.then49:                                        ; preds = %if.end45
  %40 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6941
  %41 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6942
  call void @myrb_handle_cmdblk(%struct.myrb_hba* %40, %struct.myrb_cmdblk* %41) #11, !dbg !6943
  br label %if.end51, !dbg !6943

if.else50:                                        ; preds = %if.end45
  %42 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6944
  %43 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !6945
  %44 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !6946
  call void @myrb_handle_scsi(%struct.myrb_hba* %42, %struct.myrb_cmdblk* %43, %struct.scsi_cmnd* %44) #11, !dbg !6947
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.then49
  br label %while.cond, !dbg !6874, !llvm.loop !6948

while.end:                                        ; preds = %while.cond
  %45 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !6950
  %46 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6951
  %next_stat_mbox52 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %46, i32 0, i32 51, !dbg !6952
  store %struct.myrb_stat_mbox* %45, %struct.myrb_stat_mbox** %next_stat_mbox52, align 8, !dbg !6953
  %47 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !6954
  %queue_lock53 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %47, i32 0, i32 26, !dbg !6955
  %48 = load i64, i64* %flags, align 8, !dbg !6956
  store %struct.spinlock* %queue_lock53, %struct.spinlock** %lock.addr.i54, align 8
  store i64 %48, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1034, metadata !6710, metadata !DIExpression()) #7, !dbg !6957
  call void @llvm.dbg.declare(metadata !1034, metadata !6714, metadata !DIExpression()) #7, !dbg !6957
  store i32 1, i32* %tmp.i, align 4, !dbg !6957
  %49 = load i32, i32* %tmp.i, align 4, !dbg !6957
  call void @llvm.dbg.declare(metadata !1034, metadata !6715, metadata !DIExpression()) #7, !dbg !6958
  call void @llvm.dbg.declare(metadata !1034, metadata !6721, metadata !DIExpression()) #7, !dbg !6958
  store i32 1, i32* %tmp8.i, align 4, !dbg !6958
  %50 = load i32, i32* %tmp8.i, align 4, !dbg !6958
  %51 = load i64, i64* %flags.addr.i, align 8, !dbg !6959
  call void @arch_local_irq_restore(i64 %51) #13, !dbg !6959
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6960, !srcloc !6725
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i54, align 8, !dbg !6961
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !6961
  %rlock.i55 = bitcast %union.anon.1* %53 to %struct.raw_spinlock*, !dbg !6961
  ret i32 1, !dbg !6962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @DAC960_PD_hw_init(%struct.pci_dev* %pdev, %struct.myrb_hba* %cb, i8* %base) #0 !dbg !6963 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %base.addr = alloca i8*, align 8
  %timeout = alloca i32, align 4
  %error = alloca i8, align 1
  %parm0 = alloca i8, align 1
  %parm1 = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6964, metadata !DIExpression()), !dbg !6965
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !6966, metadata !DIExpression()), !dbg !6967
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !6968, metadata !DIExpression()), !dbg !6969
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !6970, metadata !DIExpression()), !dbg !6971
  store i32 0, i32* %timeout, align 4, !dbg !6971
  call void @llvm.dbg.declare(metadata i8* %error, metadata !6972, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.declare(metadata i8* %parm0, metadata !6974, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.declare(metadata i8* %parm1, metadata !6976, metadata !DIExpression()), !dbg !6977
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6978
  %io_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 36, !dbg !6978
  %1 = load i64, i64* %io_addr, align 8, !dbg !6978
  %call = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %1, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i32 0) #11, !dbg !6978
  %tobool = icmp ne %struct.resource* %call, null, !dbg !6978
  br i1 %tobool, label %if.end, label %if.then, !dbg !6980

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6981
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !6981
  %3 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !6981
  %io_addr1 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %3, i32 0, i32 36, !dbg !6981
  %4 = load i64, i64* %io_addr1, align 8, !dbg !6981
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0), i64 %4) #12, !dbg !6981
  store i32 -16, i32* %retval, align 4, !dbg !6983
  br label %return, !dbg !6983

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %base.addr, align 8, !dbg !6984
  call void @DAC960_PD_disable_intr(i8* %5) #11, !dbg !6985
  %6 = load i8*, i8** %base.addr, align 8, !dbg !6986
  call void @DAC960_PD_ack_hw_mbox_status(i8* %6) #11, !dbg !6987
  call void @__const_udelay(i64 4295000) #11, !dbg !6988
  br label %while.cond, !dbg !6993

while.cond:                                       ; preds = %if.end6, %if.end
  %7 = load i8*, i8** %base.addr, align 8, !dbg !6994
  %call2 = call zeroext i1 @DAC960_PD_init_in_progress(i8* %7) #11, !dbg !6995
  br i1 %call2, label %land.rhs, label %land.end, !dbg !6996

land.rhs:                                         ; preds = %while.cond
  %8 = load i32, i32* %timeout, align 4, !dbg !6997
  %cmp = icmp slt i32 %8, 1000000, !dbg !6998
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !6999
  br i1 %9, label %while.body, label %while.end, !dbg !6993

while.body:                                       ; preds = %land.end
  %10 = load i8*, i8** %base.addr, align 8, !dbg !7000
  %call3 = call zeroext i1 @DAC960_PD_read_error_status(i8* %10, i8* %error, i8* %parm0, i8* %parm1) #11, !dbg !7003
  br i1 %call3, label %land.lhs.true, label %if.end6, !dbg !7004

land.lhs.true:                                    ; preds = %while.body
  %11 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7005
  %12 = load i8, i8* %error, align 1, !dbg !7006
  %13 = load i8, i8* %parm0, align 1, !dbg !7007
  %14 = load i8, i8* %parm1, align 1, !dbg !7008
  %call4 = call zeroext i1 @myrb_err_status(%struct.myrb_hba* %11, i8 zeroext %12, i8 zeroext %13, i8 zeroext %14) #11, !dbg !7009
  br i1 %call4, label %if.then5, label %if.end6, !dbg !7010

if.then5:                                         ; preds = %land.lhs.true
  store i32 -5, i32* %retval, align 4, !dbg !7011
  br label %return, !dbg !7011

if.end6:                                          ; preds = %land.lhs.true, %while.body
  call void @__const_udelay(i64 42950) #11, !dbg !7012
  %15 = load i32, i32* %timeout, align 4, !dbg !7017
  %inc = add i32 %15, 1, !dbg !7017
  store i32 %inc, i32* %timeout, align 4, !dbg !7017
  br label %while.cond, !dbg !6993, !llvm.loop !7018

while.end:                                        ; preds = %land.end
  %16 = load i32, i32* %timeout, align 4, !dbg !7020
  %cmp7 = icmp eq i32 %16, 1000000, !dbg !7022
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !7023

if.then8:                                         ; preds = %while.end
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7024
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !7024
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev9, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0)) #12, !dbg !7024
  store i32 -110, i32* %retval, align 4, !dbg !7026
  br label %return, !dbg !7026

if.end10:                                         ; preds = %while.end
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7027
  %call11 = call zeroext i1 @myrb_enable_mmio(%struct.myrb_hba* %18, i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)* null) #11, !dbg !7029
  br i1 %call11, label %if.end14, label %if.then12, !dbg !7030

if.then12:                                        ; preds = %if.end10
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7031
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !7031
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev13, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !7031
  %20 = load i8*, i8** %base.addr, align 8, !dbg !7033
  call void @DAC960_PD_reset_ctrl(i8* %20) #11, !dbg !7034
  store i32 -19, i32* %retval, align 4, !dbg !7035
  br label %return, !dbg !7035

if.end14:                                         ; preds = %if.end10
  %21 = load i8*, i8** %base.addr, align 8, !dbg !7036
  call void @DAC960_PD_enable_intr(i8* %21) #11, !dbg !7037
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7038
  %qcmd = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 27, !dbg !7039
  store void (%struct.myrb_hba*, %struct.myrb_cmdblk*)* @DAC960_PD_qcmd, void (%struct.myrb_hba*, %struct.myrb_cmdblk*)** %qcmd, align 8, !dbg !7040
  %23 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7041
  %disable_intr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %23, i32 0, i32 30, !dbg !7042
  store void (i8*)* @DAC960_PD_disable_intr, void (i8*)** %disable_intr, align 8, !dbg !7043
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7044
  %reset = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 31, !dbg !7045
  store void (i8*)* @DAC960_PD_reset_ctrl, void (i8*)** %reset, align 8, !dbg !7046
  store i32 0, i32* %retval, align 4, !dbg !7047
  br label %return, !dbg !7047

return:                                           ; preds = %if.end14, %if.then12, %if.then8, %if.then5, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !7048
  ret i32 %25, !dbg !7048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @DAC960_PD_intr_handler(i32 %irq, i8* %arg) #0 !dbg !7049 {
entry:
  %lock.addr.i48 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i48, metadata !6560, metadata !DIExpression()), !dbg !7050
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6567, metadata !DIExpression()), !dbg !7052
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6569, metadata !DIExpression()), !dbg !7053
  %irq.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %base = alloca i8*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %id = alloca i8, align 1
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7060, metadata !DIExpression()), !dbg !7061
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7062, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !7064, metadata !DIExpression()), !dbg !7065
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7066
  %1 = bitcast i8* %0 to %struct.myrb_hba*, !dbg !7066
  store %struct.myrb_hba* %1, %struct.myrb_hba** %cb, align 8, !dbg !7065
  call void @llvm.dbg.declare(metadata i8** %base, metadata !7067, metadata !DIExpression()), !dbg !7068
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7069
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 38, !dbg !7070
  %3 = load i8*, i8** %io_base, align 8, !dbg !7070
  store i8* %3, i8** %base, align 8, !dbg !7068
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7071, metadata !DIExpression()), !dbg !7072
  br label %do.body, !dbg !7073

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7074

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7075, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7078, metadata !DIExpression()), !dbg !7077
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7077
  %conv = zext i1 %cmp to i32, !dbg !7077
  store i32 1, i32* %tmp, align 4, !dbg !7077
  %4 = load i32, i32* %tmp, align 4, !dbg !7077
  br label %do.body2, !dbg !7079

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7080

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7081

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7083, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7087, metadata !DIExpression()), !dbg !7086
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7086
  %conv8 = zext i1 %cmp7 to i32, !dbg !7086
  store i32 1, i32* %tmp9, align 4, !dbg !7086
  %5 = load i32, i32* %tmp9, align 4, !dbg !7086
  %call = call i64 @arch_local_irq_save() #11, !dbg !7088
  store i64 %call, i64* %flags, align 8, !dbg !7088
  br label %do.end, !dbg !7088

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7081

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7080

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7089, !srcloc !7090
  br label %do.body12, !dbg !7089

do.body12:                                        ; preds = %do.body11
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7091
  %queue_lock = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %6, i32 0, i32 26, !dbg !7091
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7092
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !7093
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !7093
  br label %do.end14, !dbg !7091

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7089

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7080

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7079

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7074

do.end18:                                         ; preds = %do.end17
  br label %while.cond, !dbg !7094

while.cond:                                       ; preds = %if.end46, %do.end18
  %9 = load i8*, i8** %base, align 8, !dbg !7095
  %call19 = call zeroext i1 @DAC960_PD_hw_mbox_status_available(i8* %9) #11, !dbg !7096
  br i1 %call19, label %while.body, label %while.end, !dbg !7094

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %id, metadata !7097, metadata !DIExpression()), !dbg !7099
  %10 = load i8*, i8** %base, align 8, !dbg !7100
  %call20 = call zeroext i8 @DAC960_PD_read_status_cmd_ident(i8* %10) #11, !dbg !7101
  store i8 %call20, i8* %id, align 1, !dbg !7099
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !7102, metadata !DIExpression()), !dbg !7103
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %scmd, align 8, !dbg !7103
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !7104, metadata !DIExpression()), !dbg !7105
  store %struct.myrb_cmdblk* null, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7105
  %11 = load i8, i8* %id, align 1, !dbg !7106
  %conv21 = zext i8 %11 to i32, !dbg !7106
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !7108
  br i1 %cmp22, label %if.then, label %if.else, !dbg !7109

if.then:                                          ; preds = %while.body
  %12 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7110
  %dcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %12, i32 0, i32 52, !dbg !7111
  store %struct.myrb_cmdblk* %dcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7112
  br label %if.end34, !dbg !7113

if.else:                                          ; preds = %while.body
  %13 = load i8, i8* %id, align 1, !dbg !7114
  %conv24 = zext i8 %13 to i32, !dbg !7114
  %cmp25 = icmp eq i32 %conv24, 2, !dbg !7116
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !7117

if.then27:                                        ; preds = %if.else
  %14 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7118
  %mcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %14, i32 0, i32 53, !dbg !7119
  store %struct.myrb_cmdblk* %mcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7120
  br label %if.end33, !dbg !7121

if.else28:                                        ; preds = %if.else
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7122
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %15, i32 0, i32 18, !dbg !7124
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7124
  %17 = load i8, i8* %id, align 1, !dbg !7125
  %conv29 = zext i8 %17 to i32, !dbg !7125
  %sub = sub i32 %conv29, 3, !dbg !7126
  %call30 = call %struct.scsi_cmnd* @scsi_host_find_tag(%struct.Scsi_Host* %16, i32 %sub) #11, !dbg !7127
  store %struct.scsi_cmnd* %call30, %struct.scsi_cmnd** %scmd, align 8, !dbg !7128
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7129
  %tobool = icmp ne %struct.scsi_cmnd* %18, null, !dbg !7129
  br i1 %tobool, label %if.then31, label %if.end, !dbg !7131

if.then31:                                        ; preds = %if.else28
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7132
  %call32 = call i8* @scsi_cmd_priv(%struct.scsi_cmnd* %19) #11, !dbg !7133
  %20 = bitcast i8* %call32 to %struct.myrb_cmdblk*, !dbg !7133
  store %struct.myrb_cmdblk* %20, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7134
  br label %if.end, !dbg !7135

if.end:                                           ; preds = %if.then31, %if.else28
  br label %if.end33

if.end33:                                         ; preds = %if.end, %if.then27
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then
  %21 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7136
  %tobool35 = icmp ne %struct.myrb_cmdblk* %21, null, !dbg !7136
  br i1 %tobool35, label %if.then36, label %if.else38, !dbg !7138

if.then36:                                        ; preds = %if.end34
  %22 = load i8*, i8** %base, align 8, !dbg !7139
  %call37 = call zeroext i16 @DAC960_PD_read_status(i8* %22) #11, !dbg !7140
  %23 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7141
  %status = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %23, i32 0, i32 1, !dbg !7142
  store i16 %call37, i16* %status, align 8, !dbg !7143
  br label %if.end40, !dbg !7141

if.else38:                                        ; preds = %if.end34
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7144
  %pdev = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 17, !dbg !7144
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7144
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !7144
  %26 = load i8, i8* %id, align 1, !dbg !7144
  %conv39 = zext i8 %26 to i32, !dbg !7144
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i32 %conv39) #12, !dbg !7144
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %if.then36
  %27 = load i8*, i8** %base, align 8, !dbg !7145
  call void @DAC960_PD_ack_intr(i8* %27) #11, !dbg !7146
  %28 = load i8*, i8** %base, align 8, !dbg !7147
  call void @DAC960_PD_ack_hw_mbox_status(i8* %28) #11, !dbg !7148
  %29 = load i8, i8* %id, align 1, !dbg !7149
  %conv41 = zext i8 %29 to i32, !dbg !7149
  %cmp42 = icmp slt i32 %conv41, 3, !dbg !7151
  br i1 %cmp42, label %if.then44, label %if.else45, !dbg !7152

if.then44:                                        ; preds = %if.end40
  %30 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7153
  %31 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7154
  call void @myrb_handle_cmdblk(%struct.myrb_hba* %30, %struct.myrb_cmdblk* %31) #11, !dbg !7155
  br label %if.end46, !dbg !7155

if.else45:                                        ; preds = %if.end40
  %32 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7156
  %33 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7157
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7158
  call void @myrb_handle_scsi(%struct.myrb_hba* %32, %struct.myrb_cmdblk* %33, %struct.scsi_cmnd* %34) #11, !dbg !7159
  br label %if.end46

if.end46:                                         ; preds = %if.else45, %if.then44
  br label %while.cond, !dbg !7094, !llvm.loop !7160

while.end:                                        ; preds = %while.cond
  %35 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7162
  %queue_lock47 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %35, i32 0, i32 26, !dbg !7163
  %36 = load i64, i64* %flags, align 8, !dbg !7164
  store %struct.spinlock* %queue_lock47, %struct.spinlock** %lock.addr.i48, align 8
  store i64 %36, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1034, metadata !6710, metadata !DIExpression()) #7, !dbg !7165
  call void @llvm.dbg.declare(metadata !1034, metadata !6714, metadata !DIExpression()) #7, !dbg !7165
  store i32 1, i32* %tmp.i, align 4, !dbg !7165
  %37 = load i32, i32* %tmp.i, align 4, !dbg !7165
  call void @llvm.dbg.declare(metadata !1034, metadata !6715, metadata !DIExpression()) #7, !dbg !7166
  call void @llvm.dbg.declare(metadata !1034, metadata !6721, metadata !DIExpression()) #7, !dbg !7166
  store i32 1, i32* %tmp8.i, align 4, !dbg !7166
  %38 = load i32, i32* %tmp8.i, align 4, !dbg !7166
  %39 = load i64, i64* %flags.addr.i, align 8, !dbg !7167
  call void @arch_local_irq_restore(i64 %39) #13, !dbg !7167
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7168, !srcloc !6725
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i48, align 8, !dbg !7169
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !7169
  %rlock.i49 = bitcast %union.anon.1* %41 to %struct.raw_spinlock*, !dbg !7169
  ret i32 1, !dbg !7170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @DAC960_P_hw_init(%struct.pci_dev* %pdev, %struct.myrb_hba* %cb, i8* %base) #0 !dbg !7171 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %base.addr = alloca i8*, align 8
  %timeout = alloca i32, align 4
  %error = alloca i8, align 1
  %parm0 = alloca i8, align 1
  %parm1 = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7172, metadata !DIExpression()), !dbg !7173
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !7174, metadata !DIExpression()), !dbg !7175
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7176, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !7178, metadata !DIExpression()), !dbg !7179
  store i32 0, i32* %timeout, align 4, !dbg !7179
  call void @llvm.dbg.declare(metadata i8* %error, metadata !7180, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.declare(metadata i8* %parm0, metadata !7182, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.declare(metadata i8* %parm1, metadata !7184, metadata !DIExpression()), !dbg !7185
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7186
  %io_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 36, !dbg !7186
  %1 = load i64, i64* %io_addr, align 8, !dbg !7186
  %call = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %1, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i32 0) #11, !dbg !7186
  %tobool = icmp ne %struct.resource* %call, null, !dbg !7186
  br i1 %tobool, label %if.end, label %if.then, !dbg !7188

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7189
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !7189
  %3 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7189
  %io_addr1 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %3, i32 0, i32 36, !dbg !7189
  %4 = load i64, i64* %io_addr1, align 8, !dbg !7189
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0), i64 %4) #12, !dbg !7189
  store i32 -16, i32* %retval, align 4, !dbg !7191
  br label %return, !dbg !7191

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %base.addr, align 8, !dbg !7192
  call void @DAC960_PD_disable_intr(i8* %5) #11, !dbg !7193
  %6 = load i8*, i8** %base.addr, align 8, !dbg !7194
  call void @DAC960_PD_ack_hw_mbox_status(i8* %6) #11, !dbg !7195
  call void @__const_udelay(i64 4295000) #11, !dbg !7196
  br label %while.cond, !dbg !7201

while.cond:                                       ; preds = %if.end6, %if.end
  %7 = load i8*, i8** %base.addr, align 8, !dbg !7202
  %call2 = call zeroext i1 @DAC960_PD_init_in_progress(i8* %7) #11, !dbg !7203
  br i1 %call2, label %land.rhs, label %land.end, !dbg !7204

land.rhs:                                         ; preds = %while.cond
  %8 = load i32, i32* %timeout, align 4, !dbg !7205
  %cmp = icmp slt i32 %8, 1000000, !dbg !7206
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !7207
  br i1 %9, label %while.body, label %while.end, !dbg !7201

while.body:                                       ; preds = %land.end
  %10 = load i8*, i8** %base.addr, align 8, !dbg !7208
  %call3 = call zeroext i1 @DAC960_PD_read_error_status(i8* %10, i8* %error, i8* %parm0, i8* %parm1) #11, !dbg !7211
  br i1 %call3, label %land.lhs.true, label %if.end6, !dbg !7212

land.lhs.true:                                    ; preds = %while.body
  %11 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7213
  %12 = load i8, i8* %error, align 1, !dbg !7214
  %13 = load i8, i8* %parm0, align 1, !dbg !7215
  %14 = load i8, i8* %parm1, align 1, !dbg !7216
  %call4 = call zeroext i1 @myrb_err_status(%struct.myrb_hba* %11, i8 zeroext %12, i8 zeroext %13, i8 zeroext %14) #11, !dbg !7217
  br i1 %call4, label %if.then5, label %if.end6, !dbg !7218

if.then5:                                         ; preds = %land.lhs.true
  store i32 -11, i32* %retval, align 4, !dbg !7219
  br label %return, !dbg !7219

if.end6:                                          ; preds = %land.lhs.true, %while.body
  call void @__const_udelay(i64 42950) #11, !dbg !7220
  %15 = load i32, i32* %timeout, align 4, !dbg !7225
  %inc = add i32 %15, 1, !dbg !7225
  store i32 %inc, i32* %timeout, align 4, !dbg !7225
  br label %while.cond, !dbg !7201, !llvm.loop !7226

while.end:                                        ; preds = %land.end
  %16 = load i32, i32* %timeout, align 4, !dbg !7228
  %cmp7 = icmp eq i32 %16, 1000000, !dbg !7230
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !7231

if.then8:                                         ; preds = %while.end
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7232
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !7232
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev9, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0)) #12, !dbg !7232
  store i32 -110, i32* %retval, align 4, !dbg !7234
  br label %return, !dbg !7234

if.end10:                                         ; preds = %while.end
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7235
  %call11 = call zeroext i1 @myrb_enable_mmio(%struct.myrb_hba* %18, i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)* null) #11, !dbg !7237
  br i1 %call11, label %if.end14, label %if.then12, !dbg !7238

if.then12:                                        ; preds = %if.end10
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7239
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !7239
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev13, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23, i64 0, i64 0)) #12, !dbg !7239
  %20 = load i8*, i8** %base.addr, align 8, !dbg !7241
  call void @DAC960_PD_reset_ctrl(i8* %20) #11, !dbg !7242
  store i32 -110, i32* %retval, align 4, !dbg !7243
  br label %return, !dbg !7243

if.end14:                                         ; preds = %if.end10
  %21 = load i8*, i8** %base.addr, align 8, !dbg !7244
  call void @DAC960_PD_enable_intr(i8* %21) #11, !dbg !7245
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7246
  %qcmd = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 27, !dbg !7247
  store void (%struct.myrb_hba*, %struct.myrb_cmdblk*)* @DAC960_P_qcmd, void (%struct.myrb_hba*, %struct.myrb_cmdblk*)** %qcmd, align 8, !dbg !7248
  %23 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7249
  %disable_intr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %23, i32 0, i32 30, !dbg !7250
  store void (i8*)* @DAC960_PD_disable_intr, void (i8*)** %disable_intr, align 8, !dbg !7251
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7252
  %reset = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 31, !dbg !7253
  store void (i8*)* @DAC960_PD_reset_ctrl, void (i8*)** %reset, align 8, !dbg !7254
  store i32 0, i32* %retval, align 4, !dbg !7255
  br label %return, !dbg !7255

return:                                           ; preds = %if.end14, %if.then12, %if.then8, %if.then5, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !7256
  ret i32 %25, !dbg !7256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @DAC960_P_intr_handler(i32 %irq, i8* %arg) #0 !dbg !7257 {
entry:
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !6560, metadata !DIExpression()), !dbg !7258
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6567, metadata !DIExpression()), !dbg !7260
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6569, metadata !DIExpression()), !dbg !7261
  %irq.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %base = alloca i8*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %id = alloca i8, align 1
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %op = alloca i8, align 1
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7268, metadata !DIExpression()), !dbg !7269
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7270, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !7272, metadata !DIExpression()), !dbg !7273
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7274
  %1 = bitcast i8* %0 to %struct.myrb_hba*, !dbg !7274
  store %struct.myrb_hba* %1, %struct.myrb_hba** %cb, align 8, !dbg !7273
  call void @llvm.dbg.declare(metadata i8** %base, metadata !7275, metadata !DIExpression()), !dbg !7276
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7277
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 38, !dbg !7278
  %3 = load i8*, i8** %io_base, align 8, !dbg !7278
  store i8* %3, i8** %base, align 8, !dbg !7276
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7279, metadata !DIExpression()), !dbg !7280
  br label %do.body, !dbg !7281

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7282

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7283, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7286, metadata !DIExpression()), !dbg !7285
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7285
  %conv = zext i1 %cmp to i32, !dbg !7285
  store i32 1, i32* %tmp, align 4, !dbg !7285
  %4 = load i32, i32* %tmp, align 4, !dbg !7285
  br label %do.body2, !dbg !7287

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7288

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7289

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7291, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7295, metadata !DIExpression()), !dbg !7294
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7294
  %conv8 = zext i1 %cmp7 to i32, !dbg !7294
  store i32 1, i32* %tmp9, align 4, !dbg !7294
  %5 = load i32, i32* %tmp9, align 4, !dbg !7294
  %call = call i64 @arch_local_irq_save() #11, !dbg !7296
  store i64 %call, i64* %flags, align 8, !dbg !7296
  br label %do.end, !dbg !7296

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7289

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7288

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7297, !srcloc !7298
  br label %do.body12, !dbg !7297

do.body12:                                        ; preds = %do.body11
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7299
  %queue_lock = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %6, i32 0, i32 26, !dbg !7299
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7300
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !7301
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !7301
  br label %do.end14, !dbg !7299

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7297

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7288

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7287

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7282

do.end18:                                         ; preds = %do.end17
  br label %while.cond, !dbg !7302

while.cond:                                       ; preds = %if.end65, %if.then42, %do.end18
  %9 = load i8*, i8** %base, align 8, !dbg !7303
  %call19 = call zeroext i1 @DAC960_PD_hw_mbox_status_available(i8* %9) #11, !dbg !7304
  br i1 %call19, label %while.body, label %while.end, !dbg !7302

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %id, metadata !7305, metadata !DIExpression()), !dbg !7307
  %10 = load i8*, i8** %base, align 8, !dbg !7308
  %call20 = call zeroext i8 @DAC960_PD_read_status_cmd_ident(i8* %10) #11, !dbg !7309
  store i8 %call20, i8* %id, align 1, !dbg !7307
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !7310, metadata !DIExpression()), !dbg !7311
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %scmd, align 8, !dbg !7311
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !7312, metadata !DIExpression()), !dbg !7313
  store %struct.myrb_cmdblk* null, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7313
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !7314, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.declare(metadata i8* %op, metadata !7316, metadata !DIExpression()), !dbg !7317
  %11 = load i8, i8* %id, align 1, !dbg !7318
  %conv21 = zext i8 %11 to i32, !dbg !7318
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !7320
  br i1 %cmp22, label %if.then, label %if.else, !dbg !7321

if.then:                                          ; preds = %while.body
  %12 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7322
  %dcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %12, i32 0, i32 52, !dbg !7323
  store %struct.myrb_cmdblk* %dcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7324
  br label %if.end34, !dbg !7325

if.else:                                          ; preds = %while.body
  %13 = load i8, i8* %id, align 1, !dbg !7326
  %conv24 = zext i8 %13 to i32, !dbg !7326
  %cmp25 = icmp eq i32 %conv24, 2, !dbg !7328
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !7329

if.then27:                                        ; preds = %if.else
  %14 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7330
  %mcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %14, i32 0, i32 53, !dbg !7331
  store %struct.myrb_cmdblk* %mcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7332
  br label %if.end33, !dbg !7333

if.else28:                                        ; preds = %if.else
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7334
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %15, i32 0, i32 18, !dbg !7336
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7336
  %17 = load i8, i8* %id, align 1, !dbg !7337
  %conv29 = zext i8 %17 to i32, !dbg !7337
  %sub = sub i32 %conv29, 3, !dbg !7338
  %call30 = call %struct.scsi_cmnd* @scsi_host_find_tag(%struct.Scsi_Host* %16, i32 %sub) #11, !dbg !7339
  store %struct.scsi_cmnd* %call30, %struct.scsi_cmnd** %scmd, align 8, !dbg !7340
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7341
  %tobool = icmp ne %struct.scsi_cmnd* %18, null, !dbg !7341
  br i1 %tobool, label %if.then31, label %if.end, !dbg !7343

if.then31:                                        ; preds = %if.else28
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7344
  %call32 = call i8* @scsi_cmd_priv(%struct.scsi_cmnd* %19) #11, !dbg !7345
  %20 = bitcast i8* %call32 to %struct.myrb_cmdblk*, !dbg !7345
  store %struct.myrb_cmdblk* %20, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7346
  br label %if.end, !dbg !7347

if.end:                                           ; preds = %if.then31, %if.else28
  br label %if.end33

if.end33:                                         ; preds = %if.end, %if.then27
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then
  %21 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7348
  %tobool35 = icmp ne %struct.myrb_cmdblk* %21, null, !dbg !7348
  br i1 %tobool35, label %if.then36, label %if.else38, !dbg !7350

if.then36:                                        ; preds = %if.end34
  %22 = load i8*, i8** %base, align 8, !dbg !7351
  %call37 = call zeroext i16 @DAC960_PD_read_status(i8* %22) #11, !dbg !7352
  %23 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7353
  %status = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %23, i32 0, i32 1, !dbg !7354
  store i16 %call37, i16* %status, align 8, !dbg !7355
  br label %if.end40, !dbg !7353

if.else38:                                        ; preds = %if.end34
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7356
  %pdev = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 17, !dbg !7356
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7356
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !7356
  %26 = load i8, i8* %id, align 1, !dbg !7356
  %conv39 = zext i8 %26 to i32, !dbg !7356
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i32 %conv39) #12, !dbg !7356
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %if.then36
  %27 = load i8*, i8** %base, align 8, !dbg !7357
  call void @DAC960_PD_ack_intr(i8* %27) #11, !dbg !7358
  %28 = load i8*, i8** %base, align 8, !dbg !7359
  call void @DAC960_PD_ack_hw_mbox_status(i8* %28) #11, !dbg !7360
  %29 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7361
  %tobool41 = icmp ne %struct.myrb_cmdblk* %29, null, !dbg !7361
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !7363

if.then42:                                        ; preds = %if.end40
  br label %while.cond, !dbg !7364, !llvm.loop !7365

if.end43:                                         ; preds = %if.end40
  %30 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7367
  %mbox44 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %30, i32 0, i32 0, !dbg !7368
  store %union.myrb_cmd_mbox* %mbox44, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !7369
  %31 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !7370
  %common = bitcast %union.myrb_cmd_mbox* %31 to %struct.anon.77*, !dbg !7371
  %opcode = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common, i32 0, i32 0, !dbg !7372
  %32 = load i8, i8* %opcode, align 4, !dbg !7372
  store i8 %32, i8* %op, align 1, !dbg !7373
  %33 = load i8, i8* %op, align 1, !dbg !7374
  %conv45 = zext i8 %33 to i32, !dbg !7374
  switch i32 %conv45, label %sw.default [
    i32 5, label %sw.bb
    i32 2, label %sw.bb48
    i32 3, label %sw.bb51
    i32 130, label %sw.bb54
    i32 131, label %sw.bb57
  ], !dbg !7375

sw.bb:                                            ; preds = %if.end43
  %34 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !7376
  %common46 = bitcast %union.myrb_cmd_mbox* %34 to %struct.anon.77*, !dbg !7378
  %opcode47 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common46, i32 0, i32 0, !dbg !7379
  store i8 83, i8* %opcode47, align 4, !dbg !7380
  %35 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7381
  %enquiry = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %35, i32 0, i32 55, !dbg !7382
  %36 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry, align 8, !dbg !7382
  %37 = bitcast %struct.myrb_enquiry* %36 to i8*, !dbg !7381
  call void @myrb_translate_enquiry(i8* %37) #11, !dbg !7383
  br label %sw.epilog, !dbg !7384

sw.bb48:                                          ; preds = %if.end43
  %38 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !7385
  %common49 = bitcast %union.myrb_cmd_mbox* %38 to %struct.anon.77*, !dbg !7386
  %opcode50 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common49, i32 0, i32 0, !dbg !7387
  store i8 54, i8* %opcode50, align 4, !dbg !7388
  %39 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7389
  call void @myrb_translate_from_rw_command(%struct.myrb_cmdblk* %39) #11, !dbg !7390
  br label %sw.epilog, !dbg !7391

sw.bb51:                                          ; preds = %if.end43
  %40 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !7392
  %common52 = bitcast %union.myrb_cmd_mbox* %40 to %struct.anon.77*, !dbg !7393
  %opcode53 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common52, i32 0, i32 0, !dbg !7394
  store i8 55, i8* %opcode53, align 4, !dbg !7395
  %41 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7396
  call void @myrb_translate_from_rw_command(%struct.myrb_cmdblk* %41) #11, !dbg !7397
  br label %sw.epilog, !dbg !7398

sw.bb54:                                          ; preds = %if.end43
  %42 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !7399
  %common55 = bitcast %union.myrb_cmd_mbox* %42 to %struct.anon.77*, !dbg !7400
  %opcode56 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common55, i32 0, i32 0, !dbg !7401
  store i8 -74, i8* %opcode56, align 4, !dbg !7402
  %43 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7403
  call void @myrb_translate_from_rw_command(%struct.myrb_cmdblk* %43) #11, !dbg !7404
  br label %sw.epilog, !dbg !7405

sw.bb57:                                          ; preds = %if.end43
  %44 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !7406
  %common58 = bitcast %union.myrb_cmd_mbox* %44 to %struct.anon.77*, !dbg !7407
  %opcode59 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common58, i32 0, i32 0, !dbg !7408
  store i8 -73, i8* %opcode59, align 4, !dbg !7409
  %45 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7410
  call void @myrb_translate_from_rw_command(%struct.myrb_cmdblk* %45) #11, !dbg !7411
  br label %sw.epilog, !dbg !7412

sw.default:                                       ; preds = %if.end43
  br label %sw.epilog, !dbg !7413

sw.epilog:                                        ; preds = %sw.default, %sw.bb57, %sw.bb54, %sw.bb51, %sw.bb48, %sw.bb
  %46 = load i8, i8* %id, align 1, !dbg !7414
  %conv60 = zext i8 %46 to i32, !dbg !7414
  %cmp61 = icmp slt i32 %conv60, 3, !dbg !7416
  br i1 %cmp61, label %if.then63, label %if.else64, !dbg !7417

if.then63:                                        ; preds = %sw.epilog
  %47 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7418
  %48 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7419
  call void @myrb_handle_cmdblk(%struct.myrb_hba* %47, %struct.myrb_cmdblk* %48) #11, !dbg !7420
  br label %if.end65, !dbg !7420

if.else64:                                        ; preds = %sw.epilog
  %49 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7421
  %50 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !7422
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7423
  call void @myrb_handle_scsi(%struct.myrb_hba* %49, %struct.myrb_cmdblk* %50, %struct.scsi_cmnd* %51) #11, !dbg !7424
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.then63
  br label %while.cond, !dbg !7302, !llvm.loop !7365

while.end:                                        ; preds = %while.cond
  %52 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !7425
  %queue_lock66 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %52, i32 0, i32 26, !dbg !7426
  %53 = load i64, i64* %flags, align 8, !dbg !7427
  store %struct.spinlock* %queue_lock66, %struct.spinlock** %lock.addr.i67, align 8
  store i64 %53, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1034, metadata !6710, metadata !DIExpression()) #7, !dbg !7428
  call void @llvm.dbg.declare(metadata !1034, metadata !6714, metadata !DIExpression()) #7, !dbg !7428
  store i32 1, i32* %tmp.i, align 4, !dbg !7428
  %54 = load i32, i32* %tmp.i, align 4, !dbg !7428
  call void @llvm.dbg.declare(metadata !1034, metadata !6715, metadata !DIExpression()) #7, !dbg !7429
  call void @llvm.dbg.declare(metadata !1034, metadata !6721, metadata !DIExpression()) #7, !dbg !7429
  store i32 1, i32* %tmp8.i, align 4, !dbg !7429
  %55 = load i32, i32* %tmp8.i, align 4, !dbg !7429
  %56 = load i64, i64* %flags.addr.i, align 8, !dbg !7430
  call void @arch_local_irq_restore(i64 %56) #13, !dbg !7430
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7431, !srcloc !6725
  %57 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !7432
  %58 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %57, i32 0, i32 0, !dbg !7432
  %rlock.i68 = bitcast %union.anon.1* %58 to %struct.raw_spinlock*, !dbg !7432
  ret i32 1, !dbg !7433
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @myrb_cleanup_module() #1 section ".exit.text" !dbg !7434 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @myrb_pci_driver) #11, !dbg !7435
  %0 = load %struct.raid_template*, %struct.raid_template** @myrb_raid_template, align 8, !dbg !7436
  call void @raid_class_release(%struct.raid_template* %0) #11, !dbg !7437
  ret void, !dbg !7438
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #2

; Function Attrs: noredzone
declare dso_local void @raid_class_release(%struct.raid_template*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_init_module() #1 section ".init.text" !dbg !7439 {
entry:
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7442, metadata !DIExpression()), !dbg !7443
  %call = call %struct.raid_template* @raid_class_attach(%struct.raid_function_template* @myrb_raid_functions) #11, !dbg !7444
  store %struct.raid_template* %call, %struct.raid_template** @myrb_raid_template, align 8, !dbg !7445
  %0 = load %struct.raid_template*, %struct.raid_template** @myrb_raid_template, align 8, !dbg !7446
  %tobool = icmp ne %struct.raid_template* %0, null, !dbg !7446
  br i1 %tobool, label %if.end, label %if.then, !dbg !7448

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !7449
  br label %return, !dbg !7449

if.end:                                           ; preds = %entry
  %call1 = call i32 @__pci_register_driver(%struct.pci_driver* @myrb_pci_driver, %struct.module* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)) #11, !dbg !7450
  store i32 %call1, i32* %ret, align 4, !dbg !7451
  %1 = load i32, i32* %ret, align 4, !dbg !7452
  %tobool2 = icmp ne i32 %1, 0, !dbg !7452
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7454

if.then3:                                         ; preds = %if.end
  %2 = load %struct.raid_template*, %struct.raid_template** @myrb_raid_template, align 8, !dbg !7455
  call void @raid_class_release(%struct.raid_template* %2) #11, !dbg !7456
  br label %if.end4, !dbg !7456

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i32, i32* %ret, align 4, !dbg !7457
  store i32 %3, i32* %retval, align 4, !dbg !7458
  br label %return, !dbg !7458

return:                                           ; preds = %if.end4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7459
  ret i32 %4, !dbg !7459
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_LA_disable_intr(i8* %base) #0 !dbg !7460 {
entry:
  %base.addr = alloca i8*, align 8
  %odb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.declare(metadata i8* %odb, metadata !7463, metadata !DIExpression()), !dbg !7464
  store i8 -1, i8* %odb, align 1, !dbg !7464
  %0 = load i8, i8* %odb, align 1, !dbg !7465
  %conv = zext i8 %0 to i32, !dbg !7465
  %or = or i32 %conv, 4, !dbg !7465
  %conv1 = trunc i32 %or to i8, !dbg !7465
  store i8 %conv1, i8* %odb, align 1, !dbg !7465
  %1 = load i8, i8* %odb, align 1, !dbg !7466
  %2 = load i8*, i8** %base.addr, align 8, !dbg !7467
  %add.ptr = getelementptr i8, i8* %2, i64 52, !dbg !7468
  call void @writeb(i8 zeroext %1, i8* %add.ptr) #11, !dbg !7469
  ret void, !dbg !7470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_LA_ack_hw_mbox_status(i8* %base) #0 !dbg !7471 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7472, metadata !DIExpression()), !dbg !7473
  %0 = load i8*, i8** %base.addr, align 8, !dbg !7474
  %add.ptr = getelementptr i8, i8* %0, i64 96, !dbg !7475
  call void @writeb(i8 zeroext 2, i8* %add.ptr) #11, !dbg !7476
  ret void, !dbg !7477
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_LA_init_in_progress(i8* %base) #0 !dbg !7478 {
entry:
  %base.addr = alloca i8*, align 8
  %idb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7481, metadata !DIExpression()), !dbg !7482
  call void @llvm.dbg.declare(metadata i8* %idb, metadata !7483, metadata !DIExpression()), !dbg !7484
  %0 = load i8*, i8** %base.addr, align 8, !dbg !7485
  %add.ptr = getelementptr i8, i8* %0, i64 96, !dbg !7486
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !7487
  store i8 %call, i8* %idb, align 1, !dbg !7484
  %1 = load i8, i8* %idb, align 1, !dbg !7488
  %conv = zext i8 %1 to i32, !dbg !7488
  %and = and i32 %conv, 2, !dbg !7489
  %tobool = icmp ne i32 %and, 0, !dbg !7490
  %lnot = xor i1 %tobool, true, !dbg !7490
  ret i1 %lnot, !dbg !7491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_LA_read_error_status(i8* %base, i8* %error, i8* %param0, i8* %param1) #0 !dbg !7492 {
entry:
  %retval = alloca i1, align 1
  %base.addr = alloca i8*, align 8
  %error.addr = alloca i8*, align 8
  %param0.addr = alloca i8*, align 8
  %param1.addr = alloca i8*, align 8
  %errsts = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  store i8* %error, i8** %error.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %error.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  store i8* %param0, i8** %param0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param0.addr, metadata !7499, metadata !DIExpression()), !dbg !7500
  store i8* %param1, i8** %param1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param1.addr, metadata !7501, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.declare(metadata i8* %errsts, metadata !7503, metadata !DIExpression()), !dbg !7504
  %0 = load i8*, i8** %base.addr, align 8, !dbg !7505
  %add.ptr = getelementptr i8, i8* %0, i64 99, !dbg !7506
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !7507
  store i8 %call, i8* %errsts, align 1, !dbg !7504
  %1 = load i8, i8* %errsts, align 1, !dbg !7508
  %conv = zext i8 %1 to i32, !dbg !7508
  %and = and i32 %conv, 2, !dbg !7510
  %tobool = icmp ne i32 %and, 0, !dbg !7510
  br i1 %tobool, label %if.end, label %if.then, !dbg !7511

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7512
  br label %return, !dbg !7512

if.end:                                           ; preds = %entry
  %2 = load i8, i8* %errsts, align 1, !dbg !7513
  %conv1 = zext i8 %2 to i32, !dbg !7513
  %and2 = and i32 %conv1, -3, !dbg !7513
  %conv3 = trunc i32 %and2 to i8, !dbg !7513
  store i8 %conv3, i8* %errsts, align 1, !dbg !7513
  %3 = load i8, i8* %errsts, align 1, !dbg !7514
  %4 = load i8*, i8** %error.addr, align 8, !dbg !7515
  store i8 %3, i8* %4, align 1, !dbg !7516
  %5 = load i8*, i8** %base.addr, align 8, !dbg !7517
  %add.ptr4 = getelementptr i8, i8* %5, i64 80, !dbg !7518
  %call5 = call zeroext i8 @readb(i8* %add.ptr4) #11, !dbg !7519
  %6 = load i8*, i8** %param0.addr, align 8, !dbg !7520
  store i8 %call5, i8* %6, align 1, !dbg !7521
  %7 = load i8*, i8** %base.addr, align 8, !dbg !7522
  %add.ptr6 = getelementptr i8, i8* %7, i64 81, !dbg !7523
  %call7 = call zeroext i8 @readb(i8* %add.ptr6) #11, !dbg !7524
  %8 = load i8*, i8** %param1.addr, align 8, !dbg !7525
  store i8 %call7, i8* %8, align 1, !dbg !7526
  %9 = load i8*, i8** %base.addr, align 8, !dbg !7527
  %add.ptr8 = getelementptr i8, i8* %9, i64 99, !dbg !7528
  call void @writeb(i8 zeroext -1, i8* %add.ptr8) #11, !dbg !7529
  store i1 true, i1* %retval, align 1, !dbg !7530
  br label %return, !dbg !7530

return:                                           ; preds = %if.end, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !7531
  ret i1 %10, !dbg !7531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @myrb_err_status(%struct.myrb_hba* %cb, i8 zeroext %error, i8 zeroext %parm0, i8 zeroext %parm1) #0 !dbg !7532 {
entry:
  %retval = alloca i1, align 1
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %error.addr = alloca i8, align 1
  %parm0.addr = alloca i8, align 1
  %parm1.addr = alloca i8, align 1
  %pdev = alloca %struct.pci_dev*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !7535, metadata !DIExpression()), !dbg !7536
  store i8 %error, i8* %error.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %error.addr, metadata !7537, metadata !DIExpression()), !dbg !7538
  store i8 %parm0, i8* %parm0.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %parm0.addr, metadata !7539, metadata !DIExpression()), !dbg !7540
  store i8 %parm1, i8* %parm1.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %parm1.addr, metadata !7541, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !7543, metadata !DIExpression()), !dbg !7544
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7545
  %pdev1 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 17, !dbg !7546
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !7546
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !7544
  %2 = load i8, i8* %error.addr, align 1, !dbg !7547
  %conv = zext i8 %2 to i32, !dbg !7547
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 8, label %sw.bb4
    i32 48, label %sw.bb6
    i32 96, label %sw.bb8
    i32 112, label %sw.bb10
    i32 144, label %sw.bb12
    i32 160, label %sw.bb16
    i32 176, label %sw.bb18
    i32 208, label %sw.bb20
    i32 240, label %sw.bb22
  ], !dbg !7548

sw.bb:                                            ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7549
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !7549
  %4 = load i8, i8* %parm1.addr, align 1, !dbg !7549
  %conv2 = zext i8 %4 to i32, !dbg !7549
  %5 = load i8, i8* %parm0.addr, align 1, !dbg !7549
  %conv3 = zext i8 %5 to i32, !dbg !7549
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 %conv2, i32 %conv3) #12, !dbg !7549
  br label %sw.epilog, !dbg !7551

sw.bb4:                                           ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7552
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !7552
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !7552
  br label %sw.epilog, !dbg !7553

sw.bb6:                                           ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7554
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !7554
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !7554
  br label %sw.epilog, !dbg !7555

sw.bb8:                                           ; preds = %entry
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7556
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !7556
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !7556
  br label %sw.epilog, !dbg !7557

sw.bb10:                                          ; preds = %entry
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7558
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !7558
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #12, !dbg !7558
  br label %sw.epilog, !dbg !7559

sw.bb12:                                          ; preds = %entry
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7560
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !7560
  %11 = load i8, i8* %parm1.addr, align 1, !dbg !7560
  %conv14 = zext i8 %11 to i32, !dbg !7560
  %12 = load i8, i8* %parm0.addr, align 1, !dbg !7560
  %conv15 = zext i8 %12 to i32, !dbg !7560
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev13, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), i32 %conv14, i32 %conv15) #12, !dbg !7560
  br label %sw.epilog, !dbg !7561

sw.bb16:                                          ; preds = %entry
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7562
  %dev17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !7562
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev17, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0)) #12, !dbg !7562
  br label %sw.epilog, !dbg !7563

sw.bb18:                                          ; preds = %entry
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7564
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !7564
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev19, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !7564
  br label %sw.epilog, !dbg !7565

sw.bb20:                                          ; preds = %entry
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7566
  %dev21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !7566
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev21, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !7566
  br label %sw.epilog, !dbg !7567

sw.bb22:                                          ; preds = %entry
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7568
  %dev23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !7568
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev23, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !7568
  store i1 true, i1* %retval, align 1, !dbg !7569
  br label %return, !dbg !7569

sw.default:                                       ; preds = %entry
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7570
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !7570
  %18 = load i8, i8* %error.addr, align 1, !dbg !7570
  %conv25 = zext i8 %18 to i32, !dbg !7570
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0), i32 %conv25) #12, !dbg !7570
  store i1 true, i1* %retval, align 1, !dbg !7571
  br label %return, !dbg !7571

sw.epilog:                                        ; preds = %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb
  store i1 false, i1* %retval, align 1, !dbg !7572
  br label %return, !dbg !7572

return:                                           ; preds = %sw.epilog, %sw.default, %sw.bb22
  %19 = load i1, i1* %retval, align 1, !dbg !7573
  ret i1 %19, !dbg !7573
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @myrb_enable_mmio(%struct.myrb_hba* %cb, i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)* %mmio_init_fn) #0 !dbg !7574 {
entry:
  %retval = alloca i1, align 1
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %mmio_init_fn.addr = alloca i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)*, align 8
  %base = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %err_table_size = alloca i64, align 8
  %ldev_info_size = alloca i64, align 8
  %cmd_mbox_mem = alloca %union.myrb_cmd_mbox*, align 8
  %stat_mbox_mem = alloca %struct.myrb_stat_mbox*, align 8
  %mbox = alloca %union.myrb_cmd_mbox, align 4
  %status = alloca i16, align 2
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !7581, metadata !DIExpression()), !dbg !7582
  store i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)* %mmio_init_fn, i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)** %mmio_init_fn.addr, align 8
  call void @llvm.dbg.declare(metadata i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)** %mmio_init_fn.addr, metadata !7583, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.declare(metadata i8** %base, metadata !7585, metadata !DIExpression()), !dbg !7586
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7587
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 38, !dbg !7588
  %1 = load i8*, i8** %io_base, align 8, !dbg !7588
  store i8* %1, i8** %base, align 8, !dbg !7586
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !7589, metadata !DIExpression()), !dbg !7590
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7591
  %pdev1 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 17, !dbg !7592
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !7592
  store %struct.pci_dev* %3, %struct.pci_dev** %pdev, align 8, !dbg !7590
  call void @llvm.dbg.declare(metadata i64* %err_table_size, metadata !7593, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.declare(metadata i64* %ldev_info_size, metadata !7595, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %cmd_mbox_mem, metadata !7597, metadata !DIExpression()), !dbg !7598
  call void @llvm.dbg.declare(metadata %struct.myrb_stat_mbox** %stat_mbox_mem, metadata !7599, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox* %mbox, metadata !7601, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.declare(metadata i16* %status, metadata !7603, metadata !DIExpression()), !dbg !7604
  %4 = bitcast %union.myrb_cmd_mbox* %mbox to i8*, !dbg !7605
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 16, i1 false), !dbg !7605
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7606
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !7608
  %call = call i32 @dma_set_mask(%struct.device* %dev, i64 4294967295) #11, !dbg !7609
  %tobool = icmp ne i32 %call, 0, !dbg !7609
  br i1 %tobool, label %if.then, label %if.end, !dbg !7610

if.then:                                          ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7611
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !7611
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !7611
  store i1 false, i1* %retval, align 1, !dbg !7613
  br label %return, !dbg !7613

if.end:                                           ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7614
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !7615
  %8 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7616
  %enquiry_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %8, i32 0, i32 56, !dbg !7617
  %call4 = call i8* @dma_alloc_coherent(%struct.device* %dev3, i64 256, i64* %enquiry_addr, i32 3264) #11, !dbg !7618
  %9 = bitcast i8* %call4 to %struct.myrb_enquiry*, !dbg !7618
  %10 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7619
  %enquiry = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %10, i32 0, i32 55, !dbg !7620
  store %struct.myrb_enquiry* %9, %struct.myrb_enquiry** %enquiry, align 8, !dbg !7621
  %11 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7622
  %enquiry5 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %11, i32 0, i32 55, !dbg !7624
  %12 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry5, align 8, !dbg !7624
  %tobool6 = icmp ne %struct.myrb_enquiry* %12, null, !dbg !7622
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !7625

if.then7:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !7626
  br label %return, !dbg !7626

if.end8:                                          ; preds = %if.end
  store i64 192, i64* %err_table_size, align 8, !dbg !7627
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7628
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !7629
  %14 = load i64, i64* %err_table_size, align 8, !dbg !7630
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7631
  %err_table_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %15, i32 0, i32 58, !dbg !7632
  %call10 = call i8* @dma_alloc_coherent(%struct.device* %dev9, i64 %14, i64* %err_table_addr, i32 3264) #11, !dbg !7633
  %16 = bitcast i8* %call10 to %struct.myrb_error_entry*, !dbg !7633
  %17 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7634
  %err_table = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %17, i32 0, i32 57, !dbg !7635
  store %struct.myrb_error_entry* %16, %struct.myrb_error_entry** %err_table, align 8, !dbg !7636
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7637
  %err_table11 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 57, !dbg !7639
  %19 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %err_table11, align 8, !dbg !7639
  %tobool12 = icmp ne %struct.myrb_error_entry* %19, null, !dbg !7637
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7640

if.then13:                                        ; preds = %if.end8
  store i1 false, i1* %retval, align 1, !dbg !7641
  br label %return, !dbg !7641

if.end14:                                         ; preds = %if.end8
  store i64 256, i64* %ldev_info_size, align 8, !dbg !7642
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7643
  %dev15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !7644
  %21 = load i64, i64* %ldev_info_size, align 8, !dbg !7645
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7646
  %ldev_info_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 61, !dbg !7647
  %call16 = call i8* @dma_alloc_coherent(%struct.device* %dev15, i64 %21, i64* %ldev_info_addr, i32 3264) #11, !dbg !7648
  %23 = bitcast i8* %call16 to %struct.myrb_ldev_info*, !dbg !7648
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7649
  %ldev_info_buf = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 60, !dbg !7650
  store %struct.myrb_ldev_info* %23, %struct.myrb_ldev_info** %ldev_info_buf, align 8, !dbg !7651
  %25 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7652
  %ldev_info_buf17 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %25, i32 0, i32 60, !dbg !7654
  %26 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info_buf17, align 8, !dbg !7654
  %tobool18 = icmp ne %struct.myrb_ldev_info* %26, null, !dbg !7652
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !7655

if.then19:                                        ; preds = %if.end14
  store i1 false, i1* %retval, align 1, !dbg !7656
  br label %return, !dbg !7656

if.end20:                                         ; preds = %if.end14
  %27 = load i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)*, i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)** %mmio_init_fn.addr, align 8, !dbg !7657
  %tobool21 = icmp ne i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)* %27, null, !dbg !7657
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !7659

if.then22:                                        ; preds = %if.end20
  store i1 true, i1* %retval, align 1, !dbg !7660
  br label %return, !dbg !7660

if.end23:                                         ; preds = %if.end20
  %28 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7661
  %cmd_mbox_size = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %28, i32 0, i32 40, !dbg !7662
  store i64 4096, i64* %cmd_mbox_size, align 8, !dbg !7663
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7664
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 41, !dbg !7665
  %30 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7666
  %cmd_mbox_size25 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %30, i32 0, i32 40, !dbg !7667
  %31 = load i64, i64* %cmd_mbox_size25, align 8, !dbg !7667
  %32 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7668
  %cmd_mbox_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %32, i32 0, i32 41, !dbg !7669
  %call26 = call i8* @dma_alloc_coherent(%struct.device* %dev24, i64 %31, i64* %cmd_mbox_addr, i32 3264) #11, !dbg !7670
  %33 = bitcast i8* %call26 to %union.myrb_cmd_mbox*, !dbg !7670
  %34 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7671
  %first_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %34, i32 0, i32 42, !dbg !7672
  store %union.myrb_cmd_mbox* %33, %union.myrb_cmd_mbox** %first_cmd_mbox, align 8, !dbg !7673
  %35 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7674
  %first_cmd_mbox27 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %35, i32 0, i32 42, !dbg !7676
  %36 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %first_cmd_mbox27, align 8, !dbg !7676
  %tobool28 = icmp ne %union.myrb_cmd_mbox* %36, null, !dbg !7674
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !7677

if.then29:                                        ; preds = %if.end23
  store i1 false, i1* %retval, align 1, !dbg !7678
  br label %return, !dbg !7678

if.end30:                                         ; preds = %if.end23
  %37 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7679
  %first_cmd_mbox31 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %37, i32 0, i32 42, !dbg !7680
  %38 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %first_cmd_mbox31, align 8, !dbg !7680
  store %union.myrb_cmd_mbox* %38, %union.myrb_cmd_mbox** %cmd_mbox_mem, align 8, !dbg !7681
  %39 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %cmd_mbox_mem, align 8, !dbg !7682
  %add.ptr = getelementptr %union.myrb_cmd_mbox, %union.myrb_cmd_mbox* %39, i64 255, !dbg !7682
  store %union.myrb_cmd_mbox* %add.ptr, %union.myrb_cmd_mbox** %cmd_mbox_mem, align 8, !dbg !7682
  %40 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %cmd_mbox_mem, align 8, !dbg !7683
  %41 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7684
  %last_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %41, i32 0, i32 43, !dbg !7685
  store %union.myrb_cmd_mbox* %40, %union.myrb_cmd_mbox** %last_cmd_mbox, align 8, !dbg !7686
  %42 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7687
  %first_cmd_mbox32 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %42, i32 0, i32 42, !dbg !7688
  %43 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %first_cmd_mbox32, align 8, !dbg !7688
  %44 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7689
  %next_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %44, i32 0, i32 44, !dbg !7690
  store %union.myrb_cmd_mbox* %43, %union.myrb_cmd_mbox** %next_cmd_mbox, align 8, !dbg !7691
  %45 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7692
  %last_cmd_mbox33 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %45, i32 0, i32 43, !dbg !7693
  %46 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %last_cmd_mbox33, align 8, !dbg !7693
  %47 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7694
  %prev_cmd_mbox1 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %47, i32 0, i32 45, !dbg !7695
  store %union.myrb_cmd_mbox* %46, %union.myrb_cmd_mbox** %prev_cmd_mbox1, align 8, !dbg !7696
  %48 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7697
  %last_cmd_mbox34 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %48, i32 0, i32 43, !dbg !7698
  %49 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %last_cmd_mbox34, align 8, !dbg !7698
  %add.ptr35 = getelementptr %union.myrb_cmd_mbox, %union.myrb_cmd_mbox* %49, i64 -1, !dbg !7699
  %50 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7700
  %prev_cmd_mbox2 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %50, i32 0, i32 46, !dbg !7701
  store %union.myrb_cmd_mbox* %add.ptr35, %union.myrb_cmd_mbox** %prev_cmd_mbox2, align 8, !dbg !7702
  %51 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7703
  %stat_mbox_size = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %51, i32 0, i32 47, !dbg !7704
  store i64 4096, i64* %stat_mbox_size, align 8, !dbg !7705
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7706
  %dev36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %52, i32 0, i32 41, !dbg !7707
  %53 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7708
  %stat_mbox_size37 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %53, i32 0, i32 47, !dbg !7709
  %54 = load i64, i64* %stat_mbox_size37, align 8, !dbg !7709
  %55 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7710
  %stat_mbox_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %55, i32 0, i32 48, !dbg !7711
  %call38 = call i8* @dma_alloc_coherent(%struct.device* %dev36, i64 %54, i64* %stat_mbox_addr, i32 3264) #11, !dbg !7712
  %56 = bitcast i8* %call38 to %struct.myrb_stat_mbox*, !dbg !7712
  %57 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7713
  %first_stat_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %57, i32 0, i32 49, !dbg !7714
  store %struct.myrb_stat_mbox* %56, %struct.myrb_stat_mbox** %first_stat_mbox, align 8, !dbg !7715
  %58 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7716
  %first_stat_mbox39 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %58, i32 0, i32 49, !dbg !7718
  %59 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %first_stat_mbox39, align 8, !dbg !7718
  %tobool40 = icmp ne %struct.myrb_stat_mbox* %59, null, !dbg !7716
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !7719

if.then41:                                        ; preds = %if.end30
  store i1 false, i1* %retval, align 1, !dbg !7720
  br label %return, !dbg !7720

if.end42:                                         ; preds = %if.end30
  %60 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7721
  %first_stat_mbox43 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %60, i32 0, i32 49, !dbg !7722
  %61 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %first_stat_mbox43, align 8, !dbg !7722
  store %struct.myrb_stat_mbox* %61, %struct.myrb_stat_mbox** %stat_mbox_mem, align 8, !dbg !7723
  %62 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %stat_mbox_mem, align 8, !dbg !7724
  %add.ptr44 = getelementptr %struct.myrb_stat_mbox, %struct.myrb_stat_mbox* %62, i64 1023, !dbg !7724
  store %struct.myrb_stat_mbox* %add.ptr44, %struct.myrb_stat_mbox** %stat_mbox_mem, align 8, !dbg !7724
  %63 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %stat_mbox_mem, align 8, !dbg !7725
  %64 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7726
  %last_stat_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %64, i32 0, i32 50, !dbg !7727
  store %struct.myrb_stat_mbox* %63, %struct.myrb_stat_mbox** %last_stat_mbox, align 8, !dbg !7728
  %65 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7729
  %first_stat_mbox45 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %65, i32 0, i32 49, !dbg !7730
  %66 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %first_stat_mbox45, align 8, !dbg !7730
  %67 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7731
  %next_stat_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %67, i32 0, i32 51, !dbg !7732
  store %struct.myrb_stat_mbox* %66, %struct.myrb_stat_mbox** %next_stat_mbox, align 8, !dbg !7733
  %68 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7734
  %dual_mode_interface = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %68, i32 0, i32 8, !dbg !7735
  store i8 1, i8* %dual_mode_interface, align 8, !dbg !7736
  %typeX = bitcast %union.myrb_cmd_mbox* %mbox to %struct.anon.87*, !dbg !7737
  %opcode = getelementptr inbounds %struct.anon.87, %struct.anon.87* %typeX, i32 0, i32 0, !dbg !7738
  store i8 43, i8* %opcode, align 4, !dbg !7739
  %typeX46 = bitcast %union.myrb_cmd_mbox* %mbox to %struct.anon.87*, !dbg !7740
  %id = getelementptr inbounds %struct.anon.87, %struct.anon.87* %typeX46, i32 0, i32 1, !dbg !7741
  store i8 0, i8* %id, align 1, !dbg !7742
  %typeX47 = bitcast %union.myrb_cmd_mbox* %mbox to %struct.anon.87*, !dbg !7743
  %opcode2 = getelementptr inbounds %struct.anon.87, %struct.anon.87* %typeX47, i32 0, i32 2, !dbg !7744
  store i8 20, i8* %opcode2, align 2, !dbg !7745
  %69 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7746
  %cmd_mbox_addr48 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %69, i32 0, i32 41, !dbg !7747
  %70 = load i64, i64* %cmd_mbox_addr48, align 8, !dbg !7747
  %conv = trunc i64 %70 to i32, !dbg !7746
  %typeX49 = bitcast %union.myrb_cmd_mbox* %mbox to %struct.anon.87*, !dbg !7748
  %cmd_mbox_addr50 = getelementptr inbounds %struct.anon.87, %struct.anon.87* %typeX49, i32 0, i32 4, !dbg !7749
  store i32 %conv, i32* %cmd_mbox_addr50, align 4, !dbg !7750
  %71 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7751
  %stat_mbox_addr51 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %71, i32 0, i32 48, !dbg !7752
  %72 = load i64, i64* %stat_mbox_addr51, align 8, !dbg !7752
  %conv52 = trunc i64 %72 to i32, !dbg !7751
  %typeX53 = bitcast %union.myrb_cmd_mbox* %mbox to %struct.anon.87*, !dbg !7753
  %stat_mbox_addr54 = getelementptr inbounds %struct.anon.87, %struct.anon.87* %typeX53, i32 0, i32 5, !dbg !7754
  store i32 %conv52, i32* %stat_mbox_addr54, align 4, !dbg !7755
  %73 = load i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)*, i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)** %mmio_init_fn.addr, align 8, !dbg !7756
  %74 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7757
  %75 = load i8*, i8** %base, align 8, !dbg !7758
  %call55 = call zeroext i16 %73(%struct.pci_dev* %74, i8* %75, %union.myrb_cmd_mbox* %mbox) #11, !dbg !7756
  store i16 %call55, i16* %status, align 2, !dbg !7759
  %76 = load i16, i16* %status, align 2, !dbg !7760
  %conv56 = zext i16 %76 to i32, !dbg !7760
  %cmp = icmp ne i32 %conv56, 0, !dbg !7762
  br i1 %cmp, label %if.then58, label %if.end70, !dbg !7763

if.then58:                                        ; preds = %if.end42
  %77 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7764
  %dual_mode_interface59 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %77, i32 0, i32 8, !dbg !7766
  store i8 0, i8* %dual_mode_interface59, align 8, !dbg !7767
  %typeX60 = bitcast %union.myrb_cmd_mbox* %mbox to %struct.anon.87*, !dbg !7768
  %opcode261 = getelementptr inbounds %struct.anon.87, %struct.anon.87* %typeX60, i32 0, i32 2, !dbg !7769
  store i8 16, i8* %opcode261, align 2, !dbg !7770
  %78 = load i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)*, i16 (%struct.pci_dev*, i8*, %union.myrb_cmd_mbox*)** %mmio_init_fn.addr, align 8, !dbg !7771
  %79 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7772
  %80 = load i8*, i8** %base, align 8, !dbg !7773
  %call62 = call zeroext i16 %78(%struct.pci_dev* %79, i8* %80, %union.myrb_cmd_mbox* %mbox) #11, !dbg !7771
  store i16 %call62, i16* %status, align 2, !dbg !7774
  %81 = load i16, i16* %status, align 2, !dbg !7775
  %conv63 = zext i16 %81 to i32, !dbg !7775
  %cmp64 = icmp ne i32 %conv63, 0, !dbg !7777
  br i1 %cmp64, label %if.then66, label %if.end69, !dbg !7778

if.then66:                                        ; preds = %if.then58
  %82 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7779
  %dev67 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %82, i32 0, i32 41, !dbg !7779
  %83 = load i16, i16* %status, align 2, !dbg !7779
  %conv68 = zext i16 %83 to i32, !dbg !7779
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev67, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.14, i64 0, i64 0), i32 %conv68) #12, !dbg !7779
  store i1 false, i1* %retval, align 1, !dbg !7781
  br label %return, !dbg !7781

if.end69:                                         ; preds = %if.then58
  br label %if.end70, !dbg !7782

if.end70:                                         ; preds = %if.end69, %if.end42
  store i1 true, i1* %retval, align 1, !dbg !7783
  br label %return, !dbg !7783

return:                                           ; preds = %if.end70, %if.then66, %if.then41, %if.then29, %if.then22, %if.then19, %if.then13, %if.then7, %if.then
  %84 = load i1, i1* %retval, align 1, !dbg !7784
  ret i1 %84, !dbg !7784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @DAC960_LA_mbox_init(%struct.pci_dev* %pdev, i8* %base, %union.myrb_cmd_mbox* %mbox) #0 !dbg !7785 {
entry:
  %retval = alloca i16, align 2
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %base.addr = alloca i8*, align 8
  %mbox.addr = alloca %union.myrb_cmd_mbox*, align 8
  %status = alloca i16, align 2
  %timeout = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7786, metadata !DIExpression()), !dbg !7787
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7788, metadata !DIExpression()), !dbg !7789
  store %union.myrb_cmd_mbox* %mbox, %union.myrb_cmd_mbox** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox.addr, metadata !7790, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.declare(metadata i16* %status, metadata !7792, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !7794, metadata !DIExpression()), !dbg !7795
  store i32 0, i32* %timeout, align 4, !dbg !7795
  br label %while.cond, !dbg !7796

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %timeout, align 4, !dbg !7797
  %cmp = icmp slt i32 %0, 1000000, !dbg !7798
  br i1 %cmp, label %while.body, label %while.end, !dbg !7796

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %base.addr, align 8, !dbg !7799
  %call = call zeroext i1 @DAC960_LA_hw_mbox_is_full(i8* %1) #11, !dbg !7802
  br i1 %call, label %if.end, label %if.then, !dbg !7803

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !7804

if.end:                                           ; preds = %while.body
  call void @__const_udelay(i64 42950) #11, !dbg !7805
  %2 = load i32, i32* %timeout, align 4, !dbg !7810
  %inc = add i32 %2, 1, !dbg !7810
  store i32 %inc, i32* %timeout, align 4, !dbg !7810
  br label %while.cond, !dbg !7796, !llvm.loop !7811

while.end:                                        ; preds = %if.then, %while.cond
  %3 = load i8*, i8** %base.addr, align 8, !dbg !7813
  %call1 = call zeroext i1 @DAC960_LA_hw_mbox_is_full(i8* %3) #11, !dbg !7815
  br i1 %call1, label %if.then2, label %if.end3, !dbg !7816

if.then2:                                         ; preds = %while.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7817
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !7817
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !7817
  store i16 264, i16* %retval, align 2, !dbg !7819
  br label %return, !dbg !7819

if.end3:                                          ; preds = %while.end
  %5 = load i8*, i8** %base.addr, align 8, !dbg !7820
  %6 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !7821
  call void @DAC960_LA_write_hw_mbox(i8* %5, %union.myrb_cmd_mbox* %6) #11, !dbg !7822
  %7 = load i8*, i8** %base.addr, align 8, !dbg !7823
  call void @DAC960_LA_hw_mbox_new_cmd(i8* %7) #11, !dbg !7824
  store i32 0, i32* %timeout, align 4, !dbg !7825
  br label %while.cond4, !dbg !7826

while.cond4:                                      ; preds = %if.end9, %if.end3
  %8 = load i32, i32* %timeout, align 4, !dbg !7827
  %cmp5 = icmp slt i32 %8, 1000000, !dbg !7828
  br i1 %cmp5, label %while.body6, label %while.end11, !dbg !7826

while.body6:                                      ; preds = %while.cond4
  %9 = load i8*, i8** %base.addr, align 8, !dbg !7829
  %call7 = call zeroext i1 @DAC960_LA_hw_mbox_status_available(i8* %9) #11, !dbg !7832
  br i1 %call7, label %if.then8, label %if.end9, !dbg !7833

if.then8:                                         ; preds = %while.body6
  br label %while.end11, !dbg !7834

if.end9:                                          ; preds = %while.body6
  call void @__const_udelay(i64 42950) #11, !dbg !7835
  %10 = load i32, i32* %timeout, align 4, !dbg !7840
  %inc10 = add i32 %10, 1, !dbg !7840
  store i32 %inc10, i32* %timeout, align 4, !dbg !7840
  br label %while.cond4, !dbg !7826, !llvm.loop !7841

while.end11:                                      ; preds = %if.then8, %while.cond4
  %11 = load i8*, i8** %base.addr, align 8, !dbg !7843
  %call12 = call zeroext i1 @DAC960_LA_hw_mbox_status_available(i8* %11) #11, !dbg !7845
  br i1 %call12, label %if.end15, label %if.then13, !dbg !7846

if.then13:                                        ; preds = %while.end11
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7847
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !7847
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0)) #12, !dbg !7847
  store i16 264, i16* %retval, align 2, !dbg !7849
  br label %return, !dbg !7849

if.end15:                                         ; preds = %while.end11
  %13 = load i8*, i8** %base.addr, align 8, !dbg !7850
  %call16 = call zeroext i16 @DAC960_LA_read_status(i8* %13) #11, !dbg !7851
  store i16 %call16, i16* %status, align 2, !dbg !7852
  %14 = load i8*, i8** %base.addr, align 8, !dbg !7853
  call void @DAC960_LA_ack_hw_mbox_intr(i8* %14) #11, !dbg !7854
  %15 = load i8*, i8** %base.addr, align 8, !dbg !7855
  call void @DAC960_LA_ack_hw_mbox_status(i8* %15) #11, !dbg !7856
  %16 = load i16, i16* %status, align 2, !dbg !7857
  store i16 %16, i16* %retval, align 2, !dbg !7858
  br label %return, !dbg !7858

return:                                           ; preds = %if.end15, %if.then13, %if.then2
  %17 = load i16, i16* %retval, align 2, !dbg !7859
  ret i16 %17, !dbg !7859
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_LA_reset_ctrl(i8* %base) #0 !dbg !7860 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7861, metadata !DIExpression()), !dbg !7862
  %0 = load i8*, i8** %base.addr, align 8, !dbg !7863
  %add.ptr = getelementptr i8, i8* %0, i64 96, !dbg !7864
  call void @writeb(i8 zeroext 8, i8* %add.ptr) #11, !dbg !7865
  ret void, !dbg !7866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_LA_enable_intr(i8* %base) #0 !dbg !7867 {
entry:
  %base.addr = alloca i8*, align 8
  %odb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.declare(metadata i8* %odb, metadata !7870, metadata !DIExpression()), !dbg !7871
  store i8 -1, i8* %odb, align 1, !dbg !7871
  %0 = load i8, i8* %odb, align 1, !dbg !7872
  %conv = zext i8 %0 to i32, !dbg !7872
  %and = and i32 %conv, -5, !dbg !7872
  %conv1 = trunc i32 %and to i8, !dbg !7872
  store i8 %conv1, i8* %odb, align 1, !dbg !7872
  %1 = load i8, i8* %odb, align 1, !dbg !7873
  %2 = load i8*, i8** %base.addr, align 8, !dbg !7874
  %add.ptr = getelementptr i8, i8* %2, i64 52, !dbg !7875
  call void @writeb(i8 zeroext %1, i8* %add.ptr) #11, !dbg !7876
  ret void, !dbg !7877
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_qcmd(%struct.myrb_hba* %cb, %struct.myrb_cmdblk* %cmd_blk) #0 !dbg !7878 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %cmd_blk.addr = alloca %struct.myrb_cmdblk*, align 8
  %base = alloca i8*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %next_mbox = alloca %union.myrb_cmd_mbox*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !7879, metadata !DIExpression()), !dbg !7880
  store %struct.myrb_cmdblk* %cmd_blk, %struct.myrb_cmdblk** %cmd_blk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk.addr, metadata !7881, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.declare(metadata i8** %base, metadata !7883, metadata !DIExpression()), !dbg !7884
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7885
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 38, !dbg !7886
  %1 = load i8*, i8** %io_base, align 8, !dbg !7886
  store i8* %1, i8** %base, align 8, !dbg !7884
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !7887, metadata !DIExpression()), !dbg !7888
  %2 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !7889
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %2, i32 0, i32 0, !dbg !7890
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !7888
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %next_mbox, metadata !7891, metadata !DIExpression()), !dbg !7892
  %3 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7893
  %next_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %3, i32 0, i32 44, !dbg !7894
  %4 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %next_cmd_mbox, align 8, !dbg !7894
  store %union.myrb_cmd_mbox* %4, %union.myrb_cmd_mbox** %next_mbox, align 8, !dbg !7892
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7895
  %write_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %5, i32 0, i32 28, !dbg !7896
  %6 = load void (%union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*)*, void (%union.myrb_cmd_mbox*, %union.myrb_cmd_mbox*)** %write_cmd_mbox, align 8, !dbg !7896
  %7 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %next_mbox, align 8, !dbg !7897
  %8 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !7898
  call void %6(%union.myrb_cmd_mbox* %7, %union.myrb_cmd_mbox* %8) #11, !dbg !7895
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7899
  %prev_cmd_mbox1 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %9, i32 0, i32 45, !dbg !7901
  %10 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %prev_cmd_mbox1, align 8, !dbg !7901
  %words = bitcast %union.myrb_cmd_mbox* %10 to [4 x i32]*, !dbg !7902
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %words, i64 0, i64 0, !dbg !7899
  %11 = load i32, i32* %arrayidx, align 4, !dbg !7899
  %cmp = icmp eq i32 %11, 0, !dbg !7903
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7904

lor.lhs.false:                                    ; preds = %entry
  %12 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7905
  %prev_cmd_mbox2 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %12, i32 0, i32 46, !dbg !7906
  %13 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %prev_cmd_mbox2, align 8, !dbg !7906
  %words2 = bitcast %union.myrb_cmd_mbox* %13 to [4 x i32]*, !dbg !7907
  %arrayidx3 = getelementptr [4 x i32], [4 x i32]* %words2, i64 0, i64 0, !dbg !7905
  %14 = load i32, i32* %arrayidx3, align 4, !dbg !7905
  %cmp4 = icmp eq i32 %14, 0, !dbg !7908
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7909

if.then:                                          ; preds = %lor.lhs.false, %entry
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7910
  %get_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %15, i32 0, i32 29, !dbg !7911
  %16 = load void (i8*)*, void (i8*)** %get_cmd_mbox, align 8, !dbg !7911
  %17 = load i8*, i8** %base, align 8, !dbg !7912
  call void %16(i8* %17) #11, !dbg !7910
  br label %if.end, !dbg !7910

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7913
  %prev_cmd_mbox15 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 45, !dbg !7914
  %19 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %prev_cmd_mbox15, align 8, !dbg !7914
  %20 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7915
  %prev_cmd_mbox26 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %20, i32 0, i32 46, !dbg !7916
  store %union.myrb_cmd_mbox* %19, %union.myrb_cmd_mbox** %prev_cmd_mbox26, align 8, !dbg !7917
  %21 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %next_mbox, align 8, !dbg !7918
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7919
  %prev_cmd_mbox17 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 45, !dbg !7920
  store %union.myrb_cmd_mbox* %21, %union.myrb_cmd_mbox** %prev_cmd_mbox17, align 8, !dbg !7921
  %23 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %next_mbox, align 8, !dbg !7922
  %incdec.ptr = getelementptr %union.myrb_cmd_mbox, %union.myrb_cmd_mbox* %23, i32 1, !dbg !7922
  store %union.myrb_cmd_mbox* %incdec.ptr, %union.myrb_cmd_mbox** %next_mbox, align 8, !dbg !7922
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7924
  %last_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 43, !dbg !7925
  %25 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %last_cmd_mbox, align 8, !dbg !7925
  %cmp8 = icmp ugt %union.myrb_cmd_mbox* %incdec.ptr, %25, !dbg !7926
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !7927

if.then9:                                         ; preds = %if.end
  %26 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7928
  %first_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %26, i32 0, i32 42, !dbg !7929
  %27 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %first_cmd_mbox, align 8, !dbg !7929
  store %union.myrb_cmd_mbox* %27, %union.myrb_cmd_mbox** %next_mbox, align 8, !dbg !7930
  br label %if.end10, !dbg !7931

if.end10:                                         ; preds = %if.then9, %if.end
  %28 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %next_mbox, align 8, !dbg !7932
  %29 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !7933
  %next_cmd_mbox11 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %29, i32 0, i32 44, !dbg !7934
  store %union.myrb_cmd_mbox* %28, %union.myrb_cmd_mbox** %next_cmd_mbox11, align 8, !dbg !7935
  ret void, !dbg !7936
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_LA_write_cmd_mbox(%union.myrb_cmd_mbox* %mem_mbox, %union.myrb_cmd_mbox* %mbox) #0 !dbg !7937 {
entry:
  %mem_mbox.addr = alloca %union.myrb_cmd_mbox*, align 8
  %mbox.addr = alloca %union.myrb_cmd_mbox*, align 8
  store %union.myrb_cmd_mbox* %mem_mbox, %union.myrb_cmd_mbox** %mem_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mem_mbox.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  store %union.myrb_cmd_mbox* %mbox, %union.myrb_cmd_mbox** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  %0 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !7942
  %words = bitcast %union.myrb_cmd_mbox* %0 to [4 x i32]*, !dbg !7943
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %words, i64 0, i64 1, !dbg !7942
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7942
  %2 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mem_mbox.addr, align 8, !dbg !7944
  %words1 = bitcast %union.myrb_cmd_mbox* %2 to [4 x i32]*, !dbg !7945
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %words1, i64 0, i64 1, !dbg !7944
  store i32 %1, i32* %arrayidx2, align 4, !dbg !7946
  %3 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !7947
  %words3 = bitcast %union.myrb_cmd_mbox* %3 to [4 x i32]*, !dbg !7948
  %arrayidx4 = getelementptr [4 x i32], [4 x i32]* %words3, i64 0, i64 2, !dbg !7947
  %4 = load i32, i32* %arrayidx4, align 4, !dbg !7947
  %5 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mem_mbox.addr, align 8, !dbg !7949
  %words5 = bitcast %union.myrb_cmd_mbox* %5 to [4 x i32]*, !dbg !7950
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %words5, i64 0, i64 2, !dbg !7949
  store i32 %4, i32* %arrayidx6, align 4, !dbg !7951
  %6 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !7952
  %words7 = bitcast %union.myrb_cmd_mbox* %6 to [4 x i32]*, !dbg !7953
  %arrayidx8 = getelementptr [4 x i32], [4 x i32]* %words7, i64 0, i64 3, !dbg !7952
  %7 = load i32, i32* %arrayidx8, align 4, !dbg !7952
  %8 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mem_mbox.addr, align 8, !dbg !7954
  %words9 = bitcast %union.myrb_cmd_mbox* %8 to [4 x i32]*, !dbg !7955
  %arrayidx10 = getelementptr [4 x i32], [4 x i32]* %words9, i64 0, i64 3, !dbg !7954
  store i32 %7, i32* %arrayidx10, align 4, !dbg !7956
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7957, !srcloc !7958
  %9 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !7959
  %words11 = bitcast %union.myrb_cmd_mbox* %9 to [4 x i32]*, !dbg !7960
  %arrayidx12 = getelementptr [4 x i32], [4 x i32]* %words11, i64 0, i64 0, !dbg !7959
  %10 = load i32, i32* %arrayidx12, align 4, !dbg !7959
  %11 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mem_mbox.addr, align 8, !dbg !7961
  %words13 = bitcast %union.myrb_cmd_mbox* %11 to [4 x i32]*, !dbg !7962
  %arrayidx14 = getelementptr [4 x i32], [4 x i32]* %words13, i64 0, i64 0, !dbg !7961
  store i32 %10, i32* %arrayidx14, align 4, !dbg !7963
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7964, !srcloc !7965
  ret void, !dbg !7966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_LA_mem_mbox_new_cmd(i8* %base) #0 !dbg !7967 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7968, metadata !DIExpression()), !dbg !7969
  %0 = load i8*, i8** %base.addr, align 8, !dbg !7970
  %add.ptr = getelementptr i8, i8* %0, i64 96, !dbg !7971
  call void @writeb(i8 zeroext 16, i8* %add.ptr) #11, !dbg !7972
  ret void, !dbg !7973
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_LA_hw_mbox_new_cmd(i8* %base) #0 !dbg !7974 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7975, metadata !DIExpression()), !dbg !7976
  %0 = load i8*, i8** %base.addr, align 8, !dbg !7977
  %add.ptr = getelementptr i8, i8* %0, i64 96, !dbg !7978
  call void @writeb(i8 zeroext 1, i8* %add.ptr) #11, !dbg !7979
  ret void, !dbg !7980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #0 !dbg !7981 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !7987, metadata !DIExpression()), !dbg !7988
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7989, metadata !DIExpression()), !dbg !7988
  %0 = load i8, i8* %val.addr, align 1, !dbg !7988
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !7988
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #7, !dbg !7988, !srcloc !7990
  ret void, !dbg !7988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #0 !dbg !7991 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7996, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !7998, metadata !DIExpression()), !dbg !7997
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !7997
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #7, !dbg !7997, !srcloc !7999
  store i8 %1, i8* %ret, align 1, !dbg !7997
  %2 = load i8, i8* %ret, align 1, !dbg !7997
  ret i8 %2, !dbg !7997
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: cold noredzone
declare dso_local void @_dev_notice(%struct.device*, i8*, ...) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #0 !dbg !8000 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8004, metadata !DIExpression()), !dbg !8005
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8006, metadata !DIExpression()), !dbg !8007
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !8008, metadata !DIExpression()), !dbg !8009
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !8010, metadata !DIExpression()), !dbg !8011
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8012
  %1 = load i64, i64* %size.addr, align 8, !dbg !8013
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !8014
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !8015
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !8016
  %and = and i32 %4, 8192, !dbg !8017
  %tobool = icmp ne i32 %and, 0, !dbg !8018
  %5 = zext i1 %tobool to i64, !dbg !8018
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !8018
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #11, !dbg !8019
  ret i8* %call, !dbg !8020
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_LA_hw_mbox_is_full(i8* %base) #0 !dbg !8021 {
entry:
  %base.addr = alloca i8*, align 8
  %idb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8022, metadata !DIExpression()), !dbg !8023
  call void @llvm.dbg.declare(metadata i8* %idb, metadata !8024, metadata !DIExpression()), !dbg !8025
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8026
  %add.ptr = getelementptr i8, i8* %0, i64 96, !dbg !8027
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8028
  store i8 %call, i8* %idb, align 1, !dbg !8025
  %1 = load i8, i8* %idb, align 1, !dbg !8029
  %conv = zext i8 %1 to i32, !dbg !8029
  %and = and i32 %conv, 1, !dbg !8030
  %tobool = icmp ne i32 %and, 0, !dbg !8031
  %lnot = xor i1 %tobool, true, !dbg !8031
  ret i1 %lnot, !dbg !8032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_LA_write_hw_mbox(i8* %base, %union.myrb_cmd_mbox* %mbox) #0 !dbg !8033 {
entry:
  %base.addr = alloca i8*, align 8
  %mbox.addr = alloca %union.myrb_cmd_mbox*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8036, metadata !DIExpression()), !dbg !8037
  store %union.myrb_cmd_mbox* %mbox, %union.myrb_cmd_mbox** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox.addr, metadata !8038, metadata !DIExpression()), !dbg !8039
  %0 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8040
  %words = bitcast %union.myrb_cmd_mbox* %0 to [4 x i32]*, !dbg !8041
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %words, i64 0, i64 0, !dbg !8040
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8040
  %2 = load i8*, i8** %base.addr, align 8, !dbg !8042
  %add.ptr = getelementptr i8, i8* %2, i64 80, !dbg !8043
  call void @writel(i32 %1, i8* %add.ptr) #11, !dbg !8044
  %3 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8045
  %words1 = bitcast %union.myrb_cmd_mbox* %3 to [4 x i32]*, !dbg !8046
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %words1, i64 0, i64 1, !dbg !8045
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !8045
  %5 = load i8*, i8** %base.addr, align 8, !dbg !8047
  %add.ptr3 = getelementptr i8, i8* %5, i64 84, !dbg !8048
  call void @writel(i32 %4, i8* %add.ptr3) #11, !dbg !8049
  %6 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8050
  %words4 = bitcast %union.myrb_cmd_mbox* %6 to [4 x i32]*, !dbg !8051
  %arrayidx5 = getelementptr [4 x i32], [4 x i32]* %words4, i64 0, i64 2, !dbg !8050
  %7 = load i32, i32* %arrayidx5, align 4, !dbg !8050
  %8 = load i8*, i8** %base.addr, align 8, !dbg !8052
  %add.ptr6 = getelementptr i8, i8* %8, i64 88, !dbg !8053
  call void @writel(i32 %7, i8* %add.ptr6) #11, !dbg !8054
  %9 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8055
  %bytes = bitcast %union.myrb_cmd_mbox* %9 to [16 x i8]*, !dbg !8056
  %arrayidx7 = getelementptr [16 x i8], [16 x i8]* %bytes, i64 0, i64 12, !dbg !8055
  %10 = load i8, i8* %arrayidx7, align 4, !dbg !8055
  %11 = load i8*, i8** %base.addr, align 8, !dbg !8057
  %add.ptr8 = getelementptr i8, i8* %11, i64 92, !dbg !8058
  call void @writeb(i8 zeroext %10, i8* %add.ptr8) #11, !dbg !8059
  ret void, !dbg !8060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_LA_hw_mbox_status_available(i8* %base) #0 !dbg !8061 {
entry:
  %base.addr = alloca i8*, align 8
  %odb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8062, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.declare(metadata i8* %odb, metadata !8064, metadata !DIExpression()), !dbg !8065
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8066
  %add.ptr = getelementptr i8, i8* %0, i64 97, !dbg !8067
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8068
  store i8 %call, i8* %odb, align 1, !dbg !8065
  %1 = load i8, i8* %odb, align 1, !dbg !8069
  %conv = zext i8 %1 to i32, !dbg !8069
  %and = and i32 %conv, 1, !dbg !8070
  %tobool = icmp ne i32 %and, 0, !dbg !8069
  ret i1 %tobool, !dbg !8071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @DAC960_LA_read_status(i8* %base) #0 !dbg !8072 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8075, metadata !DIExpression()), !dbg !8076
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8077
  %add.ptr = getelementptr i8, i8* %0, i64 94, !dbg !8078
  %call = call zeroext i16 @readw(i8* %add.ptr) #11, !dbg !8079
  ret i16 %call, !dbg !8080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_LA_ack_hw_mbox_intr(i8* %base) #0 !dbg !8081 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8082, metadata !DIExpression()), !dbg !8083
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8084
  %add.ptr = getelementptr i8, i8* %0, i64 97, !dbg !8085
  call void @writeb(i8 zeroext 1, i8* %add.ptr) #11, !dbg !8086
  ret void, !dbg !8087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !8088 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8091, metadata !DIExpression()), !dbg !8092
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8093, metadata !DIExpression()), !dbg !8092
  %0 = load i32, i32* %val.addr, align 4, !dbg !8092
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8092
  %2 = bitcast i8* %1 to i32*, !dbg !8092
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #7, !dbg !8092, !srcloc !8094
  ret void, !dbg !8092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #0 !dbg !8095 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8098, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !8100, metadata !DIExpression()), !dbg !8099
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !8099
  %1 = bitcast i8* %0 to i16*, !dbg !8099
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #7, !dbg !8099, !srcloc !8101
  store i16 %2, i16* %ret, align 2, !dbg !8099
  %3 = load i16, i16* %ret, align 2, !dbg !8099
  ret i16 %3, !dbg !8099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !8102 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !8106, metadata !DIExpression()), !dbg !8107
  %call = call i64 @arch_local_save_flags() #11, !dbg !8108
  store i64 %call, i64* %f, align 8, !dbg !8109
  call void @arch_local_irq_disable() #11, !dbg !8110
  %0 = load i64, i64* %f, align 8, !dbg !8111
  ret i64 %0, !dbg !8112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_LA_ack_intr(i8* %base) #0 !dbg !8113 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8114, metadata !DIExpression()), !dbg !8115
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8116
  %add.ptr = getelementptr i8, i8* %0, i64 97, !dbg !8117
  call void @writeb(i8 zeroext 3, i8* %add.ptr) #11, !dbg !8118
  ret void, !dbg !8119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scsi_cmnd* @scsi_host_find_tag(%struct.Scsi_Host* %shost, i32 %tag) #0 !dbg !8120 {
entry:
  %retval = alloca %struct.scsi_cmnd*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %tag.addr = alloca i32, align 4
  %req = alloca %struct.request*, align 8
  %hwq = alloca i16, align 2
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !8124, metadata !DIExpression()), !dbg !8125
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8126, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !8128, metadata !DIExpression()), !dbg !8129
  store %struct.request* null, %struct.request** %req, align 8, !dbg !8129
  call void @llvm.dbg.declare(metadata i16* %hwq, metadata !8130, metadata !DIExpression()), !dbg !8131
  %0 = load i32, i32* %tag.addr, align 4, !dbg !8132
  %cmp = icmp eq i32 %0, -1, !dbg !8134
  br i1 %cmp, label %if.then, label %if.end, !dbg !8135

if.then:                                          ; preds = %entry
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %retval, align 8, !dbg !8136
  br label %return, !dbg !8136

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %tag.addr, align 4, !dbg !8137
  %call = call zeroext i16 @blk_mq_unique_tag_to_hwq(i32 %1) #11, !dbg !8138
  store i16 %call, i16* %hwq, align 2, !dbg !8139
  %2 = load i16, i16* %hwq, align 2, !dbg !8140
  %conv = zext i16 %2 to i32, !dbg !8140
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8142
  %tag_set = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 12, !dbg !8143
  %nr_hw_queues = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tag_set, i32 0, i32 3, !dbg !8144
  %4 = load i32, i32* %nr_hw_queues, align 8, !dbg !8144
  %cmp1 = icmp ult i32 %conv, %4, !dbg !8145
  br i1 %cmp1, label %if.then3, label %if.end8, !dbg !8146

if.then3:                                         ; preds = %if.end
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8147
  %tag_set4 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 12, !dbg !8149
  %tags = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tag_set4, i32 0, i32 14, !dbg !8150
  %6 = load %struct.blk_mq_tags**, %struct.blk_mq_tags*** %tags, align 8, !dbg !8150
  %7 = load i16, i16* %hwq, align 2, !dbg !8151
  %idxprom = zext i16 %7 to i64, !dbg !8147
  %arrayidx = getelementptr %struct.blk_mq_tags*, %struct.blk_mq_tags** %6, i64 %idxprom, !dbg !8147
  %8 = load %struct.blk_mq_tags*, %struct.blk_mq_tags** %arrayidx, align 8, !dbg !8147
  %9 = load i32, i32* %tag.addr, align 4, !dbg !8152
  %call5 = call zeroext i16 @blk_mq_unique_tag_to_tag(i32 %9) #11, !dbg !8153
  %conv6 = zext i16 %call5 to i32, !dbg !8153
  %call7 = call %struct.request* @blk_mq_tag_to_rq(%struct.blk_mq_tags* %8, i32 %conv6) #11, !dbg !8154
  store %struct.request* %call7, %struct.request** %req, align 8, !dbg !8155
  br label %if.end8, !dbg !8156

if.end8:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.request*, %struct.request** %req, align 8, !dbg !8157
  %tobool = icmp ne %struct.request* %10, null, !dbg !8157
  br i1 %tobool, label %lor.lhs.false, label %if.then11, !dbg !8159

lor.lhs.false:                                    ; preds = %if.end8
  %11 = load %struct.request*, %struct.request** %req, align 8, !dbg !8160
  %call9 = call i32 @blk_mq_request_started(%struct.request* %11) #11, !dbg !8161
  %tobool10 = icmp ne i32 %call9, 0, !dbg !8161
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !8162

if.then11:                                        ; preds = %lor.lhs.false, %if.end8
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %retval, align 8, !dbg !8163
  br label %return, !dbg !8163

if.end12:                                         ; preds = %lor.lhs.false
  %12 = load %struct.request*, %struct.request** %req, align 8, !dbg !8164
  %call13 = call i8* @blk_mq_rq_to_pdu(%struct.request* %12) #11, !dbg !8165
  %13 = bitcast i8* %call13 to %struct.scsi_cmnd*, !dbg !8165
  store %struct.scsi_cmnd* %13, %struct.scsi_cmnd** %retval, align 8, !dbg !8166
  br label %return, !dbg !8166

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %retval, align 8, !dbg !8167
  ret %struct.scsi_cmnd* %14, !dbg !8167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @scsi_cmd_priv(%struct.scsi_cmnd* %cmd) #0 !dbg !8168 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !8171, metadata !DIExpression()), !dbg !8172
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8173
  %add.ptr = getelementptr %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i64 1, !dbg !8174
  %1 = bitcast %struct.scsi_cmnd* %add.ptr to i8*, !dbg !8173
  ret i8* %1, !dbg !8175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_handle_cmdblk(%struct.myrb_hba* %cb, %struct.myrb_cmdblk* %cmd_blk) #0 !dbg !8176 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %cmd_blk.addr = alloca %struct.myrb_cmdblk*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !8177, metadata !DIExpression()), !dbg !8178
  store %struct.myrb_cmdblk* %cmd_blk, %struct.myrb_cmdblk** %cmd_blk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk.addr, metadata !8179, metadata !DIExpression()), !dbg !8180
  %0 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8181
  %tobool = icmp ne %struct.myrb_cmdblk* %0, null, !dbg !8181
  br i1 %tobool, label %if.end, label %if.then, !dbg !8183

if.then:                                          ; preds = %entry
  br label %if.end5, !dbg !8184

if.end:                                           ; preds = %entry
  %1 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8185
  %completion = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %1, i32 0, i32 2, !dbg !8187
  %2 = load %struct.completion*, %struct.completion** %completion, align 8, !dbg !8187
  %tobool1 = icmp ne %struct.completion* %2, null, !dbg !8185
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !8188

if.then2:                                         ; preds = %if.end
  %3 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8189
  %completion3 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %3, i32 0, i32 2, !dbg !8191
  %4 = load %struct.completion*, %struct.completion** %completion3, align 8, !dbg !8191
  call void @complete(%struct.completion* %4) #11, !dbg !8192
  %5 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8193
  %completion4 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %5, i32 0, i32 2, !dbg !8194
  store %struct.completion* null, %struct.completion** %completion4, align 8, !dbg !8195
  br label %if.end5, !dbg !8196

if.end5:                                          ; preds = %if.then, %if.then2, %if.end
  ret void, !dbg !8197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_handle_scsi(%struct.myrb_hba* %cb, %struct.myrb_cmdblk* %cmd_blk, %struct.scsi_cmnd* %scmd) #0 !dbg !8198 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %cmd_blk.addr = alloca %struct.myrb_cmdblk*, align 8
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %status = alloca i16, align 2
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  store %struct.myrb_cmdblk* %cmd_blk, %struct.myrb_cmdblk** %cmd_blk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk.addr, metadata !8203, metadata !DIExpression()), !dbg !8204
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !8205, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.declare(metadata i16* %status, metadata !8207, metadata !DIExpression()), !dbg !8208
  %0 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8209
  %tobool = icmp ne %struct.myrb_cmdblk* %0, null, !dbg !8209
  br i1 %tobool, label %if.end, label %if.then, !dbg !8211

if.then:                                          ; preds = %entry
  br label %return, !dbg !8212

if.end:                                           ; preds = %entry
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8213
  call void @scsi_dma_unmap(%struct.scsi_cmnd* %1) #11, !dbg !8214
  %2 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8215
  %dcdb = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %2, i32 0, i32 3, !dbg !8217
  %3 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !8217
  %tobool1 = icmp ne %struct.myrb_dcdb* %3, null, !dbg !8215
  br i1 %tobool1, label %if.then2, label %if.end6, !dbg !8218

if.then2:                                         ; preds = %if.end
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8219
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 20, !dbg !8221
  %5 = load i8*, i8** %sense_buffer, align 8, !dbg !8221
  %6 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8222
  %dcdb3 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %6, i32 0, i32 3, !dbg !8223
  %7 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb3, align 8, !dbg !8223
  %sense = getelementptr inbounds %struct.myrb_dcdb, %struct.myrb_dcdb* %7, i32 0, i32 6, !dbg !8224
  %8 = bitcast [64 x i8]* %sense to i8*, !dbg !8225
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 2 %8, i64 64, i1 false), !dbg !8225
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !8226
  %dcdb_pool = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %9, i32 0, i32 25, !dbg !8227
  %10 = load %struct.dma_pool*, %struct.dma_pool** %dcdb_pool, align 8, !dbg !8227
  %11 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8228
  %dcdb4 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %11, i32 0, i32 3, !dbg !8229
  %12 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb4, align 8, !dbg !8229
  %13 = bitcast %struct.myrb_dcdb* %12 to i8*, !dbg !8228
  %14 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8230
  %dcdb_addr = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %14, i32 0, i32 4, !dbg !8231
  %15 = load i64, i64* %dcdb_addr, align 8, !dbg !8231
  call void @dma_pool_free(%struct.dma_pool* %10, i8* %13, i64 %15) #11, !dbg !8232
  %16 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8233
  %dcdb5 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %16, i32 0, i32 3, !dbg !8234
  store %struct.myrb_dcdb* null, %struct.myrb_dcdb** %dcdb5, align 8, !dbg !8235
  br label %if.end6, !dbg !8236

if.end6:                                          ; preds = %if.then2, %if.end
  %17 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8237
  %sgl = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %17, i32 0, i32 5, !dbg !8239
  %18 = load %struct.myrb_sge*, %struct.myrb_sge** %sgl, align 8, !dbg !8239
  %tobool7 = icmp ne %struct.myrb_sge* %18, null, !dbg !8237
  br i1 %tobool7, label %if.then8, label %if.end12, !dbg !8240

if.then8:                                         ; preds = %if.end6
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !8241
  %sg_pool = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 24, !dbg !8243
  %20 = load %struct.dma_pool*, %struct.dma_pool** %sg_pool, align 8, !dbg !8243
  %21 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8244
  %sgl9 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %21, i32 0, i32 5, !dbg !8245
  %22 = load %struct.myrb_sge*, %struct.myrb_sge** %sgl9, align 8, !dbg !8245
  %23 = bitcast %struct.myrb_sge* %22 to i8*, !dbg !8244
  %24 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8246
  %sgl_addr = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %24, i32 0, i32 6, !dbg !8247
  %25 = load i64, i64* %sgl_addr, align 8, !dbg !8247
  call void @dma_pool_free(%struct.dma_pool* %20, i8* %23, i64 %25) #11, !dbg !8248
  %26 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8249
  %sgl10 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %26, i32 0, i32 5, !dbg !8250
  store %struct.myrb_sge* null, %struct.myrb_sge** %sgl10, align 8, !dbg !8251
  %27 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8252
  %sgl_addr11 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %27, i32 0, i32 6, !dbg !8253
  store i64 0, i64* %sgl_addr11, align 8, !dbg !8254
  br label %if.end12, !dbg !8255

if.end12:                                         ; preds = %if.then8, %if.end6
  %28 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8256
  %status13 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %28, i32 0, i32 1, !dbg !8257
  %29 = load i16, i16* %status13, align 8, !dbg !8257
  store i16 %29, i16* %status, align 2, !dbg !8258
  %30 = load i16, i16* %status, align 2, !dbg !8259
  %conv = zext i16 %30 to i32, !dbg !8259
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 8, label %sw.bb
    i32 268, label %sw.bb15
    i32 1, label %sw.bb22
    i32 2, label %sw.bb32
    i32 261, label %sw.bb34
    i32 14, label %sw.bb36
  ], !dbg !8260

sw.bb:                                            ; preds = %if.end12, %if.end12
  %31 = load i16, i16* %status, align 2, !dbg !8261
  %conv14 = zext i16 %31 to i32, !dbg !8261
  %or = or i32 0, %conv14, !dbg !8263
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8264
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %32, i32 0, i32 24, !dbg !8265
  store i32 %or, i32* %result, align 8, !dbg !8266
  br label %sw.epilog, !dbg !8267

sw.bb15:                                          ; preds = %if.end12
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8268
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %33, i32 0, i32 13, !dbg !8270
  %34 = load i32, i32* %sc_data_direction, align 8, !dbg !8270
  %cmp = icmp eq i32 %34, 2, !dbg !8271
  br i1 %cmp, label %if.then17, label %if.else, !dbg !8272

if.then17:                                        ; preds = %sw.bb15
  %35 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8273
  %sense_buffer18 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %35, i32 0, i32 20, !dbg !8274
  %36 = load i8*, i8** %sense_buffer18, align 8, !dbg !8274
  call void @scsi_build_sense_buffer(i32 0, i8* %36, i8 zeroext 3, i8 zeroext 17, i8 zeroext 0) #11, !dbg !8275
  br label %if.end20, !dbg !8275

if.else:                                          ; preds = %sw.bb15
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8276
  %sense_buffer19 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %37, i32 0, i32 20, !dbg !8277
  %38 = load i8*, i8** %sense_buffer19, align 8, !dbg !8277
  call void @scsi_build_sense_buffer(i32 0, i8* %38, i8 zeroext 3, i8 zeroext 12, i8 zeroext 0) #11, !dbg !8278
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then17
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8279
  %result21 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %39, i32 0, i32 24, !dbg !8280
  store i32 2, i32* %result21, align 8, !dbg !8281
  br label %sw.epilog, !dbg !8282

sw.bb22:                                          ; preds = %if.end12
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8283
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), %struct.scsi_cmnd* %40, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0)) #11, !dbg !8284
  %41 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8285
  %sc_data_direction23 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %41, i32 0, i32 13, !dbg !8287
  %42 = load i32, i32* %sc_data_direction23, align 8, !dbg !8287
  %cmp24 = icmp eq i32 %42, 2, !dbg !8288
  br i1 %cmp24, label %if.then26, label %if.else28, !dbg !8289

if.then26:                                        ; preds = %sw.bb22
  %43 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8290
  %sense_buffer27 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %43, i32 0, i32 20, !dbg !8291
  %44 = load i8*, i8** %sense_buffer27, align 8, !dbg !8291
  call void @scsi_build_sense_buffer(i32 0, i8* %44, i8 zeroext 3, i8 zeroext 17, i8 zeroext 4) #11, !dbg !8292
  br label %if.end30, !dbg !8292

if.else28:                                        ; preds = %sw.bb22
  %45 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8293
  %sense_buffer29 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %45, i32 0, i32 20, !dbg !8294
  %46 = load i8*, i8** %sense_buffer29, align 8, !dbg !8294
  call void @scsi_build_sense_buffer(i32 0, i8* %46, i8 zeroext 3, i8 zeroext 12, i8 zeroext 2) #11, !dbg !8295
  br label %if.end30

if.end30:                                         ; preds = %if.else28, %if.then26
  %47 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8296
  %result31 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %47, i32 0, i32 24, !dbg !8297
  store i32 2, i32* %result31, align 8, !dbg !8298
  br label %sw.epilog, !dbg !8299

sw.bb32:                                          ; preds = %if.end12
  %48 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8300
  %result33 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %48, i32 0, i32 24, !dbg !8301
  store i32 262144, i32* %result33, align 8, !dbg !8302
  br label %sw.epilog, !dbg !8303

sw.bb34:                                          ; preds = %if.end12
  %49 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8304
  %sense_buffer35 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %49, i32 0, i32 20, !dbg !8305
  %50 = load i8*, i8** %sense_buffer35, align 8, !dbg !8305
  call void @scsi_build_sense_buffer(i32 0, i8* %50, i8 zeroext 2, i8 zeroext 33, i8 zeroext 0) #11, !dbg !8306
  br label %sw.epilog, !dbg !8307

sw.bb36:                                          ; preds = %if.end12
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8308
  %result37 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 24, !dbg !8309
  store i32 262144, i32* %result37, align 8, !dbg !8310
  br label %sw.epilog, !dbg !8311

sw.default:                                       ; preds = %if.end12
  %52 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8312
  %53 = load i16, i16* %status, align 2, !dbg !8313
  %conv38 = zext i16 %53 to i32, !dbg !8313
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), %struct.scsi_cmnd* %52, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 %conv38) #11, !dbg !8314
  %54 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8315
  %result39 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %54, i32 0, i32 24, !dbg !8316
  store i32 458752, i32* %result39, align 8, !dbg !8317
  br label %sw.epilog, !dbg !8318

sw.epilog:                                        ; preds = %sw.default, %sw.bb36, %sw.bb34, %sw.bb32, %if.end30, %if.end20, %sw.bb
  %55 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8319
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %55, i32 0, i32 21, !dbg !8320
  %56 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !8320
  %57 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8321
  call void %56(%struct.scsi_cmnd* %57) #11, !dbg !8319
  br label %return, !dbg !8322

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !8322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !8323 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !8324, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8327, metadata !DIExpression()), !dbg !8326
  %0 = load i64, i64* %__edi, align 8, !dbg !8326
  store i64 %0, i64* %__edi, align 8, !dbg !8326
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8328, metadata !DIExpression()), !dbg !8326
  %1 = load i64, i64* %__esi, align 8, !dbg !8326
  store i64 %1, i64* %__esi, align 8, !dbg !8326
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8329, metadata !DIExpression()), !dbg !8326
  %2 = load i64, i64* %__edx, align 8, !dbg !8326
  store i64 %2, i64* %__edx, align 8, !dbg !8326
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8330, metadata !DIExpression()), !dbg !8326
  %3 = load i64, i64* %__ecx, align 8, !dbg !8326
  store i64 %3, i64* %__ecx, align 8, !dbg !8326
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8331, metadata !DIExpression()), !dbg !8326
  %4 = load i64, i64* %__eax, align 8, !dbg !8326
  store i64 %4, i64* %__eax, align 8, !dbg !8326
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !8326
  %6 = call i64 @llvm.read_register.i64(metadata !6460), !dbg !8332
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !8332, !srcloc !8335
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8332
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8332
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8332
  call void @llvm.write_register.i64(metadata !6460, i64 %asmresult1), !dbg !8332
  %8 = load i64, i64* %__eax, align 8, !dbg !8332
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !8336, metadata !DIExpression()), !dbg !8338
  store i64 -1, i64* %__mask, align 8, !dbg !8338
  %9 = load i64, i64* %__mask, align 8, !dbg !8338
  store i64 %9, i64* %tmp, align 8, !dbg !8338
  %10 = load i64, i64* %tmp, align 8, !dbg !8338
  %and = and i64 %8, %10, !dbg !8332
  store i64 %and, i64* %__ret, align 8, !dbg !8332
  %11 = load i64, i64* %__ret, align 8, !dbg !8326
  store i64 %11, i64* %tmp2, align 8, !dbg !8339
  %12 = load i64, i64* %tmp2, align 8, !dbg !8326
  ret i64 %12, !dbg !8340
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !8341 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8342, metadata !DIExpression()), !dbg !8344
  %0 = load i64, i64* %__edi, align 8, !dbg !8344
  store i64 %0, i64* %__edi, align 8, !dbg !8344
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8345, metadata !DIExpression()), !dbg !8344
  %1 = load i64, i64* %__esi, align 8, !dbg !8344
  store i64 %1, i64* %__esi, align 8, !dbg !8344
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8346, metadata !DIExpression()), !dbg !8344
  %2 = load i64, i64* %__edx, align 8, !dbg !8344
  store i64 %2, i64* %__edx, align 8, !dbg !8344
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8347, metadata !DIExpression()), !dbg !8344
  %3 = load i64, i64* %__ecx, align 8, !dbg !8344
  store i64 %3, i64* %__ecx, align 8, !dbg !8344
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8348, metadata !DIExpression()), !dbg !8344
  %4 = load i64, i64* %__eax, align 8, !dbg !8344
  store i64 %4, i64* %__eax, align 8, !dbg !8344
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !8344
  %6 = call i64 @llvm.read_register.i64(metadata !6460), !dbg !8344
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !8344, !srcloc !8349
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8344
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8344
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8344
  call void @llvm.write_register.i64(metadata !6460, i64 %asmresult1), !dbg !8344
  ret void, !dbg !8350
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @blk_mq_unique_tag_to_hwq(i32 %unique_tag) #0 !dbg !8351 {
entry:
  %unique_tag.addr = alloca i32, align 4
  store i32 %unique_tag, i32* %unique_tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unique_tag.addr, metadata !8354, metadata !DIExpression()), !dbg !8355
  %0 = load i32, i32* %unique_tag.addr, align 4, !dbg !8356
  %shr = lshr i32 %0, 16, !dbg !8357
  %conv = trunc i32 %shr to i16, !dbg !8356
  ret i16 %conv, !dbg !8358
}

; Function Attrs: noredzone
declare dso_local %struct.request* @blk_mq_tag_to_rq(%struct.blk_mq_tags*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @blk_mq_unique_tag_to_tag(i32 %unique_tag) #0 !dbg !8359 {
entry:
  %unique_tag.addr = alloca i32, align 4
  store i32 %unique_tag, i32* %unique_tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unique_tag.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  %0 = load i32, i32* %unique_tag.addr, align 4, !dbg !8362
  %and = and i32 %0, 65535, !dbg !8363
  %conv = trunc i32 %and to i16, !dbg !8362
  ret i16 %conv, !dbg !8364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_mq_request_started(%struct.request* %rq) #0 !dbg !8365 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !8368, metadata !DIExpression()), !dbg !8369
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !8370
  %call = call i32 @blk_mq_rq_state(%struct.request* %0) #11, !dbg !8371
  %cmp = icmp ne i32 %call, 0, !dbg !8372
  %conv = zext i1 %cmp to i32, !dbg !8372
  ret i32 %conv, !dbg !8373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @blk_mq_rq_to_pdu(%struct.request* %rq) #0 !dbg !8374 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !8377, metadata !DIExpression()), !dbg !8378
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !8379
  %add.ptr = getelementptr %struct.request, %struct.request* %0, i64 1, !dbg !8380
  %1 = bitcast %struct.request* %add.ptr to i8*, !dbg !8379
  ret i8* %1, !dbg !8381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_mq_rq_state(%struct.request* %rq) #0 !dbg !8382 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  %tmp = alloca i32, align 4
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !8385, metadata !DIExpression()), !dbg !8386
  br label %do.body, !dbg !8387

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8389

do.end:                                           ; preds = %do.body
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !8387
  %state = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 24, !dbg !8387
  %1 = load volatile i32, i32* %state, align 4, !dbg !8387
  store i32 %1, i32* %tmp, align 4, !dbg !8389
  %2 = load i32, i32* %tmp, align 4, !dbg !8387
  ret i32 %2, !dbg !8391
}

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #2

; Function Attrs: noredzone
declare dso_local void @scsi_dma_unmap(%struct.scsi_cmnd*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local void @dma_pool_free(%struct.dma_pool*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local void @scsi_build_sense_buffer(i32, i8*, i8 zeroext, i8 zeroext, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @scmd_printk(i8*, %struct.scsi_cmnd*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !8392 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !8395, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8397, metadata !DIExpression()), !dbg !8399
  %0 = load i64, i64* %__edi, align 8, !dbg !8399
  store i64 %0, i64* %__edi, align 8, !dbg !8399
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8400, metadata !DIExpression()), !dbg !8399
  %1 = load i64, i64* %__esi, align 8, !dbg !8399
  store i64 %1, i64* %__esi, align 8, !dbg !8399
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8401, metadata !DIExpression()), !dbg !8399
  %2 = load i64, i64* %__edx, align 8, !dbg !8399
  store i64 %2, i64* %__edx, align 8, !dbg !8399
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8402, metadata !DIExpression()), !dbg !8399
  %3 = load i64, i64* %__ecx, align 8, !dbg !8399
  store i64 %3, i64* %__ecx, align 8, !dbg !8399
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8403, metadata !DIExpression()), !dbg !8399
  %4 = load i64, i64* %__eax, align 8, !dbg !8399
  store i64 %4, i64* %__eax, align 8, !dbg !8399
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !8399
  %6 = call i64 @llvm.read_register.i64(metadata !6460), !dbg !8399
  %7 = load i64, i64* %f.addr, align 8, !dbg !8399
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !8399, !srcloc !8404
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !8399
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !8399
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8399
  call void @llvm.write_register.i64(metadata !6460, i64 %asmresult1), !dbg !8399
  ret void, !dbg !8405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PG_disable_intr(i8* %base) #0 !dbg !8406 {
entry:
  %base.addr = alloca i8*, align 8
  %imask = alloca i32, align 4
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8407, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.declare(metadata i32* %imask, metadata !8409, metadata !DIExpression()), !dbg !8410
  store i32 -1, i32* %imask, align 4, !dbg !8410
  %0 = load i32, i32* %imask, align 4, !dbg !8411
  %1 = load i8*, i8** %base.addr, align 8, !dbg !8412
  %add.ptr = getelementptr i8, i8* %1, i64 52, !dbg !8413
  call void @writel(i32 %0, i8* %add.ptr) #11, !dbg !8414
  ret void, !dbg !8415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PG_ack_hw_mbox_status(i8* %base) #0 !dbg !8416 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8417, metadata !DIExpression()), !dbg !8418
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8419
  %add.ptr = getelementptr i8, i8* %0, i64 32, !dbg !8420
  call void @writel(i32 2, i8* %add.ptr) #11, !dbg !8421
  ret void, !dbg !8422
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_PG_init_in_progress(i8* %base) #0 !dbg !8423 {
entry:
  %base.addr = alloca i8*, align 8
  %idb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8424, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.declare(metadata i8* %idb, metadata !8426, metadata !DIExpression()), !dbg !8427
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8428
  %add.ptr = getelementptr i8, i8* %0, i64 32, !dbg !8429
  %call = call i32 @readl(i8* %add.ptr) #11, !dbg !8430
  %conv = trunc i32 %call to i8, !dbg !8430
  store i8 %conv, i8* %idb, align 1, !dbg !8427
  %1 = load i8, i8* %idb, align 1, !dbg !8431
  %conv1 = zext i8 %1 to i32, !dbg !8431
  %and = and i32 %conv1, 2, !dbg !8432
  %tobool = icmp ne i32 %and, 0, !dbg !8431
  ret i1 %tobool, !dbg !8433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_PG_read_error_status(i8* %base, i8* %error, i8* %param0, i8* %param1) #0 !dbg !8434 {
entry:
  %retval = alloca i1, align 1
  %base.addr = alloca i8*, align 8
  %error.addr = alloca i8*, align 8
  %param0.addr = alloca i8*, align 8
  %param1.addr = alloca i8*, align 8
  %errsts = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  store i8* %error, i8** %error.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %error.addr, metadata !8437, metadata !DIExpression()), !dbg !8438
  store i8* %param0, i8** %param0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param0.addr, metadata !8439, metadata !DIExpression()), !dbg !8440
  store i8* %param1, i8** %param1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param1.addr, metadata !8441, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.declare(metadata i8* %errsts, metadata !8443, metadata !DIExpression()), !dbg !8444
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8445
  %add.ptr = getelementptr i8, i8* %0, i64 4159, !dbg !8446
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8447
  store i8 %call, i8* %errsts, align 1, !dbg !8444
  %1 = load i8, i8* %errsts, align 1, !dbg !8448
  %conv = zext i8 %1 to i32, !dbg !8448
  %and = and i32 %conv, 4, !dbg !8450
  %tobool = icmp ne i32 %and, 0, !dbg !8450
  br i1 %tobool, label %if.end, label %if.then, !dbg !8451

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8452
  br label %return, !dbg !8452

if.end:                                           ; preds = %entry
  %2 = load i8, i8* %errsts, align 1, !dbg !8453
  %conv1 = zext i8 %2 to i32, !dbg !8453
  %and2 = and i32 %conv1, -5, !dbg !8453
  %conv3 = trunc i32 %and2 to i8, !dbg !8453
  store i8 %conv3, i8* %errsts, align 1, !dbg !8453
  %3 = load i8, i8* %errsts, align 1, !dbg !8454
  %4 = load i8*, i8** %error.addr, align 8, !dbg !8455
  store i8 %3, i8* %4, align 1, !dbg !8456
  %5 = load i8*, i8** %base.addr, align 8, !dbg !8457
  %add.ptr4 = getelementptr i8, i8* %5, i64 4096, !dbg !8458
  %call5 = call zeroext i8 @readb(i8* %add.ptr4) #11, !dbg !8459
  %6 = load i8*, i8** %param0.addr, align 8, !dbg !8460
  store i8 %call5, i8* %6, align 1, !dbg !8461
  %7 = load i8*, i8** %base.addr, align 8, !dbg !8462
  %add.ptr6 = getelementptr i8, i8* %7, i64 4097, !dbg !8463
  %call7 = call zeroext i8 @readb(i8* %add.ptr6) #11, !dbg !8464
  %8 = load i8*, i8** %param1.addr, align 8, !dbg !8465
  store i8 %call7, i8* %8, align 1, !dbg !8466
  %9 = load i8*, i8** %base.addr, align 8, !dbg !8467
  %add.ptr8 = getelementptr i8, i8* %9, i64 4159, !dbg !8468
  call void @writeb(i8 zeroext 0, i8* %add.ptr8) #11, !dbg !8469
  store i1 true, i1* %retval, align 1, !dbg !8470
  br label %return, !dbg !8470

return:                                           ; preds = %if.end, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !8471
  ret i1 %10, !dbg !8471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @DAC960_PG_mbox_init(%struct.pci_dev* %pdev, i8* %base, %union.myrb_cmd_mbox* %mbox) #0 !dbg !8472 {
entry:
  %retval = alloca i16, align 2
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %base.addr = alloca i8*, align 8
  %mbox.addr = alloca %union.myrb_cmd_mbox*, align 8
  %status = alloca i16, align 2
  %timeout = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8473, metadata !DIExpression()), !dbg !8474
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8475, metadata !DIExpression()), !dbg !8476
  store %union.myrb_cmd_mbox* %mbox, %union.myrb_cmd_mbox** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox.addr, metadata !8477, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.declare(metadata i16* %status, metadata !8479, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !8481, metadata !DIExpression()), !dbg !8482
  store i32 0, i32* %timeout, align 4, !dbg !8482
  br label %while.cond, !dbg !8483

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %timeout, align 4, !dbg !8484
  %cmp = icmp slt i32 %0, 1000000, !dbg !8485
  br i1 %cmp, label %while.body, label %while.end, !dbg !8483

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %base.addr, align 8, !dbg !8486
  %call = call zeroext i1 @DAC960_PG_hw_mbox_is_full(i8* %1) #11, !dbg !8489
  br i1 %call, label %if.end, label %if.then, !dbg !8490

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !8491

if.end:                                           ; preds = %while.body
  call void @__const_udelay(i64 42950) #11, !dbg !8492
  %2 = load i32, i32* %timeout, align 4, !dbg !8497
  %inc = add i32 %2, 1, !dbg !8497
  store i32 %inc, i32* %timeout, align 4, !dbg !8497
  br label %while.cond, !dbg !8483, !llvm.loop !8498

while.end:                                        ; preds = %if.then, %while.cond
  %3 = load i8*, i8** %base.addr, align 8, !dbg !8500
  %call1 = call zeroext i1 @DAC960_PG_hw_mbox_is_full(i8* %3) #11, !dbg !8502
  br i1 %call1, label %if.then2, label %if.end3, !dbg !8503

if.then2:                                         ; preds = %while.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8504
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !8504
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !8504
  store i16 264, i16* %retval, align 2, !dbg !8506
  br label %return, !dbg !8506

if.end3:                                          ; preds = %while.end
  %5 = load i8*, i8** %base.addr, align 8, !dbg !8507
  %6 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8508
  call void @DAC960_PG_write_hw_mbox(i8* %5, %union.myrb_cmd_mbox* %6) #11, !dbg !8509
  %7 = load i8*, i8** %base.addr, align 8, !dbg !8510
  call void @DAC960_PG_hw_mbox_new_cmd(i8* %7) #11, !dbg !8511
  store i32 0, i32* %timeout, align 4, !dbg !8512
  br label %while.cond4, !dbg !8513

while.cond4:                                      ; preds = %if.end9, %if.end3
  %8 = load i32, i32* %timeout, align 4, !dbg !8514
  %cmp5 = icmp slt i32 %8, 1000000, !dbg !8515
  br i1 %cmp5, label %while.body6, label %while.end11, !dbg !8513

while.body6:                                      ; preds = %while.cond4
  %9 = load i8*, i8** %base.addr, align 8, !dbg !8516
  %call7 = call zeroext i1 @DAC960_PG_hw_mbox_status_available(i8* %9) #11, !dbg !8519
  br i1 %call7, label %if.then8, label %if.end9, !dbg !8520

if.then8:                                         ; preds = %while.body6
  br label %while.end11, !dbg !8521

if.end9:                                          ; preds = %while.body6
  call void @__const_udelay(i64 42950) #11, !dbg !8522
  %10 = load i32, i32* %timeout, align 4, !dbg !8527
  %inc10 = add i32 %10, 1, !dbg !8527
  store i32 %inc10, i32* %timeout, align 4, !dbg !8527
  br label %while.cond4, !dbg !8513, !llvm.loop !8528

while.end11:                                      ; preds = %if.then8, %while.cond4
  %11 = load i8*, i8** %base.addr, align 8, !dbg !8530
  %call12 = call zeroext i1 @DAC960_PG_hw_mbox_status_available(i8* %11) #11, !dbg !8532
  br i1 %call12, label %if.end15, label %if.then13, !dbg !8533

if.then13:                                        ; preds = %while.end11
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8534
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !8534
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0)) #12, !dbg !8534
  store i16 264, i16* %retval, align 2, !dbg !8536
  br label %return, !dbg !8536

if.end15:                                         ; preds = %while.end11
  %13 = load i8*, i8** %base.addr, align 8, !dbg !8537
  %call16 = call zeroext i16 @DAC960_PG_read_status(i8* %13) #11, !dbg !8538
  store i16 %call16, i16* %status, align 2, !dbg !8539
  %14 = load i8*, i8** %base.addr, align 8, !dbg !8540
  call void @DAC960_PG_ack_hw_mbox_intr(i8* %14) #11, !dbg !8541
  %15 = load i8*, i8** %base.addr, align 8, !dbg !8542
  call void @DAC960_PG_ack_hw_mbox_status(i8* %15) #11, !dbg !8543
  %16 = load i16, i16* %status, align 2, !dbg !8544
  store i16 %16, i16* %retval, align 2, !dbg !8545
  br label %return, !dbg !8545

return:                                           ; preds = %if.end15, %if.then13, %if.then2
  %17 = load i16, i16* %retval, align 2, !dbg !8546
  ret i16 %17, !dbg !8546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PG_reset_ctrl(i8* %base) #0 !dbg !8547 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8548, metadata !DIExpression()), !dbg !8549
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8550
  %add.ptr = getelementptr i8, i8* %0, i64 32, !dbg !8551
  call void @writel(i32 8, i8* %add.ptr) #11, !dbg !8552
  ret void, !dbg !8553
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PG_enable_intr(i8* %base) #0 !dbg !8554 {
entry:
  %base.addr = alloca i8*, align 8
  %imask = alloca i32, align 4
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8555, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.declare(metadata i32* %imask, metadata !8557, metadata !DIExpression()), !dbg !8558
  store i32 -1, i32* %imask, align 4, !dbg !8558
  %0 = load i32, i32* %imask, align 4, !dbg !8559
  %and = and i32 %0, -5, !dbg !8559
  store i32 %and, i32* %imask, align 4, !dbg !8559
  %1 = load i32, i32* %imask, align 4, !dbg !8560
  %2 = load i8*, i8** %base.addr, align 8, !dbg !8561
  %add.ptr = getelementptr i8, i8* %2, i64 52, !dbg !8562
  call void @writel(i32 %1, i8* %add.ptr) #11, !dbg !8563
  ret void, !dbg !8564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PG_write_cmd_mbox(%union.myrb_cmd_mbox* %mem_mbox, %union.myrb_cmd_mbox* %mbox) #0 !dbg !8565 {
entry:
  %mem_mbox.addr = alloca %union.myrb_cmd_mbox*, align 8
  %mbox.addr = alloca %union.myrb_cmd_mbox*, align 8
  store %union.myrb_cmd_mbox* %mem_mbox, %union.myrb_cmd_mbox** %mem_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mem_mbox.addr, metadata !8566, metadata !DIExpression()), !dbg !8567
  store %union.myrb_cmd_mbox* %mbox, %union.myrb_cmd_mbox** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox.addr, metadata !8568, metadata !DIExpression()), !dbg !8569
  %0 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8570
  %words = bitcast %union.myrb_cmd_mbox* %0 to [4 x i32]*, !dbg !8571
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %words, i64 0, i64 1, !dbg !8570
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8570
  %2 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mem_mbox.addr, align 8, !dbg !8572
  %words1 = bitcast %union.myrb_cmd_mbox* %2 to [4 x i32]*, !dbg !8573
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %words1, i64 0, i64 1, !dbg !8572
  store i32 %1, i32* %arrayidx2, align 4, !dbg !8574
  %3 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8575
  %words3 = bitcast %union.myrb_cmd_mbox* %3 to [4 x i32]*, !dbg !8576
  %arrayidx4 = getelementptr [4 x i32], [4 x i32]* %words3, i64 0, i64 2, !dbg !8575
  %4 = load i32, i32* %arrayidx4, align 4, !dbg !8575
  %5 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mem_mbox.addr, align 8, !dbg !8577
  %words5 = bitcast %union.myrb_cmd_mbox* %5 to [4 x i32]*, !dbg !8578
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %words5, i64 0, i64 2, !dbg !8577
  store i32 %4, i32* %arrayidx6, align 4, !dbg !8579
  %6 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8580
  %words7 = bitcast %union.myrb_cmd_mbox* %6 to [4 x i32]*, !dbg !8581
  %arrayidx8 = getelementptr [4 x i32], [4 x i32]* %words7, i64 0, i64 3, !dbg !8580
  %7 = load i32, i32* %arrayidx8, align 4, !dbg !8580
  %8 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mem_mbox.addr, align 8, !dbg !8582
  %words9 = bitcast %union.myrb_cmd_mbox* %8 to [4 x i32]*, !dbg !8583
  %arrayidx10 = getelementptr [4 x i32], [4 x i32]* %words9, i64 0, i64 3, !dbg !8582
  store i32 %7, i32* %arrayidx10, align 4, !dbg !8584
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8585, !srcloc !8586
  %9 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8587
  %words11 = bitcast %union.myrb_cmd_mbox* %9 to [4 x i32]*, !dbg !8588
  %arrayidx12 = getelementptr [4 x i32], [4 x i32]* %words11, i64 0, i64 0, !dbg !8587
  %10 = load i32, i32* %arrayidx12, align 4, !dbg !8587
  %11 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mem_mbox.addr, align 8, !dbg !8589
  %words13 = bitcast %union.myrb_cmd_mbox* %11 to [4 x i32]*, !dbg !8590
  %arrayidx14 = getelementptr [4 x i32], [4 x i32]* %words13, i64 0, i64 0, !dbg !8589
  store i32 %10, i32* %arrayidx14, align 4, !dbg !8591
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8592, !srcloc !8593
  ret void, !dbg !8594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PG_mem_mbox_new_cmd(i8* %base) #0 !dbg !8595 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8596, metadata !DIExpression()), !dbg !8597
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8598
  %add.ptr = getelementptr i8, i8* %0, i64 32, !dbg !8599
  call void @writel(i32 16, i8* %add.ptr) #11, !dbg !8600
  ret void, !dbg !8601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PG_hw_mbox_new_cmd(i8* %base) #0 !dbg !8602 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8603, metadata !DIExpression()), !dbg !8604
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8605
  %add.ptr = getelementptr i8, i8* %0, i64 32, !dbg !8606
  call void @writel(i32 1, i8* %add.ptr) #11, !dbg !8607
  ret void, !dbg !8608
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !8609 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8612, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8614, metadata !DIExpression()), !dbg !8613
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !8613
  %1 = bitcast i8* %0 to i32*, !dbg !8613
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #7, !dbg !8613, !srcloc !8615
  store i32 %2, i32* %ret, align 4, !dbg !8613
  %3 = load i32, i32* %ret, align 4, !dbg !8613
  ret i32 %3, !dbg !8613
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_PG_hw_mbox_is_full(i8* %base) #0 !dbg !8616 {
entry:
  %base.addr = alloca i8*, align 8
  %idb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8617, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.declare(metadata i8* %idb, metadata !8619, metadata !DIExpression()), !dbg !8620
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8621
  %add.ptr = getelementptr i8, i8* %0, i64 32, !dbg !8622
  %call = call i32 @readl(i8* %add.ptr) #11, !dbg !8623
  %conv = trunc i32 %call to i8, !dbg !8623
  store i8 %conv, i8* %idb, align 1, !dbg !8620
  %1 = load i8, i8* %idb, align 1, !dbg !8624
  %conv1 = zext i8 %1 to i32, !dbg !8624
  %and = and i32 %conv1, 1, !dbg !8625
  %tobool = icmp ne i32 %and, 0, !dbg !8624
  ret i1 %tobool, !dbg !8626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PG_write_hw_mbox(i8* %base, %union.myrb_cmd_mbox* %mbox) #0 !dbg !8627 {
entry:
  %base.addr = alloca i8*, align 8
  %mbox.addr = alloca %union.myrb_cmd_mbox*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8628, metadata !DIExpression()), !dbg !8629
  store %union.myrb_cmd_mbox* %mbox, %union.myrb_cmd_mbox** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox.addr, metadata !8630, metadata !DIExpression()), !dbg !8631
  %0 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8632
  %words = bitcast %union.myrb_cmd_mbox* %0 to [4 x i32]*, !dbg !8633
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %words, i64 0, i64 0, !dbg !8632
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8632
  %2 = load i8*, i8** %base.addr, align 8, !dbg !8634
  %add.ptr = getelementptr i8, i8* %2, i64 4096, !dbg !8635
  call void @writel(i32 %1, i8* %add.ptr) #11, !dbg !8636
  %3 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8637
  %words1 = bitcast %union.myrb_cmd_mbox* %3 to [4 x i32]*, !dbg !8638
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %words1, i64 0, i64 1, !dbg !8637
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !8637
  %5 = load i8*, i8** %base.addr, align 8, !dbg !8639
  %add.ptr3 = getelementptr i8, i8* %5, i64 4100, !dbg !8640
  call void @writel(i32 %4, i8* %add.ptr3) #11, !dbg !8641
  %6 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8642
  %words4 = bitcast %union.myrb_cmd_mbox* %6 to [4 x i32]*, !dbg !8643
  %arrayidx5 = getelementptr [4 x i32], [4 x i32]* %words4, i64 0, i64 2, !dbg !8642
  %7 = load i32, i32* %arrayidx5, align 4, !dbg !8642
  %8 = load i8*, i8** %base.addr, align 8, !dbg !8644
  %add.ptr6 = getelementptr i8, i8* %8, i64 4104, !dbg !8645
  call void @writel(i32 %7, i8* %add.ptr6) #11, !dbg !8646
  %9 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8647
  %bytes = bitcast %union.myrb_cmd_mbox* %9 to [16 x i8]*, !dbg !8648
  %arrayidx7 = getelementptr [16 x i8], [16 x i8]* %bytes, i64 0, i64 12, !dbg !8647
  %10 = load i8, i8* %arrayidx7, align 4, !dbg !8647
  %11 = load i8*, i8** %base.addr, align 8, !dbg !8649
  %add.ptr8 = getelementptr i8, i8* %11, i64 4108, !dbg !8650
  call void @writeb(i8 zeroext %10, i8* %add.ptr8) #11, !dbg !8651
  ret void, !dbg !8652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_PG_hw_mbox_status_available(i8* %base) #0 !dbg !8653 {
entry:
  %base.addr = alloca i8*, align 8
  %odb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8654, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.declare(metadata i8* %odb, metadata !8656, metadata !DIExpression()), !dbg !8657
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8658
  %add.ptr = getelementptr i8, i8* %0, i64 44, !dbg !8659
  %call = call i32 @readl(i8* %add.ptr) #11, !dbg !8660
  %conv = trunc i32 %call to i8, !dbg !8660
  store i8 %conv, i8* %odb, align 1, !dbg !8657
  %1 = load i8, i8* %odb, align 1, !dbg !8661
  %conv1 = zext i8 %1 to i32, !dbg !8661
  %and = and i32 %conv1, 1, !dbg !8662
  %tobool = icmp ne i32 %and, 0, !dbg !8661
  ret i1 %tobool, !dbg !8663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @DAC960_PG_read_status(i8* %base) #0 !dbg !8664 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8665, metadata !DIExpression()), !dbg !8666
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8667
  %add.ptr = getelementptr i8, i8* %0, i64 4122, !dbg !8668
  %call = call zeroext i16 @readw(i8* %add.ptr) #11, !dbg !8669
  ret i16 %call, !dbg !8670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PG_ack_hw_mbox_intr(i8* %base) #0 !dbg !8671 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8672, metadata !DIExpression()), !dbg !8673
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8674
  %add.ptr = getelementptr i8, i8* %0, i64 44, !dbg !8675
  call void @writel(i32 1, i8* %add.ptr) #11, !dbg !8676
  ret void, !dbg !8677
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PG_ack_intr(i8* %base) #0 !dbg !8678 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8679, metadata !DIExpression()), !dbg !8680
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8681
  %add.ptr = getelementptr i8, i8* %0, i64 44, !dbg !8682
  call void @writel(i32 3, i8* %add.ptr) #11, !dbg !8683
  ret void, !dbg !8684
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PD_disable_intr(i8* %base) #0 !dbg !8685 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8686, metadata !DIExpression()), !dbg !8687
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8688
  %add.ptr = getelementptr i8, i8* %0, i64 67, !dbg !8689
  call void @writeb(i8 zeroext 0, i8* %add.ptr) #11, !dbg !8690
  ret void, !dbg !8691
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PD_ack_hw_mbox_status(i8* %base) #0 !dbg !8692 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8693, metadata !DIExpression()), !dbg !8694
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8695
  %add.ptr = getelementptr i8, i8* %0, i64 64, !dbg !8696
  call void @writeb(i8 zeroext 2, i8* %add.ptr) #11, !dbg !8697
  ret void, !dbg !8698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_PD_init_in_progress(i8* %base) #0 !dbg !8699 {
entry:
  %base.addr = alloca i8*, align 8
  %idb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.declare(metadata i8* %idb, metadata !8702, metadata !DIExpression()), !dbg !8703
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8704
  %add.ptr = getelementptr i8, i8* %0, i64 64, !dbg !8705
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8706
  store i8 %call, i8* %idb, align 1, !dbg !8703
  %1 = load i8, i8* %idb, align 1, !dbg !8707
  %conv = zext i8 %1 to i32, !dbg !8707
  %and = and i32 %conv, 2, !dbg !8708
  %tobool = icmp ne i32 %and, 0, !dbg !8707
  ret i1 %tobool, !dbg !8709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_PD_read_error_status(i8* %base, i8* %error, i8* %param0, i8* %param1) #0 !dbg !8710 {
entry:
  %retval = alloca i1, align 1
  %base.addr = alloca i8*, align 8
  %error.addr = alloca i8*, align 8
  %param0.addr = alloca i8*, align 8
  %param1.addr = alloca i8*, align 8
  %errsts = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8711, metadata !DIExpression()), !dbg !8712
  store i8* %error, i8** %error.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %error.addr, metadata !8713, metadata !DIExpression()), !dbg !8714
  store i8* %param0, i8** %param0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param0.addr, metadata !8715, metadata !DIExpression()), !dbg !8716
  store i8* %param1, i8** %param1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param1.addr, metadata !8717, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.declare(metadata i8* %errsts, metadata !8719, metadata !DIExpression()), !dbg !8720
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8721
  %add.ptr = getelementptr i8, i8* %0, i64 63, !dbg !8722
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8723
  store i8 %call, i8* %errsts, align 1, !dbg !8720
  %1 = load i8, i8* %errsts, align 1, !dbg !8724
  %conv = zext i8 %1 to i32, !dbg !8724
  %and = and i32 %conv, 4, !dbg !8726
  %tobool = icmp ne i32 %and, 0, !dbg !8726
  br i1 %tobool, label %if.end, label %if.then, !dbg !8727

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8728
  br label %return, !dbg !8728

if.end:                                           ; preds = %entry
  %2 = load i8, i8* %errsts, align 1, !dbg !8729
  %conv1 = zext i8 %2 to i32, !dbg !8729
  %and2 = and i32 %conv1, -5, !dbg !8729
  %conv3 = trunc i32 %and2 to i8, !dbg !8729
  store i8 %conv3, i8* %errsts, align 1, !dbg !8729
  %3 = load i8, i8* %errsts, align 1, !dbg !8730
  %4 = load i8*, i8** %error.addr, align 8, !dbg !8731
  store i8 %3, i8* %4, align 1, !dbg !8732
  %5 = load i8*, i8** %base.addr, align 8, !dbg !8733
  %add.ptr4 = getelementptr i8, i8* %5, i64 0, !dbg !8734
  %call5 = call zeroext i8 @readb(i8* %add.ptr4) #11, !dbg !8735
  %6 = load i8*, i8** %param0.addr, align 8, !dbg !8736
  store i8 %call5, i8* %6, align 1, !dbg !8737
  %7 = load i8*, i8** %base.addr, align 8, !dbg !8738
  %add.ptr6 = getelementptr i8, i8* %7, i64 1, !dbg !8739
  %call7 = call zeroext i8 @readb(i8* %add.ptr6) #11, !dbg !8740
  %8 = load i8*, i8** %param1.addr, align 8, !dbg !8741
  store i8 %call7, i8* %8, align 1, !dbg !8742
  %9 = load i8*, i8** %base.addr, align 8, !dbg !8743
  %add.ptr8 = getelementptr i8, i8* %9, i64 63, !dbg !8744
  call void @writeb(i8 zeroext 0, i8* %add.ptr8) #11, !dbg !8745
  store i1 true, i1* %retval, align 1, !dbg !8746
  br label %return, !dbg !8746

return:                                           ; preds = %if.end, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !8747
  ret i1 %10, !dbg !8747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PD_reset_ctrl(i8* %base) #0 !dbg !8748 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8749, metadata !DIExpression()), !dbg !8750
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8751
  %add.ptr = getelementptr i8, i8* %0, i64 64, !dbg !8752
  call void @writeb(i8 zeroext 8, i8* %add.ptr) #11, !dbg !8753
  ret void, !dbg !8754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PD_enable_intr(i8* %base) #0 !dbg !8755 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8756, metadata !DIExpression()), !dbg !8757
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8758
  %add.ptr = getelementptr i8, i8* %0, i64 67, !dbg !8759
  call void @writeb(i8 zeroext 1, i8* %add.ptr) #11, !dbg !8760
  ret void, !dbg !8761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PD_qcmd(%struct.myrb_hba* %cb, %struct.myrb_cmdblk* %cmd_blk) #0 !dbg !8762 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %cmd_blk.addr = alloca %struct.myrb_cmdblk*, align 8
  %base = alloca i8*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !8763, metadata !DIExpression()), !dbg !8764
  store %struct.myrb_cmdblk* %cmd_blk, %struct.myrb_cmdblk** %cmd_blk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk.addr, metadata !8765, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.declare(metadata i8** %base, metadata !8767, metadata !DIExpression()), !dbg !8768
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !8769
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 38, !dbg !8770
  %1 = load i8*, i8** %io_base, align 8, !dbg !8770
  store i8* %1, i8** %base, align 8, !dbg !8768
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !8771, metadata !DIExpression()), !dbg !8772
  %2 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8773
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %2, i32 0, i32 0, !dbg !8774
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8772
  br label %while.cond, !dbg !8775

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i8*, i8** %base, align 8, !dbg !8776
  %call = call zeroext i1 @DAC960_PD_hw_mbox_is_full(i8* %3) #11, !dbg !8777
  br i1 %call, label %while.body, label %while.end, !dbg !8775

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295) #11, !dbg !8778
  br label %while.cond, !dbg !8775, !llvm.loop !8783

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !8785
  %5 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8786
  call void @DAC960_PD_write_cmd_mbox(i8* %4, %union.myrb_cmd_mbox* %5) #11, !dbg !8787
  %6 = load i8*, i8** %base, align 8, !dbg !8788
  call void @DAC960_PD_hw_mbox_new_cmd(i8* %6) #11, !dbg !8789
  ret void, !dbg !8790
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_PD_hw_mbox_is_full(i8* %base) #0 !dbg !8791 {
entry:
  %base.addr = alloca i8*, align 8
  %idb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8792, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.declare(metadata i8* %idb, metadata !8794, metadata !DIExpression()), !dbg !8795
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8796
  %add.ptr = getelementptr i8, i8* %0, i64 64, !dbg !8797
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8798
  store i8 %call, i8* %idb, align 1, !dbg !8795
  %1 = load i8, i8* %idb, align 1, !dbg !8799
  %conv = zext i8 %1 to i32, !dbg !8799
  %and = and i32 %conv, 1, !dbg !8800
  %tobool = icmp ne i32 %and, 0, !dbg !8799
  ret i1 %tobool, !dbg !8801
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PD_write_cmd_mbox(i8* %base, %union.myrb_cmd_mbox* %mbox) #0 !dbg !8802 {
entry:
  %base.addr = alloca i8*, align 8
  %mbox.addr = alloca %union.myrb_cmd_mbox*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8803, metadata !DIExpression()), !dbg !8804
  store %union.myrb_cmd_mbox* %mbox, %union.myrb_cmd_mbox** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox.addr, metadata !8805, metadata !DIExpression()), !dbg !8806
  %0 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8807
  %words = bitcast %union.myrb_cmd_mbox* %0 to [4 x i32]*, !dbg !8808
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %words, i64 0, i64 0, !dbg !8807
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8807
  %2 = load i8*, i8** %base.addr, align 8, !dbg !8809
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8810
  call void @writel(i32 %1, i8* %add.ptr) #11, !dbg !8811
  %3 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8812
  %words1 = bitcast %union.myrb_cmd_mbox* %3 to [4 x i32]*, !dbg !8813
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %words1, i64 0, i64 1, !dbg !8812
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !8812
  %5 = load i8*, i8** %base.addr, align 8, !dbg !8814
  %add.ptr3 = getelementptr i8, i8* %5, i64 4, !dbg !8815
  call void @writel(i32 %4, i8* %add.ptr3) #11, !dbg !8816
  %6 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8817
  %words4 = bitcast %union.myrb_cmd_mbox* %6 to [4 x i32]*, !dbg !8818
  %arrayidx5 = getelementptr [4 x i32], [4 x i32]* %words4, i64 0, i64 2, !dbg !8817
  %7 = load i32, i32* %arrayidx5, align 4, !dbg !8817
  %8 = load i8*, i8** %base.addr, align 8, !dbg !8819
  %add.ptr6 = getelementptr i8, i8* %8, i64 8, !dbg !8820
  call void @writel(i32 %7, i8* %add.ptr6) #11, !dbg !8821
  %9 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox.addr, align 8, !dbg !8822
  %bytes = bitcast %union.myrb_cmd_mbox* %9 to [16 x i8]*, !dbg !8823
  %arrayidx7 = getelementptr [16 x i8], [16 x i8]* %bytes, i64 0, i64 12, !dbg !8822
  %10 = load i8, i8* %arrayidx7, align 4, !dbg !8822
  %11 = load i8*, i8** %base.addr, align 8, !dbg !8824
  %add.ptr8 = getelementptr i8, i8* %11, i64 12, !dbg !8825
  call void @writeb(i8 zeroext %10, i8* %add.ptr8) #11, !dbg !8826
  ret void, !dbg !8827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PD_hw_mbox_new_cmd(i8* %base) #0 !dbg !8828 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8829, metadata !DIExpression()), !dbg !8830
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8831
  %add.ptr = getelementptr i8, i8* %0, i64 64, !dbg !8832
  call void @writeb(i8 zeroext 1, i8* %add.ptr) #11, !dbg !8833
  ret void, !dbg !8834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @DAC960_PD_hw_mbox_status_available(i8* %base) #0 !dbg !8835 {
entry:
  %base.addr = alloca i8*, align 8
  %odb = alloca i8, align 1
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8836, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.declare(metadata i8* %odb, metadata !8838, metadata !DIExpression()), !dbg !8839
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8840
  %add.ptr = getelementptr i8, i8* %0, i64 65, !dbg !8841
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8842
  store i8 %call, i8* %odb, align 1, !dbg !8839
  %1 = load i8, i8* %odb, align 1, !dbg !8843
  %conv = zext i8 %1 to i32, !dbg !8843
  %and = and i32 %conv, 1, !dbg !8844
  %tobool = icmp ne i32 %and, 0, !dbg !8843
  ret i1 %tobool, !dbg !8845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @DAC960_PD_read_status_cmd_ident(i8* %base) #0 !dbg !8846 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8849, metadata !DIExpression()), !dbg !8850
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8851
  %add.ptr = getelementptr i8, i8* %0, i64 13, !dbg !8852
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8853
  ret i8 %call, !dbg !8854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @DAC960_PD_read_status(i8* %base) #0 !dbg !8855 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8856, metadata !DIExpression()), !dbg !8857
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8858
  %add.ptr = getelementptr i8, i8* %0, i64 14, !dbg !8859
  %call = call zeroext i16 @readw(i8* %add.ptr) #11, !dbg !8860
  ret i16 %call, !dbg !8861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_PD_ack_intr(i8* %base) #0 !dbg !8862 {
entry:
  %base.addr = alloca i8*, align 8
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8863, metadata !DIExpression()), !dbg !8864
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8865
  %add.ptr = getelementptr i8, i8* %0, i64 65, !dbg !8866
  call void @writeb(i8 zeroext 1, i8* %add.ptr) #11, !dbg !8867
  ret void, !dbg !8868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @DAC960_P_qcmd(%struct.myrb_hba* %cb, %struct.myrb_cmdblk* %cmd_blk) #0 !dbg !8869 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %cmd_blk.addr = alloca %struct.myrb_cmdblk*, align 8
  %base = alloca i8*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !8870, metadata !DIExpression()), !dbg !8871
  store %struct.myrb_cmdblk* %cmd_blk, %struct.myrb_cmdblk** %cmd_blk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk.addr, metadata !8872, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.declare(metadata i8** %base, metadata !8874, metadata !DIExpression()), !dbg !8875
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !8876
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 38, !dbg !8877
  %1 = load i8*, i8** %io_base, align 8, !dbg !8877
  store i8* %1, i8** %base, align 8, !dbg !8875
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !8878, metadata !DIExpression()), !dbg !8879
  %2 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8880
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %2, i32 0, i32 0, !dbg !8881
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8879
  %3 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8882
  %common = bitcast %union.myrb_cmd_mbox* %3 to %struct.anon.77*, !dbg !8883
  %opcode = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common, i32 0, i32 0, !dbg !8884
  %4 = load i8, i8* %opcode, align 4, !dbg !8884
  %conv = zext i8 %4 to i32, !dbg !8882
  switch i32 %conv, label %sw.default [
    i32 83, label %sw.bb
    i32 80, label %sw.bb4
    i32 54, label %sw.bb7
    i32 55, label %sw.bb10
    i32 182, label %sw.bb13
    i32 183, label %sw.bb16
  ], !dbg !8885

sw.bb:                                            ; preds = %entry
  %5 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8886
  %common2 = bitcast %union.myrb_cmd_mbox* %5 to %struct.anon.77*, !dbg !8888
  %opcode3 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common2, i32 0, i32 0, !dbg !8889
  store i8 5, i8* %opcode3, align 4, !dbg !8890
  br label %sw.epilog, !dbg !8891

sw.bb4:                                           ; preds = %entry
  %6 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8892
  %common5 = bitcast %union.myrb_cmd_mbox* %6 to %struct.anon.77*, !dbg !8893
  %opcode6 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common5, i32 0, i32 0, !dbg !8894
  store i8 20, i8* %opcode6, align 4, !dbg !8895
  br label %sw.epilog, !dbg !8896

sw.bb7:                                           ; preds = %entry
  %7 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8897
  %common8 = bitcast %union.myrb_cmd_mbox* %7 to %struct.anon.77*, !dbg !8898
  %opcode9 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common8, i32 0, i32 0, !dbg !8899
  store i8 2, i8* %opcode9, align 4, !dbg !8900
  %8 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8901
  call void @myrb_translate_to_rw_command(%struct.myrb_cmdblk* %8) #11, !dbg !8902
  br label %sw.epilog, !dbg !8903

sw.bb10:                                          ; preds = %entry
  %9 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8904
  %common11 = bitcast %union.myrb_cmd_mbox* %9 to %struct.anon.77*, !dbg !8905
  %opcode12 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common11, i32 0, i32 0, !dbg !8906
  store i8 3, i8* %opcode12, align 4, !dbg !8907
  %10 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8908
  call void @myrb_translate_to_rw_command(%struct.myrb_cmdblk* %10) #11, !dbg !8909
  br label %sw.epilog, !dbg !8910

sw.bb13:                                          ; preds = %entry
  %11 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8911
  %common14 = bitcast %union.myrb_cmd_mbox* %11 to %struct.anon.77*, !dbg !8912
  %opcode15 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common14, i32 0, i32 0, !dbg !8913
  store i8 -126, i8* %opcode15, align 4, !dbg !8914
  %12 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8915
  call void @myrb_translate_to_rw_command(%struct.myrb_cmdblk* %12) #11, !dbg !8916
  br label %sw.epilog, !dbg !8917

sw.bb16:                                          ; preds = %entry
  %13 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8918
  %common17 = bitcast %union.myrb_cmd_mbox* %13 to %struct.anon.77*, !dbg !8919
  %opcode18 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %common17, i32 0, i32 0, !dbg !8920
  store i8 -125, i8* %opcode18, align 4, !dbg !8921
  %14 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8922
  call void @myrb_translate_to_rw_command(%struct.myrb_cmdblk* %14) #11, !dbg !8923
  br label %sw.epilog, !dbg !8924

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !8925

sw.epilog:                                        ; preds = %sw.default, %sw.bb16, %sw.bb13, %sw.bb10, %sw.bb7, %sw.bb4, %sw.bb
  br label %while.cond, !dbg !8926

while.cond:                                       ; preds = %while.body, %sw.epilog
  %15 = load i8*, i8** %base, align 8, !dbg !8927
  %call = call zeroext i1 @DAC960_PD_hw_mbox_is_full(i8* %15) #11, !dbg !8928
  br i1 %call, label %while.body, label %while.end, !dbg !8926

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295) #11, !dbg !8929
  br label %while.cond, !dbg !8926, !llvm.loop !8934

while.end:                                        ; preds = %while.cond
  %16 = load i8*, i8** %base, align 8, !dbg !8936
  %17 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8937
  call void @DAC960_PD_write_cmd_mbox(i8* %16, %union.myrb_cmd_mbox* %17) #11, !dbg !8938
  %18 = load i8*, i8** %base, align 8, !dbg !8939
  call void @DAC960_PD_hw_mbox_new_cmd(i8* %18) #11, !dbg !8940
  ret void, !dbg !8941
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_translate_to_rw_command(%struct.myrb_cmdblk* %cmd_blk) #0 !dbg !8942 {
entry:
  %cmd_blk.addr = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %ldev_num = alloca i32, align 4
  store %struct.myrb_cmdblk* %cmd_blk, %struct.myrb_cmdblk** %cmd_blk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk.addr, metadata !8945, metadata !DIExpression()), !dbg !8946
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !8947, metadata !DIExpression()), !dbg !8948
  %0 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8949
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %0, i32 0, i32 0, !dbg !8950
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8948
  call void @llvm.dbg.declare(metadata i32* %ldev_num, metadata !8951, metadata !DIExpression()), !dbg !8952
  %1 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8953
  %type5 = bitcast %union.myrb_cmd_mbox* %1 to %struct.anon.85*, !dbg !8954
  %ld = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5, i32 0, i32 2, !dbg !8955
  %2 = bitcast %struct.anon.86* %ld to i16*, !dbg !8956
  %bf.load = load i16, i16* %2, align 2, !dbg !8956
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !8956
  %bf.cast = trunc i16 %bf.lshr to i8, !dbg !8956
  %conv = zext i8 %bf.cast to i32, !dbg !8953
  store i32 %conv, i32* %ldev_num, align 4, !dbg !8952
  %3 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8957
  %bytes = bitcast %union.myrb_cmd_mbox* %3 to [16 x i8]*, !dbg !8958
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %bytes, i64 0, i64 3, !dbg !8957
  %4 = load i8, i8* %arrayidx, align 1, !dbg !8959
  %conv2 = zext i8 %4 to i32, !dbg !8959
  %and = and i32 %conv2, 7, !dbg !8959
  %conv3 = trunc i32 %and to i8, !dbg !8959
  store i8 %conv3, i8* %arrayidx, align 1, !dbg !8959
  %5 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8960
  %bytes4 = bitcast %union.myrb_cmd_mbox* %5 to [16 x i8]*, !dbg !8961
  %arrayidx5 = getelementptr [16 x i8], [16 x i8]* %bytes4, i64 0, i64 7, !dbg !8960
  %6 = load i8, i8* %arrayidx5, align 1, !dbg !8960
  %conv6 = zext i8 %6 to i32, !dbg !8960
  %shl = shl i32 %conv6, 6, !dbg !8962
  %7 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8963
  %bytes7 = bitcast %union.myrb_cmd_mbox* %7 to [16 x i8]*, !dbg !8964
  %arrayidx8 = getelementptr [16 x i8], [16 x i8]* %bytes7, i64 0, i64 3, !dbg !8963
  %8 = load i8, i8* %arrayidx8, align 1, !dbg !8965
  %conv9 = zext i8 %8 to i32, !dbg !8965
  %or = or i32 %conv9, %shl, !dbg !8965
  %conv10 = trunc i32 %or to i8, !dbg !8965
  store i8 %conv10, i8* %arrayidx8, align 1, !dbg !8965
  %9 = load i32, i32* %ldev_num, align 4, !dbg !8966
  %conv11 = trunc i32 %9 to i8, !dbg !8966
  %10 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8967
  %bytes12 = bitcast %union.myrb_cmd_mbox* %10 to [16 x i8]*, !dbg !8968
  %arrayidx13 = getelementptr [16 x i8], [16 x i8]* %bytes12, i64 0, i64 7, !dbg !8967
  store i8 %conv11, i8* %arrayidx13, align 1, !dbg !8969
  ret void, !dbg !8970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_translate_enquiry(i8* %enq) #0 !dbg !8971 {
entry:
  %enq.addr = alloca i8*, align 8
  store i8* %enq, i8** %enq.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %enq.addr, metadata !8972, metadata !DIExpression()), !dbg !8973
  %0 = load i8*, i8** %enq.addr, align 8, !dbg !8974
  %add.ptr = getelementptr i8, i8* %0, i64 132, !dbg !8975
  %1 = load i8*, i8** %enq.addr, align 8, !dbg !8976
  %add.ptr1 = getelementptr i8, i8* %1, i64 36, !dbg !8977
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %add.ptr1, i64 64, i1 false), !dbg !8978
  %2 = load i8*, i8** %enq.addr, align 8, !dbg !8979
  %add.ptr2 = getelementptr i8, i8* %2, i64 36, !dbg !8980
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr2, i8 0, i64 96, i1 false), !dbg !8981
  ret void, !dbg !8982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_translate_from_rw_command(%struct.myrb_cmdblk* %cmd_blk) #0 !dbg !8983 {
entry:
  %cmd_blk.addr = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %ldev_num = alloca i32, align 4
  store %struct.myrb_cmdblk* %cmd_blk, %struct.myrb_cmdblk** %cmd_blk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk.addr, metadata !8984, metadata !DIExpression()), !dbg !8985
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !8986, metadata !DIExpression()), !dbg !8987
  %0 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !8988
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %0, i32 0, i32 0, !dbg !8989
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8987
  call void @llvm.dbg.declare(metadata i32* %ldev_num, metadata !8990, metadata !DIExpression()), !dbg !8991
  %1 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8992
  %bytes = bitcast %union.myrb_cmd_mbox* %1 to [16 x i8]*, !dbg !8993
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %bytes, i64 0, i64 7, !dbg !8992
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8992
  %conv = zext i8 %2 to i32, !dbg !8992
  store i32 %conv, i32* %ldev_num, align 4, !dbg !8991
  %3 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8994
  %bytes2 = bitcast %union.myrb_cmd_mbox* %3 to [16 x i8]*, !dbg !8995
  %arrayidx3 = getelementptr [16 x i8], [16 x i8]* %bytes2, i64 0, i64 3, !dbg !8994
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !8994
  %conv4 = zext i8 %4 to i32, !dbg !8994
  %shr = ashr i32 %conv4, 6, !dbg !8996
  %conv5 = trunc i32 %shr to i8, !dbg !8994
  %5 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !8997
  %bytes6 = bitcast %union.myrb_cmd_mbox* %5 to [16 x i8]*, !dbg !8998
  %arrayidx7 = getelementptr [16 x i8], [16 x i8]* %bytes6, i64 0, i64 7, !dbg !8997
  store i8 %conv5, i8* %arrayidx7, align 1, !dbg !8999
  %6 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !9000
  %bytes8 = bitcast %union.myrb_cmd_mbox* %6 to [16 x i8]*, !dbg !9001
  %arrayidx9 = getelementptr [16 x i8], [16 x i8]* %bytes8, i64 0, i64 3, !dbg !9000
  %7 = load i8, i8* %arrayidx9, align 1, !dbg !9002
  %conv10 = zext i8 %7 to i32, !dbg !9002
  %and = and i32 %conv10, 7, !dbg !9002
  %conv11 = trunc i32 %and to i8, !dbg !9002
  store i8 %conv11, i8* %arrayidx9, align 1, !dbg !9002
  %8 = load i32, i32* %ldev_num, align 4, !dbg !9003
  %shl = shl i32 %8, 3, !dbg !9004
  %9 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !9005
  %bytes12 = bitcast %union.myrb_cmd_mbox* %9 to [16 x i8]*, !dbg !9006
  %arrayidx13 = getelementptr [16 x i8], [16 x i8]* %bytes12, i64 0, i64 3, !dbg !9005
  %10 = load i8, i8* %arrayidx13, align 1, !dbg !9007
  %conv14 = zext i8 %10 to i32, !dbg !9007
  %or = or i32 %conv14, %shl, !dbg !9007
  %conv15 = trunc i32 %or to i8, !dbg !9007
  store i8 %conv15, i8* %arrayidx13, align 1, !dbg !9007
  ret void, !dbg !9008
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_probe(%struct.pci_dev* %dev, %struct.pci_device_id* %entry1) #0 !dbg !9009 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %entry.addr = alloca %struct.pci_device_id*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %ret = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  store %struct.pci_device_id* %entry1, %struct.pci_device_id** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %entry.addr, metadata !9012, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !9014, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9016, metadata !DIExpression()), !dbg !9017
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9018
  %1 = load %struct.pci_device_id*, %struct.pci_device_id** %entry.addr, align 8, !dbg !9019
  %call = call %struct.myrb_hba* @myrb_detect(%struct.pci_dev* %0, %struct.pci_device_id* %1) #11, !dbg !9020
  store %struct.myrb_hba* %call, %struct.myrb_hba** %cb, align 8, !dbg !9021
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9022
  %tobool = icmp ne %struct.myrb_hba* %2, null, !dbg !9022
  br i1 %tobool, label %if.end, label %if.then, !dbg !9024

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !9025
  br label %return, !dbg !9025

if.end:                                           ; preds = %entry
  %3 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9026
  %call2 = call i32 @myrb_get_hba_config(%struct.myrb_hba* %3) #11, !dbg !9027
  store i32 %call2, i32* %ret, align 4, !dbg !9028
  %4 = load i32, i32* %ret, align 4, !dbg !9029
  %cmp = icmp slt i32 %4, 0, !dbg !9031
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !9032

if.then3:                                         ; preds = %if.end
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9033
  call void @myrb_cleanup(%struct.myrb_hba* %5) #11, !dbg !9035
  %6 = load i32, i32* %ret, align 4, !dbg !9036
  store i32 %6, i32* %retval, align 4, !dbg !9037
  br label %return, !dbg !9037

if.end4:                                          ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9038
  %8 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9040
  %call5 = call zeroext i1 @myrb_create_mempools(%struct.pci_dev* %7, %struct.myrb_hba* %8) #11, !dbg !9041
  br i1 %call5, label %if.end7, label %if.then6, !dbg !9042

if.then6:                                         ; preds = %if.end4
  store i32 -12, i32* %ret, align 4, !dbg !9043
  br label %failed, !dbg !9045

if.end7:                                          ; preds = %if.end4
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9046
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %9, i32 0, i32 18, !dbg !9047
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9047
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9048
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !9049
  %call9 = call i32 @scsi_add_host(%struct.Scsi_Host* %10, %struct.device* %dev8) #11, !dbg !9050
  store i32 %call9, i32* %ret, align 4, !dbg !9051
  %12 = load i32, i32* %ret, align 4, !dbg !9052
  %tobool10 = icmp ne i32 %12, 0, !dbg !9052
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !9054

if.then11:                                        ; preds = %if.end7
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9055
  %dev12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !9055
  %14 = load i32, i32* %ret, align 4, !dbg !9055
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i64 0, i64 0), i32 %14) #12, !dbg !9055
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9057
  call void @myrb_destroy_mempools(%struct.myrb_hba* %15) #11, !dbg !9058
  br label %failed, !dbg !9059

if.end13:                                         ; preds = %if.end7
  %16 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9060
  %host14 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %16, i32 0, i32 18, !dbg !9061
  %17 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host14, align 8, !dbg !9061
  call void @scsi_scan_host(%struct.Scsi_Host* %17) #11, !dbg !9062
  store i32 0, i32* %retval, align 4, !dbg !9063
  br label %return, !dbg !9063

failed:                                           ; preds = %if.then11, %if.then6
  call void @llvm.dbg.label(metadata !9064), !dbg !9065
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9066
  call void @myrb_cleanup(%struct.myrb_hba* %18) #11, !dbg !9067
  %19 = load i32, i32* %ret, align 4, !dbg !9068
  store i32 %19, i32* %retval, align 4, !dbg !9069
  br label %return, !dbg !9069

return:                                           ; preds = %failed, %if.end13, %if.then3, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !9070
  ret i32 %20, !dbg !9070
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_remove(%struct.pci_dev* %pdev) #0 !dbg !9071 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9072, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !9074, metadata !DIExpression()), !dbg !9075
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9076
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !9077
  %1 = bitcast i8* %call to %struct.myrb_hba*, !dbg !9077
  store %struct.myrb_hba* %1, %struct.myrb_hba** %cb, align 8, !dbg !9075
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9078
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 18, !dbg !9078
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9078
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 47, !dbg !9078
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.199, i64 0, i64 0)) #12, !dbg !9078
  %4 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9079
  %call1 = call zeroext i16 @myrb_exec_type3(%struct.myrb_hba* %4, i8 zeroext 10, i64 0) #11, !dbg !9080
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9081
  call void @myrb_cleanup(%struct.myrb_hba* %5) #11, !dbg !9082
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9083
  call void @myrb_destroy_mempools(%struct.myrb_hba* %6) #11, !dbg !9084
  ret void, !dbg !9085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.myrb_hba* @myrb_detect(%struct.pci_dev* %pdev, %struct.pci_device_id* %entry1) #0 !dbg !6399 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6569, metadata !DIExpression()), !dbg !9086
  %retval = alloca %struct.myrb_hba*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %entry.addr = alloca %struct.pci_device_id*, align 8
  %privdata = alloca %struct.myrb_privdata*, align 8
  %irq_handler = alloca i32 (i32, i8*)*, align 8
  %mmio_size = alloca i32, align 4
  %shost = alloca %struct.Scsi_Host*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9089, metadata !DIExpression()), !dbg !9090
  store %struct.pci_device_id* %entry1, %struct.pci_device_id** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %entry.addr, metadata !9091, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.declare(metadata %struct.myrb_privdata** %privdata, metadata !9093, metadata !DIExpression()), !dbg !9094
  %0 = load %struct.pci_device_id*, %struct.pci_device_id** %entry.addr, align 8, !dbg !9095
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %0, i32 0, i32 6, !dbg !9096
  %1 = load i64, i64* %driver_data, align 8, !dbg !9096
  %2 = inttoptr i64 %1 to %struct.myrb_privdata*, !dbg !9097
  store %struct.myrb_privdata* %2, %struct.myrb_privdata** %privdata, align 8, !dbg !9094
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %irq_handler, metadata !9098, metadata !DIExpression()), !dbg !9099
  %3 = load %struct.myrb_privdata*, %struct.myrb_privdata** %privdata, align 8, !dbg !9100
  %irq_handler2 = getelementptr inbounds %struct.myrb_privdata, %struct.myrb_privdata* %3, i32 0, i32 1, !dbg !9101
  %4 = load i32 (i32, i8*)*, i32 (i32, i8*)** %irq_handler2, align 8, !dbg !9101
  store i32 (i32, i8*)* %4, i32 (i32, i8*)** %irq_handler, align 8, !dbg !9099
  call void @llvm.dbg.declare(metadata i32* %mmio_size, metadata !9102, metadata !DIExpression()), !dbg !9103
  %5 = load %struct.myrb_privdata*, %struct.myrb_privdata** %privdata, align 8, !dbg !9104
  %mmio_size3 = getelementptr inbounds %struct.myrb_privdata, %struct.myrb_privdata* %5, i32 0, i32 2, !dbg !9105
  %6 = load i32, i32* %mmio_size3, align 8, !dbg !9105
  store i32 %6, i32* %mmio_size, align 4, !dbg !9103
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !9106, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !9108, metadata !DIExpression()), !dbg !9109
  store %struct.myrb_hba* null, %struct.myrb_hba** %cb, align 8, !dbg !9109
  %call = call %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template* @myrb_template, i32 672) #11, !dbg !9110
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !9111
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9112
  %tobool = icmp ne %struct.Scsi_Host* %7, null, !dbg !9112
  br i1 %tobool, label %if.end, label %if.then, !dbg !9114

if.then:                                          ; preds = %entry
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9115
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !9115
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !9115
  store %struct.myrb_hba* null, %struct.myrb_hba** %retval, align 8, !dbg !9117
  br label %return, !dbg !9117

if.end:                                           ; preds = %entry
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9118
  %max_cmd_len = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 23, !dbg !9119
  store i16 12, i16* %max_cmd_len, align 4, !dbg !9120
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9121
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 21, !dbg !9122
  store i64 256, i64* %max_lun, align 8, !dbg !9123
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9124
  %call4 = call i8* @shost_priv(%struct.Scsi_Host* %11) #11, !dbg !9125
  %12 = bitcast i8* %call4 to %struct.myrb_hba*, !dbg !9125
  store %struct.myrb_hba* %12, %struct.myrb_hba** %cb, align 8, !dbg !9126
  br label %do.body, !dbg !9127

do.body:                                          ; preds = %if.end
  %13 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9128
  %dcmd_mutex = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %13, i32 0, i32 54, !dbg !9128
  call void @__mutex_init(%struct.mutex* %dcmd_mutex, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), %struct.lock_class_key* @myrb_detect.__key) #11, !dbg !9128
  br label %do.end, !dbg !9128

do.end:                                           ; preds = %do.body
  br label %do.body5, !dbg !9130

do.body5:                                         ; preds = %do.end
  %14 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9131
  %dma_mutex = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %14, i32 0, i32 63, !dbg !9131
  call void @__mutex_init(%struct.mutex* %dma_mutex, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), %struct.lock_class_key* @myrb_detect.__key.27) #11, !dbg !9131
  br label %do.end6, !dbg !9131

do.end6:                                          ; preds = %do.body5
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9133
  %16 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9134
  %pdev7 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %16, i32 0, i32 17, !dbg !9135
  store %struct.pci_dev* %15, %struct.pci_dev** %pdev7, align 8, !dbg !9136
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9137
  %call8 = call i32 @pci_enable_device(%struct.pci_dev* %17) #11, !dbg !9139
  %tobool9 = icmp ne i32 %call8, 0, !dbg !9139
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9140

if.then10:                                        ; preds = %do.end6
  br label %failure, !dbg !9141

if.end11:                                         ; preds = %do.end6
  %18 = load %struct.myrb_privdata*, %struct.myrb_privdata** %privdata, align 8, !dbg !9142
  %hw_init = getelementptr inbounds %struct.myrb_privdata, %struct.myrb_privdata* %18, i32 0, i32 0, !dbg !9144
  %19 = load i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)*, i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)** %hw_init, align 8, !dbg !9144
  %cmp = icmp eq i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)* %19, @DAC960_PD_hw_init, !dbg !9145
  br i1 %cmp, label %if.then14, label %lor.lhs.false, !dbg !9146

lor.lhs.false:                                    ; preds = %if.end11
  %20 = load %struct.myrb_privdata*, %struct.myrb_privdata** %privdata, align 8, !dbg !9147
  %hw_init12 = getelementptr inbounds %struct.myrb_privdata, %struct.myrb_privdata* %20, i32 0, i32 0, !dbg !9148
  %21 = load i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)*, i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)** %hw_init12, align 8, !dbg !9148
  %cmp13 = icmp eq i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)* %21, @DAC960_P_hw_init, !dbg !9149
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !9150

if.then14:                                        ; preds = %lor.lhs.false, %if.end11
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9151
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 44, !dbg !9151
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !9151
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !9151
  %23 = load i64, i64* %start, align 8, !dbg !9151
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9153
  %io_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 36, !dbg !9154
  store i64 %23, i64* %io_addr, align 8, !dbg !9155
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9156
  %resource15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 44, !dbg !9156
  %arrayidx16 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource15, i64 0, i64 1, !dbg !9156
  %start17 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx16, i32 0, i32 0, !dbg !9156
  %26 = load i64, i64* %start17, align 8, !dbg !9156
  %27 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9157
  %pci_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %27, i32 0, i32 37, !dbg !9158
  store i64 %26, i64* %pci_addr, align 8, !dbg !9159
  br label %if.end22, !dbg !9160

if.else:                                          ; preds = %lor.lhs.false
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9161
  %resource18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 44, !dbg !9161
  %arrayidx19 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource18, i64 0, i64 0, !dbg !9161
  %start20 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx19, i32 0, i32 0, !dbg !9161
  %29 = load i64, i64* %start20, align 8, !dbg !9161
  %30 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9162
  %pci_addr21 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %30, i32 0, i32 37, !dbg !9163
  store i64 %29, i64* %pci_addr21, align 8, !dbg !9164
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then14
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9165
  %32 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9166
  %33 = bitcast %struct.myrb_hba* %32 to i8*, !dbg !9166
  call void @pci_set_drvdata(%struct.pci_dev* %31, i8* %33) #11, !dbg !9167
  br label %do.body23, !dbg !9168

do.body23:                                        ; preds = %if.end22
  %34 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9169
  %queue_lock = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %34, i32 0, i32 26, !dbg !9169
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9170
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !9171
  %rlock.i = bitcast %union.anon.1* %36 to %struct.raw_spinlock*, !dbg !9171
  %37 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9169
  %queue_lock25 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %37, i32 0, i32 26, !dbg !9169
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !9169
  %rlock = bitcast %union.anon.1* %38 to %struct.raw_spinlock*, !dbg !9169
  %39 = bitcast %struct.spinlock* %queue_lock25 to i8*, !dbg !9169
  %40 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !9169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 1 %40, i64 0, i1 false), !dbg !9169
  br label %do.end26, !dbg !9169

do.end26:                                         ; preds = %do.body23
  %41 = load i32, i32* %mmio_size, align 4, !dbg !9172
  %conv = zext i32 %41 to i64, !dbg !9172
  %cmp27 = icmp ult i64 %conv, 4096, !dbg !9174
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !9175

if.then29:                                        ; preds = %do.end26
  store i32 4096, i32* %mmio_size, align 4, !dbg !9176
  br label %if.end30, !dbg !9177

if.end30:                                         ; preds = %if.then29, %do.end26
  %42 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9178
  %pci_addr31 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %42, i32 0, i32 37, !dbg !9179
  %43 = load i64, i64* %pci_addr31, align 8, !dbg !9179
  %and = and i64 %43, -4096, !dbg !9180
  %44 = load i32, i32* %mmio_size, align 4, !dbg !9181
  %conv32 = zext i32 %44 to i64, !dbg !9181
  %call33 = call i8* @ioremap(i64 %and, i64 %conv32) #11, !dbg !9182
  %45 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9183
  %mmio_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %45, i32 0, i32 39, !dbg !9184
  store i8* %call33, i8** %mmio_base, align 8, !dbg !9185
  %46 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9186
  %mmio_base34 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %46, i32 0, i32 39, !dbg !9188
  %47 = load i8*, i8** %mmio_base34, align 8, !dbg !9188
  %cmp35 = icmp eq i8* %47, null, !dbg !9189
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !9190

if.then37:                                        ; preds = %if.end30
  %48 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9191
  %dev38 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %48, i32 0, i32 41, !dbg !9191
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev38, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29, i64 0, i64 0)) #12, !dbg !9191
  br label %failure, !dbg !9193

if.end39:                                         ; preds = %if.end30
  %49 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9194
  %mmio_base40 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %49, i32 0, i32 39, !dbg !9195
  %50 = load i8*, i8** %mmio_base40, align 8, !dbg !9195
  %51 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9196
  %pci_addr41 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %51, i32 0, i32 37, !dbg !9197
  %52 = load i64, i64* %pci_addr41, align 8, !dbg !9197
  %and42 = and i64 %52, 4095, !dbg !9198
  %add.ptr = getelementptr i8, i8* %50, i64 %and42, !dbg !9199
  %53 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9200
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %53, i32 0, i32 38, !dbg !9201
  store i8* %add.ptr, i8** %io_base, align 8, !dbg !9202
  %54 = load %struct.myrb_privdata*, %struct.myrb_privdata** %privdata, align 8, !dbg !9203
  %hw_init43 = getelementptr inbounds %struct.myrb_privdata, %struct.myrb_privdata* %54, i32 0, i32 0, !dbg !9205
  %55 = load i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)*, i32 (%struct.pci_dev*, %struct.myrb_hba*, i8*)** %hw_init43, align 8, !dbg !9205
  %56 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9206
  %57 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9207
  %58 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9208
  %io_base44 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %58, i32 0, i32 38, !dbg !9209
  %59 = load i8*, i8** %io_base44, align 8, !dbg !9209
  %call45 = call i32 %55(%struct.pci_dev* %56, %struct.myrb_hba* %57, i8* %59) #11, !dbg !9203
  %tobool46 = icmp ne i32 %call45, 0, !dbg !9203
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !9210

if.then47:                                        ; preds = %if.end39
  br label %failure, !dbg !9211

if.end48:                                         ; preds = %if.end39
  %60 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9212
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %60, i32 0, i32 43, !dbg !9214
  %61 = load i32, i32* %irq, align 4, !dbg !9214
  %62 = load i32 (i32, i8*)*, i32 (i32, i8*)** %irq_handler, align 8, !dbg !9215
  %63 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9216
  %64 = bitcast %struct.myrb_hba* %63 to i8*, !dbg !9216
  %call49 = call i32 @request_irq(i32 %61, i32 (i32, i8*)* %62, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i8* %64) #11, !dbg !9217
  %cmp50 = icmp slt i32 %call49, 0, !dbg !9218
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !9219

if.then52:                                        ; preds = %if.end48
  %65 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9220
  %dev53 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %65, i32 0, i32 41, !dbg !9220
  %66 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9220
  %irq54 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 43, !dbg !9220
  %67 = load i32, i32* %irq54, align 4, !dbg !9220
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev53, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0), i32 %67) #12, !dbg !9220
  br label %failure, !dbg !9222

if.end55:                                         ; preds = %if.end48
  %68 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9223
  %irq56 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %68, i32 0, i32 43, !dbg !9224
  %69 = load i32, i32* %irq56, align 4, !dbg !9224
  %70 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9225
  %irq57 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %70, i32 0, i32 35, !dbg !9226
  store i32 %69, i32* %irq57, align 4, !dbg !9227
  %71 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9228
  store %struct.myrb_hba* %71, %struct.myrb_hba** %retval, align 8, !dbg !9229
  br label %return, !dbg !9229

failure:                                          ; preds = %if.then52, %if.then47, %if.then37, %if.then10
  call void @llvm.dbg.label(metadata !9230), !dbg !9231
  %72 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9232
  %dev58 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %72, i32 0, i32 41, !dbg !9232
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev58, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0)) #12, !dbg !9232
  %73 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9233
  call void @myrb_cleanup(%struct.myrb_hba* %73) #11, !dbg !9234
  store %struct.myrb_hba* null, %struct.myrb_hba** %retval, align 8, !dbg !9235
  br label %return, !dbg !9235

return:                                           ; preds = %failure, %if.end55, %if.then
  %74 = load %struct.myrb_hba*, %struct.myrb_hba** %retval, align 8, !dbg !9236
  ret %struct.myrb_hba* %74, !dbg !9236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_get_hba_config(%struct.myrb_hba* %cb) #0 !dbg !9237 {
entry:
  %retval = alloca i32, align 4
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %enquiry2 = alloca %struct.myrb_enquiry2*, align 8
  %enquiry2_addr = alloca i64, align 8
  %config2 = alloca %struct.myrb_config2*, align 8
  %config2_addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %pchan_max = alloca i32, align 4
  %pchan_cur = alloca i32, align 4
  %status = alloca i16, align 2
  %ret = alloca i32, align 4
  %memsize = alloca i32, align 4
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !9240, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.declare(metadata %struct.myrb_enquiry2** %enquiry2, metadata !9242, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.declare(metadata i64* %enquiry2_addr, metadata !9245, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.declare(metadata %struct.myrb_config2** %config2, metadata !9247, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.declare(metadata i64* %config2_addr, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !9252, metadata !DIExpression()), !dbg !9253
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9254
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 18, !dbg !9255
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9255
  store %struct.Scsi_Host* %1, %struct.Scsi_Host** %shost, align 8, !dbg !9253
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !9256, metadata !DIExpression()), !dbg !9257
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9258
  %pdev1 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 17, !dbg !9259
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !9259
  store %struct.pci_dev* %3, %struct.pci_dev** %pdev, align 8, !dbg !9257
  call void @llvm.dbg.declare(metadata i32* %pchan_max, metadata !9260, metadata !DIExpression()), !dbg !9261
  store i32 0, i32* %pchan_max, align 4, !dbg !9261
  call void @llvm.dbg.declare(metadata i32* %pchan_cur, metadata !9262, metadata !DIExpression()), !dbg !9263
  store i32 0, i32* %pchan_cur, align 4, !dbg !9263
  call void @llvm.dbg.declare(metadata i16* %status, metadata !9264, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9266, metadata !DIExpression()), !dbg !9267
  store i32 -19, i32* %ret, align 4, !dbg !9267
  call void @llvm.dbg.declare(metadata i32* %memsize, metadata !9268, metadata !DIExpression()), !dbg !9269
  store i32 0, i32* %memsize, align 4, !dbg !9269
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9270
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !9271
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 128, i64* %enquiry2_addr, i32 3264) #11, !dbg !9272
  %5 = bitcast i8* %call to %struct.myrb_enquiry2*, !dbg !9272
  store %struct.myrb_enquiry2* %5, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9273
  %6 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9274
  %tobool = icmp ne %struct.myrb_enquiry2* %6, null, !dbg !9274
  br i1 %tobool, label %if.end, label %if.then, !dbg !9276

if.then:                                          ; preds = %entry
  %7 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9277
  %host2 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %7, i32 0, i32 18, !dbg !9277
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host2, align 8, !dbg !9277
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 47, !dbg !9277
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.106, i64 0, i64 0)) #12, !dbg !9277
  store i32 -12, i32* %retval, align 4, !dbg !9279
  br label %return, !dbg !9279

if.end:                                           ; preds = %entry
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9280
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !9281
  %call4 = call i8* @dma_alloc_coherent(%struct.device* %dev3, i64 64, i64* %config2_addr, i32 3264) #11, !dbg !9282
  %10 = bitcast i8* %call4 to %struct.myrb_config2*, !dbg !9282
  store %struct.myrb_config2* %10, %struct.myrb_config2** %config2, align 8, !dbg !9283
  %11 = load %struct.myrb_config2*, %struct.myrb_config2** %config2, align 8, !dbg !9284
  %tobool5 = icmp ne %struct.myrb_config2* %11, null, !dbg !9284
  br i1 %tobool5, label %if.end10, label %if.then6, !dbg !9286

if.then6:                                         ; preds = %if.end
  %12 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9287
  %host7 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %12, i32 0, i32 18, !dbg !9287
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host7, align 8, !dbg !9287
  %shost_gendev8 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %13, i32 0, i32 47, !dbg !9287
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), %struct.device* %shost_gendev8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.107, i64 0, i64 0)) #12, !dbg !9287
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9289
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !9290
  %15 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9291
  %16 = bitcast %struct.myrb_enquiry2* %15 to i8*, !dbg !9291
  %17 = load i64, i64* %enquiry2_addr, align 8, !dbg !9292
  call void @dma_free_coherent(%struct.device* %dev9, i64 128, i8* %16, i64 %17) #11, !dbg !9293
  store i32 -12, i32* %retval, align 4, !dbg !9294
  br label %return, !dbg !9294

if.end10:                                         ; preds = %if.end
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9295
  %dma_mutex = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 63, !dbg !9296
  call void @mutex_lock(%struct.mutex* %dma_mutex) #11, !dbg !9297
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9298
  %call11 = call zeroext i16 @myrb_hba_enquiry(%struct.myrb_hba* %19) #11, !dbg !9299
  store i16 %call11, i16* %status, align 2, !dbg !9300
  %20 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9301
  %dma_mutex12 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %20, i32 0, i32 63, !dbg !9302
  call void @mutex_unlock(%struct.mutex* %dma_mutex12) #11, !dbg !9303
  %21 = load i16, i16* %status, align 2, !dbg !9304
  %conv = zext i16 %21 to i32, !dbg !9304
  %cmp = icmp ne i32 %conv, 0, !dbg !9306
  br i1 %cmp, label %if.then14, label %if.end17, !dbg !9307

if.then14:                                        ; preds = %if.end10
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9308
  %host15 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 18, !dbg !9308
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host15, align 8, !dbg !9308
  %shost_gendev16 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %23, i32 0, i32 47, !dbg !9308
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0), %struct.device* %shost_gendev16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.109, i64 0, i64 0)) #12, !dbg !9308
  br label %out_free, !dbg !9310

if.end17:                                         ; preds = %if.end10
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9311
  %25 = load i64, i64* %enquiry2_addr, align 8, !dbg !9312
  %call18 = call zeroext i16 @myrb_exec_type3(%struct.myrb_hba* %24, i8 zeroext 28, i64 %25) #11, !dbg !9313
  store i16 %call18, i16* %status, align 2, !dbg !9314
  %26 = load i16, i16* %status, align 2, !dbg !9315
  %conv19 = zext i16 %26 to i32, !dbg !9315
  %cmp20 = icmp ne i32 %conv19, 0, !dbg !9317
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !9318

if.then22:                                        ; preds = %if.end17
  %27 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9319
  %host23 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %27, i32 0, i32 18, !dbg !9319
  %28 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host23, align 8, !dbg !9319
  %shost_gendev24 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %28, i32 0, i32 47, !dbg !9319
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0), %struct.device* %shost_gendev24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.110, i64 0, i64 0)) #12, !dbg !9319
  br label %out_free, !dbg !9321

if.end25:                                         ; preds = %if.end17
  %29 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9322
  %30 = load i64, i64* %config2_addr, align 8, !dbg !9323
  %call26 = call zeroext i16 @myrb_exec_type3(%struct.myrb_hba* %29, i8 zeroext 61, i64 %30) #11, !dbg !9324
  store i16 %call26, i16* %status, align 2, !dbg !9325
  %31 = load i16, i16* %status, align 2, !dbg !9326
  %conv27 = zext i16 %31 to i32, !dbg !9326
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !9328
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !9329

if.then30:                                        ; preds = %if.end25
  %32 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9330
  %host31 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %32, i32 0, i32 18, !dbg !9330
  %33 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host31, align 8, !dbg !9330
  %shost_gendev32 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %33, i32 0, i32 47, !dbg !9330
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0), %struct.device* %shost_gendev32, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.111, i64 0, i64 0)) #12, !dbg !9330
  br label %out_free, !dbg !9332

if.end33:                                         ; preds = %if.end25
  %34 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9333
  %call34 = call zeroext i16 @myrb_get_ldev_info(%struct.myrb_hba* %34) #11, !dbg !9334
  store i16 %call34, i16* %status, align 2, !dbg !9335
  %35 = load i16, i16* %status, align 2, !dbg !9336
  %conv35 = zext i16 %35 to i32, !dbg !9336
  %cmp36 = icmp ne i32 %conv35, 0, !dbg !9338
  br i1 %cmp36, label %if.then38, label %if.end41, !dbg !9339

if.then38:                                        ; preds = %if.end33
  %36 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9340
  %host39 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %36, i32 0, i32 18, !dbg !9340
  %37 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host39, align 8, !dbg !9340
  %shost_gendev40 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %37, i32 0, i32 47, !dbg !9340
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0), %struct.device* %shost_gendev40, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.112, i64 0, i64 0)) #12, !dbg !9340
  br label %out_free, !dbg !9342

if.end41:                                         ; preds = %if.end33
  %38 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9343
  %hw = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %38, i32 0, i32 0, !dbg !9344
  %sub_model = getelementptr inbounds %struct.anon.91, %struct.anon.91* %hw, i32 0, i32 0, !dbg !9345
  %39 = load i8, i8* %sub_model, align 1, !dbg !9345
  %conv42 = zext i8 %39 to i32, !dbg !9343
  switch i32 %conv42, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb52
    i32 16, label %sw.bb56
    i32 17, label %sw.bb60
    i32 18, label %sw.bb64
    i32 19, label %sw.bb68
    i32 20, label %sw.bb72
    i32 21, label %sw.bb76
    i32 22, label %sw.bb80
    i32 32, label %sw.bb84
  ], !dbg !9346

sw.bb:                                            ; preds = %if.end41
  %40 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9347
  %scsi_cap = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %40, i32 0, i32 39, !dbg !9350
  %41 = bitcast %struct.anon.94* %scsi_cap to i8*, !dbg !9351
  %bf.load = load i8, i8* %41, align 1, !dbg !9351
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !9351
  %bf.clear = and i8 %bf.lshr, 3, !dbg !9351
  %conv43 = zext i8 %bf.clear to i32, !dbg !9347
  %cmp44 = icmp eq i32 %conv43, 1, !dbg !9352
  br i1 %cmp44, label %if.then46, label %if.else, !dbg !9353

if.then46:                                        ; preds = %sw.bb
  %42 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9354
  %model_name = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %42, i32 0, i32 33, !dbg !9355
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %model_name, i64 0, i64 0, !dbg !9354
  %call47 = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.113, i64 0, i64 0)) #11, !dbg !9356
  br label %if.end51, !dbg !9356

if.else:                                          ; preds = %sw.bb
  %43 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9357
  %model_name48 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %43, i32 0, i32 33, !dbg !9358
  %arraydecay49 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name48, i64 0, i64 0, !dbg !9357
  %call50 = call i8* @strcpy(i8* %arraydecay49, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.114, i64 0, i64 0)) #11, !dbg !9359
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then46
  br label %sw.epilog, !dbg !9360

sw.bb52:                                          ; preds = %if.end41
  %44 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9361
  %model_name53 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %44, i32 0, i32 33, !dbg !9362
  %arraydecay54 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name53, i64 0, i64 0, !dbg !9361
  %call55 = call i8* @strcpy(i8* %arraydecay54, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0)) #11, !dbg !9363
  br label %sw.epilog, !dbg !9364

sw.bb56:                                          ; preds = %if.end41
  %45 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9365
  %model_name57 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %45, i32 0, i32 33, !dbg !9366
  %arraydecay58 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name57, i64 0, i64 0, !dbg !9365
  %call59 = call i8* @strcpy(i8* %arraydecay58, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i64 0, i64 0)) #11, !dbg !9367
  br label %sw.epilog, !dbg !9368

sw.bb60:                                          ; preds = %if.end41
  %46 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9369
  %model_name61 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %46, i32 0, i32 33, !dbg !9370
  %arraydecay62 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name61, i64 0, i64 0, !dbg !9369
  %call63 = call i8* @strcpy(i8* %arraydecay62, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i64 0, i64 0)) #11, !dbg !9371
  br label %sw.epilog, !dbg !9372

sw.bb64:                                          ; preds = %if.end41
  %47 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9373
  %model_name65 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %47, i32 0, i32 33, !dbg !9374
  %arraydecay66 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name65, i64 0, i64 0, !dbg !9373
  %call67 = call i8* @strcpy(i8* %arraydecay66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.118, i64 0, i64 0)) #11, !dbg !9375
  br label %sw.epilog, !dbg !9376

sw.bb68:                                          ; preds = %if.end41
  %48 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9377
  %model_name69 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %48, i32 0, i32 33, !dbg !9378
  %arraydecay70 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name69, i64 0, i64 0, !dbg !9377
  %call71 = call i8* @strcpy(i8* %arraydecay70, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i64 0, i64 0)) #11, !dbg !9379
  br label %sw.epilog, !dbg !9380

sw.bb72:                                          ; preds = %if.end41
  %49 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9381
  %model_name73 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %49, i32 0, i32 33, !dbg !9382
  %arraydecay74 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name73, i64 0, i64 0, !dbg !9381
  %call75 = call i8* @strcpy(i8* %arraydecay74, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i64 0, i64 0)) #11, !dbg !9383
  br label %sw.epilog, !dbg !9384

sw.bb76:                                          ; preds = %if.end41
  %50 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9385
  %model_name77 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %50, i32 0, i32 33, !dbg !9386
  %arraydecay78 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name77, i64 0, i64 0, !dbg !9385
  %call79 = call i8* @strcpy(i8* %arraydecay78, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.121, i64 0, i64 0)) #11, !dbg !9387
  br label %sw.epilog, !dbg !9388

sw.bb80:                                          ; preds = %if.end41
  %51 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9389
  %model_name81 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %51, i32 0, i32 33, !dbg !9390
  %arraydecay82 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name81, i64 0, i64 0, !dbg !9389
  %call83 = call i8* @strcpy(i8* %arraydecay82, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.122, i64 0, i64 0)) #11, !dbg !9391
  br label %sw.epilog, !dbg !9392

sw.bb84:                                          ; preds = %if.end41
  %52 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9393
  %model_name85 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %52, i32 0, i32 33, !dbg !9394
  %arraydecay86 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name85, i64 0, i64 0, !dbg !9393
  %call87 = call i8* @strcpy(i8* %arraydecay86, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.123, i64 0, i64 0)) #11, !dbg !9395
  br label %sw.epilog, !dbg !9396

sw.default:                                       ; preds = %if.end41
  %53 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9397
  %host88 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %53, i32 0, i32 18, !dbg !9397
  %54 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host88, align 8, !dbg !9397
  %shost_gendev89 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %54, i32 0, i32 47, !dbg !9397
  %55 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9397
  %hw90 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %55, i32 0, i32 0, !dbg !9397
  %sub_model91 = getelementptr inbounds %struct.anon.91, %struct.anon.91* %hw90, i32 0, i32 0, !dbg !9397
  %56 = load i8, i8* %sub_model91, align 1, !dbg !9397
  %conv92 = zext i8 %56 to i32, !dbg !9397
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0), %struct.device* %shost_gendev89, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.124, i64 0, i64 0), i32 %conv92) #12, !dbg !9397
  br label %out, !dbg !9398

sw.epilog:                                        ; preds = %sw.bb84, %sw.bb80, %sw.bb76, %sw.bb72, %sw.bb68, %sw.bb64, %sw.bb60, %sw.bb56, %sw.bb52, %if.end51
  %57 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9399
  %fw = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %57, i32 0, i32 1, !dbg !9401
  %major_version = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw, i32 0, i32 0, !dbg !9402
  %58 = load i8, i8* %major_version, align 1, !dbg !9402
  %conv93 = zext i8 %58 to i32, !dbg !9399
  %cmp94 = icmp eq i32 %conv93, 0, !dbg !9403
  br i1 %cmp94, label %if.then96, label %if.end103, !dbg !9404

if.then96:                                        ; preds = %sw.epilog
  %59 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9405
  %enquiry = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %59, i32 0, i32 55, !dbg !9407
  %60 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry, align 8, !dbg !9407
  %fw_major_version = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %60, i32 0, i32 7, !dbg !9408
  %61 = load i8, i8* %fw_major_version, align 1, !dbg !9408
  %62 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9409
  %fw97 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %62, i32 0, i32 1, !dbg !9410
  %major_version98 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw97, i32 0, i32 0, !dbg !9411
  store i8 %61, i8* %major_version98, align 1, !dbg !9412
  %63 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9413
  %enquiry99 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %63, i32 0, i32 55, !dbg !9414
  %64 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry99, align 8, !dbg !9414
  %fw_minor_version = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %64, i32 0, i32 6, !dbg !9415
  %65 = load i8, i8* %fw_minor_version, align 1, !dbg !9415
  %66 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9416
  %fw100 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %66, i32 0, i32 1, !dbg !9417
  %minor_version = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw100, i32 0, i32 1, !dbg !9418
  store i8 %65, i8* %minor_version, align 1, !dbg !9419
  %67 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9420
  %fw101 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %67, i32 0, i32 1, !dbg !9421
  %firmware_type = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw101, i32 0, i32 3, !dbg !9422
  store i8 48, i8* %firmware_type, align 1, !dbg !9423
  %68 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9424
  %fw102 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %68, i32 0, i32 1, !dbg !9425
  %turn_id = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw102, i32 0, i32 2, !dbg !9426
  store i8 0, i8* %turn_id, align 1, !dbg !9427
  br label %if.end103, !dbg !9428

if.end103:                                        ; preds = %if.then96, %sw.epilog
  %69 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9429
  %fw_version = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %69, i32 0, i32 34, !dbg !9430
  %arraydecay104 = getelementptr inbounds [12 x i8], [12 x i8]* %fw_version, i64 0, i64 0, !dbg !9429
  %70 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9431
  %fw105 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %70, i32 0, i32 1, !dbg !9432
  %major_version106 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw105, i32 0, i32 0, !dbg !9433
  %71 = load i8, i8* %major_version106, align 1, !dbg !9433
  %conv107 = zext i8 %71 to i32, !dbg !9431
  %72 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9434
  %fw108 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %72, i32 0, i32 1, !dbg !9435
  %minor_version109 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw108, i32 0, i32 1, !dbg !9436
  %73 = load i8, i8* %minor_version109, align 1, !dbg !9436
  %conv110 = zext i8 %73 to i32, !dbg !9434
  %74 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9437
  %fw111 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %74, i32 0, i32 1, !dbg !9438
  %firmware_type112 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw111, i32 0, i32 3, !dbg !9439
  %75 = load i8, i8* %firmware_type112, align 1, !dbg !9439
  %conv113 = sext i8 %75 to i32, !dbg !9437
  %76 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9440
  %fw114 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %76, i32 0, i32 1, !dbg !9441
  %turn_id115 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw114, i32 0, i32 2, !dbg !9442
  %77 = load i8, i8* %turn_id115, align 1, !dbg !9442
  %conv116 = zext i8 %77 to i32, !dbg !9440
  %call117 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay104, i64 12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.125, i64 0, i64 0), i32 %conv107, i32 %conv110, i32 %conv113, i32 %conv116) #11, !dbg !9443
  %78 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9444
  %fw118 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %78, i32 0, i32 1, !dbg !9446
  %major_version119 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw118, i32 0, i32 0, !dbg !9447
  %79 = load i8, i8* %major_version119, align 1, !dbg !9447
  %conv120 = zext i8 %79 to i32, !dbg !9444
  %cmp121 = icmp eq i32 %conv120, 5, !dbg !9448
  br i1 %cmp121, label %land.lhs.true, label %lor.lhs.false, !dbg !9449

land.lhs.true:                                    ; preds = %if.end103
  %80 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9450
  %fw123 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %80, i32 0, i32 1, !dbg !9451
  %minor_version124 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw123, i32 0, i32 1, !dbg !9452
  %81 = load i8, i8* %minor_version124, align 1, !dbg !9452
  %conv125 = zext i8 %81 to i32, !dbg !9450
  %cmp126 = icmp sge i32 %conv125, 6, !dbg !9453
  br i1 %cmp126, label %if.end168, label %lor.lhs.false, !dbg !9454

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end103
  %82 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9455
  %fw128 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %82, i32 0, i32 1, !dbg !9456
  %major_version129 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw128, i32 0, i32 0, !dbg !9457
  %83 = load i8, i8* %major_version129, align 1, !dbg !9457
  %conv130 = zext i8 %83 to i32, !dbg !9455
  %cmp131 = icmp eq i32 %conv130, 4, !dbg !9458
  br i1 %cmp131, label %land.lhs.true133, label %lor.lhs.false139, !dbg !9459

land.lhs.true133:                                 ; preds = %lor.lhs.false
  %84 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9460
  %fw134 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %84, i32 0, i32 1, !dbg !9461
  %minor_version135 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw134, i32 0, i32 1, !dbg !9462
  %85 = load i8, i8* %minor_version135, align 1, !dbg !9462
  %conv136 = zext i8 %85 to i32, !dbg !9460
  %cmp137 = icmp sge i32 %conv136, 6, !dbg !9463
  br i1 %cmp137, label %if.end168, label %lor.lhs.false139, !dbg !9464

lor.lhs.false139:                                 ; preds = %land.lhs.true133, %lor.lhs.false
  %86 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9465
  %fw140 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %86, i32 0, i32 1, !dbg !9466
  %major_version141 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw140, i32 0, i32 0, !dbg !9467
  %87 = load i8, i8* %major_version141, align 1, !dbg !9467
  %conv142 = zext i8 %87 to i32, !dbg !9465
  %cmp143 = icmp eq i32 %conv142, 3, !dbg !9468
  br i1 %cmp143, label %land.lhs.true145, label %lor.lhs.false151, !dbg !9469

land.lhs.true145:                                 ; preds = %lor.lhs.false139
  %88 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9470
  %fw146 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %88, i32 0, i32 1, !dbg !9471
  %minor_version147 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw146, i32 0, i32 1, !dbg !9472
  %89 = load i8, i8* %minor_version147, align 1, !dbg !9472
  %conv148 = zext i8 %89 to i32, !dbg !9470
  %cmp149 = icmp sge i32 %conv148, 51, !dbg !9473
  br i1 %cmp149, label %if.end168, label %lor.lhs.false151, !dbg !9474

lor.lhs.false151:                                 ; preds = %land.lhs.true145, %lor.lhs.false139
  %90 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9475
  %fw152 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %90, i32 0, i32 1, !dbg !9476
  %major_version153 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %fw152, i32 0, i32 0, !dbg !9477
  %91 = load i8, i8* %major_version153, align 1, !dbg !9477
  %conv154 = zext i8 %91 to i32, !dbg !9475
  %cmp155 = icmp eq i32 %conv154, 2, !dbg !9478
  br i1 %cmp155, label %land.lhs.true157, label %if.then163, !dbg !9479

land.lhs.true157:                                 ; preds = %lor.lhs.false151
  %92 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9480
  %fw_version158 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %92, i32 0, i32 34, !dbg !9481
  %arraydecay159 = getelementptr inbounds [12 x i8], [12 x i8]* %fw_version158, i64 0, i64 0, !dbg !9480
  %call160 = call i32 @strcmp(i8* %arraydecay159, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i64 0, i64 0)) #11, !dbg !9482
  %cmp161 = icmp sge i32 %call160, 0, !dbg !9483
  br i1 %cmp161, label %if.end168, label %if.then163, !dbg !9484

if.then163:                                       ; preds = %land.lhs.true157, %lor.lhs.false151
  %93 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9485
  %host164 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %93, i32 0, i32 18, !dbg !9485
  %94 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host164, align 8, !dbg !9485
  %shost_gendev165 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %94, i32 0, i32 47, !dbg !9485
  %95 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9485
  %fw_version166 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %95, i32 0, i32 34, !dbg !9485
  %arraydecay167 = getelementptr inbounds [12 x i8], [12 x i8]* %fw_version166, i64 0, i64 0, !dbg !9485
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0), %struct.device* %shost_gendev165, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.127, i64 0, i64 0), i8* %arraydecay167) #12, !dbg !9485
  br label %out, !dbg !9487

if.end168:                                        ; preds = %land.lhs.true157, %land.lhs.true145, %land.lhs.true133, %land.lhs.true
  %96 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9488
  %hw169 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %96, i32 0, i32 0, !dbg !9489
  %model = getelementptr inbounds %struct.anon.91, %struct.anon.91* %hw169, i32 0, i32 2, !dbg !9490
  %97 = load i8, i8* %model, align 1, !dbg !9490
  %conv170 = zext i8 %97 to i32, !dbg !9488
  switch i32 %conv170, label %sw.default174 [
    i32 1, label %sw.bb171
    i32 2, label %sw.bb172
    i32 4, label %sw.bb172
    i32 3, label %sw.bb173
  ], !dbg !9491

sw.bb171:                                         ; preds = %if.end168
  store i32 5, i32* %pchan_max, align 4, !dbg !9492
  br label %sw.epilog176, !dbg !9494

sw.bb172:                                         ; preds = %if.end168, %if.end168
  store i32 3, i32* %pchan_max, align 4, !dbg !9495
  br label %sw.epilog176, !dbg !9496

sw.bb173:                                         ; preds = %if.end168
  store i32 2, i32* %pchan_max, align 4, !dbg !9497
  br label %sw.epilog176, !dbg !9498

sw.default174:                                    ; preds = %if.end168
  %98 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9499
  %cfg_chan = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %98, i32 0, i32 3, !dbg !9500
  %99 = load i8, i8* %cfg_chan, align 1, !dbg !9500
  %conv175 = zext i8 %99 to i32, !dbg !9499
  store i32 %conv175, i32* %pchan_max, align 4, !dbg !9501
  br label %sw.epilog176, !dbg !9502

sw.epilog176:                                     ; preds = %sw.default174, %sw.bb173, %sw.bb172, %sw.bb171
  %100 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9503
  %cur_chan = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %100, i32 0, i32 4, !dbg !9504
  %101 = load i8, i8* %cur_chan, align 1, !dbg !9504
  %conv177 = zext i8 %101 to i32, !dbg !9503
  store i32 %conv177, i32* %pchan_cur, align 4, !dbg !9505
  %102 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9506
  %scsi_cap178 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %102, i32 0, i32 39, !dbg !9508
  %103 = bitcast %struct.anon.94* %scsi_cap178 to i8*, !dbg !9509
  %bf.load179 = load i8, i8* %103, align 1, !dbg !9509
  %bf.clear180 = and i8 %bf.load179, 3, !dbg !9509
  %conv181 = zext i8 %bf.clear180 to i32, !dbg !9506
  %cmp182 = icmp eq i32 %conv181, 2, !dbg !9510
  br i1 %cmp182, label %if.then184, label %if.else185, !dbg !9511

if.then184:                                       ; preds = %sw.epilog176
  %104 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9512
  %bus_width = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %104, i32 0, i32 3, !dbg !9513
  store i8 32, i8* %bus_width, align 2, !dbg !9514
  br label %if.end197, !dbg !9512

if.else185:                                       ; preds = %sw.epilog176
  %105 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9515
  %scsi_cap186 = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %105, i32 0, i32 39, !dbg !9517
  %106 = bitcast %struct.anon.94* %scsi_cap186 to i8*, !dbg !9518
  %bf.load187 = load i8, i8* %106, align 1, !dbg !9518
  %bf.clear188 = and i8 %bf.load187, 3, !dbg !9518
  %conv189 = zext i8 %bf.clear188 to i32, !dbg !9515
  %cmp190 = icmp eq i32 %conv189, 1, !dbg !9519
  br i1 %cmp190, label %if.then192, label %if.else194, !dbg !9520

if.then192:                                       ; preds = %if.else185
  %107 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9521
  %bus_width193 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %107, i32 0, i32 3, !dbg !9522
  store i8 16, i8* %bus_width193, align 2, !dbg !9523
  br label %if.end196, !dbg !9521

if.else194:                                       ; preds = %if.else185
  %108 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9524
  %bus_width195 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %108, i32 0, i32 3, !dbg !9525
  store i8 8, i8* %bus_width195, align 2, !dbg !9526
  br label %if.end196

if.end196:                                        ; preds = %if.else194, %if.then192
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.then184
  %109 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9527
  %ldev_block_size = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %109, i32 0, i32 35, !dbg !9528
  %110 = load i16, i16* %ldev_block_size, align 1, !dbg !9528
  %conv198 = zext i16 %110 to i32, !dbg !9527
  %111 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9529
  %ldev_block_size199 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %111, i32 0, i32 0, !dbg !9530
  store i32 %conv198, i32* %ldev_block_size199, align 8, !dbg !9531
  %112 = load i32, i32* %pchan_cur, align 4, !dbg !9532
  %113 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9533
  %max_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %113, i32 0, i32 19, !dbg !9534
  store i32 %112, i32* %max_channel, align 8, !dbg !9535
  %114 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9536
  %max_targets = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %114, i32 0, i32 5, !dbg !9537
  %115 = load i8, i8* %max_targets, align 1, !dbg !9537
  %conv200 = zext i8 %115 to i32, !dbg !9536
  %116 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9538
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %116, i32 0, i32 20, !dbg !9539
  store i32 %conv200, i32* %max_id, align 4, !dbg !9540
  %117 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9541
  %mem_size = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %117, i32 0, i32 12, !dbg !9542
  %118 = load i32, i32* %mem_size, align 1, !dbg !9542
  %shr = lshr i32 %118, 20, !dbg !9543
  store i32 %shr, i32* %memsize, align 4, !dbg !9544
  %119 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9545
  %fault_mgmt = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %119, i32 0, i32 42, !dbg !9546
  %120 = load i8, i8* %fault_mgmt, align 1, !dbg !9546
  %conv201 = zext i8 %120 to i32, !dbg !9545
  %cmp202 = icmp eq i32 %conv201, 32, !dbg !9547
  %121 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9548
  %safte_enabled = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %121, i32 0, i32 10, !dbg !9549
  %frombool = zext i1 %cmp202 to i8, !dbg !9550
  store i8 %frombool, i8* %safte_enabled, align 2, !dbg !9550
  %122 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9551
  %enquiry204 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %122, i32 0, i32 55, !dbg !9552
  %123 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry204, align 8, !dbg !9552
  %max_tcq = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %123, i32 0, i32 9, !dbg !9553
  %124 = load i8, i8* %max_tcq, align 1, !dbg !9553
  %conv205 = zext i8 %124 to i32, !dbg !9551
  %125 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9554
  %can_queue = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %125, i32 0, i32 25, !dbg !9555
  store i32 %conv205, i32* %can_queue, align 4, !dbg !9556
  %126 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9557
  %can_queue206 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %126, i32 0, i32 25, !dbg !9559
  %127 = load i32, i32* %can_queue206, align 4, !dbg !9559
  %cmp207 = icmp slt i32 %127, 3, !dbg !9560
  br i1 %cmp207, label %if.then209, label %if.end212, !dbg !9561

if.then209:                                       ; preds = %if.end197
  %128 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9562
  %max_cmds = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %128, i32 0, i32 21, !dbg !9563
  %129 = load i16, i16* %max_cmds, align 1, !dbg !9563
  %conv210 = zext i16 %129 to i32, !dbg !9562
  %130 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9564
  %can_queue211 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %130, i32 0, i32 25, !dbg !9565
  store i32 %conv210, i32* %can_queue211, align 4, !dbg !9566
  br label %if.end212, !dbg !9564

if.end212:                                        ; preds = %if.then209, %if.end197
  %131 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9567
  %can_queue213 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %131, i32 0, i32 25, !dbg !9569
  %132 = load i32, i32* %can_queue213, align 4, !dbg !9569
  %cmp214 = icmp slt i32 %132, 3, !dbg !9570
  br i1 %cmp214, label %if.then216, label %if.end218, !dbg !9571

if.then216:                                       ; preds = %if.end212
  %133 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9572
  %can_queue217 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %133, i32 0, i32 25, !dbg !9573
  store i32 1, i32* %can_queue217, align 4, !dbg !9574
  br label %if.end218, !dbg !9572

if.end218:                                        ; preds = %if.then216, %if.end212
  %134 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9575
  %can_queue219 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %134, i32 0, i32 25, !dbg !9577
  %135 = load i32, i32* %can_queue219, align 4, !dbg !9577
  %cmp220 = icmp sgt i32 %135, 254, !dbg !9578
  br i1 %cmp220, label %if.then222, label %if.end224, !dbg !9579

if.then222:                                       ; preds = %if.end218
  %136 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9580
  %can_queue223 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %136, i32 0, i32 25, !dbg !9581
  store i32 254, i32* %can_queue223, align 4, !dbg !9582
  br label %if.end224, !dbg !9580

if.end224:                                        ; preds = %if.then222, %if.end218
  %137 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9583
  %max_sectors = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %137, i32 0, i32 25, !dbg !9584
  %138 = load i16, i16* %max_sectors, align 1, !dbg !9584
  %conv225 = zext i16 %138 to i32, !dbg !9583
  %139 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9585
  %max_sectors226 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %139, i32 0, i32 29, !dbg !9586
  store i32 %conv225, i32* %max_sectors226, align 8, !dbg !9587
  %140 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9588
  %max_sge = getelementptr inbounds %struct.myrb_enquiry2, %struct.myrb_enquiry2* %140, i32 0, i32 22, !dbg !9589
  %141 = load i16, i16* %max_sge, align 1, !dbg !9589
  %142 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9590
  %sg_tablesize = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %142, i32 0, i32 27, !dbg !9591
  store i16 %141, i16* %sg_tablesize, align 2, !dbg !9592
  %143 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9593
  %sg_tablesize227 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %143, i32 0, i32 27, !dbg !9595
  %144 = load i16, i16* %sg_tablesize227, align 2, !dbg !9595
  %conv228 = zext i16 %144 to i32, !dbg !9593
  %cmp229 = icmp sgt i32 %conv228, 32, !dbg !9596
  br i1 %cmp229, label %if.then231, label %if.end233, !dbg !9597

if.then231:                                       ; preds = %if.end224
  %145 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9598
  %sg_tablesize232 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %145, i32 0, i32 27, !dbg !9599
  store i16 32, i16* %sg_tablesize232, align 2, !dbg !9600
  br label %if.end233, !dbg !9598

if.end233:                                        ; preds = %if.then231, %if.end224
  %146 = load %struct.myrb_config2*, %struct.myrb_config2** %config2, align 8, !dbg !9601
  %blocks_per_stripe = getelementptr inbounds %struct.myrb_config2, %struct.myrb_config2* %146, i32 0, i32 10, !dbg !9602
  %147 = load i8, i8* %blocks_per_stripe, align 1, !dbg !9602
  %conv234 = zext i8 %147 to i32, !dbg !9601
  %148 = load %struct.myrb_config2*, %struct.myrb_config2** %config2, align 8, !dbg !9603
  %block_factor = getelementptr inbounds %struct.myrb_config2, %struct.myrb_config2* %148, i32 0, i32 5, !dbg !9604
  %149 = load i8, i8* %block_factor, align 2, !dbg !9604
  %conv235 = zext i8 %149 to i32, !dbg !9603
  %mul = mul i32 %conv234, %conv235, !dbg !9605
  %shr236 = ashr i32 %mul, 1, !dbg !9606
  %conv237 = trunc i32 %shr236 to i16, !dbg !9601
  %150 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9607
  %stripe_size = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %150, i32 0, i32 4, !dbg !9608
  store i16 %conv237, i16* %stripe_size, align 8, !dbg !9609
  %151 = load %struct.myrb_config2*, %struct.myrb_config2** %config2, align 8, !dbg !9610
  %blocks_per_cacheline = getelementptr inbounds %struct.myrb_config2, %struct.myrb_config2* %151, i32 0, i32 9, !dbg !9611
  %152 = load i8, i8* %blocks_per_cacheline, align 2, !dbg !9611
  %conv238 = zext i8 %152 to i32, !dbg !9610
  %153 = load %struct.myrb_config2*, %struct.myrb_config2** %config2, align 8, !dbg !9612
  %block_factor239 = getelementptr inbounds %struct.myrb_config2, %struct.myrb_config2* %153, i32 0, i32 5, !dbg !9613
  %154 = load i8, i8* %block_factor239, align 2, !dbg !9613
  %conv240 = zext i8 %154 to i32, !dbg !9612
  %mul241 = mul i32 %conv238, %conv240, !dbg !9614
  %shr242 = ashr i32 %mul241, 1, !dbg !9615
  %conv243 = trunc i32 %shr242 to i16, !dbg !9610
  %155 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9616
  %segment_size = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %155, i32 0, i32 5, !dbg !9617
  store i16 %conv243, i16* %segment_size, align 2, !dbg !9618
  %156 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9619
  %ldev_geom_heads = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %156, i32 0, i32 1, !dbg !9620
  store i8 -1, i8* %ldev_geom_heads, align 4, !dbg !9621
  %157 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9622
  %ldev_geom_sectors = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %157, i32 0, i32 2, !dbg !9623
  store i8 63, i8* %ldev_geom_sectors, align 1, !dbg !9624
  %158 = load %struct.myrb_config2*, %struct.myrb_config2** %config2, align 8, !dbg !9625
  %drive_geometry = getelementptr inbounds %struct.myrb_config2, %struct.myrb_config2* %158, i32 0, i32 18, !dbg !9627
  %bf.load244 = load i8, i8* %drive_geometry, align 4, !dbg !9627
  %bf.lshr245 = lshr i8 %bf.load244, 5, !dbg !9627
  %bf.clear246 = and i8 %bf.lshr245, 3, !dbg !9627
  %tobool247 = icmp ne i8 %bf.clear246, 0, !dbg !9625
  br i1 %tobool247, label %if.then248, label %if.end251, !dbg !9628

if.then248:                                       ; preds = %if.end233
  %159 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9629
  %ldev_geom_heads249 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %159, i32 0, i32 1, !dbg !9631
  store i8 -128, i8* %ldev_geom_heads249, align 4, !dbg !9632
  %160 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9633
  %ldev_geom_sectors250 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %160, i32 0, i32 2, !dbg !9634
  store i8 32, i8* %ldev_geom_sectors250, align 1, !dbg !9635
  br label %if.end251, !dbg !9636

if.end251:                                        ; preds = %if.then248, %if.end233
  %161 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9637
  %fw_version252 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %161, i32 0, i32 34, !dbg !9639
  %arrayidx = getelementptr [12 x i8], [12 x i8]* %fw_version252, i64 0, i64 0, !dbg !9637
  %162 = load i8, i8* %arrayidx, align 8, !dbg !9637
  %conv253 = zext i8 %162 to i32, !dbg !9637
  %cmp254 = icmp eq i32 %conv253, 52, !dbg !9640
  br i1 %cmp254, label %land.lhs.true256, label %lor.lhs.false262, !dbg !9641

land.lhs.true256:                                 ; preds = %if.end251
  %163 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9642
  %fw_version257 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %163, i32 0, i32 34, !dbg !9643
  %arraydecay258 = getelementptr inbounds [12 x i8], [12 x i8]* %fw_version257, i64 0, i64 0, !dbg !9642
  %call259 = call i32 @strcmp(i8* %arraydecay258, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.128, i64 0, i64 0)) #11, !dbg !9644
  %cmp260 = icmp sge i32 %call259, 0, !dbg !9645
  br i1 %cmp260, label %if.then274, label %lor.lhs.false262, !dbg !9646

lor.lhs.false262:                                 ; preds = %land.lhs.true256, %if.end251
  %164 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9647
  %fw_version263 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %164, i32 0, i32 34, !dbg !9648
  %arrayidx264 = getelementptr [12 x i8], [12 x i8]* %fw_version263, i64 0, i64 0, !dbg !9647
  %165 = load i8, i8* %arrayidx264, align 8, !dbg !9647
  %conv265 = zext i8 %165 to i32, !dbg !9647
  %cmp266 = icmp eq i32 %conv265, 53, !dbg !9649
  br i1 %cmp266, label %land.lhs.true268, label %if.end275, !dbg !9650

land.lhs.true268:                                 ; preds = %lor.lhs.false262
  %166 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9651
  %fw_version269 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %166, i32 0, i32 34, !dbg !9652
  %arraydecay270 = getelementptr inbounds [12 x i8], [12 x i8]* %fw_version269, i64 0, i64 0, !dbg !9651
  %call271 = call i32 @strcmp(i8* %arraydecay270, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i64 0, i64 0)) #11, !dbg !9653
  %cmp272 = icmp sge i32 %call271, 0, !dbg !9654
  br i1 %cmp272, label %if.then274, label %if.end275, !dbg !9655

if.then274:                                       ; preds = %land.lhs.true268, %land.lhs.true256
  %167 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9656
  %bgi_status_supported = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %167, i32 0, i32 9, !dbg !9658
  store i8 1, i8* %bgi_status_supported, align 1, !dbg !9659
  %168 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9660
  call void @myrb_bgi_control(%struct.myrb_hba* %168) #11, !dbg !9661
  br label %if.end275, !dbg !9662

if.end275:                                        ; preds = %if.then274, %land.lhs.true268, %lor.lhs.false262
  %169 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9663
  %last_rbld_status = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %169, i32 0, i32 59, !dbg !9664
  store i16 0, i16* %last_rbld_status, align 8, !dbg !9665
  store i32 0, i32* %ret, align 4, !dbg !9666
  br label %out, !dbg !9667

out:                                              ; preds = %if.end275, %if.then163, %sw.default
  call void @llvm.dbg.label(metadata !9668), !dbg !9669
  %170 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9670
  %host276 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %170, i32 0, i32 18, !dbg !9670
  %171 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host276, align 8, !dbg !9670
  %shost_gendev277 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %171, i32 0, i32 47, !dbg !9670
  %172 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9670
  %model_name278 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %172, i32 0, i32 33, !dbg !9670
  %arraydecay279 = getelementptr inbounds [20 x i8], [20 x i8]* %model_name278, i64 0, i64 0, !dbg !9670
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev277, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.130, i64 0, i64 0), i8* %arraydecay279) #12, !dbg !9670
  %173 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9671
  %host280 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %173, i32 0, i32 18, !dbg !9671
  %174 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host280, align 8, !dbg !9671
  %shost_gendev281 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %174, i32 0, i32 47, !dbg !9671
  %175 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9671
  %fw_version282 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %175, i32 0, i32 34, !dbg !9671
  %arraydecay283 = getelementptr inbounds [12 x i8], [12 x i8]* %fw_version282, i64 0, i64 0, !dbg !9671
  %176 = load i32, i32* %memsize, align 4, !dbg !9671
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev281, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.131, i64 0, i64 0), i8* %arraydecay283, i32 %176) #12, !dbg !9671
  %177 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9672
  %io_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %177, i32 0, i32 36, !dbg !9674
  %178 = load i64, i64* %io_addr, align 8, !dbg !9674
  %cmp284 = icmp eq i64 %178, 0, !dbg !9675
  br i1 %cmp284, label %if.then286, label %if.else289, !dbg !9676

if.then286:                                       ; preds = %out
  %179 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9677
  %host287 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %179, i32 0, i32 18, !dbg !9677
  %180 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host287, align 8, !dbg !9677
  %shost_gendev288 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %180, i32 0, i32 47, !dbg !9677
  %181 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9677
  %pci_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %181, i32 0, i32 37, !dbg !9677
  %182 = load i64, i64* %pci_addr, align 8, !dbg !9677
  %183 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9677
  %irq = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %183, i32 0, i32 35, !dbg !9677
  %184 = load i32, i32* %irq, align 4, !dbg !9677
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev288, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.132, i64 0, i64 0), i64 %182, i32 %184) #12, !dbg !9677
  br label %if.end295, !dbg !9677

if.else289:                                       ; preds = %out
  %185 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9678
  %host290 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %185, i32 0, i32 18, !dbg !9678
  %186 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host290, align 8, !dbg !9678
  %shost_gendev291 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %186, i32 0, i32 47, !dbg !9678
  %187 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9678
  %io_addr292 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %187, i32 0, i32 36, !dbg !9678
  %188 = load i64, i64* %io_addr292, align 8, !dbg !9678
  %189 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9678
  %pci_addr293 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %189, i32 0, i32 37, !dbg !9678
  %190 = load i64, i64* %pci_addr293, align 8, !dbg !9678
  %191 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9678
  %irq294 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %191, i32 0, i32 35, !dbg !9678
  %192 = load i32, i32* %irq294, align 4, !dbg !9678
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev291, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.133, i64 0, i64 0), i64 %188, i64 %190, i32 %192) #12, !dbg !9678
  br label %if.end295

if.end295:                                        ; preds = %if.else289, %if.then286
  %193 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9679
  %host296 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %193, i32 0, i32 18, !dbg !9679
  %194 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host296, align 8, !dbg !9679
  %shost_gendev297 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %194, i32 0, i32 47, !dbg !9679
  %195 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9679
  %host298 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %195, i32 0, i32 18, !dbg !9679
  %196 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host298, align 8, !dbg !9679
  %can_queue299 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %196, i32 0, i32 25, !dbg !9679
  %197 = load i32, i32* %can_queue299, align 4, !dbg !9679
  %198 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9679
  %host300 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %198, i32 0, i32 18, !dbg !9679
  %199 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host300, align 8, !dbg !9679
  %max_sectors301 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %199, i32 0, i32 29, !dbg !9679
  %200 = load i32, i32* %max_sectors301, align 8, !dbg !9679
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev297, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.134, i64 0, i64 0), i32 %197, i32 %200) #12, !dbg !9679
  %201 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9680
  %host302 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %201, i32 0, i32 18, !dbg !9680
  %202 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host302, align 8, !dbg !9680
  %shost_gendev303 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %202, i32 0, i32 47, !dbg !9680
  %203 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9680
  %host304 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %203, i32 0, i32 18, !dbg !9680
  %204 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host304, align 8, !dbg !9680
  %can_queue305 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %204, i32 0, i32 25, !dbg !9680
  %205 = load i32, i32* %can_queue305, align 4, !dbg !9680
  %206 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9680
  %host306 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %206, i32 0, i32 18, !dbg !9680
  %207 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host306, align 8, !dbg !9680
  %sg_tablesize307 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %207, i32 0, i32 27, !dbg !9680
  %208 = load i16, i16* %sg_tablesize307, align 2, !dbg !9680
  %conv308 = zext i16 %208 to i32, !dbg !9680
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev303, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.135, i64 0, i64 0), i32 %205, i32 %conv308, i32 32) #12, !dbg !9680
  %209 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9681
  %host309 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %209, i32 0, i32 18, !dbg !9681
  %210 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host309, align 8, !dbg !9681
  %shost_gendev310 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %210, i32 0, i32 47, !dbg !9681
  %211 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9681
  %stripe_size311 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %211, i32 0, i32 4, !dbg !9681
  %212 = load i16, i16* %stripe_size311, align 8, !dbg !9681
  %conv312 = zext i16 %212 to i32, !dbg !9681
  %213 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9681
  %segment_size313 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %213, i32 0, i32 5, !dbg !9681
  %214 = load i16, i16* %segment_size313, align 2, !dbg !9681
  %conv314 = zext i16 %214 to i32, !dbg !9681
  %215 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9681
  %ldev_geom_heads315 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %215, i32 0, i32 1, !dbg !9681
  %216 = load i8, i8* %ldev_geom_heads315, align 4, !dbg !9681
  %conv316 = zext i8 %216 to i32, !dbg !9681
  %217 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9681
  %ldev_geom_sectors317 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %217, i32 0, i32 2, !dbg !9681
  %218 = load i8, i8* %ldev_geom_sectors317, align 1, !dbg !9681
  %conv318 = zext i8 %218 to i32, !dbg !9681
  %219 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9681
  %safte_enabled319 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %219, i32 0, i32 10, !dbg !9681
  %220 = load i8, i8* %safte_enabled319, align 2, !dbg !9681
  %tobool320 = trunc i8 %220 to i1, !dbg !9681
  %221 = zext i1 %tobool320 to i64, !dbg !9681
  %cond = select i1 %tobool320, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.138, i64 0, i64 0), !dbg !9681
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev310, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.136, i64 0, i64 0), i32 %conv312, i32 %conv314, i32 %conv316, i32 %conv318, i8* %cond) #12, !dbg !9681
  %222 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9682
  %host322 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %222, i32 0, i32 18, !dbg !9682
  %223 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host322, align 8, !dbg !9682
  %shost_gendev323 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %223, i32 0, i32 47, !dbg !9682
  %224 = load i32, i32* %pchan_cur, align 4, !dbg !9682
  %225 = load i32, i32* %pchan_max, align 4, !dbg !9682
  %226 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9682
  %enquiry324 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %226, i32 0, i32 55, !dbg !9682
  %227 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry324, align 8, !dbg !9682
  %pdev_dead = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %227, i32 0, i32 15, !dbg !9682
  %228 = load i8, i8* %pdev_dead, align 1, !dbg !9682
  %conv325 = zext i8 %228 to i32, !dbg !9682
  %229 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9682
  %host326 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %229, i32 0, i32 18, !dbg !9682
  %230 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host326, align 8, !dbg !9682
  %max_id327 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %230, i32 0, i32 20, !dbg !9682
  %231 = load i32, i32* %max_id327, align 4, !dbg !9682
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev323, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.139, i64 0, i64 0), i32 %224, i32 %225, i32 0, i32 %conv325, i32 %231) #12, !dbg !9682
  %232 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9683
  %host328 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %232, i32 0, i32 18, !dbg !9683
  %233 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host328, align 8, !dbg !9683
  %shost_gendev329 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %233, i32 0, i32 47, !dbg !9683
  %234 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9683
  %enquiry330 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %234, i32 0, i32 55, !dbg !9683
  %235 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry330, align 8, !dbg !9683
  %ldev_count = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %235, i32 0, i32 0, !dbg !9683
  %236 = load i8, i8* %ldev_count, align 1, !dbg !9683
  %conv331 = zext i8 %236 to i32, !dbg !9683
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev329, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.140, i64 0, i64 0), i32 %conv331, i32 32) #12, !dbg !9683
  br label %out_free, !dbg !9683

out_free:                                         ; preds = %if.end295, %if.then38, %if.then30, %if.then22, %if.then14
  call void @llvm.dbg.label(metadata !9684), !dbg !9685
  %237 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9686
  %dev332 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %237, i32 0, i32 41, !dbg !9687
  %238 = load %struct.myrb_enquiry2*, %struct.myrb_enquiry2** %enquiry2, align 8, !dbg !9688
  %239 = bitcast %struct.myrb_enquiry2* %238 to i8*, !dbg !9688
  %240 = load i64, i64* %enquiry2_addr, align 8, !dbg !9689
  call void @dma_free_coherent(%struct.device* %dev332, i64 128, i8* %239, i64 %240) #11, !dbg !9690
  %241 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9691
  %dev333 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %241, i32 0, i32 41, !dbg !9692
  %242 = load %struct.myrb_config2*, %struct.myrb_config2** %config2, align 8, !dbg !9693
  %243 = bitcast %struct.myrb_config2* %242 to i8*, !dbg !9693
  %244 = load i64, i64* %config2_addr, align 8, !dbg !9694
  call void @dma_free_coherent(%struct.device* %dev333, i64 64, i8* %243, i64 %244) #11, !dbg !9695
  %245 = load i32, i32* %ret, align 4, !dbg !9696
  store i32 %245, i32* %retval, align 4, !dbg !9697
  br label %return, !dbg !9697

return:                                           ; preds = %out_free, %if.then6, %if.then
  %246 = load i32, i32* %retval, align 4, !dbg !9698
  ret i32 %246, !dbg !9698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_cleanup(%struct.myrb_hba* %cb) #0 !dbg !9699 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !9702, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !9704, metadata !DIExpression()), !dbg !9705
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9706
  %pdev1 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 17, !dbg !9707
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !9707
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !9705
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9708
  call void @myrb_unmap(%struct.myrb_hba* %2) #11, !dbg !9709
  %3 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9710
  %mmio_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %3, i32 0, i32 39, !dbg !9712
  %4 = load i8*, i8** %mmio_base, align 8, !dbg !9712
  %tobool = icmp ne i8* %4, null, !dbg !9710
  br i1 %tobool, label %if.then, label %if.end, !dbg !9713

if.then:                                          ; preds = %entry
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9714
  %disable_intr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %5, i32 0, i32 30, !dbg !9716
  %6 = load void (i8*)*, void (i8*)** %disable_intr, align 8, !dbg !9716
  %7 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9717
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %7, i32 0, i32 38, !dbg !9718
  %8 = load i8*, i8** %io_base, align 8, !dbg !9718
  call void %6(i8* %8) #11, !dbg !9714
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9719
  %mmio_base2 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %9, i32 0, i32 39, !dbg !9720
  %10 = load i8*, i8** %mmio_base2, align 8, !dbg !9720
  call void @iounmap(i8* %10) #11, !dbg !9721
  br label %if.end, !dbg !9722

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9723
  %irq = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %11, i32 0, i32 35, !dbg !9725
  %12 = load i32, i32* %irq, align 4, !dbg !9725
  %tobool3 = icmp ne i32 %12, 0, !dbg !9723
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !9726

if.then4:                                         ; preds = %if.end
  %13 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9727
  %irq5 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %13, i32 0, i32 35, !dbg !9728
  %14 = load i32, i32* %irq5, align 4, !dbg !9728
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9729
  %16 = bitcast %struct.myrb_hba* %15 to i8*, !dbg !9729
  %call = call i8* @free_irq(i32 %14, i8* %16) #11, !dbg !9730
  br label %if.end6, !dbg !9730

if.end6:                                          ; preds = %if.then4, %if.end
  %17 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9731
  %io_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %17, i32 0, i32 36, !dbg !9733
  %18 = load i64, i64* %io_addr, align 8, !dbg !9733
  %tobool7 = icmp ne i64 %18, 0, !dbg !9731
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !9734

if.then8:                                         ; preds = %if.end6
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9735
  %io_addr9 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 36, !dbg !9735
  %20 = load i64, i64* %io_addr9, align 8, !dbg !9735
  call void @__release_region(%struct.resource* @ioport_resource, i64 %20, i64 128) #11, !dbg !9735
  br label %if.end10, !dbg !9735

if.end10:                                         ; preds = %if.then8, %if.end6
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9736
  call void @pci_set_drvdata(%struct.pci_dev* %21, i8* null) #11, !dbg !9737
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9738
  call void @pci_disable_device(%struct.pci_dev* %22) #11, !dbg !9739
  %23 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9740
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %23, i32 0, i32 18, !dbg !9741
  %24 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9741
  call void @scsi_host_put(%struct.Scsi_Host* %24) #11, !dbg !9742
  ret void, !dbg !9743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @myrb_create_mempools(%struct.pci_dev* %pdev, %struct.myrb_hba* %cb) #0 !dbg !9744 {
entry:
  %retval = alloca i1, align 1
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %elem_size = alloca i64, align 8
  %elem_align = alloca i64, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9747, metadata !DIExpression()), !dbg !9748
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !9749, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.declare(metadata i64* %elem_size, metadata !9751, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.declare(metadata i64* %elem_align, metadata !9753, metadata !DIExpression()), !dbg !9754
  store i64 8, i64* %elem_align, align 8, !dbg !9755
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9756
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 18, !dbg !9757
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9757
  %sg_tablesize = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 27, !dbg !9758
  %2 = load i16, i16* %sg_tablesize, align 2, !dbg !9758
  %conv = zext i16 %2 to i64, !dbg !9756
  %3 = load i64, i64* %elem_align, align 8, !dbg !9759
  %mul = mul i64 %conv, %3, !dbg !9760
  store i64 %mul, i64* %elem_size, align 8, !dbg !9761
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9762
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !9763
  %5 = load i64, i64* %elem_size, align 8, !dbg !9764
  %6 = load i64, i64* %elem_align, align 8, !dbg !9765
  %call = call %struct.dma_pool* @dma_pool_create(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.167, i64 0, i64 0), %struct.device* %dev, i64 %5, i64 %6, i64 0) #11, !dbg !9766
  %7 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9767
  %sg_pool = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %7, i32 0, i32 24, !dbg !9768
  store %struct.dma_pool* %call, %struct.dma_pool** %sg_pool, align 8, !dbg !9769
  %8 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9770
  %sg_pool1 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %8, i32 0, i32 24, !dbg !9772
  %9 = load %struct.dma_pool*, %struct.dma_pool** %sg_pool1, align 8, !dbg !9772
  %cmp = icmp eq %struct.dma_pool* %9, null, !dbg !9773
  br i1 %cmp, label %if.then, label %if.end, !dbg !9774

if.then:                                          ; preds = %entry
  %10 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9775
  %host3 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %10, i32 0, i32 18, !dbg !9775
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host3, align 8, !dbg !9775
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 47, !dbg !9775
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.168, i64 0, i64 0)) #12, !dbg !9775
  store i1 false, i1* %retval, align 1, !dbg !9777
  br label %return, !dbg !9777

if.end:                                           ; preds = %entry
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9778
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !9779
  %call5 = call %struct.dma_pool* @dma_pool_create(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.169, i64 0, i64 0), %struct.device* %dev4, i64 88, i64 4, i64 0) #11, !dbg !9780
  %13 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9781
  %dcdb_pool = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %13, i32 0, i32 25, !dbg !9782
  store %struct.dma_pool* %call5, %struct.dma_pool** %dcdb_pool, align 8, !dbg !9783
  %14 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9784
  %dcdb_pool6 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %14, i32 0, i32 25, !dbg !9786
  %15 = load %struct.dma_pool*, %struct.dma_pool** %dcdb_pool6, align 8, !dbg !9786
  %tobool = icmp ne %struct.dma_pool* %15, null, !dbg !9784
  br i1 %tobool, label %if.end12, label %if.then7, !dbg !9787

if.then7:                                         ; preds = %if.end
  %16 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9788
  %sg_pool8 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %16, i32 0, i32 24, !dbg !9790
  %17 = load %struct.dma_pool*, %struct.dma_pool** %sg_pool8, align 8, !dbg !9790
  call void @dma_pool_destroy(%struct.dma_pool* %17) #11, !dbg !9791
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9792
  %sg_pool9 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 24, !dbg !9793
  store %struct.dma_pool* null, %struct.dma_pool** %sg_pool9, align 8, !dbg !9794
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9795
  %host10 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 18, !dbg !9795
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host10, align 8, !dbg !9795
  %shost_gendev11 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 47, !dbg !9795
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), %struct.device* %shost_gendev11, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.170, i64 0, i64 0)) #12, !dbg !9795
  store i1 false, i1* %retval, align 1, !dbg !9796
  br label %return, !dbg !9796

if.end12:                                         ; preds = %if.end
  %21 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9797
  %work_q_name = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %21, i32 0, i32 20, !dbg !9798
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %work_q_name, i64 0, i64 0, !dbg !9797
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9799
  %host13 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 18, !dbg !9800
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host13, align 8, !dbg !9800
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %23, i32 0, i32 16, !dbg !9801
  %24 = load i32, i32* %host_no, align 4, !dbg !9801
  %call14 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.171, i64 0, i64 0), i32 %24) #11, !dbg !9802
  %25 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9803
  %work_q_name15 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %25, i32 0, i32 20, !dbg !9803
  %arraydecay16 = getelementptr inbounds [20 x i8], [20 x i8]* %work_q_name15, i64 0, i64 0, !dbg !9803
  %call17 = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.172, i64 0, i64 0), i32 917514, i32 1, i8* %arraydecay16) #11, !dbg !9803
  %26 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9804
  %work_q = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %26, i32 0, i32 19, !dbg !9805
  store %struct.workqueue_struct* %call17, %struct.workqueue_struct** %work_q, align 8, !dbg !9806
  %27 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9807
  %work_q18 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %27, i32 0, i32 19, !dbg !9809
  %28 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q18, align 8, !dbg !9809
  %tobool19 = icmp ne %struct.workqueue_struct* %28, null, !dbg !9807
  br i1 %tobool19, label %if.end27, label %if.then20, !dbg !9810

if.then20:                                        ; preds = %if.end12
  %29 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9811
  %dcdb_pool21 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %29, i32 0, i32 25, !dbg !9813
  %30 = load %struct.dma_pool*, %struct.dma_pool** %dcdb_pool21, align 8, !dbg !9813
  call void @dma_pool_destroy(%struct.dma_pool* %30) #11, !dbg !9814
  %31 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9815
  %dcdb_pool22 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %31, i32 0, i32 25, !dbg !9816
  store %struct.dma_pool* null, %struct.dma_pool** %dcdb_pool22, align 8, !dbg !9817
  %32 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9818
  %sg_pool23 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %32, i32 0, i32 24, !dbg !9819
  %33 = load %struct.dma_pool*, %struct.dma_pool** %sg_pool23, align 8, !dbg !9819
  call void @dma_pool_destroy(%struct.dma_pool* %33) #11, !dbg !9820
  %34 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9821
  %sg_pool24 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %34, i32 0, i32 24, !dbg !9822
  store %struct.dma_pool* null, %struct.dma_pool** %sg_pool24, align 8, !dbg !9823
  %35 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9824
  %host25 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %35, i32 0, i32 18, !dbg !9824
  %36 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host25, align 8, !dbg !9824
  %shost_gendev26 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %36, i32 0, i32 47, !dbg !9824
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), %struct.device* %shost_gendev26, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.173, i64 0, i64 0)) #12, !dbg !9824
  store i1 false, i1* %retval, align 1, !dbg !9825
  br label %return, !dbg !9825

if.end27:                                         ; preds = %if.end12
  br label %do.body, !dbg !9826

do.body:                                          ; preds = %if.end27
  br label %do.body28, !dbg !9827

do.body28:                                        ; preds = %do.body
  %37 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9829
  %monitor_work = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %37, i32 0, i32 21, !dbg !9829
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %monitor_work, i32 0, i32 0, !dbg !9829
  call void @__init_work(%struct.work_struct* %work, i32 0) #11, !dbg !9829
  %38 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9829
  %monitor_work29 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %38, i32 0, i32 21, !dbg !9829
  %work30 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %monitor_work29, i32 0, i32 0, !dbg !9829
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work30, i32 0, i32 0, !dbg !9829
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !9829
  store i64 68719476704, i64* %counter, align 8, !dbg !9829
  %39 = bitcast %struct.atomic64_t* %data to i8*, !dbg !9829
  %40 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !9829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 8, i1 false), !dbg !9829
  %41 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9829
  %monitor_work31 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %41, i32 0, i32 21, !dbg !9829
  %work32 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %monitor_work31, i32 0, i32 0, !dbg !9829
  %entry33 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work32, i32 0, i32 1, !dbg !9829
  call void @INIT_LIST_HEAD(%struct.list_head* %entry33) #11, !dbg !9829
  %42 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9829
  %monitor_work34 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %42, i32 0, i32 21, !dbg !9829
  %work35 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %monitor_work34, i32 0, i32 0, !dbg !9829
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work35, i32 0, i32 2, !dbg !9829
  store void (%struct.work_struct*)* @myrb_monitor, void (%struct.work_struct*)** %func, align 8, !dbg !9829
  br label %do.end, !dbg !9829

do.end:                                           ; preds = %do.body28
  %43 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9827
  %monitor_work36 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %43, i32 0, i32 21, !dbg !9827
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %monitor_work36, i32 0, i32 1, !dbg !9827
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #11, !dbg !9827
  br label %do.end37, !dbg !9827

do.end37:                                         ; preds = %do.end
  %44 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9831
  %work_q38 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %44, i32 0, i32 19, !dbg !9832
  %45 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q38, align 8, !dbg !9832
  %46 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9833
  %monitor_work39 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %46, i32 0, i32 21, !dbg !9834
  %call40 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %45, %struct.delayed_work* %monitor_work39, i64 1) #11, !dbg !9835
  store i1 true, i1* %retval, align 1, !dbg !9836
  br label %return, !dbg !9836

return:                                           ; preds = %do.end37, %if.then20, %if.then7, %if.then
  %47 = load i1, i1* %retval, align 1, !dbg !9837
  ret i1 %47, !dbg !9837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_add_host(%struct.Scsi_Host* %host, %struct.device* %dev) #0 !dbg !9838 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !9841, metadata !DIExpression()), !dbg !9842
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9843, metadata !DIExpression()), !dbg !9844
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !9845
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9846
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9847
  %call = call i32 @scsi_add_host_with_dma(%struct.Scsi_Host* %0, %struct.device* %1, %struct.device* %2) #11, !dbg !9848
  ret i32 %call, !dbg !9849
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_destroy_mempools(%struct.myrb_hba* %cb) #0 !dbg !9850 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !9851, metadata !DIExpression()), !dbg !9852
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9853
  %monitor_work = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 21, !dbg !9854
  %call = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %monitor_work) #11, !dbg !9855
  %1 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9856
  %work_q = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %1, i32 0, i32 19, !dbg !9857
  %2 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q, align 8, !dbg !9857
  call void @destroy_workqueue(%struct.workqueue_struct* %2) #11, !dbg !9858
  %3 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9859
  %sg_pool = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %3, i32 0, i32 24, !dbg !9860
  %4 = load %struct.dma_pool*, %struct.dma_pool** %sg_pool, align 8, !dbg !9860
  call void @dma_pool_destroy(%struct.dma_pool* %4) #11, !dbg !9861
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !9862
  %dcdb_pool = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %5, i32 0, i32 25, !dbg !9863
  %6 = load %struct.dma_pool*, %struct.dma_pool** %dcdb_pool, align 8, !dbg !9863
  call void @dma_pool_destroy(%struct.dma_pool* %6) #11, !dbg !9864
  ret void, !dbg !9865
}

; Function Attrs: noredzone
declare dso_local void @scsi_scan_host(%struct.Scsi_Host*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @shost_priv(%struct.Scsi_Host* %shost) #0 !dbg !9866 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !9869, metadata !DIExpression()), !dbg !9870
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9871
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 51, !dbg !9872
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !9871
  %1 = bitcast i64* %arraydecay to i8*, !dbg !9873
  ret i8* %1, !dbg !9874
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #0 !dbg !9875 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9878, metadata !DIExpression()), !dbg !9879
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9880, metadata !DIExpression()), !dbg !9881
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9882
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9883
  %1 = load i8*, i8** %data.addr, align 8, !dbg !9884
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !9885
  ret void, !dbg !9886
}

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !9887 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9890, metadata !DIExpression()), !dbg !9891
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !9894, metadata !DIExpression()), !dbg !9895
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9896, metadata !DIExpression()), !dbg !9897
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !9898, metadata !DIExpression()), !dbg !9899
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9900
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !9901
  %2 = load i64, i64* %flags.addr, align 8, !dbg !9902
  %3 = load i8*, i8** %name.addr, align 8, !dbg !9903
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !9904
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !9905
  ret i32 %call, !dbg !9906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_queuecommand(%struct.Scsi_Host* %shost, %struct.scsi_cmnd* %scmd) #0 !dbg !9907 {
entry:
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !9908, metadata !DIExpression()), !dbg !9909
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !9910, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !9912, metadata !DIExpression()), !dbg !9913
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9914
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !9915
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !9915
  store %struct.scsi_device* %1, %struct.scsi_device** %sdev, align 8, !dbg !9913
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9916
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 17, !dbg !9918
  %3 = load i32, i32* %channel, align 4, !dbg !9918
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9919
  %call = call i32 @myrb_logical_channel(%struct.Scsi_Host* %4) #11, !dbg !9920
  %cmp = icmp ugt i32 %3, %call, !dbg !9921
  br i1 %cmp, label %if.then, label %if.end, !dbg !9922

if.then:                                          ; preds = %entry
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9923
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 24, !dbg !9925
  store i32 262144, i32* %result, align 8, !dbg !9926
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9927
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %6, i32 0, i32 21, !dbg !9928
  %7 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !9928
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9929
  call void %7(%struct.scsi_cmnd* %8) #11, !dbg !9927
  store i32 0, i32* %retval, align 4, !dbg !9930
  br label %return, !dbg !9930

if.end:                                           ; preds = %entry
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9931
  %channel1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 17, !dbg !9933
  %10 = load i32, i32* %channel1, align 4, !dbg !9933
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9934
  %call2 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %11) #11, !dbg !9935
  %cmp3 = icmp eq i32 %10, %call2, !dbg !9936
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !9937

if.then4:                                         ; preds = %if.end
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9938
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9939
  %call5 = call i32 @myrb_ldev_queuecommand(%struct.Scsi_Host* %12, %struct.scsi_cmnd* %13) #11, !dbg !9940
  store i32 %call5, i32* %retval, align 4, !dbg !9941
  br label %return, !dbg !9941

if.end6:                                          ; preds = %if.end
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9942
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9943
  %call7 = call i32 @myrb_pthru_queuecommand(%struct.Scsi_Host* %14, %struct.scsi_cmnd* %15) #11, !dbg !9944
  store i32 %call7, i32* %retval, align 4, !dbg !9945
  br label %return, !dbg !9945

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !9946
  ret i32 %16, !dbg !9946
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_host_reset(%struct.scsi_cmnd* %scmd) #0 !dbg !9947 {
entry:
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !9948, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !9950, metadata !DIExpression()), !dbg !9951
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9952
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !9953
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !9953
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !9954
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9954
  store %struct.Scsi_Host* %2, %struct.Scsi_Host** %shost, align 8, !dbg !9951
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !9955, metadata !DIExpression()), !dbg !9956
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !9957
  %call = call i8* @shost_priv(%struct.Scsi_Host* %3) #11, !dbg !9958
  %4 = bitcast i8* %call to %struct.myrb_hba*, !dbg !9958
  store %struct.myrb_hba* %4, %struct.myrb_hba** %cb, align 8, !dbg !9956
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9959
  %reset = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %5, i32 0, i32 31, !dbg !9960
  %6 = load void (i8*)*, void (i8*)** %reset, align 8, !dbg !9960
  %7 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !9961
  %io_base = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %7, i32 0, i32 38, !dbg !9962
  %8 = load i8*, i8** %io_base, align 8, !dbg !9962
  call void %6(i8* %8) #11, !dbg !9959
  ret i32 8194, !dbg !9963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_slave_alloc(%struct.scsi_device* %sdev) #0 !dbg !9964 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9965, metadata !DIExpression()), !dbg !9966
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9967
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 17, !dbg !9969
  %1 = load i32, i32* %channel, align 4, !dbg !9969
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9970
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 0, !dbg !9971
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9971
  %call = call i32 @myrb_logical_channel(%struct.Scsi_Host* %3) #11, !dbg !9972
  %cmp = icmp ugt i32 %1, %call, !dbg !9973
  br i1 %cmp, label %if.then, label %if.end, !dbg !9974

if.then:                                          ; preds = %entry
  store i32 -6, i32* %retval, align 4, !dbg !9975
  br label %return, !dbg !9975

if.end:                                           ; preds = %entry
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9976
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 18, !dbg !9978
  %5 = load i64, i64* %lun, align 8, !dbg !9978
  %cmp1 = icmp ugt i64 %5, 0, !dbg !9979
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9980

if.then2:                                         ; preds = %if.end
  store i32 -6, i32* %retval, align 4, !dbg !9981
  br label %return, !dbg !9981

if.end3:                                          ; preds = %if.end
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9982
  %channel4 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 17, !dbg !9984
  %7 = load i32, i32* %channel4, align 4, !dbg !9984
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9985
  %host5 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 0, !dbg !9986
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host5, align 8, !dbg !9986
  %call6 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %9) #11, !dbg !9987
  %cmp7 = icmp eq i32 %7, %call6, !dbg !9988
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !9989

if.then8:                                         ; preds = %if.end3
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9990
  %call9 = call i32 @myrb_ldev_slave_alloc(%struct.scsi_device* %10) #11, !dbg !9991
  store i32 %call9, i32* %retval, align 4, !dbg !9992
  br label %return, !dbg !9992

if.end10:                                         ; preds = %if.end3
  %11 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9993
  %call11 = call i32 @myrb_pdev_slave_alloc(%struct.scsi_device* %11) #11, !dbg !9994
  store i32 %call11, i32* %retval, align 4, !dbg !9995
  br label %return, !dbg !9995

return:                                           ; preds = %if.end10, %if.then8, %if.then2, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9996
  ret i32 %12, !dbg !9996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_slave_configure(%struct.scsi_device* %sdev) #0 !dbg !9997 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %ldev_info = alloca %struct.myrb_ldev_info*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9998, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata %struct.myrb_ldev_info** %ldev_info, metadata !10000, metadata !DIExpression()), !dbg !10001
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10002
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 17, !dbg !10004
  %1 = load i32, i32* %channel, align 4, !dbg !10004
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10005
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 0, !dbg !10006
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10006
  %call = call i32 @myrb_logical_channel(%struct.Scsi_Host* %3) #11, !dbg !10007
  %cmp = icmp ugt i32 %1, %call, !dbg !10008
  br i1 %cmp, label %if.then, label %if.end, !dbg !10009

if.then:                                          ; preds = %entry
  store i32 -6, i32* %retval, align 4, !dbg !10010
  br label %return, !dbg !10010

if.end:                                           ; preds = %entry
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10011
  %channel1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 17, !dbg !10013
  %5 = load i32, i32* %channel1, align 4, !dbg !10013
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10014
  %host2 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 0, !dbg !10015
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host2, align 8, !dbg !10015
  %call3 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %7) #11, !dbg !10016
  %cmp4 = icmp ult i32 %5, %call3, !dbg !10017
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !10018

if.then5:                                         ; preds = %if.end
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10019
  %no_uld_attach = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 39, !dbg !10021
  %9 = bitcast [6 x i8]* %no_uld_attach to i48*, !dbg !10021
  %bf.load = load i48, i48* %9, align 4, !dbg !10022
  %bf.clear = and i48 %bf.load, -1073741825, !dbg !10022
  %bf.set = or i48 %bf.clear, 1073741824, !dbg !10022
  store i48 %bf.set, i48* %9, align 4, !dbg !10022
  store i32 0, i32* %retval, align 4, !dbg !10023
  br label %return, !dbg !10023

if.end6:                                          ; preds = %if.end
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10024
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 18, !dbg !10026
  %11 = load i64, i64* %lun, align 8, !dbg !10026
  %cmp7 = icmp ne i64 %11, 0, !dbg !10027
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !10028

if.then8:                                         ; preds = %if.end6
  store i32 -6, i32* %retval, align 4, !dbg !10029
  br label %return, !dbg !10029

if.end9:                                          ; preds = %if.end6
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10030
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %12, i32 0, i32 21, !dbg !10031
  %13 = load i8*, i8** %hostdata, align 8, !dbg !10031
  %14 = bitcast i8* %13 to %struct.myrb_ldev_info*, !dbg !10030
  store %struct.myrb_ldev_info* %14, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10032
  %15 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10033
  %tobool = icmp ne %struct.myrb_ldev_info* %15, null, !dbg !10033
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !10035

if.then10:                                        ; preds = %if.end9
  store i32 -6, i32* %retval, align 4, !dbg !10036
  br label %return, !dbg !10036

if.end11:                                         ; preds = %if.end9
  %16 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10037
  %state = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %16, i32 0, i32 1, !dbg !10039
  %17 = load i8, i8* %state, align 4, !dbg !10039
  %conv = zext i8 %17 to i32, !dbg !10037
  %cmp12 = icmp ne i32 %conv, 3, !dbg !10040
  br i1 %cmp12, label %if.then14, label %if.end17, !dbg !10041

if.then14:                                        ; preds = %if.end11
  %18 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10042
  %19 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10042
  %state15 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %19, i32 0, i32 1, !dbg !10042
  %20 = load i8, i8* %state15, align 4, !dbg !10042
  %call16 = call i8* @myrb_devstate_name(i8 zeroext %20) #11, !dbg !10042
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %18, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.39, i64 0, i64 0), i8* %call16) #11, !dbg !10042
  br label %if.end17, !dbg !10042

if.end17:                                         ; preds = %if.then14, %if.end11
  %21 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10043
  %tagged_supported = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %21, i32 0, i32 39, !dbg !10044
  %22 = bitcast [6 x i8]* %tagged_supported to i48*, !dbg !10044
  %bf.load18 = load i48, i48* %22, align 4, !dbg !10045
  %bf.clear19 = and i48 %bf.load18, -2049, !dbg !10045
  %bf.set20 = or i48 %bf.clear19, 2048, !dbg !10045
  store i48 %bf.set20, i48* %22, align 4, !dbg !10045
  store i32 0, i32* %retval, align 4, !dbg !10046
  br label %return, !dbg !10046

return:                                           ; preds = %if.end17, %if.then10, %if.then8, %if.then5, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10047
  ret i32 %23, !dbg !10047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_slave_destroy(%struct.scsi_device* %sdev) #0 !dbg !10048 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !10049, metadata !DIExpression()), !dbg !10050
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10051
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 21, !dbg !10052
  %1 = load i8*, i8** %hostdata, align 8, !dbg !10052
  call void @kfree(i8* %1) #11, !dbg !10053
  ret void, !dbg !10054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_biosparam(%struct.scsi_device* %sdev, %struct.block_device* %bdev, i64 %capacity, i32* %geom) #0 !dbg !10055 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %bdev.addr = alloca %struct.block_device*, align 8
  %capacity.addr = alloca i64, align 8
  %geom.addr = alloca i32*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !10056, metadata !DIExpression()), !dbg !10057
  store %struct.block_device* %bdev, %struct.block_device** %bdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %bdev.addr, metadata !10058, metadata !DIExpression()), !dbg !10059
  store i64 %capacity, i64* %capacity.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.addr, metadata !10060, metadata !DIExpression()), !dbg !10061
  store i32* %geom, i32** %geom.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %geom.addr, metadata !10062, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !10064, metadata !DIExpression()), !dbg !10065
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10066
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !10067
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10067
  %call = call i8* @shost_priv(%struct.Scsi_Host* %1) #11, !dbg !10068
  %2 = bitcast i8* %call to %struct.myrb_hba*, !dbg !10068
  store %struct.myrb_hba* %2, %struct.myrb_hba** %cb, align 8, !dbg !10065
  %3 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10069
  %ldev_geom_heads = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %3, i32 0, i32 1, !dbg !10070
  %4 = load i8, i8* %ldev_geom_heads, align 4, !dbg !10070
  %conv = zext i8 %4 to i32, !dbg !10069
  %5 = load i32*, i32** %geom.addr, align 8, !dbg !10071
  %arrayidx = getelementptr i32, i32* %5, i64 0, !dbg !10071
  store i32 %conv, i32* %arrayidx, align 4, !dbg !10072
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10073
  %ldev_geom_sectors = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %6, i32 0, i32 2, !dbg !10074
  %7 = load i8, i8* %ldev_geom_sectors, align 1, !dbg !10074
  %conv1 = zext i8 %7 to i32, !dbg !10073
  %8 = load i32*, i32** %geom.addr, align 8, !dbg !10075
  %arrayidx2 = getelementptr i32, i32* %8, i64 1, !dbg !10075
  store i32 %conv1, i32* %arrayidx2, align 4, !dbg !10076
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !10077, metadata !DIExpression()), !dbg !10079
  %9 = load i32*, i32** %geom.addr, align 8, !dbg !10079
  %arrayidx3 = getelementptr i32, i32* %9, i64 0, !dbg !10079
  %10 = load i32, i32* %arrayidx3, align 4, !dbg !10079
  %11 = load i32*, i32** %geom.addr, align 8, !dbg !10079
  %arrayidx4 = getelementptr i32, i32* %11, i64 1, !dbg !10079
  %12 = load i32, i32* %arrayidx4, align 4, !dbg !10079
  %mul = mul i32 %10, %12, !dbg !10079
  store i32 %mul, i32* %__base, align 4, !dbg !10079
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !10080, metadata !DIExpression()), !dbg !10079
  %13 = load i64, i64* %capacity.addr, align 8, !dbg !10079
  %14 = load i32, i32* %__base, align 4, !dbg !10079
  %conv5 = zext i32 %14 to i64, !dbg !10079
  %rem = urem i64 %13, %conv5, !dbg !10079
  %conv6 = trunc i64 %rem to i32, !dbg !10079
  store i32 %conv6, i32* %__rem, align 4, !dbg !10079
  %15 = load i64, i64* %capacity.addr, align 8, !dbg !10079
  %16 = load i32, i32* %__base, align 4, !dbg !10079
  %conv7 = zext i32 %16 to i64, !dbg !10079
  %div = udiv i64 %15, %conv7, !dbg !10079
  store i64 %div, i64* %capacity.addr, align 8, !dbg !10079
  %17 = load i32, i32* %__rem, align 4, !dbg !10079
  store i32 %17, i32* %tmp, align 4, !dbg !10079
  %18 = load i32, i32* %tmp, align 4, !dbg !10079
  %19 = load i32*, i32** %geom.addr, align 8, !dbg !10081
  %arrayidx8 = getelementptr i32, i32* %19, i64 2, !dbg !10081
  store i32 %18, i32* %arrayidx8, align 4, !dbg !10082
  ret i32 0, !dbg !10083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_logical_channel(%struct.Scsi_Host* %shost) #0 !dbg !10084 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !10085, metadata !DIExpression()), !dbg !10086
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10087
  %max_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 19, !dbg !10088
  %1 = load i32, i32* %max_channel, align 8, !dbg !10088
  %sub = sub i32 %1, 1, !dbg !10089
  ret i32 %sub, !dbg !10090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_ldev_queuecommand(%struct.Scsi_Host* %shost, %struct.scsi_cmnd* %scmd) #0 !dbg !10091 {
entry:
  %lock.addr.i329 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i329, metadata !6560, metadata !DIExpression()), !dbg !10092
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6567, metadata !DIExpression()), !dbg !10094
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6569, metadata !DIExpression()), !dbg !10095
  %p.addr.i.i.i310 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i.i310, metadata !10102, metadata !DIExpression()), !dbg !10109
  %p.addr.i.i311 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i311, metadata !10124, metadata !DIExpression()), !dbg !10125
  %p.addr.i312 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i312, metadata !10126, metadata !DIExpression()), !dbg !10127
  %p.addr.i.i.i291 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i.i291, metadata !10102, metadata !DIExpression()), !dbg !10128
  %p.addr.i.i292 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i292, metadata !10124, metadata !DIExpression()), !dbg !10132
  %p.addr.i293 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i293, metadata !10126, metadata !DIExpression()), !dbg !10133
  %p.addr.i.i.i280 = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i.i280, metadata !10134, metadata !DIExpression()), !dbg !10140
  %p.addr.i.i281 = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i281, metadata !10152, metadata !DIExpression()), !dbg !10153
  %p.addr.i282 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i282, metadata !10154, metadata !DIExpression()), !dbg !10155
  %p.addr.i.i.i261 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i.i261, metadata !10102, metadata !DIExpression()), !dbg !10156
  %p.addr.i.i262 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i262, metadata !10124, metadata !DIExpression()), !dbg !10160
  %p.addr.i263 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i263, metadata !10126, metadata !DIExpression()), !dbg !10161
  %p.addr.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i.i, metadata !10102, metadata !DIExpression()), !dbg !10162
  %p.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i, metadata !10124, metadata !DIExpression()), !dbg !10166
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !10126, metadata !DIExpression()), !dbg !10167
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %ldev_info = alloca %struct.myrb_ldev_info*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %sgl = alloca %struct.scatterlist*, align 8
  %flags = alloca i64, align 8
  %lba = alloca i64, align 8
  %block_cnt = alloca i32, align 4
  %nsge = alloca i32, align 4
  %hw_sgl = alloca %struct.myrb_sge*, align 8
  %hw_sgl_addr = alloca i64, align 8
  %i = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy245 = alloca i64, align 8
  %__dummy2246 = alloca i64, align 8
  %tmp249 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !10168, metadata !DIExpression()), !dbg !10169
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !10170, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !10172, metadata !DIExpression()), !dbg !10173
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10174
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !10175
  %1 = bitcast i8* %call to %struct.myrb_hba*, !dbg !10175
  store %struct.myrb_hba* %1, %struct.myrb_hba** %cb, align 8, !dbg !10173
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !10176, metadata !DIExpression()), !dbg !10177
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10178
  %call1 = call i8* @scsi_cmd_priv(%struct.scsi_cmnd* %2) #11, !dbg !10179
  %3 = bitcast i8* %call1 to %struct.myrb_cmdblk*, !dbg !10179
  store %struct.myrb_cmdblk* %3, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !10177
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !10180, metadata !DIExpression()), !dbg !10181
  %4 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !10182
  %mbox2 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %4, i32 0, i32 0, !dbg !10183
  store %union.myrb_cmd_mbox* %mbox2, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10181
  call void @llvm.dbg.declare(metadata %struct.myrb_ldev_info** %ldev_info, metadata !10184, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !10186, metadata !DIExpression()), !dbg !10187
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10188
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 1, !dbg !10189
  %6 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !10189
  store %struct.scsi_device* %6, %struct.scsi_device** %sdev, align 8, !dbg !10187
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgl, metadata !10190, metadata !DIExpression()), !dbg !10191
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10192, metadata !DIExpression()), !dbg !10193
  call void @llvm.dbg.declare(metadata i64* %lba, metadata !10194, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.declare(metadata i32* %block_cnt, metadata !10196, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.declare(metadata i32* %nsge, metadata !10198, metadata !DIExpression()), !dbg !10199
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10200
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %7, i32 0, i32 21, !dbg !10201
  %8 = load i8*, i8** %hostdata, align 8, !dbg !10201
  %9 = bitcast i8* %8 to %struct.myrb_ldev_info*, !dbg !10200
  store %struct.myrb_ldev_info* %9, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10202
  %10 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10203
  %state = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %10, i32 0, i32 1, !dbg !10205
  %11 = load i8, i8* %state, align 4, !dbg !10205
  %conv = zext i8 %11 to i32, !dbg !10203
  %cmp = icmp ne i32 %conv, 3, !dbg !10206
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10207

land.lhs.true:                                    ; preds = %entry
  %12 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10208
  %state4 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %12, i32 0, i32 1, !dbg !10209
  %13 = load i8, i8* %state4, align 4, !dbg !10209
  %conv5 = zext i8 %13 to i32, !dbg !10208
  %cmp6 = icmp ne i32 %conv5, 2, !dbg !10210
  br i1 %cmp6, label %if.then, label %if.end, !dbg !10211

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10212
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 24, !dbg !10214
  store i32 262144, i32* %result, align 8, !dbg !10215
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10216
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 21, !dbg !10217
  %16 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !10217
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10218
  call void %16(%struct.scsi_cmnd* %17) #11, !dbg !10216
  store i32 0, i32* %retval, align 4, !dbg !10219
  br label %return, !dbg !10219

if.end:                                           ; preds = %land.lhs.true, %entry
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10220
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %18, i32 0, i32 14, !dbg !10221
  %19 = load i8*, i8** %cmnd, align 8, !dbg !10221
  %arrayidx = getelementptr i8, i8* %19, i64 0, !dbg !10220
  %20 = load i8, i8* %arrayidx, align 1, !dbg !10220
  %conv8 = zext i8 %20 to i32, !dbg !10220
  switch i32 %conv8, label %sw.default [
    i32 0, label %sw.bb
    i32 18, label %sw.bb11
    i32 53, label %sw.bb20
    i32 26, label %sw.bb23
    i32 37, label %sw.bb44
    i32 3, label %sw.bb71
    i32 29, label %sw.bb73
    i32 8, label %sw.bb86
    i32 10, label %sw.bb96
    i32 40, label %sw.bb113
    i32 42, label %sw.bb123
    i32 47, label %sw.bb123
    i32 46, label %sw.bb123
    i32 168, label %sw.bb132
    i32 170, label %sw.bb142
    i32 175, label %sw.bb142
    i32 174, label %sw.bb142
  ], !dbg !10222

sw.bb:                                            ; preds = %if.end
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10223
  %result9 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %21, i32 0, i32 24, !dbg !10224
  store i32 0, i32* %result9, align 8, !dbg !10225
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10226
  %scsi_done10 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %22, i32 0, i32 21, !dbg !10227
  %23 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done10, align 8, !dbg !10227
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10228
  call void %23(%struct.scsi_cmnd* %24) #11, !dbg !10226
  store i32 0, i32* %retval, align 4, !dbg !10229
  br label %return, !dbg !10229

sw.bb11:                                          ; preds = %if.end
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10230
  %cmnd12 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %25, i32 0, i32 14, !dbg !10232
  %26 = load i8*, i8** %cmnd12, align 8, !dbg !10232
  %arrayidx13 = getelementptr i8, i8* %26, i64 1, !dbg !10230
  %27 = load i8, i8* %arrayidx13, align 1, !dbg !10230
  %conv14 = zext i8 %27 to i32, !dbg !10230
  %and = and i32 %conv14, 1, !dbg !10233
  %tobool = icmp ne i32 %and, 0, !dbg !10233
  br i1 %tobool, label %if.then15, label %if.else, !dbg !10234

if.then15:                                        ; preds = %sw.bb11
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10235
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %28, i32 0, i32 20, !dbg !10237
  %29 = load i8*, i8** %sense_buffer, align 8, !dbg !10237
  call void @scsi_build_sense_buffer(i32 0, i8* %29, i8 zeroext 5, i8 zeroext 36, i8 zeroext 0) #11, !dbg !10238
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10239
  %result16 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %30, i32 0, i32 24, !dbg !10240
  store i32 134217730, i32* %result16, align 8, !dbg !10241
  br label %if.end18, !dbg !10242

if.else:                                          ; preds = %sw.bb11
  %31 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10243
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10245
  call void @myrb_inquiry(%struct.myrb_hba* %31, %struct.scsi_cmnd* %32) #11, !dbg !10246
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10247
  %result17 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %33, i32 0, i32 24, !dbg !10248
  store i32 0, i32* %result17, align 8, !dbg !10249
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then15
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10250
  %scsi_done19 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %34, i32 0, i32 21, !dbg !10251
  %35 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done19, align 8, !dbg !10251
  %36 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10252
  call void %35(%struct.scsi_cmnd* %36) #11, !dbg !10250
  store i32 0, i32* %retval, align 4, !dbg !10253
  br label %return, !dbg !10253

sw.bb20:                                          ; preds = %if.end
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10254
  %result21 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %37, i32 0, i32 24, !dbg !10255
  store i32 0, i32* %result21, align 8, !dbg !10256
  %38 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10257
  %scsi_done22 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %38, i32 0, i32 21, !dbg !10258
  %39 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done22, align 8, !dbg !10258
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10259
  call void %39(%struct.scsi_cmnd* %40) #11, !dbg !10257
  store i32 0, i32* %retval, align 4, !dbg !10260
  br label %return, !dbg !10260

sw.bb23:                                          ; preds = %if.end
  %41 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10261
  %cmnd24 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %41, i32 0, i32 14, !dbg !10263
  %42 = load i8*, i8** %cmnd24, align 8, !dbg !10263
  %arrayidx25 = getelementptr i8, i8* %42, i64 2, !dbg !10261
  %43 = load i8, i8* %arrayidx25, align 1, !dbg !10261
  %conv26 = zext i8 %43 to i32, !dbg !10261
  %and27 = and i32 %conv26, 63, !dbg !10264
  %cmp28 = icmp ne i32 %and27, 63, !dbg !10265
  br i1 %cmp28, label %land.lhs.true30, label %if.else40, !dbg !10266

land.lhs.true30:                                  ; preds = %sw.bb23
  %44 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10267
  %cmnd31 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %44, i32 0, i32 14, !dbg !10268
  %45 = load i8*, i8** %cmnd31, align 8, !dbg !10268
  %arrayidx32 = getelementptr i8, i8* %45, i64 2, !dbg !10267
  %46 = load i8, i8* %arrayidx32, align 1, !dbg !10267
  %conv33 = zext i8 %46 to i32, !dbg !10267
  %and34 = and i32 %conv33, 63, !dbg !10269
  %cmp35 = icmp ne i32 %and34, 8, !dbg !10270
  br i1 %cmp35, label %if.then37, label %if.else40, !dbg !10271

if.then37:                                        ; preds = %land.lhs.true30
  %47 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10272
  %sense_buffer38 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %47, i32 0, i32 20, !dbg !10274
  %48 = load i8*, i8** %sense_buffer38, align 8, !dbg !10274
  call void @scsi_build_sense_buffer(i32 0, i8* %48, i8 zeroext 5, i8 zeroext 36, i8 zeroext 0) #11, !dbg !10275
  %49 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10276
  %result39 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %49, i32 0, i32 24, !dbg !10277
  store i32 134217730, i32* %result39, align 8, !dbg !10278
  br label %if.end42, !dbg !10279

if.else40:                                        ; preds = %land.lhs.true30, %sw.bb23
  %50 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10280
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10282
  %52 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10283
  call void @myrb_mode_sense(%struct.myrb_hba* %50, %struct.scsi_cmnd* %51, %struct.myrb_ldev_info* %52) #11, !dbg !10284
  %53 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10285
  %result41 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %53, i32 0, i32 24, !dbg !10286
  store i32 0, i32* %result41, align 8, !dbg !10287
  br label %if.end42

if.end42:                                         ; preds = %if.else40, %if.then37
  %54 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10288
  %scsi_done43 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %54, i32 0, i32 21, !dbg !10289
  %55 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done43, align 8, !dbg !10289
  %56 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10290
  call void %55(%struct.scsi_cmnd* %56) #11, !dbg !10288
  store i32 0, i32* %retval, align 4, !dbg !10291
  br label %return, !dbg !10291

sw.bb44:                                          ; preds = %if.end
  %57 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10292
  %cmnd45 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %57, i32 0, i32 14, !dbg !10294
  %58 = load i8*, i8** %cmnd45, align 8, !dbg !10294
  %arrayidx46 = getelementptr i8, i8* %58, i64 1, !dbg !10292
  %59 = load i8, i8* %arrayidx46, align 1, !dbg !10292
  %conv47 = zext i8 %59 to i32, !dbg !10292
  %and48 = and i32 %conv47, 1, !dbg !10295
  %tobool49 = icmp ne i32 %and48, 0, !dbg !10295
  br i1 %tobool49, label %if.then55, label %lor.lhs.false, !dbg !10296

lor.lhs.false:                                    ; preds = %sw.bb44
  %60 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10297
  %cmnd50 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %60, i32 0, i32 14, !dbg !10298
  %61 = load i8*, i8** %cmnd50, align 8, !dbg !10298
  %arrayidx51 = getelementptr i8, i8* %61, i64 8, !dbg !10297
  %62 = load i8, i8* %arrayidx51, align 1, !dbg !10297
  %conv52 = zext i8 %62 to i32, !dbg !10297
  %and53 = and i32 %conv52, 1, !dbg !10299
  %tobool54 = icmp ne i32 %and53, 0, !dbg !10299
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !10300

if.then55:                                        ; preds = %lor.lhs.false, %sw.bb44
  %63 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10301
  %sense_buffer56 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %63, i32 0, i32 20, !dbg !10303
  %64 = load i8*, i8** %sense_buffer56, align 8, !dbg !10303
  call void @scsi_build_sense_buffer(i32 0, i8* %64, i8 zeroext 5, i8 zeroext 36, i8 zeroext 0) #11, !dbg !10304
  %65 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10305
  %result57 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %65, i32 0, i32 24, !dbg !10306
  store i32 134217730, i32* %result57, align 8, !dbg !10307
  %66 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10308
  %scsi_done58 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %66, i32 0, i32 21, !dbg !10309
  %67 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done58, align 8, !dbg !10309
  %68 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10310
  call void %67(%struct.scsi_cmnd* %68) #11, !dbg !10308
  store i32 0, i32* %retval, align 4, !dbg !10311
  br label %return, !dbg !10311

if.end59:                                         ; preds = %lor.lhs.false
  %69 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10312
  %cmnd60 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %69, i32 0, i32 14, !dbg !10313
  %70 = load i8*, i8** %cmnd60, align 8, !dbg !10313
  %arrayidx61 = getelementptr i8, i8* %70, i64 2, !dbg !10312
  store i8* %arrayidx61, i8** %p.addr.i, align 8
  %71 = load i8*, i8** %p.addr.i, align 8, !dbg !10314
  %72 = bitcast i8* %71 to i32*, !dbg !10315
  store i32* %72, i32** %p.addr.i.i, align 8
  %73 = load i32*, i32** %p.addr.i.i, align 8, !dbg !10316
  store i32* %73, i32** %p.addr.i.i.i, align 8
  %74 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !10317
  %75 = load i32, i32* %74, align 4, !dbg !10317
  %76 = call i1 @llvm.is.constant.i32(i32 %75) #7, !dbg !10317
  br i1 %76, label %cond.true.i.i.i, label %cond.false.i.i.i, !dbg !10317

cond.true.i.i.i:                                  ; preds = %if.end59
  %77 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !10317
  %78 = load i32, i32* %77, align 4, !dbg !10317
  %and.i.i.i = and i32 %78, 255, !dbg !10317
  %shl.i.i.i = shl i32 %and.i.i.i, 24, !dbg !10317
  %79 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !10317
  %80 = load i32, i32* %79, align 4, !dbg !10317
  %and1.i.i.i = and i32 %80, 65280, !dbg !10317
  %shl2.i.i.i = shl i32 %and1.i.i.i, 8, !dbg !10317
  %or.i.i.i = or i32 %shl.i.i.i, %shl2.i.i.i, !dbg !10317
  %81 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !10317
  %82 = load i32, i32* %81, align 4, !dbg !10317
  %and3.i.i.i = and i32 %82, 16711680, !dbg !10317
  %shr.i.i.i = lshr i32 %and3.i.i.i, 8, !dbg !10317
  %or4.i.i.i = or i32 %or.i.i.i, %shr.i.i.i, !dbg !10317
  %83 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !10317
  %84 = load i32, i32* %83, align 4, !dbg !10317
  %and5.i.i.i = and i32 %84, -16777216, !dbg !10317
  %shr6.i.i.i = lshr i32 %and5.i.i.i, 24, !dbg !10317
  %or7.i.i.i = or i32 %or4.i.i.i, %shr6.i.i.i, !dbg !10317
  br label %get_unaligned_be32.exit, !dbg !10317

cond.false.i.i.i:                                 ; preds = %if.end59
  %85 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !10317
  %86 = load i32, i32* %85, align 4, !dbg !10317
  %call.i.i.i = call i32 @__fswab32(i32 %86) #14, !dbg !10317
  br label %get_unaligned_be32.exit, !dbg !10317

get_unaligned_be32.exit:                          ; preds = %cond.true.i.i.i, %cond.false.i.i.i
  %cond.i.i.i = phi i32 [ %or7.i.i.i, %cond.true.i.i.i ], [ %call.i.i.i, %cond.false.i.i.i ], !dbg !10317
  %conv63 = zext i32 %cond.i.i.i to i64, !dbg !10318
  store i64 %conv63, i64* %lba, align 8, !dbg !10319
  %87 = load i64, i64* %lba, align 8, !dbg !10320
  %tobool64 = icmp ne i64 %87, 0, !dbg !10320
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !10322

if.then65:                                        ; preds = %get_unaligned_be32.exit
  %88 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10323
  %sense_buffer66 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %88, i32 0, i32 20, !dbg !10325
  %89 = load i8*, i8** %sense_buffer66, align 8, !dbg !10325
  call void @scsi_build_sense_buffer(i32 0, i8* %89, i8 zeroext 5, i8 zeroext 36, i8 zeroext 0) #11, !dbg !10326
  %90 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10327
  %result67 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %90, i32 0, i32 24, !dbg !10328
  store i32 134217730, i32* %result67, align 8, !dbg !10329
  %91 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10330
  %scsi_done68 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %91, i32 0, i32 21, !dbg !10331
  %92 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done68, align 8, !dbg !10331
  %93 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10332
  call void %92(%struct.scsi_cmnd* %93) #11, !dbg !10330
  store i32 0, i32* %retval, align 4, !dbg !10333
  br label %return, !dbg !10333

if.end69:                                         ; preds = %get_unaligned_be32.exit
  %94 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10334
  %95 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10335
  %96 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10336
  call void @myrb_read_capacity(%struct.myrb_hba* %94, %struct.scsi_cmnd* %95, %struct.myrb_ldev_info* %96) #11, !dbg !10337
  %97 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10338
  %scsi_done70 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %97, i32 0, i32 21, !dbg !10339
  %98 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done70, align 8, !dbg !10339
  %99 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10340
  call void %98(%struct.scsi_cmnd* %99) #11, !dbg !10338
  store i32 0, i32* %retval, align 4, !dbg !10341
  br label %return, !dbg !10341

sw.bb71:                                          ; preds = %if.end
  %100 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10342
  %101 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10343
  call void @myrb_request_sense(%struct.myrb_hba* %100, %struct.scsi_cmnd* %101) #11, !dbg !10344
  %102 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10345
  %result72 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %102, i32 0, i32 24, !dbg !10346
  store i32 0, i32* %result72, align 8, !dbg !10347
  store i32 0, i32* %retval, align 4, !dbg !10348
  br label %return, !dbg !10348

sw.bb73:                                          ; preds = %if.end
  %103 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10349
  %cmnd74 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %103, i32 0, i32 14, !dbg !10351
  %104 = load i8*, i8** %cmnd74, align 8, !dbg !10351
  %arrayidx75 = getelementptr i8, i8* %104, i64 1, !dbg !10349
  %105 = load i8, i8* %arrayidx75, align 1, !dbg !10349
  %conv76 = zext i8 %105 to i32, !dbg !10349
  %cmp77 = icmp ne i32 %conv76, 4, !dbg !10352
  br i1 %cmp77, label %if.then79, label %if.else82, !dbg !10353

if.then79:                                        ; preds = %sw.bb73
  %106 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10354
  %sense_buffer80 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %106, i32 0, i32 20, !dbg !10356
  %107 = load i8*, i8** %sense_buffer80, align 8, !dbg !10356
  call void @scsi_build_sense_buffer(i32 0, i8* %107, i8 zeroext 5, i8 zeroext 36, i8 zeroext 0) #11, !dbg !10357
  %108 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10358
  %result81 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %108, i32 0, i32 24, !dbg !10359
  store i32 134217730, i32* %result81, align 8, !dbg !10360
  br label %if.end84, !dbg !10361

if.else82:                                        ; preds = %sw.bb73
  %109 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10362
  %result83 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %109, i32 0, i32 24, !dbg !10364
  store i32 0, i32* %result83, align 8, !dbg !10365
  br label %if.end84

if.end84:                                         ; preds = %if.else82, %if.then79
  %110 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10366
  %scsi_done85 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %110, i32 0, i32 21, !dbg !10367
  %111 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done85, align 8, !dbg !10367
  %112 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10368
  call void %111(%struct.scsi_cmnd* %112) #11, !dbg !10366
  store i32 0, i32* %retval, align 4, !dbg !10369
  br label %return, !dbg !10369

sw.bb86:                                          ; preds = %if.end
  %113 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10370
  %state87 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %113, i32 0, i32 1, !dbg !10372
  %114 = load i8, i8* %state87, align 4, !dbg !10372
  %conv88 = zext i8 %114 to i32, !dbg !10370
  %cmp89 = icmp eq i32 %conv88, 2, !dbg !10373
  br i1 %cmp89, label %if.then91, label %if.end95, !dbg !10374

if.then91:                                        ; preds = %sw.bb86
  %115 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10375
  %sense_buffer92 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %115, i32 0, i32 20, !dbg !10377
  %116 = load i8*, i8** %sense_buffer92, align 8, !dbg !10377
  call void @scsi_build_sense_buffer(i32 0, i8* %116, i8 zeroext 7, i8 zeroext 33, i8 zeroext 6) #11, !dbg !10378
  %117 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10379
  %result93 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %117, i32 0, i32 24, !dbg !10380
  store i32 134217730, i32* %result93, align 8, !dbg !10381
  %118 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10382
  %scsi_done94 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %118, i32 0, i32 21, !dbg !10383
  %119 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done94, align 8, !dbg !10383
  %120 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10384
  call void %119(%struct.scsi_cmnd* %120) #11, !dbg !10382
  store i32 0, i32* %retval, align 4, !dbg !10385
  br label %return, !dbg !10385

if.end95:                                         ; preds = %sw.bb86
  br label %sw.bb96, !dbg !10386

sw.bb96:                                          ; preds = %if.end, %if.end95
  %121 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10387
  %cmnd97 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %121, i32 0, i32 14, !dbg !10388
  %122 = load i8*, i8** %cmnd97, align 8, !dbg !10388
  %arrayidx98 = getelementptr i8, i8* %122, i64 1, !dbg !10387
  %123 = load i8, i8* %arrayidx98, align 1, !dbg !10387
  %conv99 = zext i8 %123 to i32, !dbg !10387
  %and100 = and i32 %conv99, 31, !dbg !10389
  %shl = shl i32 %and100, 16, !dbg !10390
  %124 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10391
  %cmnd101 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %124, i32 0, i32 14, !dbg !10392
  %125 = load i8*, i8** %cmnd101, align 8, !dbg !10392
  %arrayidx102 = getelementptr i8, i8* %125, i64 2, !dbg !10391
  %126 = load i8, i8* %arrayidx102, align 1, !dbg !10391
  %conv103 = zext i8 %126 to i32, !dbg !10391
  %shl104 = shl i32 %conv103, 8, !dbg !10393
  %or = or i32 %shl, %shl104, !dbg !10394
  %127 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10395
  %cmnd105 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %127, i32 0, i32 14, !dbg !10396
  %128 = load i8*, i8** %cmnd105, align 8, !dbg !10396
  %arrayidx106 = getelementptr i8, i8* %128, i64 3, !dbg !10395
  %129 = load i8, i8* %arrayidx106, align 1, !dbg !10395
  %conv107 = zext i8 %129 to i32, !dbg !10395
  %or108 = or i32 %or, %conv107, !dbg !10397
  %conv109 = sext i32 %or108 to i64, !dbg !10398
  store i64 %conv109, i64* %lba, align 8, !dbg !10399
  %130 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10400
  %cmnd110 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %130, i32 0, i32 14, !dbg !10401
  %131 = load i8*, i8** %cmnd110, align 8, !dbg !10401
  %arrayidx111 = getelementptr i8, i8* %131, i64 4, !dbg !10400
  %132 = load i8, i8* %arrayidx111, align 1, !dbg !10400
  %conv112 = zext i8 %132 to i32, !dbg !10400
  store i32 %conv112, i32* %block_cnt, align 4, !dbg !10402
  br label %sw.epilog, !dbg !10403

sw.bb113:                                         ; preds = %if.end
  %133 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10404
  %state114 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %133, i32 0, i32 1, !dbg !10406
  %134 = load i8, i8* %state114, align 4, !dbg !10406
  %conv115 = zext i8 %134 to i32, !dbg !10404
  %cmp116 = icmp eq i32 %conv115, 2, !dbg !10407
  br i1 %cmp116, label %if.then118, label %if.end122, !dbg !10408

if.then118:                                       ; preds = %sw.bb113
  %135 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10409
  %sense_buffer119 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %135, i32 0, i32 20, !dbg !10411
  %136 = load i8*, i8** %sense_buffer119, align 8, !dbg !10411
  call void @scsi_build_sense_buffer(i32 0, i8* %136, i8 zeroext 7, i8 zeroext 33, i8 zeroext 6) #11, !dbg !10412
  %137 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10413
  %result120 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %137, i32 0, i32 24, !dbg !10414
  store i32 134217730, i32* %result120, align 8, !dbg !10415
  %138 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10416
  %scsi_done121 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %138, i32 0, i32 21, !dbg !10417
  %139 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done121, align 8, !dbg !10417
  %140 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10418
  call void %139(%struct.scsi_cmnd* %140) #11, !dbg !10416
  store i32 0, i32* %retval, align 4, !dbg !10419
  br label %return, !dbg !10419

if.end122:                                        ; preds = %sw.bb113
  br label %sw.bb123, !dbg !10420

sw.bb123:                                         ; preds = %if.end, %if.end, %if.end, %if.end122
  %141 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10421
  %cmnd124 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %141, i32 0, i32 14, !dbg !10422
  %142 = load i8*, i8** %cmnd124, align 8, !dbg !10422
  %arrayidx125 = getelementptr i8, i8* %142, i64 2, !dbg !10421
  store i8* %arrayidx125, i8** %p.addr.i263, align 8
  %143 = load i8*, i8** %p.addr.i263, align 8, !dbg !10423
  %144 = bitcast i8* %143 to i32*, !dbg !10424
  store i32* %144, i32** %p.addr.i.i262, align 8
  %145 = load i32*, i32** %p.addr.i.i262, align 8, !dbg !10425
  store i32* %145, i32** %p.addr.i.i.i261, align 8
  %146 = load i32*, i32** %p.addr.i.i.i261, align 8, !dbg !10426
  %147 = load i32, i32* %146, align 4, !dbg !10426
  %148 = call i1 @llvm.is.constant.i32(i32 %147) #7, !dbg !10426
  br i1 %148, label %cond.true.i.i.i275, label %cond.false.i.i.i277, !dbg !10426

cond.true.i.i.i275:                               ; preds = %sw.bb123
  %149 = load i32*, i32** %p.addr.i.i.i261, align 8, !dbg !10426
  %150 = load i32, i32* %149, align 4, !dbg !10426
  %and.i.i.i264 = and i32 %150, 255, !dbg !10426
  %shl.i.i.i265 = shl i32 %and.i.i.i264, 24, !dbg !10426
  %151 = load i32*, i32** %p.addr.i.i.i261, align 8, !dbg !10426
  %152 = load i32, i32* %151, align 4, !dbg !10426
  %and1.i.i.i266 = and i32 %152, 65280, !dbg !10426
  %shl2.i.i.i267 = shl i32 %and1.i.i.i266, 8, !dbg !10426
  %or.i.i.i268 = or i32 %shl.i.i.i265, %shl2.i.i.i267, !dbg !10426
  %153 = load i32*, i32** %p.addr.i.i.i261, align 8, !dbg !10426
  %154 = load i32, i32* %153, align 4, !dbg !10426
  %and3.i.i.i269 = and i32 %154, 16711680, !dbg !10426
  %shr.i.i.i270 = lshr i32 %and3.i.i.i269, 8, !dbg !10426
  %or4.i.i.i271 = or i32 %or.i.i.i268, %shr.i.i.i270, !dbg !10426
  %155 = load i32*, i32** %p.addr.i.i.i261, align 8, !dbg !10426
  %156 = load i32, i32* %155, align 4, !dbg !10426
  %and5.i.i.i272 = and i32 %156, -16777216, !dbg !10426
  %shr6.i.i.i273 = lshr i32 %and5.i.i.i272, 24, !dbg !10426
  %or7.i.i.i274 = or i32 %or4.i.i.i271, %shr6.i.i.i273, !dbg !10426
  br label %get_unaligned_be32.exit279, !dbg !10426

cond.false.i.i.i277:                              ; preds = %sw.bb123
  %157 = load i32*, i32** %p.addr.i.i.i261, align 8, !dbg !10426
  %158 = load i32, i32* %157, align 4, !dbg !10426
  %call.i.i.i276 = call i32 @__fswab32(i32 %158) #14, !dbg !10426
  br label %get_unaligned_be32.exit279, !dbg !10426

get_unaligned_be32.exit279:                       ; preds = %cond.true.i.i.i275, %cond.false.i.i.i277
  %cond.i.i.i278 = phi i32 [ %or7.i.i.i274, %cond.true.i.i.i275 ], [ %call.i.i.i276, %cond.false.i.i.i277 ], !dbg !10426
  %conv127 = zext i32 %cond.i.i.i278 to i64, !dbg !10427
  store i64 %conv127, i64* %lba, align 8, !dbg !10428
  %159 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10429
  %cmnd128 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %159, i32 0, i32 14, !dbg !10430
  %160 = load i8*, i8** %cmnd128, align 8, !dbg !10430
  %arrayidx129 = getelementptr i8, i8* %160, i64 7, !dbg !10429
  store i8* %arrayidx129, i8** %p.addr.i282, align 8
  %161 = load i8*, i8** %p.addr.i282, align 8, !dbg !10431
  %162 = bitcast i8* %161 to i16*, !dbg !10432
  store i16* %162, i16** %p.addr.i.i281, align 8
  %163 = load i16*, i16** %p.addr.i.i281, align 8, !dbg !10433
  store i16* %163, i16** %p.addr.i.i.i280, align 8
  %164 = load i16*, i16** %p.addr.i.i.i280, align 8, !dbg !10434
  %165 = load i16, i16* %164, align 2, !dbg !10434
  %166 = call i1 @llvm.is.constant.i16(i16 %165) #7, !dbg !10434
  br i1 %166, label %cond.true.i.i.i287, label %cond.false.i.i.i289, !dbg !10434

cond.true.i.i.i287:                               ; preds = %get_unaligned_be32.exit279
  %167 = load i16*, i16** %p.addr.i.i.i280, align 8, !dbg !10434
  %168 = load i16, i16* %167, align 2, !dbg !10434
  %conv.i.i.i = zext i16 %168 to i32, !dbg !10434
  %and.i.i.i283 = and i32 %conv.i.i.i, 255, !dbg !10434
  %shl.i.i.i284 = shl i32 %and.i.i.i283, 8, !dbg !10434
  %169 = load i16*, i16** %p.addr.i.i.i280, align 8, !dbg !10434
  %170 = load i16, i16* %169, align 2, !dbg !10434
  %conv1.i.i.i = zext i16 %170 to i32, !dbg !10434
  %and2.i.i.i = and i32 %conv1.i.i.i, 65280, !dbg !10434
  %shr.i.i.i285 = ashr i32 %and2.i.i.i, 8, !dbg !10434
  %or.i.i.i286 = or i32 %shl.i.i.i284, %shr.i.i.i285, !dbg !10434
  %conv3.i.i.i = trunc i32 %or.i.i.i286 to i16, !dbg !10434
  %conv4.i.i.i = zext i16 %conv3.i.i.i to i32, !dbg !10434
  br label %get_unaligned_be16.exit, !dbg !10434

cond.false.i.i.i289:                              ; preds = %get_unaligned_be32.exit279
  %171 = load i16*, i16** %p.addr.i.i.i280, align 8, !dbg !10434
  %172 = load i16, i16* %171, align 2, !dbg !10434
  %call.i.i.i288 = call zeroext i16 @__fswab16(i16 zeroext %172) #14, !dbg !10434
  %conv5.i.i.i = zext i16 %call.i.i.i288 to i32, !dbg !10434
  br label %get_unaligned_be16.exit, !dbg !10434

get_unaligned_be16.exit:                          ; preds = %cond.true.i.i.i287, %cond.false.i.i.i289
  %cond.i.i.i290 = phi i32 [ %conv4.i.i.i, %cond.true.i.i.i287 ], [ %conv5.i.i.i, %cond.false.i.i.i289 ], !dbg !10434
  %conv6.i.i.i = trunc i32 %cond.i.i.i290 to i16, !dbg !10434
  %conv131 = zext i16 %conv6.i.i.i to i32, !dbg !10435
  store i32 %conv131, i32* %block_cnt, align 4, !dbg !10436
  br label %sw.epilog, !dbg !10437

sw.bb132:                                         ; preds = %if.end
  %173 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !10438
  %state133 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %173, i32 0, i32 1, !dbg !10440
  %174 = load i8, i8* %state133, align 4, !dbg !10440
  %conv134 = zext i8 %174 to i32, !dbg !10438
  %cmp135 = icmp eq i32 %conv134, 2, !dbg !10441
  br i1 %cmp135, label %if.then137, label %if.end141, !dbg !10442

if.then137:                                       ; preds = %sw.bb132
  %175 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10443
  %sense_buffer138 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %175, i32 0, i32 20, !dbg !10445
  %176 = load i8*, i8** %sense_buffer138, align 8, !dbg !10445
  call void @scsi_build_sense_buffer(i32 0, i8* %176, i8 zeroext 7, i8 zeroext 33, i8 zeroext 6) #11, !dbg !10446
  %177 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10447
  %result139 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %177, i32 0, i32 24, !dbg !10448
  store i32 134217730, i32* %result139, align 8, !dbg !10449
  %178 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10450
  %scsi_done140 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %178, i32 0, i32 21, !dbg !10451
  %179 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done140, align 8, !dbg !10451
  %180 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10452
  call void %179(%struct.scsi_cmnd* %180) #11, !dbg !10450
  store i32 0, i32* %retval, align 4, !dbg !10453
  br label %return, !dbg !10453

if.end141:                                        ; preds = %sw.bb132
  br label %sw.bb142, !dbg !10454

sw.bb142:                                         ; preds = %if.end, %if.end, %if.end, %if.end141
  %181 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10455
  %cmnd143 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %181, i32 0, i32 14, !dbg !10456
  %182 = load i8*, i8** %cmnd143, align 8, !dbg !10456
  %arrayidx144 = getelementptr i8, i8* %182, i64 2, !dbg !10455
  store i8* %arrayidx144, i8** %p.addr.i293, align 8
  %183 = load i8*, i8** %p.addr.i293, align 8, !dbg !10457
  %184 = bitcast i8* %183 to i32*, !dbg !10458
  store i32* %184, i32** %p.addr.i.i292, align 8
  %185 = load i32*, i32** %p.addr.i.i292, align 8, !dbg !10459
  store i32* %185, i32** %p.addr.i.i.i291, align 8
  %186 = load i32*, i32** %p.addr.i.i.i291, align 8, !dbg !10460
  %187 = load i32, i32* %186, align 4, !dbg !10460
  %188 = call i1 @llvm.is.constant.i32(i32 %187) #7, !dbg !10460
  br i1 %188, label %cond.true.i.i.i305, label %cond.false.i.i.i307, !dbg !10460

cond.true.i.i.i305:                               ; preds = %sw.bb142
  %189 = load i32*, i32** %p.addr.i.i.i291, align 8, !dbg !10460
  %190 = load i32, i32* %189, align 4, !dbg !10460
  %and.i.i.i294 = and i32 %190, 255, !dbg !10460
  %shl.i.i.i295 = shl i32 %and.i.i.i294, 24, !dbg !10460
  %191 = load i32*, i32** %p.addr.i.i.i291, align 8, !dbg !10460
  %192 = load i32, i32* %191, align 4, !dbg !10460
  %and1.i.i.i296 = and i32 %192, 65280, !dbg !10460
  %shl2.i.i.i297 = shl i32 %and1.i.i.i296, 8, !dbg !10460
  %or.i.i.i298 = or i32 %shl.i.i.i295, %shl2.i.i.i297, !dbg !10460
  %193 = load i32*, i32** %p.addr.i.i.i291, align 8, !dbg !10460
  %194 = load i32, i32* %193, align 4, !dbg !10460
  %and3.i.i.i299 = and i32 %194, 16711680, !dbg !10460
  %shr.i.i.i300 = lshr i32 %and3.i.i.i299, 8, !dbg !10460
  %or4.i.i.i301 = or i32 %or.i.i.i298, %shr.i.i.i300, !dbg !10460
  %195 = load i32*, i32** %p.addr.i.i.i291, align 8, !dbg !10460
  %196 = load i32, i32* %195, align 4, !dbg !10460
  %and5.i.i.i302 = and i32 %196, -16777216, !dbg !10460
  %shr6.i.i.i303 = lshr i32 %and5.i.i.i302, 24, !dbg !10460
  %or7.i.i.i304 = or i32 %or4.i.i.i301, %shr6.i.i.i303, !dbg !10460
  br label %get_unaligned_be32.exit309, !dbg !10460

cond.false.i.i.i307:                              ; preds = %sw.bb142
  %197 = load i32*, i32** %p.addr.i.i.i291, align 8, !dbg !10460
  %198 = load i32, i32* %197, align 4, !dbg !10460
  %call.i.i.i306 = call i32 @__fswab32(i32 %198) #14, !dbg !10460
  br label %get_unaligned_be32.exit309, !dbg !10460

get_unaligned_be32.exit309:                       ; preds = %cond.true.i.i.i305, %cond.false.i.i.i307
  %cond.i.i.i308 = phi i32 [ %or7.i.i.i304, %cond.true.i.i.i305 ], [ %call.i.i.i306, %cond.false.i.i.i307 ], !dbg !10460
  %conv146 = zext i32 %cond.i.i.i308 to i64, !dbg !10461
  store i64 %conv146, i64* %lba, align 8, !dbg !10462
  %199 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10463
  %cmnd147 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %199, i32 0, i32 14, !dbg !10464
  %200 = load i8*, i8** %cmnd147, align 8, !dbg !10464
  %arrayidx148 = getelementptr i8, i8* %200, i64 6, !dbg !10463
  store i8* %arrayidx148, i8** %p.addr.i312, align 8
  %201 = load i8*, i8** %p.addr.i312, align 8, !dbg !10465
  %202 = bitcast i8* %201 to i32*, !dbg !10466
  store i32* %202, i32** %p.addr.i.i311, align 8
  %203 = load i32*, i32** %p.addr.i.i311, align 8, !dbg !10467
  store i32* %203, i32** %p.addr.i.i.i310, align 8
  %204 = load i32*, i32** %p.addr.i.i.i310, align 8, !dbg !10468
  %205 = load i32, i32* %204, align 4, !dbg !10468
  %206 = call i1 @llvm.is.constant.i32(i32 %205) #7, !dbg !10468
  br i1 %206, label %cond.true.i.i.i324, label %cond.false.i.i.i326, !dbg !10468

cond.true.i.i.i324:                               ; preds = %get_unaligned_be32.exit309
  %207 = load i32*, i32** %p.addr.i.i.i310, align 8, !dbg !10468
  %208 = load i32, i32* %207, align 4, !dbg !10468
  %and.i.i.i313 = and i32 %208, 255, !dbg !10468
  %shl.i.i.i314 = shl i32 %and.i.i.i313, 24, !dbg !10468
  %209 = load i32*, i32** %p.addr.i.i.i310, align 8, !dbg !10468
  %210 = load i32, i32* %209, align 4, !dbg !10468
  %and1.i.i.i315 = and i32 %210, 65280, !dbg !10468
  %shl2.i.i.i316 = shl i32 %and1.i.i.i315, 8, !dbg !10468
  %or.i.i.i317 = or i32 %shl.i.i.i314, %shl2.i.i.i316, !dbg !10468
  %211 = load i32*, i32** %p.addr.i.i.i310, align 8, !dbg !10468
  %212 = load i32, i32* %211, align 4, !dbg !10468
  %and3.i.i.i318 = and i32 %212, 16711680, !dbg !10468
  %shr.i.i.i319 = lshr i32 %and3.i.i.i318, 8, !dbg !10468
  %or4.i.i.i320 = or i32 %or.i.i.i317, %shr.i.i.i319, !dbg !10468
  %213 = load i32*, i32** %p.addr.i.i.i310, align 8, !dbg !10468
  %214 = load i32, i32* %213, align 4, !dbg !10468
  %and5.i.i.i321 = and i32 %214, -16777216, !dbg !10468
  %shr6.i.i.i322 = lshr i32 %and5.i.i.i321, 24, !dbg !10468
  %or7.i.i.i323 = or i32 %or4.i.i.i320, %shr6.i.i.i322, !dbg !10468
  br label %get_unaligned_be32.exit328, !dbg !10468

cond.false.i.i.i326:                              ; preds = %get_unaligned_be32.exit309
  %215 = load i32*, i32** %p.addr.i.i.i310, align 8, !dbg !10468
  %216 = load i32, i32* %215, align 4, !dbg !10468
  %call.i.i.i325 = call i32 @__fswab32(i32 %216) #14, !dbg !10468
  br label %get_unaligned_be32.exit328, !dbg !10468

get_unaligned_be32.exit328:                       ; preds = %cond.true.i.i.i324, %cond.false.i.i.i326
  %cond.i.i.i327 = phi i32 [ %or7.i.i.i323, %cond.true.i.i.i324 ], [ %call.i.i.i325, %cond.false.i.i.i326 ], !dbg !10468
  store i32 %cond.i.i.i327, i32* %block_cnt, align 4, !dbg !10469
  br label %sw.epilog, !dbg !10470

sw.default:                                       ; preds = %if.end
  %217 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10471
  %sense_buffer150 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %217, i32 0, i32 20, !dbg !10472
  %218 = load i8*, i8** %sense_buffer150, align 8, !dbg !10472
  call void @scsi_build_sense_buffer(i32 0, i8* %218, i8 zeroext 5, i8 zeroext 32, i8 zeroext 0) #11, !dbg !10473
  %219 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10474
  %result151 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %219, i32 0, i32 24, !dbg !10475
  store i32 134217730, i32* %result151, align 8, !dbg !10476
  %220 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10477
  %scsi_done152 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %220, i32 0, i32 21, !dbg !10478
  %221 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done152, align 8, !dbg !10478
  %222 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10479
  call void %221(%struct.scsi_cmnd* %222) #11, !dbg !10477
  store i32 0, i32* %retval, align 4, !dbg !10480
  br label %return, !dbg !10480

sw.epilog:                                        ; preds = %get_unaligned_be32.exit328, %get_unaligned_be16.exit, %sw.bb96
  %223 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !10481
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %223) #11, !dbg !10482
  %224 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10483
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %224, i32 0, i32 19, !dbg !10484
  %225 = load %struct.request*, %struct.request** %request, align 8, !dbg !10484
  %tag = getelementptr inbounds %struct.request, %struct.request* %225, i32 0, i32 5, !dbg !10485
  %226 = load i32, i32* %tag, align 8, !dbg !10485
  %add = add i32 %226, 3, !dbg !10486
  %conv153 = trunc i32 %add to i8, !dbg !10483
  %227 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10487
  %type5 = bitcast %union.myrb_cmd_mbox* %227 to %struct.anon.85*, !dbg !10488
  %id = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5, i32 0, i32 1, !dbg !10489
  store i8 %conv153, i8* %id, align 1, !dbg !10490
  %228 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10491
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %228, i32 0, i32 13, !dbg !10493
  %229 = load i32, i32* %sc_data_direction, align 8, !dbg !10493
  %cmp154 = icmp eq i32 %229, 3, !dbg !10494
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !10495

if.then156:                                       ; preds = %sw.epilog
  br label %submit, !dbg !10496

if.end157:                                        ; preds = %sw.epilog
  %230 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10497
  %call158 = call i32 @scsi_dma_map(%struct.scsi_cmnd* %230) #11, !dbg !10498
  store i32 %call158, i32* %nsge, align 4, !dbg !10499
  %231 = load i32, i32* %nsge, align 4, !dbg !10500
  %cmp159 = icmp eq i32 %231, 1, !dbg !10502
  br i1 %cmp159, label %if.then161, label %if.else187, !dbg !10503

if.then161:                                       ; preds = %if.end157
  %232 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10504
  %call162 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %232) #11, !dbg !10506
  store %struct.scatterlist* %call162, %struct.scatterlist** %sgl, align 8, !dbg !10507
  %233 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10508
  %sc_data_direction163 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %233, i32 0, i32 13, !dbg !10510
  %234 = load i32, i32* %sc_data_direction163, align 8, !dbg !10510
  %cmp164 = icmp eq i32 %234, 2, !dbg !10511
  br i1 %cmp164, label %if.then166, label %if.else168, !dbg !10512

if.then166:                                       ; preds = %if.then161
  %235 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10513
  %type5167 = bitcast %union.myrb_cmd_mbox* %235 to %struct.anon.85*, !dbg !10514
  %opcode = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5167, i32 0, i32 0, !dbg !10515
  store i8 54, i8* %opcode, align 4, !dbg !10516
  br label %if.end171, !dbg !10513

if.else168:                                       ; preds = %if.then161
  %236 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10517
  %type5169 = bitcast %union.myrb_cmd_mbox* %236 to %struct.anon.85*, !dbg !10518
  %opcode170 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5169, i32 0, i32 0, !dbg !10519
  store i8 55, i8* %opcode170, align 4, !dbg !10520
  br label %if.end171

if.end171:                                        ; preds = %if.else168, %if.then166
  %237 = load i32, i32* %block_cnt, align 4, !dbg !10521
  %conv172 = trunc i32 %237 to i16, !dbg !10521
  %238 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10522
  %type5173 = bitcast %union.myrb_cmd_mbox* %238 to %struct.anon.85*, !dbg !10523
  %ld = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5173, i32 0, i32 2, !dbg !10524
  %239 = bitcast %struct.anon.86* %ld to i16*, !dbg !10525
  %bf.load = load i16, i16* %239, align 2, !dbg !10526
  %bf.value = and i16 %conv172, 2047, !dbg !10526
  %bf.clear = and i16 %bf.load, -2048, !dbg !10526
  %bf.set = or i16 %bf.clear, %bf.value, !dbg !10526
  store i16 %bf.set, i16* %239, align 2, !dbg !10526
  %240 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10527
  %id174 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %240, i32 0, i32 16, !dbg !10528
  %241 = load i32, i32* %id174, align 8, !dbg !10528
  %conv175 = trunc i32 %241 to i8, !dbg !10527
  %242 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10529
  %type5176 = bitcast %union.myrb_cmd_mbox* %242 to %struct.anon.85*, !dbg !10530
  %ld177 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5176, i32 0, i32 2, !dbg !10531
  %243 = bitcast %struct.anon.86* %ld177 to i16*, !dbg !10532
  %244 = zext i8 %conv175 to i16, !dbg !10533
  %bf.load178 = load i16, i16* %243, align 2, !dbg !10533
  %bf.value179 = and i16 %244, 31, !dbg !10533
  %bf.shl = shl i16 %bf.value179, 11, !dbg !10533
  %bf.clear180 = and i16 %bf.load178, 2047, !dbg !10533
  %bf.set181 = or i16 %bf.clear180, %bf.shl, !dbg !10533
  store i16 %bf.set181, i16* %243, align 2, !dbg !10533
  %bf.result.cast = trunc i16 %bf.value179 to i8, !dbg !10533
  %245 = load i64, i64* %lba, align 8, !dbg !10534
  %conv182 = trunc i64 %245 to i32, !dbg !10534
  %246 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10535
  %type5183 = bitcast %union.myrb_cmd_mbox* %246 to %struct.anon.85*, !dbg !10536
  %lba184 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5183, i32 0, i32 3, !dbg !10537
  store i32 %conv182, i32* %lba184, align 4, !dbg !10538
  %247 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10539
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %247, i32 0, i32 3, !dbg !10539
  %248 = load i64, i64* %dma_address, align 8, !dbg !10539
  %conv185 = trunc i64 %248 to i32, !dbg !10540
  %249 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10541
  %type5186 = bitcast %union.myrb_cmd_mbox* %249 to %struct.anon.85*, !dbg !10542
  %addr = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5186, i32 0, i32 4, !dbg !10543
  store i32 %conv185, i32* %addr, align 4, !dbg !10544
  br label %if.end238, !dbg !10545

if.else187:                                       ; preds = %if.end157
  call void @llvm.dbg.declare(metadata %struct.myrb_sge** %hw_sgl, metadata !10546, metadata !DIExpression()), !dbg !10548
  call void @llvm.dbg.declare(metadata i64* %hw_sgl_addr, metadata !10549, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10551, metadata !DIExpression()), !dbg !10552
  %250 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10553
  %sg_pool = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %250, i32 0, i32 24, !dbg !10554
  %251 = load %struct.dma_pool*, %struct.dma_pool** %sg_pool, align 8, !dbg !10554
  %call188 = call i8* @dma_pool_alloc(%struct.dma_pool* %251, i32 2592, i64* %hw_sgl_addr) #11, !dbg !10555
  %252 = bitcast i8* %call188 to %struct.myrb_sge*, !dbg !10555
  store %struct.myrb_sge* %252, %struct.myrb_sge** %hw_sgl, align 8, !dbg !10556
  %253 = load %struct.myrb_sge*, %struct.myrb_sge** %hw_sgl, align 8, !dbg !10557
  %tobool189 = icmp ne %struct.myrb_sge* %253, null, !dbg !10557
  br i1 %tobool189, label %if.end191, label %if.then190, !dbg !10559

if.then190:                                       ; preds = %if.else187
  store i32 4181, i32* %retval, align 4, !dbg !10560
  br label %return, !dbg !10560

if.end191:                                        ; preds = %if.else187
  %254 = load %struct.myrb_sge*, %struct.myrb_sge** %hw_sgl, align 8, !dbg !10561
  %255 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !10562
  %sgl192 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %255, i32 0, i32 5, !dbg !10563
  store %struct.myrb_sge* %254, %struct.myrb_sge** %sgl192, align 8, !dbg !10564
  %256 = load i64, i64* %hw_sgl_addr, align 8, !dbg !10565
  %257 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !10566
  %sgl_addr = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %257, i32 0, i32 6, !dbg !10567
  store i64 %256, i64* %sgl_addr, align 8, !dbg !10568
  %258 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10569
  %sc_data_direction193 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %258, i32 0, i32 13, !dbg !10571
  %259 = load i32, i32* %sc_data_direction193, align 8, !dbg !10571
  %cmp194 = icmp eq i32 %259, 2, !dbg !10572
  br i1 %cmp194, label %if.then196, label %if.else199, !dbg !10573

if.then196:                                       ; preds = %if.end191
  %260 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10574
  %type5197 = bitcast %union.myrb_cmd_mbox* %260 to %struct.anon.85*, !dbg !10575
  %opcode198 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5197, i32 0, i32 0, !dbg !10576
  store i8 -74, i8* %opcode198, align 4, !dbg !10577
  br label %if.end202, !dbg !10574

if.else199:                                       ; preds = %if.end191
  %261 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10578
  %type5200 = bitcast %union.myrb_cmd_mbox* %261 to %struct.anon.85*, !dbg !10579
  %opcode201 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5200, i32 0, i32 0, !dbg !10580
  store i8 -73, i8* %opcode201, align 4, !dbg !10581
  br label %if.end202

if.end202:                                        ; preds = %if.else199, %if.then196
  %262 = load i32, i32* %block_cnt, align 4, !dbg !10582
  %conv203 = trunc i32 %262 to i16, !dbg !10582
  %263 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10583
  %type5204 = bitcast %union.myrb_cmd_mbox* %263 to %struct.anon.85*, !dbg !10584
  %ld205 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5204, i32 0, i32 2, !dbg !10585
  %264 = bitcast %struct.anon.86* %ld205 to i16*, !dbg !10586
  %bf.load206 = load i16, i16* %264, align 2, !dbg !10587
  %bf.value207 = and i16 %conv203, 2047, !dbg !10587
  %bf.clear208 = and i16 %bf.load206, -2048, !dbg !10587
  %bf.set209 = or i16 %bf.clear208, %bf.value207, !dbg !10587
  store i16 %bf.set209, i16* %264, align 2, !dbg !10587
  %265 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10588
  %id210 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %265, i32 0, i32 16, !dbg !10589
  %266 = load i32, i32* %id210, align 8, !dbg !10589
  %conv211 = trunc i32 %266 to i8, !dbg !10588
  %267 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10590
  %type5212 = bitcast %union.myrb_cmd_mbox* %267 to %struct.anon.85*, !dbg !10591
  %ld213 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5212, i32 0, i32 2, !dbg !10592
  %268 = bitcast %struct.anon.86* %ld213 to i16*, !dbg !10593
  %269 = zext i8 %conv211 to i16, !dbg !10594
  %bf.load214 = load i16, i16* %268, align 2, !dbg !10594
  %bf.value215 = and i16 %269, 31, !dbg !10594
  %bf.shl216 = shl i16 %bf.value215, 11, !dbg !10594
  %bf.clear217 = and i16 %bf.load214, 2047, !dbg !10594
  %bf.set218 = or i16 %bf.clear217, %bf.shl216, !dbg !10594
  store i16 %bf.set218, i16* %268, align 2, !dbg !10594
  %bf.result.cast219 = trunc i16 %bf.value215 to i8, !dbg !10594
  %270 = load i64, i64* %lba, align 8, !dbg !10595
  %conv220 = trunc i64 %270 to i32, !dbg !10595
  %271 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10596
  %type5221 = bitcast %union.myrb_cmd_mbox* %271 to %struct.anon.85*, !dbg !10597
  %lba222 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5221, i32 0, i32 3, !dbg !10598
  store i32 %conv220, i32* %lba222, align 4, !dbg !10599
  %272 = load i64, i64* %hw_sgl_addr, align 8, !dbg !10600
  %conv223 = trunc i64 %272 to i32, !dbg !10600
  %273 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10601
  %type5224 = bitcast %union.myrb_cmd_mbox* %273 to %struct.anon.85*, !dbg !10602
  %addr225 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5224, i32 0, i32 4, !dbg !10603
  store i32 %conv223, i32* %addr225, align 4, !dbg !10604
  %274 = load i32, i32* %nsge, align 4, !dbg !10605
  %conv226 = trunc i32 %274 to i8, !dbg !10605
  %275 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10606
  %type5227 = bitcast %union.myrb_cmd_mbox* %275 to %struct.anon.85*, !dbg !10607
  %sg_count = getelementptr inbounds %struct.anon.85, %struct.anon.85* %type5227, i32 0, i32 5, !dbg !10608
  %bf.load228 = load i8, i8* %sg_count, align 4, !dbg !10609
  %bf.value229 = and i8 %conv226, 63, !dbg !10609
  %bf.clear230 = and i8 %bf.load228, -64, !dbg !10609
  %bf.set231 = or i8 %bf.clear230, %bf.value229, !dbg !10609
  store i8 %bf.set231, i8* %sg_count, align 4, !dbg !10609
  store i32 0, i32* %i, align 4, !dbg !10610
  %276 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10610
  %call232 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %276) #11, !dbg !10610
  store %struct.scatterlist* %call232, %struct.scatterlist** %sgl, align 8, !dbg !10610
  br label %for.cond, !dbg !10610

for.cond:                                         ; preds = %for.inc, %if.end202
  %277 = load i32, i32* %i, align 4, !dbg !10612
  %278 = load i32, i32* %nsge, align 4, !dbg !10612
  %cmp233 = icmp slt i32 %277, %278, !dbg !10612
  br i1 %cmp233, label %for.body, label %for.end, !dbg !10610

for.body:                                         ; preds = %for.cond
  %279 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10614
  %dma_address235 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %279, i32 0, i32 3, !dbg !10614
  %280 = load i64, i64* %dma_address235, align 8, !dbg !10614
  %conv236 = trunc i64 %280 to i32, !dbg !10616
  %281 = load %struct.myrb_sge*, %struct.myrb_sge** %hw_sgl, align 8, !dbg !10617
  %sge_addr = getelementptr inbounds %struct.myrb_sge, %struct.myrb_sge* %281, i32 0, i32 0, !dbg !10618
  store i32 %conv236, i32* %sge_addr, align 4, !dbg !10619
  %282 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10620
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %282, i32 0, i32 4, !dbg !10620
  %283 = load i32, i32* %dma_length, align 8, !dbg !10620
  %284 = load %struct.myrb_sge*, %struct.myrb_sge** %hw_sgl, align 8, !dbg !10621
  %sge_count = getelementptr inbounds %struct.myrb_sge, %struct.myrb_sge* %284, i32 0, i32 1, !dbg !10622
  store i32 %283, i32* %sge_count, align 4, !dbg !10623
  %285 = load %struct.myrb_sge*, %struct.myrb_sge** %hw_sgl, align 8, !dbg !10624
  %incdec.ptr = getelementptr %struct.myrb_sge, %struct.myrb_sge* %285, i32 1, !dbg !10624
  store %struct.myrb_sge* %incdec.ptr, %struct.myrb_sge** %hw_sgl, align 8, !dbg !10624
  br label %for.inc, !dbg !10625

for.inc:                                          ; preds = %for.body
  %286 = load i32, i32* %i, align 4, !dbg !10612
  %inc = add i32 %286, 1, !dbg !10612
  store i32 %inc, i32* %i, align 4, !dbg !10612
  %287 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10612
  %call237 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %287) #11, !dbg !10612
  store %struct.scatterlist* %call237, %struct.scatterlist** %sgl, align 8, !dbg !10612
  br label %for.cond, !dbg !10612, !llvm.loop !10626

for.end:                                          ; preds = %for.cond
  br label %if.end238

if.end238:                                        ; preds = %for.end, %if.end171
  br label %submit, !dbg !10628

submit:                                           ; preds = %if.end238, %if.then156
  call void @llvm.dbg.label(metadata !10629), !dbg !10630
  br label %do.body, !dbg !10631

do.body:                                          ; preds = %submit
  br label %do.body239, !dbg !10632

do.body239:                                       ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10633, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10636, metadata !DIExpression()), !dbg !10635
  %cmp240 = icmp eq i64* %__dummy, %__dummy2, !dbg !10635
  %conv241 = zext i1 %cmp240 to i32, !dbg !10635
  store i32 1, i32* %tmp, align 4, !dbg !10635
  %288 = load i32, i32* %tmp, align 4, !dbg !10635
  br label %do.body242, !dbg !10637

do.body242:                                       ; preds = %do.body239
  br label %do.body243, !dbg !10638

do.body243:                                       ; preds = %do.body242
  br label %do.body244, !dbg !10639

do.body244:                                       ; preds = %do.body243
  call void @llvm.dbg.declare(metadata i64* %__dummy245, metadata !10641, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.declare(metadata i64* %__dummy2246, metadata !10645, metadata !DIExpression()), !dbg !10644
  %cmp247 = icmp eq i64* %__dummy245, %__dummy2246, !dbg !10644
  %conv248 = zext i1 %cmp247 to i32, !dbg !10644
  store i32 1, i32* %tmp249, align 4, !dbg !10644
  %289 = load i32, i32* %tmp249, align 4, !dbg !10644
  %call250 = call i64 @arch_local_irq_save() #11, !dbg !10646
  store i64 %call250, i64* %flags, align 8, !dbg !10646
  br label %do.end, !dbg !10646

do.end:                                           ; preds = %do.body244
  br label %do.end251, !dbg !10639

do.end251:                                        ; preds = %do.end
  br label %do.body252, !dbg !10638

do.body252:                                       ; preds = %do.end251
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10647, !srcloc !10648
  br label %do.body253, !dbg !10647

do.body253:                                       ; preds = %do.body252
  %290 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10649
  %queue_lock = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %290, i32 0, i32 26, !dbg !10649
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %291 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10650
  %292 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %291, i32 0, i32 0, !dbg !10651
  %rlock.i = bitcast %union.anon.1* %292 to %struct.raw_spinlock*, !dbg !10651
  br label %do.end255, !dbg !10649

do.end255:                                        ; preds = %do.body253
  br label %do.end256, !dbg !10647

do.end256:                                        ; preds = %do.end255
  br label %do.end257, !dbg !10638

do.end257:                                        ; preds = %do.end256
  br label %do.end258, !dbg !10637

do.end258:                                        ; preds = %do.end257
  br label %do.end259, !dbg !10632

do.end259:                                        ; preds = %do.end258
  %293 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10652
  %qcmd = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %293, i32 0, i32 27, !dbg !10653
  %294 = load void (%struct.myrb_hba*, %struct.myrb_cmdblk*)*, void (%struct.myrb_hba*, %struct.myrb_cmdblk*)** %qcmd, align 8, !dbg !10653
  %295 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10654
  %296 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !10655
  call void %294(%struct.myrb_hba* %295, %struct.myrb_cmdblk* %296) #11, !dbg !10652
  %297 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10656
  %queue_lock260 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %297, i32 0, i32 26, !dbg !10657
  %298 = load i64, i64* %flags, align 8, !dbg !10658
  store %struct.spinlock* %queue_lock260, %struct.spinlock** %lock.addr.i329, align 8
  store i64 %298, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1034, metadata !6710, metadata !DIExpression()) #7, !dbg !10659
  call void @llvm.dbg.declare(metadata !1034, metadata !6714, metadata !DIExpression()) #7, !dbg !10659
  store i32 1, i32* %tmp.i, align 4, !dbg !10659
  %299 = load i32, i32* %tmp.i, align 4, !dbg !10659
  call void @llvm.dbg.declare(metadata !1034, metadata !6715, metadata !DIExpression()) #7, !dbg !10660
  call void @llvm.dbg.declare(metadata !1034, metadata !6721, metadata !DIExpression()) #7, !dbg !10660
  store i32 1, i32* %tmp8.i, align 4, !dbg !10660
  %300 = load i32, i32* %tmp8.i, align 4, !dbg !10660
  %301 = load i64, i64* %flags.addr.i, align 8, !dbg !10661
  call void @arch_local_irq_restore(i64 %301) #13, !dbg !10661
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10662, !srcloc !6725
  %302 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i329, align 8, !dbg !10663
  %303 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %302, i32 0, i32 0, !dbg !10663
  %rlock.i330 = bitcast %union.anon.1* %303 to %struct.raw_spinlock*, !dbg !10663
  store i32 0, i32* %retval, align 4, !dbg !10664
  br label %return, !dbg !10664

return:                                           ; preds = %do.end259, %if.then190, %sw.default, %if.then137, %if.then118, %if.then91, %if.end84, %sw.bb71, %if.end69, %if.then65, %if.then55, %if.end42, %sw.bb20, %if.end18, %sw.bb, %if.then
  %304 = load i32, i32* %retval, align 4, !dbg !10665
  ret i32 %304, !dbg !10665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_pthru_queuecommand(%struct.Scsi_Host* %shost, %struct.scsi_cmnd* %scmd) #0 !dbg !10666 {
entry:
  %lock.addr.i118 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i118, metadata !6560, metadata !DIExpression()), !dbg !10667
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6567, metadata !DIExpression()), !dbg !10669
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6569, metadata !DIExpression()), !dbg !10670
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %dcdb = alloca %struct.myrb_dcdb*, align 8
  %dcdb_addr = alloca i64, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %sgl = alloca %struct.scatterlist*, align 8
  %flags = alloca i64, align 8
  %nsge = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy102 = alloca i64, align 8
  %__dummy2103 = alloca i64, align 8
  %tmp106 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !10677, metadata !DIExpression()), !dbg !10678
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !10679, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !10681, metadata !DIExpression()), !dbg !10682
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10683
  %call = call i8* @shost_priv(%struct.Scsi_Host* %0) #11, !dbg !10684
  %1 = bitcast i8* %call to %struct.myrb_hba*, !dbg !10684
  store %struct.myrb_hba* %1, %struct.myrb_hba** %cb, align 8, !dbg !10682
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !10685, metadata !DIExpression()), !dbg !10686
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10687
  %call1 = call i8* @scsi_cmd_priv(%struct.scsi_cmnd* %2) #11, !dbg !10688
  %3 = bitcast i8* %call1 to %struct.myrb_cmdblk*, !dbg !10688
  store %struct.myrb_cmdblk* %3, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !10686
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !10689, metadata !DIExpression()), !dbg !10690
  %4 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !10691
  %mbox2 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %4, i32 0, i32 0, !dbg !10692
  store %union.myrb_cmd_mbox* %mbox2, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10690
  call void @llvm.dbg.declare(metadata %struct.myrb_dcdb** %dcdb, metadata !10693, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.declare(metadata i64* %dcdb_addr, metadata !10695, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !10697, metadata !DIExpression()), !dbg !10698
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10699
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 1, !dbg !10700
  %6 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !10700
  store %struct.scsi_device* %6, %struct.scsi_device** %sdev, align 8, !dbg !10698
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgl, metadata !10701, metadata !DIExpression()), !dbg !10702
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10703, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.declare(metadata i32* %nsge, metadata !10705, metadata !DIExpression()), !dbg !10706
  %7 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !10707
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %7) #11, !dbg !10708
  %8 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10709
  %dcdb_pool = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %8, i32 0, i32 25, !dbg !10710
  %9 = load %struct.dma_pool*, %struct.dma_pool** %dcdb_pool, align 8, !dbg !10710
  %call3 = call i8* @dma_pool_alloc(%struct.dma_pool* %9, i32 2592, i64* %dcdb_addr) #11, !dbg !10711
  %10 = bitcast i8* %call3 to %struct.myrb_dcdb*, !dbg !10711
  store %struct.myrb_dcdb* %10, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10712
  %11 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10713
  %tobool = icmp ne %struct.myrb_dcdb* %11, null, !dbg !10713
  br i1 %tobool, label %if.end, label %if.then, !dbg !10715

if.then:                                          ; preds = %entry
  store i32 4181, i32* %retval, align 4, !dbg !10716
  br label %return, !dbg !10716

if.end:                                           ; preds = %entry
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10717
  %call4 = call i32 @scsi_dma_map(%struct.scsi_cmnd* %12) #11, !dbg !10718
  store i32 %call4, i32* %nsge, align 4, !dbg !10719
  %13 = load i32, i32* %nsge, align 4, !dbg !10720
  %cmp = icmp sgt i32 %13, 1, !dbg !10722
  br i1 %cmp, label %if.then5, label %if.end7, !dbg !10723

if.then5:                                         ; preds = %if.end
  %14 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10724
  %dcdb_pool6 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %14, i32 0, i32 25, !dbg !10726
  %15 = load %struct.dma_pool*, %struct.dma_pool** %dcdb_pool6, align 8, !dbg !10726
  %16 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10727
  %17 = bitcast %struct.myrb_dcdb* %16 to i8*, !dbg !10727
  %18 = load i64, i64* %dcdb_addr, align 8, !dbg !10728
  call void @dma_pool_free(%struct.dma_pool* %15, i8* %17, i64 %18) #11, !dbg !10729
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10730
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %19, i32 0, i32 24, !dbg !10731
  store i32 458752, i32* %result, align 8, !dbg !10732
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10733
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 21, !dbg !10734
  %21 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !10734
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10735
  call void %21(%struct.scsi_cmnd* %22) #11, !dbg !10733
  store i32 0, i32* %retval, align 4, !dbg !10736
  br label %return, !dbg !10736

if.end7:                                          ; preds = %if.end
  %23 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10737
  %type3 = bitcast %union.myrb_cmd_mbox* %23 to %struct.anon.78*, !dbg !10738
  %opcode = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type3, i32 0, i32 0, !dbg !10739
  store i8 4, i8* %opcode, align 4, !dbg !10740
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10741
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 19, !dbg !10742
  %25 = load %struct.request*, %struct.request** %request, align 8, !dbg !10742
  %tag = getelementptr inbounds %struct.request, %struct.request* %25, i32 0, i32 5, !dbg !10743
  %26 = load i32, i32* %tag, align 8, !dbg !10743
  %add = add i32 %26, 3, !dbg !10744
  %conv = trunc i32 %add to i8, !dbg !10741
  %27 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10745
  %type38 = bitcast %union.myrb_cmd_mbox* %27 to %struct.anon.78*, !dbg !10746
  %id = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type38, i32 0, i32 1, !dbg !10747
  store i8 %conv, i8* %id, align 1, !dbg !10748
  %28 = load i64, i64* %dcdb_addr, align 8, !dbg !10749
  %conv9 = trunc i64 %28 to i32, !dbg !10749
  %29 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !10750
  %type310 = bitcast %union.myrb_cmd_mbox* %29 to %struct.anon.78*, !dbg !10751
  %addr = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type310, i32 0, i32 3, !dbg !10752
  store i32 %conv9, i32* %addr, align 4, !dbg !10753
  %30 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10754
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %30, i32 0, i32 17, !dbg !10755
  %31 = load i32, i32* %channel, align 4, !dbg !10755
  %32 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10756
  %33 = bitcast %struct.myrb_dcdb* %32 to i16*, !dbg !10757
  %34 = trunc i32 %31 to i16, !dbg !10758
  %bf.load = load i16, i16* %33, align 4, !dbg !10758
  %bf.value = and i16 %34, 15, !dbg !10758
  %bf.shl = shl i16 %bf.value, 4, !dbg !10758
  %bf.clear = and i16 %bf.load, -241, !dbg !10758
  %bf.set = or i16 %bf.clear, %bf.shl, !dbg !10758
  store i16 %bf.set, i16* %33, align 4, !dbg !10758
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !10758
  %35 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10759
  %id11 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %35, i32 0, i32 16, !dbg !10760
  %36 = load i32, i32* %id11, align 8, !dbg !10760
  %37 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10761
  %38 = bitcast %struct.myrb_dcdb* %37 to i16*, !dbg !10762
  %39 = trunc i32 %36 to i16, !dbg !10763
  %bf.load12 = load i16, i16* %38, align 4, !dbg !10763
  %bf.value13 = and i16 %39, 15, !dbg !10763
  %bf.clear14 = and i16 %bf.load12, -16, !dbg !10763
  %bf.set15 = or i16 %bf.clear14, %bf.value13, !dbg !10763
  store i16 %bf.set15, i16* %38, align 4, !dbg !10763
  %bf.result.cast16 = zext i16 %bf.value13 to i32, !dbg !10763
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10764
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 13, !dbg !10765
  %41 = load i32, i32* %sc_data_direction, align 8, !dbg !10765
  switch i32 %41, label %sw.default [
    i32 3, label %sw.bb
    i32 1, label %sw.bb19
    i32 2, label %sw.bb23
  ], !dbg !10766

sw.bb:                                            ; preds = %if.end7
  %42 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10767
  %43 = bitcast %struct.myrb_dcdb* %42 to i16*, !dbg !10769
  %bf.load17 = load i16, i16* %43, align 4, !dbg !10770
  %bf.clear18 = and i16 %bf.load17, -769, !dbg !10770
  store i16 %bf.clear18, i16* %43, align 4, !dbg !10770
  br label %sw.epilog, !dbg !10771

sw.bb19:                                          ; preds = %if.end7
  %44 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10772
  %45 = bitcast %struct.myrb_dcdb* %44 to i16*, !dbg !10773
  %bf.load20 = load i16, i16* %45, align 4, !dbg !10774
  %bf.clear21 = and i16 %bf.load20, -769, !dbg !10774
  %bf.set22 = or i16 %bf.clear21, 512, !dbg !10774
  store i16 %bf.set22, i16* %45, align 4, !dbg !10774
  br label %sw.epilog, !dbg !10775

sw.bb23:                                          ; preds = %if.end7
  %46 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10776
  %47 = bitcast %struct.myrb_dcdb* %46 to i16*, !dbg !10777
  %bf.load24 = load i16, i16* %47, align 4, !dbg !10778
  %bf.clear25 = and i16 %bf.load24, -769, !dbg !10778
  %bf.set26 = or i16 %bf.clear25, 256, !dbg !10778
  store i16 %bf.set26, i16* %47, align 4, !dbg !10778
  br label %sw.epilog, !dbg !10779

sw.default:                                       ; preds = %if.end7
  %48 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10780
  %49 = bitcast %struct.myrb_dcdb* %48 to i16*, !dbg !10781
  %bf.load27 = load i16, i16* %49, align 4, !dbg !10782
  %bf.clear28 = and i16 %bf.load27, -769, !dbg !10782
  %bf.set29 = or i16 %bf.clear28, 768, !dbg !10782
  store i16 %bf.set29, i16* %49, align 4, !dbg !10782
  br label %sw.epilog, !dbg !10783

sw.epilog:                                        ; preds = %sw.default, %sw.bb23, %sw.bb19, %sw.bb
  %50 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10784
  %51 = bitcast %struct.myrb_dcdb* %50 to i16*, !dbg !10785
  %bf.load30 = load i16, i16* %51, align 4, !dbg !10786
  %bf.clear31 = and i16 %bf.load30, -1025, !dbg !10786
  store i16 %bf.clear31, i16* %51, align 4, !dbg !10786
  %52 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10787
  %request32 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %52, i32 0, i32 19, !dbg !10789
  %53 = load %struct.request*, %struct.request** %request32, align 8, !dbg !10789
  %timeout = getelementptr inbounds %struct.request, %struct.request* %53, i32 0, i32 26, !dbg !10790
  %54 = load i32, i32* %timeout, align 4, !dbg !10790
  %cmp33 = icmp ule i32 %54, 10, !dbg !10791
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !10792

if.then35:                                        ; preds = %sw.epilog
  %55 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10793
  %56 = bitcast %struct.myrb_dcdb* %55 to i16*, !dbg !10794
  %bf.load36 = load i16, i16* %56, align 4, !dbg !10795
  %bf.clear37 = and i16 %bf.load36, -12289, !dbg !10795
  %bf.set38 = or i16 %bf.clear37, 4096, !dbg !10795
  store i16 %bf.set38, i16* %56, align 4, !dbg !10795
  br label %if.end61, !dbg !10793

if.else:                                          ; preds = %sw.epilog
  %57 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10796
  %request39 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %57, i32 0, i32 19, !dbg !10798
  %58 = load %struct.request*, %struct.request** %request39, align 8, !dbg !10798
  %timeout40 = getelementptr inbounds %struct.request, %struct.request* %58, i32 0, i32 26, !dbg !10799
  %59 = load i32, i32* %timeout40, align 4, !dbg !10799
  %cmp41 = icmp ule i32 %59, 60, !dbg !10800
  br i1 %cmp41, label %if.then43, label %if.else47, !dbg !10801

if.then43:                                        ; preds = %if.else
  %60 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10802
  %61 = bitcast %struct.myrb_dcdb* %60 to i16*, !dbg !10803
  %bf.load44 = load i16, i16* %61, align 4, !dbg !10804
  %bf.clear45 = and i16 %bf.load44, -12289, !dbg !10804
  %bf.set46 = or i16 %bf.clear45, 8192, !dbg !10804
  store i16 %bf.set46, i16* %61, align 4, !dbg !10804
  br label %if.end60, !dbg !10802

if.else47:                                        ; preds = %if.else
  %62 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10805
  %request48 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %62, i32 0, i32 19, !dbg !10807
  %63 = load %struct.request*, %struct.request** %request48, align 8, !dbg !10807
  %timeout49 = getelementptr inbounds %struct.request, %struct.request* %63, i32 0, i32 26, !dbg !10808
  %64 = load i32, i32* %timeout49, align 4, !dbg !10808
  %cmp50 = icmp ule i32 %64, 600, !dbg !10809
  br i1 %cmp50, label %if.then52, label %if.else56, !dbg !10810

if.then52:                                        ; preds = %if.else47
  %65 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10811
  %66 = bitcast %struct.myrb_dcdb* %65 to i16*, !dbg !10812
  %bf.load53 = load i16, i16* %66, align 4, !dbg !10813
  %bf.clear54 = and i16 %bf.load53, -12289, !dbg !10813
  %bf.set55 = or i16 %bf.clear54, 12288, !dbg !10813
  store i16 %bf.set55, i16* %66, align 4, !dbg !10813
  br label %if.end59, !dbg !10811

if.else56:                                        ; preds = %if.else47
  %67 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10814
  %68 = bitcast %struct.myrb_dcdb* %67 to i16*, !dbg !10815
  %bf.load57 = load i16, i16* %68, align 4, !dbg !10816
  %bf.clear58 = and i16 %bf.load57, -12289, !dbg !10816
  store i16 %bf.clear58, i16* %68, align 4, !dbg !10816
  br label %if.end59

if.end59:                                         ; preds = %if.else56, %if.then52
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then43
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then35
  %69 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10817
  %70 = bitcast %struct.myrb_dcdb* %69 to i16*, !dbg !10818
  %bf.load62 = load i16, i16* %70, align 4, !dbg !10819
  %bf.clear63 = and i16 %bf.load62, -16385, !dbg !10819
  store i16 %bf.clear63, i16* %70, align 4, !dbg !10819
  %71 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10820
  %72 = bitcast %struct.myrb_dcdb* %71 to i16*, !dbg !10821
  %bf.load64 = load i16, i16* %72, align 4, !dbg !10822
  %bf.clear65 = and i16 %bf.load64, 32767, !dbg !10822
  %bf.set66 = or i16 %bf.clear65, -32768, !dbg !10822
  store i16 %bf.set66, i16* %72, align 4, !dbg !10822
  %73 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10823
  %call67 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %73) #11, !dbg !10824
  store %struct.scatterlist* %call67, %struct.scatterlist** %sgl, align 8, !dbg !10825
  %74 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10826
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %74, i32 0, i32 3, !dbg !10826
  %75 = load i64, i64* %dma_address, align 8, !dbg !10826
  %conv68 = trunc i64 %75 to i32, !dbg !10826
  %76 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10827
  %dma_addr = getelementptr inbounds %struct.myrb_dcdb, %struct.myrb_dcdb* %76, i32 0, i32 2, !dbg !10828
  store i32 %conv68, i32* %dma_addr, align 4, !dbg !10829
  %77 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10830
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %77, i32 0, i32 4, !dbg !10830
  %78 = load i32, i32* %dma_length, align 8, !dbg !10830
  %cmp69 = icmp ugt i32 %78, 65535, !dbg !10832
  br i1 %cmp69, label %if.then71, label %if.else81, !dbg !10833

if.then71:                                        ; preds = %if.end61
  %79 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10834
  %dma_length72 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %79, i32 0, i32 4, !dbg !10834
  %80 = load i32, i32* %dma_length72, align 8, !dbg !10834
  %and = and i32 %80, 65535, !dbg !10836
  %conv73 = trunc i32 %and to i16, !dbg !10834
  %81 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10837
  %xfer_len_lo = getelementptr inbounds %struct.myrb_dcdb, %struct.myrb_dcdb* %81, i32 0, i32 1, !dbg !10838
  store i16 %conv73, i16* %xfer_len_lo, align 2, !dbg !10839
  %82 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10840
  %dma_length74 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %82, i32 0, i32 4, !dbg !10840
  %83 = load i32, i32* %dma_length74, align 8, !dbg !10840
  %shr = lshr i32 %83, 16, !dbg !10841
  %conv75 = trunc i32 %shr to i8, !dbg !10840
  %84 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10842
  %xfer_len_hi4 = getelementptr inbounds %struct.myrb_dcdb, %struct.myrb_dcdb* %84, i32 0, i32 3, !dbg !10843
  %bf.load76 = load i8, i8* %xfer_len_hi4, align 4, !dbg !10844
  %bf.value77 = and i8 %conv75, 15, !dbg !10844
  %bf.shl78 = shl i8 %bf.value77, 4, !dbg !10844
  %bf.clear79 = and i8 %bf.load76, 15, !dbg !10844
  %bf.set80 = or i8 %bf.clear79, %bf.shl78, !dbg !10844
  store i8 %bf.set80, i8* %xfer_len_hi4, align 4, !dbg !10844
  br label %if.end88, !dbg !10845

if.else81:                                        ; preds = %if.end61
  %85 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10846
  %dma_length82 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %85, i32 0, i32 4, !dbg !10846
  %86 = load i32, i32* %dma_length82, align 8, !dbg !10846
  %conv83 = trunc i32 %86 to i16, !dbg !10846
  %87 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10848
  %xfer_len_lo84 = getelementptr inbounds %struct.myrb_dcdb, %struct.myrb_dcdb* %87, i32 0, i32 1, !dbg !10849
  store i16 %conv83, i16* %xfer_len_lo84, align 2, !dbg !10850
  %88 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10851
  %xfer_len_hi485 = getelementptr inbounds %struct.myrb_dcdb, %struct.myrb_dcdb* %88, i32 0, i32 3, !dbg !10852
  %bf.load86 = load i8, i8* %xfer_len_hi485, align 4, !dbg !10853
  %bf.clear87 = and i8 %bf.load86, 15, !dbg !10853
  store i8 %bf.clear87, i8* %xfer_len_hi485, align 4, !dbg !10853
  br label %if.end88

if.end88:                                         ; preds = %if.else81, %if.then71
  %89 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10854
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %89, i32 0, i32 12, !dbg !10855
  %90 = load i16, i16* %cmd_len, align 4, !dbg !10855
  %conv89 = trunc i16 %90 to i8, !dbg !10854
  %91 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10856
  %cdb_len = getelementptr inbounds %struct.myrb_dcdb, %struct.myrb_dcdb* %91, i32 0, i32 3, !dbg !10857
  %bf.load90 = load i8, i8* %cdb_len, align 4, !dbg !10858
  %bf.value91 = and i8 %conv89, 15, !dbg !10858
  %bf.clear92 = and i8 %bf.load90, -16, !dbg !10858
  %bf.set93 = or i8 %bf.clear92, %bf.value91, !dbg !10858
  store i8 %bf.set93, i8* %cdb_len, align 4, !dbg !10858
  %92 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10859
  %sense_len = getelementptr inbounds %struct.myrb_dcdb, %struct.myrb_dcdb* %92, i32 0, i32 4, !dbg !10860
  store i8 64, i8* %sense_len, align 1, !dbg !10861
  %93 = load %struct.myrb_dcdb*, %struct.myrb_dcdb** %dcdb, align 8, !dbg !10862
  %cdb = getelementptr inbounds %struct.myrb_dcdb, %struct.myrb_dcdb* %93, i32 0, i32 5, !dbg !10863
  %94 = bitcast [12 x i8]* %cdb to i8*, !dbg !10864
  %95 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10865
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %95, i32 0, i32 14, !dbg !10866
  %96 = load i8*, i8** %cmnd, align 8, !dbg !10866
  %97 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10867
  %cmd_len94 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %97, i32 0, i32 12, !dbg !10868
  %98 = load i16, i16* %cmd_len94, align 4, !dbg !10868
  %conv95 = zext i16 %98 to i64, !dbg !10867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %94, i8* align 1 %96, i64 %conv95, i1 false), !dbg !10864
  br label %do.body, !dbg !10869

do.body:                                          ; preds = %if.end88
  br label %do.body96, !dbg !10870

do.body96:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10871, metadata !DIExpression()), !dbg !10873
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10874, metadata !DIExpression()), !dbg !10873
  %cmp97 = icmp eq i64* %__dummy, %__dummy2, !dbg !10873
  %conv98 = zext i1 %cmp97 to i32, !dbg !10873
  store i32 1, i32* %tmp, align 4, !dbg !10873
  %99 = load i32, i32* %tmp, align 4, !dbg !10873
  br label %do.body99, !dbg !10875

do.body99:                                        ; preds = %do.body96
  br label %do.body100, !dbg !10876

do.body100:                                       ; preds = %do.body99
  br label %do.body101, !dbg !10877

do.body101:                                       ; preds = %do.body100
  call void @llvm.dbg.declare(metadata i64* %__dummy102, metadata !10879, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.declare(metadata i64* %__dummy2103, metadata !10883, metadata !DIExpression()), !dbg !10882
  %cmp104 = icmp eq i64* %__dummy102, %__dummy2103, !dbg !10882
  %conv105 = zext i1 %cmp104 to i32, !dbg !10882
  store i32 1, i32* %tmp106, align 4, !dbg !10882
  %100 = load i32, i32* %tmp106, align 4, !dbg !10882
  %call107 = call i64 @arch_local_irq_save() #11, !dbg !10884
  store i64 %call107, i64* %flags, align 8, !dbg !10884
  br label %do.end, !dbg !10884

do.end:                                           ; preds = %do.body101
  br label %do.end108, !dbg !10877

do.end108:                                        ; preds = %do.end
  br label %do.body109, !dbg !10876

do.body109:                                       ; preds = %do.end108
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10885, !srcloc !10886
  br label %do.body110, !dbg !10885

do.body110:                                       ; preds = %do.body109
  %101 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10887
  %queue_lock = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %101, i32 0, i32 26, !dbg !10887
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %102 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10888
  %103 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %102, i32 0, i32 0, !dbg !10889
  %rlock.i = bitcast %union.anon.1* %103 to %struct.raw_spinlock*, !dbg !10889
  br label %do.end112, !dbg !10887

do.end112:                                        ; preds = %do.body110
  br label %do.end113, !dbg !10885

do.end113:                                        ; preds = %do.end112
  br label %do.end114, !dbg !10876

do.end114:                                        ; preds = %do.end113
  br label %do.end115, !dbg !10875

do.end115:                                        ; preds = %do.end114
  br label %do.end116, !dbg !10870

do.end116:                                        ; preds = %do.end115
  %104 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10890
  %qcmd = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %104, i32 0, i32 27, !dbg !10891
  %105 = load void (%struct.myrb_hba*, %struct.myrb_cmdblk*)*, void (%struct.myrb_hba*, %struct.myrb_cmdblk*)** %qcmd, align 8, !dbg !10891
  %106 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10892
  %107 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !10893
  call void %105(%struct.myrb_hba* %106, %struct.myrb_cmdblk* %107) #11, !dbg !10890
  %108 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !10894
  %queue_lock117 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %108, i32 0, i32 26, !dbg !10895
  %109 = load i64, i64* %flags, align 8, !dbg !10896
  store %struct.spinlock* %queue_lock117, %struct.spinlock** %lock.addr.i118, align 8
  store i64 %109, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1034, metadata !6710, metadata !DIExpression()) #7, !dbg !10897
  call void @llvm.dbg.declare(metadata !1034, metadata !6714, metadata !DIExpression()) #7, !dbg !10897
  store i32 1, i32* %tmp.i, align 4, !dbg !10897
  %110 = load i32, i32* %tmp.i, align 4, !dbg !10897
  call void @llvm.dbg.declare(metadata !1034, metadata !6715, metadata !DIExpression()) #7, !dbg !10898
  call void @llvm.dbg.declare(metadata !1034, metadata !6721, metadata !DIExpression()) #7, !dbg !10898
  store i32 1, i32* %tmp8.i, align 4, !dbg !10898
  %111 = load i32, i32* %tmp8.i, align 4, !dbg !10898
  %112 = load i64, i64* %flags.addr.i, align 8, !dbg !10899
  call void @arch_local_irq_restore(i64 %112) #13, !dbg !10899
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10900, !srcloc !6725
  %113 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i118, align 8, !dbg !10901
  %114 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %113, i32 0, i32 0, !dbg !10901
  %rlock.i119 = bitcast %union.anon.1* %114 to %struct.raw_spinlock*, !dbg !10901
  store i32 0, i32* %retval, align 4, !dbg !10902
  br label %return, !dbg !10902

return:                                           ; preds = %do.end116, %if.then5, %if.then
  %115 = load i32, i32* %retval, align 4, !dbg !10903
  ret i32 %115, !dbg !10903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_inquiry(%struct.myrb_hba* %cb, %struct.scsi_cmnd* %scmd) #0 !dbg !10904 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %inq = alloca [36 x i8], align 16
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !10907, metadata !DIExpression()), !dbg !10908
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !10909, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.declare(metadata [36 x i8]* %inq, metadata !10911, metadata !DIExpression()), !dbg !10915
  %0 = bitcast [36 x i8]* %inq to i8*, !dbg !10915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds ([36 x i8], [36 x i8]* @__const.myrb_inquiry.inq, i32 0, i32 0), i64 36, i1 false), !dbg !10915
  %1 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !10916
  %bus_width = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %1, i32 0, i32 3, !dbg !10918
  %2 = load i8, i8* %bus_width, align 2, !dbg !10918
  %conv = zext i8 %2 to i32, !dbg !10916
  %cmp = icmp sgt i32 %conv, 16, !dbg !10919
  br i1 %cmp, label %if.then, label %if.end, !dbg !10920

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr [36 x i8], [36 x i8]* %inq, i64 0, i64 7, !dbg !10921
  %3 = load i8, i8* %arrayidx, align 1, !dbg !10922
  %conv2 = zext i8 %3 to i32, !dbg !10922
  %or = or i32 %conv2, 64, !dbg !10922
  %conv3 = trunc i32 %or to i8, !dbg !10922
  store i8 %conv3, i8* %arrayidx, align 1, !dbg !10922
  br label %if.end, !dbg !10921

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !10923
  %bus_width4 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %4, i32 0, i32 3, !dbg !10925
  %5 = load i8, i8* %bus_width4, align 2, !dbg !10925
  %conv5 = zext i8 %5 to i32, !dbg !10923
  %cmp6 = icmp sgt i32 %conv5, 8, !dbg !10926
  br i1 %cmp6, label %if.then8, label %if.end13, !dbg !10927

if.then8:                                         ; preds = %if.end
  %arrayidx9 = getelementptr [36 x i8], [36 x i8]* %inq, i64 0, i64 7, !dbg !10928
  %6 = load i8, i8* %arrayidx9, align 1, !dbg !10929
  %conv10 = zext i8 %6 to i32, !dbg !10929
  %or11 = or i32 %conv10, 32, !dbg !10929
  %conv12 = trunc i32 %or11 to i8, !dbg !10929
  store i8 %conv12, i8* %arrayidx9, align 1, !dbg !10929
  br label %if.end13, !dbg !10928

if.end13:                                         ; preds = %if.then8, %if.end
  %arrayidx14 = getelementptr [36 x i8], [36 x i8]* %inq, i64 0, i64 16, !dbg !10930
  %7 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !10931
  %model_name = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %7, i32 0, i32 33, !dbg !10932
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %model_name, i64 0, i64 0, !dbg !10933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arrayidx14, i8* align 4 %arraydecay, i64 16, i1 false), !dbg !10933
  %arrayidx15 = getelementptr [36 x i8], [36 x i8]* %inq, i64 0, i64 32, !dbg !10934
  %8 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !10935
  %fw_version = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %8, i32 0, i32 34, !dbg !10936
  %arraydecay16 = getelementptr inbounds [12 x i8], [12 x i8]* %fw_version, i64 0, i64 0, !dbg !10937
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arrayidx15, i8* align 8 %arraydecay16, i64 1, i1 false), !dbg !10937
  %arrayidx17 = getelementptr [36 x i8], [36 x i8]* %inq, i64 0, i64 33, !dbg !10938
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !10939
  %fw_version18 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %9, i32 0, i32 34, !dbg !10940
  %arrayidx19 = getelementptr [12 x i8], [12 x i8]* %fw_version18, i64 0, i64 2, !dbg !10939
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx17, i8* align 2 %arrayidx19, i64 2, i1 false), !dbg !10941
  %arrayidx20 = getelementptr [36 x i8], [36 x i8]* %inq, i64 0, i64 35, !dbg !10942
  %10 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !10943
  %fw_version21 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %10, i32 0, i32 34, !dbg !10944
  %arrayidx22 = getelementptr [12 x i8], [12 x i8]* %fw_version21, i64 0, i64 7, !dbg !10943
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx20, i8* align 1 %arrayidx22, i64 1, i1 false), !dbg !10945
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10946
  %arraydecay23 = getelementptr inbounds [36 x i8], [36 x i8]* %inq, i64 0, i64 0, !dbg !10947
  %call = call i32 @scsi_sg_copy_from_buffer(%struct.scsi_cmnd* %11, i8* %arraydecay23, i32 36) #11, !dbg !10948
  ret void, !dbg !10949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_mode_sense(%struct.myrb_hba* %cb, %struct.scsi_cmnd* %scmd, %struct.myrb_ldev_info* %ldev_info) #0 !dbg !10950 {
entry:
  %val.addr.i50 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr.i50, metadata !10953, metadata !DIExpression()), !dbg !10957
  %p.addr.i51 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i51, metadata !10961, metadata !DIExpression()), !dbg !10962
  %val.addr.i32 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i32, metadata !10963, metadata !DIExpression()), !dbg !10967
  %p.addr.i33 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i33, metadata !10971, metadata !DIExpression()), !dbg !10972
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !10963, metadata !DIExpression()), !dbg !10973
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !10971, metadata !DIExpression()), !dbg !10975
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %ldev_info.addr = alloca %struct.myrb_ldev_info*, align 8
  %modes = alloca [32 x i8], align 16
  %mode_pg = alloca i8*, align 8
  %dbd = alloca i8, align 1
  %mode_len = alloca i64, align 8
  %block_desc = alloca i8*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !10976, metadata !DIExpression()), !dbg !10977
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !10978, metadata !DIExpression()), !dbg !10979
  store %struct.myrb_ldev_info* %ldev_info, %struct.myrb_ldev_info** %ldev_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_ldev_info** %ldev_info.addr, metadata !10980, metadata !DIExpression()), !dbg !10981
  call void @llvm.dbg.declare(metadata [32 x i8]* %modes, metadata !10982, metadata !DIExpression()), !dbg !10983
  call void @llvm.dbg.declare(metadata i8** %mode_pg, metadata !10984, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.declare(metadata i8* %dbd, metadata !10986, metadata !DIExpression()), !dbg !10987
  call void @llvm.dbg.declare(metadata i64* %mode_len, metadata !10988, metadata !DIExpression()), !dbg !10989
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !10990
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 14, !dbg !10991
  %1 = load i8*, i8** %cmnd, align 8, !dbg !10991
  %arrayidx = getelementptr i8, i8* %1, i64 1, !dbg !10990
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10990
  %conv = zext i8 %2 to i32, !dbg !10990
  %and = and i32 %conv, 8, !dbg !10992
  %cmp = icmp eq i32 %and, 8, !dbg !10993
  %frombool = zext i1 %cmp to i8, !dbg !10994
  store i8 %frombool, i8* %dbd, align 1, !dbg !10994
  %3 = load i8, i8* %dbd, align 1, !dbg !10995
  %tobool = trunc i8 %3 to i1, !dbg !10995
  br i1 %tobool, label %if.then, label %if.else, !dbg !10997

if.then:                                          ; preds = %entry
  store i64 24, i64* %mode_len, align 8, !dbg !10998
  %arrayidx2 = getelementptr [32 x i8], [32 x i8]* %modes, i64 0, i64 4, !dbg !11000
  store i8* %arrayidx2, i8** %mode_pg, align 8, !dbg !11001
  br label %if.end, !dbg !11002

if.else:                                          ; preds = %entry
  store i64 32, i64* %mode_len, align 8, !dbg !11003
  %arrayidx3 = getelementptr [32 x i8], [32 x i8]* %modes, i64 0, i64 12, !dbg !11005
  store i8* %arrayidx3, i8** %mode_pg, align 8, !dbg !11006
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %modes, i64 0, i64 0, !dbg !11007
  call void @llvm.memset.p0i8.i64(i8* align 16 %arraydecay, i8 0, i64 32, i1 false), !dbg !11007
  %4 = load i64, i64* %mode_len, align 8, !dbg !11008
  %sub = sub i64 %4, 1, !dbg !11009
  %conv4 = trunc i64 %sub to i8, !dbg !11008
  %arrayidx5 = getelementptr [32 x i8], [32 x i8]* %modes, i64 0, i64 0, !dbg !11010
  store i8 %conv4, i8* %arrayidx5, align 16, !dbg !11011
  %5 = load i8, i8* %dbd, align 1, !dbg !11012
  %tobool6 = trunc i8 %5 to i1, !dbg !11012
  br i1 %tobool6, label %if.end12, label %if.then7, !dbg !11013

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %block_desc, metadata !11014, metadata !DIExpression()), !dbg !11015
  %arrayidx8 = getelementptr [32 x i8], [32 x i8]* %modes, i64 0, i64 4, !dbg !11016
  store i8* %arrayidx8, i8** %block_desc, align 8, !dbg !11015
  %arrayidx9 = getelementptr [32 x i8], [32 x i8]* %modes, i64 0, i64 3, !dbg !11017
  store i8 8, i8* %arrayidx9, align 1, !dbg !11018
  %6 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info.addr, align 8, !dbg !11019
  %size = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %6, i32 0, i32 0, !dbg !11020
  %7 = load i32, i32* %size, align 4, !dbg !11020
  %8 = load i8*, i8** %block_desc, align 8, !dbg !11021
  %arrayidx10 = getelementptr i8, i8* %8, i64 0, !dbg !11021
  store i32 %7, i32* %val.addr.i, align 4
  store i8* %arrayidx10, i8** %p.addr.i, align 8
  %9 = load i32, i32* %val.addr.i, align 4, !dbg !11022
  %10 = call i1 @llvm.is.constant.i32(i32 %9) #7, !dbg !11022
  br i1 %10, label %cond.true.i, label %cond.false.i, !dbg !11022

cond.true.i:                                      ; preds = %if.then7
  %11 = load i32, i32* %val.addr.i, align 4, !dbg !11022
  %and.i = and i32 %11, 255, !dbg !11022
  %shl.i = shl i32 %and.i, 24, !dbg !11022
  %12 = load i32, i32* %val.addr.i, align 4, !dbg !11022
  %and1.i = and i32 %12, 65280, !dbg !11022
  %shl2.i = shl i32 %and1.i, 8, !dbg !11022
  %or.i = or i32 %shl.i, %shl2.i, !dbg !11022
  %13 = load i32, i32* %val.addr.i, align 4, !dbg !11022
  %and3.i = and i32 %13, 16711680, !dbg !11022
  %shr.i = lshr i32 %and3.i, 8, !dbg !11022
  %or4.i = or i32 %or.i, %shr.i, !dbg !11022
  %14 = load i32, i32* %val.addr.i, align 4, !dbg !11022
  %and5.i = and i32 %14, -16777216, !dbg !11022
  %shr6.i = lshr i32 %and5.i, 24, !dbg !11022
  %or7.i = or i32 %or4.i, %shr6.i, !dbg !11022
  br label %put_unaligned_be32.exit, !dbg !11022

cond.false.i:                                     ; preds = %if.then7
  %15 = load i32, i32* %val.addr.i, align 4, !dbg !11022
  %call.i = call i32 @__fswab32(i32 %15) #14, !dbg !11022
  br label %put_unaligned_be32.exit, !dbg !11022

put_unaligned_be32.exit:                          ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %or7.i, %cond.true.i ], [ %call.i, %cond.false.i ], !dbg !11022
  %16 = load i8*, i8** %p.addr.i, align 8, !dbg !11023
  %17 = bitcast i8* %16 to i32*, !dbg !11024
  store i32 %cond.i, i32* %17, align 4, !dbg !11025
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11026
  %ldev_block_size = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 0, !dbg !11027
  %19 = load i32, i32* %ldev_block_size, align 8, !dbg !11027
  %20 = load i8*, i8** %block_desc, align 8, !dbg !11028
  %arrayidx11 = getelementptr i8, i8* %20, i64 5, !dbg !11028
  store i32 %19, i32* %val.addr.i32, align 4
  store i8* %arrayidx11, i8** %p.addr.i33, align 8
  %21 = load i32, i32* %val.addr.i32, align 4, !dbg !11029
  %22 = call i1 @llvm.is.constant.i32(i32 %21) #7, !dbg !11029
  br i1 %22, label %cond.true.i45, label %cond.false.i47, !dbg !11029

cond.true.i45:                                    ; preds = %put_unaligned_be32.exit
  %23 = load i32, i32* %val.addr.i32, align 4, !dbg !11029
  %and.i34 = and i32 %23, 255, !dbg !11029
  %shl.i35 = shl i32 %and.i34, 24, !dbg !11029
  %24 = load i32, i32* %val.addr.i32, align 4, !dbg !11029
  %and1.i36 = and i32 %24, 65280, !dbg !11029
  %shl2.i37 = shl i32 %and1.i36, 8, !dbg !11029
  %or.i38 = or i32 %shl.i35, %shl2.i37, !dbg !11029
  %25 = load i32, i32* %val.addr.i32, align 4, !dbg !11029
  %and3.i39 = and i32 %25, 16711680, !dbg !11029
  %shr.i40 = lshr i32 %and3.i39, 8, !dbg !11029
  %or4.i41 = or i32 %or.i38, %shr.i40, !dbg !11029
  %26 = load i32, i32* %val.addr.i32, align 4, !dbg !11029
  %and5.i42 = and i32 %26, -16777216, !dbg !11029
  %shr6.i43 = lshr i32 %and5.i42, 24, !dbg !11029
  %or7.i44 = or i32 %or4.i41, %shr6.i43, !dbg !11029
  br label %put_unaligned_be32.exit49, !dbg !11029

cond.false.i47:                                   ; preds = %put_unaligned_be32.exit
  %27 = load i32, i32* %val.addr.i32, align 4, !dbg !11029
  %call.i46 = call i32 @__fswab32(i32 %27) #14, !dbg !11029
  br label %put_unaligned_be32.exit49, !dbg !11029

put_unaligned_be32.exit49:                        ; preds = %cond.true.i45, %cond.false.i47
  %cond.i48 = phi i32 [ %or7.i44, %cond.true.i45 ], [ %call.i46, %cond.false.i47 ], !dbg !11029
  %28 = load i8*, i8** %p.addr.i33, align 8, !dbg !11030
  %29 = bitcast i8* %28 to i32*, !dbg !11031
  store i32 %cond.i48, i32* %29, align 4, !dbg !11032
  br label %if.end12, !dbg !11033

if.end12:                                         ; preds = %put_unaligned_be32.exit49, %if.end
  %30 = load i8*, i8** %mode_pg, align 8, !dbg !11034
  %arrayidx13 = getelementptr i8, i8* %30, i64 0, !dbg !11034
  store i8 8, i8* %arrayidx13, align 1, !dbg !11035
  %31 = load i8*, i8** %mode_pg, align 8, !dbg !11036
  %arrayidx14 = getelementptr i8, i8* %31, i64 1, !dbg !11036
  store i8 18, i8* %arrayidx14, align 1, !dbg !11037
  %32 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info.addr, align 8, !dbg !11038
  %wb_enabled = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %32, i32 0, i32 2, !dbg !11040
  %33 = bitcast [3 x i8]* %wb_enabled to i24*, !dbg !11040
  %bf.load = load i24, i24* %33, align 1, !dbg !11040
  %bf.lshr = lshr i24 %bf.load, 7, !dbg !11040
  %bf.clear = and i24 %bf.lshr, 1, !dbg !11040
  %bf.cast = zext i24 %bf.clear to i32, !dbg !11040
  %tobool15 = icmp ne i32 %bf.cast, 0, !dbg !11038
  br i1 %tobool15, label %if.then16, label %if.end20, !dbg !11041

if.then16:                                        ; preds = %if.end12
  %34 = load i8*, i8** %mode_pg, align 8, !dbg !11042
  %arrayidx17 = getelementptr i8, i8* %34, i64 2, !dbg !11042
  %35 = load i8, i8* %arrayidx17, align 1, !dbg !11043
  %conv18 = zext i8 %35 to i32, !dbg !11043
  %or = or i32 %conv18, 4, !dbg !11043
  %conv19 = trunc i32 %or to i8, !dbg !11043
  store i8 %conv19, i8* %arrayidx17, align 1, !dbg !11043
  br label %if.end20, !dbg !11042

if.end20:                                         ; preds = %if.then16, %if.end12
  %36 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11044
  %segment_size = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %36, i32 0, i32 5, !dbg !11045
  %37 = load i16, i16* %segment_size, align 2, !dbg !11045
  %tobool21 = icmp ne i16 %37, 0, !dbg !11044
  br i1 %tobool21, label %if.then22, label %if.end29, !dbg !11046

if.then22:                                        ; preds = %if.end20
  %38 = load i8*, i8** %mode_pg, align 8, !dbg !11047
  %arrayidx23 = getelementptr i8, i8* %38, i64 2, !dbg !11047
  %39 = load i8, i8* %arrayidx23, align 1, !dbg !11048
  %conv24 = zext i8 %39 to i32, !dbg !11048
  %or25 = or i32 %conv24, 8, !dbg !11048
  %conv26 = trunc i32 %or25 to i8, !dbg !11048
  store i8 %conv26, i8* %arrayidx23, align 1, !dbg !11048
  %40 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11049
  %segment_size27 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %40, i32 0, i32 5, !dbg !11050
  %41 = load i16, i16* %segment_size27, align 2, !dbg !11050
  %42 = load i8*, i8** %mode_pg, align 8, !dbg !11051
  %arrayidx28 = getelementptr i8, i8* %42, i64 14, !dbg !11051
  store i16 %41, i16* %val.addr.i50, align 2
  store i8* %arrayidx28, i8** %p.addr.i51, align 8
  %43 = load i16, i16* %val.addr.i50, align 2, !dbg !11052
  %44 = call i1 @llvm.is.constant.i16(i16 %43) #7, !dbg !11052
  br i1 %44, label %cond.true.i56, label %cond.false.i58, !dbg !11052

cond.true.i56:                                    ; preds = %if.then22
  %45 = load i16, i16* %val.addr.i50, align 2, !dbg !11052
  %conv.i = zext i16 %45 to i32, !dbg !11052
  %and.i52 = and i32 %conv.i, 255, !dbg !11052
  %shl.i53 = shl i32 %and.i52, 8, !dbg !11052
  %46 = load i16, i16* %val.addr.i50, align 2, !dbg !11052
  %conv1.i = zext i16 %46 to i32, !dbg !11052
  %and2.i = and i32 %conv1.i, 65280, !dbg !11052
  %shr.i54 = ashr i32 %and2.i, 8, !dbg !11052
  %or.i55 = or i32 %shl.i53, %shr.i54, !dbg !11052
  %conv3.i = trunc i32 %or.i55 to i16, !dbg !11052
  %conv4.i = zext i16 %conv3.i to i32, !dbg !11052
  br label %put_unaligned_be16.exit, !dbg !11052

cond.false.i58:                                   ; preds = %if.then22
  %47 = load i16, i16* %val.addr.i50, align 2, !dbg !11052
  %call.i57 = call zeroext i16 @__fswab16(i16 zeroext %47) #14, !dbg !11052
  %conv5.i = zext i16 %call.i57 to i32, !dbg !11052
  br label %put_unaligned_be16.exit, !dbg !11052

put_unaligned_be16.exit:                          ; preds = %cond.true.i56, %cond.false.i58
  %cond.i59 = phi i32 [ %conv4.i, %cond.true.i56 ], [ %conv5.i, %cond.false.i58 ], !dbg !11052
  %conv6.i = trunc i32 %cond.i59 to i16, !dbg !11052
  %48 = load i8*, i8** %p.addr.i51, align 8, !dbg !11053
  %49 = bitcast i8* %48 to i16*, !dbg !11054
  store i16 %conv6.i, i16* %49, align 2, !dbg !11055
  br label %if.end29, !dbg !11056

if.end29:                                         ; preds = %put_unaligned_be16.exit, %if.end20
  %50 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !11057
  %arraydecay30 = getelementptr inbounds [32 x i8], [32 x i8]* %modes, i64 0, i64 0, !dbg !11058
  %51 = load i64, i64* %mode_len, align 8, !dbg !11059
  %conv31 = trunc i64 %51 to i32, !dbg !11059
  %call = call i32 @scsi_sg_copy_from_buffer(%struct.scsi_cmnd* %50, i8* %arraydecay30, i32 %conv31) #11, !dbg !11060
  ret void, !dbg !11061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_read_capacity(%struct.myrb_hba* %cb, %struct.scsi_cmnd* %scmd, %struct.myrb_ldev_info* %ldev_info) #0 !dbg !11062 {
entry:
  %val.addr.i2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i2, metadata !10963, metadata !DIExpression()), !dbg !11063
  %p.addr.i3 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i3, metadata !10971, metadata !DIExpression()), !dbg !11065
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !10963, metadata !DIExpression()), !dbg !11066
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !10971, metadata !DIExpression()), !dbg !11068
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %ldev_info.addr = alloca %struct.myrb_ldev_info*, align 8
  %data = alloca [8 x i8], align 1
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !11069, metadata !DIExpression()), !dbg !11070
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  store %struct.myrb_ldev_info* %ldev_info, %struct.myrb_ldev_info** %ldev_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_ldev_info** %ldev_info.addr, metadata !11073, metadata !DIExpression()), !dbg !11074
  call void @llvm.dbg.declare(metadata [8 x i8]* %data, metadata !11075, metadata !DIExpression()), !dbg !11076
  %0 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info.addr, align 8, !dbg !11077
  %size = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %0, i32 0, i32 0, !dbg !11078
  %1 = load i32, i32* %size, align 4, !dbg !11078
  %sub = sub i32 %1, 1, !dbg !11079
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %data, i64 0, i64 0, !dbg !11080
  store i32 %sub, i32* %val.addr.i, align 4
  store i8* %arrayidx, i8** %p.addr.i, align 8
  %2 = load i32, i32* %val.addr.i, align 4, !dbg !11081
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #7, !dbg !11081
  br i1 %3, label %cond.true.i, label %cond.false.i, !dbg !11081

cond.true.i:                                      ; preds = %entry
  %4 = load i32, i32* %val.addr.i, align 4, !dbg !11081
  %and.i = and i32 %4, 255, !dbg !11081
  %shl.i = shl i32 %and.i, 24, !dbg !11081
  %5 = load i32, i32* %val.addr.i, align 4, !dbg !11081
  %and1.i = and i32 %5, 65280, !dbg !11081
  %shl2.i = shl i32 %and1.i, 8, !dbg !11081
  %or.i = or i32 %shl.i, %shl2.i, !dbg !11081
  %6 = load i32, i32* %val.addr.i, align 4, !dbg !11081
  %and3.i = and i32 %6, 16711680, !dbg !11081
  %shr.i = lshr i32 %and3.i, 8, !dbg !11081
  %or4.i = or i32 %or.i, %shr.i, !dbg !11081
  %7 = load i32, i32* %val.addr.i, align 4, !dbg !11081
  %and5.i = and i32 %7, -16777216, !dbg !11081
  %shr6.i = lshr i32 %and5.i, 24, !dbg !11081
  %or7.i = or i32 %or4.i, %shr6.i, !dbg !11081
  br label %put_unaligned_be32.exit, !dbg !11081

cond.false.i:                                     ; preds = %entry
  %8 = load i32, i32* %val.addr.i, align 4, !dbg !11081
  %call.i = call i32 @__fswab32(i32 %8) #14, !dbg !11081
  br label %put_unaligned_be32.exit, !dbg !11081

put_unaligned_be32.exit:                          ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %or7.i, %cond.true.i ], [ %call.i, %cond.false.i ], !dbg !11081
  %9 = load i8*, i8** %p.addr.i, align 8, !dbg !11082
  %10 = bitcast i8* %9 to i32*, !dbg !11083
  store i32 %cond.i, i32* %10, align 4, !dbg !11084
  %11 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11085
  %ldev_block_size = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %11, i32 0, i32 0, !dbg !11086
  %12 = load i32, i32* %ldev_block_size, align 8, !dbg !11086
  %arrayidx1 = getelementptr [8 x i8], [8 x i8]* %data, i64 0, i64 4, !dbg !11087
  store i32 %12, i32* %val.addr.i2, align 4
  store i8* %arrayidx1, i8** %p.addr.i3, align 8
  %13 = load i32, i32* %val.addr.i2, align 4, !dbg !11088
  %14 = call i1 @llvm.is.constant.i32(i32 %13) #7, !dbg !11088
  br i1 %14, label %cond.true.i15, label %cond.false.i17, !dbg !11088

cond.true.i15:                                    ; preds = %put_unaligned_be32.exit
  %15 = load i32, i32* %val.addr.i2, align 4, !dbg !11088
  %and.i4 = and i32 %15, 255, !dbg !11088
  %shl.i5 = shl i32 %and.i4, 24, !dbg !11088
  %16 = load i32, i32* %val.addr.i2, align 4, !dbg !11088
  %and1.i6 = and i32 %16, 65280, !dbg !11088
  %shl2.i7 = shl i32 %and1.i6, 8, !dbg !11088
  %or.i8 = or i32 %shl.i5, %shl2.i7, !dbg !11088
  %17 = load i32, i32* %val.addr.i2, align 4, !dbg !11088
  %and3.i9 = and i32 %17, 16711680, !dbg !11088
  %shr.i10 = lshr i32 %and3.i9, 8, !dbg !11088
  %or4.i11 = or i32 %or.i8, %shr.i10, !dbg !11088
  %18 = load i32, i32* %val.addr.i2, align 4, !dbg !11088
  %and5.i12 = and i32 %18, -16777216, !dbg !11088
  %shr6.i13 = lshr i32 %and5.i12, 24, !dbg !11088
  %or7.i14 = or i32 %or4.i11, %shr6.i13, !dbg !11088
  br label %put_unaligned_be32.exit19, !dbg !11088

cond.false.i17:                                   ; preds = %put_unaligned_be32.exit
  %19 = load i32, i32* %val.addr.i2, align 4, !dbg !11088
  %call.i16 = call i32 @__fswab32(i32 %19) #14, !dbg !11088
  br label %put_unaligned_be32.exit19, !dbg !11088

put_unaligned_be32.exit19:                        ; preds = %cond.true.i15, %cond.false.i17
  %cond.i18 = phi i32 [ %or7.i14, %cond.true.i15 ], [ %call.i16, %cond.false.i17 ], !dbg !11088
  %20 = load i8*, i8** %p.addr.i3, align 8, !dbg !11089
  %21 = bitcast i8* %20 to i32*, !dbg !11090
  store i32 %cond.i18, i32* %21, align 4, !dbg !11091
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !11092
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %data, i64 0, i64 0, !dbg !11093
  %call = call i32 @scsi_sg_copy_from_buffer(%struct.scsi_cmnd* %22, i8* %arraydecay, i32 8) #11, !dbg !11094
  ret void, !dbg !11095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_request_sense(%struct.myrb_hba* %cb, %struct.scsi_cmnd* %scmd) #0 !dbg !11096 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !11097, metadata !DIExpression()), !dbg !11098
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !11099, metadata !DIExpression()), !dbg !11100
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !11101
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 20, !dbg !11102
  %1 = load i8*, i8** %sense_buffer, align 8, !dbg !11102
  call void @scsi_build_sense_buffer(i32 0, i8* %1, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #11, !dbg !11103
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !11104
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !11105
  %sense_buffer1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 20, !dbg !11106
  %4 = load i8*, i8** %sense_buffer1, align 8, !dbg !11106
  %call = call i32 @scsi_sg_copy_from_buffer(%struct.scsi_cmnd* %2, i8* %4, i32 96) #11, !dbg !11107
  ret void, !dbg !11108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_reset_cmd(%struct.myrb_cmdblk* %cmd_blk) #0 !dbg !11109 {
entry:
  %cmd_blk.addr = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  store %struct.myrb_cmdblk* %cmd_blk, %struct.myrb_cmdblk** %cmd_blk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk.addr, metadata !11110, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !11112, metadata !DIExpression()), !dbg !11113
  %0 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !11114
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %0, i32 0, i32 0, !dbg !11115
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !11113
  %1 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !11116
  %2 = bitcast %union.myrb_cmd_mbox* %1 to i8*, !dbg !11117
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 16, i1 false), !dbg !11117
  %3 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !11118
  %status = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %3, i32 0, i32 1, !dbg !11119
  store i16 0, i16* %status, align 8, !dbg !11120
  ret void, !dbg !11121
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_dma_map(%struct.scsi_cmnd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %cmd) #0 !dbg !11122 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11125, metadata !DIExpression()), !dbg !11126
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11127
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !11128
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !11129
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 0, !dbg !11130
  %1 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !11130
  ret %struct.scatterlist* %1, !dbg !11131
}

; Function Attrs: noredzone
declare dso_local i8* @dma_pool_alloc(%struct.dma_pool*, i32, i64*) #2

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_sg_copy_from_buffer(%struct.scsi_cmnd* %cmd, i8* %buf, i32 %buflen) #0 !dbg !11132 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11135, metadata !DIExpression()), !dbg !11136
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11137, metadata !DIExpression()), !dbg !11138
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !11139, metadata !DIExpression()), !dbg !11140
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11141
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %0) #11, !dbg !11142
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11143
  %call1 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %1) #11, !dbg !11144
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11145
  %3 = load i32, i32* %buflen.addr, align 4, !dbg !11146
  %conv = sext i32 %3 to i64, !dbg !11146
  %call2 = call i64 @sg_copy_from_buffer(%struct.scatterlist* %call, i32 %call1, i8* %2, i64 %conv) #11, !dbg !11147
  %conv3 = trunc i64 %call2 to i32, !dbg !11147
  ret i32 %conv3, !dbg !11148
}

; Function Attrs: noredzone
declare dso_local i64 @sg_copy_from_buffer(%struct.scatterlist*, i32, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_sg_count(%struct.scsi_cmnd* %cmd) #0 !dbg !11149 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11152, metadata !DIExpression()), !dbg !11153
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11154
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !11155
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !11156
  %nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 1, !dbg !11157
  %1 = load i32, i32* %nents, align 8, !dbg !11157
  ret i32 %1, !dbg !11158
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #9 !dbg !11159 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11162, metadata !DIExpression()), !dbg !11163
  %0 = load i32, i32* %val.addr, align 4, !dbg !11164
  %call = call i32 @__arch_swab32(i32 %0) #14, !dbg !11165
  ret i32 %call, !dbg !11166
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #9 !dbg !11167 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11169, metadata !DIExpression()), !dbg !11170
  %0 = load i32, i32* %val.addr, align 4, !dbg !11171
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #15, !dbg !11172, !srcloc !11173
  store i32 %1, i32* %val.addr, align 4, !dbg !11172
  %2 = load i32, i32* %val.addr, align 4, !dbg !11174
  ret i32 %2, !dbg !11175
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #9 !dbg !11176 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !11179, metadata !DIExpression()), !dbg !11180
  %0 = load i16, i16* %val.addr, align 2, !dbg !11181
  %conv = zext i16 %0 to i32, !dbg !11181
  %and = and i32 %conv, 255, !dbg !11181
  %shl = shl i32 %and, 8, !dbg !11181
  %1 = load i16, i16* %val.addr, align 2, !dbg !11181
  %conv1 = zext i16 %1 to i32, !dbg !11181
  %and2 = and i32 %conv1, 65280, !dbg !11181
  %shr = ashr i32 %and2, 8, !dbg !11181
  %or = or i32 %shl, %shr, !dbg !11181
  %conv3 = trunc i32 %or to i16, !dbg !11181
  ret i16 %conv3, !dbg !11182
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_ldev_slave_alloc(%struct.scsi_device* %sdev) #0 !dbg !11183 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %ldev_info = alloca %struct.myrb_ldev_info*, align 8
  %ldev_num = alloca i16, align 2
  %level = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !11184, metadata !DIExpression()), !dbg !11185
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !11186, metadata !DIExpression()), !dbg !11187
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11188
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !11189
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !11189
  %call = call i8* @shost_priv(%struct.Scsi_Host* %1) #11, !dbg !11190
  %2 = bitcast i8* %call to %struct.myrb_hba*, !dbg !11190
  store %struct.myrb_hba* %2, %struct.myrb_hba** %cb, align 8, !dbg !11187
  call void @llvm.dbg.declare(metadata %struct.myrb_ldev_info** %ldev_info, metadata !11191, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.declare(metadata i16* %ldev_num, metadata !11193, metadata !DIExpression()), !dbg !11194
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11195
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 16, !dbg !11196
  %4 = load i32, i32* %id, align 8, !dbg !11196
  %conv = trunc i32 %4 to i16, !dbg !11195
  store i16 %conv, i16* %ldev_num, align 2, !dbg !11194
  call void @llvm.dbg.declare(metadata i32* %level, metadata !11197, metadata !DIExpression()), !dbg !11198
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !11199
  %ldev_info_buf = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %5, i32 0, i32 60, !dbg !11200
  %6 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info_buf, align 8, !dbg !11200
  %7 = load i16, i16* %ldev_num, align 2, !dbg !11201
  %conv1 = zext i16 %7 to i32, !dbg !11201
  %idx.ext = sext i32 %conv1 to i64, !dbg !11202
  %add.ptr = getelementptr %struct.myrb_ldev_info, %struct.myrb_ldev_info* %6, i64 %idx.ext, !dbg !11202
  store %struct.myrb_ldev_info* %add.ptr, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !11203
  %8 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !11204
  %tobool = icmp ne %struct.myrb_ldev_info* %8, null, !dbg !11204
  br i1 %tobool, label %if.end, label %if.then, !dbg !11206

if.then:                                          ; preds = %entry
  store i32 -6, i32* %retval, align 4, !dbg !11207
  br label %return, !dbg !11207

if.end:                                           ; preds = %entry
  %call2 = call i8* @kzalloc(i64 8, i32 3264) #11, !dbg !11208
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11209
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 21, !dbg !11210
  store i8* %call2, i8** %hostdata, align 8, !dbg !11211
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11212
  %hostdata3 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 21, !dbg !11214
  %11 = load i8*, i8** %hostdata3, align 8, !dbg !11214
  %tobool4 = icmp ne i8* %11, null, !dbg !11212
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !11215

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !11216
  br label %return, !dbg !11216

if.end6:                                          ; preds = %if.end
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11217
  %hostdata7 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %12, i32 0, i32 21, !dbg !11218
  %13 = load i8*, i8** %hostdata7, align 8, !dbg !11218
  %14 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !11219
  %15 = bitcast %struct.myrb_ldev_info* %14 to i8*, !dbg !11220
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 4 %15, i64 8, i1 false), !dbg !11220
  %16 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !11221
  %raid_level = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %16, i32 0, i32 2, !dbg !11222
  %17 = bitcast [3 x i8]* %raid_level to i24*, !dbg !11222
  %bf.load = load i24, i24* %17, align 1, !dbg !11222
  %bf.clear = and i24 %bf.load, 127, !dbg !11222
  %bf.cast = zext i24 %bf.clear to i32, !dbg !11222
  switch i32 %bf.cast, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
    i32 3, label %sw.bb9
    i32 5, label %sw.bb10
    i32 6, label %sw.bb11
    i32 7, label %sw.bb12
  ], !dbg !11223

sw.bb:                                            ; preds = %if.end6
  store i32 1, i32* %level, align 4, !dbg !11224
  br label %sw.epilog, !dbg !11226

sw.bb8:                                           ; preds = %if.end6
  store i32 3, i32* %level, align 4, !dbg !11227
  br label %sw.epilog, !dbg !11228

sw.bb9:                                           ; preds = %if.end6
  store i32 6, i32* %level, align 4, !dbg !11229
  br label %sw.epilog, !dbg !11230

sw.bb10:                                          ; preds = %if.end6
  store i32 8, i32* %level, align 4, !dbg !11231
  br label %sw.epilog, !dbg !11232

sw.bb11:                                          ; preds = %if.end6
  store i32 10, i32* %level, align 4, !dbg !11233
  br label %sw.epilog, !dbg !11234

sw.bb12:                                          ; preds = %if.end6
  store i32 11, i32* %level, align 4, !dbg !11235
  br label %sw.epilog, !dbg !11236

sw.default:                                       ; preds = %if.end6
  store i32 0, i32* %level, align 4, !dbg !11237
  br label %sw.epilog, !dbg !11238

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb
  %18 = load %struct.raid_template*, %struct.raid_template** @myrb_raid_template, align 8, !dbg !11239
  %19 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11240
  %sdev_gendev = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %19, i32 0, i32 50, !dbg !11241
  %20 = load i32, i32* %level, align 4, !dbg !11242
  call void @raid_set_level(%struct.raid_template* %18, %struct.device* %sdev_gendev, i32 %20) #11, !dbg !11243
  store i32 0, i32* %retval, align 4, !dbg !11244
  br label %return, !dbg !11244

return:                                           ; preds = %sw.epilog, %if.then5, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !11245
  ret i32 %21, !dbg !11245
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_pdev_slave_alloc(%struct.scsi_device* %sdev) #0 !dbg !11246 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %pdev_info = alloca %struct.myrb_pdev_state*, align 8
  %status = alloca i16, align 2
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !11247, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !11249, metadata !DIExpression()), !dbg !11250
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11251
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !11252
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !11252
  %call = call i8* @shost_priv(%struct.Scsi_Host* %1) #11, !dbg !11253
  %2 = bitcast i8* %call to %struct.myrb_hba*, !dbg !11253
  store %struct.myrb_hba* %2, %struct.myrb_hba** %cb, align 8, !dbg !11250
  call void @llvm.dbg.declare(metadata %struct.myrb_pdev_state** %pdev_info, metadata !11254, metadata !DIExpression()), !dbg !11256
  call void @llvm.dbg.declare(metadata i16* %status, metadata !11257, metadata !DIExpression()), !dbg !11258
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11259
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 16, !dbg !11261
  %4 = load i32, i32* %id, align 8, !dbg !11261
  %cmp = icmp ugt i32 %4, 16, !dbg !11262
  br i1 %cmp, label %if.then, label %if.end, !dbg !11263

if.then:                                          ; preds = %entry
  store i32 -6, i32* %retval, align 4, !dbg !11264
  br label %return, !dbg !11264

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 15, i32 3265) #11, !dbg !11265
  %5 = bitcast i8* %call1 to %struct.myrb_pdev_state*, !dbg !11265
  store %struct.myrb_pdev_state* %5, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !11266
  %6 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !11267
  %tobool = icmp ne %struct.myrb_pdev_state* %6, null, !dbg !11267
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !11269

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !11270
  br label %return, !dbg !11270

if.end3:                                          ; preds = %if.end
  %7 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !11271
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11272
  %9 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !11273
  %call4 = call zeroext i16 @myrb_exec_type3D(%struct.myrb_hba* %7, i8 zeroext 80, %struct.scsi_device* %8, %struct.myrb_pdev_state* %9) #11, !dbg !11274
  store i16 %call4, i16* %status, align 2, !dbg !11275
  %10 = load i16, i16* %status, align 2, !dbg !11276
  %conv = zext i16 %10 to i32, !dbg !11276
  %cmp5 = icmp ne i32 %conv, 0, !dbg !11278
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11279

if.then7:                                         ; preds = %if.end3
  %11 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !11280
  %12 = bitcast %struct.myrb_pdev_state* %11 to i8*, !dbg !11280
  call void @kfree(i8* %12) #11, !dbg !11282
  store i32 -6, i32* %retval, align 4, !dbg !11283
  br label %return, !dbg !11283

if.end8:                                          ; preds = %if.end3
  %13 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !11284
  %14 = bitcast %struct.myrb_pdev_state* %13 to i16*, !dbg !11286
  %bf.load = load i16, i16* %14, align 1, !dbg !11286
  %bf.clear = and i16 %bf.load, 1, !dbg !11286
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11286
  %tobool9 = icmp ne i32 %bf.cast, 0, !dbg !11284
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11287

if.then10:                                        ; preds = %if.end8
  %15 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !11288
  %16 = bitcast %struct.myrb_pdev_state* %15 to i8*, !dbg !11288
  call void @kfree(i8* %16) #11, !dbg !11290
  store i32 -6, i32* %retval, align 4, !dbg !11291
  br label %return, !dbg !11291

if.end11:                                         ; preds = %if.end8
  %17 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !11292
  %18 = bitcast %struct.myrb_pdev_state* %17 to i8*, !dbg !11292
  %19 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11293
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %19, i32 0, i32 21, !dbg !11294
  store i8* %18, i8** %hostdata, align 8, !dbg !11295
  store i32 0, i32* %retval, align 4, !dbg !11296
  br label %return, !dbg !11296

return:                                           ; preds = %if.end11, %if.then10, %if.then7, %if.then2, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !11297
  ret i32 %20, !dbg !11297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !11298 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11301, metadata !DIExpression()), !dbg !11305
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11311, metadata !DIExpression()), !dbg !11312
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11313, metadata !DIExpression()), !dbg !11314
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !11315, metadata !DIExpression()), !dbg !11316
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11317, metadata !DIExpression()), !dbg !11321
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11323, metadata !DIExpression()), !dbg !11327
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11329, metadata !DIExpression()), !dbg !11333
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !11338, metadata !DIExpression()), !dbg !11339
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11340, metadata !DIExpression()), !dbg !11341
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11342, metadata !DIExpression()), !dbg !11343
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11344, metadata !DIExpression()), !dbg !11345
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11346, metadata !DIExpression()), !dbg !11347
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11348, metadata !DIExpression()), !dbg !11349
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !11350, metadata !DIExpression()), !dbg !11351
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11352, metadata !DIExpression()), !dbg !11353
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11354, metadata !DIExpression()), !dbg !11355
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11356, metadata !DIExpression()), !dbg !11357
  %0 = load i64, i64* %size.addr, align 8, !dbg !11358
  %1 = load i32, i32* %flags.addr, align 4, !dbg !11359
  %or = or i32 %1, 256, !dbg !11360
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !11361
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !11362
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !11363

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11364
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !11365
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11366

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !11367
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !11368
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11369
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !11370
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11347
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !11371
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11372
  %10 = load i32, i32* %order.i.i, align 4, !dbg !11373
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11374
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11375
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11376
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !11377
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11377
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11377
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11377
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !11377
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11378
  br label %kmalloc.exit, !dbg !11378

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !11379
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11380
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !11380
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11382

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11383
  br label %kmalloc_index.exit.i, !dbg !11383

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11384
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !11386
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11387

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11388
  br label %kmalloc_index.exit.i, !dbg !11388

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11389
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !11391
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11392

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11393
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !11394
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11395

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11396
  br label %kmalloc_index.exit.i, !dbg !11396

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11397
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !11399
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11400

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11401
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !11402
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11403

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11404
  br label %kmalloc_index.exit.i, !dbg !11404

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11405
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !11407
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11408

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11409
  br label %kmalloc_index.exit.i, !dbg !11409

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11410
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !11412
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11413

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11414
  br label %kmalloc_index.exit.i, !dbg !11414

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11415
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !11417
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11418

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11419
  br label %kmalloc_index.exit.i, !dbg !11419

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11420
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !11422
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11423

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11424
  br label %kmalloc_index.exit.i, !dbg !11424

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11425
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !11427
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11428

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11429
  br label %kmalloc_index.exit.i, !dbg !11429

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11430
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !11432
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11433

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11434
  br label %kmalloc_index.exit.i, !dbg !11434

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11435
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !11437
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11438

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11439
  br label %kmalloc_index.exit.i, !dbg !11439

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11440
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !11442
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11443

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11444
  br label %kmalloc_index.exit.i, !dbg !11444

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11445
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !11447
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11448

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11449
  br label %kmalloc_index.exit.i, !dbg !11449

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11450
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !11452
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11453

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11454
  br label %kmalloc_index.exit.i, !dbg !11454

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11455
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !11457
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11458

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11459
  br label %kmalloc_index.exit.i, !dbg !11459

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11460
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !11462
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11463

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11464
  br label %kmalloc_index.exit.i, !dbg !11464

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11465
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !11467
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11468

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11469
  br label %kmalloc_index.exit.i, !dbg !11469

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11470
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !11472
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11473

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11474
  br label %kmalloc_index.exit.i, !dbg !11474

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11475
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !11477
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11478

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11479
  br label %kmalloc_index.exit.i, !dbg !11479

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11480
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !11482
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11483

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11484
  br label %kmalloc_index.exit.i, !dbg !11484

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11485
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !11487
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11488

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11489
  br label %kmalloc_index.exit.i, !dbg !11489

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11490
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !11492
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11493

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11494
  br label %kmalloc_index.exit.i, !dbg !11494

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11495
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !11497
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11498

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11499
  br label %kmalloc_index.exit.i, !dbg !11499

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11500
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !11502
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11503

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11504
  br label %kmalloc_index.exit.i, !dbg !11504

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11505
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !11507
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11508

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11509
  br label %kmalloc_index.exit.i, !dbg !11509

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11510
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !11512
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11513

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11514
  br label %kmalloc_index.exit.i, !dbg !11514

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11515
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !11517
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11518

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11519
  br label %kmalloc_index.exit.i, !dbg !11519

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11520
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !11522
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11523

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11524
  br label %kmalloc_index.exit.i, !dbg !11524

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !11525, !srcloc !11528
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #7, !dbg !11529, !srcloc !11532
  unreachable, !dbg !11533

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !11534
  store i32 %45, i32* %index.i, align 4, !dbg !11535
  %46 = load i32, i32* %index.i, align 4, !dbg !11536
  %tobool.i = icmp ne i32 %46, 0, !dbg !11536
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11538

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11539
  br label %kmalloc.exit, !dbg !11539

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !11540
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11541
  %and.i.i = and i32 %48, 17, !dbg !11541
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11541
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11541
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11541
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11541
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11543

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11544
  br label %kmalloc_type.exit.i, !dbg !11544

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11545
  %and2.i.i = and i32 %49, 1, !dbg !11546
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11545
  %50 = zext i1 %tobool3.i.i to i64, !dbg !11545
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11545
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11547
  br label %kmalloc_type.exit.i, !dbg !11547

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !11548
  %idxprom.i = zext i32 %51 to i64, !dbg !11549
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11549
  %52 = load i32, i32* %index.i, align 4, !dbg !11550
  %idxprom6.i = zext i32 %52 to i64, !dbg !11549
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11549
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11549
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !11551
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !11552
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11553
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11554
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !11555
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11555
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11555
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11555
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !11555
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11316
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11556
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !11557
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11558
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11559
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !11560
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11561
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !11562
  store i8* %62, i8** %retval.i, align 8, !dbg !11563
  br label %kmalloc.exit, !dbg !11563

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !11564
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !11565
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !11566
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11566
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11566
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11566
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !11566
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11567
  br label %kmalloc.exit, !dbg !11567

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !11568
  ret i8* %65, !dbg !11569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @raid_set_level(%struct.raid_template* %r, %struct.device* %dev, i32 %value) #0 !dbg !11570 {
entry:
  %r.addr = alloca %struct.raid_template*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %value.addr = alloca i32, align 4
  %device = alloca %struct.device*, align 8
  %rd = alloca %struct.raid_data*, align 8
  store %struct.raid_template* %r, %struct.raid_template** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.raid_template** %r.addr, metadata !11573, metadata !DIExpression()), !dbg !11574
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11575, metadata !DIExpression()), !dbg !11574
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11576, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.declare(metadata %struct.device** %device, metadata !11577, metadata !DIExpression()), !dbg !11574
  %0 = load %struct.raid_template*, %struct.raid_template** %r.addr, align 8, !dbg !11574
  %raid_attrs = getelementptr inbounds %struct.raid_template, %struct.raid_template* %0, i32 0, i32 0, !dbg !11574
  %ac = getelementptr inbounds %struct.transport_container, %struct.transport_container* %raid_attrs, i32 0, i32 0, !dbg !11574
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11574
  %call = call %struct.device* @attribute_container_find_class_device(%struct.attribute_container* %ac, %struct.device* %1) #11, !dbg !11574
  store %struct.device* %call, %struct.device** %device, align 8, !dbg !11574
  call void @llvm.dbg.declare(metadata %struct.raid_data** %rd, metadata !11578, metadata !DIExpression()), !dbg !11574
  br label %do.body, !dbg !11574

do.body:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %device, align 8, !dbg !11587
  %tobool = icmp ne %struct.device* %2, null, !dbg !11587
  %lnot = xor i1 %tobool, true, !dbg !11587
  %lnot1 = xor i1 %lnot, true, !dbg !11587
  %lnot2 = xor i1 %lnot1, true, !dbg !11587
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11587
  %conv = sext i32 %lnot.ext to i64, !dbg !11587
  %tobool3 = icmp ne i64 %conv, 0, !dbg !11587
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11590

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !11587

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !11591

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !11593

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !11591

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34, i64 0, i64 0), i32 74, i32 0, i64 12) #7, !dbg !11595, !srcloc !11597
  br label %do.end7, !dbg !11595

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !11591

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 235) #7, !dbg !11598, !srcloc !11601
  unreachable, !dbg !11602

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !11591

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !11591

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !11590

do.end11:                                         ; preds = %if.end
  %3 = load %struct.device*, %struct.device** %device, align 8, !dbg !11574
  %call12 = call i8* @dev_get_drvdata(%struct.device* %3) #11, !dbg !11574
  %4 = bitcast i8* %call12 to %struct.raid_data*, !dbg !11574
  store %struct.raid_data* %4, %struct.raid_data** %rd, align 8, !dbg !11574
  %5 = load i32, i32* %value.addr, align 4, !dbg !11574
  %6 = load %struct.raid_data*, %struct.raid_data** %rd, align 8, !dbg !11574
  %level = getelementptr inbounds %struct.raid_data, %struct.raid_data* %6, i32 0, i32 2, !dbg !11574
  store i32 %5, i32* %level, align 4, !dbg !11574
  ret void, !dbg !11574
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #10

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #9 !dbg !11603 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11607, metadata !DIExpression()), !dbg !11612
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11614, metadata !DIExpression()), !dbg !11615
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11616, metadata !DIExpression()), !dbg !11617
  %0 = load i64, i64* %size.addr, align 8, !dbg !11618
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11620
  br i1 %1, label %if.then, label %if.end447, !dbg !11621

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11622
  %tobool = icmp ne i64 %2, 0, !dbg !11622
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11625

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11626
  br label %return, !dbg !11626

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11627
  %cmp = icmp ult i64 %3, 4096, !dbg !11629
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11630

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11631
  br label %return, !dbg !11631

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub = sub i64 %4, 1, !dbg !11632
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11632
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11632

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub4 = sub i64 %6, 1, !dbg !11632
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11632
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11632

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub6 = sub i64 %8, 1, !dbg !11632
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11632
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11632

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11632

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub9 = sub i64 %9, 1, !dbg !11632
  %and = and i64 %sub9, -9223372036854775808, !dbg !11632
  %tobool10 = icmp ne i64 %and, 0, !dbg !11632
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11632

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11632

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub13 = sub i64 %10, 1, !dbg !11632
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11632
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11632
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11632

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11632

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub18 = sub i64 %11, 1, !dbg !11632
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11632
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11632
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11632

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11632

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub23 = sub i64 %12, 1, !dbg !11632
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11632
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11632
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11632

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11632

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub28 = sub i64 %13, 1, !dbg !11632
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11632
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11632
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11632

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11632

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub33 = sub i64 %14, 1, !dbg !11632
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11632
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11632
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11632

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11632

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub38 = sub i64 %15, 1, !dbg !11632
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11632
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11632
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11632

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11632

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub43 = sub i64 %16, 1, !dbg !11632
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11632
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11632
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11632

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11632

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub48 = sub i64 %17, 1, !dbg !11632
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11632
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11632
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11632

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11632

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub53 = sub i64 %18, 1, !dbg !11632
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11632
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11632
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11632

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11632

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub58 = sub i64 %19, 1, !dbg !11632
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11632
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11632
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11632

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11632

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub63 = sub i64 %20, 1, !dbg !11632
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11632
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11632
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11632

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11632

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub68 = sub i64 %21, 1, !dbg !11632
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11632
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11632
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11632

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11632

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub73 = sub i64 %22, 1, !dbg !11632
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11632
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11632
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11632

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11632

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub78 = sub i64 %23, 1, !dbg !11632
  %and79 = and i64 %sub78, 562949953421312, !dbg !11632
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11632
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11632

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11632

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub83 = sub i64 %24, 1, !dbg !11632
  %and84 = and i64 %sub83, 281474976710656, !dbg !11632
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11632
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11632

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11632

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub88 = sub i64 %25, 1, !dbg !11632
  %and89 = and i64 %sub88, 140737488355328, !dbg !11632
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11632
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11632

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11632

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub93 = sub i64 %26, 1, !dbg !11632
  %and94 = and i64 %sub93, 70368744177664, !dbg !11632
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11632
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11632

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11632

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub98 = sub i64 %27, 1, !dbg !11632
  %and99 = and i64 %sub98, 35184372088832, !dbg !11632
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11632
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11632

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11632

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub103 = sub i64 %28, 1, !dbg !11632
  %and104 = and i64 %sub103, 17592186044416, !dbg !11632
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11632
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11632

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11632

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub108 = sub i64 %29, 1, !dbg !11632
  %and109 = and i64 %sub108, 8796093022208, !dbg !11632
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11632
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11632

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11632

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub113 = sub i64 %30, 1, !dbg !11632
  %and114 = and i64 %sub113, 4398046511104, !dbg !11632
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11632
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11632

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11632

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub118 = sub i64 %31, 1, !dbg !11632
  %and119 = and i64 %sub118, 2199023255552, !dbg !11632
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11632
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11632

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11632

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub123 = sub i64 %32, 1, !dbg !11632
  %and124 = and i64 %sub123, 1099511627776, !dbg !11632
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11632
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11632

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11632

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub128 = sub i64 %33, 1, !dbg !11632
  %and129 = and i64 %sub128, 549755813888, !dbg !11632
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11632
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11632

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11632

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub133 = sub i64 %34, 1, !dbg !11632
  %and134 = and i64 %sub133, 274877906944, !dbg !11632
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11632
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11632

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11632

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub138 = sub i64 %35, 1, !dbg !11632
  %and139 = and i64 %sub138, 137438953472, !dbg !11632
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11632
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11632

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11632

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub143 = sub i64 %36, 1, !dbg !11632
  %and144 = and i64 %sub143, 68719476736, !dbg !11632
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11632
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11632

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11632

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub148 = sub i64 %37, 1, !dbg !11632
  %and149 = and i64 %sub148, 34359738368, !dbg !11632
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11632
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11632

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11632

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub153 = sub i64 %38, 1, !dbg !11632
  %and154 = and i64 %sub153, 17179869184, !dbg !11632
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11632
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11632

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11632

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub158 = sub i64 %39, 1, !dbg !11632
  %and159 = and i64 %sub158, 8589934592, !dbg !11632
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11632
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11632

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11632

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub163 = sub i64 %40, 1, !dbg !11632
  %and164 = and i64 %sub163, 4294967296, !dbg !11632
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11632
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11632

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11632

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub168 = sub i64 %41, 1, !dbg !11632
  %and169 = and i64 %sub168, 2147483648, !dbg !11632
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11632
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11632

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11632

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub173 = sub i64 %42, 1, !dbg !11632
  %and174 = and i64 %sub173, 1073741824, !dbg !11632
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11632
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11632

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11632

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub178 = sub i64 %43, 1, !dbg !11632
  %and179 = and i64 %sub178, 536870912, !dbg !11632
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11632
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11632

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11632

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub183 = sub i64 %44, 1, !dbg !11632
  %and184 = and i64 %sub183, 268435456, !dbg !11632
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11632
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11632

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11632

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub188 = sub i64 %45, 1, !dbg !11632
  %and189 = and i64 %sub188, 134217728, !dbg !11632
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11632
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11632

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11632

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub193 = sub i64 %46, 1, !dbg !11632
  %and194 = and i64 %sub193, 67108864, !dbg !11632
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11632
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11632

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11632

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub198 = sub i64 %47, 1, !dbg !11632
  %and199 = and i64 %sub198, 33554432, !dbg !11632
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11632
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11632

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11632

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub203 = sub i64 %48, 1, !dbg !11632
  %and204 = and i64 %sub203, 16777216, !dbg !11632
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11632
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11632

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11632

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub208 = sub i64 %49, 1, !dbg !11632
  %and209 = and i64 %sub208, 8388608, !dbg !11632
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11632
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11632

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11632

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub213 = sub i64 %50, 1, !dbg !11632
  %and214 = and i64 %sub213, 4194304, !dbg !11632
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11632
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11632

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11632

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub218 = sub i64 %51, 1, !dbg !11632
  %and219 = and i64 %sub218, 2097152, !dbg !11632
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11632
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11632

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11632

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub223 = sub i64 %52, 1, !dbg !11632
  %and224 = and i64 %sub223, 1048576, !dbg !11632
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11632
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11632

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11632

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub228 = sub i64 %53, 1, !dbg !11632
  %and229 = and i64 %sub228, 524288, !dbg !11632
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11632
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11632

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11632

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub233 = sub i64 %54, 1, !dbg !11632
  %and234 = and i64 %sub233, 262144, !dbg !11632
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11632
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11632

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11632

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub238 = sub i64 %55, 1, !dbg !11632
  %and239 = and i64 %sub238, 131072, !dbg !11632
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11632
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11632

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11632

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub243 = sub i64 %56, 1, !dbg !11632
  %and244 = and i64 %sub243, 65536, !dbg !11632
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11632
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11632

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11632

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub248 = sub i64 %57, 1, !dbg !11632
  %and249 = and i64 %sub248, 32768, !dbg !11632
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11632
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11632

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11632

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub253 = sub i64 %58, 1, !dbg !11632
  %and254 = and i64 %sub253, 16384, !dbg !11632
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11632
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11632

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11632

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub258 = sub i64 %59, 1, !dbg !11632
  %and259 = and i64 %sub258, 8192, !dbg !11632
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11632
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11632

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11632

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub263 = sub i64 %60, 1, !dbg !11632
  %and264 = and i64 %sub263, 4096, !dbg !11632
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11632
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11632

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11632

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub268 = sub i64 %61, 1, !dbg !11632
  %and269 = and i64 %sub268, 2048, !dbg !11632
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11632
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11632

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11632

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub273 = sub i64 %62, 1, !dbg !11632
  %and274 = and i64 %sub273, 1024, !dbg !11632
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11632
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11632

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11632

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub278 = sub i64 %63, 1, !dbg !11632
  %and279 = and i64 %sub278, 512, !dbg !11632
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11632
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11632

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11632

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub283 = sub i64 %64, 1, !dbg !11632
  %and284 = and i64 %sub283, 256, !dbg !11632
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11632
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11632

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11632

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub288 = sub i64 %65, 1, !dbg !11632
  %and289 = and i64 %sub288, 128, !dbg !11632
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11632
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11632

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11632

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub293 = sub i64 %66, 1, !dbg !11632
  %and294 = and i64 %sub293, 64, !dbg !11632
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11632
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11632

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11632

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub298 = sub i64 %67, 1, !dbg !11632
  %and299 = and i64 %sub298, 32, !dbg !11632
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11632
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11632

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11632

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub303 = sub i64 %68, 1, !dbg !11632
  %and304 = and i64 %sub303, 16, !dbg !11632
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11632
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11632

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11632

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub308 = sub i64 %69, 1, !dbg !11632
  %and309 = and i64 %sub308, 8, !dbg !11632
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11632
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11632

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11632

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub313 = sub i64 %70, 1, !dbg !11632
  %and314 = and i64 %sub313, 4, !dbg !11632
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11632
  %71 = zext i1 %tobool315 to i64, !dbg !11632
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11632
  br label %cond.end, !dbg !11632

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11632
  br label %cond.end317, !dbg !11632

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11632
  br label %cond.end319, !dbg !11632

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11632
  br label %cond.end321, !dbg !11632

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11632
  br label %cond.end323, !dbg !11632

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11632
  br label %cond.end325, !dbg !11632

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11632
  br label %cond.end327, !dbg !11632

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11632
  br label %cond.end329, !dbg !11632

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11632
  br label %cond.end331, !dbg !11632

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11632
  br label %cond.end333, !dbg !11632

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11632
  br label %cond.end335, !dbg !11632

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11632
  br label %cond.end337, !dbg !11632

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11632
  br label %cond.end339, !dbg !11632

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11632
  br label %cond.end341, !dbg !11632

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11632
  br label %cond.end343, !dbg !11632

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11632
  br label %cond.end345, !dbg !11632

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11632
  br label %cond.end347, !dbg !11632

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11632
  br label %cond.end349, !dbg !11632

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11632
  br label %cond.end351, !dbg !11632

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11632
  br label %cond.end353, !dbg !11632

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11632
  br label %cond.end355, !dbg !11632

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11632
  br label %cond.end357, !dbg !11632

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11632
  br label %cond.end359, !dbg !11632

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11632
  br label %cond.end361, !dbg !11632

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11632
  br label %cond.end363, !dbg !11632

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11632
  br label %cond.end365, !dbg !11632

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11632
  br label %cond.end367, !dbg !11632

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11632
  br label %cond.end369, !dbg !11632

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11632
  br label %cond.end371, !dbg !11632

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11632
  br label %cond.end373, !dbg !11632

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11632
  br label %cond.end375, !dbg !11632

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11632
  br label %cond.end377, !dbg !11632

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11632
  br label %cond.end379, !dbg !11632

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11632
  br label %cond.end381, !dbg !11632

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11632
  br label %cond.end383, !dbg !11632

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11632
  br label %cond.end385, !dbg !11632

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11632
  br label %cond.end387, !dbg !11632

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11632
  br label %cond.end389, !dbg !11632

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11632
  br label %cond.end391, !dbg !11632

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11632
  br label %cond.end393, !dbg !11632

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11632
  br label %cond.end395, !dbg !11632

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11632
  br label %cond.end397, !dbg !11632

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11632
  br label %cond.end399, !dbg !11632

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11632
  br label %cond.end401, !dbg !11632

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11632
  br label %cond.end403, !dbg !11632

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11632
  br label %cond.end405, !dbg !11632

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11632
  br label %cond.end407, !dbg !11632

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11632
  br label %cond.end409, !dbg !11632

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11632
  br label %cond.end411, !dbg !11632

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11632
  br label %cond.end413, !dbg !11632

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11632
  br label %cond.end415, !dbg !11632

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11632
  br label %cond.end417, !dbg !11632

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11632
  br label %cond.end419, !dbg !11632

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11632
  br label %cond.end421, !dbg !11632

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11632
  br label %cond.end423, !dbg !11632

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11632
  br label %cond.end425, !dbg !11632

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11632
  br label %cond.end427, !dbg !11632

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11632
  br label %cond.end429, !dbg !11632

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11632
  br label %cond.end431, !dbg !11632

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11632
  br label %cond.end433, !dbg !11632

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11632
  br label %cond.end435, !dbg !11632

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11632
  br label %cond.end437, !dbg !11632

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11632
  br label %cond.end440, !dbg !11632

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11632

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11632
  br label %cond.end444, !dbg !11632

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11632
  %sub443 = sub i64 %72, 1, !dbg !11632
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !11632
  br label %cond.end444, !dbg !11632

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11632
  %sub446 = sub i32 %cond445, 12, !dbg !11633
  %add = add i32 %sub446, 1, !dbg !11634
  store i32 %add, i32* %retval, align 4, !dbg !11635
  br label %return, !dbg !11635

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11636
  %dec = add i64 %73, -1, !dbg !11636
  store i64 %dec, i64* %size.addr, align 8, !dbg !11636
  %74 = load i64, i64* %size.addr, align 8, !dbg !11637
  %shr = lshr i64 %74, 12, !dbg !11637
  store i64 %shr, i64* %size.addr, align 8, !dbg !11637
  %75 = load i64, i64* %size.addr, align 8, !dbg !11638
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11615
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11639
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11640
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !11639, !srcloc !11641
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11639
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11642
  %add.i = add i32 %79, 1, !dbg !11643
  store i32 %add.i, i32* %retval, align 4, !dbg !11644
  br label %return, !dbg !11644

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11645
  ret i32 %80, !dbg !11645
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #9 !dbg !11646 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11607, metadata !DIExpression()), !dbg !11650
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11614, metadata !DIExpression()), !dbg !11652
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11653, metadata !DIExpression()), !dbg !11654
  %0 = load i64, i64* %n.addr, align 8, !dbg !11655
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11652
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11656
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11657
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !11656, !srcloc !11641
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11656
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11658
  %add.i = add i32 %4, 1, !dbg !11659
  %sub = sub i32 %add.i, 1, !dbg !11660
  ret i32 %sub, !dbg !11661
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !11662 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11666, metadata !DIExpression()), !dbg !11667
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11668, metadata !DIExpression()), !dbg !11669
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11670, metadata !DIExpression()), !dbg !11671
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11672, metadata !DIExpression()), !dbg !11673
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11674
  ret i8* %0, !dbg !11675
}

; Function Attrs: noredzone
declare dso_local %struct.device* @attribute_container_find_class_device(%struct.attribute_container*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !11676 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11679, metadata !DIExpression()), !dbg !11680
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11681
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !11682
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11682
  ret i8* %1, !dbg !11683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @myrb_exec_type3D(%struct.myrb_hba* %cb, i8 zeroext %op, %struct.scsi_device* %sdev, %struct.myrb_pdev_state* %pdev_info) #0 !dbg !11684 {
entry:
  %retval = alloca i16, align 2
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %op.addr = alloca i8, align 1
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %pdev_info.addr = alloca %struct.myrb_pdev_state*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %status = alloca i16, align 2
  %pdev_info_addr = alloca i64, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !11687, metadata !DIExpression()), !dbg !11688
  store i8 %op, i8* %op.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %op.addr, metadata !11689, metadata !DIExpression()), !dbg !11690
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !11691, metadata !DIExpression()), !dbg !11692
  store %struct.myrb_pdev_state* %pdev_info, %struct.myrb_pdev_state** %pdev_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_pdev_state** %pdev_info.addr, metadata !11693, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !11695, metadata !DIExpression()), !dbg !11696
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11697
  %dcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 52, !dbg !11698
  store %struct.myrb_cmdblk* %dcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !11696
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !11699, metadata !DIExpression()), !dbg !11700
  %1 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !11701
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %1, i32 0, i32 0, !dbg !11702
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !11700
  call void @llvm.dbg.declare(metadata i16* %status, metadata !11703, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.declare(metadata i64* %pdev_info_addr, metadata !11705, metadata !DIExpression()), !dbg !11706
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11707
  %pdev = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 17, !dbg !11707
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11707
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !11707
  %4 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info.addr, align 8, !dbg !11707
  %5 = bitcast %struct.myrb_pdev_state* %4 to i8*, !dbg !11707
  %call = call i64 @dma_map_single_attrs(%struct.device* %dev, i8* %5, i64 15, i32 2, i64 0) #11, !dbg !11707
  store i64 %call, i64* %pdev_info_addr, align 8, !dbg !11708
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11709
  %pdev2 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %6, i32 0, i32 17, !dbg !11711
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev2, align 8, !dbg !11711
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !11712
  %8 = load i64, i64* %pdev_info_addr, align 8, !dbg !11713
  %call4 = call i32 @dma_mapping_error(%struct.device* %dev3, i64 %8) #11, !dbg !11714
  %tobool = icmp ne i32 %call4, 0, !dbg !11714
  br i1 %tobool, label %if.then, label %if.end, !dbg !11715

if.then:                                          ; preds = %entry
  store i16 2, i16* %retval, align 2, !dbg !11716
  br label %return, !dbg !11716

if.end:                                           ; preds = %entry
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11717
  %dcmd_mutex = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %9, i32 0, i32 54, !dbg !11718
  call void @mutex_lock(%struct.mutex* %dcmd_mutex) #11, !dbg !11719
  %10 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !11720
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %10) #11, !dbg !11721
  %11 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !11722
  %type3D = bitcast %union.myrb_cmd_mbox* %11 to %struct.anon.81*, !dbg !11723
  %id = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D, i32 0, i32 1, !dbg !11724
  store i8 1, i8* %id, align 1, !dbg !11725
  %12 = load i8, i8* %op.addr, align 1, !dbg !11726
  %13 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !11727
  %type3D5 = bitcast %union.myrb_cmd_mbox* %13 to %struct.anon.81*, !dbg !11728
  %opcode = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D5, i32 0, i32 0, !dbg !11729
  store i8 %12, i8* %opcode, align 4, !dbg !11730
  %14 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11731
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %14, i32 0, i32 17, !dbg !11732
  %15 = load i32, i32* %channel, align 4, !dbg !11732
  %conv = trunc i32 %15 to i8, !dbg !11731
  %16 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !11733
  %type3D6 = bitcast %union.myrb_cmd_mbox* %16 to %struct.anon.81*, !dbg !11734
  %channel7 = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D6, i32 0, i32 2, !dbg !11735
  store i8 %conv, i8* %channel7, align 2, !dbg !11736
  %17 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11737
  %id8 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %17, i32 0, i32 16, !dbg !11738
  %18 = load i32, i32* %id8, align 8, !dbg !11738
  %conv9 = trunc i32 %18 to i8, !dbg !11737
  %19 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !11739
  %type3D10 = bitcast %union.myrb_cmd_mbox* %19 to %struct.anon.81*, !dbg !11740
  %target = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D10, i32 0, i32 3, !dbg !11741
  store i8 %conv9, i8* %target, align 1, !dbg !11742
  %20 = load i64, i64* %pdev_info_addr, align 8, !dbg !11743
  %conv11 = trunc i64 %20 to i32, !dbg !11743
  %21 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !11744
  %type3D12 = bitcast %union.myrb_cmd_mbox* %21 to %struct.anon.81*, !dbg !11745
  %addr = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D12, i32 0, i32 6, !dbg !11746
  store i32 %conv11, i32* %addr, align 4, !dbg !11747
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11748
  %23 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !11749
  %call13 = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %22, %struct.myrb_cmdblk* %23) #11, !dbg !11750
  store i16 %call13, i16* %status, align 2, !dbg !11751
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11752
  %dcmd_mutex14 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 54, !dbg !11753
  call void @mutex_unlock(%struct.mutex* %dcmd_mutex14) #11, !dbg !11754
  %25 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11755
  %pdev15 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %25, i32 0, i32 17, !dbg !11755
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev15, align 8, !dbg !11755
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !11755
  %27 = load i64, i64* %pdev_info_addr, align 8, !dbg !11755
  call void @dma_unmap_single_attrs(%struct.device* %dev16, i64 %27, i64 15, i32 2, i64 0) #11, !dbg !11755
  %28 = load i16, i16* %status, align 2, !dbg !11756
  %conv17 = zext i16 %28 to i32, !dbg !11756
  %cmp = icmp eq i32 %conv17, 0, !dbg !11758
  br i1 %cmp, label %land.lhs.true, label %if.end25, !dbg !11759

land.lhs.true:                                    ; preds = %if.end
  %29 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !11760
  %type3D19 = bitcast %union.myrb_cmd_mbox* %29 to %struct.anon.81*, !dbg !11761
  %opcode20 = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D19, i32 0, i32 0, !dbg !11762
  %30 = load i8, i8* %opcode20, align 4, !dbg !11762
  %conv21 = zext i8 %30 to i32, !dbg !11760
  %cmp22 = icmp eq i32 %conv21, 20, !dbg !11763
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !11764

if.then24:                                        ; preds = %land.lhs.true
  %31 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info.addr, align 8, !dbg !11765
  %32 = bitcast %struct.myrb_pdev_state* %31 to i8*, !dbg !11765
  call void @myrb_translate_devstate(i8* %32) #11, !dbg !11766
  br label %if.end25, !dbg !11766

if.end25:                                         ; preds = %if.then24, %land.lhs.true, %if.end
  %33 = load i16, i16* %status, align 2, !dbg !11767
  store i16 %33, i16* %retval, align 2, !dbg !11768
  br label %return, !dbg !11768

return:                                           ; preds = %if.end25, %if.then
  %34 = load i16, i16* %retval, align 2, !dbg !11769
  ret i16 %34, !dbg !11769
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #0 !dbg !6408 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11770, metadata !DIExpression()), !dbg !11771
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11772, metadata !DIExpression()), !dbg !11773
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11774, metadata !DIExpression()), !dbg !11775
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !11776, metadata !DIExpression()), !dbg !11777
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !11778, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !11780, metadata !DIExpression()), !dbg !11783
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11783
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #11, !dbg !11783
  %lnot = xor i1 %call, true, !dbg !11783
  %lnot1 = xor i1 %lnot, true, !dbg !11783
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11783
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !11783
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !11784
  %tobool = icmp ne i32 %1, 0, !dbg !11784
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11784

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !11784
  %tobool2 = trunc i8 %2 to i1, !dbg !11784
  %lnot3 = xor i1 %tobool2, true, !dbg !11784
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !11786
  %lnot5 = xor i1 %3, true, !dbg !11784
  %lnot7 = xor i1 %lnot5, true, !dbg !11784
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11784
  %conv = sext i32 %lnot.ext8 to i64, !dbg !11784
  %tobool9 = icmp ne i64 %conv, 0, !dbg !11784
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !11783

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !11787
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11789, metadata !DIExpression()), !dbg !11791
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !11791
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !11792
  %tobool10 = icmp ne i32 %4, 0, !dbg !11792
  %lnot11 = xor i1 %tobool10, true, !dbg !11792
  %lnot13 = xor i1 %lnot11, true, !dbg !11792
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !11792
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !11792
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !11792
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !11791

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !11792

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !11794

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !11796

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11794
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #11, !dbg !11794
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11794
  %call20 = call i8* @dev_name(%struct.device* %6) #11, !dbg !11794
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.35, i64 0, i64 0), i8* %call19, i8* %call20) #11, !dbg !11794
  br label %do.body21, !dbg !11794

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !11798

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !11800

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !11798

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.36, i64 0, i64 0), i32 276, i32 2313, i64 12) #7, !dbg !11802, !srcloc !11804
  br label %do.end25, !dbg !11802

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 231) #7, !dbg !11805, !srcloc !11807
  br label %do.body26, !dbg !11798

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !11808

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !11798

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !11794

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !11810

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !11794

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !11794

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !11791
  %tobool32 = icmp ne i32 %7, 0, !dbg !11791
  %lnot33 = xor i1 %tobool32, true, !dbg !11791
  %lnot35 = xor i1 %lnot33, true, !dbg !11791
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !11791
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !11791
  store i64 %conv37, i64* %tmp, align 8, !dbg !11792
  %8 = load i64, i64* %tmp, align 8, !dbg !11791
  br label %if.end38, !dbg !11787

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !11783
  %tobool40 = icmp ne i32 %9, 0, !dbg !11783
  %lnot41 = xor i1 %tobool40, true, !dbg !11783
  %lnot43 = xor i1 %lnot41, true, !dbg !11783
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !11783
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !11783
  store i64 %conv45, i64* %tmp39, align 8, !dbg !11784
  %10 = load i64, i64* %tmp39, align 8, !dbg !11783
  %tobool46 = icmp ne i64 %10, 0, !dbg !11812
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !11813

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !11814
  br label %return, !dbg !11814

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11815
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !11816
  %13 = load i64, i64* %size.addr, align 8, !dbg !11817
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #11, !dbg !11818
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11819
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !11820
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !11820
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !11820
  %18 = ptrtoint i8* %17 to i64, !dbg !11820
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #11, !dbg !11820
  %shr = lshr i64 %call49, 12, !dbg !11820
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !11820
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !11821
  %20 = ptrtoint i8* %19 to i64, !dbg !11821
  %and = and i64 %20, 4095, !dbg !11821
  %21 = load i64, i64* %size.addr, align 8, !dbg !11822
  %22 = load i32, i32* %dir.addr, align 4, !dbg !11823
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !11824
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #11, !dbg !11825
  store i64 %call50, i64* %retval, align 8, !dbg !11826
  br label %return, !dbg !11826

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !11827
  ret i64 %24, !dbg !11827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #0 !dbg !11828 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11831, metadata !DIExpression()), !dbg !11832
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !11833, metadata !DIExpression()), !dbg !11834
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11835
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !11836
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #11, !dbg !11837
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !11838
  %cmp = icmp eq i64 %2, -1, !dbg !11840
  br i1 %cmp, label %if.then, label %if.end, !dbg !11841

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11842
  br label %return, !dbg !11842

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11843
  br label %return, !dbg !11843

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !11844
  ret i32 %3, !dbg !11844
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %cb, %struct.myrb_cmdblk* %cmd_blk) #0 !dbg !11845 {
entry:
  %pfo_val__.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pfo_val__.i, metadata !11848, metadata !DIExpression()), !dbg !11852
  %tmp.i51 = alloca i32, align 4
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !6560, metadata !DIExpression()), !dbg !11855
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6567, metadata !DIExpression()), !dbg !11857
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6569, metadata !DIExpression()), !dbg !11858
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %cmd_blk.addr = alloca %struct.myrb_cmdblk*, align 8
  %cmpl = alloca %struct.completion, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp42 = alloca i64, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !11865, metadata !DIExpression()), !dbg !11866
  store %struct.myrb_cmdblk* %cmd_blk, %struct.myrb_cmdblk** %cmd_blk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk.addr, metadata !11867, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.declare(metadata %struct.completion* %cmpl, metadata !11869, metadata !DIExpression()), !dbg !11870
  %done = getelementptr inbounds %struct.completion, %struct.completion* %cmpl, i32 0, i32 0, !dbg !11870
  store i32 0, i32* %done, align 8, !dbg !11870
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %cmpl, i32 0, i32 1, !dbg !11870
  %task_list = getelementptr inbounds %struct.swait_queue_head, %struct.swait_queue_head* %wait, i32 0, i32 1, !dbg !11870
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0, !dbg !11870
  %wait1 = getelementptr inbounds %struct.completion, %struct.completion* %cmpl, i32 0, i32 1, !dbg !11870
  %task_list2 = getelementptr inbounds %struct.swait_queue_head, %struct.swait_queue_head* %wait1, i32 0, i32 1, !dbg !11870
  store %struct.list_head* %task_list2, %struct.list_head** %next, align 8, !dbg !11870
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1, !dbg !11870
  %wait3 = getelementptr inbounds %struct.completion, %struct.completion* %cmpl, i32 0, i32 1, !dbg !11870
  %task_list4 = getelementptr inbounds %struct.swait_queue_head, %struct.swait_queue_head* %wait3, i32 0, i32 1, !dbg !11870
  store %struct.list_head* %task_list4, %struct.list_head** %prev, align 8, !dbg !11870
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11871, metadata !DIExpression()), !dbg !11872
  %0 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !11873
  %completion = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %0, i32 0, i32 2, !dbg !11874
  store %struct.completion* %cmpl, %struct.completion** %completion, align 8, !dbg !11875
  br label %do.body, !dbg !11876

do.body:                                          ; preds = %entry
  br label %do.body5, !dbg !11877

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11878, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11881, metadata !DIExpression()), !dbg !11880
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11880
  %conv = zext i1 %cmp to i32, !dbg !11880
  store i32 1, i32* %tmp, align 4, !dbg !11880
  %1 = load i32, i32* %tmp, align 4, !dbg !11880
  br label %do.body6, !dbg !11882

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !11883

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !11884

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !11886, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !11890, metadata !DIExpression()), !dbg !11889
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !11889
  %conv12 = zext i1 %cmp11 to i32, !dbg !11889
  store i32 1, i32* %tmp13, align 4, !dbg !11889
  %2 = load i32, i32* %tmp13, align 4, !dbg !11889
  %call = call i64 @arch_local_irq_save() #11, !dbg !11891
  store i64 %call, i64* %flags, align 8, !dbg !11891
  br label %do.end, !dbg !11891

do.end:                                           ; preds = %do.body8
  br label %do.end14, !dbg !11884

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !11883

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11892, !srcloc !11893
  br label %do.body16, !dbg !11892

do.body16:                                        ; preds = %do.body15
  %3 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11894
  %queue_lock = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %3, i32 0, i32 26, !dbg !11894
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11895
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !11896
  %rlock.i = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !11896
  br label %do.end18, !dbg !11894

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !11892

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11883

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11882

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !11877

do.end22:                                         ; preds = %do.end21
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11897
  %qcmd = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %6, i32 0, i32 27, !dbg !11898
  %7 = load void (%struct.myrb_hba*, %struct.myrb_cmdblk*)*, void (%struct.myrb_hba*, %struct.myrb_cmdblk*)** %qcmd, align 8, !dbg !11898
  %8 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11899
  %9 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !11900
  call void %7(%struct.myrb_hba* %8, %struct.myrb_cmdblk* %9) #11, !dbg !11897
  %10 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !11901
  %queue_lock23 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %10, i32 0, i32 26, !dbg !11902
  %11 = load i64, i64* %flags, align 8, !dbg !11903
  store %struct.spinlock* %queue_lock23, %struct.spinlock** %lock.addr.i49, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1034, metadata !6710, metadata !DIExpression()) #7, !dbg !11904
  call void @llvm.dbg.declare(metadata !1034, metadata !6714, metadata !DIExpression()) #7, !dbg !11904
  store i32 1, i32* %tmp.i, align 4, !dbg !11904
  %12 = load i32, i32* %tmp.i, align 4, !dbg !11904
  call void @llvm.dbg.declare(metadata !1034, metadata !6715, metadata !DIExpression()) #7, !dbg !11905
  call void @llvm.dbg.declare(metadata !1034, metadata !6721, metadata !DIExpression()) #7, !dbg !11905
  store i32 1, i32* %tmp8.i, align 4, !dbg !11905
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !11905
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !11906
  call void @arch_local_irq_restore(i64 %14) #13, !dbg !11906
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11907, !srcloc !6725
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !11908
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !11908
  %rlock.i50 = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !11908
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11909, metadata !DIExpression()), !dbg !11910
  %17 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #6, !dbg !11852, !srcloc !11911
  store i32 %17, i32* %pfo_val__.i, align 4, !dbg !11852
  %18 = load i32, i32* %pfo_val__.i, align 4, !dbg !11852
  %conv.i = zext i32 %18 to i64, !dbg !11852
  store i32 %18, i32* %tmp.i51, align 4, !dbg !11852
  %19 = load i32, i32* %tmp.i51, align 4, !dbg !11852
  %and.i = and i32 %19, 2147483647, !dbg !11912
  %conv25 = sext i32 %and.i to i64, !dbg !11910
  %and = and i64 %conv25, 16776960, !dbg !11910
  %tobool = icmp ne i64 %and, 0, !dbg !11910
  %lnot = xor i1 %tobool, true, !dbg !11910
  %lnot26 = xor i1 %lnot, true, !dbg !11910
  %lnot.ext = zext i1 %lnot26 to i32, !dbg !11910
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11910
  %20 = load i32, i32* %__ret_warn_on, align 4, !dbg !11913
  %tobool27 = icmp ne i32 %20, 0, !dbg !11913
  %lnot28 = xor i1 %tobool27, true, !dbg !11913
  %lnot30 = xor i1 %lnot28, true, !dbg !11913
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !11913
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !11913
  %tobool33 = icmp ne i64 %conv32, 0, !dbg !11913
  br i1 %tobool33, label %if.then, label %if.end, !dbg !11910

if.then:                                          ; preds = %do.end22
  br label %do.body34, !dbg !11913

do.body34:                                        ; preds = %if.then
  br label %do.body35, !dbg !11915

do.body35:                                        ; preds = %do.body34
  br label %do.end36, !dbg !11917

do.end36:                                         ; preds = %do.body35
  br label %do.body37, !dbg !11915

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.37, i64 0, i64 0), i32 197, i32 2305, i64 12) #7, !dbg !11919, !srcloc !11921
  br label %do.end38, !dbg !11919

do.end38:                                         ; preds = %do.body37
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 303) #7, !dbg !11922, !srcloc !11924
  br label %do.body39, !dbg !11915

do.body39:                                        ; preds = %do.end38
  br label %do.end40, !dbg !11925

do.end40:                                         ; preds = %do.body39
  br label %do.end41, !dbg !11915

do.end41:                                         ; preds = %do.end40
  br label %if.end, !dbg !11915

if.end:                                           ; preds = %do.end41, %do.end22
  %21 = load i32, i32* %__ret_warn_on, align 4, !dbg !11910
  %tobool43 = icmp ne i32 %21, 0, !dbg !11910
  %lnot44 = xor i1 %tobool43, true, !dbg !11910
  %lnot46 = xor i1 %lnot44, true, !dbg !11910
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !11910
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !11910
  store i64 %conv48, i64* %tmp42, align 8, !dbg !11913
  %22 = load i64, i64* %tmp42, align 8, !dbg !11910
  call void @wait_for_completion(%struct.completion* %cmpl) #11, !dbg !11927
  %23 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk.addr, align 8, !dbg !11928
  %status = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %23, i32 0, i32 1, !dbg !11929
  %24 = load i16, i16* %status, align 8, !dbg !11929
  ret i16 %24, !dbg !11930
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #0 !dbg !11931 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11934, metadata !DIExpression()), !dbg !11935
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !11936, metadata !DIExpression()), !dbg !11937
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11938, metadata !DIExpression()), !dbg !11939
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !11940, metadata !DIExpression()), !dbg !11941
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !11942, metadata !DIExpression()), !dbg !11943
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11944
  %1 = load i64, i64* %addr.addr, align 8, !dbg !11945
  %2 = load i64, i64* %size.addr, align 8, !dbg !11946
  %3 = load i32, i32* %dir.addr, align 4, !dbg !11947
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !11948
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #11, !dbg !11949
  ret void, !dbg !11950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_translate_devstate(i8* %state) #0 !dbg !11951 {
entry:
  %state.addr = alloca i8*, align 8
  store i8* %state, i8** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr, metadata !11952, metadata !DIExpression()), !dbg !11953
  %0 = load i8*, i8** %state.addr, align 8, !dbg !11954
  %add.ptr = getelementptr i8, i8* %0, i64 2, !dbg !11955
  %1 = load i8*, i8** %state.addr, align 8, !dbg !11956
  %add.ptr1 = getelementptr i8, i8* %1, i64 3, !dbg !11957
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %add.ptr1, i64 1, i1 false), !dbg !11958
  %2 = load i8*, i8** %state.addr, align 8, !dbg !11959
  %add.ptr2 = getelementptr i8, i8* %2, i64 4, !dbg !11960
  %3 = load i8*, i8** %state.addr, align 8, !dbg !11961
  %add.ptr3 = getelementptr i8, i8* %3, i64 5, !dbg !11962
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr2, i8* align 1 %add.ptr3, i64 2, i1 false), !dbg !11963
  %4 = load i8*, i8** %state.addr, align 8, !dbg !11964
  %add.ptr4 = getelementptr i8, i8* %4, i64 6, !dbg !11965
  %5 = load i8*, i8** %state.addr, align 8, !dbg !11966
  %add.ptr5 = getelementptr i8, i8* %5, i64 8, !dbg !11967
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr4, i8* align 1 %add.ptr5, i64 4, i1 false), !dbg !11968
  ret void, !dbg !11969
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #2

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !11970 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11973, metadata !DIExpression()), !dbg !11974
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11975
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11977
  %1 = load i8*, i8** %init_name, align 8, !dbg !11977
  %tobool = icmp ne i8* %1, null, !dbg !11975
  br i1 %tobool, label %if.then, label %if.end, !dbg !11978

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11979
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !11980
  %3 = load i8*, i8** %init_name1, align 8, !dbg !11980
  store i8* %3, i8** %retval, align 8, !dbg !11981
  br label %return, !dbg !11981

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11982
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !11983
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !11984
  store i8* %call, i8** %retval, align 8, !dbg !11985
  br label %return, !dbg !11985

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !11986
  ret i8* %5, !dbg !11986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #0 !dbg !11987 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11990, metadata !DIExpression()), !dbg !11991
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11992, metadata !DIExpression()), !dbg !11993
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11994, metadata !DIExpression()), !dbg !11995
  ret void, !dbg !11996
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !11997 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !12001, metadata !DIExpression()), !dbg !12002
  call void @llvm.dbg.declare(metadata i64* %y, metadata !12003, metadata !DIExpression()), !dbg !12004
  %0 = load i64, i64* %x.addr, align 8, !dbg !12005
  %sub = sub i64 %0, -2147483648, !dbg !12006
  store i64 %sub, i64* %y, align 8, !dbg !12004
  %1 = load i64, i64* %y, align 8, !dbg !12007
  %2 = load i64, i64* %x.addr, align 8, !dbg !12008
  %3 = load i64, i64* %y, align 8, !dbg !12009
  %cmp = icmp ugt i64 %2, %3, !dbg !12010
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12011

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !12012
  br label %cond.end, !dbg !12011

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !12013
  %sub1 = sub i64 -2147483648, %5, !dbg !12014
  br label %cond.end, !dbg !12011

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !12011
  %add = add i64 %1, %cond, !dbg !12015
  store i64 %add, i64* %x.addr, align 8, !dbg !12016
  %6 = load i64, i64* %x.addr, align 8, !dbg !12017
  ret i64 %6, !dbg !12018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !12019 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !12024, metadata !DIExpression()), !dbg !12025
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !12026
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !12027
  %1 = load i8*, i8** %name, align 8, !dbg !12027
  ret i8* %1, !dbg !12028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #0 !dbg !12029 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12032, metadata !DIExpression()), !dbg !12033
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !12034, metadata !DIExpression()), !dbg !12035
  ret void, !dbg !12036
}

; Function Attrs: noredzone
declare dso_local void @wait_for_completion(%struct.completion*) #2

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local void @sdev_prefix_printk(i8*, %struct.scsi_device*, i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @myrb_devstate_name(i8 zeroext %state) #0 !dbg !12037 {
entry:
  %retval = alloca i8*, align 8
  %state.addr = alloca i8, align 1
  %entry1 = alloca %struct.myrb_devstate_name_entry*, align 8
  %i = alloca i32, align 4
  store i8 %state, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !12040, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.declare(metadata %struct.myrb_devstate_name_entry** %entry1, metadata !12042, metadata !DIExpression()), !dbg !12044
  store %struct.myrb_devstate_name_entry* getelementptr inbounds ([6 x %struct.myrb_devstate_name_entry], [6 x %struct.myrb_devstate_name_entry]* @myrb_devstate_name_list, i64 0, i64 0), %struct.myrb_devstate_name_entry** %entry1, align 8, !dbg !12044
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12045, metadata !DIExpression()), !dbg !12046
  store i32 0, i32* %i, align 4, !dbg !12047
  br label %for.cond, !dbg !12049

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12050
  %conv = sext i32 %0 to i64, !dbg !12050
  %cmp = icmp ult i64 %conv, 6, !dbg !12052
  br i1 %cmp, label %for.body, label %for.end, !dbg !12053

for.body:                                         ; preds = %for.cond
  %1 = load %struct.myrb_devstate_name_entry*, %struct.myrb_devstate_name_entry** %entry1, align 8, !dbg !12054
  %2 = load i32, i32* %i, align 4, !dbg !12057
  %idxprom = sext i32 %2 to i64, !dbg !12054
  %arrayidx = getelementptr %struct.myrb_devstate_name_entry, %struct.myrb_devstate_name_entry* %1, i64 %idxprom, !dbg !12054
  %state3 = getelementptr inbounds %struct.myrb_devstate_name_entry, %struct.myrb_devstate_name_entry* %arrayidx, i32 0, i32 0, !dbg !12058
  %3 = load i8, i8* %state3, align 8, !dbg !12058
  %conv4 = zext i8 %3 to i32, !dbg !12054
  %4 = load i8, i8* %state.addr, align 1, !dbg !12059
  %conv5 = zext i8 %4 to i32, !dbg !12059
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !12060
  br i1 %cmp6, label %if.then, label %if.end, !dbg !12061

if.then:                                          ; preds = %for.body
  %5 = load %struct.myrb_devstate_name_entry*, %struct.myrb_devstate_name_entry** %entry1, align 8, !dbg !12062
  %6 = load i32, i32* %i, align 4, !dbg !12063
  %idxprom8 = sext i32 %6 to i64, !dbg !12062
  %arrayidx9 = getelementptr %struct.myrb_devstate_name_entry, %struct.myrb_devstate_name_entry* %5, i64 %idxprom8, !dbg !12062
  %name = getelementptr inbounds %struct.myrb_devstate_name_entry, %struct.myrb_devstate_name_entry* %arrayidx9, i32 0, i32 1, !dbg !12064
  %7 = load i8*, i8** %name, align 8, !dbg !12064
  store i8* %7, i8** %retval, align 8, !dbg !12065
  br label %return, !dbg !12065

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12066

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !12067
  %inc = add i32 %8, 1, !dbg !12067
  store i32 %inc, i32* %i, align 4, !dbg !12067
  br label %for.cond, !dbg !12068, !llvm.loop !12069

for.end:                                          ; preds = %for.cond
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), i8** %retval, align 8, !dbg !12071
  br label %return, !dbg !12071

return:                                           ; preds = %for.end, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !12072
  ret i8* %9, !dbg !12072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ctlr_num_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12073 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.Scsi_Host*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12074, metadata !DIExpression()), !dbg !12075
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12076, metadata !DIExpression()), !dbg !12077
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12078, metadata !DIExpression()), !dbg !12079
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12080, metadata !DIExpression()), !dbg !12081
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12082, metadata !DIExpression()), !dbg !12084
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12084
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12084
  store i8* %1, i8** %__mptr, align 8, !dbg !12084
  br label %do.body, !dbg !12084

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12085

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12084
  %add.ptr = getelementptr i8, i8* %2, i64 -1320, !dbg !12084
  %3 = bitcast i8* %add.ptr to %struct.Scsi_Host*, !dbg !12084
  store %struct.Scsi_Host* %3, %struct.Scsi_Host** %tmp, align 8, !dbg !12085
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %tmp, align 8, !dbg !12084
  store %struct.Scsi_Host* %4, %struct.Scsi_Host** %shost, align 8, !dbg !12081
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !12087, metadata !DIExpression()), !dbg !12088
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12089
  %call = call i8* @shost_priv(%struct.Scsi_Host* %5) #11, !dbg !12090
  %6 = bitcast i8* %call to %struct.myrb_hba*, !dbg !12090
  store %struct.myrb_hba* %6, %struct.myrb_hba** %cb, align 8, !dbg !12088
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !12091
  %8 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12092
  %ctlr_num = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %8, i32 0, i32 32, !dbg !12093
  %9 = load i32, i32* %ctlr_num, align 8, !dbg !12093
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %7, i64 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i32 %9) #11, !dbg !12094
  %conv = sext i32 %call1 to i64, !dbg !12094
  ret i64 %conv, !dbg !12095
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @model_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12096 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.Scsi_Host*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12097, metadata !DIExpression()), !dbg !12098
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12099, metadata !DIExpression()), !dbg !12100
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12101, metadata !DIExpression()), !dbg !12102
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12103, metadata !DIExpression()), !dbg !12104
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12105, metadata !DIExpression()), !dbg !12107
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12107
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12107
  store i8* %1, i8** %__mptr, align 8, !dbg !12107
  br label %do.body, !dbg !12107

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12108

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12107
  %add.ptr = getelementptr i8, i8* %2, i64 -1320, !dbg !12107
  %3 = bitcast i8* %add.ptr to %struct.Scsi_Host*, !dbg !12107
  store %struct.Scsi_Host* %3, %struct.Scsi_Host** %tmp, align 8, !dbg !12108
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %tmp, align 8, !dbg !12107
  store %struct.Scsi_Host* %4, %struct.Scsi_Host** %shost, align 8, !dbg !12104
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !12110, metadata !DIExpression()), !dbg !12111
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12112
  %call = call i8* @shost_priv(%struct.Scsi_Host* %5) #11, !dbg !12113
  %6 = bitcast i8* %call to %struct.myrb_hba*, !dbg !12113
  store %struct.myrb_hba* %6, %struct.myrb_hba** %cb, align 8, !dbg !12111
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !12114
  %8 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12115
  %model_name = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %8, i32 0, i32 33, !dbg !12116
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %model_name, i64 0, i64 0, !dbg !12115
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %7, i64 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i8* %arraydecay) #11, !dbg !12117
  %conv = sext i32 %call1 to i64, !dbg !12117
  ret i64 %conv, !dbg !12118
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @firmware_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12119 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.Scsi_Host*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12120, metadata !DIExpression()), !dbg !12121
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12122, metadata !DIExpression()), !dbg !12123
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12124, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12126, metadata !DIExpression()), !dbg !12127
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12128, metadata !DIExpression()), !dbg !12130
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12130
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12130
  store i8* %1, i8** %__mptr, align 8, !dbg !12130
  br label %do.body, !dbg !12130

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12131

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12130
  %add.ptr = getelementptr i8, i8* %2, i64 -1320, !dbg !12130
  %3 = bitcast i8* %add.ptr to %struct.Scsi_Host*, !dbg !12130
  store %struct.Scsi_Host* %3, %struct.Scsi_Host** %tmp, align 8, !dbg !12131
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %tmp, align 8, !dbg !12130
  store %struct.Scsi_Host* %4, %struct.Scsi_Host** %shost, align 8, !dbg !12127
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !12133, metadata !DIExpression()), !dbg !12134
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12135
  %call = call i8* @shost_priv(%struct.Scsi_Host* %5) #11, !dbg !12136
  %6 = bitcast i8* %call to %struct.myrb_hba*, !dbg !12136
  store %struct.myrb_hba* %6, %struct.myrb_hba** %cb, align 8, !dbg !12134
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !12137
  %8 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12138
  %fw_version = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %8, i32 0, i32 34, !dbg !12139
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %fw_version, i64 0, i64 0, !dbg !12138
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %7, i64 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i8* %arraydecay) #11, !dbg !12140
  %conv = sext i32 %call1 to i64, !dbg !12140
  ret i64 %conv, !dbg !12141
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @flush_cache_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12142 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.Scsi_Host*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %status = alloca i16, align 2
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12143, metadata !DIExpression()), !dbg !12144
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12145, metadata !DIExpression()), !dbg !12146
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12147, metadata !DIExpression()), !dbg !12148
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12149, metadata !DIExpression()), !dbg !12150
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12151, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12153, metadata !DIExpression()), !dbg !12155
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12155
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12155
  store i8* %1, i8** %__mptr, align 8, !dbg !12155
  br label %do.body, !dbg !12155

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12156

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12155
  %add.ptr = getelementptr i8, i8* %2, i64 -1320, !dbg !12155
  %3 = bitcast i8* %add.ptr to %struct.Scsi_Host*, !dbg !12155
  store %struct.Scsi_Host* %3, %struct.Scsi_Host** %tmp, align 8, !dbg !12156
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %tmp, align 8, !dbg !12155
  store %struct.Scsi_Host* %4, %struct.Scsi_Host** %shost, align 8, !dbg !12152
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !12158, metadata !DIExpression()), !dbg !12159
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12160
  %call = call i8* @shost_priv(%struct.Scsi_Host* %5) #11, !dbg !12161
  %6 = bitcast i8* %call to %struct.myrb_hba*, !dbg !12161
  store %struct.myrb_hba* %6, %struct.myrb_hba** %cb, align 8, !dbg !12159
  call void @llvm.dbg.declare(metadata i16* %status, metadata !12162, metadata !DIExpression()), !dbg !12163
  %7 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12164
  %call1 = call zeroext i16 @myrb_exec_type3(%struct.myrb_hba* %7, i8 zeroext 10, i64 0) #11, !dbg !12165
  store i16 %call1, i16* %status, align 2, !dbg !12166
  %8 = load i16, i16* %status, align 2, !dbg !12167
  %conv = zext i16 %8 to i32, !dbg !12167
  %cmp = icmp eq i32 %conv, 0, !dbg !12169
  br i1 %cmp, label %if.then, label %if.end, !dbg !12170

if.then:                                          ; preds = %do.end
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12171
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 47, !dbg !12171
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #12, !dbg !12171
  %10 = load i64, i64* %count.addr, align 8, !dbg !12173
  store i64 %10, i64* %retval, align 8, !dbg !12174
  br label %return, !dbg !12174

if.end:                                           ; preds = %do.end
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12175
  %shost_gendev3 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 47, !dbg !12175
  %12 = load i16, i16* %status, align 2, !dbg !12175
  %conv4 = zext i16 %12 to i32, !dbg !12175
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.54, i64 0, i64 0), i32 %conv4) #12, !dbg !12175
  store i64 -5, i64* %retval, align 8, !dbg !12176
  br label %return, !dbg !12176

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !12177
  ret i64 %13, !dbg !12177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @myrb_exec_type3(%struct.myrb_hba* %cb, i8 zeroext %op, i64 %addr) #0 !dbg !12178 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %op.addr = alloca i8, align 1
  %addr.addr = alloca i64, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %status = alloca i16, align 2
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !12181, metadata !DIExpression()), !dbg !12182
  store i8 %op, i8* %op.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %op.addr, metadata !12183, metadata !DIExpression()), !dbg !12184
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !12185, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !12187, metadata !DIExpression()), !dbg !12188
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !12189
  %dcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 52, !dbg !12190
  store %struct.myrb_cmdblk* %dcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12188
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !12191, metadata !DIExpression()), !dbg !12192
  %1 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12193
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %1, i32 0, i32 0, !dbg !12194
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12192
  call void @llvm.dbg.declare(metadata i16* %status, metadata !12195, metadata !DIExpression()), !dbg !12196
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !12197
  %dcmd_mutex = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 54, !dbg !12198
  call void @mutex_lock(%struct.mutex* %dcmd_mutex) #11, !dbg !12199
  %3 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12200
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %3) #11, !dbg !12201
  %4 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12202
  %type3 = bitcast %union.myrb_cmd_mbox* %4 to %struct.anon.78*, !dbg !12203
  %id = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type3, i32 0, i32 1, !dbg !12204
  store i8 1, i8* %id, align 1, !dbg !12205
  %5 = load i8, i8* %op.addr, align 1, !dbg !12206
  %6 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12207
  %type32 = bitcast %union.myrb_cmd_mbox* %6 to %struct.anon.78*, !dbg !12208
  %opcode = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type32, i32 0, i32 0, !dbg !12209
  store i8 %5, i8* %opcode, align 4, !dbg !12210
  %7 = load i64, i64* %addr.addr, align 8, !dbg !12211
  %conv = trunc i64 %7 to i32, !dbg !12211
  %8 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12212
  %type33 = bitcast %union.myrb_cmd_mbox* %8 to %struct.anon.78*, !dbg !12213
  %addr4 = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type33, i32 0, i32 3, !dbg !12214
  store i32 %conv, i32* %addr4, align 4, !dbg !12215
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !12216
  %10 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12217
  %call = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %9, %struct.myrb_cmdblk* %10) #11, !dbg !12218
  store i16 %call, i16* %status, align 2, !dbg !12219
  %11 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !12220
  %dcmd_mutex5 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %11, i32 0, i32 54, !dbg !12221
  call void @mutex_unlock(%struct.mutex* %dcmd_mutex5) #11, !dbg !12222
  %12 = load i16, i16* %status, align 2, !dbg !12223
  ret i16 %12, !dbg !12224
}

; Function Attrs: cold noredzone
declare dso_local void @dev_printk(i8*, %struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @rebuild_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12225 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %rbld_buf = alloca %struct.myrb_rbld_progress, align 4
  %status = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12226, metadata !DIExpression()), !dbg !12227
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12228, metadata !DIExpression()), !dbg !12229
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12230, metadata !DIExpression()), !dbg !12231
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !12232, metadata !DIExpression()), !dbg !12233
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12234, metadata !DIExpression()), !dbg !12236
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12236
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12236
  store i8* %1, i8** %__mptr, align 8, !dbg !12236
  br label %do.body, !dbg !12236

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12237

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12236
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !12236
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !12236
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !12237
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !12236
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !12233
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !12239, metadata !DIExpression()), !dbg !12240
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12241
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !12242
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12242
  %call = call i8* @shost_priv(%struct.Scsi_Host* %6) #11, !dbg !12243
  %7 = bitcast i8* %call to %struct.myrb_hba*, !dbg !12243
  store %struct.myrb_hba* %7, %struct.myrb_hba** %cb, align 8, !dbg !12240
  call void @llvm.dbg.declare(metadata %struct.myrb_rbld_progress* %rbld_buf, metadata !12244, metadata !DIExpression()), !dbg !12250
  call void @llvm.dbg.declare(metadata i8* %status, metadata !12251, metadata !DIExpression()), !dbg !12252
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12253
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 17, !dbg !12255
  %9 = load i32, i32* %channel, align 4, !dbg !12255
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12256
  %host1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 0, !dbg !12257
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host1, align 8, !dbg !12257
  %call2 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %11) #11, !dbg !12258
  %cmp = icmp ult i32 %9, %call2, !dbg !12259
  br i1 %cmp, label %if.then, label %if.end, !dbg !12260

if.then:                                          ; preds = %do.end
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !12261
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.56, i64 0, i64 0)) #11, !dbg !12262
  %conv = sext i32 %call3 to i64, !dbg !12262
  store i64 %conv, i64* %retval, align 8, !dbg !12263
  br label %return, !dbg !12263

if.end:                                           ; preds = %do.end
  %13 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12264
  %call4 = call zeroext i16 @myrb_get_rbld_progress(%struct.myrb_hba* %13, %struct.myrb_rbld_progress* %rbld_buf) #11, !dbg !12265
  %conv5 = trunc i16 %call4 to i8, !dbg !12265
  store i8 %conv5, i8* %status, align 1, !dbg !12266
  %ldev_num = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 0, !dbg !12267
  %14 = load i32, i32* %ldev_num, align 4, !dbg !12267
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12269
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %15, i32 0, i32 16, !dbg !12270
  %16 = load i32, i32* %id, align 8, !dbg !12270
  %cmp6 = icmp ne i32 %14, %16, !dbg !12271
  br i1 %cmp6, label %if.then11, label %lor.lhs.false, !dbg !12272

lor.lhs.false:                                    ; preds = %if.end
  %17 = load i8, i8* %status, align 1, !dbg !12273
  %conv8 = zext i8 %17 to i32, !dbg !12273
  %cmp9 = icmp ne i32 %conv8, 0, !dbg !12274
  br i1 %cmp9, label %if.then11, label %if.end14, !dbg !12275

if.then11:                                        ; preds = %lor.lhs.false, %if.end
  %18 = load i8*, i8** %buf.addr, align 8, !dbg !12276
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %18, i64 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i64 0, i64 0)) #11, !dbg !12277
  %conv13 = sext i32 %call12 to i64, !dbg !12277
  store i64 %conv13, i64* %retval, align 8, !dbg !12278
  br label %return, !dbg !12278

if.end14:                                         ; preds = %lor.lhs.false
  %19 = load i8*, i8** %buf.addr, align 8, !dbg !12279
  %ldev_size = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 1, !dbg !12280
  %20 = load i32, i32* %ldev_size, align 4, !dbg !12280
  %blocks_left = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 2, !dbg !12281
  %21 = load i32, i32* %blocks_left, align 4, !dbg !12281
  %sub = sub i32 %20, %21, !dbg !12282
  %ldev_size15 = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 1, !dbg !12283
  %22 = load i32, i32* %ldev_size15, align 4, !dbg !12283
  %call16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %19, i64 32, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i32 %sub, i32 %22) #11, !dbg !12284
  %conv17 = sext i32 %call16 to i64, !dbg !12284
  store i64 %conv17, i64* %retval, align 8, !dbg !12285
  br label %return, !dbg !12285

return:                                           ; preds = %if.end14, %if.then11, %if.then
  %23 = load i64, i64* %retval, align 8, !dbg !12286
  ret i64 %23, !dbg !12286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @rebuild_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12287 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %status = alloca i16, align 2
  %rc = alloca i32, align 4
  %start = alloca i32, align 4
  %msg = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %rate = alloca i8*, align 8
  %rate_addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12288, metadata !DIExpression()), !dbg !12289
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12290, metadata !DIExpression()), !dbg !12291
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12292, metadata !DIExpression()), !dbg !12293
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12294, metadata !DIExpression()), !dbg !12295
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !12296, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12298, metadata !DIExpression()), !dbg !12300
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12300
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12300
  store i8* %1, i8** %__mptr, align 8, !dbg !12300
  br label %do.body, !dbg !12300

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12301

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12300
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !12300
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !12300
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !12301
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !12300
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !12297
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !12303, metadata !DIExpression()), !dbg !12304
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12305
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !12306
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12306
  %call = call i8* @shost_priv(%struct.Scsi_Host* %6) #11, !dbg !12307
  %7 = bitcast i8* %call to %struct.myrb_hba*, !dbg !12307
  store %struct.myrb_hba* %7, %struct.myrb_hba** %cb, align 8, !dbg !12304
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !12308, metadata !DIExpression()), !dbg !12309
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !12310, metadata !DIExpression()), !dbg !12311
  call void @llvm.dbg.declare(metadata i16* %status, metadata !12312, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12314, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.declare(metadata i32* %start, metadata !12316, metadata !DIExpression()), !dbg !12317
  call void @llvm.dbg.declare(metadata i8** %msg, metadata !12318, metadata !DIExpression()), !dbg !12319
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !12320
  %call1 = call i32 @kstrtoint(i8* %8, i32 0, i32* %start) #11, !dbg !12321
  store i32 %call1, i32* %rc, align 4, !dbg !12322
  %9 = load i32, i32* %rc, align 4, !dbg !12323
  %tobool = icmp ne i32 %9, 0, !dbg !12323
  br i1 %tobool, label %if.then, label %if.end, !dbg !12325

if.then:                                          ; preds = %do.end
  %10 = load i32, i32* %rc, align 4, !dbg !12326
  %conv = sext i32 %10 to i64, !dbg !12326
  store i64 %conv, i64* %retval, align 8, !dbg !12327
  br label %return, !dbg !12327

if.end:                                           ; preds = %do.end
  %11 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12328
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %11, i32 0, i32 17, !dbg !12330
  %12 = load i32, i32* %channel, align 4, !dbg !12330
  %13 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12331
  %host2 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %13, i32 0, i32 0, !dbg !12332
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host2, align 8, !dbg !12332
  %call3 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %14) #11, !dbg !12333
  %cmp = icmp uge i32 %12, %call3, !dbg !12334
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !12335

if.then5:                                         ; preds = %if.end
  store i64 -6, i64* %retval, align 8, !dbg !12336
  br label %return, !dbg !12336

if.end6:                                          ; preds = %if.end
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12337
  %call7 = call zeroext i16 @myrb_get_rbld_progress(%struct.myrb_hba* %15, %struct.myrb_rbld_progress* null) #11, !dbg !12338
  store i16 %call7, i16* %status, align 2, !dbg !12339
  %16 = load i32, i32* %start, align 4, !dbg !12340
  %tobool8 = icmp ne i32 %16, 0, !dbg !12340
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !12342

if.then9:                                         ; preds = %if.end6
  %17 = load i16, i16* %status, align 2, !dbg !12343
  %conv10 = zext i16 %17 to i32, !dbg !12343
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !12346
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !12347

if.then13:                                        ; preds = %if.then9
  %18 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12348
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %18, i8* null, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0)) #11, !dbg !12348
  store i64 -114, i64* %retval, align 8, !dbg !12350
  br label %return, !dbg !12350

if.end14:                                         ; preds = %if.then9
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12351
  %dcmd_mutex = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 54, !dbg !12352
  call void @mutex_lock(%struct.mutex* %dcmd_mutex) #11, !dbg !12353
  %20 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12354
  %dcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %20, i32 0, i32 52, !dbg !12355
  store %struct.myrb_cmdblk* %dcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12356
  %21 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12357
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %21) #11, !dbg !12358
  %22 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12359
  %mbox15 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %22, i32 0, i32 0, !dbg !12360
  store %union.myrb_cmd_mbox* %mbox15, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12361
  %23 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12362
  %type3D = bitcast %union.myrb_cmd_mbox* %23 to %struct.anon.81*, !dbg !12363
  %opcode = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D, i32 0, i32 0, !dbg !12364
  store i8 22, i8* %opcode, align 4, !dbg !12365
  %24 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12366
  %type3D16 = bitcast %union.myrb_cmd_mbox* %24 to %struct.anon.81*, !dbg !12367
  %id = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D16, i32 0, i32 1, !dbg !12368
  store i8 1, i8* %id, align 1, !dbg !12369
  %25 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12370
  %channel17 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %25, i32 0, i32 17, !dbg !12371
  %26 = load i32, i32* %channel17, align 4, !dbg !12371
  %conv18 = trunc i32 %26 to i8, !dbg !12370
  %27 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12372
  %type3D19 = bitcast %union.myrb_cmd_mbox* %27 to %struct.anon.81*, !dbg !12373
  %channel20 = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D19, i32 0, i32 2, !dbg !12374
  store i8 %conv18, i8* %channel20, align 2, !dbg !12375
  %28 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12376
  %id21 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %28, i32 0, i32 16, !dbg !12377
  %29 = load i32, i32* %id21, align 8, !dbg !12377
  %conv22 = trunc i32 %29 to i8, !dbg !12376
  %30 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12378
  %type3D23 = bitcast %union.myrb_cmd_mbox* %30 to %struct.anon.81*, !dbg !12379
  %target = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D23, i32 0, i32 3, !dbg !12380
  store i8 %conv22, i8* %target, align 1, !dbg !12381
  %31 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12382
  %32 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12383
  %call24 = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %31, %struct.myrb_cmdblk* %32) #11, !dbg !12384
  store i16 %call24, i16* %status, align 2, !dbg !12385
  %33 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12386
  %dcmd_mutex25 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %33, i32 0, i32 54, !dbg !12387
  call void @mutex_unlock(%struct.mutex* %dcmd_mutex25) #11, !dbg !12388
  br label %if.end50, !dbg !12389

if.else:                                          ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12390, metadata !DIExpression()), !dbg !12392
  %34 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12393
  %pdev26 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %34, i32 0, i32 17, !dbg !12394
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev26, align 8, !dbg !12394
  store %struct.pci_dev* %35, %struct.pci_dev** %pdev, align 8, !dbg !12392
  call void @llvm.dbg.declare(metadata i8** %rate, metadata !12395, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.declare(metadata i64* %rate_addr, metadata !12397, metadata !DIExpression()), !dbg !12398
  %36 = load i16, i16* %status, align 2, !dbg !12399
  %conv27 = zext i16 %36 to i32, !dbg !12399
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !12401
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !12402

if.then30:                                        ; preds = %if.else
  %37 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12403
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %37, i8* null, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.60, i64 0, i64 0)) #11, !dbg !12403
  store i64 0, i64* %retval, align 8, !dbg !12405
  br label %return, !dbg !12405

if.end31:                                         ; preds = %if.else
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12406
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !12407
  %call33 = call i8* @dma_alloc_coherent(%struct.device* %dev32, i64 1, i64* %rate_addr, i32 3264) #11, !dbg !12408
  store i8* %call33, i8** %rate, align 8, !dbg !12409
  %39 = load i8*, i8** %rate, align 8, !dbg !12410
  %cmp34 = icmp eq i8* %39, null, !dbg !12412
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !12413

if.then36:                                        ; preds = %if.end31
  %40 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12414
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %40, i8* null, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.61, i64 0, i64 0)) #11, !dbg !12414
  store i64 -12, i64* %retval, align 8, !dbg !12416
  br label %return, !dbg !12416

if.end37:                                         ; preds = %if.end31
  %41 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12417
  %dcmd_mutex38 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %41, i32 0, i32 54, !dbg !12418
  call void @mutex_lock(%struct.mutex* %dcmd_mutex38) #11, !dbg !12419
  %42 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12420
  %dcmd_blk39 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %42, i32 0, i32 52, !dbg !12421
  store %struct.myrb_cmdblk* %dcmd_blk39, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12422
  %43 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12423
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %43) #11, !dbg !12424
  %44 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12425
  %mbox40 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %44, i32 0, i32 0, !dbg !12426
  store %union.myrb_cmd_mbox* %mbox40, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12427
  %45 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12428
  %type3R = bitcast %union.myrb_cmd_mbox* %45 to %struct.anon.83*, !dbg !12429
  %opcode41 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %type3R, i32 0, i32 0, !dbg !12430
  store i8 31, i8* %opcode41, align 4, !dbg !12431
  %46 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12432
  %type3R42 = bitcast %union.myrb_cmd_mbox* %46 to %struct.anon.83*, !dbg !12433
  %id43 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %type3R42, i32 0, i32 1, !dbg !12434
  store i8 1, i8* %id43, align 1, !dbg !12435
  %47 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12436
  %type3R44 = bitcast %union.myrb_cmd_mbox* %47 to %struct.anon.83*, !dbg !12437
  %rbld_rate = getelementptr inbounds %struct.anon.83, %struct.anon.83* %type3R44, i32 0, i32 3, !dbg !12438
  store i8 -1, i8* %rbld_rate, align 4, !dbg !12439
  %48 = load i64, i64* %rate_addr, align 8, !dbg !12440
  %conv45 = trunc i64 %48 to i32, !dbg !12440
  %49 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12441
  %type3R46 = bitcast %union.myrb_cmd_mbox* %49 to %struct.anon.83*, !dbg !12442
  %addr = getelementptr inbounds %struct.anon.83, %struct.anon.83* %type3R46, i32 0, i32 5, !dbg !12443
  store i32 %conv45, i32* %addr, align 4, !dbg !12444
  %50 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12445
  %51 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12446
  %call47 = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %50, %struct.myrb_cmdblk* %51) #11, !dbg !12447
  store i16 %call47, i16* %status, align 2, !dbg !12448
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12449
  %dev48 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %52, i32 0, i32 41, !dbg !12450
  %53 = load i8*, i8** %rate, align 8, !dbg !12451
  %54 = load i64, i64* %rate_addr, align 8, !dbg !12452
  call void @dma_free_coherent(%struct.device* %dev48, i64 1, i8* %53, i64 %54) #11, !dbg !12453
  %55 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12454
  %dcmd_mutex49 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %55, i32 0, i32 54, !dbg !12455
  call void @mutex_unlock(%struct.mutex* %dcmd_mutex49) #11, !dbg !12456
  br label %if.end50

if.end50:                                         ; preds = %if.end37, %if.end14
  %56 = load i16, i16* %status, align 2, !dbg !12457
  %conv51 = zext i16 %56 to i32, !dbg !12457
  %cmp52 = icmp eq i32 %conv51, 0, !dbg !12459
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !12460

if.then54:                                        ; preds = %if.end50
  %57 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12461
  %58 = load i32, i32* %start, align 4, !dbg !12461
  %tobool55 = icmp ne i32 %58, 0, !dbg !12461
  %59 = zext i1 %tobool55 to i64, !dbg !12461
  %cond = select i1 %tobool55, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0), !dbg !12461
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %57, i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62, i64 0, i64 0), i8* %cond) #11, !dbg !12461
  %60 = load i64, i64* %count.addr, align 8, !dbg !12463
  store i64 %60, i64* %retval, align 8, !dbg !12464
  br label %return, !dbg !12464

if.end56:                                         ; preds = %if.end50
  %61 = load i32, i32* %start, align 4, !dbg !12465
  %tobool57 = icmp ne i32 %61, 0, !dbg !12465
  br i1 %tobool57, label %if.end60, label %if.then58, !dbg !12467

if.then58:                                        ; preds = %if.end56
  %62 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12468
  %63 = load i16, i16* %status, align 2, !dbg !12468
  %conv59 = zext i16 %63 to i32, !dbg !12468
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %62, i8* null, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.65, i64 0, i64 0), i32 %conv59) #11, !dbg !12468
  store i64 -5, i64* %retval, align 8, !dbg !12470
  br label %return, !dbg !12470

if.end60:                                         ; preds = %if.end56
  %64 = load i16, i16* %status, align 2, !dbg !12471
  %conv61 = zext i16 %64 to i32, !dbg !12471
  switch i32 %conv61, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb62
    i32 261, label %sw.bb63
    i32 262, label %sw.bb64
  ], !dbg !12472

sw.bb:                                            ; preds = %if.end60
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.66, i64 0, i64 0), i8** %msg, align 8, !dbg !12473
  br label %sw.epilog, !dbg !12475

sw.bb62:                                          ; preds = %if.end60
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.67, i64 0, i64 0), i8** %msg, align 8, !dbg !12476
  br label %sw.epilog, !dbg !12477

sw.bb63:                                          ; preds = %if.end60
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i64 0, i64 0), i8** %msg, align 8, !dbg !12478
  br label %sw.epilog, !dbg !12479

sw.bb64:                                          ; preds = %if.end60
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.69, i64 0, i64 0), i8** %msg, align 8, !dbg !12480
  br label %sw.epilog, !dbg !12481

sw.default:                                       ; preds = %if.end60
  store i8* null, i8** %msg, align 8, !dbg !12482
  br label %sw.epilog, !dbg !12483

sw.epilog:                                        ; preds = %sw.default, %sw.bb64, %sw.bb63, %sw.bb62, %sw.bb
  %65 = load i8*, i8** %msg, align 8, !dbg !12484
  %tobool65 = icmp ne i8* %65, null, !dbg !12484
  br i1 %tobool65, label %if.then66, label %if.else67, !dbg !12486

if.then66:                                        ; preds = %sw.epilog
  %66 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12487
  %67 = load i8*, i8** %msg, align 8, !dbg !12487
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %66, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.70, i64 0, i64 0), i8* %67) #11, !dbg !12487
  br label %if.end69, !dbg !12487

if.else67:                                        ; preds = %sw.epilog
  %68 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12488
  %69 = load i16, i16* %status, align 2, !dbg !12488
  %conv68 = zext i16 %69 to i32, !dbg !12488
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %68, i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i64 0, i64 0), i32 %conv68) #11, !dbg !12488
  br label %if.end69

if.end69:                                         ; preds = %if.else67, %if.then66
  store i64 -5, i64* %retval, align 8, !dbg !12489
  br label %return, !dbg !12489

return:                                           ; preds = %if.end69, %if.then58, %if.then54, %if.then36, %if.then30, %if.then13, %if.then5, %if.then
  %70 = load i64, i64* %retval, align 8, !dbg !12490
  ret i64 %70, !dbg !12490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @myrb_get_rbld_progress(%struct.myrb_hba* %cb, %struct.myrb_rbld_progress* %rbld) #0 !dbg !12491 {
entry:
  %retval = alloca i16, align 2
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %rbld.addr = alloca %struct.myrb_rbld_progress*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %rbld_buf = alloca %struct.myrb_rbld_progress*, align 8
  %rbld_addr = alloca i64, align 8
  %status = alloca i16, align 2
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !12495, metadata !DIExpression()), !dbg !12496
  store %struct.myrb_rbld_progress* %rbld, %struct.myrb_rbld_progress** %rbld.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_rbld_progress** %rbld.addr, metadata !12497, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !12499, metadata !DIExpression()), !dbg !12500
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !12501
  %mcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 53, !dbg !12502
  store %struct.myrb_cmdblk* %mcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12500
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !12503, metadata !DIExpression()), !dbg !12504
  %1 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12505
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %1, i32 0, i32 0, !dbg !12506
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12504
  call void @llvm.dbg.declare(metadata %struct.myrb_rbld_progress** %rbld_buf, metadata !12507, metadata !DIExpression()), !dbg !12508
  call void @llvm.dbg.declare(metadata i64* %rbld_addr, metadata !12509, metadata !DIExpression()), !dbg !12510
  call void @llvm.dbg.declare(metadata i16* %status, metadata !12511, metadata !DIExpression()), !dbg !12512
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !12513
  %pdev = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 17, !dbg !12514
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12514
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !12515
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 12, i64* %rbld_addr, i32 3264) #11, !dbg !12516
  %4 = bitcast i8* %call to %struct.myrb_rbld_progress*, !dbg !12516
  store %struct.myrb_rbld_progress* %4, %struct.myrb_rbld_progress** %rbld_buf, align 8, !dbg !12517
  %5 = load %struct.myrb_rbld_progress*, %struct.myrb_rbld_progress** %rbld_buf, align 8, !dbg !12518
  %tobool = icmp ne %struct.myrb_rbld_progress* %5, null, !dbg !12518
  br i1 %tobool, label %if.end, label %if.then, !dbg !12520

if.then:                                          ; preds = %entry
  store i16 264, i16* %retval, align 2, !dbg !12521
  br label %return, !dbg !12521

if.end:                                           ; preds = %entry
  %6 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12522
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %6) #11, !dbg !12523
  %7 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12524
  %type3 = bitcast %union.myrb_cmd_mbox* %7 to %struct.anon.78*, !dbg !12525
  %id = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type3, i32 0, i32 1, !dbg !12526
  store i8 2, i8* %id, align 1, !dbg !12527
  %8 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12528
  %type32 = bitcast %union.myrb_cmd_mbox* %8 to %struct.anon.78*, !dbg !12529
  %opcode = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type32, i32 0, i32 0, !dbg !12530
  store i8 39, i8* %opcode, align 4, !dbg !12531
  %9 = load i64, i64* %rbld_addr, align 8, !dbg !12532
  %conv = trunc i64 %9 to i32, !dbg !12532
  %10 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12533
  %type33 = bitcast %union.myrb_cmd_mbox* %10 to %struct.anon.78*, !dbg !12534
  %addr = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type33, i32 0, i32 3, !dbg !12535
  store i32 %conv, i32* %addr, align 4, !dbg !12536
  %11 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !12537
  %12 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12538
  %call4 = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %11, %struct.myrb_cmdblk* %12) #11, !dbg !12539
  store i16 %call4, i16* %status, align 2, !dbg !12540
  %13 = load %struct.myrb_rbld_progress*, %struct.myrb_rbld_progress** %rbld.addr, align 8, !dbg !12541
  %tobool5 = icmp ne %struct.myrb_rbld_progress* %13, null, !dbg !12541
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !12543

if.then6:                                         ; preds = %if.end
  %14 = load %struct.myrb_rbld_progress*, %struct.myrb_rbld_progress** %rbld.addr, align 8, !dbg !12544
  %15 = bitcast %struct.myrb_rbld_progress* %14 to i8*, !dbg !12545
  %16 = load %struct.myrb_rbld_progress*, %struct.myrb_rbld_progress** %rbld_buf, align 8, !dbg !12546
  %17 = bitcast %struct.myrb_rbld_progress* %16 to i8*, !dbg !12545
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %17, i64 12, i1 false), !dbg !12545
  br label %if.end7, !dbg !12545

if.end7:                                          ; preds = %if.then6, %if.end
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !12547
  %pdev8 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 17, !dbg !12548
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev8, align 8, !dbg !12548
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !12549
  %20 = load %struct.myrb_rbld_progress*, %struct.myrb_rbld_progress** %rbld_buf, align 8, !dbg !12550
  %21 = bitcast %struct.myrb_rbld_progress* %20 to i8*, !dbg !12550
  %22 = load i64, i64* %rbld_addr, align 8, !dbg !12551
  call void @dma_free_coherent(%struct.device* %dev9, i64 12, i8* %21, i64 %22) #11, !dbg !12552
  %23 = load i16, i16* %status, align 2, !dbg !12553
  store i16 %23, i16* %retval, align 2, !dbg !12554
  br label %return, !dbg !12554

return:                                           ; preds = %if.end7, %if.then
  %24 = load i16, i16* %retval, align 2, !dbg !12555
  ret i16 %24, !dbg !12555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #0 !dbg !12556 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12559, metadata !DIExpression()), !dbg !12560
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12561, metadata !DIExpression()), !dbg !12562
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !12563, metadata !DIExpression()), !dbg !12564
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !12565, metadata !DIExpression()), !dbg !12566
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12567
  %1 = load i64, i64* %size.addr, align 8, !dbg !12568
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !12569
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !12570
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #11, !dbg !12571
  ret void, !dbg !12572
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @kstrtoint(i8*, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @consistency_check_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12573 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12574, metadata !DIExpression()), !dbg !12575
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12576, metadata !DIExpression()), !dbg !12577
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12578, metadata !DIExpression()), !dbg !12579
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12580
  %1 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !12581
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12582
  %call = call i64 @rebuild_show(%struct.device* %0, %struct.device_attribute* %1, i8* %2) #11, !dbg !12583
  ret i64 %call, !dbg !12584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @consistency_check_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12585 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %rbld_buf = alloca %struct.myrb_rbld_progress, align 4
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %ldev_num = alloca i16, align 2
  %status = alloca i16, align 2
  %rc = alloca i32, align 4
  %start = alloca i32, align 4
  %msg = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %rate = alloca i8*, align 8
  %rate_addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12586, metadata !DIExpression()), !dbg !12587
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12588, metadata !DIExpression()), !dbg !12589
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12590, metadata !DIExpression()), !dbg !12591
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12592, metadata !DIExpression()), !dbg !12593
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !12594, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12596, metadata !DIExpression()), !dbg !12598
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12598
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12598
  store i8* %1, i8** %__mptr, align 8, !dbg !12598
  br label %do.body, !dbg !12598

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12599

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12598
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !12598
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !12598
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !12599
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !12598
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !12595
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !12601, metadata !DIExpression()), !dbg !12602
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12603
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !12604
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12604
  %call = call i8* @shost_priv(%struct.Scsi_Host* %6) #11, !dbg !12605
  %7 = bitcast i8* %call to %struct.myrb_hba*, !dbg !12605
  store %struct.myrb_hba* %7, %struct.myrb_hba** %cb, align 8, !dbg !12602
  call void @llvm.dbg.declare(metadata %struct.myrb_rbld_progress* %rbld_buf, metadata !12606, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !12608, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !12610, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.declare(metadata i16* %ldev_num, metadata !12612, metadata !DIExpression()), !dbg !12613
  store i16 -1, i16* %ldev_num, align 2, !dbg !12613
  call void @llvm.dbg.declare(metadata i16* %status, metadata !12614, metadata !DIExpression()), !dbg !12615
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12616, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.declare(metadata i32* %start, metadata !12618, metadata !DIExpression()), !dbg !12619
  call void @llvm.dbg.declare(metadata i8** %msg, metadata !12620, metadata !DIExpression()), !dbg !12621
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !12622
  %call1 = call i32 @kstrtoint(i8* %8, i32 0, i32* %start) #11, !dbg !12623
  store i32 %call1, i32* %rc, align 4, !dbg !12624
  %9 = load i32, i32* %rc, align 4, !dbg !12625
  %tobool = icmp ne i32 %9, 0, !dbg !12625
  br i1 %tobool, label %if.then, label %if.end, !dbg !12627

if.then:                                          ; preds = %do.end
  %10 = load i32, i32* %rc, align 4, !dbg !12628
  %conv = sext i32 %10 to i64, !dbg !12628
  store i64 %conv, i64* %retval, align 8, !dbg !12629
  br label %return, !dbg !12629

if.end:                                           ; preds = %do.end
  %11 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12630
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %11, i32 0, i32 17, !dbg !12632
  %12 = load i32, i32* %channel, align 4, !dbg !12632
  %13 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12633
  %host2 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %13, i32 0, i32 0, !dbg !12634
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host2, align 8, !dbg !12634
  %call3 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %14) #11, !dbg !12635
  %cmp = icmp ult i32 %12, %call3, !dbg !12636
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !12637

if.then5:                                         ; preds = %if.end
  store i64 -6, i64* %retval, align 8, !dbg !12638
  br label %return, !dbg !12638

if.end6:                                          ; preds = %if.end
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12639
  %call7 = call zeroext i16 @myrb_get_rbld_progress(%struct.myrb_hba* %15, %struct.myrb_rbld_progress* %rbld_buf) #11, !dbg !12640
  store i16 %call7, i16* %status, align 2, !dbg !12641
  %16 = load i32, i32* %start, align 4, !dbg !12642
  %tobool8 = icmp ne i32 %16, 0, !dbg !12642
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !12644

if.then9:                                         ; preds = %if.end6
  %17 = load i16, i16* %status, align 2, !dbg !12645
  %conv10 = zext i16 %17 to i32, !dbg !12645
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !12648
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !12649

if.then13:                                        ; preds = %if.then9
  %18 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12650
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %18, i8* null, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.73, i64 0, i64 0)) #11, !dbg !12650
  store i64 -114, i64* %retval, align 8, !dbg !12652
  br label %return, !dbg !12652

if.end14:                                         ; preds = %if.then9
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12653
  %dcmd_mutex = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 54, !dbg !12654
  call void @mutex_lock(%struct.mutex* %dcmd_mutex) #11, !dbg !12655
  %20 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12656
  %dcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %20, i32 0, i32 52, !dbg !12657
  store %struct.myrb_cmdblk* %dcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12658
  %21 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12659
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %21) #11, !dbg !12660
  %22 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12661
  %mbox15 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %22, i32 0, i32 0, !dbg !12662
  store %union.myrb_cmd_mbox* %mbox15, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12663
  %23 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12664
  %type3C = bitcast %union.myrb_cmd_mbox* %23 to %struct.anon.80*, !dbg !12665
  %opcode = getelementptr inbounds %struct.anon.80, %struct.anon.80* %type3C, i32 0, i32 0, !dbg !12666
  store i8 30, i8* %opcode, align 4, !dbg !12667
  %24 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12668
  %type3C16 = bitcast %union.myrb_cmd_mbox* %24 to %struct.anon.80*, !dbg !12669
  %id = getelementptr inbounds %struct.anon.80, %struct.anon.80* %type3C16, i32 0, i32 1, !dbg !12670
  store i8 1, i8* %id, align 1, !dbg !12671
  %25 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12672
  %id17 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %25, i32 0, i32 16, !dbg !12673
  %26 = load i32, i32* %id17, align 8, !dbg !12673
  %conv18 = trunc i32 %26 to i8, !dbg !12672
  %27 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12674
  %type3C19 = bitcast %union.myrb_cmd_mbox* %27 to %struct.anon.80*, !dbg !12675
  %ldev_num20 = getelementptr inbounds %struct.anon.80, %struct.anon.80* %type3C19, i32 0, i32 3, !dbg !12676
  %bf.load = load i8, i8* %ldev_num20, align 1, !dbg !12677
  %bf.value = and i8 %conv18, 63, !dbg !12677
  %bf.clear = and i8 %bf.load, -64, !dbg !12677
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !12677
  store i8 %bf.set, i8* %ldev_num20, align 1, !dbg !12677
  %28 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12678
  %type3C21 = bitcast %union.myrb_cmd_mbox* %28 to %struct.anon.80*, !dbg !12679
  %auto_restore = getelementptr inbounds %struct.anon.80, %struct.anon.80* %type3C21, i32 0, i32 3, !dbg !12680
  %bf.load22 = load i8, i8* %auto_restore, align 1, !dbg !12681
  %bf.clear23 = and i8 %bf.load22, -65, !dbg !12681
  %bf.set24 = or i8 %bf.clear23, 64, !dbg !12681
  store i8 %bf.set24, i8* %auto_restore, align 1, !dbg !12681
  %29 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12682
  %30 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12683
  %call25 = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %29, %struct.myrb_cmdblk* %30) #11, !dbg !12684
  store i16 %call25, i16* %status, align 2, !dbg !12685
  %31 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12686
  %dcmd_mutex26 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %31, i32 0, i32 54, !dbg !12687
  call void @mutex_unlock(%struct.mutex* %dcmd_mutex26) #11, !dbg !12688
  br label %if.end52, !dbg !12689

if.else:                                          ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12690, metadata !DIExpression()), !dbg !12692
  %32 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12693
  %pdev27 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %32, i32 0, i32 17, !dbg !12694
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev27, align 8, !dbg !12694
  store %struct.pci_dev* %33, %struct.pci_dev** %pdev, align 8, !dbg !12692
  call void @llvm.dbg.declare(metadata i8** %rate, metadata !12695, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.declare(metadata i64* %rate_addr, metadata !12697, metadata !DIExpression()), !dbg !12698
  %34 = load i16, i16* %ldev_num, align 2, !dbg !12699
  %conv28 = zext i16 %34 to i32, !dbg !12699
  %35 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12701
  %id29 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %35, i32 0, i32 16, !dbg !12702
  %36 = load i32, i32* %id29, align 8, !dbg !12702
  %cmp30 = icmp ne i32 %conv28, %36, !dbg !12703
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !12704

if.then32:                                        ; preds = %if.else
  %37 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12705
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %37, i8* null, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.74, i64 0, i64 0)) #11, !dbg !12705
  store i64 0, i64* %retval, align 8, !dbg !12707
  br label %return, !dbg !12707

if.end33:                                         ; preds = %if.else
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12708
  %dev34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !12709
  %call35 = call i8* @dma_alloc_coherent(%struct.device* %dev34, i64 1, i64* %rate_addr, i32 3264) #11, !dbg !12710
  store i8* %call35, i8** %rate, align 8, !dbg !12711
  %39 = load i8*, i8** %rate, align 8, !dbg !12712
  %cmp36 = icmp eq i8* %39, null, !dbg !12714
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !12715

if.then38:                                        ; preds = %if.end33
  %40 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12716
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %40, i8* null, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.75, i64 0, i64 0)) #11, !dbg !12716
  store i64 -12, i64* %retval, align 8, !dbg !12718
  br label %return, !dbg !12718

if.end39:                                         ; preds = %if.end33
  %41 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12719
  %dcmd_mutex40 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %41, i32 0, i32 54, !dbg !12720
  call void @mutex_lock(%struct.mutex* %dcmd_mutex40) #11, !dbg !12721
  %42 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12722
  %dcmd_blk41 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %42, i32 0, i32 52, !dbg !12723
  store %struct.myrb_cmdblk* %dcmd_blk41, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12724
  %43 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12725
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %43) #11, !dbg !12726
  %44 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12727
  %mbox42 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %44, i32 0, i32 0, !dbg !12728
  store %union.myrb_cmd_mbox* %mbox42, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12729
  %45 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12730
  %type3R = bitcast %union.myrb_cmd_mbox* %45 to %struct.anon.83*, !dbg !12731
  %opcode43 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %type3R, i32 0, i32 0, !dbg !12732
  store i8 31, i8* %opcode43, align 4, !dbg !12733
  %46 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12734
  %type3R44 = bitcast %union.myrb_cmd_mbox* %46 to %struct.anon.83*, !dbg !12735
  %id45 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %type3R44, i32 0, i32 1, !dbg !12736
  store i8 1, i8* %id45, align 1, !dbg !12737
  %47 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12738
  %type3R46 = bitcast %union.myrb_cmd_mbox* %47 to %struct.anon.83*, !dbg !12739
  %rbld_rate = getelementptr inbounds %struct.anon.83, %struct.anon.83* %type3R46, i32 0, i32 3, !dbg !12740
  store i8 -1, i8* %rbld_rate, align 4, !dbg !12741
  %48 = load i64, i64* %rate_addr, align 8, !dbg !12742
  %conv47 = trunc i64 %48 to i32, !dbg !12742
  %49 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !12743
  %type3R48 = bitcast %union.myrb_cmd_mbox* %49 to %struct.anon.83*, !dbg !12744
  %addr = getelementptr inbounds %struct.anon.83, %struct.anon.83* %type3R48, i32 0, i32 5, !dbg !12745
  store i32 %conv47, i32* %addr, align 4, !dbg !12746
  %50 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12747
  %51 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !12748
  %call49 = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %50, %struct.myrb_cmdblk* %51) #11, !dbg !12749
  store i16 %call49, i16* %status, align 2, !dbg !12750
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12751
  %dev50 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %52, i32 0, i32 41, !dbg !12752
  %53 = load i8*, i8** %rate, align 8, !dbg !12753
  %54 = load i64, i64* %rate_addr, align 8, !dbg !12754
  call void @dma_free_coherent(%struct.device* %dev50, i64 1, i8* %53, i64 %54) #11, !dbg !12755
  %55 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12756
  %dcmd_mutex51 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %55, i32 0, i32 54, !dbg !12757
  call void @mutex_unlock(%struct.mutex* %dcmd_mutex51) #11, !dbg !12758
  br label %if.end52

if.end52:                                         ; preds = %if.end39, %if.end14
  %56 = load i16, i16* %status, align 2, !dbg !12759
  %conv53 = zext i16 %56 to i32, !dbg !12759
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !12761
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !12762

if.then56:                                        ; preds = %if.end52
  %57 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12763
  %58 = load i32, i32* %start, align 4, !dbg !12763
  %tobool57 = icmp ne i32 %58, 0, !dbg !12763
  %59 = zext i1 %tobool57 to i64, !dbg !12763
  %cond = select i1 %tobool57, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0), !dbg !12763
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %57, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.76, i64 0, i64 0), i8* %cond) #11, !dbg !12763
  %60 = load i64, i64* %count.addr, align 8, !dbg !12765
  store i64 %60, i64* %retval, align 8, !dbg !12766
  br label %return, !dbg !12766

if.end58:                                         ; preds = %if.end52
  %61 = load i32, i32* %start, align 4, !dbg !12767
  %tobool59 = icmp ne i32 %61, 0, !dbg !12767
  br i1 %tobool59, label %if.end62, label %if.then60, !dbg !12769

if.then60:                                        ; preds = %if.end58
  %62 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12770
  %63 = load i16, i16* %status, align 2, !dbg !12770
  %conv61 = zext i16 %63 to i32, !dbg !12770
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %62, i8* null, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.77, i64 0, i64 0), i32 %conv61) #11, !dbg !12770
  store i64 -5, i64* %retval, align 8, !dbg !12772
  br label %return, !dbg !12772

if.end62:                                         ; preds = %if.end58
  %64 = load i16, i16* %status, align 2, !dbg !12773
  %conv63 = zext i16 %64 to i32, !dbg !12773
  switch i32 %conv63, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb64
    i32 261, label %sw.bb65
    i32 262, label %sw.bb66
  ], !dbg !12774

sw.bb:                                            ; preds = %if.end62
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.78, i64 0, i64 0), i8** %msg, align 8, !dbg !12775
  br label %sw.epilog, !dbg !12777

sw.bb64:                                          ; preds = %if.end62
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.67, i64 0, i64 0), i8** %msg, align 8, !dbg !12778
  br label %sw.epilog, !dbg !12779

sw.bb65:                                          ; preds = %if.end62
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.79, i64 0, i64 0), i8** %msg, align 8, !dbg !12780
  br label %sw.epilog, !dbg !12781

sw.bb66:                                          ; preds = %if.end62
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.69, i64 0, i64 0), i8** %msg, align 8, !dbg !12782
  br label %sw.epilog, !dbg !12783

sw.default:                                       ; preds = %if.end62
  store i8* null, i8** %msg, align 8, !dbg !12784
  br label %sw.epilog, !dbg !12785

sw.epilog:                                        ; preds = %sw.default, %sw.bb66, %sw.bb65, %sw.bb64, %sw.bb
  %65 = load i8*, i8** %msg, align 8, !dbg !12786
  %tobool67 = icmp ne i8* %65, null, !dbg !12786
  br i1 %tobool67, label %if.then68, label %if.else69, !dbg !12788

if.then68:                                        ; preds = %sw.epilog
  %66 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12789
  %67 = load i8*, i8** %msg, align 8, !dbg !12789
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %66, i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.80, i64 0, i64 0), i8* %67) #11, !dbg !12789
  br label %if.end71, !dbg !12789

if.else69:                                        ; preds = %sw.epilog
  %68 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12790
  %69 = load i16, i16* %status, align 2, !dbg !12790
  %conv70 = zext i16 %69 to i32, !dbg !12790
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %68, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.81, i64 0, i64 0), i32 %conv70) #11, !dbg !12790
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %if.then68
  store i64 -5, i64* %retval, align 8, !dbg !12791
  br label %return, !dbg !12791

return:                                           ; preds = %if.end71, %if.then60, %if.then56, %if.then38, %if.then32, %if.then13, %if.then5, %if.then
  %70 = load i64, i64* %retval, align 8, !dbg !12792
  ret i64 %70, !dbg !12792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @raid_state_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12793 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %ret = alloca i32, align 4
  %ldev_info = alloca %struct.myrb_ldev_info*, align 8
  %name = alloca i8*, align 8
  %pdev_info = alloca %struct.myrb_pdev_state*, align 8
  %status = alloca i16, align 2
  %name17 = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12794, metadata !DIExpression()), !dbg !12795
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12796, metadata !DIExpression()), !dbg !12797
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12798, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !12800, metadata !DIExpression()), !dbg !12801
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12802, metadata !DIExpression()), !dbg !12804
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12804
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12804
  store i8* %1, i8** %__mptr, align 8, !dbg !12804
  br label %do.body, !dbg !12804

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12805

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12804
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !12804
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !12804
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !12805
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !12804
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !12801
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !12807, metadata !DIExpression()), !dbg !12808
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12809
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !12810
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12810
  %call = call i8* @shost_priv(%struct.Scsi_Host* %6) #11, !dbg !12811
  %7 = bitcast i8* %call to %struct.myrb_hba*, !dbg !12811
  store %struct.myrb_hba* %7, %struct.myrb_hba** %cb, align 8, !dbg !12808
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12812, metadata !DIExpression()), !dbg !12813
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12814
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 21, !dbg !12816
  %9 = load i8*, i8** %hostdata, align 8, !dbg !12816
  %tobool = icmp ne i8* %9, null, !dbg !12814
  br i1 %tobool, label %if.end, label %if.then, !dbg !12817

if.then:                                          ; preds = %do.end
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !12818
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %10, i64 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i64 0, i64 0)) #11, !dbg !12819
  %conv = sext i32 %call1 to i64, !dbg !12819
  store i64 %conv, i64* %retval, align 8, !dbg !12820
  br label %return, !dbg !12820

if.end:                                           ; preds = %do.end
  %11 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12821
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %11, i32 0, i32 17, !dbg !12823
  %12 = load i32, i32* %channel, align 4, !dbg !12823
  %13 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12824
  %host2 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %13, i32 0, i32 0, !dbg !12825
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host2, align 8, !dbg !12825
  %call3 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %14) #11, !dbg !12826
  %cmp = icmp eq i32 %12, %call3, !dbg !12827
  br i1 %cmp, label %if.then5, label %if.else15, !dbg !12828

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.myrb_ldev_info** %ldev_info, metadata !12829, metadata !DIExpression()), !dbg !12831
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12832
  %hostdata6 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %15, i32 0, i32 21, !dbg !12833
  %16 = load i8*, i8** %hostdata6, align 8, !dbg !12833
  %17 = bitcast i8* %16 to %struct.myrb_ldev_info*, !dbg !12832
  store %struct.myrb_ldev_info* %17, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !12831
  call void @llvm.dbg.declare(metadata i8** %name, metadata !12834, metadata !DIExpression()), !dbg !12835
  %18 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !12836
  %state = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %18, i32 0, i32 1, !dbg !12837
  %19 = load i8, i8* %state, align 4, !dbg !12837
  %call7 = call i8* @myrb_devstate_name(i8 zeroext %19) #11, !dbg !12838
  store i8* %call7, i8** %name, align 8, !dbg !12839
  %20 = load i8*, i8** %name, align 8, !dbg !12840
  %tobool8 = icmp ne i8* %20, null, !dbg !12840
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !12842

if.then9:                                         ; preds = %if.then5
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !12843
  %22 = load i8*, i8** %name, align 8, !dbg !12844
  %call10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %21, i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i8* %22) #11, !dbg !12845
  store i32 %call10, i32* %ret, align 4, !dbg !12846
  br label %if.end14, !dbg !12847

if.else:                                          ; preds = %if.then5
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !12848
  %24 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !12849
  %state11 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %24, i32 0, i32 1, !dbg !12850
  %25 = load i8, i8* %state11, align 4, !dbg !12850
  %conv12 = zext i8 %25 to i32, !dbg !12849
  %call13 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %23, i64 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i64 0, i64 0), i32 %conv12) #11, !dbg !12851
  store i32 %call13, i32* %ret, align 4, !dbg !12852
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then9
  br label %if.end39, !dbg !12853

if.else15:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.myrb_pdev_state** %pdev_info, metadata !12854, metadata !DIExpression()), !dbg !12856
  %26 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12857
  %hostdata16 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %26, i32 0, i32 21, !dbg !12858
  %27 = load i8*, i8** %hostdata16, align 8, !dbg !12858
  %28 = bitcast i8* %27 to %struct.myrb_pdev_state*, !dbg !12857
  store %struct.myrb_pdev_state* %28, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !12856
  call void @llvm.dbg.declare(metadata i16* %status, metadata !12859, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.declare(metadata i8** %name17, metadata !12861, metadata !DIExpression()), !dbg !12862
  %29 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12863
  %30 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12864
  %31 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !12865
  %call18 = call zeroext i16 @myrb_exec_type3D(%struct.myrb_hba* %29, i8 zeroext 80, %struct.scsi_device* %30, %struct.myrb_pdev_state* %31) #11, !dbg !12866
  store i16 %call18, i16* %status, align 2, !dbg !12867
  %32 = load i16, i16* %status, align 2, !dbg !12868
  %conv19 = zext i16 %32 to i32, !dbg !12868
  %cmp20 = icmp ne i32 %conv19, 0, !dbg !12870
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !12871

if.then22:                                        ; preds = %if.else15
  %33 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12872
  %34 = load i16, i16* %status, align 2, !dbg !12872
  %conv23 = zext i16 %34 to i32, !dbg !12872
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %33, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.85, i64 0, i64 0), i32 %conv23) #11, !dbg !12872
  br label %if.end24, !dbg !12872

if.end24:                                         ; preds = %if.then22, %if.else15
  %35 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !12873
  %36 = bitcast %struct.myrb_pdev_state* %35 to i16*, !dbg !12875
  %bf.load = load i16, i16* %36, align 1, !dbg !12875
  %bf.clear = and i16 %bf.load, 1, !dbg !12875
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12875
  %tobool25 = icmp ne i32 %bf.cast, 0, !dbg !12873
  br i1 %tobool25, label %if.else27, label %if.then26, !dbg !12876

if.then26:                                        ; preds = %if.end24
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i64 0, i64 0), i8** %name17, align 8, !dbg !12877
  br label %if.end30, !dbg !12878

if.else27:                                        ; preds = %if.end24
  %37 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !12879
  %state28 = getelementptr inbounds %struct.myrb_pdev_state, %struct.myrb_pdev_state* %37, i32 0, i32 1, !dbg !12880
  %38 = load i8, i8* %state28, align 1, !dbg !12880
  %call29 = call i8* @myrb_devstate_name(i8 zeroext %38) #11, !dbg !12881
  store i8* %call29, i8** %name17, align 8, !dbg !12882
  br label %if.end30

if.end30:                                         ; preds = %if.else27, %if.then26
  %39 = load i8*, i8** %name17, align 8, !dbg !12883
  %tobool31 = icmp ne i8* %39, null, !dbg !12883
  br i1 %tobool31, label %if.then32, label %if.else34, !dbg !12885

if.then32:                                        ; preds = %if.end30
  %40 = load i8*, i8** %buf.addr, align 8, !dbg !12886
  %41 = load i8*, i8** %name17, align 8, !dbg !12887
  %call33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %40, i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i8* %41) #11, !dbg !12888
  store i32 %call33, i32* %ret, align 4, !dbg !12889
  br label %if.end38, !dbg !12890

if.else34:                                        ; preds = %if.end30
  %42 = load i8*, i8** %buf.addr, align 8, !dbg !12891
  %43 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !12892
  %state35 = getelementptr inbounds %struct.myrb_pdev_state, %struct.myrb_pdev_state* %43, i32 0, i32 1, !dbg !12893
  %44 = load i8, i8* %state35, align 1, !dbg !12893
  %conv36 = zext i8 %44 to i32, !dbg !12892
  %call37 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %42, i64 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i64 0, i64 0), i32 %conv36) #11, !dbg !12894
  store i32 %call37, i32* %ret, align 4, !dbg !12895
  br label %if.end38

if.end38:                                         ; preds = %if.else34, %if.then32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end14
  %45 = load i32, i32* %ret, align 4, !dbg !12896
  %conv40 = sext i32 %45 to i64, !dbg !12896
  store i64 %conv40, i64* %retval, align 8, !dbg !12897
  br label %return, !dbg !12897

return:                                           ; preds = %if.end39, %if.then
  %46 = load i64, i64* %retval, align 8, !dbg !12898
  ret i64 %46, !dbg !12898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @raid_state_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12899 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %pdev_info = alloca %struct.myrb_pdev_state*, align 8
  %new_state = alloca i8, align 1
  %status = alloca i16, align 2
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12900, metadata !DIExpression()), !dbg !12901
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12902, metadata !DIExpression()), !dbg !12903
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12904, metadata !DIExpression()), !dbg !12905
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12906, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !12908, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12910, metadata !DIExpression()), !dbg !12912
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12912
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12912
  store i8* %1, i8** %__mptr, align 8, !dbg !12912
  br label %do.body, !dbg !12912

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12913

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12912
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !12912
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !12912
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !12913
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !12912
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !12909
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !12915, metadata !DIExpression()), !dbg !12916
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12917
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !12918
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12918
  %call = call i8* @shost_priv(%struct.Scsi_Host* %6) #11, !dbg !12919
  %7 = bitcast i8* %call to %struct.myrb_hba*, !dbg !12919
  store %struct.myrb_hba* %7, %struct.myrb_hba** %cb, align 8, !dbg !12916
  call void @llvm.dbg.declare(metadata %struct.myrb_pdev_state** %pdev_info, metadata !12920, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.declare(metadata i8* %new_state, metadata !12922, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.declare(metadata i16* %status, metadata !12924, metadata !DIExpression()), !dbg !12925
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !12926
  %call1 = call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i64 4) #11, !dbg !12928
  %tobool = icmp ne i32 %call1, 0, !dbg !12928
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12929

lor.lhs.false:                                    ; preds = %do.end
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !12930
  %call2 = call i32 @strncmp(i8* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0), i64 7) #11, !dbg !12931
  %tobool3 = icmp ne i32 %call2, 0, !dbg !12931
  br i1 %tobool3, label %if.else, label %if.then, !dbg !12932

if.then:                                          ; preds = %lor.lhs.false, %do.end
  store i8 0, i8* %new_state, align 1, !dbg !12933
  br label %if.end13, !dbg !12934

if.else:                                          ; preds = %lor.lhs.false
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !12935
  %call4 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0), i64 6) #11, !dbg !12937
  %tobool5 = icmp ne i32 %call4, 0, !dbg !12937
  br i1 %tobool5, label %if.else7, label %if.then6, !dbg !12938

if.then6:                                         ; preds = %if.else
  store i8 3, i8* %new_state, align 1, !dbg !12939
  br label %if.end12, !dbg !12940

if.else7:                                         ; preds = %if.else
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !12941
  %call8 = call i32 @strncmp(i8* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i64 0, i64 0), i64 7) #11, !dbg !12943
  %tobool9 = icmp ne i32 %call8, 0, !dbg !12943
  br i1 %tobool9, label %if.else11, label %if.then10, !dbg !12944

if.then10:                                        ; preds = %if.else7
  store i8 16, i8* %new_state, align 1, !dbg !12945
  br label %if.end, !dbg !12946

if.else11:                                        ; preds = %if.else7
  store i64 -22, i64* %retval, align 8, !dbg !12947
  br label %return, !dbg !12947

if.end:                                           ; preds = %if.then10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then6
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12948
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %12, i32 0, i32 21, !dbg !12949
  %13 = load i8*, i8** %hostdata, align 8, !dbg !12949
  %14 = bitcast i8* %13 to %struct.myrb_pdev_state*, !dbg !12948
  store %struct.myrb_pdev_state* %14, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !12950
  %15 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !12951
  %tobool14 = icmp ne %struct.myrb_pdev_state* %15, null, !dbg !12951
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !12953

if.then15:                                        ; preds = %if.end13
  %16 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12954
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %16, i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.91, i64 0, i64 0)) #11, !dbg !12954
  store i64 -6, i64* %retval, align 8, !dbg !12956
  br label %return, !dbg !12956

if.end16:                                         ; preds = %if.end13
  %17 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !12957
  %18 = bitcast %struct.myrb_pdev_state* %17 to i16*, !dbg !12959
  %bf.load = load i16, i16* %18, align 1, !dbg !12959
  %bf.clear = and i16 %bf.load, 1, !dbg !12959
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12959
  %tobool17 = icmp ne i32 %bf.cast, 0, !dbg !12957
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !12960

if.then18:                                        ; preds = %if.end16
  %19 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12961
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %19, i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.92, i64 0, i64 0)) #11, !dbg !12961
  store i64 -6, i64* %retval, align 8, !dbg !12963
  br label %return, !dbg !12963

if.end19:                                         ; preds = %if.end16
  %20 = load %struct.myrb_pdev_state*, %struct.myrb_pdev_state** %pdev_info, align 8, !dbg !12964
  %state = getelementptr inbounds %struct.myrb_pdev_state, %struct.myrb_pdev_state* %20, i32 0, i32 1, !dbg !12966
  %21 = load i8, i8* %state, align 1, !dbg !12966
  %conv = zext i8 %21 to i32, !dbg !12964
  %22 = load i8, i8* %new_state, align 1, !dbg !12967
  %conv20 = zext i8 %22 to i32, !dbg !12967
  %cmp = icmp eq i32 %conv, %conv20, !dbg !12968
  br i1 %cmp, label %if.then22, label %if.end23, !dbg !12969

if.then22:                                        ; preds = %if.end19
  %23 = load i64, i64* %count.addr, align 8, !dbg !12970
  store i64 %23, i64* %retval, align 8, !dbg !12971
  br label %return, !dbg !12971

if.end23:                                         ; preds = %if.end19
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !12972
  %25 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12973
  %26 = load i8, i8* %new_state, align 1, !dbg !12974
  %call24 = call zeroext i16 @myrb_set_pdev_state(%struct.myrb_hba* %24, %struct.scsi_device* %25, i8 zeroext %26) #11, !dbg !12975
  store i16 %call24, i16* %status, align 2, !dbg !12976
  %27 = load i16, i16* %status, align 2, !dbg !12977
  %conv25 = zext i16 %27 to i32, !dbg !12977
  switch i32 %conv25, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb26
    i32 258, label %sw.bb27
    i32 261, label %sw.bb28
    i32 262, label %sw.bb29
  ], !dbg !12978

sw.bb:                                            ; preds = %if.end23
  br label %sw.epilog, !dbg !12979

sw.bb26:                                          ; preds = %if.end23
  %28 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12981
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %28, i8* null, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.93, i64 0, i64 0)) #11, !dbg !12981
  store i64 -11, i64* %count.addr, align 8, !dbg !12982
  br label %sw.epilog, !dbg !12983

sw.bb27:                                          ; preds = %if.end23
  %29 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12984
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %29, i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.94, i64 0, i64 0)) #11, !dbg !12984
  store i64 -19, i64* %count.addr, align 8, !dbg !12985
  br label %sw.epilog, !dbg !12986

sw.bb28:                                          ; preds = %if.end23
  %30 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12987
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %30, i8* null, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.95, i64 0, i64 0)) #11, !dbg !12987
  store i64 -22, i64* %count.addr, align 8, !dbg !12988
  br label %sw.epilog, !dbg !12989

sw.bb29:                                          ; preds = %if.end23
  %31 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12990
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %31, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96, i64 0, i64 0)) #11, !dbg !12990
  store i64 -16, i64* %count.addr, align 8, !dbg !12991
  br label %sw.epilog, !dbg !12992

sw.default:                                       ; preds = %if.end23
  %32 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12993
  %33 = load i16, i16* %status, align 2, !dbg !12993
  %conv30 = zext i16 %33 to i32, !dbg !12993
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %32, i8* null, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.97, i64 0, i64 0), i32 %conv30) #11, !dbg !12993
  store i64 -5, i64* %count.addr, align 8, !dbg !12994
  br label %sw.epilog, !dbg !12995

sw.epilog:                                        ; preds = %sw.default, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb
  %34 = load i64, i64* %count.addr, align 8, !dbg !12996
  store i64 %34, i64* %retval, align 8, !dbg !12997
  br label %return, !dbg !12997

return:                                           ; preds = %sw.epilog, %if.then22, %if.then18, %if.then15, %if.else11
  %35 = load i64, i64* %retval, align 8, !dbg !12998
  ret i64 %35, !dbg !12998
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @myrb_set_pdev_state(%struct.myrb_hba* %cb, %struct.scsi_device* %sdev, i8 zeroext %state) #0 !dbg !12999 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %state.addr = alloca i8, align 1
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %status = alloca i16, align 2
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !13002, metadata !DIExpression()), !dbg !13003
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !13004, metadata !DIExpression()), !dbg !13005
  store i8 %state, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !13006, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !13008, metadata !DIExpression()), !dbg !13009
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13010
  %dcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 52, !dbg !13011
  store %struct.myrb_cmdblk* %dcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !13009
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !13012, metadata !DIExpression()), !dbg !13013
  %1 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !13014
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %1, i32 0, i32 0, !dbg !13015
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13013
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13016, metadata !DIExpression()), !dbg !13017
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13018
  %dcmd_mutex = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 54, !dbg !13019
  call void @mutex_lock(%struct.mutex* %dcmd_mutex) #11, !dbg !13020
  %3 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13021
  %type3D = bitcast %union.myrb_cmd_mbox* %3 to %struct.anon.81*, !dbg !13022
  %opcode = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D, i32 0, i32 0, !dbg !13023
  store i8 16, i8* %opcode, align 4, !dbg !13024
  %4 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13025
  %type3D2 = bitcast %union.myrb_cmd_mbox* %4 to %struct.anon.81*, !dbg !13026
  %id = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D2, i32 0, i32 1, !dbg !13027
  store i8 1, i8* %id, align 1, !dbg !13028
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13029
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 17, !dbg !13030
  %6 = load i32, i32* %channel, align 4, !dbg !13030
  %conv = trunc i32 %6 to i8, !dbg !13029
  %7 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13031
  %type3D3 = bitcast %union.myrb_cmd_mbox* %7 to %struct.anon.81*, !dbg !13032
  %channel4 = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D3, i32 0, i32 2, !dbg !13033
  store i8 %conv, i8* %channel4, align 2, !dbg !13034
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13035
  %id5 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 16, !dbg !13036
  %9 = load i32, i32* %id5, align 8, !dbg !13036
  %conv6 = trunc i32 %9 to i8, !dbg !13035
  %10 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13037
  %type3D7 = bitcast %union.myrb_cmd_mbox* %10 to %struct.anon.81*, !dbg !13038
  %target = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D7, i32 0, i32 3, !dbg !13039
  store i8 %conv6, i8* %target, align 1, !dbg !13040
  %11 = load i8, i8* %state.addr, align 1, !dbg !13041
  %conv8 = zext i8 %11 to i32, !dbg !13041
  %and = and i32 %conv8, 31, !dbg !13042
  %conv9 = trunc i32 %and to i8, !dbg !13041
  %12 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13043
  %type3D10 = bitcast %union.myrb_cmd_mbox* %12 to %struct.anon.81*, !dbg !13044
  %state11 = getelementptr inbounds %struct.anon.81, %struct.anon.81* %type3D10, i32 0, i32 4, !dbg !13045
  store i8 %conv9, i8* %state11, align 4, !dbg !13046
  %13 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13047
  %14 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !13048
  %call = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %13, %struct.myrb_cmdblk* %14) #11, !dbg !13049
  store i16 %call, i16* %status, align 2, !dbg !13050
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13051
  %dcmd_mutex12 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %15, i32 0, i32 54, !dbg !13052
  call void @mutex_unlock(%struct.mutex* %dcmd_mutex12) #11, !dbg !13053
  %16 = load i16, i16* %status, align 2, !dbg !13054
  ret i16 %16, !dbg !13055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @raid_level_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13056 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %ldev_info = alloca %struct.myrb_ldev_info*, align 8
  %name = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13057, metadata !DIExpression()), !dbg !13058
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13059, metadata !DIExpression()), !dbg !13060
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13061, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !13063, metadata !DIExpression()), !dbg !13064
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13065, metadata !DIExpression()), !dbg !13067
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13067
  %1 = bitcast %struct.device* %0 to i8*, !dbg !13067
  store i8* %1, i8** %__mptr, align 8, !dbg !13067
  br label %do.body, !dbg !13067

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13068

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13067
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !13067
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !13067
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !13068
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !13067
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !13064
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13070
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 17, !dbg !13072
  %6 = load i32, i32* %channel, align 4, !dbg !13072
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13073
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %7, i32 0, i32 0, !dbg !13074
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13074
  %call = call i32 @myrb_logical_channel(%struct.Scsi_Host* %8) #11, !dbg !13075
  %cmp = icmp eq i32 %6, %call, !dbg !13076
  br i1 %cmp, label %if.then, label %if.end11, !dbg !13077

if.then:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata %struct.myrb_ldev_info** %ldev_info, metadata !13078, metadata !DIExpression()), !dbg !13080
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13081
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 21, !dbg !13082
  %10 = load i8*, i8** %hostdata, align 8, !dbg !13082
  %11 = bitcast i8* %10 to %struct.myrb_ldev_info*, !dbg !13081
  store %struct.myrb_ldev_info* %11, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !13080
  call void @llvm.dbg.declare(metadata i8** %name, metadata !13083, metadata !DIExpression()), !dbg !13084
  %12 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !13085
  %tobool = icmp ne %struct.myrb_ldev_info* %12, null, !dbg !13085
  br i1 %tobool, label %if.end, label %if.then1, !dbg !13087

if.then1:                                         ; preds = %if.then
  store i64 -6, i64* %retval, align 8, !dbg !13088
  br label %return, !dbg !13088

if.end:                                           ; preds = %if.then
  %13 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !13089
  %raid_level = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %13, i32 0, i32 2, !dbg !13090
  %14 = bitcast [3 x i8]* %raid_level to i24*, !dbg !13090
  %bf.load = load i24, i24* %14, align 1, !dbg !13090
  %bf.clear = and i24 %bf.load, 127, !dbg !13090
  %bf.cast = zext i24 %bf.clear to i32, !dbg !13090
  %conv = trunc i32 %bf.cast to i8, !dbg !13089
  %call2 = call i8* @myrb_raidlevel_name(i8 zeroext %conv) #11, !dbg !13091
  store i8* %call2, i8** %name, align 8, !dbg !13092
  %15 = load i8*, i8** %name, align 8, !dbg !13093
  %tobool3 = icmp ne i8* %15, null, !dbg !13093
  br i1 %tobool3, label %if.end8, label %if.then4, !dbg !13095

if.then4:                                         ; preds = %if.end
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !13096
  %17 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !13097
  %state = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %17, i32 0, i32 1, !dbg !13098
  %18 = load i8, i8* %state, align 4, !dbg !13098
  %conv5 = zext i8 %18 to i32, !dbg !13097
  %call6 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %16, i64 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i64 0, i64 0), i32 %conv5) #11, !dbg !13099
  %conv7 = sext i32 %call6 to i64, !dbg !13099
  store i64 %conv7, i64* %retval, align 8, !dbg !13100
  br label %return, !dbg !13100

if.end8:                                          ; preds = %if.end
  %19 = load i8*, i8** %buf.addr, align 8, !dbg !13101
  %20 = load i8*, i8** %name, align 8, !dbg !13102
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %19, i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i8* %20) #11, !dbg !13103
  %conv10 = sext i32 %call9 to i64, !dbg !13103
  store i64 %conv10, i64* %retval, align 8, !dbg !13104
  br label %return, !dbg !13104

if.end11:                                         ; preds = %do.end
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !13105
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %21, i64 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.99, i64 0, i64 0)) #11, !dbg !13106
  %conv13 = sext i32 %call12 to i64, !dbg !13106
  store i64 %conv13, i64* %retval, align 8, !dbg !13107
  br label %return, !dbg !13107

return:                                           ; preds = %if.end11, %if.end8, %if.then4, %if.then1
  %22 = load i64, i64* %retval, align 8, !dbg !13108
  ret i64 %22, !dbg !13108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @myrb_raidlevel_name(i8 zeroext %level) #0 !dbg !13109 {
entry:
  %retval = alloca i8*, align 8
  %level.addr = alloca i8, align 1
  %entry1 = alloca %struct.myrb_raidlevel_name_entry*, align 8
  %i = alloca i32, align 4
  store i8 %level, i8* %level.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %level.addr, metadata !13112, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.declare(metadata %struct.myrb_raidlevel_name_entry** %entry1, metadata !13114, metadata !DIExpression()), !dbg !13116
  store %struct.myrb_raidlevel_name_entry* getelementptr inbounds ([6 x %struct.myrb_raidlevel_name_entry], [6 x %struct.myrb_raidlevel_name_entry]* @myrb_raidlevel_name_list, i64 0, i64 0), %struct.myrb_raidlevel_name_entry** %entry1, align 8, !dbg !13116
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13117, metadata !DIExpression()), !dbg !13118
  store i32 0, i32* %i, align 4, !dbg !13119
  br label %for.cond, !dbg !13121

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13122
  %conv = sext i32 %0 to i64, !dbg !13122
  %cmp = icmp ult i64 %conv, 6, !dbg !13124
  br i1 %cmp, label %for.body, label %for.end, !dbg !13125

for.body:                                         ; preds = %for.cond
  %1 = load %struct.myrb_raidlevel_name_entry*, %struct.myrb_raidlevel_name_entry** %entry1, align 8, !dbg !13126
  %2 = load i32, i32* %i, align 4, !dbg !13129
  %idxprom = sext i32 %2 to i64, !dbg !13126
  %arrayidx = getelementptr %struct.myrb_raidlevel_name_entry, %struct.myrb_raidlevel_name_entry* %1, i64 %idxprom, !dbg !13126
  %level3 = getelementptr inbounds %struct.myrb_raidlevel_name_entry, %struct.myrb_raidlevel_name_entry* %arrayidx, i32 0, i32 0, !dbg !13130
  %3 = load i8, i8* %level3, align 8, !dbg !13130
  %conv4 = zext i8 %3 to i32, !dbg !13126
  %4 = load i8, i8* %level.addr, align 1, !dbg !13131
  %conv5 = zext i8 %4 to i32, !dbg !13131
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !13132
  br i1 %cmp6, label %if.then, label %if.end, !dbg !13133

if.then:                                          ; preds = %for.body
  %5 = load %struct.myrb_raidlevel_name_entry*, %struct.myrb_raidlevel_name_entry** %entry1, align 8, !dbg !13134
  %6 = load i32, i32* %i, align 4, !dbg !13135
  %idxprom8 = sext i32 %6 to i64, !dbg !13134
  %arrayidx9 = getelementptr %struct.myrb_raidlevel_name_entry, %struct.myrb_raidlevel_name_entry* %5, i64 %idxprom8, !dbg !13134
  %name = getelementptr inbounds %struct.myrb_raidlevel_name_entry, %struct.myrb_raidlevel_name_entry* %arrayidx9, i32 0, i32 1, !dbg !13136
  %7 = load i8*, i8** %name, align 8, !dbg !13136
  store i8* %7, i8** %retval, align 8, !dbg !13137
  br label %return, !dbg !13137

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !13138

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !13139
  %inc = add i32 %8, 1, !dbg !13139
  store i32 %inc, i32* %i, align 4, !dbg !13139
  br label %for.cond, !dbg !13140, !llvm.loop !13141

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !13143
  br label %return, !dbg !13143

return:                                           ; preds = %for.end, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !13144
  ret i8* %9, !dbg !13144
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !13145 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13148, metadata !DIExpression()), !dbg !13149
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13150, metadata !DIExpression()), !dbg !13151
  %0 = load i8*, i8** %data.addr, align 8, !dbg !13152
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13153
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !13154
  store i8* %0, i8** %driver_data, align 8, !dbg !13155
  ret void, !dbg !13156
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @myrb_hba_enquiry(%struct.myrb_hba* %cb) #0 !dbg !13157 {
entry:
  %retval = alloca i16, align 2
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %old = alloca %struct.myrb_enquiry, align 1
  %new = alloca %struct.myrb_enquiry*, align 8
  %status = alloca i16, align 2
  %ldev_num = alloca i32, align 4
  %ldev_num23 = alloca i32, align 4
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !13160, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.declare(metadata %struct.myrb_enquiry* %old, metadata !13162, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.declare(metadata %struct.myrb_enquiry** %new, metadata !13164, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13166, metadata !DIExpression()), !dbg !13167
  %0 = bitcast %struct.myrb_enquiry* %old to i8*, !dbg !13168
  %1 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13169
  %enquiry = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %1, i32 0, i32 55, !dbg !13170
  %2 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry, align 8, !dbg !13170
  %3 = bitcast %struct.myrb_enquiry* %2 to i8*, !dbg !13168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %3, i64 256, i1 false), !dbg !13168
  %4 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13171
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13172
  %enquiry_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %5, i32 0, i32 56, !dbg !13173
  %6 = load i64, i64* %enquiry_addr, align 8, !dbg !13173
  %call = call zeroext i16 @myrb_exec_type3(%struct.myrb_hba* %4, i8 zeroext 83, i64 %6) #11, !dbg !13174
  store i16 %call, i16* %status, align 2, !dbg !13175
  %7 = load i16, i16* %status, align 2, !dbg !13176
  %conv = zext i16 %7 to i32, !dbg !13176
  %cmp = icmp ne i32 %conv, 0, !dbg !13178
  br i1 %cmp, label %if.then, label %if.end, !dbg !13179

if.then:                                          ; preds = %entry
  %8 = load i16, i16* %status, align 2, !dbg !13180
  store i16 %8, i16* %retval, align 2, !dbg !13181
  br label %return, !dbg !13181

if.end:                                           ; preds = %entry
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13182
  %enquiry2 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %9, i32 0, i32 55, !dbg !13183
  %10 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry2, align 8, !dbg !13183
  store %struct.myrb_enquiry* %10, %struct.myrb_enquiry** %new, align 8, !dbg !13184
  %11 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13185
  %ldev_count = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %11, i32 0, i32 0, !dbg !13187
  %12 = load i8, i8* %ldev_count, align 1, !dbg !13187
  %conv3 = zext i8 %12 to i32, !dbg !13185
  %ldev_count4 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 0, !dbg !13188
  %13 = load i8, i8* %ldev_count4, align 1, !dbg !13188
  %conv5 = zext i8 %13 to i32, !dbg !13189
  %cmp6 = icmp sgt i32 %conv3, %conv5, !dbg !13190
  br i1 %cmp6, label %if.then8, label %if.end15, !dbg !13191

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %ldev_num, metadata !13192, metadata !DIExpression()), !dbg !13194
  %ldev_count9 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 0, !dbg !13195
  %14 = load i8, i8* %ldev_count9, align 1, !dbg !13195
  %conv10 = zext i8 %14 to i32, !dbg !13196
  %sub = sub i32 %conv10, 1, !dbg !13197
  store i32 %sub, i32* %ldev_num, align 4, !dbg !13194
  br label %while.cond, !dbg !13198

while.cond:                                       ; preds = %while.body, %if.then8
  %15 = load i32, i32* %ldev_num, align 4, !dbg !13199
  %inc = add i32 %15, 1, !dbg !13199
  store i32 %inc, i32* %ldev_num, align 4, !dbg !13199
  %16 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13200
  %ldev_count11 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %16, i32 0, i32 0, !dbg !13201
  %17 = load i8, i8* %ldev_count11, align 1, !dbg !13201
  %conv12 = zext i8 %17 to i32, !dbg !13200
  %cmp13 = icmp slt i32 %inc, %conv12, !dbg !13202
  br i1 %cmp13, label %while.body, label %while.end, !dbg !13198

while.body:                                       ; preds = %while.cond
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13203
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 18, !dbg !13203
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13203
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %19, i32 0, i32 47, !dbg !13203
  %20 = load i32, i32* %ldev_num, align 4, !dbg !13203
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.141, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.142, i64 0, i64 0), i32 %20) #12, !dbg !13203
  br label %while.cond, !dbg !13198, !llvm.loop !13204

while.end:                                        ; preds = %while.cond
  br label %if.end15, !dbg !13205

if.end15:                                         ; preds = %while.end, %if.end
  %21 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13206
  %ldev_count16 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %21, i32 0, i32 0, !dbg !13208
  %22 = load i8, i8* %ldev_count16, align 1, !dbg !13208
  %conv17 = zext i8 %22 to i32, !dbg !13206
  %ldev_count18 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 0, !dbg !13209
  %23 = load i8, i8* %ldev_count18, align 1, !dbg !13209
  %conv19 = zext i8 %23 to i32, !dbg !13210
  %cmp20 = icmp slt i32 %conv17, %conv19, !dbg !13211
  br i1 %cmp20, label %if.then22, label %if.end37, !dbg !13212

if.then22:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i32* %ldev_num23, metadata !13213, metadata !DIExpression()), !dbg !13215
  %24 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13216
  %ldev_count24 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %24, i32 0, i32 0, !dbg !13217
  %25 = load i8, i8* %ldev_count24, align 1, !dbg !13217
  %conv25 = zext i8 %25 to i32, !dbg !13216
  %sub26 = sub i32 %conv25, 1, !dbg !13218
  store i32 %sub26, i32* %ldev_num23, align 4, !dbg !13215
  br label %while.cond27, !dbg !13219

while.cond27:                                     ; preds = %while.body33, %if.then22
  %26 = load i32, i32* %ldev_num23, align 4, !dbg !13220
  %inc28 = add i32 %26, 1, !dbg !13220
  store i32 %inc28, i32* %ldev_num23, align 4, !dbg !13220
  %ldev_count29 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 0, !dbg !13221
  %27 = load i8, i8* %ldev_count29, align 1, !dbg !13221
  %conv30 = zext i8 %27 to i32, !dbg !13222
  %cmp31 = icmp slt i32 %inc28, %conv30, !dbg !13223
  br i1 %cmp31, label %while.body33, label %while.end36, !dbg !13219

while.body33:                                     ; preds = %while.cond27
  %28 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13224
  %host34 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %28, i32 0, i32 18, !dbg !13224
  %29 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host34, align 8, !dbg !13224
  %shost_gendev35 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %29, i32 0, i32 47, !dbg !13224
  %30 = load i32, i32* %ldev_num23, align 4, !dbg !13224
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.141, i64 0, i64 0), %struct.device* %shost_gendev35, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.143, i64 0, i64 0), i32 %30) #12, !dbg !13224
  br label %while.cond27, !dbg !13219, !llvm.loop !13225

while.end36:                                      ; preds = %while.cond27
  br label %if.end37, !dbg !13226

if.end37:                                         ; preds = %while.end36, %if.end15
  %31 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13227
  %status38 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %31, i32 0, i32 4, !dbg !13229
  %32 = bitcast %struct.anon.88* %status38 to i8*, !dbg !13230
  %bf.load = load i8, i8* %32, align 1, !dbg !13230
  %bf.clear = and i8 %bf.load, 1, !dbg !13230
  %conv39 = zext i8 %bf.clear to i32, !dbg !13227
  %status40 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 4, !dbg !13231
  %33 = bitcast %struct.anon.88* %status40 to i8*, !dbg !13232
  %bf.load41 = load i8, i8* %33, align 1, !dbg !13232
  %bf.clear42 = and i8 %bf.load41, 1, !dbg !13232
  %conv43 = zext i8 %bf.clear42 to i32, !dbg !13233
  %cmp44 = icmp ne i32 %conv39, %conv43, !dbg !13234
  br i1 %cmp44, label %if.then46, label %if.end53, !dbg !13235

if.then46:                                        ; preds = %if.end37
  %34 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13236
  %host47 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %34, i32 0, i32 18, !dbg !13236
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host47, align 8, !dbg !13236
  %shost_gendev48 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %35, i32 0, i32 47, !dbg !13236
  %36 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13236
  %status49 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %36, i32 0, i32 4, !dbg !13236
  %37 = bitcast %struct.anon.88* %status49 to i8*, !dbg !13236
  %bf.load50 = load i8, i8* %37, align 1, !dbg !13236
  %bf.clear51 = and i8 %bf.load50, 1, !dbg !13236
  %conv52 = zext i8 %bf.clear51 to i32, !dbg !13236
  %tobool = icmp ne i32 %conv52, 0, !dbg !13236
  %38 = zext i1 %tobool to i64, !dbg !13236
  %cond = select i1 %tobool, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.146, i64 0, i64 0), !dbg !13236
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.141, i64 0, i64 0), %struct.device* %shost_gendev48, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.144, i64 0, i64 0), i8* %cond) #12, !dbg !13236
  br label %if.end53, !dbg !13236

if.end53:                                         ; preds = %if.then46, %if.end37
  %39 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13237
  %ev_seq = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %39, i32 0, i32 12, !dbg !13239
  %40 = load i16, i16* %ev_seq, align 1, !dbg !13239
  %conv54 = zext i16 %40 to i32, !dbg !13237
  %ev_seq55 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 12, !dbg !13240
  %41 = load i16, i16* %ev_seq55, align 1, !dbg !13240
  %conv56 = zext i16 %41 to i32, !dbg !13241
  %cmp57 = icmp ne i32 %conv54, %conv56, !dbg !13242
  br i1 %cmp57, label %if.then59, label %if.end70, !dbg !13243

if.then59:                                        ; preds = %if.end53
  %42 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13244
  %ev_seq60 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %42, i32 0, i32 12, !dbg !13246
  %43 = load i16, i16* %ev_seq60, align 1, !dbg !13246
  %44 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13247
  %new_ev_seq = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %44, i32 0, i32 6, !dbg !13248
  store i16 %43, i16* %new_ev_seq, align 4, !dbg !13249
  %45 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13250
  %need_err_info = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %45, i32 0, i32 12, !dbg !13251
  store i8 1, i8* %need_err_info, align 4, !dbg !13252
  %46 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13253
  %host61 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %46, i32 0, i32 18, !dbg !13253
  %47 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host61, align 8, !dbg !13253
  %shost_gendev62 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %47, i32 0, i32 47, !dbg !13253
  %48 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13253
  %old_ev_seq = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %48, i32 0, i32 7, !dbg !13253
  %49 = load i16, i16* %old_ev_seq, align 2, !dbg !13253
  %conv63 = zext i16 %49 to i32, !dbg !13253
  %50 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13253
  %new_ev_seq64 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %50, i32 0, i32 6, !dbg !13253
  %51 = load i16, i16* %new_ev_seq64, align 4, !dbg !13253
  %conv65 = zext i16 %51 to i32, !dbg !13253
  %ev_seq66 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 12, !dbg !13253
  %52 = load i16, i16* %ev_seq66, align 1, !dbg !13253
  %conv67 = zext i16 %52 to i32, !dbg !13253
  %53 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13253
  %ev_seq68 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %53, i32 0, i32 12, !dbg !13253
  %54 = load i16, i16* %ev_seq68, align 1, !dbg !13253
  %conv69 = zext i16 %54 to i32, !dbg !13253
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev62, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.147, i64 0, i64 0), i32 %conv63, i32 %conv65, i32 %conv67, i32 %conv69) #12, !dbg !13253
  br label %if.end70, !dbg !13254

if.end70:                                         ; preds = %if.then59, %if.end53
  %55 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13255
  %ldev_critical = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %55, i32 0, i32 13, !dbg !13257
  %56 = load i8, i8* %ldev_critical, align 1, !dbg !13257
  %conv71 = zext i8 %56 to i32, !dbg !13255
  %cmp72 = icmp sgt i32 %conv71, 0, !dbg !13258
  br i1 %cmp72, label %land.lhs.true, label %lor.lhs.false, !dbg !13259

land.lhs.true:                                    ; preds = %if.end70
  %57 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13260
  %ldev_critical74 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %57, i32 0, i32 13, !dbg !13261
  %58 = load i8, i8* %ldev_critical74, align 1, !dbg !13261
  %conv75 = zext i8 %58 to i32, !dbg !13260
  %ldev_critical76 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 13, !dbg !13262
  %59 = load i8, i8* %ldev_critical76, align 1, !dbg !13262
  %conv77 = zext i8 %59 to i32, !dbg !13263
  %cmp78 = icmp ne i32 %conv75, %conv77, !dbg !13264
  br i1 %cmp78, label %if.then97, label %lor.lhs.false, !dbg !13265

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end70
  %60 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13266
  %ldev_offline = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %60, i32 0, i32 10, !dbg !13267
  %61 = load i8, i8* %ldev_offline, align 1, !dbg !13267
  %conv80 = zext i8 %61 to i32, !dbg !13266
  %cmp81 = icmp sgt i32 %conv80, 0, !dbg !13268
  br i1 %cmp81, label %land.lhs.true83, label %lor.lhs.false90, !dbg !13269

land.lhs.true83:                                  ; preds = %lor.lhs.false
  %62 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13270
  %ldev_offline84 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %62, i32 0, i32 10, !dbg !13271
  %63 = load i8, i8* %ldev_offline84, align 1, !dbg !13271
  %conv85 = zext i8 %63 to i32, !dbg !13270
  %ldev_offline86 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 10, !dbg !13272
  %64 = load i8, i8* %ldev_offline86, align 1, !dbg !13272
  %conv87 = zext i8 %64 to i32, !dbg !13273
  %cmp88 = icmp ne i32 %conv85, %conv87, !dbg !13274
  br i1 %cmp88, label %if.then97, label %lor.lhs.false90, !dbg !13275

lor.lhs.false90:                                  ; preds = %land.lhs.true83, %lor.lhs.false
  %65 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13276
  %ldev_count91 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %65, i32 0, i32 0, !dbg !13277
  %66 = load i8, i8* %ldev_count91, align 1, !dbg !13277
  %conv92 = zext i8 %66 to i32, !dbg !13276
  %ldev_count93 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 0, !dbg !13278
  %67 = load i8, i8* %ldev_count93, align 1, !dbg !13278
  %conv94 = zext i8 %67 to i32, !dbg !13279
  %cmp95 = icmp ne i32 %conv92, %conv94, !dbg !13280
  br i1 %cmp95, label %if.then97, label %if.end106, !dbg !13281

if.then97:                                        ; preds = %lor.lhs.false90, %land.lhs.true83, %land.lhs.true
  %68 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13282
  %host98 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %68, i32 0, i32 18, !dbg !13282
  %69 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host98, align 8, !dbg !13282
  %shost_gendev99 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %69, i32 0, i32 47, !dbg !13282
  %70 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13282
  %ldev_critical100 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %70, i32 0, i32 13, !dbg !13282
  %71 = load i8, i8* %ldev_critical100, align 1, !dbg !13282
  %conv101 = zext i8 %71 to i32, !dbg !13282
  %72 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13282
  %ldev_offline102 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %72, i32 0, i32 10, !dbg !13282
  %73 = load i8, i8* %ldev_offline102, align 1, !dbg !13282
  %conv103 = zext i8 %73 to i32, !dbg !13282
  %74 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13282
  %ldev_count104 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %74, i32 0, i32 0, !dbg !13282
  %75 = load i8, i8* %ldev_count104, align 1, !dbg !13282
  %conv105 = zext i8 %75 to i32, !dbg !13282
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev99, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.148, i64 0, i64 0), i32 %conv101, i32 %conv103, i32 %conv105) #12, !dbg !13282
  %76 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13284
  %need_ldev_info = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %76, i32 0, i32 11, !dbg !13285
  store i8 1, i8* %need_ldev_info, align 1, !dbg !13286
  br label %if.end106, !dbg !13287

if.end106:                                        ; preds = %if.then97, %lor.lhs.false90
  %77 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13288
  %pdev_dead = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %77, i32 0, i32 15, !dbg !13290
  %78 = load i8, i8* %pdev_dead, align 1, !dbg !13290
  %conv107 = zext i8 %78 to i32, !dbg !13288
  %cmp108 = icmp sgt i32 %conv107, 0, !dbg !13291
  br i1 %cmp108, label %if.then121, label %lor.lhs.false110, !dbg !13292

lor.lhs.false110:                                 ; preds = %if.end106
  %79 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13293
  %pdev_dead111 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %79, i32 0, i32 15, !dbg !13294
  %80 = load i8, i8* %pdev_dead111, align 1, !dbg !13294
  %conv112 = zext i8 %80 to i32, !dbg !13293
  %pdev_dead113 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 15, !dbg !13295
  %81 = load i8, i8* %pdev_dead113, align 1, !dbg !13295
  %conv114 = zext i8 %81 to i32, !dbg !13296
  %cmp115 = icmp ne i32 %conv112, %conv114, !dbg !13297
  br i1 %cmp115, label %if.then121, label %lor.lhs.false117, !dbg !13298

lor.lhs.false117:                                 ; preds = %lor.lhs.false110
  %82 = load volatile i64, i64* @jiffies, align 8, !dbg !13299
  %83 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13299
  %secondary_monitor_time = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %83, i32 0, i32 23, !dbg !13299
  %84 = load i64, i64* %secondary_monitor_time, align 8, !dbg !13299
  %add = add i64 %84, 15000, !dbg !13299
  %sub118 = sub i64 %82, %add, !dbg !13299
  %cmp119 = icmp sge i64 %sub118, 0, !dbg !13299
  br i1 %cmp119, label %if.then121, label %if.end124, !dbg !13300

if.then121:                                       ; preds = %lor.lhs.false117, %lor.lhs.false110, %if.end106
  %85 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13301
  %bgi_status_supported = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %85, i32 0, i32 9, !dbg !13303
  %86 = load i8, i8* %bgi_status_supported, align 1, !dbg !13303
  %tobool122 = trunc i8 %86 to i1, !dbg !13303
  %87 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13304
  %need_bgi_status = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %87, i32 0, i32 15, !dbg !13305
  %frombool = zext i1 %tobool122 to i8, !dbg !13306
  store i8 %frombool, i8* %need_bgi_status, align 1, !dbg !13306
  %88 = load volatile i64, i64* @jiffies, align 8, !dbg !13307
  %89 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13308
  %secondary_monitor_time123 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %89, i32 0, i32 23, !dbg !13309
  store i64 %88, i64* %secondary_monitor_time123, align 8, !dbg !13310
  br label %if.end124, !dbg !13311

if.end124:                                        ; preds = %if.then121, %lor.lhs.false117
  %90 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13312
  %rbld = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %90, i32 0, i32 8, !dbg !13314
  %91 = load i8, i8* %rbld, align 1, !dbg !13314
  %conv125 = zext i8 %91 to i32, !dbg !13312
  %cmp126 = icmp eq i32 %conv125, 1, !dbg !13315
  br i1 %cmp126, label %if.then143, label %lor.lhs.false128, !dbg !13316

lor.lhs.false128:                                 ; preds = %if.end124
  %92 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13317
  %rbld129 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %92, i32 0, i32 8, !dbg !13318
  %93 = load i8, i8* %rbld129, align 1, !dbg !13318
  %conv130 = zext i8 %93 to i32, !dbg !13317
  %cmp131 = icmp eq i32 %conv130, 2, !dbg !13319
  br i1 %cmp131, label %if.then143, label %lor.lhs.false133, !dbg !13320

lor.lhs.false133:                                 ; preds = %lor.lhs.false128
  %rbld134 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 8, !dbg !13321
  %94 = load i8, i8* %rbld134, align 1, !dbg !13321
  %conv135 = zext i8 %94 to i32, !dbg !13322
  %cmp136 = icmp eq i32 %conv135, 1, !dbg !13323
  br i1 %cmp136, label %if.then143, label %lor.lhs.false138, !dbg !13324

lor.lhs.false138:                                 ; preds = %lor.lhs.false133
  %rbld139 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 8, !dbg !13325
  %95 = load i8, i8* %rbld139, align 1, !dbg !13325
  %conv140 = zext i8 %95 to i32, !dbg !13326
  %cmp141 = icmp eq i32 %conv140, 2, !dbg !13327
  br i1 %cmp141, label %if.then143, label %if.end151, !dbg !13328

if.then143:                                       ; preds = %lor.lhs.false138, %lor.lhs.false133, %lor.lhs.false128, %if.end124
  %96 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13329
  %need_rbld = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %96, i32 0, i32 13, !dbg !13331
  store i8 1, i8* %need_rbld, align 1, !dbg !13332
  %97 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13333
  %ldev_critical144 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %97, i32 0, i32 13, !dbg !13334
  %98 = load i8, i8* %ldev_critical144, align 1, !dbg !13334
  %conv145 = zext i8 %98 to i32, !dbg !13333
  %ldev_critical146 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 13, !dbg !13335
  %99 = load i8, i8* %ldev_critical146, align 1, !dbg !13335
  %conv147 = zext i8 %99 to i32, !dbg !13336
  %cmp148 = icmp slt i32 %conv145, %conv147, !dbg !13337
  %100 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13338
  %rbld_first = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %100, i32 0, i32 16, !dbg !13339
  %frombool150 = zext i1 %cmp148 to i8, !dbg !13340
  store i8 %frombool150, i8* %rbld_first, align 8, !dbg !13340
  br label %if.end151, !dbg !13341

if.end151:                                        ; preds = %if.then143, %lor.lhs.false138
  %rbld152 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %old, i32 0, i32 8, !dbg !13342
  %101 = load i8, i8* %rbld152, align 1, !dbg !13342
  %conv153 = zext i8 %101 to i32, !dbg !13344
  %cmp154 = icmp eq i32 %conv153, 3, !dbg !13345
  br i1 %cmp154, label %if.then156, label %if.else, !dbg !13346

if.then156:                                       ; preds = %if.end151
  %102 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13347
  %rbld157 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %102, i32 0, i32 8, !dbg !13348
  %103 = load i8, i8* %rbld157, align 1, !dbg !13348
  %conv158 = zext i8 %103 to i32, !dbg !13347
  switch i32 %conv158, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb161
    i32 2, label %sw.bb161
    i32 3, label %sw.bb162
    i32 255, label %sw.bb163
    i32 240, label %sw.bb166
    i32 241, label %sw.bb169
    i32 242, label %sw.bb172
    i32 243, label %sw.bb175
  ], !dbg !13349

sw.bb:                                            ; preds = %if.then156
  %104 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13350
  %host159 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %104, i32 0, i32 18, !dbg !13350
  %105 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host159, align 8, !dbg !13350
  %shost_gendev160 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %105, i32 0, i32 47, !dbg !13350
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev160, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.149, i64 0, i64 0)) #12, !dbg !13350
  br label %sw.epilog, !dbg !13352

sw.bb161:                                         ; preds = %if.then156, %if.then156
  br label %sw.epilog, !dbg !13353

sw.bb162:                                         ; preds = %if.then156
  %106 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13354
  %need_cc_status = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %106, i32 0, i32 14, !dbg !13355
  store i8 1, i8* %need_cc_status, align 2, !dbg !13356
  br label %sw.epilog, !dbg !13357

sw.bb163:                                         ; preds = %if.then156
  %107 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13358
  %host164 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %107, i32 0, i32 18, !dbg !13358
  %108 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host164, align 8, !dbg !13358
  %shost_gendev165 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %108, i32 0, i32 47, !dbg !13358
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev165, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.150, i64 0, i64 0)) #12, !dbg !13358
  br label %sw.epilog, !dbg !13359

sw.bb166:                                         ; preds = %if.then156
  %109 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13360
  %host167 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %109, i32 0, i32 18, !dbg !13360
  %110 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host167, align 8, !dbg !13360
  %shost_gendev168 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %110, i32 0, i32 47, !dbg !13360
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev168, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.151, i64 0, i64 0)) #12, !dbg !13360
  br label %sw.epilog, !dbg !13361

sw.bb169:                                         ; preds = %if.then156
  %111 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13362
  %host170 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %111, i32 0, i32 18, !dbg !13362
  %112 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host170, align 8, !dbg !13362
  %shost_gendev171 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %112, i32 0, i32 47, !dbg !13362
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev171, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.152, i64 0, i64 0)) #12, !dbg !13362
  br label %sw.epilog, !dbg !13363

sw.bb172:                                         ; preds = %if.then156
  %113 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13364
  %host173 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %113, i32 0, i32 18, !dbg !13364
  %114 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host173, align 8, !dbg !13364
  %shost_gendev174 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %114, i32 0, i32 47, !dbg !13364
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev174, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.153, i64 0, i64 0)) #12, !dbg !13364
  br label %sw.epilog, !dbg !13365

sw.bb175:                                         ; preds = %if.then156
  %115 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13366
  %host176 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %115, i32 0, i32 18, !dbg !13366
  %116 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host176, align 8, !dbg !13366
  %shost_gendev177 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %116, i32 0, i32 47, !dbg !13366
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev177, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.154, i64 0, i64 0)) #12, !dbg !13366
  br label %sw.epilog, !dbg !13367

sw.epilog:                                        ; preds = %if.then156, %sw.bb175, %sw.bb172, %sw.bb169, %sw.bb166, %sw.bb163, %sw.bb162, %sw.bb161, %sw.bb
  br label %if.end185, !dbg !13368

if.else:                                          ; preds = %if.end151
  %117 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %new, align 8, !dbg !13369
  %rbld178 = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %117, i32 0, i32 8, !dbg !13371
  %118 = load i8, i8* %rbld178, align 1, !dbg !13371
  %conv179 = zext i8 %118 to i32, !dbg !13369
  %cmp180 = icmp eq i32 %conv179, 3, !dbg !13372
  br i1 %cmp180, label %if.then182, label %if.end184, !dbg !13373

if.then182:                                       ; preds = %if.else
  %119 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13374
  %need_cc_status183 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %119, i32 0, i32 14, !dbg !13375
  store i8 1, i8* %need_cc_status183, align 2, !dbg !13376
  br label %if.end184, !dbg !13374

if.end184:                                        ; preds = %if.then182, %if.else
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %sw.epilog
  store i16 0, i16* %retval, align 2, !dbg !13377
  br label %return, !dbg !13377

return:                                           ; preds = %if.end185, %if.then
  %120 = load i16, i16* %retval, align 2, !dbg !13378
  ret i16 %120, !dbg !13378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @myrb_get_ldev_info(%struct.myrb_hba* %cb) #0 !dbg !13379 {
entry:
  %retval = alloca i16, align 2
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %status = alloca i16, align 2
  %ldev_num = alloca i32, align 4
  %ldev_cnt = alloca i32, align 4
  %shost = alloca %struct.Scsi_Host*, align 8
  %old = alloca %struct.myrb_ldev_info*, align 8
  %new = alloca %struct.myrb_ldev_info*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !13380, metadata !DIExpression()), !dbg !13381
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13382, metadata !DIExpression()), !dbg !13383
  call void @llvm.dbg.declare(metadata i32* %ldev_num, metadata !13384, metadata !DIExpression()), !dbg !13385
  call void @llvm.dbg.declare(metadata i32* %ldev_cnt, metadata !13386, metadata !DIExpression()), !dbg !13387
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13388
  %enquiry = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 55, !dbg !13389
  %1 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry, align 8, !dbg !13389
  %ldev_count = getelementptr inbounds %struct.myrb_enquiry, %struct.myrb_enquiry* %1, i32 0, i32 0, !dbg !13390
  %2 = load i8, i8* %ldev_count, align 1, !dbg !13390
  %conv = zext i8 %2 to i32, !dbg !13388
  store i32 %conv, i32* %ldev_cnt, align 4, !dbg !13387
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !13391, metadata !DIExpression()), !dbg !13392
  %3 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13393
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %3, i32 0, i32 18, !dbg !13394
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13394
  store %struct.Scsi_Host* %4, %struct.Scsi_Host** %shost, align 8, !dbg !13392
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13395
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13396
  %ldev_info_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %6, i32 0, i32 61, !dbg !13397
  %7 = load i64, i64* %ldev_info_addr, align 8, !dbg !13397
  %call = call zeroext i16 @myrb_exec_type3(%struct.myrb_hba* %5, i8 zeroext 25, i64 %7) #11, !dbg !13398
  store i16 %call, i16* %status, align 2, !dbg !13399
  %8 = load i16, i16* %status, align 2, !dbg !13400
  %conv1 = zext i16 %8 to i32, !dbg !13400
  %cmp = icmp ne i32 %conv1, 0, !dbg !13402
  br i1 %cmp, label %if.then, label %if.end, !dbg !13403

if.then:                                          ; preds = %entry
  %9 = load i16, i16* %status, align 2, !dbg !13404
  store i16 %9, i16* %retval, align 2, !dbg !13405
  br label %return, !dbg !13405

if.end:                                           ; preds = %entry
  store i32 0, i32* %ldev_num, align 4, !dbg !13406
  br label %for.cond, !dbg !13408

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %ldev_num, align 4, !dbg !13409
  %11 = load i32, i32* %ldev_cnt, align 4, !dbg !13411
  %cmp3 = icmp slt i32 %10, %11, !dbg !13412
  br i1 %cmp3, label %for.body, label %for.end, !dbg !13413

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.myrb_ldev_info** %old, metadata !13414, metadata !DIExpression()), !dbg !13416
  store %struct.myrb_ldev_info* null, %struct.myrb_ldev_info** %old, align 8, !dbg !13416
  call void @llvm.dbg.declare(metadata %struct.myrb_ldev_info** %new, metadata !13417, metadata !DIExpression()), !dbg !13418
  %12 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13419
  %ldev_info_buf = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %12, i32 0, i32 60, !dbg !13420
  %13 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info_buf, align 8, !dbg !13420
  %14 = load i32, i32* %ldev_num, align 4, !dbg !13421
  %idx.ext = sext i32 %14 to i64, !dbg !13422
  %add.ptr = getelementptr %struct.myrb_ldev_info, %struct.myrb_ldev_info* %13, i64 %idx.ext, !dbg !13422
  store %struct.myrb_ldev_info* %add.ptr, %struct.myrb_ldev_info** %new, align 8, !dbg !13418
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !13423, metadata !DIExpression()), !dbg !13424
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13425
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13426
  %call5 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %16) #11, !dbg !13427
  %17 = load i32, i32* %ldev_num, align 4, !dbg !13428
  %call6 = call %struct.scsi_device* @scsi_device_lookup(%struct.Scsi_Host* %15, i32 %call5, i32 %17, i64 0) #11, !dbg !13429
  store %struct.scsi_device* %call6, %struct.scsi_device** %sdev, align 8, !dbg !13430
  %18 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13431
  %tobool = icmp ne %struct.scsi_device* %18, null, !dbg !13431
  br i1 %tobool, label %if.end17, label %if.then7, !dbg !13433

if.then7:                                         ; preds = %for.body
  %19 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %new, align 8, !dbg !13434
  %state = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %19, i32 0, i32 1, !dbg !13437
  %20 = load i8, i8* %state, align 4, !dbg !13437
  %conv8 = zext i8 %20 to i32, !dbg !13434
  %cmp9 = icmp eq i32 %conv8, 255, !dbg !13438
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !13439

if.then11:                                        ; preds = %if.then7
  br label %for.inc, !dbg !13440

if.end12:                                         ; preds = %if.then7
  %21 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13441
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %21, i32 0, i32 47, !dbg !13441
  %22 = load i32, i32* %ldev_num, align 4, !dbg !13441
  %23 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %new, align 8, !dbg !13441
  %state13 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %23, i32 0, i32 1, !dbg !13441
  %24 = load i8, i8* %state13, align 4, !dbg !13441
  %call14 = call i8* @myrb_devstate_name(i8 zeroext %24) #11, !dbg !13441
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.155, i64 0, i64 0), i32 %22, i8* %call14) #12, !dbg !13441
  %25 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13442
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13443
  %call15 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %26) #11, !dbg !13444
  %27 = load i32, i32* %ldev_num, align 4, !dbg !13445
  %call16 = call i32 @scsi_add_device(%struct.Scsi_Host* %25, i32 %call15, i32 %27, i64 0) #11, !dbg !13446
  br label %for.inc, !dbg !13447

if.end17:                                         ; preds = %for.body
  %28 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13448
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %28, i32 0, i32 21, !dbg !13449
  %29 = load i8*, i8** %hostdata, align 8, !dbg !13449
  %30 = bitcast i8* %29 to %struct.myrb_ldev_info*, !dbg !13448
  store %struct.myrb_ldev_info* %30, %struct.myrb_ldev_info** %old, align 8, !dbg !13450
  %31 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %new, align 8, !dbg !13451
  %state18 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %31, i32 0, i32 1, !dbg !13453
  %32 = load i8, i8* %state18, align 4, !dbg !13453
  %conv19 = zext i8 %32 to i32, !dbg !13451
  %33 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %old, align 8, !dbg !13454
  %state20 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %33, i32 0, i32 1, !dbg !13455
  %34 = load i8, i8* %state20, align 4, !dbg !13455
  %conv21 = zext i8 %34 to i32, !dbg !13454
  %cmp22 = icmp ne i32 %conv19, %conv21, !dbg !13456
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !13457

if.then24:                                        ; preds = %if.end17
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !13458
  %shost_gendev25 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %35, i32 0, i32 47, !dbg !13458
  %36 = load i32, i32* %ldev_num, align 4, !dbg !13458
  %37 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %new, align 8, !dbg !13458
  %state26 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %37, i32 0, i32 1, !dbg !13458
  %38 = load i8, i8* %state26, align 4, !dbg !13458
  %call27 = call i8* @myrb_devstate_name(i8 zeroext %38) #11, !dbg !13458
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev25, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.156, i64 0, i64 0), i32 %36, i8* %call27) #12, !dbg !13458
  br label %if.end28, !dbg !13458

if.end28:                                         ; preds = %if.then24, %if.end17
  %39 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %new, align 8, !dbg !13459
  %wb_enabled = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %39, i32 0, i32 2, !dbg !13461
  %40 = bitcast [3 x i8]* %wb_enabled to i24*, !dbg !13461
  %bf.load = load i24, i24* %40, align 1, !dbg !13461
  %bf.lshr = lshr i24 %bf.load, 7, !dbg !13461
  %bf.clear = and i24 %bf.lshr, 1, !dbg !13461
  %bf.cast = zext i24 %bf.clear to i32, !dbg !13461
  %41 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %old, align 8, !dbg !13462
  %wb_enabled29 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %41, i32 0, i32 2, !dbg !13463
  %42 = bitcast [3 x i8]* %wb_enabled29 to i24*, !dbg !13463
  %bf.load30 = load i24, i24* %42, align 1, !dbg !13463
  %bf.lshr31 = lshr i24 %bf.load30, 7, !dbg !13463
  %bf.clear32 = and i24 %bf.lshr31, 1, !dbg !13463
  %bf.cast33 = zext i24 %bf.clear32 to i32, !dbg !13463
  %cmp34 = icmp ne i32 %bf.cast, %bf.cast33, !dbg !13464
  br i1 %cmp34, label %if.then36, label %if.end43, !dbg !13465

if.then36:                                        ; preds = %if.end28
  %43 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13466
  %44 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %new, align 8, !dbg !13466
  %wb_enabled37 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %44, i32 0, i32 2, !dbg !13466
  %45 = bitcast [3 x i8]* %wb_enabled37 to i24*, !dbg !13466
  %bf.load38 = load i24, i24* %45, align 1, !dbg !13466
  %bf.lshr39 = lshr i24 %bf.load38, 7, !dbg !13466
  %bf.clear40 = and i24 %bf.lshr39, 1, !dbg !13466
  %bf.cast41 = zext i24 %bf.clear40 to i32, !dbg !13466
  %tobool42 = icmp ne i32 %bf.cast41, 0, !dbg !13466
  %46 = zext i1 %tobool42 to i64, !dbg !13466
  %cond = select i1 %tobool42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i64 0, i64 0), !dbg !13466
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %43, i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.157, i64 0, i64 0), i8* %cond) #11, !dbg !13466
  br label %if.end43, !dbg !13466

if.end43:                                         ; preds = %if.then36, %if.end28
  %47 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %old, align 8, !dbg !13467
  %48 = bitcast %struct.myrb_ldev_info* %47 to i8*, !dbg !13468
  %49 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %new, align 8, !dbg !13469
  %50 = bitcast %struct.myrb_ldev_info* %49 to i8*, !dbg !13468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %50, i64 8, i1 false), !dbg !13468
  %51 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13470
  call void @scsi_device_put(%struct.scsi_device* %51) #11, !dbg !13471
  br label %for.inc, !dbg !13472

for.inc:                                          ; preds = %if.end43, %if.end12, %if.then11
  %52 = load i32, i32* %ldev_num, align 4, !dbg !13473
  %inc = add i32 %52, 1, !dbg !13473
  store i32 %inc, i32* %ldev_num, align 4, !dbg !13473
  br label %for.cond, !dbg !13474, !llvm.loop !13475

for.end:                                          ; preds = %for.cond
  %53 = load i16, i16* %status, align 2, !dbg !13477
  store i16 %53, i16* %retval, align 2, !dbg !13478
  br label %return, !dbg !13478

return:                                           ; preds = %for.end, %if.then
  %54 = load i16, i16* %retval, align 2, !dbg !13479
  ret i16 %54, !dbg !13479
}

; Function Attrs: noredzone
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_bgi_control(%struct.myrb_hba* %cb) #0 !dbg !13480 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %bgi = alloca %struct.myrb_bgi_status*, align 8
  %last_bgi = alloca %struct.myrb_bgi_status*, align 8
  %bgi_addr = alloca i64, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %status = alloca i16, align 2
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !13481, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !13483, metadata !DIExpression()), !dbg !13484
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13485
  %mcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 53, !dbg !13486
  store %struct.myrb_cmdblk* %mcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !13484
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !13487, metadata !DIExpression()), !dbg !13488
  %1 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !13489
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %1, i32 0, i32 0, !dbg !13490
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13488
  call void @llvm.dbg.declare(metadata %struct.myrb_bgi_status** %bgi, metadata !13491, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.declare(metadata %struct.myrb_bgi_status** %last_bgi, metadata !13494, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.declare(metadata i64* %bgi_addr, metadata !13496, metadata !DIExpression()), !dbg !13497
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !13498, metadata !DIExpression()), !dbg !13499
  store %struct.scsi_device* null, %struct.scsi_device** %sdev, align 8, !dbg !13499
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13500, metadata !DIExpression()), !dbg !13501
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13502
  %pdev = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 17, !dbg !13503
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13503
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !13504
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 32, i64* %bgi_addr, i32 3264) #11, !dbg !13505
  %4 = bitcast i8* %call to %struct.myrb_bgi_status*, !dbg !13505
  store %struct.myrb_bgi_status* %4, %struct.myrb_bgi_status** %bgi, align 8, !dbg !13506
  %5 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %bgi, align 8, !dbg !13507
  %tobool = icmp ne %struct.myrb_bgi_status* %5, null, !dbg !13507
  br i1 %tobool, label %if.end, label %if.then, !dbg !13509

if.then:                                          ; preds = %entry
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13510
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %6, i32 0, i32 18, !dbg !13510
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13510
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 47, !dbg !13510
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.160, i64 0, i64 0)) #12, !dbg !13510
  br label %return, !dbg !13512

if.end:                                           ; preds = %entry
  %8 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !13513
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %8) #11, !dbg !13514
  %9 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13515
  %type3B = bitcast %union.myrb_cmd_mbox* %9 to %struct.anon.79*, !dbg !13516
  %id = getelementptr inbounds %struct.anon.79, %struct.anon.79* %type3B, i32 0, i32 1, !dbg !13517
  store i8 1, i8* %id, align 1, !dbg !13518
  %10 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13519
  %type3B2 = bitcast %union.myrb_cmd_mbox* %10 to %struct.anon.79*, !dbg !13520
  %opcode = getelementptr inbounds %struct.anon.79, %struct.anon.79* %type3B2, i32 0, i32 0, !dbg !13521
  store i8 43, i8* %opcode, align 4, !dbg !13522
  %11 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13523
  %type3B3 = bitcast %union.myrb_cmd_mbox* %11 to %struct.anon.79*, !dbg !13524
  %optype = getelementptr inbounds %struct.anon.79, %struct.anon.79* %type3B3, i32 0, i32 2, !dbg !13525
  store i8 32, i8* %optype, align 2, !dbg !13526
  %12 = load i64, i64* %bgi_addr, align 8, !dbg !13527
  %conv = trunc i64 %12 to i32, !dbg !13527
  %13 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13528
  %type3B4 = bitcast %union.myrb_cmd_mbox* %13 to %struct.anon.79*, !dbg !13529
  %addr = getelementptr inbounds %struct.anon.79, %struct.anon.79* %type3B4, i32 0, i32 4, !dbg !13530
  store i32 %conv, i32* %addr, align 4, !dbg !13531
  %14 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13532
  %15 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !13533
  %call5 = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %14, %struct.myrb_cmdblk* %15) #11, !dbg !13534
  store i16 %call5, i16* %status, align 2, !dbg !13535
  %16 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13536
  %bgi_status = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %16, i32 0, i32 62, !dbg !13537
  store %struct.myrb_bgi_status* %bgi_status, %struct.myrb_bgi_status** %last_bgi, align 8, !dbg !13538
  %17 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13539
  %host6 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %17, i32 0, i32 18, !dbg !13540
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host6, align 8, !dbg !13540
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13541
  %host7 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 18, !dbg !13542
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host7, align 8, !dbg !13542
  %call8 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %20) #11, !dbg !13543
  %21 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %bgi, align 8, !dbg !13544
  %ldev_num = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %21, i32 0, i32 3, !dbg !13545
  %22 = load i32, i32* %ldev_num, align 4, !dbg !13545
  %call9 = call %struct.scsi_device* @scsi_device_lookup(%struct.Scsi_Host* %18, i32 %call8, i32 %22, i64 0) #11, !dbg !13546
  store %struct.scsi_device* %call9, %struct.scsi_device** %sdev, align 8, !dbg !13547
  %23 = load i16, i16* %status, align 2, !dbg !13548
  %conv10 = zext i16 %23 to i32, !dbg !13548
  switch i32 %conv10, label %sw.epilog66 [
    i32 0, label %sw.bb
    i32 256, label %sw.bb41
    i32 5, label %sw.bb53
    i32 261, label %sw.bb63
  ], !dbg !13549

sw.bb:                                            ; preds = %if.end
  %24 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %bgi, align 8, !dbg !13550
  %status11 = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %24, i32 0, i32 5, !dbg !13552
  %25 = load i8, i8* %status11, align 1, !dbg !13552
  %conv12 = zext i8 %25 to i32, !dbg !13550
  switch i32 %conv12, label %sw.epilog [
    i32 0, label %sw.bb13
    i32 2, label %sw.bb14
    i32 4, label %sw.bb18
    i32 5, label %sw.bb32
    i32 6, label %sw.bb36
  ], !dbg !13553

sw.bb13:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !13554

sw.bb14:                                          ; preds = %sw.bb
  %26 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13556
  %tobool15 = icmp ne %struct.scsi_device* %26, null, !dbg !13556
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !13558

if.then16:                                        ; preds = %sw.bb14
  br label %sw.epilog, !dbg !13559

if.end17:                                         ; preds = %sw.bb14
  %27 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13560
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %27, i8* null, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.161, i64 0, i64 0)) #11, !dbg !13560
  br label %sw.epilog, !dbg !13561

sw.bb18:                                          ; preds = %sw.bb
  %28 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13562
  %tobool19 = icmp ne %struct.scsi_device* %28, null, !dbg !13562
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !13564

if.then20:                                        ; preds = %sw.bb18
  br label %sw.epilog, !dbg !13565

if.end21:                                         ; preds = %sw.bb18
  %29 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %bgi, align 8, !dbg !13566
  %blocks_done = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %29, i32 0, i32 1, !dbg !13568
  %30 = load i32, i32* %blocks_done, align 4, !dbg !13568
  %31 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %last_bgi, align 8, !dbg !13569
  %blocks_done22 = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %31, i32 0, i32 1, !dbg !13570
  %32 = load i32, i32* %blocks_done22, align 4, !dbg !13570
  %cmp = icmp eq i32 %30, %32, !dbg !13571
  br i1 %cmp, label %land.lhs.true, label %if.end29, !dbg !13572

land.lhs.true:                                    ; preds = %if.end21
  %33 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %bgi, align 8, !dbg !13573
  %ldev_num24 = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %33, i32 0, i32 3, !dbg !13574
  %34 = load i32, i32* %ldev_num24, align 4, !dbg !13574
  %35 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %last_bgi, align 8, !dbg !13575
  %ldev_num25 = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %35, i32 0, i32 3, !dbg !13576
  %36 = load i32, i32* %ldev_num25, align 4, !dbg !13576
  %cmp26 = icmp eq i32 %34, %36, !dbg !13577
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !13578

if.then28:                                        ; preds = %land.lhs.true
  br label %sw.epilog, !dbg !13579

if.end29:                                         ; preds = %land.lhs.true, %if.end21
  %37 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13580
  %38 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %bgi, align 8, !dbg !13580
  %blocks_done30 = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %38, i32 0, i32 1, !dbg !13580
  %39 = load i32, i32* %blocks_done30, align 4, !dbg !13580
  %shr = lshr i32 %39, 7, !dbg !13580
  %mul = mul i32 100, %shr, !dbg !13580
  %40 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %bgi, align 8, !dbg !13580
  %ldev_size = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %40, i32 0, i32 0, !dbg !13580
  %41 = load i32, i32* %ldev_size, align 4, !dbg !13580
  %shr31 = lshr i32 %41, 7, !dbg !13580
  %div = udiv i32 %mul, %shr31, !dbg !13580
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %37, i8* null, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i64 0, i64 0), i32 %div) #11, !dbg !13580
  br label %sw.epilog, !dbg !13581

sw.bb32:                                          ; preds = %sw.bb
  %42 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13582
  %tobool33 = icmp ne %struct.scsi_device* %42, null, !dbg !13582
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !13584

if.then34:                                        ; preds = %sw.bb32
  br label %sw.epilog, !dbg !13585

if.end35:                                         ; preds = %sw.bb32
  %43 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13586
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %43, i8* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.163, i64 0, i64 0)) #11, !dbg !13586
  br label %sw.epilog, !dbg !13587

sw.bb36:                                          ; preds = %sw.bb
  %44 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13588
  %tobool37 = icmp ne %struct.scsi_device* %44, null, !dbg !13588
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !13590

if.then38:                                        ; preds = %sw.bb36
  br label %sw.epilog, !dbg !13591

if.end39:                                         ; preds = %sw.bb36
  %45 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13592
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %45, i8* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.164, i64 0, i64 0)) #11, !dbg !13592
  br label %sw.epilog, !dbg !13593

sw.epilog:                                        ; preds = %sw.bb, %if.end39, %if.then38, %if.end35, %if.then34, %if.end29, %if.then28, %if.then20, %if.end17, %if.then16, %sw.bb13
  %46 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13594
  %bgi_status40 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %46, i32 0, i32 62, !dbg !13595
  %47 = bitcast %struct.myrb_bgi_status* %bgi_status40 to i8*, !dbg !13596
  %48 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %bgi, align 8, !dbg !13597
  %49 = bitcast %struct.myrb_bgi_status* %48 to i8*, !dbg !13596
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 4 %49, i64 32, i1 false), !dbg !13596
  br label %sw.epilog66, !dbg !13598

sw.bb41:                                          ; preds = %if.end
  %50 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13599
  %tobool42 = icmp ne %struct.scsi_device* %50, null, !dbg !13599
  br i1 %tobool42, label %land.lhs.true43, label %if.end50, !dbg !13601

land.lhs.true43:                                  ; preds = %sw.bb41
  %51 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13602
  %bgi_status44 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %51, i32 0, i32 62, !dbg !13603
  %status45 = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %bgi_status44, i32 0, i32 5, !dbg !13604
  %52 = load i8, i8* %status45, align 1, !dbg !13604
  %conv46 = zext i8 %52 to i32, !dbg !13602
  %cmp47 = icmp eq i32 %conv46, 4, !dbg !13605
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !13606

if.then49:                                        ; preds = %land.lhs.true43
  %53 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13607
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %53, i8* null, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.165, i64 0, i64 0)) #11, !dbg !13607
  br label %if.end50, !dbg !13607

if.end50:                                         ; preds = %if.then49, %land.lhs.true43, %sw.bb41
  %54 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13608
  %bgi_status51 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %54, i32 0, i32 62, !dbg !13609
  %status52 = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %bgi_status51, i32 0, i32 5, !dbg !13610
  store i8 0, i8* %status52, align 1, !dbg !13611
  br label %sw.epilog66, !dbg !13612

sw.bb53:                                          ; preds = %if.end
  %55 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13613
  %tobool54 = icmp ne %struct.scsi_device* %55, null, !dbg !13613
  br i1 %tobool54, label %land.lhs.true55, label %if.end62, !dbg !13615

land.lhs.true55:                                  ; preds = %sw.bb53
  %56 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13616
  %bgi_status56 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %56, i32 0, i32 62, !dbg !13617
  %status57 = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %bgi_status56, i32 0, i32 5, !dbg !13618
  %57 = load i8, i8* %status57, align 1, !dbg !13618
  %conv58 = zext i8 %57 to i32, !dbg !13616
  %cmp59 = icmp eq i32 %conv58, 4, !dbg !13619
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !13620

if.then61:                                        ; preds = %land.lhs.true55
  %58 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13621
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %58, i8* null, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.166, i64 0, i64 0)) #11, !dbg !13621
  br label %if.end62, !dbg !13621

if.end62:                                         ; preds = %if.then61, %land.lhs.true55, %sw.bb53
  br label %sw.bb63, !dbg !13622

sw.bb63:                                          ; preds = %if.end, %if.end62
  %59 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13623
  %bgi_status64 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %59, i32 0, i32 62, !dbg !13624
  %status65 = getelementptr inbounds %struct.myrb_bgi_status, %struct.myrb_bgi_status* %bgi_status64, i32 0, i32 5, !dbg !13625
  store i8 0, i8* %status65, align 1, !dbg !13626
  br label %sw.epilog66, !dbg !13627

sw.epilog66:                                      ; preds = %if.end, %sw.bb63, %if.end50, %sw.epilog
  %60 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13628
  %tobool67 = icmp ne %struct.scsi_device* %60, null, !dbg !13628
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !13630

if.then68:                                        ; preds = %sw.epilog66
  %61 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !13631
  call void @scsi_device_put(%struct.scsi_device* %61) #11, !dbg !13632
  br label %if.end69, !dbg !13632

if.end69:                                         ; preds = %if.then68, %sw.epilog66
  %62 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13633
  %pdev70 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %62, i32 0, i32 17, !dbg !13634
  %63 = load %struct.pci_dev*, %struct.pci_dev** %pdev70, align 8, !dbg !13634
  %dev71 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %63, i32 0, i32 41, !dbg !13635
  %64 = load %struct.myrb_bgi_status*, %struct.myrb_bgi_status** %bgi, align 8, !dbg !13636
  %65 = bitcast %struct.myrb_bgi_status* %64 to i8*, !dbg !13636
  %66 = load i64, i64* %bgi_addr, align 8, !dbg !13637
  call void @dma_free_coherent(%struct.device* %dev71, i64 32, i8* %65, i64 %66) #11, !dbg !13638
  br label %return, !dbg !13639

return:                                           ; preds = %if.end69, %if.then
  ret void, !dbg !13639
}

; Function Attrs: noredzone
declare dso_local %struct.scsi_device* @scsi_device_lookup(%struct.Scsi_Host*, i32, i32, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @scsi_add_device(%struct.Scsi_Host*, i32, i32, i64) #2

; Function Attrs: noredzone
declare dso_local void @scsi_device_put(%struct.scsi_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_unmap(%struct.myrb_hba* %cb) #0 !dbg !13640 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %ldev_info_size = alloca i64, align 8
  %err_table_size = alloca i64, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !13641, metadata !DIExpression()), !dbg !13642
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13643
  %ldev_info_buf = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 60, !dbg !13645
  %1 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info_buf, align 8, !dbg !13645
  %tobool = icmp ne %struct.myrb_ldev_info* %1, null, !dbg !13643
  br i1 %tobool, label %if.then, label %if.end, !dbg !13646

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %ldev_info_size, metadata !13647, metadata !DIExpression()), !dbg !13649
  store i64 256, i64* %ldev_info_size, align 8, !dbg !13649
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13650
  %pdev = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 17, !dbg !13651
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13651
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !13652
  %4 = load i64, i64* %ldev_info_size, align 8, !dbg !13653
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13654
  %ldev_info_buf1 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %5, i32 0, i32 60, !dbg !13655
  %6 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info_buf1, align 8, !dbg !13655
  %7 = bitcast %struct.myrb_ldev_info* %6 to i8*, !dbg !13654
  %8 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13656
  %ldev_info_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %8, i32 0, i32 61, !dbg !13657
  %9 = load i64, i64* %ldev_info_addr, align 8, !dbg !13657
  call void @dma_free_coherent(%struct.device* %dev, i64 %4, i8* %7, i64 %9) #11, !dbg !13658
  %10 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13659
  %ldev_info_buf2 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %10, i32 0, i32 60, !dbg !13660
  store %struct.myrb_ldev_info* null, %struct.myrb_ldev_info** %ldev_info_buf2, align 8, !dbg !13661
  br label %if.end, !dbg !13662

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13663
  %err_table = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %11, i32 0, i32 57, !dbg !13665
  %12 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %err_table, align 8, !dbg !13665
  %tobool3 = icmp ne %struct.myrb_error_entry* %12, null, !dbg !13663
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !13666

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %err_table_size, metadata !13667, metadata !DIExpression()), !dbg !13669
  store i64 192, i64* %err_table_size, align 8, !dbg !13669
  %13 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13670
  %pdev5 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %13, i32 0, i32 17, !dbg !13671
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev5, align 8, !dbg !13671
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !13672
  %15 = load i64, i64* %err_table_size, align 8, !dbg !13673
  %16 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13674
  %err_table7 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %16, i32 0, i32 57, !dbg !13675
  %17 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %err_table7, align 8, !dbg !13675
  %18 = bitcast %struct.myrb_error_entry* %17 to i8*, !dbg !13674
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13676
  %err_table_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 58, !dbg !13677
  %20 = load i64, i64* %err_table_addr, align 8, !dbg !13677
  call void @dma_free_coherent(%struct.device* %dev6, i64 %15, i8* %18, i64 %20) #11, !dbg !13678
  %21 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13679
  %err_table8 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %21, i32 0, i32 57, !dbg !13680
  store %struct.myrb_error_entry* null, %struct.myrb_error_entry** %err_table8, align 8, !dbg !13681
  br label %if.end9, !dbg !13682

if.end9:                                          ; preds = %if.then4, %if.end
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13683
  %enquiry = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 55, !dbg !13685
  %23 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry, align 8, !dbg !13685
  %tobool10 = icmp ne %struct.myrb_enquiry* %23, null, !dbg !13683
  br i1 %tobool10, label %if.then11, label %if.end16, !dbg !13686

if.then11:                                        ; preds = %if.end9
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13687
  %pdev12 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 17, !dbg !13689
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev12, align 8, !dbg !13689
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !13690
  %26 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13691
  %enquiry14 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %26, i32 0, i32 55, !dbg !13692
  %27 = load %struct.myrb_enquiry*, %struct.myrb_enquiry** %enquiry14, align 8, !dbg !13692
  %28 = bitcast %struct.myrb_enquiry* %27 to i8*, !dbg !13691
  %29 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13693
  %enquiry_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %29, i32 0, i32 56, !dbg !13694
  %30 = load i64, i64* %enquiry_addr, align 8, !dbg !13694
  call void @dma_free_coherent(%struct.device* %dev13, i64 256, i8* %28, i64 %30) #11, !dbg !13695
  %31 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13696
  %enquiry15 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %31, i32 0, i32 55, !dbg !13697
  store %struct.myrb_enquiry* null, %struct.myrb_enquiry** %enquiry15, align 8, !dbg !13698
  br label %if.end16, !dbg !13699

if.end16:                                         ; preds = %if.then11, %if.end9
  %32 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13700
  %first_stat_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %32, i32 0, i32 49, !dbg !13702
  %33 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %first_stat_mbox, align 8, !dbg !13702
  %tobool17 = icmp ne %struct.myrb_stat_mbox* %33, null, !dbg !13700
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !13703

if.then18:                                        ; preds = %if.end16
  %34 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13704
  %pdev19 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %34, i32 0, i32 17, !dbg !13706
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev19, align 8, !dbg !13706
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 41, !dbg !13707
  %36 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13708
  %stat_mbox_size = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %36, i32 0, i32 47, !dbg !13709
  %37 = load i64, i64* %stat_mbox_size, align 8, !dbg !13709
  %38 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13710
  %first_stat_mbox21 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %38, i32 0, i32 49, !dbg !13711
  %39 = load %struct.myrb_stat_mbox*, %struct.myrb_stat_mbox** %first_stat_mbox21, align 8, !dbg !13711
  %40 = bitcast %struct.myrb_stat_mbox* %39 to i8*, !dbg !13710
  %41 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13712
  %stat_mbox_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %41, i32 0, i32 48, !dbg !13713
  %42 = load i64, i64* %stat_mbox_addr, align 8, !dbg !13713
  call void @dma_free_coherent(%struct.device* %dev20, i64 %37, i8* %40, i64 %42) #11, !dbg !13714
  %43 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13715
  %first_stat_mbox22 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %43, i32 0, i32 49, !dbg !13716
  store %struct.myrb_stat_mbox* null, %struct.myrb_stat_mbox** %first_stat_mbox22, align 8, !dbg !13717
  br label %if.end23, !dbg !13718

if.end23:                                         ; preds = %if.then18, %if.end16
  %44 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13719
  %first_cmd_mbox = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %44, i32 0, i32 42, !dbg !13721
  %45 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %first_cmd_mbox, align 8, !dbg !13721
  %tobool24 = icmp ne %union.myrb_cmd_mbox* %45, null, !dbg !13719
  br i1 %tobool24, label %if.then25, label %if.end30, !dbg !13722

if.then25:                                        ; preds = %if.end23
  %46 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13723
  %pdev26 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %46, i32 0, i32 17, !dbg !13725
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pdev26, align 8, !dbg !13725
  %dev27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 41, !dbg !13726
  %48 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13727
  %cmd_mbox_size = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %48, i32 0, i32 40, !dbg !13728
  %49 = load i64, i64* %cmd_mbox_size, align 8, !dbg !13728
  %50 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13729
  %first_cmd_mbox28 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %50, i32 0, i32 42, !dbg !13730
  %51 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %first_cmd_mbox28, align 8, !dbg !13730
  %52 = bitcast %union.myrb_cmd_mbox* %51 to i8*, !dbg !13729
  %53 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13731
  %cmd_mbox_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %53, i32 0, i32 41, !dbg !13732
  %54 = load i64, i64* %cmd_mbox_addr, align 8, !dbg !13732
  call void @dma_free_coherent(%struct.device* %dev27, i64 %49, i8* %52, i64 %54) #11, !dbg !13733
  %55 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13734
  %first_cmd_mbox29 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %55, i32 0, i32 42, !dbg !13735
  store %union.myrb_cmd_mbox* null, %union.myrb_cmd_mbox** %first_cmd_mbox29, align 8, !dbg !13736
  br label %if.end30, !dbg !13737

if.end30:                                         ; preds = %if.then25, %if.end23
  ret void, !dbg !13738
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #2

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @scsi_host_put(%struct.Scsi_Host*) #2

; Function Attrs: noredzone
declare dso_local %struct.dma_pool* @dma_pool_create(i8*, %struct.device*, i64, i64, i64) #2

; Function Attrs: noredzone
declare dso_local void @dma_pool_destroy(%struct.dma_pool*) #2

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !13739 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13742, metadata !DIExpression()), !dbg !13743
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !13744, metadata !DIExpression()), !dbg !13745
  ret void, !dbg !13746
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !13747 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !13751, metadata !DIExpression()), !dbg !13752
  br label %do.body, !dbg !13753

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13754

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !13756

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !13754

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13758
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13758
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !13758
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !13758
  br label %do.end3, !dbg !13758

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !13754

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13760
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13761
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !13762
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !13763
  ret void, !dbg !13764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_monitor(%struct.work_struct* %work) #0 !dbg !13765 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.myrb_hba*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %interval = alloca i64, align 8
  %event = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13766, metadata !DIExpression()), !dbg !13767
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !13768, metadata !DIExpression()), !dbg !13769
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13770, metadata !DIExpression()), !dbg !13772
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13772
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !13772
  store i8* %1, i8** %__mptr, align 8, !dbg !13772
  br label %do.body, !dbg !13772

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13773

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13772
  %add.ptr = getelementptr i8, i8* %2, i64 -80, !dbg !13772
  %3 = bitcast i8* %add.ptr to %struct.myrb_hba*, !dbg !13772
  store %struct.myrb_hba* %3, %struct.myrb_hba** %tmp, align 8, !dbg !13773
  %4 = load %struct.myrb_hba*, %struct.myrb_hba** %tmp, align 8, !dbg !13772
  store %struct.myrb_hba* %4, %struct.myrb_hba** %cb, align 8, !dbg !13769
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !13775, metadata !DIExpression()), !dbg !13776
  %5 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13777
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %5, i32 0, i32 18, !dbg !13778
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13778
  store %struct.Scsi_Host* %6, %struct.Scsi_Host** %shost, align 8, !dbg !13776
  call void @llvm.dbg.declare(metadata i64* %interval, metadata !13779, metadata !DIExpression()), !dbg !13780
  store i64 2500, i64* %interval, align 8, !dbg !13780
  %7 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13781
  %new_ev_seq = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %7, i32 0, i32 6, !dbg !13783
  %8 = load i16, i16* %new_ev_seq, align 4, !dbg !13783
  %conv = zext i16 %8 to i32, !dbg !13781
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13784
  %old_ev_seq = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %9, i32 0, i32 7, !dbg !13785
  %10 = load i16, i16* %old_ev_seq, align 2, !dbg !13785
  %conv1 = zext i16 %10 to i32, !dbg !13784
  %cmp = icmp sgt i32 %conv, %conv1, !dbg !13786
  br i1 %cmp, label %if.then, label %if.else, !dbg !13787

if.then:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %event, metadata !13788, metadata !DIExpression()), !dbg !13790
  %11 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13791
  %old_ev_seq3 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %11, i32 0, i32 7, !dbg !13792
  %12 = load i16, i16* %old_ev_seq3, align 2, !dbg !13792
  %conv4 = zext i16 %12 to i32, !dbg !13791
  store i32 %conv4, i32* %event, align 4, !dbg !13790
  %13 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13793
  %14 = load i32, i32* %event, align 4, !dbg !13794
  call void @myrb_get_event(%struct.myrb_hba* %13, i32 %14) #11, !dbg !13795
  %15 = load i32, i32* %event, align 4, !dbg !13796
  %add = add i32 %15, 1, !dbg !13797
  %conv5 = trunc i32 %add to i16, !dbg !13796
  %16 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13798
  %old_ev_seq6 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %16, i32 0, i32 7, !dbg !13799
  store i16 %conv5, i16* %old_ev_seq6, align 2, !dbg !13800
  store i64 10, i64* %interval, align 8, !dbg !13801
  br label %if.end68, !dbg !13802

if.else:                                          ; preds = %do.end
  %17 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13803
  %need_err_info = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %17, i32 0, i32 12, !dbg !13805
  %18 = load i8, i8* %need_err_info, align 4, !dbg !13805
  %tobool = trunc i8 %18 to i1, !dbg !13805
  br i1 %tobool, label %if.then7, label %if.else9, !dbg !13806

if.then7:                                         ; preds = %if.else
  %19 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13807
  %need_err_info8 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %19, i32 0, i32 12, !dbg !13809
  store i8 0, i8* %need_err_info8, align 4, !dbg !13810
  %20 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13811
  call void @myrb_get_errtable(%struct.myrb_hba* %20) #11, !dbg !13812
  store i64 10, i64* %interval, align 8, !dbg !13813
  br label %if.end67, !dbg !13814

if.else9:                                         ; preds = %if.else
  %21 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13815
  %need_rbld = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %21, i32 0, i32 13, !dbg !13817
  %22 = load i8, i8* %need_rbld, align 1, !dbg !13817
  %tobool10 = trunc i8 %22 to i1, !dbg !13817
  br i1 %tobool10, label %land.lhs.true, label %if.else16, !dbg !13818

land.lhs.true:                                    ; preds = %if.else9
  %23 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13819
  %rbld_first = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %23, i32 0, i32 16, !dbg !13820
  %24 = load i8, i8* %rbld_first, align 8, !dbg !13820
  %tobool12 = trunc i8 %24 to i1, !dbg !13820
  br i1 %tobool12, label %if.then14, label %if.else16, !dbg !13821

if.then14:                                        ; preds = %land.lhs.true
  %25 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13822
  %need_rbld15 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %25, i32 0, i32 13, !dbg !13824
  store i8 0, i8* %need_rbld15, align 1, !dbg !13825
  %26 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13826
  call void @myrb_update_rbld_progress(%struct.myrb_hba* %26) #11, !dbg !13827
  store i64 10, i64* %interval, align 8, !dbg !13828
  br label %if.end66, !dbg !13829

if.else16:                                        ; preds = %land.lhs.true, %if.else9
  %27 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13830
  %need_ldev_info = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %27, i32 0, i32 11, !dbg !13832
  %28 = load i8, i8* %need_ldev_info, align 1, !dbg !13832
  %tobool17 = trunc i8 %28 to i1, !dbg !13832
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !13833

if.then18:                                        ; preds = %if.else16
  %29 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13834
  %need_ldev_info19 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %29, i32 0, i32 11, !dbg !13836
  store i8 0, i8* %need_ldev_info19, align 1, !dbg !13837
  %30 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13838
  %call = call zeroext i16 @myrb_get_ldev_info(%struct.myrb_hba* %30) #11, !dbg !13839
  store i64 10, i64* %interval, align 8, !dbg !13840
  br label %if.end65, !dbg !13841

if.else20:                                        ; preds = %if.else16
  %31 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13842
  %need_rbld21 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %31, i32 0, i32 13, !dbg !13844
  %32 = load i8, i8* %need_rbld21, align 1, !dbg !13844
  %tobool22 = trunc i8 %32 to i1, !dbg !13844
  br i1 %tobool22, label %if.then23, label %if.else25, !dbg !13845

if.then23:                                        ; preds = %if.else20
  %33 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13846
  %need_rbld24 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %33, i32 0, i32 13, !dbg !13848
  store i8 0, i8* %need_rbld24, align 1, !dbg !13849
  %34 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13850
  call void @myrb_update_rbld_progress(%struct.myrb_hba* %34) #11, !dbg !13851
  store i64 10, i64* %interval, align 8, !dbg !13852
  br label %if.end64, !dbg !13853

if.else25:                                        ; preds = %if.else20
  %35 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13854
  %need_cc_status = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %35, i32 0, i32 14, !dbg !13856
  %36 = load i8, i8* %need_cc_status, align 2, !dbg !13856
  %tobool26 = trunc i8 %36 to i1, !dbg !13856
  br i1 %tobool26, label %if.then27, label %if.else29, !dbg !13857

if.then27:                                        ; preds = %if.else25
  %37 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13858
  %need_cc_status28 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %37, i32 0, i32 14, !dbg !13860
  store i8 0, i8* %need_cc_status28, align 2, !dbg !13861
  %38 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13862
  call void @myrb_get_cc_progress(%struct.myrb_hba* %38) #11, !dbg !13863
  store i64 10, i64* %interval, align 8, !dbg !13864
  br label %if.end63, !dbg !13865

if.else29:                                        ; preds = %if.else25
  %39 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13866
  %need_bgi_status = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %39, i32 0, i32 15, !dbg !13868
  %40 = load i8, i8* %need_bgi_status, align 1, !dbg !13868
  %tobool30 = trunc i8 %40 to i1, !dbg !13868
  br i1 %tobool30, label %if.then31, label %if.else33, !dbg !13869

if.then31:                                        ; preds = %if.else29
  %41 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13870
  %need_bgi_status32 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %41, i32 0, i32 15, !dbg !13872
  store i8 0, i8* %need_bgi_status32, align 1, !dbg !13873
  %42 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13874
  call void @myrb_bgi_control(%struct.myrb_hba* %42) #11, !dbg !13875
  store i64 10, i64* %interval, align 8, !dbg !13876
  br label %if.end62, !dbg !13877

if.else33:                                        ; preds = %if.else29
  %43 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13878
  %dma_mutex = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %43, i32 0, i32 63, !dbg !13880
  call void @mutex_lock(%struct.mutex* %dma_mutex) #11, !dbg !13881
  %44 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13882
  %call34 = call zeroext i16 @myrb_hba_enquiry(%struct.myrb_hba* %44) #11, !dbg !13883
  %45 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13884
  %dma_mutex35 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %45, i32 0, i32 63, !dbg !13885
  call void @mutex_unlock(%struct.mutex* %dma_mutex35) #11, !dbg !13886
  %46 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13887
  %new_ev_seq36 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %46, i32 0, i32 6, !dbg !13889
  %47 = load i16, i16* %new_ev_seq36, align 4, !dbg !13889
  %conv37 = zext i16 %47 to i32, !dbg !13887
  %48 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13890
  %old_ev_seq38 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %48, i32 0, i32 7, !dbg !13891
  %49 = load i16, i16* %old_ev_seq38, align 2, !dbg !13891
  %conv39 = zext i16 %49 to i32, !dbg !13890
  %sub = sub i32 %conv37, %conv39, !dbg !13892
  %cmp40 = icmp sgt i32 %sub, 0, !dbg !13893
  br i1 %cmp40, label %if.then61, label %lor.lhs.false, !dbg !13894

lor.lhs.false:                                    ; preds = %if.else33
  %50 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13895
  %need_err_info42 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %50, i32 0, i32 12, !dbg !13896
  %51 = load i8, i8* %need_err_info42, align 4, !dbg !13896
  %tobool43 = trunc i8 %51 to i1, !dbg !13896
  br i1 %tobool43, label %if.then61, label %lor.lhs.false45, !dbg !13897

lor.lhs.false45:                                  ; preds = %lor.lhs.false
  %52 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13898
  %need_rbld46 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %52, i32 0, i32 13, !dbg !13899
  %53 = load i8, i8* %need_rbld46, align 1, !dbg !13899
  %tobool47 = trunc i8 %53 to i1, !dbg !13899
  br i1 %tobool47, label %if.then61, label %lor.lhs.false49, !dbg !13900

lor.lhs.false49:                                  ; preds = %lor.lhs.false45
  %54 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13901
  %need_ldev_info50 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %54, i32 0, i32 11, !dbg !13902
  %55 = load i8, i8* %need_ldev_info50, align 1, !dbg !13902
  %tobool51 = trunc i8 %55 to i1, !dbg !13902
  br i1 %tobool51, label %if.then61, label %lor.lhs.false53, !dbg !13903

lor.lhs.false53:                                  ; preds = %lor.lhs.false49
  %56 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13904
  %need_cc_status54 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %56, i32 0, i32 14, !dbg !13905
  %57 = load i8, i8* %need_cc_status54, align 2, !dbg !13905
  %tobool55 = trunc i8 %57 to i1, !dbg !13905
  br i1 %tobool55, label %if.then61, label %lor.lhs.false57, !dbg !13906

lor.lhs.false57:                                  ; preds = %lor.lhs.false53
  %58 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13907
  %need_bgi_status58 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %58, i32 0, i32 15, !dbg !13908
  %59 = load i8, i8* %need_bgi_status58, align 1, !dbg !13908
  %tobool59 = trunc i8 %59 to i1, !dbg !13908
  br i1 %tobool59, label %if.then61, label %if.end, !dbg !13909

if.then61:                                        ; preds = %lor.lhs.false57, %lor.lhs.false53, %lor.lhs.false49, %lor.lhs.false45, %lor.lhs.false, %if.else33
  store i64 0, i64* %interval, align 8, !dbg !13910
  br label %if.end, !dbg !13912

if.end:                                           ; preds = %if.then61, %lor.lhs.false57
  br label %if.end62

if.end62:                                         ; preds = %if.end, %if.then31
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then27
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then23
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then18
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then14
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then7
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then
  %60 = load i64, i64* %interval, align 8, !dbg !13913
  %cmp69 = icmp ugt i64 %60, 1, !dbg !13915
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !13916

if.then71:                                        ; preds = %if.end68
  %61 = load volatile i64, i64* @jiffies, align 8, !dbg !13917
  %62 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13918
  %primary_monitor_time = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %62, i32 0, i32 22, !dbg !13919
  store i64 %61, i64* %primary_monitor_time, align 8, !dbg !13920
  br label %if.end72, !dbg !13918

if.end72:                                         ; preds = %if.then71, %if.end68
  %63 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13921
  %work_q = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %63, i32 0, i32 19, !dbg !13922
  %64 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_q, align 8, !dbg !13922
  %65 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !13923
  %monitor_work = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %65, i32 0, i32 21, !dbg !13924
  %66 = load i64, i64* %interval, align 8, !dbg !13925
  %call73 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %64, %struct.delayed_work* %monitor_work, i64 %66) #11, !dbg !13926
  ret void, !dbg !13927
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #0 !dbg !13928 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !13932, metadata !DIExpression()), !dbg !13933
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !13934, metadata !DIExpression()), !dbg !13935
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !13936, metadata !DIExpression()), !dbg !13937
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !13938
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !13939
  %2 = load i64, i64* %delay.addr, align 8, !dbg !13940
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #11, !dbg !13941
  ret i1 %call, !dbg !13942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_get_event(%struct.myrb_hba* %cb, i32 %event) #0 !dbg !13943 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %event.addr = alloca i32, align 4
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %ev_buf = alloca %struct.myrb_log_entry*, align 8
  %ev_addr = alloca i64, align 8
  %status = alloca i16, align 2
  %sshdr = alloca %struct.scsi_sense_hdr, align 1
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !13946, metadata !DIExpression()), !dbg !13947
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !13948, metadata !DIExpression()), !dbg !13949
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !13950, metadata !DIExpression()), !dbg !13951
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13952
  %mcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 53, !dbg !13953
  store %struct.myrb_cmdblk* %mcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !13951
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !13954, metadata !DIExpression()), !dbg !13955
  %1 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !13956
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %1, i32 0, i32 0, !dbg !13957
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13955
  call void @llvm.dbg.declare(metadata %struct.myrb_log_entry** %ev_buf, metadata !13958, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.declare(metadata i64* %ev_addr, metadata !13974, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13976, metadata !DIExpression()), !dbg !13977
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !13978
  %pdev = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 17, !dbg !13979
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13979
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !13980
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 32, i64* %ev_addr, i32 3264) #11, !dbg !13981
  %4 = bitcast i8* %call to %struct.myrb_log_entry*, !dbg !13981
  store %struct.myrb_log_entry* %4, %struct.myrb_log_entry** %ev_buf, align 8, !dbg !13982
  %5 = load %struct.myrb_log_entry*, %struct.myrb_log_entry** %ev_buf, align 8, !dbg !13983
  %tobool = icmp ne %struct.myrb_log_entry* %5, null, !dbg !13983
  br i1 %tobool, label %if.end, label %if.then, !dbg !13985

if.then:                                          ; preds = %entry
  br label %return, !dbg !13986

if.end:                                           ; preds = %entry
  %6 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !13987
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %6) #11, !dbg !13988
  %7 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13989
  %type3E = bitcast %union.myrb_cmd_mbox* %7 to %struct.anon.82*, !dbg !13990
  %id = getelementptr inbounds %struct.anon.82, %struct.anon.82* %type3E, i32 0, i32 1, !dbg !13991
  store i8 2, i8* %id, align 1, !dbg !13992
  %8 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13993
  %type3E2 = bitcast %union.myrb_cmd_mbox* %8 to %struct.anon.82*, !dbg !13994
  %opcode = getelementptr inbounds %struct.anon.82, %struct.anon.82* %type3E2, i32 0, i32 0, !dbg !13995
  store i8 114, i8* %opcode, align 4, !dbg !13996
  %9 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !13997
  %type3E3 = bitcast %union.myrb_cmd_mbox* %9 to %struct.anon.82*, !dbg !13998
  %optype = getelementptr inbounds %struct.anon.82, %struct.anon.82* %type3E3, i32 0, i32 2, !dbg !13999
  store i8 0, i8* %optype, align 2, !dbg !14000
  %10 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14001
  %type3E4 = bitcast %union.myrb_cmd_mbox* %10 to %struct.anon.82*, !dbg !14002
  %opqual = getelementptr inbounds %struct.anon.82, %struct.anon.82* %type3E4, i32 0, i32 3, !dbg !14003
  store i8 1, i8* %opqual, align 1, !dbg !14004
  %11 = load i32, i32* %event.addr, align 4, !dbg !14005
  %conv = trunc i32 %11 to i16, !dbg !14005
  %12 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14006
  %type3E5 = bitcast %union.myrb_cmd_mbox* %12 to %struct.anon.82*, !dbg !14007
  %ev_seq = getelementptr inbounds %struct.anon.82, %struct.anon.82* %type3E5, i32 0, i32 4, !dbg !14008
  store i16 %conv, i16* %ev_seq, align 4, !dbg !14009
  %13 = load i64, i64* %ev_addr, align 8, !dbg !14010
  %conv6 = trunc i64 %13 to i32, !dbg !14010
  %14 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14011
  %type3E7 = bitcast %union.myrb_cmd_mbox* %14 to %struct.anon.82*, !dbg !14012
  %addr = getelementptr inbounds %struct.anon.82, %struct.anon.82* %type3E7, i32 0, i32 6, !dbg !14013
  store i32 %conv6, i32* %addr, align 4, !dbg !14014
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14015
  %16 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !14016
  %call8 = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %15, %struct.myrb_cmdblk* %16) #11, !dbg !14017
  store i16 %call8, i16* %status, align 2, !dbg !14018
  %17 = load i16, i16* %status, align 2, !dbg !14019
  %conv9 = zext i16 %17 to i32, !dbg !14019
  %cmp = icmp ne i32 %conv9, 0, !dbg !14021
  br i1 %cmp, label %if.then11, label %if.else, !dbg !14022

if.then11:                                        ; preds = %if.end
  %18 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14023
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %18, i32 0, i32 18, !dbg !14023
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14023
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %19, i32 0, i32 47, !dbg !14023
  %20 = load i32, i32* %event.addr, align 4, !dbg !14023
  %21 = load i16, i16* %status, align 2, !dbg !14023
  %conv12 = zext i16 %21 to i32, !dbg !14023
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.device* %shost_gendev, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.174, i64 0, i64 0), i32 %20, i32 %conv12) #12, !dbg !14023
  br label %if.end59, !dbg !14023

if.else:                                          ; preds = %if.end
  %22 = load %struct.myrb_log_entry*, %struct.myrb_log_entry** %ev_buf, align 8, !dbg !14024
  %seq_num = getelementptr inbounds %struct.myrb_log_entry, %struct.myrb_log_entry* %22, i32 0, i32 3, !dbg !14026
  %23 = load i16, i16* %seq_num, align 2, !dbg !14026
  %conv13 = zext i16 %23 to i32, !dbg !14024
  %24 = load i32, i32* %event.addr, align 4, !dbg !14027
  %cmp14 = icmp eq i32 %conv13, %24, !dbg !14028
  br i1 %cmp14, label %if.then16, label %if.end58, !dbg !14029

if.then16:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr* %sshdr, metadata !14030, metadata !DIExpression()), !dbg !14043
  %25 = bitcast %struct.scsi_sense_hdr* %sshdr to i8*, !dbg !14044
  call void @llvm.memset.p0i8.i64(i8* align 1 %25, i8 0, i64 8, i1 false), !dbg !14044
  %26 = load %struct.myrb_log_entry*, %struct.myrb_log_entry** %ev_buf, align 8, !dbg !14045
  %sense = getelementptr inbounds %struct.myrb_log_entry, %struct.myrb_log_entry* %26, i32 0, i32 4, !dbg !14046
  %arraydecay = getelementptr inbounds [26 x i8], [26 x i8]* %sense, i64 0, i64 0, !dbg !14045
  %call17 = call zeroext i1 @scsi_normalize_sense(i8* %arraydecay, i32 32, %struct.scsi_sense_hdr* %sshdr) #11, !dbg !14047
  %sense_key = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 1, !dbg !14048
  %27 = load i8, i8* %sense_key, align 1, !dbg !14048
  %conv18 = zext i8 %27 to i32, !dbg !14050
  %cmp19 = icmp eq i32 %conv18, 9, !dbg !14051
  br i1 %cmp19, label %land.lhs.true, label %if.else37, !dbg !14052

land.lhs.true:                                    ; preds = %if.then16
  %asc = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !14053
  %28 = load i8, i8* %asc, align 1, !dbg !14053
  %conv21 = zext i8 %28 to i32, !dbg !14054
  %cmp22 = icmp eq i32 %conv21, 128, !dbg !14055
  br i1 %cmp22, label %land.lhs.true24, label %if.else37, !dbg !14056

land.lhs.true24:                                  ; preds = %land.lhs.true
  %ascq = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !14057
  %29 = load i8, i8* %ascq, align 1, !dbg !14057
  %conv25 = zext i8 %29 to i64, !dbg !14058
  %cmp26 = icmp ult i64 %conv25, 13, !dbg !14059
  br i1 %cmp26, label %if.then28, label %if.else37, !dbg !14060

if.then28:                                        ; preds = %land.lhs.true24
  %30 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14061
  %host29 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %30, i32 0, i32 18, !dbg !14061
  %31 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host29, align 8, !dbg !14061
  %shost_gendev30 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %31, i32 0, i32 47, !dbg !14061
  %32 = load %struct.myrb_log_entry*, %struct.myrb_log_entry** %ev_buf, align 8, !dbg !14061
  %channel = getelementptr inbounds %struct.myrb_log_entry, %struct.myrb_log_entry* %32, i32 0, i32 2, !dbg !14061
  %bf.load = load i16, i16* %channel, align 2, !dbg !14061
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !14061
  %bf.clear = and i16 %bf.lshr, 7, !dbg !14061
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !14061
  %conv31 = zext i8 %bf.cast to i32, !dbg !14061
  %33 = load %struct.myrb_log_entry*, %struct.myrb_log_entry** %ev_buf, align 8, !dbg !14061
  %target = getelementptr inbounds %struct.myrb_log_entry, %struct.myrb_log_entry* %33, i32 0, i32 2, !dbg !14061
  %bf.load32 = load i16, i16* %target, align 2, !dbg !14061
  %bf.clear33 = and i16 %bf.load32, 31, !dbg !14061
  %bf.cast34 = trunc i16 %bf.clear33 to i8, !dbg !14061
  %conv35 = zext i8 %bf.cast34 to i32, !dbg !14061
  %ascq36 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !14061
  %34 = load i8, i8* %ascq36, align 1, !dbg !14061
  %idxprom = zext i8 %34 to i64, !dbg !14061
  %arrayidx = getelementptr [13 x i8*], [13 x i8*]* @myrb_event_msg, i64 0, i64 %idxprom, !dbg !14061
  %35 = load i8*, i8** %arrayidx, align 8, !dbg !14061
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.141, i64 0, i64 0), %struct.device* %shost_gendev30, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.175, i64 0, i64 0), i32 %conv31, i32 %conv35, i8* %35) #12, !dbg !14061
  br label %if.end57, !dbg !14061

if.else37:                                        ; preds = %land.lhs.true24, %land.lhs.true, %if.then16
  %36 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14062
  %host38 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %36, i32 0, i32 18, !dbg !14062
  %37 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host38, align 8, !dbg !14062
  %shost_gendev39 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %37, i32 0, i32 47, !dbg !14062
  %38 = load %struct.myrb_log_entry*, %struct.myrb_log_entry** %ev_buf, align 8, !dbg !14062
  %channel40 = getelementptr inbounds %struct.myrb_log_entry, %struct.myrb_log_entry* %38, i32 0, i32 2, !dbg !14062
  %bf.load41 = load i16, i16* %channel40, align 2, !dbg !14062
  %bf.lshr42 = lshr i16 %bf.load41, 5, !dbg !14062
  %bf.clear43 = and i16 %bf.lshr42, 7, !dbg !14062
  %bf.cast44 = trunc i16 %bf.clear43 to i8, !dbg !14062
  %conv45 = zext i8 %bf.cast44 to i32, !dbg !14062
  %39 = load %struct.myrb_log_entry*, %struct.myrb_log_entry** %ev_buf, align 8, !dbg !14062
  %target46 = getelementptr inbounds %struct.myrb_log_entry, %struct.myrb_log_entry* %39, i32 0, i32 2, !dbg !14062
  %bf.load47 = load i16, i16* %target46, align 2, !dbg !14062
  %bf.clear48 = and i16 %bf.load47, 31, !dbg !14062
  %bf.cast49 = trunc i16 %bf.clear48 to i8, !dbg !14062
  %conv50 = zext i8 %bf.cast49 to i32, !dbg !14062
  %sense_key51 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 1, !dbg !14062
  %40 = load i8, i8* %sense_key51, align 1, !dbg !14062
  %conv52 = zext i8 %40 to i32, !dbg !14062
  %asc53 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !14062
  %41 = load i8, i8* %asc53, align 1, !dbg !14062
  %conv54 = zext i8 %41 to i32, !dbg !14062
  %ascq55 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !14062
  %42 = load i8, i8* %ascq55, align 1, !dbg !14062
  %conv56 = zext i8 %42 to i32, !dbg !14062
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.141, i64 0, i64 0), %struct.device* %shost_gendev39, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.176, i64 0, i64 0), i32 %conv45, i32 %conv50, i32 %conv52, i32 %conv54, i32 %conv56) #12, !dbg !14062
  br label %if.end57

if.end57:                                         ; preds = %if.else37, %if.then28
  br label %if.end58, !dbg !14063

if.end58:                                         ; preds = %if.end57, %if.else
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then11
  %43 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14064
  %pdev60 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %43, i32 0, i32 17, !dbg !14065
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev60, align 8, !dbg !14065
  %dev61 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 41, !dbg !14066
  %45 = load %struct.myrb_log_entry*, %struct.myrb_log_entry** %ev_buf, align 8, !dbg !14067
  %46 = bitcast %struct.myrb_log_entry* %45 to i8*, !dbg !14067
  %47 = load i64, i64* %ev_addr, align 8, !dbg !14068
  call void @dma_free_coherent(%struct.device* %dev61, i64 32, i8* %46, i64 %47) #11, !dbg !14069
  br label %return, !dbg !14070

return:                                           ; preds = %if.end59, %if.then
  ret void, !dbg !14070
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_get_errtable(%struct.myrb_hba* %cb) #0 !dbg !14071 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %status = alloca i16, align 2
  %old_table = alloca [48 x %struct.myrb_error_entry], align 16
  %table = alloca %struct.myrb_error_entry*, align 8
  %new = alloca %struct.myrb_error_entry*, align 8
  %old = alloca %struct.myrb_error_entry*, align 8
  %err_table_offset = alloca i64, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !14072, metadata !DIExpression()), !dbg !14073
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !14074, metadata !DIExpression()), !dbg !14075
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14076
  %mcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 53, !dbg !14077
  store %struct.myrb_cmdblk* %mcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !14075
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !14078, metadata !DIExpression()), !dbg !14079
  %1 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !14080
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %1, i32 0, i32 0, !dbg !14081
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14079
  call void @llvm.dbg.declare(metadata i16* %status, metadata !14082, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.declare(metadata [48 x %struct.myrb_error_entry]* %old_table, metadata !14084, metadata !DIExpression()), !dbg !14086
  %2 = bitcast [48 x %struct.myrb_error_entry]* %old_table to i8*, !dbg !14087
  %3 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14088
  %err_table = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %3, i32 0, i32 57, !dbg !14089
  %4 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %err_table, align 8, !dbg !14089
  %5 = bitcast %struct.myrb_error_entry* %4 to i8*, !dbg !14087
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %2, i8* align 1 %5, i64 192, i1 false), !dbg !14087
  %6 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !14090
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %6) #11, !dbg !14091
  %7 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14092
  %type3 = bitcast %union.myrb_cmd_mbox* %7 to %struct.anon.78*, !dbg !14093
  %id = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type3, i32 0, i32 1, !dbg !14094
  store i8 2, i8* %id, align 1, !dbg !14095
  %8 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14096
  %type32 = bitcast %union.myrb_cmd_mbox* %8 to %struct.anon.78*, !dbg !14097
  %opcode = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type32, i32 0, i32 0, !dbg !14098
  store i8 23, i8* %opcode, align 4, !dbg !14099
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14100
  %err_table_addr = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %9, i32 0, i32 58, !dbg !14101
  %10 = load i64, i64* %err_table_addr, align 8, !dbg !14101
  %conv = trunc i64 %10 to i32, !dbg !14100
  %11 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14102
  %type33 = bitcast %union.myrb_cmd_mbox* %11 to %struct.anon.78*, !dbg !14103
  %addr = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type33, i32 0, i32 3, !dbg !14104
  store i32 %conv, i32* %addr, align 4, !dbg !14105
  %12 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14106
  %13 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !14107
  %call = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %12, %struct.myrb_cmdblk* %13) #11, !dbg !14108
  store i16 %call, i16* %status, align 2, !dbg !14109
  %14 = load i16, i16* %status, align 2, !dbg !14110
  %conv4 = zext i16 %14 to i32, !dbg !14110
  %cmp = icmp eq i32 %conv4, 0, !dbg !14112
  br i1 %cmp, label %if.then, label %if.end50, !dbg !14113

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.myrb_error_entry** %table, metadata !14114, metadata !DIExpression()), !dbg !14116
  %15 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14117
  %err_table6 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %15, i32 0, i32 57, !dbg !14118
  %16 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %err_table6, align 8, !dbg !14118
  store %struct.myrb_error_entry* %16, %struct.myrb_error_entry** %table, align 8, !dbg !14116
  call void @llvm.dbg.declare(metadata %struct.myrb_error_entry** %new, metadata !14119, metadata !DIExpression()), !dbg !14120
  call void @llvm.dbg.declare(metadata %struct.myrb_error_entry** %old, metadata !14121, metadata !DIExpression()), !dbg !14122
  call void @llvm.dbg.declare(metadata i64* %err_table_offset, metadata !14123, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !14125, metadata !DIExpression()), !dbg !14126
  %17 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14127
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %17, i32 0, i32 18, !dbg !14127
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14127
  %call7 = call %struct.scsi_device* @__scsi_iterate_devices(%struct.Scsi_Host* %18, %struct.scsi_device* null) #11, !dbg !14127
  store %struct.scsi_device* %call7, %struct.scsi_device** %sdev, align 8, !dbg !14127
  br label %for.cond, !dbg !14127

for.cond:                                         ; preds = %for.inc, %if.then
  %19 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14129
  %tobool = icmp ne %struct.scsi_device* %19, null, !dbg !14127
  br i1 %tobool, label %for.body, label %for.end, !dbg !14127

for.body:                                         ; preds = %for.cond
  %20 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14131
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %20, i32 0, i32 17, !dbg !14134
  %21 = load i32, i32* %channel, align 4, !dbg !14134
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14135
  %host8 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 18, !dbg !14136
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host8, align 8, !dbg !14136
  %call9 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %23) #11, !dbg !14137
  %cmp10 = icmp uge i32 %21, %call9, !dbg !14138
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !14139

if.then12:                                        ; preds = %for.body
  br label %for.inc, !dbg !14140

if.end:                                           ; preds = %for.body
  %24 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14141
  %channel13 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %24, i32 0, i32 17, !dbg !14142
  %25 = load i32, i32* %channel13, align 4, !dbg !14142
  %mul = mul i32 %25, 16, !dbg !14143
  %26 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14144
  %id14 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %26, i32 0, i32 16, !dbg !14145
  %27 = load i32, i32* %id14, align 8, !dbg !14145
  %add = add i32 %mul, %27, !dbg !14146
  %conv15 = zext i32 %add to i64, !dbg !14141
  store i64 %conv15, i64* %err_table_offset, align 8, !dbg !14147
  %28 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %table, align 8, !dbg !14148
  %29 = load i64, i64* %err_table_offset, align 8, !dbg !14149
  %add.ptr = getelementptr %struct.myrb_error_entry, %struct.myrb_error_entry* %28, i64 %29, !dbg !14150
  store %struct.myrb_error_entry* %add.ptr, %struct.myrb_error_entry** %new, align 8, !dbg !14151
  %30 = load i64, i64* %err_table_offset, align 8, !dbg !14152
  %arrayidx = getelementptr [48 x %struct.myrb_error_entry], [48 x %struct.myrb_error_entry]* %old_table, i64 0, i64 %30, !dbg !14153
  store %struct.myrb_error_entry* %arrayidx, %struct.myrb_error_entry** %old, align 8, !dbg !14154
  %31 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %new, align 8, !dbg !14155
  %parity_err = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %31, i32 0, i32 0, !dbg !14157
  %32 = load i8, i8* %parity_err, align 1, !dbg !14157
  %conv16 = zext i8 %32 to i32, !dbg !14155
  %33 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %old, align 8, !dbg !14158
  %parity_err17 = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %33, i32 0, i32 0, !dbg !14159
  %34 = load i8, i8* %parity_err17, align 1, !dbg !14159
  %conv18 = zext i8 %34 to i32, !dbg !14158
  %cmp19 = icmp eq i32 %conv16, %conv18, !dbg !14160
  br i1 %cmp19, label %land.lhs.true, label %if.end39, !dbg !14161

land.lhs.true:                                    ; preds = %if.end
  %35 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %new, align 8, !dbg !14162
  %soft_err = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %35, i32 0, i32 1, !dbg !14163
  %36 = load i8, i8* %soft_err, align 1, !dbg !14163
  %conv21 = zext i8 %36 to i32, !dbg !14162
  %37 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %old, align 8, !dbg !14164
  %soft_err22 = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %37, i32 0, i32 1, !dbg !14165
  %38 = load i8, i8* %soft_err22, align 1, !dbg !14165
  %conv23 = zext i8 %38 to i32, !dbg !14164
  %cmp24 = icmp eq i32 %conv21, %conv23, !dbg !14166
  br i1 %cmp24, label %land.lhs.true26, label %if.end39, !dbg !14167

land.lhs.true26:                                  ; preds = %land.lhs.true
  %39 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %new, align 8, !dbg !14168
  %hard_err = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %39, i32 0, i32 2, !dbg !14169
  %40 = load i8, i8* %hard_err, align 1, !dbg !14169
  %conv27 = zext i8 %40 to i32, !dbg !14168
  %41 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %old, align 8, !dbg !14170
  %hard_err28 = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %41, i32 0, i32 2, !dbg !14171
  %42 = load i8, i8* %hard_err28, align 1, !dbg !14171
  %conv29 = zext i8 %42 to i32, !dbg !14170
  %cmp30 = icmp eq i32 %conv27, %conv29, !dbg !14172
  br i1 %cmp30, label %land.lhs.true32, label %if.end39, !dbg !14173

land.lhs.true32:                                  ; preds = %land.lhs.true26
  %43 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %new, align 8, !dbg !14174
  %misc_err = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %43, i32 0, i32 3, !dbg !14175
  %44 = load i8, i8* %misc_err, align 1, !dbg !14175
  %conv33 = zext i8 %44 to i32, !dbg !14174
  %45 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %old, align 8, !dbg !14176
  %misc_err34 = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %45, i32 0, i32 3, !dbg !14177
  %46 = load i8, i8* %misc_err34, align 1, !dbg !14177
  %conv35 = zext i8 %46 to i32, !dbg !14176
  %cmp36 = icmp eq i32 %conv33, %conv35, !dbg !14178
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !14179

if.then38:                                        ; preds = %land.lhs.true32
  br label %for.inc, !dbg !14180

if.end39:                                         ; preds = %land.lhs.true32, %land.lhs.true26, %land.lhs.true, %if.end
  %47 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14181
  %48 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %new, align 8, !dbg !14181
  %parity_err40 = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %48, i32 0, i32 0, !dbg !14181
  %49 = load i8, i8* %parity_err40, align 1, !dbg !14181
  %conv41 = zext i8 %49 to i32, !dbg !14181
  %50 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %new, align 8, !dbg !14181
  %soft_err42 = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %50, i32 0, i32 1, !dbg !14181
  %51 = load i8, i8* %soft_err42, align 1, !dbg !14181
  %conv43 = zext i8 %51 to i32, !dbg !14181
  %52 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %new, align 8, !dbg !14181
  %hard_err44 = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %52, i32 0, i32 2, !dbg !14181
  %53 = load i8, i8* %hard_err44, align 1, !dbg !14181
  %conv45 = zext i8 %53 to i32, !dbg !14181
  %54 = load %struct.myrb_error_entry*, %struct.myrb_error_entry** %new, align 8, !dbg !14181
  %misc_err46 = getelementptr inbounds %struct.myrb_error_entry, %struct.myrb_error_entry* %54, i32 0, i32 3, !dbg !14181
  %55 = load i8, i8* %misc_err46, align 1, !dbg !14181
  %conv47 = zext i8 %55 to i32, !dbg !14181
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.141, i64 0, i64 0), %struct.scsi_device* %47, i8* null, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.190, i64 0, i64 0), i32 %conv41, i32 %conv43, i32 %conv45, i32 %conv47) #11, !dbg !14181
  br label %for.inc, !dbg !14182

for.inc:                                          ; preds = %if.end39, %if.then38, %if.then12
  %56 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14129
  %host48 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %56, i32 0, i32 18, !dbg !14129
  %57 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host48, align 8, !dbg !14129
  %58 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14129
  %call49 = call %struct.scsi_device* @__scsi_iterate_devices(%struct.Scsi_Host* %57, %struct.scsi_device* %58) #11, !dbg !14129
  store %struct.scsi_device* %call49, %struct.scsi_device** %sdev, align 8, !dbg !14129
  br label %for.cond, !dbg !14129, !llvm.loop !14183

for.end:                                          ; preds = %for.cond
  br label %if.end50, !dbg !14185

if.end50:                                         ; preds = %for.end, %entry
  ret void, !dbg !14186
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_update_rbld_progress(%struct.myrb_hba* %cb) #0 !dbg !14187 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %rbld_buf = alloca %struct.myrb_rbld_progress, align 4
  %status = alloca i16, align 2
  %blocks_done = alloca i32, align 4
  %sdev = alloca %struct.scsi_device*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !14188, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.declare(metadata %struct.myrb_rbld_progress* %rbld_buf, metadata !14190, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.declare(metadata i16* %status, metadata !14192, metadata !DIExpression()), !dbg !14193
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14194
  %call = call zeroext i16 @myrb_get_rbld_progress(%struct.myrb_hba* %0, %struct.myrb_rbld_progress* %rbld_buf) #11, !dbg !14195
  store i16 %call, i16* %status, align 2, !dbg !14196
  %1 = load i16, i16* %status, align 2, !dbg !14197
  %conv = zext i16 %1 to i32, !dbg !14197
  %cmp = icmp eq i32 %conv, 0, !dbg !14199
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14200

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14201
  %last_rbld_status = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 59, !dbg !14202
  %3 = load i16, i16* %last_rbld_status, align 8, !dbg !14202
  %conv2 = zext i16 %3 to i32, !dbg !14201
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !14203
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14204

if.then:                                          ; preds = %land.lhs.true
  store i16 256, i16* %status, align 2, !dbg !14205
  br label %if.end, !dbg !14206

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i16, i16* %status, align 2, !dbg !14207
  %conv5 = zext i16 %4 to i32, !dbg !14207
  %cmp6 = icmp ne i32 %conv5, 0, !dbg !14209
  br i1 %cmp6, label %if.then8, label %if.end22, !dbg !14210

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %blocks_done, metadata !14211, metadata !DIExpression()), !dbg !14213
  %ldev_size = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 1, !dbg !14214
  %5 = load i32, i32* %ldev_size, align 4, !dbg !14214
  %blocks_left = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 2, !dbg !14215
  %6 = load i32, i32* %blocks_left, align 4, !dbg !14215
  %sub = sub i32 %5, %6, !dbg !14216
  store i32 %sub, i32* %blocks_done, align 4, !dbg !14213
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !14217, metadata !DIExpression()), !dbg !14218
  %7 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14219
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %7, i32 0, i32 18, !dbg !14220
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14220
  %9 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14221
  %host9 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %9, i32 0, i32 18, !dbg !14222
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host9, align 8, !dbg !14222
  %call10 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %10) #11, !dbg !14223
  %ldev_num = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 0, !dbg !14224
  %11 = load i32, i32* %ldev_num, align 4, !dbg !14224
  %call11 = call %struct.scsi_device* @scsi_device_lookup(%struct.Scsi_Host* %8, i32 %call10, i32 %11, i64 0) #11, !dbg !14225
  store %struct.scsi_device* %call11, %struct.scsi_device** %sdev, align 8, !dbg !14226
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14227
  %tobool = icmp ne %struct.scsi_device* %12, null, !dbg !14227
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !14229

if.then12:                                        ; preds = %if.then8
  br label %return, !dbg !14230

if.end13:                                         ; preds = %if.then8
  %13 = load i16, i16* %status, align 2, !dbg !14231
  %conv14 = zext i16 %13 to i32, !dbg !14231
  switch i32 %conv14, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 3, label %sw.bb18
    i32 4, label %sw.bb19
    i32 256, label %sw.bb20
    i32 263, label %sw.bb21
  ], !dbg !14232

sw.bb:                                            ; preds = %if.end13
  %14 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14233
  %15 = load i32, i32* %blocks_done, align 4, !dbg !14233
  %shr = lshr i32 %15, 7, !dbg !14233
  %mul = mul i32 100, %shr, !dbg !14233
  %ldev_size15 = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 1, !dbg !14233
  %16 = load i32, i32* %ldev_size15, align 4, !dbg !14233
  %shr16 = lshr i32 %16, 7, !dbg !14233
  %div = udiv i32 %mul, %shr16, !dbg !14233
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %14, i8* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.191, i64 0, i64 0), i32 %div) #11, !dbg !14233
  br label %sw.epilog, !dbg !14235

sw.bb17:                                          ; preds = %if.end13
  %17 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14236
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %17, i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.192, i64 0, i64 0)) #11, !dbg !14236
  br label %sw.epilog, !dbg !14237

sw.bb18:                                          ; preds = %if.end13
  %18 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14238
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %18, i8* null, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.193, i64 0, i64 0)) #11, !dbg !14238
  br label %sw.epilog, !dbg !14239

sw.bb19:                                          ; preds = %if.end13
  %19 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14240
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %19, i8* null, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.194, i64 0, i64 0)) #11, !dbg !14240
  br label %sw.epilog, !dbg !14241

sw.bb20:                                          ; preds = %if.end13
  %20 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14242
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %20, i8* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.195, i64 0, i64 0)) #11, !dbg !14242
  br label %sw.epilog, !dbg !14243

sw.bb21:                                          ; preds = %if.end13
  %21 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14244
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %21, i8* null, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.196, i64 0, i64 0)) #11, !dbg !14244
  br label %sw.epilog, !dbg !14245

sw.default:                                       ; preds = %if.end13
  br label %sw.epilog, !dbg !14246

sw.epilog:                                        ; preds = %sw.default, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb
  %22 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14247
  call void @scsi_device_put(%struct.scsi_device* %22) #11, !dbg !14248
  br label %if.end22, !dbg !14249

if.end22:                                         ; preds = %sw.epilog, %if.end
  %23 = load i16, i16* %status, align 2, !dbg !14250
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14251
  %last_rbld_status23 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 59, !dbg !14252
  store i16 %23, i16* %last_rbld_status23, align 8, !dbg !14253
  br label %return, !dbg !14254

return:                                           ; preds = %if.end22, %if.then12
  ret void, !dbg !14254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_get_cc_progress(%struct.myrb_hba* %cb) #0 !dbg !14255 {
entry:
  %cb.addr = alloca %struct.myrb_hba*, align 8
  %cmd_blk = alloca %struct.myrb_cmdblk*, align 8
  %mbox = alloca %union.myrb_cmd_mbox*, align 8
  %rbld_buf = alloca %struct.myrb_rbld_progress*, align 8
  %rbld_addr = alloca i64, align 8
  %status = alloca i16, align 2
  %ldev_num = alloca i32, align 4
  %ldev_size = alloca i32, align 4
  %blocks_done = alloca i32, align 4
  %sdev = alloca %struct.scsi_device*, align 8
  store %struct.myrb_hba* %cb, %struct.myrb_hba** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb.addr, metadata !14256, metadata !DIExpression()), !dbg !14257
  call void @llvm.dbg.declare(metadata %struct.myrb_cmdblk** %cmd_blk, metadata !14258, metadata !DIExpression()), !dbg !14259
  %0 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14260
  %mcmd_blk = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %0, i32 0, i32 53, !dbg !14261
  store %struct.myrb_cmdblk* %mcmd_blk, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !14259
  call void @llvm.dbg.declare(metadata %union.myrb_cmd_mbox** %mbox, metadata !14262, metadata !DIExpression()), !dbg !14263
  %1 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !14264
  %mbox1 = getelementptr inbounds %struct.myrb_cmdblk, %struct.myrb_cmdblk* %1, i32 0, i32 0, !dbg !14265
  store %union.myrb_cmd_mbox* %mbox1, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14263
  call void @llvm.dbg.declare(metadata %struct.myrb_rbld_progress** %rbld_buf, metadata !14266, metadata !DIExpression()), !dbg !14267
  call void @llvm.dbg.declare(metadata i64* %rbld_addr, metadata !14268, metadata !DIExpression()), !dbg !14269
  call void @llvm.dbg.declare(metadata i16* %status, metadata !14270, metadata !DIExpression()), !dbg !14271
  %2 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14272
  %pdev = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %2, i32 0, i32 17, !dbg !14273
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14273
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !14274
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 12, i64* %rbld_addr, i32 3264) #11, !dbg !14275
  %4 = bitcast i8* %call to %struct.myrb_rbld_progress*, !dbg !14275
  store %struct.myrb_rbld_progress* %4, %struct.myrb_rbld_progress** %rbld_buf, align 8, !dbg !14276
  %5 = load %struct.myrb_rbld_progress*, %struct.myrb_rbld_progress** %rbld_buf, align 8, !dbg !14277
  %tobool = icmp ne %struct.myrb_rbld_progress* %5, null, !dbg !14277
  br i1 %tobool, label %if.end, label %if.then, !dbg !14279

if.then:                                          ; preds = %entry
  %6 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14280
  %need_cc_status = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %6, i32 0, i32 14, !dbg !14282
  store i8 1, i8* %need_cc_status, align 2, !dbg !14283
  br label %return, !dbg !14284

if.end:                                           ; preds = %entry
  %7 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !14285
  call void @myrb_reset_cmd(%struct.myrb_cmdblk* %7) #11, !dbg !14286
  %8 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14287
  %type3 = bitcast %union.myrb_cmd_mbox* %8 to %struct.anon.78*, !dbg !14288
  %id = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type3, i32 0, i32 1, !dbg !14289
  store i8 2, i8* %id, align 1, !dbg !14290
  %9 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14291
  %type32 = bitcast %union.myrb_cmd_mbox* %9 to %struct.anon.78*, !dbg !14292
  %opcode = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type32, i32 0, i32 0, !dbg !14293
  store i8 12, i8* %opcode, align 4, !dbg !14294
  %10 = load i64, i64* %rbld_addr, align 8, !dbg !14295
  %conv = trunc i64 %10 to i32, !dbg !14295
  %11 = load %union.myrb_cmd_mbox*, %union.myrb_cmd_mbox** %mbox, align 8, !dbg !14296
  %type33 = bitcast %union.myrb_cmd_mbox* %11 to %struct.anon.78*, !dbg !14297
  %addr = getelementptr inbounds %struct.anon.78, %struct.anon.78* %type33, i32 0, i32 3, !dbg !14298
  store i32 %conv, i32* %addr, align 4, !dbg !14299
  %12 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14300
  %13 = load %struct.myrb_cmdblk*, %struct.myrb_cmdblk** %cmd_blk, align 8, !dbg !14301
  %call4 = call zeroext i16 @myrb_exec_cmd(%struct.myrb_hba* %12, %struct.myrb_cmdblk* %13) #11, !dbg !14302
  store i16 %call4, i16* %status, align 2, !dbg !14303
  %14 = load i16, i16* %status, align 2, !dbg !14304
  %conv5 = zext i16 %14 to i32, !dbg !14304
  %cmp = icmp eq i32 %conv5, 0, !dbg !14306
  br i1 %cmp, label %if.then7, label %if.end17, !dbg !14307

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %ldev_num, metadata !14308, metadata !DIExpression()), !dbg !14310
  %15 = load %struct.myrb_rbld_progress*, %struct.myrb_rbld_progress** %rbld_buf, align 8, !dbg !14311
  %ldev_num8 = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %15, i32 0, i32 0, !dbg !14312
  %16 = load i32, i32* %ldev_num8, align 4, !dbg !14312
  store i32 %16, i32* %ldev_num, align 4, !dbg !14310
  call void @llvm.dbg.declare(metadata i32* %ldev_size, metadata !14313, metadata !DIExpression()), !dbg !14314
  %17 = load %struct.myrb_rbld_progress*, %struct.myrb_rbld_progress** %rbld_buf, align 8, !dbg !14315
  %ldev_size9 = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %17, i32 0, i32 1, !dbg !14316
  %18 = load i32, i32* %ldev_size9, align 4, !dbg !14316
  store i32 %18, i32* %ldev_size, align 4, !dbg !14314
  call void @llvm.dbg.declare(metadata i32* %blocks_done, metadata !14317, metadata !DIExpression()), !dbg !14318
  %19 = load i32, i32* %ldev_size, align 4, !dbg !14319
  %20 = load %struct.myrb_rbld_progress*, %struct.myrb_rbld_progress** %rbld_buf, align 8, !dbg !14320
  %blocks_left = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %20, i32 0, i32 2, !dbg !14321
  %21 = load i32, i32* %blocks_left, align 4, !dbg !14321
  %sub = sub i32 %19, %21, !dbg !14322
  store i32 %sub, i32* %blocks_done, align 4, !dbg !14318
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !14323, metadata !DIExpression()), !dbg !14324
  %22 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14325
  %host = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %22, i32 0, i32 18, !dbg !14326
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14326
  %24 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14327
  %host10 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %24, i32 0, i32 18, !dbg !14328
  %25 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host10, align 8, !dbg !14328
  %call11 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %25) #11, !dbg !14329
  %26 = load i32, i32* %ldev_num, align 4, !dbg !14330
  %call12 = call %struct.scsi_device* @scsi_device_lookup(%struct.Scsi_Host* %23, i32 %call11, i32 %26, i64 0) #11, !dbg !14331
  store %struct.scsi_device* %call12, %struct.scsi_device** %sdev, align 8, !dbg !14332
  %27 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14333
  %tobool13 = icmp ne %struct.scsi_device* %27, null, !dbg !14333
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !14335

if.then14:                                        ; preds = %if.then7
  %28 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14336
  %29 = load i32, i32* %blocks_done, align 4, !dbg !14336
  %shr = lshr i32 %29, 7, !dbg !14336
  %mul = mul i32 100, %shr, !dbg !14336
  %30 = load i32, i32* %ldev_size, align 4, !dbg !14336
  %shr15 = lshr i32 %30, 7, !dbg !14336
  %div = udiv i32 %mul, %shr15, !dbg !14336
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), %struct.scsi_device* %28, i8* null, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.197, i64 0, i64 0), i32 %div) #11, !dbg !14336
  %31 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14338
  call void @scsi_device_put(%struct.scsi_device* %31) #11, !dbg !14339
  br label %if.end16, !dbg !14340

if.end16:                                         ; preds = %if.then14, %if.then7
  br label %if.end17, !dbg !14341

if.end17:                                         ; preds = %if.end16, %if.end
  %32 = load %struct.myrb_hba*, %struct.myrb_hba** %cb.addr, align 8, !dbg !14342
  %pdev18 = getelementptr inbounds %struct.myrb_hba, %struct.myrb_hba* %32, i32 0, i32 17, !dbg !14343
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev18, align 8, !dbg !14343
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 41, !dbg !14344
  %34 = load %struct.myrb_rbld_progress*, %struct.myrb_rbld_progress** %rbld_buf, align 8, !dbg !14345
  %35 = bitcast %struct.myrb_rbld_progress* %34 to i8*, !dbg !14345
  %36 = load i64, i64* %rbld_addr, align 8, !dbg !14346
  call void @dma_free_coherent(%struct.device* %dev19, i64 12, i8* %35, i64 %36) #11, !dbg !14347
  br label %return, !dbg !14348

return:                                           ; preds = %if.end17, %if.then
  ret void, !dbg !14348
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @scsi_normalize_sense(i8*, i32, %struct.scsi_sense_hdr*) #2

; Function Attrs: noredzone
declare dso_local %struct.scsi_device* @__scsi_iterate_devices(%struct.Scsi_Host*, %struct.scsi_device*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @scsi_add_host_with_dma(%struct.Scsi_Host*, %struct.device*, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #2

; Function Attrs: noredzone
declare dso_local void @destroy_workqueue(%struct.workqueue_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #0 !dbg !14349 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !14352, metadata !DIExpression()), !dbg !14353
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14354
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !14355
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !14356
  ret i8* %call, !dbg !14357
}

; Function Attrs: noredzone
declare dso_local %struct.raid_template* @raid_class_attach(%struct.raid_function_template*) #2

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @myrb_is_raid(%struct.device* %dev) #0 !dbg !14358 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14359, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !14361, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14363, metadata !DIExpression()), !dbg !14365
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14365
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14365
  store i8* %1, i8** %__mptr, align 8, !dbg !14365
  br label %do.body, !dbg !14365

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14366

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14365
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !14365
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !14365
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !14366
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !14365
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !14362
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14368
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 17, !dbg !14369
  %6 = load i32, i32* %channel, align 4, !dbg !14369
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14370
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %7, i32 0, i32 0, !dbg !14371
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14371
  %call = call i32 @myrb_logical_channel(%struct.Scsi_Host* %8) #11, !dbg !14372
  %cmp = icmp eq i32 %6, %call, !dbg !14373
  %conv = zext i1 %cmp to i32, !dbg !14373
  ret i32 %conv, !dbg !14374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_get_resync(%struct.device* %dev) #0 !dbg !14375 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %rbld_buf = alloca %struct.myrb_rbld_progress, align 4
  %percent_complete = alloca i32, align 4
  %status = alloca i16, align 2
  %ldev_size = alloca i32, align 4
  %remaining = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14376, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !14378, metadata !DIExpression()), !dbg !14379
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14380, metadata !DIExpression()), !dbg !14382
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14382
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14382
  store i8* %1, i8** %__mptr, align 8, !dbg !14382
  br label %do.body, !dbg !14382

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14383

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14382
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !14382
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !14382
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !14383
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !14382
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !14379
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !14385, metadata !DIExpression()), !dbg !14386
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14387
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !14388
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14388
  %call = call i8* @shost_priv(%struct.Scsi_Host* %6) #11, !dbg !14389
  %7 = bitcast i8* %call to %struct.myrb_hba*, !dbg !14389
  store %struct.myrb_hba* %7, %struct.myrb_hba** %cb, align 8, !dbg !14386
  call void @llvm.dbg.declare(metadata %struct.myrb_rbld_progress* %rbld_buf, metadata !14390, metadata !DIExpression()), !dbg !14391
  call void @llvm.dbg.declare(metadata i32* %percent_complete, metadata !14392, metadata !DIExpression()), !dbg !14393
  store i32 0, i32* %percent_complete, align 4, !dbg !14393
  call void @llvm.dbg.declare(metadata i16* %status, metadata !14394, metadata !DIExpression()), !dbg !14395
  call void @llvm.dbg.declare(metadata i32* %ldev_size, metadata !14396, metadata !DIExpression()), !dbg !14397
  store i32 0, i32* %ldev_size, align 4, !dbg !14397
  call void @llvm.dbg.declare(metadata i32* %remaining, metadata !14398, metadata !DIExpression()), !dbg !14399
  store i32 0, i32* %remaining, align 4, !dbg !14399
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14400
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 17, !dbg !14402
  %9 = load i32, i32* %channel, align 4, !dbg !14402
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14403
  %host1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 0, !dbg !14404
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host1, align 8, !dbg !14404
  %call2 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %11) #11, !dbg !14405
  %cmp = icmp ult i32 %9, %call2, !dbg !14406
  br i1 %cmp, label %if.then, label %if.end, !dbg !14407

if.then:                                          ; preds = %do.end
  br label %return, !dbg !14408

if.end:                                           ; preds = %do.end
  %12 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !14409
  %call3 = call zeroext i16 @myrb_get_rbld_progress(%struct.myrb_hba* %12, %struct.myrb_rbld_progress* %rbld_buf) #11, !dbg !14410
  store i16 %call3, i16* %status, align 2, !dbg !14411
  %13 = load i16, i16* %status, align 2, !dbg !14412
  %conv = zext i16 %13 to i32, !dbg !14412
  %cmp4 = icmp eq i32 %conv, 0, !dbg !14414
  br i1 %cmp4, label %if.then6, label %if.end12, !dbg !14415

if.then6:                                         ; preds = %if.end
  %ldev_num = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 0, !dbg !14416
  %14 = load i32, i32* %ldev_num, align 4, !dbg !14416
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14419
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %15, i32 0, i32 16, !dbg !14420
  %16 = load i32, i32* %id, align 8, !dbg !14420
  %cmp7 = icmp eq i32 %14, %16, !dbg !14421
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !14422

if.then9:                                         ; preds = %if.then6
  %ldev_size10 = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 1, !dbg !14423
  %17 = load i32, i32* %ldev_size10, align 4, !dbg !14423
  store i32 %17, i32* %ldev_size, align 4, !dbg !14425
  %blocks_left = getelementptr inbounds %struct.myrb_rbld_progress, %struct.myrb_rbld_progress* %rbld_buf, i32 0, i32 2, !dbg !14426
  %18 = load i32, i32* %blocks_left, align 4, !dbg !14426
  store i32 %18, i32* %remaining, align 4, !dbg !14427
  br label %if.end11, !dbg !14428

if.end11:                                         ; preds = %if.then9, %if.then6
  br label %if.end12, !dbg !14429

if.end12:                                         ; preds = %if.end11, %if.end
  %19 = load i32, i32* %remaining, align 4, !dbg !14430
  %tobool = icmp ne i32 %19, 0, !dbg !14430
  br i1 %tobool, label %land.lhs.true, label %if.end15, !dbg !14432

land.lhs.true:                                    ; preds = %if.end12
  %20 = load i32, i32* %ldev_size, align 4, !dbg !14433
  %tobool13 = icmp ne i32 %20, 0, !dbg !14433
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !14434

if.then14:                                        ; preds = %land.lhs.true
  %21 = load i32, i32* %ldev_size, align 4, !dbg !14435
  %22 = load i32, i32* %remaining, align 4, !dbg !14436
  %sub = sub i32 %21, %22, !dbg !14437
  %mul = mul i32 %sub, 100, !dbg !14438
  %23 = load i32, i32* %ldev_size, align 4, !dbg !14439
  %div = udiv i32 %mul, %23, !dbg !14440
  store i32 %div, i32* %percent_complete, align 4, !dbg !14441
  br label %if.end15, !dbg !14442

if.end15:                                         ; preds = %if.then14, %land.lhs.true, %if.end12
  %24 = load %struct.raid_template*, %struct.raid_template** @myrb_raid_template, align 8, !dbg !14443
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14444
  %26 = load i32, i32* %percent_complete, align 4, !dbg !14445
  call void @raid_set_resync(%struct.raid_template* %24, %struct.device* %25, i32 %26) #11, !dbg !14446
  br label %return, !dbg !14447

return:                                           ; preds = %if.end15, %if.then
  ret void, !dbg !14447
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @myrb_get_state(%struct.device* %dev) #0 !dbg !14448 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %cb = alloca %struct.myrb_hba*, align 8
  %ldev_info = alloca %struct.myrb_ldev_info*, align 8
  %state = alloca i32, align 4
  %status = alloca i16, align 2
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14449, metadata !DIExpression()), !dbg !14450
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !14451, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14453, metadata !DIExpression()), !dbg !14455
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14455
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14455
  store i8* %1, i8** %__mptr, align 8, !dbg !14455
  br label %do.body, !dbg !14455

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14456

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14455
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !14455
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !14455
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !14456
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !14455
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !14452
  call void @llvm.dbg.declare(metadata %struct.myrb_hba** %cb, metadata !14458, metadata !DIExpression()), !dbg !14459
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14460
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !14461
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !14461
  %call = call i8* @shost_priv(%struct.Scsi_Host* %6) #11, !dbg !14462
  %7 = bitcast i8* %call to %struct.myrb_hba*, !dbg !14462
  store %struct.myrb_hba* %7, %struct.myrb_hba** %cb, align 8, !dbg !14459
  call void @llvm.dbg.declare(metadata %struct.myrb_ldev_info** %ldev_info, metadata !14463, metadata !DIExpression()), !dbg !14464
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14465
  %hostdata = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 21, !dbg !14466
  %9 = load i8*, i8** %hostdata, align 8, !dbg !14466
  %10 = bitcast i8* %9 to %struct.myrb_ldev_info*, !dbg !14465
  store %struct.myrb_ldev_info* %10, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !14464
  call void @llvm.dbg.declare(metadata i32* %state, metadata !14467, metadata !DIExpression()), !dbg !14468
  store i32 0, i32* %state, align 4, !dbg !14468
  call void @llvm.dbg.declare(metadata i16* %status, metadata !14469, metadata !DIExpression()), !dbg !14470
  %11 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14471
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %11, i32 0, i32 17, !dbg !14473
  %12 = load i32, i32* %channel, align 4, !dbg !14473
  %13 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !14474
  %host1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %13, i32 0, i32 0, !dbg !14475
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host1, align 8, !dbg !14475
  %call2 = call i32 @myrb_logical_channel(%struct.Scsi_Host* %14) #11, !dbg !14476
  %cmp = icmp ult i32 %12, %call2, !dbg !14477
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14478

lor.lhs.false:                                    ; preds = %do.end
  %15 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !14479
  %tobool = icmp ne %struct.myrb_ldev_info* %15, null, !dbg !14479
  br i1 %tobool, label %if.else, label %if.then, !dbg !14480

if.then:                                          ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %state, align 4, !dbg !14481
  br label %if.end11, !dbg !14482

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct.myrb_hba*, %struct.myrb_hba** %cb, align 8, !dbg !14483
  %call3 = call zeroext i16 @myrb_get_rbld_progress(%struct.myrb_hba* %16, %struct.myrb_rbld_progress* null) #11, !dbg !14485
  store i16 %call3, i16* %status, align 2, !dbg !14486
  %17 = load i16, i16* %status, align 2, !dbg !14487
  %conv = zext i16 %17 to i32, !dbg !14487
  %cmp4 = icmp eq i32 %conv, 0, !dbg !14489
  br i1 %cmp4, label %if.then6, label %if.else7, !dbg !14490

if.then6:                                         ; preds = %if.else
  store i32 3, i32* %state, align 4, !dbg !14491
  br label %if.end, !dbg !14492

if.else7:                                         ; preds = %if.else
  %18 = load %struct.myrb_ldev_info*, %struct.myrb_ldev_info** %ldev_info, align 8, !dbg !14493
  %state8 = getelementptr inbounds %struct.myrb_ldev_info, %struct.myrb_ldev_info* %18, i32 0, i32 1, !dbg !14495
  %19 = load i8, i8* %state8, align 4, !dbg !14495
  %conv9 = zext i8 %19 to i32, !dbg !14493
  switch i32 %conv9, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb10
    i32 4, label %sw.bb10
  ], !dbg !14496

sw.bb:                                            ; preds = %if.else7
  store i32 1, i32* %state, align 4, !dbg !14497
  br label %sw.epilog, !dbg !14499

sw.bb10:                                          ; preds = %if.else7, %if.else7
  store i32 2, i32* %state, align 4, !dbg !14500
  br label %sw.epilog, !dbg !14501

sw.default:                                       ; preds = %if.else7
  store i32 4, i32* %state, align 4, !dbg !14502
  br label %sw.epilog, !dbg !14503

sw.epilog:                                        ; preds = %sw.default, %sw.bb10, %sw.bb
  br label %if.end

if.end:                                           ; preds = %sw.epilog, %if.then6
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %20 = load %struct.raid_template*, %struct.raid_template** @myrb_raid_template, align 8, !dbg !14504
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14505
  %22 = load i32, i32* %state, align 4, !dbg !14506
  call void @raid_set_state(%struct.raid_template* %20, %struct.device* %21, i32 %22) #11, !dbg !14507
  ret void, !dbg !14508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @raid_set_resync(%struct.raid_template* %r, %struct.device* %dev, i32 %value) #0 !dbg !14509 {
entry:
  %r.addr = alloca %struct.raid_template*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %value.addr = alloca i32, align 4
  %device = alloca %struct.device*, align 8
  %rd = alloca %struct.raid_data*, align 8
  store %struct.raid_template* %r, %struct.raid_template** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.raid_template** %r.addr, metadata !14512, metadata !DIExpression()), !dbg !14513
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14514, metadata !DIExpression()), !dbg !14513
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !14515, metadata !DIExpression()), !dbg !14513
  call void @llvm.dbg.declare(metadata %struct.device** %device, metadata !14516, metadata !DIExpression()), !dbg !14513
  %0 = load %struct.raid_template*, %struct.raid_template** %r.addr, align 8, !dbg !14513
  %raid_attrs = getelementptr inbounds %struct.raid_template, %struct.raid_template* %0, i32 0, i32 0, !dbg !14513
  %ac = getelementptr inbounds %struct.transport_container, %struct.transport_container* %raid_attrs, i32 0, i32 0, !dbg !14513
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14513
  %call = call %struct.device* @attribute_container_find_class_device(%struct.attribute_container* %ac, %struct.device* %1) #11, !dbg !14513
  store %struct.device* %call, %struct.device** %device, align 8, !dbg !14513
  call void @llvm.dbg.declare(metadata %struct.raid_data** %rd, metadata !14517, metadata !DIExpression()), !dbg !14513
  br label %do.body, !dbg !14513

do.body:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %device, align 8, !dbg !14518
  %tobool = icmp ne %struct.device* %2, null, !dbg !14518
  %lnot = xor i1 %tobool, true, !dbg !14518
  %lnot1 = xor i1 %lnot, true, !dbg !14518
  %lnot2 = xor i1 %lnot1, true, !dbg !14518
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14518
  %conv = sext i32 %lnot.ext to i64, !dbg !14518
  %tobool3 = icmp ne i64 %conv, 0, !dbg !14518
  br i1 %tobool3, label %if.then, label %if.end, !dbg !14521

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !14518

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !14522

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !14524

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !14522

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34, i64 0, i64 0), i32 75, i32 0, i64 12) #7, !dbg !14526, !srcloc !14528
  br label %do.end7, !dbg !14526

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !14522

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 237) #7, !dbg !14529, !srcloc !14532
  unreachable, !dbg !14533

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !14522

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !14522

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !14521

do.end11:                                         ; preds = %if.end
  %3 = load %struct.device*, %struct.device** %device, align 8, !dbg !14513
  %call12 = call i8* @dev_get_drvdata(%struct.device* %3) #11, !dbg !14513
  %4 = bitcast i8* %call12 to %struct.raid_data*, !dbg !14513
  store %struct.raid_data* %4, %struct.raid_data** %rd, align 8, !dbg !14513
  %5 = load i32, i32* %value.addr, align 4, !dbg !14513
  %6 = load %struct.raid_data*, %struct.raid_data** %rd, align 8, !dbg !14513
  %resync = getelementptr inbounds %struct.raid_data, %struct.raid_data* %6, i32 0, i32 4, !dbg !14513
  store i32 %5, i32* %resync, align 4, !dbg !14513
  ret void, !dbg !14513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @raid_set_state(%struct.raid_template* %r, %struct.device* %dev, i32 %value) #0 !dbg !14534 {
entry:
  %r.addr = alloca %struct.raid_template*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %value.addr = alloca i32, align 4
  %device = alloca %struct.device*, align 8
  %rd = alloca %struct.raid_data*, align 8
  store %struct.raid_template* %r, %struct.raid_template** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.raid_template** %r.addr, metadata !14537, metadata !DIExpression()), !dbg !14538
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14539, metadata !DIExpression()), !dbg !14538
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !14540, metadata !DIExpression()), !dbg !14538
  call void @llvm.dbg.declare(metadata %struct.device** %device, metadata !14541, metadata !DIExpression()), !dbg !14538
  %0 = load %struct.raid_template*, %struct.raid_template** %r.addr, align 8, !dbg !14538
  %raid_attrs = getelementptr inbounds %struct.raid_template, %struct.raid_template* %0, i32 0, i32 0, !dbg !14538
  %ac = getelementptr inbounds %struct.transport_container, %struct.transport_container* %raid_attrs, i32 0, i32 0, !dbg !14538
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14538
  %call = call %struct.device* @attribute_container_find_class_device(%struct.attribute_container* %ac, %struct.device* %1) #11, !dbg !14538
  store %struct.device* %call, %struct.device** %device, align 8, !dbg !14538
  call void @llvm.dbg.declare(metadata %struct.raid_data** %rd, metadata !14542, metadata !DIExpression()), !dbg !14538
  br label %do.body, !dbg !14538

do.body:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %device, align 8, !dbg !14543
  %tobool = icmp ne %struct.device* %2, null, !dbg !14543
  %lnot = xor i1 %tobool, true, !dbg !14543
  %lnot1 = xor i1 %lnot, true, !dbg !14543
  %lnot2 = xor i1 %lnot1, true, !dbg !14543
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14543
  %conv = sext i32 %lnot.ext to i64, !dbg !14543
  %tobool3 = icmp ne i64 %conv, 0, !dbg !14543
  br i1 %tobool3, label %if.then, label %if.end, !dbg !14546

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !14543

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !14547

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !14549

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !14547

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34, i64 0, i64 0), i32 76, i32 0, i64 12) #7, !dbg !14551, !srcloc !14553
  br label %do.end7, !dbg !14551

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !14547

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 239) #7, !dbg !14554, !srcloc !14557
  unreachable, !dbg !14558

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !14547

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !14547

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !14546

do.end11:                                         ; preds = %if.end
  %3 = load %struct.device*, %struct.device** %device, align 8, !dbg !14538
  %call12 = call i8* @dev_get_drvdata(%struct.device* %3) #11, !dbg !14538
  %4 = bitcast i8* %call12 to %struct.raid_data*, !dbg !14538
  store %struct.raid_data* %4, %struct.raid_data** %rd, align 8, !dbg !14538
  %5 = load i32, i32* %value.addr, align 4, !dbg !14538
  %6 = load %struct.raid_data*, %struct.raid_data** %rd, align 8, !dbg !14538
  %state = getelementptr inbounds %struct.raid_data, %struct.raid_data* %6, i32 0, i32 3, !dbg !14538
  store i32 %5, i32* %state, align 8, !dbg !14538
  ret void, !dbg !14538
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind willreturn }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6460}
!llvm.module.flags = !{!6461, !6462, !6463, !6464}
!llvm.ident = !{!6465}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "DAC960_LA_privdata", scope: !2, file: !3, line: 2814, type: !906, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !893, globals: !6321, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/scsi/myrb.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !42, !48, !55, !59, !66, !71, !78, !84, !93, !101, !107, !113, !120, !127, !135, !146, !153, !163, !229, !237, !376, !385, !413, !470, !486, !492, !513, !518, !523, !544, !565, !580, !587, !594, !617, !625, !739, !746, !656, !663, !701, !707, !717, !763, !798, !811, !825, !844, !861}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !31, line: 49, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38, !39, !40, !41}
!33 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!39 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!40 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!41 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !43, line: 118, baseType: !7, size: 32, elements: !44)
!43 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!44 = !{!45, !46, !47}
!45 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!46 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!47 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !49, line: 19, baseType: !7, size: 32, elements: !50)
!49 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!50 = !{!51, !52, !53, !54}
!51 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!52 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!54 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !43, line: 293, baseType: !7, size: 32, elements: !56)
!56 = !{!57, !58}
!57 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !60, line: 502, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !43, line: 315, baseType: !7, size: 32, elements: !67)
!67 = !{!68, !69, !70}
!68 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!70 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !72, line: 59, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!73 = !{!74, !75, !76, !77}
!74 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!77 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !79, line: 54, baseType: !7, size: 32, elements: !80)
!79 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!80 = !{!81, !82, !83}
!81 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !85, line: 296, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!86 = !{!87, !88, !89, !90, !91, !92}
!87 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!91 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!92 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !94, line: 9, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100}
!96 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !102, line: 26, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !108, line: 44, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112}
!110 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !114, line: 343, baseType: !7, size: 32, elements: !115)
!114 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!115 = !{!116, !117, !118, !119}
!116 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!117 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !60, line: 524, baseType: !7, size: 32, elements: !121)
!121 = !{!122, !123, !124, !125, !126}
!122 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !128, line: 276, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133, !134}
!130 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !128, line: 36, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145}
!137 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!140 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!142 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!143 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!144 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!145 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !147, line: 5, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150, !151, !152}
!149 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !154, line: 514, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!155 = !{!156, !157, !158, !159, !160, !161, !162}
!156 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!162 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "myrb_cmd_opcode", file: !164, line: 36, baseType: !165, size: 8, elements: !166)
!164 = !DIFile(filename: "drivers/scsi/myrb.h", directory: "/home/lizy2001/genbc/linux")
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !{!167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228}
!167 = !DIEnumerator(name: "MYRB_CMD_READ_EXTENDED", value: 51, isUnsigned: true)
!168 = !DIEnumerator(name: "MYRB_CMD_WRITE_EXTENDED", value: 52, isUnsigned: true)
!169 = !DIEnumerator(name: "MYRB_CMD_READAHEAD_EXTENDED", value: 53, isUnsigned: true)
!170 = !DIEnumerator(name: "MYRB_CMD_READ_EXTENDED_SG", value: 179, isUnsigned: true)
!171 = !DIEnumerator(name: "MYRB_CMD_WRITE_EXTENDED_SG", value: 180, isUnsigned: true)
!172 = !DIEnumerator(name: "MYRB_CMD_READ", value: 54, isUnsigned: true)
!173 = !DIEnumerator(name: "MYRB_CMD_READ_SG", value: 182, isUnsigned: true)
!174 = !DIEnumerator(name: "MYRB_CMD_WRITE", value: 55, isUnsigned: true)
!175 = !DIEnumerator(name: "MYRB_CMD_WRITE_SG", value: 183, isUnsigned: true)
!176 = !DIEnumerator(name: "MYRB_CMD_DCDB", value: 4, isUnsigned: true)
!177 = !DIEnumerator(name: "MYRB_CMD_DCDB_SG", value: 132, isUnsigned: true)
!178 = !DIEnumerator(name: "MYRB_CMD_FLUSH", value: 10, isUnsigned: true)
!179 = !DIEnumerator(name: "MYRB_CMD_ENQUIRY", value: 83, isUnsigned: true)
!180 = !DIEnumerator(name: "MYRB_CMD_ENQUIRY2", value: 28, isUnsigned: true)
!181 = !DIEnumerator(name: "MYRB_CMD_GET_LDRV_ELEMENT", value: 85, isUnsigned: true)
!182 = !DIEnumerator(name: "MYRB_CMD_GET_LDEV_INFO", value: 25, isUnsigned: true)
!183 = !DIEnumerator(name: "MYRB_CMD_IOPORTREAD", value: 57, isUnsigned: true)
!184 = !DIEnumerator(name: "MYRB_CMD_IOPORTWRITE", value: 58, isUnsigned: true)
!185 = !DIEnumerator(name: "MYRB_CMD_GET_SD_STATS", value: 62, isUnsigned: true)
!186 = !DIEnumerator(name: "MYRB_CMD_GET_PD_STATS", value: 63, isUnsigned: true)
!187 = !DIEnumerator(name: "MYRB_CMD_EVENT_LOG_OPERATION", value: 114, isUnsigned: true)
!188 = !DIEnumerator(name: "MYRB_CMD_START_DEVICE", value: 16, isUnsigned: true)
!189 = !DIEnumerator(name: "MYRB_CMD_GET_DEVICE_STATE", value: 80, isUnsigned: true)
!190 = !DIEnumerator(name: "MYRB_CMD_STOP_CHANNEL", value: 19, isUnsigned: true)
!191 = !DIEnumerator(name: "MYRB_CMD_START_CHANNEL", value: 18, isUnsigned: true)
!192 = !DIEnumerator(name: "MYRB_CMD_RESET_CHANNEL", value: 26, isUnsigned: true)
!193 = !DIEnumerator(name: "MYRB_CMD_REBUILD", value: 9, isUnsigned: true)
!194 = !DIEnumerator(name: "MYRB_CMD_REBUILD_ASYNC", value: 22, isUnsigned: true)
!195 = !DIEnumerator(name: "MYRB_CMD_CHECK_CONSISTENCY", value: 15, isUnsigned: true)
!196 = !DIEnumerator(name: "MYRB_CMD_CHECK_CONSISTENCY_ASYNC", value: 30, isUnsigned: true)
!197 = !DIEnumerator(name: "MYRB_CMD_REBUILD_STAT", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "MYRB_CMD_GET_REBUILD_PROGRESS", value: 39, isUnsigned: true)
!199 = !DIEnumerator(name: "MYRB_CMD_REBUILD_CONTROL", value: 31, isUnsigned: true)
!200 = !DIEnumerator(name: "MYRB_CMD_READ_BADBLOCK_TABLE", value: 11, isUnsigned: true)
!201 = !DIEnumerator(name: "MYRB_CMD_READ_BADDATA_TABLE", value: 37, isUnsigned: true)
!202 = !DIEnumerator(name: "MYRB_CMD_CLEAR_BADDATA_TABLE", value: 38, isUnsigned: true)
!203 = !DIEnumerator(name: "MYRB_CMD_GET_ERROR_TABLE", value: 23, isUnsigned: true)
!204 = !DIEnumerator(name: "MYRB_CMD_ADD_CAPACITY_ASYNC", value: 42, isUnsigned: true)
!205 = !DIEnumerator(name: "MYRB_CMD_BGI_CONTROL", value: 43, isUnsigned: true)
!206 = !DIEnumerator(name: "MYRB_CMD_READ_CONFIG2", value: 61, isUnsigned: true)
!207 = !DIEnumerator(name: "MYRB_CMD_WRITE_CONFIG2", value: 60, isUnsigned: true)
!208 = !DIEnumerator(name: "MYRB_CMD_READ_CONFIG_ONDISK", value: 74, isUnsigned: true)
!209 = !DIEnumerator(name: "MYRB_CMD_WRITE_CONFIG_ONDISK", value: 75, isUnsigned: true)
!210 = !DIEnumerator(name: "MYRB_CMD_READ_CONFIG", value: 78, isUnsigned: true)
!211 = !DIEnumerator(name: "MYRB_CMD_READ_BACKUP_CONFIG", value: 77, isUnsigned: true)
!212 = !DIEnumerator(name: "MYRB_CMD_WRITE_CONFIG", value: 79, isUnsigned: true)
!213 = !DIEnumerator(name: "MYRB_CMD_ADD_CONFIG", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "MYRB_CMD_READ_CONFIG_LABEL", value: 72, isUnsigned: true)
!215 = !DIEnumerator(name: "MYRB_CMD_WRITE_CONFIG_LABEL", value: 73, isUnsigned: true)
!216 = !DIEnumerator(name: "MYRB_CMD_LOAD_IMAGE", value: 32, isUnsigned: true)
!217 = !DIEnumerator(name: "MYRB_CMD_STORE_IMAGE", value: 33, isUnsigned: true)
!218 = !DIEnumerator(name: "MYRB_CMD_PROGRAM_IMAGE", value: 34, isUnsigned: true)
!219 = !DIEnumerator(name: "MYRB_CMD_SET_DIAGNOSTIC_MODE", value: 49, isUnsigned: true)
!220 = !DIEnumerator(name: "MYRB_CMD_RUN_DIAGNOSTIC", value: 50, isUnsigned: true)
!221 = !DIEnumerator(name: "MYRB_CMD_GET_SUBSYS_DATA", value: 112, isUnsigned: true)
!222 = !DIEnumerator(name: "MYRB_CMD_SET_SUBSYS_PARAM", value: 113, isUnsigned: true)
!223 = !DIEnumerator(name: "MYRB_CMD_ENQUIRY_OLD", value: 5, isUnsigned: true)
!224 = !DIEnumerator(name: "MYRB_CMD_GET_DEVICE_STATE_OLD", value: 20, isUnsigned: true)
!225 = !DIEnumerator(name: "MYRB_CMD_READ_OLD", value: 2, isUnsigned: true)
!226 = !DIEnumerator(name: "MYRB_CMD_WRITE_OLD", value: 3, isUnsigned: true)
!227 = !DIEnumerator(name: "MYRB_CMD_READ_SG_OLD", value: 130, isUnsigned: true)
!228 = !DIEnumerator(name: "MYRB_CMD_WRITE_SG_OLD", value: 131, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "myrb_devstate", file: !164, line: 336, baseType: !165, size: 8, elements: !230)
!230 = !{!231, !232, !233, !234, !235, !236}
!231 = !DIEnumerator(name: "MYRB_DEVICE_DEAD", value: 0, isUnsigned: true)
!232 = !DIEnumerator(name: "MYRB_DEVICE_WO", value: 2, isUnsigned: true)
!233 = !DIEnumerator(name: "MYRB_DEVICE_ONLINE", value: 3, isUnsigned: true)
!234 = !DIEnumerator(name: "MYRB_DEVICE_CRITICAL", value: 4, isUnsigned: true)
!235 = !DIEnumerator(name: "MYRB_DEVICE_STANDBY", value: 16, isUnsigned: true)
!236 = !DIEnumerator(name: "MYRB_DEVICE_OFFLINE", value: 255, isUnsigned: true)
!237 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !238, file: !164, line: 653, baseType: !165, size: 8, elements: !371)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !239, file: !164, line: 643, size: 128, elements: !358)
!239 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "myrb_cmd_mbox", file: !164, line: 574, size: 128, elements: !240)
!240 = !{!241, !245, !249, !258, !274, !286, !298, !312, !327, !337, !347, !348}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !239, file: !164, line: 575, baseType: !242, size: 128)
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !243)
!243 = !{!244}
!244 = !DISubrange(count: 4)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !239, file: !164, line: 576, baseType: !246, size: 128)
!246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 128, elements: !247)
!247 = !{!248}
!248 = !DISubrange(count: 16)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !239, file: !164, line: 581, baseType: !250, size: 128)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !239, file: !164, line: 577, size: 128, elements: !251)
!251 = !{!252, !253, !254}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !250, file: !164, line: 578, baseType: !163, size: 8)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !250, file: !164, line: 579, baseType: !165, size: 8, offset: 8)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !250, file: !164, line: 580, baseType: !255, size: 112, offset: 16)
!255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 112, elements: !256)
!256 = !{!257}
!257 = !DISubrange(count: 14)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "type3", scope: !239, file: !164, line: 588, baseType: !259, size: 128)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !239, file: !164, line: 582, size: 128, elements: !260)
!260 = !{!261, !262, !263, !267, !272}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !259, file: !164, line: 583, baseType: !163, size: 8)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !259, file: !164, line: 584, baseType: !165, size: 8, offset: 8)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !259, file: !164, line: 585, baseType: !264, size: 48, offset: 16)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 48, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 6)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !259, file: !164, line: 586, baseType: !268, size: 32, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !269, line: 21, baseType: !270)
!269 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !271, line: 27, baseType: !7)
!271 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!272 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !259, file: !164, line: 587, baseType: !273, size: 32, offset: 96)
!273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 32, elements: !243)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "type3B", scope: !239, file: !164, line: 596, baseType: !275, size: 128)
!275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !239, file: !164, line: 589, size: 128, elements: !276)
!276 = !{!277, !278, !279, !280, !284, !285}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !275, file: !164, line: 590, baseType: !163, size: 8)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !275, file: !164, line: 591, baseType: !165, size: 8, offset: 8)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !275, file: !164, line: 592, baseType: !165, size: 8, offset: 16)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !275, file: !164, line: 593, baseType: !281, size: 40, offset: 24)
!281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 40, elements: !282)
!282 = !{!283}
!283 = !DISubrange(count: 5)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !275, file: !164, line: 594, baseType: !268, size: 32, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !275, file: !164, line: 595, baseType: !273, size: 32, offset: 96)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "type3C", scope: !239, file: !164, line: 604, baseType: !287, size: 128)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !239, file: !164, line: 597, size: 128, elements: !288)
!288 = !{!289, !290, !291, !292, !293, !294}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !287, file: !164, line: 598, baseType: !163, size: 8)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !287, file: !164, line: 599, baseType: !165, size: 8, offset: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !287, file: !164, line: 600, baseType: !281, size: 40, offset: 16)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_num", scope: !287, file: !164, line: 601, baseType: !165, size: 6, offset: 56, flags: DIFlagBitField, extraData: i64 56)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "auto_restore", scope: !287, file: !164, line: 602, baseType: !165, size: 1, offset: 62, flags: DIFlagBitField, extraData: i64 56)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !287, file: !164, line: 603, baseType: !295, size: 64, offset: 64)
!295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 64, elements: !296)
!296 = !{!297}
!297 = !DISubrange(count: 8)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "type3D", scope: !239, file: !164, line: 614, baseType: !299, size: 128)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !239, file: !164, line: 605, size: 128, elements: !300)
!300 = !{!301, !302, !303, !304, !305, !306, !310, !311}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !299, file: !164, line: 606, baseType: !163, size: 8)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !299, file: !164, line: 607, baseType: !165, size: 8, offset: 8)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !299, file: !164, line: 608, baseType: !165, size: 8, offset: 16)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !299, file: !164, line: 609, baseType: !165, size: 8, offset: 24)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !299, file: !164, line: 610, baseType: !229, size: 8, offset: 32)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !299, file: !164, line: 611, baseType: !307, size: 24, offset: 40)
!307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 24, elements: !308)
!308 = !{!309}
!309 = !DISubrange(count: 3)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !299, file: !164, line: 612, baseType: !268, size: 32, offset: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !299, file: !164, line: 613, baseType: !273, size: 32, offset: 96)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "type3E", scope: !239, file: !164, line: 624, baseType: !313, size: 128)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !239, file: !164, line: 615, size: 128, elements: !314)
!314 = !{!315, !316, !317, !318, !319, !321, !325, !326}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !313, file: !164, line: 616, baseType: !163, size: 8)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !313, file: !164, line: 617, baseType: !165, size: 8, offset: 8)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !313, file: !164, line: 618, baseType: !165, size: 8, offset: 16)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "opqual", scope: !313, file: !164, line: 619, baseType: !165, size: 8, offset: 24)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "ev_seq", scope: !313, file: !164, line: 620, baseType: !320, size: 16, offset: 32)
!320 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !313, file: !164, line: 621, baseType: !322, size: 16, offset: 48)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 16, elements: !323)
!323 = !{!324}
!324 = !DISubrange(count: 2)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !313, file: !164, line: 622, baseType: !268, size: 32, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !313, file: !164, line: 623, baseType: !273, size: 32, offset: 96)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "type3R", scope: !239, file: !164, line: 633, baseType: !328, size: 128)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !239, file: !164, line: 625, size: 128, elements: !329)
!329 = !{!330, !331, !332, !333, !334, !335, !336}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !328, file: !164, line: 626, baseType: !163, size: 8)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !328, file: !164, line: 627, baseType: !165, size: 8, offset: 8)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !328, file: !164, line: 628, baseType: !322, size: 16, offset: 16)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "rbld_rate", scope: !328, file: !164, line: 629, baseType: !165, size: 8, offset: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !328, file: !164, line: 630, baseType: !307, size: 24, offset: 40)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !328, file: !164, line: 631, baseType: !268, size: 32, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd3", scope: !328, file: !164, line: 632, baseType: !273, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "type4", scope: !239, file: !164, line: 642, baseType: !338, size: 128)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !239, file: !164, line: 634, size: 128, elements: !339)
!339 = !{!340, !341, !342, !343, !344, !345, !346}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !338, file: !164, line: 635, baseType: !163, size: 8)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !338, file: !164, line: 636, baseType: !165, size: 8, offset: 8)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_len", scope: !338, file: !164, line: 637, baseType: !320, size: 16, offset: 16)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "lba", scope: !338, file: !164, line: 638, baseType: !7, size: 32, offset: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !338, file: !164, line: 639, baseType: !268, size: 32, offset: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_num", scope: !338, file: !164, line: 640, baseType: !165, size: 8, offset: 96)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !338, file: !164, line: 641, baseType: !307, size: 24, offset: 104)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "type5", scope: !239, file: !164, line: 660, baseType: !238, size: 128)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "typeX", scope: !239, file: !164, line: 669, baseType: !349, size: 128)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !239, file: !164, line: 661, size: 128, elements: !350)
!350 = !{!351, !352, !353, !354, !355, !356, !357}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !349, file: !164, line: 662, baseType: !163, size: 8)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !349, file: !164, line: 663, baseType: !165, size: 8, offset: 8)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "opcode2", scope: !349, file: !164, line: 664, baseType: !165, size: 8, offset: 16)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !349, file: !164, line: 665, baseType: !165, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 24)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_mbox_addr", scope: !349, file: !164, line: 666, baseType: !268, size: 32, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "stat_mbox_addr", scope: !349, file: !164, line: 667, baseType: !268, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !349, file: !164, line: 668, baseType: !273, size: 32, offset: 96)
!358 = !{!359, !360, !361, !366, !367, !368, !369, !370}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !238, file: !164, line: 644, baseType: !163, size: 8)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !238, file: !164, line: 645, baseType: !165, size: 8, offset: 8)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !238, file: !164, line: 649, baseType: !362, size: 16, offset: 16)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !238, file: !164, line: 646, size: 16, elements: !363)
!363 = !{!364, !365}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_len", scope: !362, file: !164, line: 647, baseType: !320, size: 11, flags: DIFlagBitField, extraData: i64 0)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_num", scope: !362, file: !164, line: 648, baseType: !165, size: 5, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "lba", scope: !238, file: !164, line: 650, baseType: !7, size: 32, offset: 32)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !238, file: !164, line: 651, baseType: !268, size: 32, offset: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !238, file: !164, line: 652, baseType: !165, size: 6, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "sg_type", scope: !238, file: !164, line: 658, baseType: !237, size: 2, offset: 102, flags: DIFlagBitField, extraData: i64 96)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !238, file: !164, line: 659, baseType: !307, size: 24, offset: 104)
!371 = !{!372, !373, !374, !375}
!372 = !DIEnumerator(name: "MYRB_SGL_ADDR32_COUNT32", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "MYRB_SGL_ADDR32_COUNT16", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "MYRB_SGL_COUNT32_ADDR32", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "MYRB_SGL_COUNT16_ADDR32", value: 3, isUnsigned: true)
!376 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !377, file: !164, line: 533, baseType: !165, size: 8, elements: !408)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_dcdb", file: !164, line: 530, size: 704, elements: !378)
!378 = !{!379, !380, !381, !382, !383, !384, !391, !392, !393, !394, !395, !396, !397, !398, !402, !406, !407}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !377, file: !164, line: 531, baseType: !7, size: 4, flags: DIFlagBitField, extraData: i64 0)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !377, file: !164, line: 532, baseType: !7, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "data_xfer", scope: !377, file: !164, line: 538, baseType: !376, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "early_status", scope: !377, file: !164, line: 539, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !377, file: !164, line: 540, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !377, file: !164, line: 546, baseType: !385, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!385 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !377, file: !164, line: 541, baseType: !165, size: 8, elements: !386)
!386 = !{!387, !388, !389, !390}
!387 = !DIEnumerator(name: "MYRB_DCDB_TMO_24_HRS", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "MYRB_DCDB_TMO_10_SECS", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "MYRB_DCDB_TMO_60_SECS", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "MYRB_DCDB_TMO_10_MINS", value: 3, isUnsigned: true)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "no_autosense", scope: !377, file: !164, line: 547, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "allow_disconnect", scope: !377, file: !164, line: 548, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_len_lo", scope: !377, file: !164, line: 549, baseType: !320, size: 16, offset: 16)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !377, file: !164, line: 550, baseType: !268, size: 32, offset: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "cdb_len", scope: !377, file: !164, line: 551, baseType: !165, size: 4, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_len_hi4", scope: !377, file: !164, line: 552, baseType: !165, size: 4, offset: 68, flags: DIFlagBitField, extraData: i64 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !377, file: !164, line: 553, baseType: !165, size: 8, offset: 72)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !377, file: !164, line: 554, baseType: !399, size: 96, offset: 80)
!399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 96, elements: !400)
!400 = !{!401}
!401 = !DISubrange(count: 12)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !377, file: !164, line: 555, baseType: !403, size: 512, offset: 176)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 512, elements: !404)
!404 = !{!405}
!405 = !DISubrange(count: 64)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !377, file: !164, line: 556, baseType: !165, size: 8, offset: 688)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !377, file: !164, line: 557, baseType: !165, size: 8, offset: 696)
!408 = !{!409, !410, !411, !412}
!409 = !DIEnumerator(name: "MYRB_DCDB_XFER_NONE", value: 0, isUnsigned: true)
!410 = !DIEnumerator(name: "MYRB_DCDB_XFER_DEVICE_TO_SYSTEM", value: 1, isUnsigned: true)
!411 = !DIEnumerator(name: "MYRB_DCDB_XFER_SYSTEM_TO_DEVICE", value: 2, isUnsigned: true)
!412 = !DIEnumerator(name: "MYRB_DCDB_XFER_ILLEGAL", value: 3, isUnsigned: true)
!413 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !414, file: !164, line: 175, baseType: !165, size: 8, elements: !460)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_enquiry", file: !164, line: 162, size: 2048, elements: !415)
!415 = !{!416, !417, !418, !422, !423, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !448, !456}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_count", scope: !414, file: !164, line: 163, baseType: !165, size: 8)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !414, file: !164, line: 164, baseType: !7, size: 24, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_sizes", scope: !414, file: !164, line: 165, baseType: !419, size: 1024, offset: 32)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1024, elements: !420)
!420 = !{!421}
!421 = !DISubrange(count: 32)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "flash_age", scope: !414, file: !164, line: 166, baseType: !320, size: 16, offset: 1056)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !414, file: !164, line: 171, baseType: !424, size: 8, offset: 1072)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !414, file: !164, line: 167, size: 8, elements: !425)
!425 = !{!426, !427, !428}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "deferred", scope: !424, file: !164, line: 168, baseType: !165, size: 1, flags: DIFlagBitField, extraData: i64 0)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "low_bat", scope: !424, file: !164, line: 169, baseType: !165, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !424, file: !164, line: 170, baseType: !165, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd3", scope: !414, file: !164, line: 172, baseType: !165, size: 8, offset: 1080, flags: DIFlagBitField, extraData: i64 1080)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "fw_minor_version", scope: !414, file: !164, line: 173, baseType: !165, size: 8, offset: 1088)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "fw_major_version", scope: !414, file: !164, line: 174, baseType: !165, size: 8, offset: 1096)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rbld", scope: !414, file: !164, line: 185, baseType: !413, size: 8, offset: 1104)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "max_tcq", scope: !414, file: !164, line: 186, baseType: !165, size: 8, offset: 1112)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_offline", scope: !414, file: !164, line: 187, baseType: !165, size: 8, offset: 1120)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd4", scope: !414, file: !164, line: 188, baseType: !165, size: 8, offset: 1128, flags: DIFlagBitField, extraData: i64 1128)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ev_seq", scope: !414, file: !164, line: 189, baseType: !320, size: 16, offset: 1136)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_critical", scope: !414, file: !164, line: 190, baseType: !165, size: 8, offset: 1152)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd5", scope: !414, file: !164, line: 191, baseType: !7, size: 24, offset: 1160, flags: DIFlagBitField, extraData: i64 1160)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "pdev_dead", scope: !414, file: !164, line: 192, baseType: !165, size: 8, offset: 1184)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd6", scope: !414, file: !164, line: 193, baseType: !165, size: 8, offset: 1192, flags: DIFlagBitField, extraData: i64 1192)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "rbld_count", scope: !414, file: !164, line: 194, baseType: !165, size: 8, offset: 1200)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !414, file: !164, line: 199, baseType: !443, size: 8, offset: 1208)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !414, file: !164, line: 195, size: 8, elements: !444)
!444 = !{!445, !446, !447}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd7", scope: !443, file: !164, line: 196, baseType: !165, size: 3, flags: DIFlagBitField, extraData: i64 0)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "bbu_present", scope: !443, file: !164, line: 197, baseType: !165, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd8", scope: !443, file: !164, line: 198, baseType: !165, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "dead_drives", scope: !414, file: !164, line: 203, baseType: !449, size: 336, offset: 1216)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 336, elements: !454)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !414, file: !164, line: 200, size: 16, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !450, file: !164, line: 201, baseType: !165, size: 8)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !450, file: !164, line: 202, baseType: !165, size: 8, offset: 8)
!454 = !{!455}
!455 = !DISubrange(count: 21)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd9", scope: !414, file: !164, line: 204, baseType: !457, size: 496, offset: 1552)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 496, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 62)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIEnumerator(name: "MYRB_NO_STDBY_RBLD_OR_CHECK_IN_PROGRESS", value: 0, isUnsigned: true)
!462 = !DIEnumerator(name: "MYRB_STDBY_RBLD_IN_PROGRESS", value: 1, isUnsigned: true)
!463 = !DIEnumerator(name: "MYRB_BG_RBLD_IN_PROGRESS", value: 2, isUnsigned: true)
!464 = !DIEnumerator(name: "MYRB_BG_CHECK_IN_PROGRESS", value: 3, isUnsigned: true)
!465 = !DIEnumerator(name: "MYRB_STDBY_RBLD_COMPLETED_WITH_ERROR", value: 255, isUnsigned: true)
!466 = !DIEnumerator(name: "MYRB_BG_RBLD_OR_CHECK_FAILED_DRIVE_FAILED", value: 240, isUnsigned: true)
!467 = !DIEnumerator(name: "MYRB_BG_RBLD_OR_CHECK_FAILED_LDEV_FAILED", value: 241, isUnsigned: true)
!468 = !DIEnumerator(name: "MYRB_BG_RBLD_OR_CHECK_FAILED_OTHER", value: 242, isUnsigned: true)
!469 = !DIEnumerator(name: "MYRB_BG_RBLD_OR_CHECK_SUCCESS_TERMINATED", value: 243, isUnsigned: true)
!470 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !471, file: !164, line: 434, baseType: !165, size: 8, elements: !480)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_bgi_status", file: !164, line: 428, size: 256, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !479}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_size", scope: !471, file: !164, line: 429, baseType: !7, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_done", scope: !471, file: !164, line: 430, baseType: !7, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !471, file: !164, line: 431, baseType: !399, size: 96, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_num", scope: !471, file: !164, line: 432, baseType: !7, size: 32, offset: 160)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "raid_level", scope: !471, file: !164, line: 433, baseType: !165, size: 8, offset: 192)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !471, file: !164, line: 440, baseType: !470, size: 8, offset: 200)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !471, file: !164, line: 441, baseType: !264, size: 48, offset: 208)
!480 = !{!481, !482, !483, !484, !485}
!481 = !DIEnumerator(name: "MYRB_BGI_INVALID", value: 0, isUnsigned: true)
!482 = !DIEnumerator(name: "MYRB_BGI_STARTED", value: 2, isUnsigned: true)
!483 = !DIEnumerator(name: "MYRB_BGI_INPROGRESS", value: 4, isUnsigned: true)
!484 = !DIEnumerator(name: "MYRB_BGI_SUSPENDED", value: 5, isUnsigned: true)
!485 = !DIEnumerator(name: "MYRB_BGI_CANCELLED", value: 6, isUnsigned: true)
!486 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !487, line: 11, baseType: !7, size: 32, elements: !488)
!487 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!488 = !{!489, !490, !491}
!489 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!490 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!491 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!492 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DAC960_LA_reg_offset", file: !164, line: 781, baseType: !7, size: 32, elements: !493)
!493 = !{!494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512}
!494 = !DIEnumerator(name: "DAC960_LA_IRQMASK_OFFSET", value: 52, isUnsigned: true)
!495 = !DIEnumerator(name: "DAC960_LA_CMDOP_OFFSET", value: 80, isUnsigned: true)
!496 = !DIEnumerator(name: "DAC960_LA_CMDID_OFFSET", value: 81, isUnsigned: true)
!497 = !DIEnumerator(name: "DAC960_LA_MBOX2_OFFSET", value: 82, isUnsigned: true)
!498 = !DIEnumerator(name: "DAC960_LA_MBOX3_OFFSET", value: 83, isUnsigned: true)
!499 = !DIEnumerator(name: "DAC960_LA_MBOX4_OFFSET", value: 84, isUnsigned: true)
!500 = !DIEnumerator(name: "DAC960_LA_MBOX5_OFFSET", value: 85, isUnsigned: true)
!501 = !DIEnumerator(name: "DAC960_LA_MBOX6_OFFSET", value: 86, isUnsigned: true)
!502 = !DIEnumerator(name: "DAC960_LA_MBOX7_OFFSET", value: 87, isUnsigned: true)
!503 = !DIEnumerator(name: "DAC960_LA_MBOX8_OFFSET", value: 88, isUnsigned: true)
!504 = !DIEnumerator(name: "DAC960_LA_MBOX9_OFFSET", value: 89, isUnsigned: true)
!505 = !DIEnumerator(name: "DAC960_LA_MBOX10_OFFSET", value: 90, isUnsigned: true)
!506 = !DIEnumerator(name: "DAC960_LA_MBOX11_OFFSET", value: 91, isUnsigned: true)
!507 = !DIEnumerator(name: "DAC960_LA_MBOX12_OFFSET", value: 92, isUnsigned: true)
!508 = !DIEnumerator(name: "DAC960_LA_STSID_OFFSET", value: 93, isUnsigned: true)
!509 = !DIEnumerator(name: "DAC960_LA_STS_OFFSET", value: 94, isUnsigned: true)
!510 = !DIEnumerator(name: "DAC960_LA_IDB_OFFSET", value: 96, isUnsigned: true)
!511 = !DIEnumerator(name: "DAC960_LA_ODB_OFFSET", value: 97, isUnsigned: true)
!512 = !DIEnumerator(name: "DAC960_LA_ERRSTS_OFFSET", value: 99, isUnsigned: true)
!513 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !514, line: 10, baseType: !7, size: 32, elements: !515)
!514 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!515 = !{!516, !517}
!516 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!517 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!518 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !519, line: 460, baseType: !7, size: 32, elements: !520)
!519 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!520 = !{!521, !522}
!521 = !DIEnumerator(name: "BLK_MQ_UNIQUE_TAG_BITS", value: 16, isUnsigned: true)
!522 = !DIEnumerator(name: "BLK_MQ_UNIQUE_TAG_MASK", value: 65535, isUnsigned: true)
!523 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DAC960_PG_reg_offset", file: !164, line: 838, baseType: !7, size: 32, elements: !524)
!524 = !{!525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543}
!525 = !DIEnumerator(name: "DAC960_PG_IDB_OFFSET", value: 32, isUnsigned: true)
!526 = !DIEnumerator(name: "DAC960_PG_ODB_OFFSET", value: 44, isUnsigned: true)
!527 = !DIEnumerator(name: "DAC960_PG_IRQMASK_OFFSET", value: 52, isUnsigned: true)
!528 = !DIEnumerator(name: "DAC960_PG_CMDOP_OFFSET", value: 4096, isUnsigned: true)
!529 = !DIEnumerator(name: "DAC960_PG_CMDID_OFFSET", value: 4097, isUnsigned: true)
!530 = !DIEnumerator(name: "DAC960_PG_MBOX2_OFFSET", value: 4098, isUnsigned: true)
!531 = !DIEnumerator(name: "DAC960_PG_MBOX3_OFFSET", value: 4099, isUnsigned: true)
!532 = !DIEnumerator(name: "DAC960_PG_MBOX4_OFFSET", value: 4100, isUnsigned: true)
!533 = !DIEnumerator(name: "DAC960_PG_MBOX5_OFFSET", value: 4101, isUnsigned: true)
!534 = !DIEnumerator(name: "DAC960_PG_MBOX6_OFFSET", value: 4102, isUnsigned: true)
!535 = !DIEnumerator(name: "DAC960_PG_MBOX7_OFFSET", value: 4103, isUnsigned: true)
!536 = !DIEnumerator(name: "DAC960_PG_MBOX8_OFFSET", value: 4104, isUnsigned: true)
!537 = !DIEnumerator(name: "DAC960_PG_MBOX9_OFFSET", value: 4105, isUnsigned: true)
!538 = !DIEnumerator(name: "DAC960_PG_MBOX10_OFFSET", value: 4106, isUnsigned: true)
!539 = !DIEnumerator(name: "DAC960_PG_MBOX11_OFFSET", value: 4107, isUnsigned: true)
!540 = !DIEnumerator(name: "DAC960_PG_MBOX12_OFFSET", value: 4108, isUnsigned: true)
!541 = !DIEnumerator(name: "DAC960_PG_STSID_OFFSET", value: 4120, isUnsigned: true)
!542 = !DIEnumerator(name: "DAC960_PG_STS_OFFSET", value: 4122, isUnsigned: true)
!543 = !DIEnumerator(name: "DAC960_PG_ERRSTS_OFFSET", value: 4159, isUnsigned: true)
!544 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DAC960_PD_reg_offset", file: !164, line: 897, baseType: !7, size: 32, elements: !545)
!545 = !{!546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564}
!546 = !DIEnumerator(name: "DAC960_PD_CMDOP_OFFSET", value: 0, isUnsigned: true)
!547 = !DIEnumerator(name: "DAC960_PD_CMDID_OFFSET", value: 1, isUnsigned: true)
!548 = !DIEnumerator(name: "DAC960_PD_MBOX2_OFFSET", value: 2, isUnsigned: true)
!549 = !DIEnumerator(name: "DAC960_PD_MBOX3_OFFSET", value: 3, isUnsigned: true)
!550 = !DIEnumerator(name: "DAC960_PD_MBOX4_OFFSET", value: 4, isUnsigned: true)
!551 = !DIEnumerator(name: "DAC960_PD_MBOX5_OFFSET", value: 5, isUnsigned: true)
!552 = !DIEnumerator(name: "DAC960_PD_MBOX6_OFFSET", value: 6, isUnsigned: true)
!553 = !DIEnumerator(name: "DAC960_PD_MBOX7_OFFSET", value: 7, isUnsigned: true)
!554 = !DIEnumerator(name: "DAC960_PD_MBOX8_OFFSET", value: 8, isUnsigned: true)
!555 = !DIEnumerator(name: "DAC960_PD_MBOX9_OFFSET", value: 9, isUnsigned: true)
!556 = !DIEnumerator(name: "DAC960_PD_MBOX10_OFFSET", value: 10, isUnsigned: true)
!557 = !DIEnumerator(name: "DAC960_PD_MBOX11_OFFSET", value: 11, isUnsigned: true)
!558 = !DIEnumerator(name: "DAC960_PD_MBOX12_OFFSET", value: 12, isUnsigned: true)
!559 = !DIEnumerator(name: "DAC960_PD_STSID_OFFSET", value: 13, isUnsigned: true)
!560 = !DIEnumerator(name: "DAC960_PD_STS_OFFSET", value: 14, isUnsigned: true)
!561 = !DIEnumerator(name: "DAC960_PD_ERRSTS_OFFSET", value: 63, isUnsigned: true)
!562 = !DIEnumerator(name: "DAC960_PD_IDB_OFFSET", value: 64, isUnsigned: true)
!563 = !DIEnumerator(name: "DAC960_PD_ODB_OFFSET", value: 65, isUnsigned: true)
!564 = !DIEnumerator(name: "DAC960_PD_IRQEN_OFFSET", value: 67, isUnsigned: true)
!565 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "raid_level", file: !566, line: 28, baseType: !7, size: 32, elements: !567)
!566 = !DIFile(filename: "./include/linux/raid_class.h", directory: "/home/lizy2001/genbc/linux")
!567 = !{!568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579}
!568 = !DIEnumerator(name: "RAID_LEVEL_UNKNOWN", value: 0, isUnsigned: true)
!569 = !DIEnumerator(name: "RAID_LEVEL_LINEAR", value: 1, isUnsigned: true)
!570 = !DIEnumerator(name: "RAID_LEVEL_0", value: 2, isUnsigned: true)
!571 = !DIEnumerator(name: "RAID_LEVEL_1", value: 3, isUnsigned: true)
!572 = !DIEnumerator(name: "RAID_LEVEL_10", value: 4, isUnsigned: true)
!573 = !DIEnumerator(name: "RAID_LEVEL_1E", value: 5, isUnsigned: true)
!574 = !DIEnumerator(name: "RAID_LEVEL_3", value: 6, isUnsigned: true)
!575 = !DIEnumerator(name: "RAID_LEVEL_4", value: 7, isUnsigned: true)
!576 = !DIEnumerator(name: "RAID_LEVEL_5", value: 8, isUnsigned: true)
!577 = !DIEnumerator(name: "RAID_LEVEL_50", value: 9, isUnsigned: true)
!578 = !DIEnumerator(name: "RAID_LEVEL_6", value: 10, isUnsigned: true)
!579 = !DIEnumerator(name: "RAID_LEVEL_JBOD", value: 11, isUnsigned: true)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !581, line: 305, baseType: !7, size: 32, elements: !582)
!581 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!582 = !{!583, !584, !585, !586}
!583 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!584 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!585 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!586 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!587 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "raid_state", file: !566, line: 20, baseType: !7, size: 32, elements: !588)
!588 = !{!589, !590, !591, !592, !593}
!589 = !DIEnumerator(name: "RAID_STATE_UNKNOWN", value: 0, isUnsigned: true)
!590 = !DIEnumerator(name: "RAID_STATE_ACTIVE", value: 1, isUnsigned: true)
!591 = !DIEnumerator(name: "RAID_STATE_DEGRADED", value: 2, isUnsigned: true)
!592 = !DIEnumerator(name: "RAID_STATE_RESYNCING", value: 3, isUnsigned: true)
!593 = !DIEnumerator(name: "RAID_STATE_OFFLINE", value: 4, isUnsigned: true)
!594 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !595, file: !164, line: 395, baseType: !165, size: 8, elements: !612)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_pdev_state", file: !164, line: 392, size: 120, elements: !596)
!596 = !{!597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !595, file: !164, line: 393, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "devtype", scope: !595, file: !164, line: 400, baseType: !594, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !595, file: !164, line: 401, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "fast20", scope: !595, file: !164, line: 402, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !595, file: !164, line: 403, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "fast", scope: !595, file: !164, line: 404, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "wide", scope: !595, file: !164, line: 405, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "tcq_supported", scope: !595, file: !164, line: 406, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !595, file: !164, line: 407, baseType: !229, size: 8, offset: 16)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !595, file: !164, line: 408, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 24)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "sync_multiplier", scope: !595, file: !164, line: 409, baseType: !7, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "sync_offset", scope: !595, file: !164, line: 410, baseType: !7, size: 5, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd3", scope: !595, file: !164, line: 411, baseType: !7, size: 3, offset: 69, flags: DIFlagBitField, extraData: i64 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !595, file: !164, line: 412, baseType: !7, size: 32, offset: 72)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd4", scope: !595, file: !164, line: 413, baseType: !7, size: 16, offset: 104, flags: DIFlagBitField, extraData: i64 104)
!612 = !{!613, !614, !615, !616}
!613 = !DIEnumerator(name: "MYRB_TYPE_OTHER", value: 0, isUnsigned: true)
!614 = !DIEnumerator(name: "MYRB_TYPE_DISK", value: 1, isUnsigned: true)
!615 = !DIEnumerator(name: "MYRB_TYPE_TAPE", value: 2, isUnsigned: true)
!616 = !DIEnumerator(name: "MYRB_TYPE_CDROM_OR_WORM", value: 3, isUnsigned: true)
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "myrb_raidlevel", file: !164, line: 348, baseType: !165, size: 8, elements: !618)
!618 = !{!619, !620, !621, !622, !623, !624}
!619 = !DIEnumerator(name: "MYRB_RAID_LEVEL0", value: 0, isUnsigned: true)
!620 = !DIEnumerator(name: "MYRB_RAID_LEVEL1", value: 1, isUnsigned: true)
!621 = !DIEnumerator(name: "MYRB_RAID_LEVEL3", value: 3, isUnsigned: true)
!622 = !DIEnumerator(name: "MYRB_RAID_LEVEL5", value: 5, isUnsigned: true)
!623 = !DIEnumerator(name: "MYRB_RAID_LEVEL6", value: 6, isUnsigned: true)
!624 = !DIEnumerator(name: "MYRB_RAID_JBOD", value: 7, isUnsigned: true)
!625 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !626, file: !164, line: 212, baseType: !165, size: 8, elements: !752)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !627, file: !164, line: 211, size: 32, elements: !735)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_enquiry2", file: !164, line: 210, size: 1024, elements: !628)
!628 = !{!629, !630, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !692, !693, !694, !695, !696, !697, !714, !715, !716, !725, !726, !734}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !627, file: !164, line: 237, baseType: !626, size: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !627, file: !164, line: 244, baseType: !631, size: 32, offset: 32)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !627, file: !164, line: 239, size: 32, elements: !632)
!632 = !{!633, !634, !635, !636}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "major_version", scope: !631, file: !164, line: 240, baseType: !165, size: 8)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "minor_version", scope: !631, file: !164, line: 241, baseType: !165, size: 8, offset: 8)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "turn_id", scope: !631, file: !164, line: 242, baseType: !165, size: 8, offset: 16)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "firmware_type", scope: !631, file: !164, line: 243, baseType: !637, size: 8, offset: 24)
!637 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !627, file: !164, line: 245, baseType: !7, size: 32, offset: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_chan", scope: !627, file: !164, line: 246, baseType: !165, size: 8, offset: 96)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "cur_chan", scope: !627, file: !164, line: 247, baseType: !165, size: 8, offset: 104)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "max_targets", scope: !627, file: !164, line: 248, baseType: !165, size: 8, offset: 112)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "max_tcq", scope: !627, file: !164, line: 249, baseType: !165, size: 8, offset: 120)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "max_ldev", scope: !627, file: !164, line: 250, baseType: !165, size: 8, offset: 128)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "max_arms", scope: !627, file: !164, line: 251, baseType: !165, size: 8, offset: 136)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "max_spans", scope: !627, file: !164, line: 252, baseType: !165, size: 8, offset: 144)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !627, file: !164, line: 253, baseType: !165, size: 8, offset: 152)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd3", scope: !627, file: !164, line: 254, baseType: !7, size: 32, offset: 160)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "mem_size", scope: !627, file: !164, line: 255, baseType: !7, size: 32, offset: 192)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "cache_size", scope: !627, file: !164, line: 256, baseType: !7, size: 32, offset: 224)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "flash_size", scope: !627, file: !164, line: 257, baseType: !7, size: 32, offset: 256)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "nvram_size", scope: !627, file: !164, line: 258, baseType: !7, size: 32, offset: 288)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "mem_type", scope: !627, file: !164, line: 275, baseType: !653, size: 16, offset: 320)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !627, file: !164, line: 259, size: 16, elements: !654)
!654 = !{!655, !662, !669, !670, !671}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "ram", scope: !653, file: !164, line: 265, baseType: !656, size: 3, flags: DIFlagBitField, extraData: i64 0)
!656 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !653, file: !164, line: 260, baseType: !165, size: 8, elements: !657)
!657 = !{!658, !659, !660, !661}
!658 = !DIEnumerator(name: "MYRB_RAM_TYPE_DRAM", value: 0, isUnsigned: true)
!659 = !DIEnumerator(name: "MYRB_RAM_TYPE_EDO", value: 1, isUnsigned: true)
!660 = !DIEnumerator(name: "MYRB_RAM_TYPE_SDRAM", value: 2, isUnsigned: true)
!661 = !DIEnumerator(name: "MYRB_RAM_TYPE_Last", value: 7, isUnsigned: true)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !653, file: !164, line: 271, baseType: !663, size: 3, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!663 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !653, file: !164, line: 266, baseType: !165, size: 8, elements: !664)
!664 = !{!665, !666, !667, !668}
!665 = !DIEnumerator(name: "MYRB_ERR_CORR_None", value: 0, isUnsigned: true)
!666 = !DIEnumerator(name: "MYRB_ERR_CORR_Parity", value: 1, isUnsigned: true)
!667 = !DIEnumerator(name: "MYRB_ERR_CORR_ECC", value: 2, isUnsigned: true)
!668 = !DIEnumerator(name: "MYRB_ERR_CORR_Last", value: 7, isUnsigned: true)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "fast_page", scope: !653, file: !164, line: 272, baseType: !165, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "low_power", scope: !653, file: !164, line: 273, baseType: !165, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd4", scope: !653, file: !164, line: 274, baseType: !165, size: 8, offset: 8)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "clock_speed", scope: !627, file: !164, line: 276, baseType: !320, size: 16, offset: 336)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "mem_speed", scope: !627, file: !164, line: 277, baseType: !320, size: 16, offset: 352)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "hw_speed", scope: !627, file: !164, line: 278, baseType: !320, size: 16, offset: 368)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd5", scope: !627, file: !164, line: 279, baseType: !399, size: 96, offset: 384)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmds", scope: !627, file: !164, line: 280, baseType: !320, size: 16, offset: 480)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "max_sge", scope: !627, file: !164, line: 281, baseType: !320, size: 16, offset: 496)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "max_drv_cmds", scope: !627, file: !164, line: 282, baseType: !320, size: 16, offset: 512)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "max_io_desc", scope: !627, file: !164, line: 283, baseType: !320, size: 16, offset: 528)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !627, file: !164, line: 284, baseType: !320, size: 16, offset: 544)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !627, file: !164, line: 285, baseType: !165, size: 8, offset: 560)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd6", scope: !627, file: !164, line: 286, baseType: !165, size: 8, offset: 568)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_tmo", scope: !627, file: !164, line: 287, baseType: !165, size: 8, offset: 576)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd7", scope: !627, file: !164, line: 288, baseType: !165, size: 8, offset: 584)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "min_freelines", scope: !627, file: !164, line: 289, baseType: !320, size: 16, offset: 592)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd8", scope: !627, file: !164, line: 290, baseType: !295, size: 64, offset: 608)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "rbld_rate_const", scope: !627, file: !164, line: 291, baseType: !165, size: 8, offset: 672)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd9", scope: !627, file: !164, line: 292, baseType: !689, size: 88, offset: 680)
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 88, elements: !690)
!690 = !{!691}
!691 = !DISubrange(count: 11)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_block_size", scope: !627, file: !164, line: 293, baseType: !320, size: 16, offset: 768)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_block_size", scope: !627, file: !164, line: 294, baseType: !320, size: 16, offset: 784)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "max_blocks_per_cmd", scope: !627, file: !164, line: 295, baseType: !320, size: 16, offset: 800)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "block_factor", scope: !627, file: !164, line: 296, baseType: !320, size: 16, offset: 816)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "cacheline_size", scope: !627, file: !164, line: 297, baseType: !320, size: 16, offset: 832)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_cap", scope: !627, file: !164, line: 311, baseType: !698, size: 8, offset: 848)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !627, file: !164, line: 298, size: 8, elements: !699)
!699 = !{!700, !706, !712, !713}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !698, file: !164, line: 303, baseType: !701, size: 2, flags: DIFlagBitField, extraData: i64 0)
!701 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !698, file: !164, line: 299, baseType: !165, size: 8, elements: !702)
!702 = !{!703, !704, !705}
!703 = !DIEnumerator(name: "MYRB_WIDTH_NARROW_8BIT", value: 0, isUnsigned: true)
!704 = !DIEnumerator(name: "MYRB_WIDTH_WIDE_16BIT", value: 1, isUnsigned: true)
!705 = !DIEnumerator(name: "MYRB_WIDTH_WIDE_32BIT", value: 2, isUnsigned: true)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "bus_speed", scope: !698, file: !164, line: 308, baseType: !707, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!707 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !698, file: !164, line: 304, baseType: !165, size: 8, elements: !708)
!708 = !{!709, !710, !711}
!709 = !DIEnumerator(name: "MYRB_SCSI_SPEED_FAST", value: 0, isUnsigned: true)
!710 = !DIEnumerator(name: "MYRB_SCSI_SPEED_ULTRA", value: 1, isUnsigned: true)
!711 = !DIEnumerator(name: "MYRB_SCSI_SPEED_ULTRA2", value: 2, isUnsigned: true)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "differential", scope: !698, file: !164, line: 309, baseType: !165, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd10", scope: !698, file: !164, line: 310, baseType: !165, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd11", scope: !627, file: !164, line: 312, baseType: !281, size: 40, offset: 856)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "fw_build", scope: !627, file: !164, line: 313, baseType: !320, size: 16, offset: 896)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "fault_mgmt", scope: !627, file: !164, line: 321, baseType: !717, size: 8, offset: 912)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !627, file: !164, line: 314, baseType: !165, size: 8, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724}
!719 = !DIEnumerator(name: "MYRB_FAULT_AEMI", value: 1, isUnsigned: true)
!720 = !DIEnumerator(name: "MYRB_FAULT_OEM1", value: 2, isUnsigned: true)
!721 = !DIEnumerator(name: "MYRB_FAULT_OEM2", value: 4, isUnsigned: true)
!722 = !DIEnumerator(name: "MYRB_FAULT_OEM3", value: 8, isUnsigned: true)
!723 = !DIEnumerator(name: "MYRB_FAULT_CONNER", value: 16, isUnsigned: true)
!724 = !DIEnumerator(name: "MYRB_FAULT_SAFTE", value: 32, isUnsigned: true)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd12", scope: !627, file: !164, line: 322, baseType: !165, size: 8, offset: 920)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "fw_features", scope: !627, file: !164, line: 329, baseType: !727, size: 32, offset: 928)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !627, file: !164, line: 323, size: 32, elements: !728)
!728 = !{!729, !730, !731, !732, !733}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "clustering", scope: !727, file: !164, line: 324, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "online_RAID_expansion", scope: !727, file: !164, line: 325, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !727, file: !164, line: 326, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "bgi", scope: !727, file: !164, line: 327, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd13", scope: !727, file: !164, line: 328, baseType: !7, size: 28, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd14", scope: !627, file: !164, line: 330, baseType: !295, size: 64, offset: 960)
!735 = !{!736, !737, !738, !745}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "sub_model", scope: !626, file: !164, line: 223, baseType: !625, size: 8)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "actual_channels", scope: !626, file: !164, line: 224, baseType: !165, size: 8, offset: 8)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !626, file: !164, line: 230, baseType: !739, size: 8, offset: 16)
!739 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !626, file: !164, line: 225, baseType: !165, size: 8, elements: !740)
!740 = !{!741, !742, !743, !744}
!741 = !DIEnumerator(name: "MYRB_5_CHANNEL_BOARD", value: 1, isUnsigned: true)
!742 = !DIEnumerator(name: "MYRB_3_CHANNEL_BOARD", value: 2, isUnsigned: true)
!743 = !DIEnumerator(name: "MYRB_2_CHANNEL_BOARD", value: 3, isUnsigned: true)
!744 = !DIEnumerator(name: "MYRB_3_CHANNEL_ASIC_DAC", value: 4, isUnsigned: true)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !626, file: !164, line: 236, baseType: !746, size: 8, offset: 24)
!746 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !626, file: !164, line: 231, baseType: !165, size: 8, elements: !747)
!747 = !{!748, !749, !750, !751}
!748 = !DIEnumerator(name: "MYRB_EISA_CONTROLLER", value: 1, isUnsigned: true)
!749 = !DIEnumerator(name: "MYRB_MCA_CONTROLLER", value: 2, isUnsigned: true)
!750 = !DIEnumerator(name: "MYRB_PCI_CONTROLLER", value: 3, isUnsigned: true)
!751 = !DIEnumerator(name: "MYRB_SCSI_TO_SCSI", value: 8, isUnsigned: true)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762}
!753 = !DIEnumerator(name: "DAC960_V1_P_PD_PU", value: 1, isUnsigned: true)
!754 = !DIEnumerator(name: "DAC960_V1_PL", value: 2, isUnsigned: true)
!755 = !DIEnumerator(name: "DAC960_V1_PG", value: 16, isUnsigned: true)
!756 = !DIEnumerator(name: "DAC960_V1_PJ", value: 17, isUnsigned: true)
!757 = !DIEnumerator(name: "DAC960_V1_PR", value: 18, isUnsigned: true)
!758 = !DIEnumerator(name: "DAC960_V1_PT", value: 19, isUnsigned: true)
!759 = !DIEnumerator(name: "DAC960_V1_PTL0", value: 20, isUnsigned: true)
!760 = !DIEnumerator(name: "DAC960_V1_PRL", value: 21, isUnsigned: true)
!761 = !DIEnumerator(name: "DAC960_V1_PTL1", value: 22, isUnsigned: true)
!762 = !DIEnumerator(name: "DAC960_V1_1164P", value: 32, isUnsigned: true)
!763 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !764, file: !164, line: 469, baseType: !165, size: 8, elements: !837)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_config2", file: !164, line: 457, size: 512, elements: !765)
!765 = !{!766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !808, !809, !810, !815, !816, !817, !821, !822, !823, !824, !831, !832, !836}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !764, file: !164, line: 458, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "active_negation", scope: !764, file: !164, line: 459, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !764, file: !164, line: 460, baseType: !7, size: 5, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "no_rescan_on_reset_during_scan", scope: !764, file: !164, line: 461, baseType: !7, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "StorageWorks_support", scope: !764, file: !164, line: 462, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "HewlettPackard_support", scope: !764, file: !164, line: 463, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "no_disconnect_on_first_command", scope: !764, file: !164, line: 464, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd3", scope: !764, file: !164, line: 465, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "AEMI_ARM", scope: !764, file: !164, line: 466, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "AEMI_OFM", scope: !764, file: !164, line: 467, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd4", scope: !764, file: !164, line: 468, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "OEMID", scope: !764, file: !164, line: 476, baseType: !763, size: 8, offset: 16)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "oem_model_number", scope: !764, file: !164, line: 477, baseType: !165, size: 8, offset: 24)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "physical_sector", scope: !764, file: !164, line: 478, baseType: !165, size: 8, offset: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "logical_sector", scope: !764, file: !164, line: 479, baseType: !165, size: 8, offset: 40)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "block_factor", scope: !764, file: !164, line: 480, baseType: !165, size: 8, offset: 48)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "readahead_enabled", scope: !764, file: !164, line: 481, baseType: !7, size: 1, offset: 56, flags: DIFlagBitField, extraData: i64 56)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "low_BIOS_delay", scope: !764, file: !164, line: 482, baseType: !7, size: 1, offset: 57, flags: DIFlagBitField, extraData: i64 56)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd5", scope: !764, file: !164, line: 483, baseType: !7, size: 2, offset: 58, flags: DIFlagBitField, extraData: i64 56)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_reassign_to_one_sector", scope: !764, file: !164, line: 484, baseType: !7, size: 1, offset: 60, flags: DIFlagBitField, extraData: i64 56)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd6", scope: !764, file: !164, line: 485, baseType: !7, size: 1, offset: 61, flags: DIFlagBitField, extraData: i64 56)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "FUA_during_write_recovery", scope: !764, file: !164, line: 486, baseType: !7, size: 1, offset: 62, flags: DIFlagBitField, extraData: i64 56)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "enable_LeftSymmetricRAID5Algorithm", scope: !764, file: !164, line: 487, baseType: !7, size: 1, offset: 63, flags: DIFlagBitField, extraData: i64 56)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "default_rebuild_rate", scope: !764, file: !164, line: 488, baseType: !165, size: 8, offset: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd7", scope: !764, file: !164, line: 489, baseType: !165, size: 8, offset: 72)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_per_cacheline", scope: !764, file: !164, line: 490, baseType: !165, size: 8, offset: 80)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_per_stripe", scope: !764, file: !164, line: 491, baseType: !165, size: 8, offset: 88)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "channelparam", scope: !764, file: !164, line: 503, baseType: !794, size: 48, offset: 96)
!794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !795, size: 48, elements: !265)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !764, file: !164, line: 492, size: 8, elements: !796)
!796 = !{!797, !804, !805, !806, !807}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !795, file: !164, line: 498, baseType: !798, size: 2, flags: DIFlagBitField, extraData: i64 0)
!798 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !795, file: !164, line: 493, baseType: !165, size: 8, elements: !799)
!799 = !{!800, !801, !802, !803}
!800 = !DIEnumerator(name: "MYRB_SPEED_ASYNC", value: 0, isUnsigned: true)
!801 = !DIEnumerator(name: "MYRB_SPEED_SYNC_8MHz", value: 1, isUnsigned: true)
!802 = !DIEnumerator(name: "MYRB_SPEED_SYNC_5MHz", value: 2, isUnsigned: true)
!803 = !DIEnumerator(name: "MYRB_SPEED_SYNC_10_OR_20MHz", value: 3, isUnsigned: true)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "force_8bit", scope: !795, file: !164, line: 499, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "disable_fast20", scope: !795, file: !164, line: 500, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd8", scope: !795, file: !164, line: 501, baseType: !7, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "enable_tcq", scope: !795, file: !164, line: 502, baseType: !7, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "SCSIInitiatorID", scope: !764, file: !164, line: 504, baseType: !165, size: 8, offset: 144)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd9", scope: !764, file: !164, line: 505, baseType: !165, size: 8, offset: 152)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !764, file: !164, line: 509, baseType: !811, size: 8, offset: 160)
!811 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !764, file: !164, line: 506, baseType: !165, size: 8, elements: !812)
!812 = !{!813, !814}
!813 = !DIEnumerator(name: "MYRB_STARTUP_CONTROLLER_SPINUP", value: 0, isUnsigned: true)
!814 = !DIEnumerator(name: "MYRB_STARTUP_POWERON_SPINUP", value: 1, isUnsigned: true)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "simultaneous_device_spinup_count", scope: !764, file: !164, line: 510, baseType: !165, size: 8, offset: 168)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "seconds_delay_between_spinups", scope: !764, file: !164, line: 511, baseType: !165, size: 8, offset: 176)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd10", scope: !764, file: !164, line: 512, baseType: !818, size: 232, offset: 184)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 232, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 29)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "BIOS_disabled", scope: !764, file: !164, line: 513, baseType: !7, size: 1, offset: 416, flags: DIFlagBitField, extraData: i64 416)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "CDROM_boot_enabled", scope: !764, file: !164, line: 514, baseType: !7, size: 1, offset: 417, flags: DIFlagBitField, extraData: i64 416)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd11", scope: !764, file: !164, line: 515, baseType: !7, size: 3, offset: 418, flags: DIFlagBitField, extraData: i64 416)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "drive_geometry", scope: !764, file: !164, line: 521, baseType: !825, size: 2, offset: 421, flags: DIFlagBitField, extraData: i64 416)
!825 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !764, file: !164, line: 516, baseType: !165, size: 8, elements: !826)
!826 = !{!827, !828, !829, !830}
!827 = !DIEnumerator(name: "MYRB_GEOM_128_32", value: 0, isUnsigned: true)
!828 = !DIEnumerator(name: "MYRB_GEOM_255_63", value: 1, isUnsigned: true)
!829 = !DIEnumerator(name: "MYRB_GEOM_RESERVED1", value: 2, isUnsigned: true)
!830 = !DIEnumerator(name: "MYRB_GEOM_RESERVED2", value: 3, isUnsigned: true)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd12", scope: !764, file: !164, line: 522, baseType: !7, size: 1, offset: 423, flags: DIFlagBitField, extraData: i64 416)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd13", scope: !764, file: !164, line: 523, baseType: !833, size: 72, offset: 424)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 72, elements: !834)
!834 = !{!835}
!835 = !DISubrange(count: 9)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !764, file: !164, line: 524, baseType: !320, size: 16, offset: 496)
!837 = !{!838, !839, !840, !841, !842, !843}
!838 = !DIEnumerator(name: "MYRB_OEMID_MYLEX", value: 0, isUnsigned: true)
!839 = !DIEnumerator(name: "MYRB_OEMID_IBM", value: 8, isUnsigned: true)
!840 = !DIEnumerator(name: "MYRB_OEMID_HP", value: 10, isUnsigned: true)
!841 = !DIEnumerator(name: "MYRB_OEMID_DEC", value: 12, isUnsigned: true)
!842 = !DIEnumerator(name: "MYRB_OEMID_SIEMENS", value: 16, isUnsigned: true)
!843 = !DIEnumerator(name: "MYRB_OEMID_INTEL", value: 18, isUnsigned: true)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !845, line: 308, baseType: !7, size: 32, elements: !846)
!845 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!846 = !{!847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860}
!847 = !DIEnumerator(name: "WQ_UNBOUND", value: 2, isUnsigned: true)
!848 = !DIEnumerator(name: "WQ_FREEZABLE", value: 4, isUnsigned: true)
!849 = !DIEnumerator(name: "WQ_MEM_RECLAIM", value: 8, isUnsigned: true)
!850 = !DIEnumerator(name: "WQ_HIGHPRI", value: 16, isUnsigned: true)
!851 = !DIEnumerator(name: "WQ_CPU_INTENSIVE", value: 32, isUnsigned: true)
!852 = !DIEnumerator(name: "WQ_SYSFS", value: 64, isUnsigned: true)
!853 = !DIEnumerator(name: "WQ_POWER_EFFICIENT", value: 128, isUnsigned: true)
!854 = !DIEnumerator(name: "__WQ_DRAINING", value: 65536, isUnsigned: true)
!855 = !DIEnumerator(name: "__WQ_ORDERED", value: 131072, isUnsigned: true)
!856 = !DIEnumerator(name: "__WQ_LEGACY", value: 262144, isUnsigned: true)
!857 = !DIEnumerator(name: "__WQ_ORDERED_EXPLICIT", value: 524288, isUnsigned: true)
!858 = !DIEnumerator(name: "WQ_MAX_ACTIVE", value: 512, isUnsigned: true)
!859 = !DIEnumerator(name: "WQ_MAX_UNBOUND_PER_CPU", value: 4, isUnsigned: true)
!860 = !DIEnumerator(name: "WQ_DFL_ACTIVE", value: 256, isUnsigned: true)
!861 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !845, line: 30, baseType: !862, size: 64, elements: !863)
!862 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!863 = !{!864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892}
!864 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!865 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!866 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!867 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!868 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!869 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!870 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!871 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!872 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!873 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!874 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!875 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!876 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!877 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!878 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!879 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!880 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!881 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!882 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!883 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!884 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!885 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!886 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!887 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!888 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!889 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!890 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!891 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!892 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!893 = !{!894, !896, !898, !900, !902, !903, !7, !905, !973, !268, !6312, !270, !6313, !6314, !1684, !6315, !6316, !6317, !320, !1761, !1545, !913, !6318, !5782, !5809, !862, !6319, !5760, !1405}
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !165)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !897, line: 148, baseType: !7)
!897 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !320)
!902 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_privdata", file: !164, line: 952, size: 192, elements: !907)
!907 = !{!908, !6305, !6311}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "hw_init", scope: !906, file: !164, line: 953, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "myrb_hw_init_t", file: !164, line: 946, baseType: !910)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!913, !914, !5760, !973}
!913 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !916, line: 309, size: 19264, elements: !917)
!916 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!917 = !{!918, !924, !5561, !5562, !5563, !5564, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5592, !5657, !5658, !5659, !5661, !5662, !5663, !5664, !5665, !5666, !5667, !5668, !5669, !5670, !5671, !5672, !5673, !5674, !5675, !5676, !5677, !5678, !5679, !5680, !5683, !5684, !5685, !5686, !5687, !5688, !5689, !5690, !5694, !5695, !5696, !5697, !5698, !5699, !5700, !5701, !5702, !5703, !5704, !5705, !5706, !5707, !5708, !5709, !5710, !5711, !5712, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5733, !5734, !5736, !5737, !5738, !5739, !5741, !5742, !5743, !5746, !5753, !5754, !5755, !5756, !5757, !5758, !5759}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !915, file: !916, line: 310, baseType: !919, size: 128)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !897, line: 178, size: 128, elements: !920)
!920 = !{!921, !923}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !919, file: !897, line: 179, baseType: !922, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !919, file: !897, line: 179, baseType: !922, size: 64, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !915, file: !916, line: 311, baseType: !925, size: 64, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !916, line: 605, size: 8064, elements: !927)
!927 = !{!928, !929, !930, !931, !932, !933, !934, !955, !956, !957, !983, !986, !987, !991, !992, !993, !994, !995, !999, !1000, !1002, !5557, !5558, !5559, !5560}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !926, file: !916, line: 606, baseType: !919, size: 128)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !926, file: !916, line: 607, baseType: !925, size: 64, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !926, file: !916, line: 608, baseType: !919, size: 128, offset: 192)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !926, file: !916, line: 609, baseType: !919, size: 128, offset: 320)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !926, file: !916, line: 610, baseType: !914, size: 64, offset: 448)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !926, file: !916, line: 611, baseType: !919, size: 128, offset: 512)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !926, file: !916, line: 613, baseType: !935, size: 256, offset: 640)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 256, elements: !243)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !938, line: 20, size: 512, elements: !939)
!938 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!939 = !{!940, !946, !947, !950, !951, !952, !953, !954}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !937, file: !938, line: 21, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !897, line: 158, baseType: !942)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !897, line: 153, baseType: !943)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !269, line: 23, baseType: !944)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !271, line: 31, baseType: !945)
!945 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !937, file: !938, line: 22, baseType: !941, size: 64, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !937, file: !938, line: 23, baseType: !948, size: 64, offset: 128)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !637)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !937, file: !938, line: 24, baseType: !902, size: 64, offset: 192)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !937, file: !938, line: 25, baseType: !902, size: 64, offset: 256)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !937, file: !938, line: 26, baseType: !936, size: 64, offset: 320)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !937, file: !938, line: 26, baseType: !936, size: 64, offset: 384)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !937, file: !938, line: 26, baseType: !936, size: 64, offset: 448)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !926, file: !916, line: 614, baseType: !919, size: 128, offset: 896)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !926, file: !916, line: 615, baseType: !937, size: 512, offset: 1024)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !926, file: !916, line: 617, baseType: !958, size: 64, offset: 1536)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !916, line: 731, size: 320, elements: !960)
!960 = !{!961, !965, !969, !974, !979}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !959, file: !916, line: 732, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!913, !925}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !959, file: !916, line: 733, baseType: !966, size: 64, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{null, !925}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !959, file: !916, line: 734, baseType: !970, size: 64, offset: 128)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{!973, !925, !7, !913}
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !959, file: !916, line: 735, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!913, !925, !7, !913, !913, !978}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !959, file: !916, line: 736, baseType: !980, size: 64, offset: 256)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{!913, !925, !7, !913, !913, !268}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !926, file: !916, line: 618, baseType: !984, size: 64, offset: 1600)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !916, line: 537, flags: DIFlagFwdDecl)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !926, file: !916, line: 619, baseType: !973, size: 64, offset: 1664)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !926, file: !916, line: 620, baseType: !988, size: 64, offset: 1728)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !990, line: 123, flags: DIFlagFwdDecl)
!990 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!991 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !926, file: !916, line: 622, baseType: !165, size: 8, offset: 1792)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !926, file: !916, line: 623, baseType: !165, size: 8, offset: 1800)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !926, file: !916, line: 624, baseType: !165, size: 8, offset: 1808)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !926, file: !916, line: 625, baseType: !165, size: 8, offset: 1816)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !926, file: !916, line: 630, baseType: !996, size: 384, offset: 1824)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 384, elements: !997)
!997 = !{!998}
!998 = !DISubrange(count: 48)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !926, file: !916, line: 632, baseType: !320, size: 16, offset: 2208)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !926, file: !916, line: 633, baseType: !1001, size: 16, offset: 2224)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !916, line: 237, baseType: !320)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !926, file: !916, line: 634, baseType: !1003, size: 64, offset: 2240)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !114, line: 461, size: 5568, elements: !1005)
!1005 = !{!1006, !5125, !5126, !5129, !5130, !5180, !5269, !5270, !5271, !5272, !5273, !5282, !5376, !5389, !5392, !5393, !5397, !5399, !5400, !5401, !5405, !5411, !5412, !5415, !5419, !5509, !5510, !5511, !5512, !5513, !5545, !5546, !5547, !5550, !5553, !5554, !5555, !5556}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1004, file: !114, line: 462, baseType: !1007, size: 512)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1008, line: 64, size: 512, elements: !1009)
!1008 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1009 = !{!1010, !1011, !1012, !1014, !1070, !4992, !5119, !5120, !5121, !5122, !5123, !5124}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1007, file: !1008, line: 65, baseType: !948, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1007, file: !1008, line: 66, baseType: !919, size: 128, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1007, file: !1008, line: 67, baseType: !1013, size: 64, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1007, file: !1008, line: 68, baseType: !1015, size: 64, offset: 256)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1008, line: 192, size: 704, elements: !1017)
!1017 = !{!1018, !1019, !1035, !1036}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1016, file: !1008, line: 193, baseType: !919, size: 128)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1016, file: !1008, line: 194, baseType: !1020, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1021, line: 83, baseType: !1022)
!1021 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1021, line: 71, elements: !1023)
!1023 = !{!1024}
!1024 = !DIDerivedType(tag: DW_TAG_member, scope: !1022, file: !1021, line: 72, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1022, file: !1021, line: 72, elements: !1026)
!1026 = !{!1027}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1025, file: !1021, line: 73, baseType: !1028)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1021, line: 20, elements: !1029)
!1029 = !{!1030}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1028, file: !1021, line: 21, baseType: !1031)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1032, line: 25, baseType: !1033)
!1032 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1032, line: 25, elements: !1034)
!1034 = !{}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1016, file: !1008, line: 195, baseType: !1007, size: 512, offset: 128)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1016, file: !1008, line: 196, baseType: !1037, size: 64, offset: 640)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1008, line: 156, size: 192, elements: !1040)
!1040 = !{!1041, !1046, !1051}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1039, file: !1008, line: 157, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!913, !1015, !1013}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1039, file: !1008, line: 158, baseType: !1047, size: 64, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!948, !1015, !1013}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1039, file: !1008, line: 159, baseType: !1052, size: 64, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!913, !1015, !1013, !1056}
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1008, line: 148, size: 20736, elements: !1058)
!1058 = !{!1059, !1062, !1064, !1065, !1069}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1057, file: !1008, line: 149, baseType: !1060, size: 192)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1061, size: 192, elements: !308)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1057, file: !1008, line: 150, baseType: !1063, size: 4096, offset: 192)
!1063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1061, size: 4096, elements: !404)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1057, file: !1008, line: 151, baseType: !913, size: 32, offset: 4288)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1057, file: !1008, line: 152, baseType: !1066, size: 16384, offset: 4320)
!1066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 16384, elements: !1067)
!1067 = !{!1068}
!1068 = !DISubrange(count: 2048)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1057, file: !1008, line: 153, baseType: !913, size: 32, offset: 20704)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1007, file: !1008, line: 69, baseType: !1071, size: 64, offset: 320)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1008, line: 138, size: 448, elements: !1073)
!1073 = !{!1074, !1078, !1105, !1107, !4954, !4982, !4986}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1072, file: !1008, line: 139, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{null, !1013}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1072, file: !1008, line: 140, baseType: !1079, size: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1082, line: 230, size: 128, elements: !1083)
!1082 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1083 = !{!1084, !1098}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1081, file: !1082, line: 231, baseType: !1085, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!1088, !1013, !1092, !1061}
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !897, line: 60, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1090, line: 73, baseType: !1091)
!1090 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1090, line: 15, baseType: !862)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1082, line: 30, size: 128, elements: !1094)
!1094 = !{!1095, !1096}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1093, file: !1082, line: 31, baseType: !948, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1093, file: !1082, line: 32, baseType: !1097, size: 16, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !897, line: 19, baseType: !320)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1081, file: !1082, line: 232, baseType: !1099, size: 64, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!1088, !1013, !1092, !948, !1102}
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !897, line: 55, baseType: !1103)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1090, line: 72, baseType: !1104)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1090, line: 16, baseType: !902)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1072, file: !1008, line: 141, baseType: !1106, size: 64, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1072, file: !1008, line: 142, baseType: !1108, size: 64, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1082, line: 84, size: 320, elements: !1112)
!1112 = !{!1113, !1114, !1118, !4951, !4952}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1111, file: !1082, line: 85, baseType: !948, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1111, file: !1082, line: 86, baseType: !1115, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!1097, !1013, !1092, !913}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1111, file: !1082, line: 88, baseType: !1119, size: 64, offset: 128)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!1097, !1013, !1122, !913}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1082, line: 168, size: 448, elements: !1124)
!1124 = !{!1125, !1126, !1127, !1128, !4946, !4947}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1123, file: !1082, line: 169, baseType: !1093, size: 128)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1123, file: !1082, line: 170, baseType: !1102, size: 64, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1123, file: !1082, line: 171, baseType: !973, size: 64, offset: 192)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1123, file: !1082, line: 172, baseType: !1129, size: 64, offset: 256)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!1088, !1132, !1013, !1122, !1061, !1303, !1102}
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !85, line: 916, size: 1856, align: 32, elements: !1134)
!1134 = !{!1135, !1153, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4929, !4930, !4939, !4940, !4941, !4942, !4943, !4944, !4945}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1133, file: !85, line: 920, baseType: !1136, size: 128)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1133, file: !85, line: 917, size: 128, elements: !1137)
!1137 = !{!1138, !1144}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1136, file: !85, line: 918, baseType: !1139, size: 64)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1140, line: 58, size: 64, elements: !1141)
!1140 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1141 = !{!1142}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1139, file: !1140, line: 59, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1136, file: !85, line: 919, baseType: !1145, size: 128, align: 64)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !897, line: 216, size: 128, align: 64, elements: !1146)
!1146 = !{!1147, !1149}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1145, file: !897, line: 217, baseType: !1148, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1145, file: !897, line: 218, baseType: !1150, size: 64, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{null, !1148}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1133, file: !85, line: 921, baseType: !1154, size: 128, offset: 128)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1155, line: 8, size: 128, elements: !1156)
!1155 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1156 = !{!1157, !1161}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1154, file: !1155, line: 9, baseType: !1158, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1160, line: 18, flags: DIFlagFwdDecl)
!1160 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1154, file: !1155, line: 10, baseType: !1162, size: 64, offset: 64)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1160, line: 89, size: 1536, elements: !1164)
!1164 = !{!1165, !1166, !1176, !1184, !1185, !1200, !4879, !4881, !4893, !4894, !4895, !4896, !4897, !4903, !4904, !4905}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1163, file: !1160, line: 91, baseType: !7, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1163, file: !1160, line: 92, baseType: !1167, size: 32, offset: 32)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1168, line: 277, baseType: !1169)
!1168 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1168, line: 277, size: 32, elements: !1170)
!1170 = !{!1171}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1169, file: !1168, line: 277, baseType: !1172, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1168, line: 70, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1168, line: 65, size: 32, elements: !1174)
!1174 = !{!1175}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1173, file: !1168, line: 66, baseType: !7, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1163, file: !1160, line: 93, baseType: !1177, size: 128, offset: 64)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1178, line: 38, size: 128, elements: !1179)
!1178 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1179 = !{!1180, !1182}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1177, file: !1178, line: 39, baseType: !1181, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1177, file: !1178, line: 39, baseType: !1183, size: 64, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1163, file: !1160, line: 94, baseType: !1162, size: 64, offset: 192)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1163, file: !1160, line: 95, baseType: !1186, size: 128, offset: 256)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1160, line: 47, size: 128, elements: !1187)
!1187 = !{!1188, !1197}
!1188 = !DIDerivedType(tag: DW_TAG_member, scope: !1186, file: !1160, line: 48, baseType: !1189, size: 64)
!1189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1186, file: !1160, line: 48, size: 64, elements: !1190)
!1190 = !{!1191, !1196}
!1191 = !DIDerivedType(tag: DW_TAG_member, scope: !1189, file: !1160, line: 49, baseType: !1192, size: 64)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1189, file: !1160, line: 49, size: 64, elements: !1193)
!1193 = !{!1194, !1195}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1192, file: !1160, line: 50, baseType: !268, size: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1192, file: !1160, line: 50, baseType: !268, size: 32, offset: 32)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1189, file: !1160, line: 52, baseType: !943, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1186, file: !1160, line: 54, baseType: !1198, size: 64, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1163, file: !1160, line: 96, baseType: !1201, size: 64, offset: 384)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !85, line: 610, size: 4224, elements: !1203)
!1203 = !{!1204, !1205, !1206, !1214, !1221, !1222, !1370, !4592, !4593, !4594, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4855, !4863, !4864, !4865, !4875, !4876, !4877, !4878}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1202, file: !85, line: 611, baseType: !1097, size: 16)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1202, file: !85, line: 612, baseType: !320, size: 16, offset: 16)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1202, file: !85, line: 613, baseType: !1207, size: 32, offset: 32)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1208, line: 23, baseType: !1209)
!1208 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1208, line: 21, size: 32, elements: !1210)
!1210 = !{!1211}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1209, file: !1208, line: 22, baseType: !1212, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !897, line: 32, baseType: !1213)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1090, line: 49, baseType: !7)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1202, file: !85, line: 614, baseType: !1215, size: 32, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1208, line: 28, baseType: !1216)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1208, line: 26, size: 32, elements: !1217)
!1217 = !{!1218}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1216, file: !1208, line: 27, baseType: !1219, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !897, line: 33, baseType: !1220)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1090, line: 50, baseType: !7)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1202, file: !85, line: 615, baseType: !7, size: 32, offset: 96)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1202, file: !85, line: 622, baseType: !1223, size: 64, offset: 128)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1225)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !85, line: 1864, size: 1536, align: 512, elements: !1226)
!1226 = !{!1227, !1231, !1244, !1248, !1254, !1258, !1264, !1268, !1272, !1276, !1280, !1281, !1287, !1291, !1317, !1346, !1350, !1356, !1361, !1365, !1366}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1225, file: !85, line: 1865, baseType: !1228, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!1162, !1201, !1162, !7}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1225, file: !85, line: 1866, baseType: !1232, size: 64, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!948, !1162, !1201, !1235}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1237, line: 10, size: 128, elements: !1238)
!1237 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1238 = !{!1239, !1243}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1236, file: !1237, line: 11, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{null, !973}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1236, file: !1237, line: 12, baseType: !973, size: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1225, file: !85, line: 1867, baseType: !1245, size: 64, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!913, !1201, !913}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1225, file: !85, line: 1868, baseType: !1249, size: 64, offset: 192)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!1252, !1201, !913}
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !85, line: 581, flags: DIFlagFwdDecl)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1225, file: !85, line: 1870, baseType: !1255, size: 64, offset: 256)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!913, !1162, !1061, !913}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1225, file: !85, line: 1872, baseType: !1259, size: 64, offset: 320)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!913, !1201, !1162, !1097, !1262}
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !897, line: 30, baseType: !1263)
!1263 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1225, file: !85, line: 1873, baseType: !1265, size: 64, offset: 384)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!913, !1162, !1201, !1162}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1225, file: !85, line: 1874, baseType: !1269, size: 64, offset: 448)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!913, !1201, !1162}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1225, file: !85, line: 1875, baseType: !1273, size: 64, offset: 512)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!913, !1201, !1162, !948}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1225, file: !85, line: 1876, baseType: !1277, size: 64, offset: 576)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!913, !1201, !1162, !1097}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1225, file: !85, line: 1877, baseType: !1269, size: 64, offset: 640)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1225, file: !85, line: 1878, baseType: !1282, size: 64, offset: 704)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!913, !1201, !1162, !1097, !1285}
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !897, line: 16, baseType: !1286)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !897, line: 13, baseType: !268)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1225, file: !85, line: 1879, baseType: !1288, size: 64, offset: 768)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!913, !1201, !1162, !1201, !1162, !7}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1225, file: !85, line: 1881, baseType: !1292, size: 64, offset: 832)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!913, !1162, !1295}
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !85, line: 219, size: 640, elements: !1297)
!1297 = !{!1298, !1299, !1300, !1301, !1302, !1306, !1314, !1315, !1316}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1296, file: !85, line: 220, baseType: !7, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1296, file: !85, line: 221, baseType: !1097, size: 16, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1296, file: !85, line: 222, baseType: !1207, size: 32, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1296, file: !85, line: 223, baseType: !1215, size: 32, offset: 96)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1296, file: !85, line: 224, baseType: !1303, size: 64, offset: 128)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !897, line: 46, baseType: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1090, line: 88, baseType: !1305)
!1305 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1296, file: !85, line: 225, baseType: !1307, size: 128, offset: 192)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1308, line: 13, size: 128, elements: !1309)
!1308 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1309 = !{!1310, !1313}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1307, file: !1308, line: 14, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1308, line: 8, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !271, line: 30, baseType: !1305)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1307, file: !1308, line: 15, baseType: !862, size: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1296, file: !85, line: 226, baseType: !1307, size: 128, offset: 320)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1296, file: !85, line: 227, baseType: !1307, size: 128, offset: 448)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1296, file: !85, line: 234, baseType: !1132, size: 64, offset: 576)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1225, file: !85, line: 1882, baseType: !1318, size: 64, offset: 896)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!913, !1321, !1323, !268, !7}
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1154)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1325, line: 22, size: 1152, elements: !1326)
!1325 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1326 = !{!1327, !1328, !1329, !1330, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1324, file: !1325, line: 23, baseType: !268, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1324, file: !1325, line: 24, baseType: !1097, size: 16, offset: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1324, file: !1325, line: 25, baseType: !7, size: 32, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1324, file: !1325, line: 26, baseType: !1331, size: 32, offset: 96)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !897, line: 104, baseType: !268)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1324, file: !1325, line: 27, baseType: !943, size: 64, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1324, file: !1325, line: 28, baseType: !943, size: 64, offset: 192)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1324, file: !1325, line: 37, baseType: !943, size: 64, offset: 256)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1324, file: !1325, line: 38, baseType: !1285, size: 32, offset: 320)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1324, file: !1325, line: 39, baseType: !1285, size: 32, offset: 352)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1324, file: !1325, line: 40, baseType: !1207, size: 32, offset: 384)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1324, file: !1325, line: 41, baseType: !1215, size: 32, offset: 416)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1324, file: !1325, line: 42, baseType: !1303, size: 64, offset: 448)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1324, file: !1325, line: 43, baseType: !1307, size: 128, offset: 512)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1324, file: !1325, line: 44, baseType: !1307, size: 128, offset: 640)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1324, file: !1325, line: 45, baseType: !1307, size: 128, offset: 768)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1324, file: !1325, line: 46, baseType: !1307, size: 128, offset: 896)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1324, file: !1325, line: 47, baseType: !943, size: 64, offset: 1024)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1324, file: !1325, line: 48, baseType: !943, size: 64, offset: 1088)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1225, file: !85, line: 1883, baseType: !1347, size: 64, offset: 960)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!1088, !1162, !1061, !1102}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1225, file: !85, line: 1884, baseType: !1351, size: 64, offset: 1024)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!913, !1201, !1354, !943, !943}
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !85, line: 50, flags: DIFlagFwdDecl)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1225, file: !85, line: 1886, baseType: !1357, size: 64, offset: 1088)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!913, !1201, !1360, !913}
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1225, file: !85, line: 1887, baseType: !1362, size: 64, offset: 1152)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!913, !1201, !1162, !1132, !7, !1097}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1225, file: !85, line: 1890, baseType: !1277, size: 64, offset: 1216)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1225, file: !85, line: 1891, baseType: !1367, size: 64, offset: 1280)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!913, !1201, !1252, !913}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1202, file: !85, line: 623, baseType: !1371, size: 64, offset: 192)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !85, line: 1416, size: 9472, elements: !1373)
!1373 = !{!1374, !1375, !1376, !1377, !1378, !1379, !1429, !4206, !4288, !4371, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4387, !4391, !4392, !4393, !4394, !4397, !4398, !4399, !4440, !4466, !4467, !4468, !4469, !4470, !4471, !4474, !4475, !4482, !4483, !4484, !4485, !4486, !4545, !4546, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1372, file: !85, line: 1417, baseType: !919, size: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1372, file: !85, line: 1418, baseType: !1285, size: 32, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1372, file: !85, line: 1419, baseType: !165, size: 8, offset: 160)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1372, file: !85, line: 1420, baseType: !902, size: 64, offset: 192)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1372, file: !85, line: 1421, baseType: !1303, size: 64, offset: 256)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1372, file: !85, line: 1422, baseType: !1380, size: 64, offset: 320)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !85, line: 2228, size: 576, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1392, !1396, !1400, !1404, !1408, !1409, !1419, !1422, !1423, !1424, !1426, !1427, !1428}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1381, file: !85, line: 2229, baseType: !948, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1381, file: !85, line: 2230, baseType: !913, size: 32, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1381, file: !85, line: 2238, baseType: !1386, size: 64, offset: 128)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!913, !1389}
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1391, line: 28, flags: DIFlagFwdDecl)
!1391 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1381, file: !85, line: 2239, baseType: !1393, size: 64, offset: 192)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1395)
!1395 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !85, line: 70, flags: DIFlagFwdDecl)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1381, file: !85, line: 2240, baseType: !1397, size: 64, offset: 256)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{!1162, !1380, !913, !948, !973}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1381, file: !85, line: 2242, baseType: !1401, size: 64, offset: 320)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{null, !1371}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1381, file: !85, line: 2243, baseType: !1405, size: 64, offset: 384)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1407, line: 76, flags: DIFlagFwdDecl)
!1407 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1381, file: !85, line: 2244, baseType: !1380, size: 64, offset: 448)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1381, file: !85, line: 2245, baseType: !1410, size: 64, offset: 512)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !897, line: 182, size: 64, elements: !1411)
!1411 = !{!1412}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1410, file: !897, line: 183, baseType: !1413, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !897, line: 186, size: 128, elements: !1415)
!1415 = !{!1416, !1417}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1414, file: !897, line: 187, baseType: !1413, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1414, file: !897, line: 187, baseType: !1418, size: 64, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1381, file: !85, line: 2247, baseType: !1420, offset: 576)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1421, line: 187, elements: !1034)
!1421 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1381, file: !85, line: 2248, baseType: !1420, offset: 576)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1381, file: !85, line: 2249, baseType: !1420, offset: 576)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1381, file: !85, line: 2250, baseType: !1425, offset: 576)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1420, elements: !308)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1381, file: !85, line: 2252, baseType: !1420, offset: 576)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1381, file: !85, line: 2253, baseType: !1420, offset: 576)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1381, file: !85, line: 2254, baseType: !1420, offset: 576)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1372, file: !85, line: 1423, baseType: !1430, size: 64, offset: 384)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !85, line: 1935, size: 1472, elements: !1433)
!1433 = !{!1434, !1438, !1442, !1443, !1447, !1453, !1457, !1458, !1459, !1463, !1467, !1468, !1469, !1470, !1476, !1481, !1482, !1538, !1539, !1540, !1541, !4190, !4205}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1432, file: !85, line: 1936, baseType: !1435, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{!1201, !1371}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1432, file: !85, line: 1937, baseType: !1439, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{null, !1201}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1432, file: !85, line: 1938, baseType: !1439, size: 64, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1432, file: !85, line: 1940, baseType: !1444, size: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{null, !1201, !913}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1432, file: !85, line: 1941, baseType: !1448, size: 64, offset: 256)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!913, !1201, !1451}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1432, file: !85, line: 1942, baseType: !1454, size: 64, offset: 320)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!913, !1201}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1432, file: !85, line: 1943, baseType: !1439, size: 64, offset: 384)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1432, file: !85, line: 1944, baseType: !1401, size: 64, offset: 448)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1432, file: !85, line: 1945, baseType: !1460, size: 64, offset: 512)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!913, !1371, !913}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1432, file: !85, line: 1946, baseType: !1464, size: 64, offset: 576)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!913, !1371}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1432, file: !85, line: 1947, baseType: !1464, size: 64, offset: 640)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1432, file: !85, line: 1948, baseType: !1464, size: 64, offset: 704)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1432, file: !85, line: 1949, baseType: !1464, size: 64, offset: 768)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1432, file: !85, line: 1950, baseType: !1471, size: 64, offset: 832)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!913, !1162, !1474}
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !85, line: 57, flags: DIFlagFwdDecl)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1432, file: !85, line: 1951, baseType: !1477, size: 64, offset: 896)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!913, !1371, !1480, !1061}
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1432, file: !85, line: 1952, baseType: !1401, size: 64, offset: 960)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1432, file: !85, line: 1954, baseType: !1483, size: 64, offset: 1024)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!913, !1486, !1162}
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1488, line: 16, size: 896, elements: !1489)
!1488 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1511, !1533, !1534, !1537}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1487, file: !1488, line: 17, baseType: !1061, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1487, file: !1488, line: 18, baseType: !1102, size: 64, offset: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1487, file: !1488, line: 19, baseType: !1102, size: 64, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1487, file: !1488, line: 20, baseType: !1102, size: 64, offset: 192)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1487, file: !1488, line: 21, baseType: !1102, size: 64, offset: 256)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1487, file: !1488, line: 22, baseType: !1303, size: 64, offset: 320)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1487, file: !1488, line: 23, baseType: !1303, size: 64, offset: 384)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1487, file: !1488, line: 24, baseType: !1498, size: 192, offset: 448)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1499, line: 53, size: 192, elements: !1500)
!1499 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1500 = !{!1501, !1509, !1510}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1498, file: !1499, line: 54, baseType: !1502, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1503, line: 13, baseType: !1504)
!1503 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !897, line: 175, baseType: !1505)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !897, line: 173, size: 64, elements: !1506)
!1506 = !{!1507}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1505, file: !897, line: 174, baseType: !1508, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !269, line: 22, baseType: !1312)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1498, file: !1499, line: 55, baseType: !1020, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1498, file: !1499, line: 59, baseType: !919, size: 128, offset: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1487, file: !1488, line: 25, baseType: !1512, size: 64, offset: 640)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1488, line: 31, size: 256, elements: !1515)
!1515 = !{!1516, !1521, !1525, !1529}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1514, file: !1488, line: 32, baseType: !1517, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!973, !1486, !1520}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1514, file: !1488, line: 33, baseType: !1522, size: 64, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{null, !1486, !973}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1514, file: !1488, line: 34, baseType: !1526, size: 64, offset: 128)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!973, !1486, !973, !1520}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1514, file: !1488, line: 35, baseType: !1530, size: 64, offset: 192)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!913, !1486, !973}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1487, file: !1488, line: 26, baseType: !913, size: 32, offset: 704)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1487, file: !1488, line: 27, baseType: !1535, size: 64, offset: 768)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1133)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1487, file: !1488, line: 28, baseType: !973, size: 64, offset: 832)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1432, file: !85, line: 1955, baseType: !1483, size: 64, offset: 1088)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1432, file: !85, line: 1956, baseType: !1483, size: 64, offset: 1152)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1432, file: !85, line: 1957, baseType: !1483, size: 64, offset: 1216)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1432, file: !85, line: 1963, baseType: !1542, size: 64, offset: 1280)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!913, !1371, !1545, !896}
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1547, line: 68, size: 512, align: 128, elements: !1548)
!1547 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1548 = !{!1549, !1550, !4182, !4189}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1546, file: !1547, line: 69, baseType: !902, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, scope: !1546, file: !1547, line: 77, baseType: !1551, size: 320, offset: 64)
!1551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1546, file: !1547, line: 77, size: 320, elements: !1552)
!1552 = !{!1553, !1757, !1762, !1790, !1798, !1804, !4133, !4181}
!1553 = !DIDerivedType(tag: DW_TAG_member, scope: !1551, file: !1547, line: 78, baseType: !1554, size: 320)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1551, file: !1547, line: 78, size: 320, elements: !1555)
!1555 = !{!1556, !1557, !1755, !1756}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1554, file: !1547, line: 84, baseType: !919, size: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1554, file: !1547, line: 86, baseType: !1558, size: 64, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !85, line: 451, size: 1216, align: 64, elements: !1560)
!1560 = !{!1561, !1562, !1569, !1570, !1575, !1590, !1599, !1600, !1601, !1602, !1748, !1749, !1752, !1753, !1754}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1559, file: !85, line: 452, baseType: !1201, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1559, file: !85, line: 453, baseType: !1563, size: 128, offset: 64)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1564, line: 292, size: 128, elements: !1565)
!1564 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1565 = !{!1566, !1567, !1568}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1563, file: !1564, line: 293, baseType: !1020)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1563, file: !1564, line: 295, baseType: !896, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1563, file: !1564, line: 296, baseType: !973, size: 64, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1559, file: !85, line: 454, baseType: !896, size: 32, offset: 192)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1559, file: !85, line: 455, baseType: !1571, size: 32, offset: 224)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !897, line: 168, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !897, line: 166, size: 32, elements: !1573)
!1573 = !{!1574}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1572, file: !897, line: 167, baseType: !913, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1559, file: !85, line: 460, baseType: !1576, size: 128, offset: 256)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1577, line: 125, size: 128, elements: !1578)
!1577 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1578 = !{!1579, !1589}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1576, file: !1577, line: 126, baseType: !1580, size: 64)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1577, line: 31, size: 64, elements: !1581)
!1581 = !{!1582}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1580, file: !1577, line: 32, baseType: !1583, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1577, line: 24, size: 192, align: 64, elements: !1585)
!1585 = !{!1586, !1587, !1588}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1584, file: !1577, line: 25, baseType: !902, size: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1584, file: !1577, line: 26, baseType: !1583, size: 64, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1584, file: !1577, line: 27, baseType: !1583, size: 64, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1576, file: !1577, line: 127, baseType: !1583, size: 64, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1559, file: !85, line: 461, baseType: !1591, size: 256, offset: 384)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1592, line: 35, size: 256, elements: !1593)
!1592 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1593 = !{!1594, !1595, !1596, !1598}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1591, file: !1592, line: 36, baseType: !1502, size: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1591, file: !1592, line: 42, baseType: !1502, size: 64, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1591, file: !1592, line: 46, baseType: !1597, offset: 128)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1021, line: 29, baseType: !1028)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1591, file: !1592, line: 47, baseType: !919, size: 128, offset: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1559, file: !85, line: 462, baseType: !902, size: 64, offset: 640)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1559, file: !85, line: 463, baseType: !902, size: 64, offset: 704)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1559, file: !85, line: 464, baseType: !902, size: 64, offset: 768)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1559, file: !85, line: 465, baseType: !1603, size: 64, offset: 832)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !85, line: 367, size: 1408, elements: !1606)
!1606 = !{!1607, !1611, !1615, !1619, !1623, !1627, !1640, !1646, !1650, !1655, !1659, !1663, !1667, !1712, !1716, !1722, !1723, !1724, !1728, !1733, !1737, !1744}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1605, file: !85, line: 368, baseType: !1608, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!913, !1545, !1451}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1605, file: !85, line: 369, baseType: !1612, size: 64, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!913, !1132, !1545}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1605, file: !85, line: 372, baseType: !1616, size: 64, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!913, !1558, !1451}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1605, file: !85, line: 375, baseType: !1620, size: 64, offset: 192)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{!913, !1545}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1605, file: !85, line: 381, baseType: !1624, size: 64, offset: 256)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!913, !1132, !1558, !922, !7}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1605, file: !85, line: 383, baseType: !1628, size: 64, offset: 320)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{null, !1631}
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1633, line: 795, size: 256, elements: !1634)
!1633 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1634 = !{!1635, !1636, !1637, !1638, !1639}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1632, file: !1633, line: 796, baseType: !1132, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1632, file: !1633, line: 797, baseType: !1558, size: 64, offset: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !1632, file: !1633, line: 799, baseType: !902, size: 64, offset: 128)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !1632, file: !1633, line: 800, baseType: !7, size: 32, offset: 192)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !1632, file: !1633, line: 801, baseType: !7, size: 32, offset: 224)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1605, file: !85, line: 385, baseType: !1641, size: 64, offset: 384)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{!913, !1132, !1558, !1303, !7, !7, !1644, !1645}
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1605, file: !85, line: 388, baseType: !1647, size: 64, offset: 448)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{!913, !1132, !1558, !1303, !7, !7, !1545, !973}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1605, file: !85, line: 393, baseType: !1651, size: 64, offset: 512)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!1654, !1558, !1654}
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !897, line: 125, baseType: !943)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1605, file: !85, line: 394, baseType: !1656, size: 64, offset: 576)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{null, !1545, !7, !7}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1605, file: !85, line: 395, baseType: !1660, size: 64, offset: 640)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{!913, !1545, !896}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1605, file: !85, line: 396, baseType: !1664, size: 64, offset: 704)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{null, !1545}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1605, file: !85, line: 397, baseType: !1668, size: 64, offset: 768)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{!1088, !1671, !1710}
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !85, line: 320, size: 384, elements: !1673)
!1673 = !{!1674, !1675, !1676, !1680, !1681, !1682, !1685, !1686}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1672, file: !85, line: 321, baseType: !1132, size: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1672, file: !85, line: 326, baseType: !1303, size: 64, offset: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1672, file: !85, line: 327, baseType: !1677, size: 64, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{null, !1671, !862, !862}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1672, file: !85, line: 328, baseType: !973, size: 64, offset: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1672, file: !85, line: 329, baseType: !913, size: 32, offset: 256)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1672, file: !85, line: 330, baseType: !1683, size: 16, offset: 288)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !269, line: 19, baseType: !1684)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !271, line: 24, baseType: !320)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1672, file: !85, line: 331, baseType: !1683, size: 16, offset: 304)
!1686 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !85, line: 332, baseType: !1687, size: 64, offset: 320)
!1687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !85, line: 332, size: 64, elements: !1688)
!1688 = !{!1689, !1690}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1687, file: !85, line: 333, baseType: !7, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1687, file: !85, line: 334, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1633, line: 569, size: 448, elements: !1693)
!1693 = !{!1694, !1695, !1696}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1692, file: !1633, line: 570, baseType: !1545, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1692, file: !1633, line: 571, baseType: !913, size: 32, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1692, file: !1633, line: 572, baseType: !1697, size: 320, offset: 128)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1698, line: 14, baseType: !1699)
!1698 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1698, line: 29, size: 320, elements: !1700)
!1700 = !{!1701, !1702, !1703, !1709}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1699, file: !1698, line: 30, baseType: !7, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1699, file: !1698, line: 31, baseType: !973, size: 64, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1699, file: !1698, line: 32, baseType: !1704, size: 64, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1698, line: 16, baseType: !1705)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!913, !1708, !7, !913, !973}
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1699, file: !1698, line: 33, baseType: !919, size: 128, offset: 192)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !85, line: 64, flags: DIFlagFwdDecl)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1605, file: !85, line: 402, baseType: !1713, size: 64, offset: 832)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!913, !1558, !1545, !1545, !5}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1605, file: !85, line: 404, baseType: !1717, size: 64, offset: 896)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!1262, !1545, !1720}
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1721, line: 305, baseType: !7)
!1721 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1605, file: !85, line: 405, baseType: !1664, size: 64, offset: 960)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1605, file: !85, line: 406, baseType: !1620, size: 64, offset: 1024)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1605, file: !85, line: 407, baseType: !1725, size: 64, offset: 1088)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!913, !1545, !902, !902}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1605, file: !85, line: 409, baseType: !1729, size: 64, offset: 1152)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{null, !1545, !1732, !1732}
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1605, file: !85, line: 410, baseType: !1734, size: 64, offset: 1216)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{!913, !1558, !1545}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1605, file: !85, line: 413, baseType: !1738, size: 64, offset: 1280)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!913, !1741, !1132, !1743}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !85, line: 61, flags: DIFlagFwdDecl)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1605, file: !85, line: 415, baseType: !1745, size: 64, offset: 1344)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{null, !1132}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1559, file: !85, line: 466, baseType: !902, size: 64, offset: 896)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1559, file: !85, line: 467, baseType: !1750, size: 32, offset: 960)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1751, line: 8, baseType: !268)
!1751 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1559, file: !85, line: 468, baseType: !1020, offset: 992)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1559, file: !85, line: 469, baseType: !919, size: 128, offset: 1024)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1559, file: !85, line: 470, baseType: !973, size: 64, offset: 1152)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1554, file: !1547, line: 87, baseType: !902, size: 64, offset: 192)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1554, file: !1547, line: 94, baseType: !902, size: 64, offset: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, scope: !1551, file: !1547, line: 96, baseType: !1758, size: 64)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1551, file: !1547, line: 96, size: 64, elements: !1759)
!1759 = !{!1760}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1758, file: !1547, line: 101, baseType: !1761, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !897, line: 143, baseType: !943)
!1762 = !DIDerivedType(tag: DW_TAG_member, scope: !1551, file: !1547, line: 103, baseType: !1763, size: 320)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1551, file: !1547, line: 103, size: 320, elements: !1764)
!1764 = !{!1765, !1775, !1778, !1779}
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1763, file: !1547, line: 104, baseType: !1766, size: 128)
!1766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1763, file: !1547, line: 104, size: 128, elements: !1767)
!1767 = !{!1768, !1769}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1766, file: !1547, line: 105, baseType: !919, size: 128)
!1769 = !DIDerivedType(tag: DW_TAG_member, scope: !1766, file: !1547, line: 106, baseType: !1770, size: 128)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1766, file: !1547, line: 106, size: 128, elements: !1771)
!1771 = !{!1772, !1773, !1774}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1770, file: !1547, line: 107, baseType: !1545, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1770, file: !1547, line: 109, baseType: !913, size: 32, offset: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1770, file: !1547, line: 110, baseType: !913, size: 32, offset: 96)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1763, file: !1547, line: 117, baseType: !1776, size: 64, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1547, line: 117, flags: DIFlagFwdDecl)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1763, file: !1547, line: 119, baseType: !973, size: 64, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_member, scope: !1763, file: !1547, line: 120, baseType: !1780, size: 64, offset: 256)
!1780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1763, file: !1547, line: 120, size: 64, elements: !1781)
!1781 = !{!1782, !1783, !1784}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1780, file: !1547, line: 121, baseType: !973, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1780, file: !1547, line: 122, baseType: !902, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !1547, line: 123, baseType: !1785, size: 32)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1780, file: !1547, line: 123, size: 32, elements: !1786)
!1786 = !{!1787, !1788, !1789}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1785, file: !1547, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1785, file: !1547, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1785, file: !1547, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1790 = !DIDerivedType(tag: DW_TAG_member, scope: !1551, file: !1547, line: 130, baseType: !1791, size: 192)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1551, file: !1547, line: 130, size: 192, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796, !1797}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1791, file: !1547, line: 131, baseType: !902, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1791, file: !1547, line: 134, baseType: !165, size: 8, offset: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1791, file: !1547, line: 135, baseType: !165, size: 8, offset: 72)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1791, file: !1547, line: 136, baseType: !1571, size: 32, offset: 96)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1791, file: !1547, line: 137, baseType: !7, size: 32, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, scope: !1551, file: !1547, line: 139, baseType: !1799, size: 256)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1551, file: !1547, line: 139, size: 256, elements: !1800)
!1800 = !{!1801, !1802, !1803}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1799, file: !1547, line: 140, baseType: !902, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1799, file: !1547, line: 141, baseType: !1571, size: 32, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1799, file: !1547, line: 143, baseType: !919, size: 128, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, scope: !1551, file: !1547, line: 145, baseType: !1805, size: 256)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1551, file: !1547, line: 145, size: 256, elements: !1806)
!1806 = !{!1807, !1808, !1811, !1812, !4132}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1805, file: !1547, line: 146, baseType: !902, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1805, file: !1547, line: 147, baseType: !1809, size: 64, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1810, line: 509, baseType: !1545)
!1810 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1805, file: !1547, line: 148, baseType: !902, size: 64, offset: 128)
!1812 = !DIDerivedType(tag: DW_TAG_member, scope: !1805, file: !1547, line: 149, baseType: !1813, size: 64, offset: 192)
!1813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1805, file: !1547, line: 149, size: 64, elements: !1814)
!1814 = !{!1815, !4131}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1813, file: !1547, line: 150, baseType: !1816, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1547, line: 388, size: 7296, elements: !1818)
!1818 = !{!1819, !4129}
!1819 = !DIDerivedType(tag: DW_TAG_member, scope: !1817, file: !1547, line: 389, baseType: !1820, size: 7296)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1817, file: !1547, line: 389, size: 7296, elements: !1821)
!1821 = !{!1822, !1940, !1941, !1942, !1946, !1947, !1948, !1949, !1950, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1991, !1997, !2000, !2040, !2041, !4113, !4114, !4117, !4118, !4119, !4122, !4123, !4124, !4127, !4128}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1820, file: !1547, line: 390, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1547, line: 305, size: 1472, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1840, !1841, !1846, !1847, !1850, !1934, !1935, !1936, !1937, !1938}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1824, file: !1547, line: 308, baseType: !902, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1824, file: !1547, line: 309, baseType: !902, size: 64, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1824, file: !1547, line: 313, baseType: !1823, size: 64, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1824, file: !1547, line: 313, baseType: !1823, size: 64, offset: 192)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1824, file: !1547, line: 315, baseType: !1584, size: 192, align: 64, offset: 256)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1824, file: !1547, line: 323, baseType: !902, size: 64, offset: 448)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1824, file: !1547, line: 327, baseType: !1816, size: 64, offset: 512)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1824, file: !1547, line: 333, baseType: !1834, size: 64, offset: 576)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1810, line: 284, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1810, line: 284, size: 64, elements: !1836)
!1836 = !{!1837}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1835, file: !1810, line: 284, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1839, line: 19, baseType: !902)
!1839 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1824, file: !1547, line: 334, baseType: !902, size: 64, offset: 640)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1824, file: !1547, line: 343, baseType: !1842, size: 256, offset: 704)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1824, file: !1547, line: 340, size: 256, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1842, file: !1547, line: 341, baseType: !1584, size: 192, align: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1842, file: !1547, line: 342, baseType: !902, size: 64, offset: 192)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1824, file: !1547, line: 351, baseType: !919, size: 128, offset: 960)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1824, file: !1547, line: 353, baseType: !1848, size: 64, offset: 1088)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1547, line: 353, flags: DIFlagFwdDecl)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1824, file: !1547, line: 356, baseType: !1851, size: 64, offset: 1152)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1854)
!1854 = !{!1855, !1859, !1860, !1864, !1868, !1908, !1912, !1916, !1920, !1921, !1922, !1926, !1930}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1853, file: !14, line: 558, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{null, !1823}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1853, file: !14, line: 559, baseType: !1856, size: 64, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1853, file: !14, line: 560, baseType: !1861, size: 64, offset: 128)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{!913, !1823, !902}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1853, file: !14, line: 561, baseType: !1865, size: 64, offset: 192)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!913, !1823}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1853, file: !14, line: 562, baseType: !1869, size: 64, offset: 256)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!1872, !1873}
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1547, line: 682, baseType: !7)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879, !1880, !1881, !1888, !1895, !1901, !1902, !1903, !1905, !1907}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1874, file: !14, line: 509, baseType: !1823, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1874, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1874, file: !14, line: 511, baseType: !896, size: 32, offset: 96)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1874, file: !14, line: 512, baseType: !902, size: 64, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1874, file: !14, line: 513, baseType: !902, size: 64, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1874, file: !14, line: 514, baseType: !1882, size: 64, offset: 256)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1810, line: 385, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1810, line: 385, size: 64, elements: !1885)
!1885 = !{!1886}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1884, file: !1810, line: 385, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1839, line: 15, baseType: !902)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1874, file: !14, line: 516, baseType: !1889, size: 64, offset: 320)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1810, line: 359, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1810, line: 359, size: 64, elements: !1892)
!1892 = !{!1893}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1891, file: !1810, line: 359, baseType: !1894, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1839, line: 16, baseType: !902)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1874, file: !14, line: 519, baseType: !1896, size: 64, offset: 384)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1839, line: 21, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1839, line: 21, size: 64, elements: !1898)
!1898 = !{!1899}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1897, file: !1839, line: 21, baseType: !1900, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1839, line: 14, baseType: !902)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1874, file: !14, line: 521, baseType: !1545, size: 64, offset: 448)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1874, file: !14, line: 522, baseType: !1545, size: 64, offset: 512)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1874, file: !14, line: 528, baseType: !1904, size: 64, offset: 576)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1874, file: !14, line: 532, baseType: !1906, size: 64, offset: 640)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1874, file: !14, line: 536, baseType: !1809, size: 64, offset: 704)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1853, file: !14, line: 563, baseType: !1909, size: 64, offset: 320)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{!1872, !1873, !13}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1853, file: !14, line: 565, baseType: !1913, size: 64, offset: 384)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{null, !1873, !902, !902}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1853, file: !14, line: 567, baseType: !1917, size: 64, offset: 448)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DISubroutineType(types: !1919)
!1919 = !{!902, !1823}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1853, file: !14, line: 571, baseType: !1869, size: 64, offset: 512)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1853, file: !14, line: 574, baseType: !1869, size: 64, offset: 576)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1853, file: !14, line: 579, baseType: !1923, size: 64, offset: 640)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{!913, !1823, !902, !973, !913, !913}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1853, file: !14, line: 585, baseType: !1927, size: 64, offset: 704)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!948, !1823}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1853, file: !14, line: 615, baseType: !1931, size: 64, offset: 768)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{!1545, !1823, !902}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1824, file: !1547, line: 359, baseType: !902, size: 64, offset: 1216)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1824, file: !1547, line: 361, baseType: !1132, size: 64, offset: 1280)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1824, file: !1547, line: 362, baseType: !973, size: 64, offset: 1344)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1824, file: !1547, line: 365, baseType: !1502, size: 64, offset: 1408)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1824, file: !1547, line: 373, baseType: !1939, offset: 1472)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1547, line: 296, elements: !1034)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1820, file: !1547, line: 391, baseType: !1580, size: 64, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1820, file: !1547, line: 392, baseType: !943, size: 64, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1820, file: !1547, line: 394, baseType: !1943, size: 64, offset: 192)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!902, !1132, !902, !902, !902, !902}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1820, file: !1547, line: 398, baseType: !902, size: 64, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1820, file: !1547, line: 399, baseType: !902, size: 64, offset: 320)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1820, file: !1547, line: 405, baseType: !902, size: 64, offset: 384)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1820, file: !1547, line: 406, baseType: !902, size: 64, offset: 448)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1820, file: !1547, line: 407, baseType: !1951, size: 64, offset: 512)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1810, line: 286, baseType: !1953)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1810, line: 286, size: 64, elements: !1954)
!1954 = !{!1955}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1953, file: !1810, line: 286, baseType: !1956, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1839, line: 18, baseType: !902)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1820, file: !1547, line: 416, baseType: !1571, size: 32, offset: 576)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1820, file: !1547, line: 428, baseType: !1571, size: 32, offset: 608)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1820, file: !1547, line: 437, baseType: !1571, size: 32, offset: 640)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1820, file: !1547, line: 447, baseType: !1571, size: 32, offset: 672)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1820, file: !1547, line: 450, baseType: !1502, size: 64, offset: 704)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1820, file: !1547, line: 452, baseType: !913, size: 32, offset: 768)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1820, file: !1547, line: 454, baseType: !1020, offset: 800)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1820, file: !1547, line: 457, baseType: !1591, size: 256, offset: 832)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1820, file: !1547, line: 459, baseType: !919, size: 128, offset: 1088)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1820, file: !1547, line: 466, baseType: !902, size: 64, offset: 1216)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1820, file: !1547, line: 467, baseType: !902, size: 64, offset: 1280)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1820, file: !1547, line: 469, baseType: !902, size: 64, offset: 1344)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1820, file: !1547, line: 470, baseType: !902, size: 64, offset: 1408)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1820, file: !1547, line: 471, baseType: !1504, size: 64, offset: 1472)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1820, file: !1547, line: 472, baseType: !902, size: 64, offset: 1536)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1820, file: !1547, line: 473, baseType: !902, size: 64, offset: 1600)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1820, file: !1547, line: 474, baseType: !902, size: 64, offset: 1664)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1820, file: !1547, line: 475, baseType: !902, size: 64, offset: 1728)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1820, file: !1547, line: 477, baseType: !1020, offset: 1792)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1820, file: !1547, line: 478, baseType: !902, size: 64, offset: 1792)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1820, file: !1547, line: 478, baseType: !902, size: 64, offset: 1856)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1820, file: !1547, line: 478, baseType: !902, size: 64, offset: 1920)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1820, file: !1547, line: 478, baseType: !902, size: 64, offset: 1984)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1820, file: !1547, line: 479, baseType: !902, size: 64, offset: 2048)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1820, file: !1547, line: 479, baseType: !902, size: 64, offset: 2112)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1820, file: !1547, line: 479, baseType: !902, size: 64, offset: 2176)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1820, file: !1547, line: 480, baseType: !902, size: 64, offset: 2240)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1820, file: !1547, line: 480, baseType: !902, size: 64, offset: 2304)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1820, file: !1547, line: 480, baseType: !902, size: 64, offset: 2368)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1820, file: !1547, line: 480, baseType: !902, size: 64, offset: 2432)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1820, file: !1547, line: 482, baseType: !1988, size: 2816, offset: 2496)
!1988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 2816, elements: !1989)
!1989 = !{!1990}
!1990 = !DISubrange(count: 44)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1820, file: !1547, line: 488, baseType: !1992, size: 256, offset: 5312)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1993, line: 60, size: 256, elements: !1994)
!1993 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1994 = !{!1995}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1992, file: !1993, line: 61, baseType: !1996, size: 256)
!1996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1502, size: 256, elements: !243)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1820, file: !1547, line: 490, baseType: !1998, size: 64, offset: 5568)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1547, line: 490, flags: DIFlagFwdDecl)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1820, file: !1547, line: 493, baseType: !2001, size: 896, offset: 5632)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2002, line: 53, baseType: !2003)
!2002 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2002, line: 13, size: 896, elements: !2004)
!2004 = !{!2005, !2006, !2007, !2008, !2011, !2012, !2013, !2014, !2034, !2035, !2036}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2003, file: !2002, line: 18, baseType: !943, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2003, file: !2002, line: 28, baseType: !1504, size: 64, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2003, file: !2002, line: 31, baseType: !1591, size: 256, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2003, file: !2002, line: 32, baseType: !2009, size: 64, offset: 384)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2002, line: 32, flags: DIFlagFwdDecl)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2003, file: !2002, line: 37, baseType: !320, size: 16, offset: 448)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2003, file: !2002, line: 40, baseType: !1498, size: 192, offset: 512)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2003, file: !2002, line: 41, baseType: !973, size: 64, offset: 704)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2003, file: !2002, line: 42, baseType: !2015, size: 64, offset: 768)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2017)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2018, line: 13, size: 896, elements: !2019)
!2018 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2019 = !{!2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2017, file: !2018, line: 14, baseType: !973, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2017, file: !2018, line: 15, baseType: !902, size: 64, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2017, file: !2018, line: 17, baseType: !902, size: 64, offset: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2017, file: !2018, line: 17, baseType: !902, size: 64, offset: 192)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2017, file: !2018, line: 19, baseType: !862, size: 64, offset: 256)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2017, file: !2018, line: 21, baseType: !862, size: 64, offset: 320)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2017, file: !2018, line: 22, baseType: !862, size: 64, offset: 384)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2017, file: !2018, line: 23, baseType: !862, size: 64, offset: 448)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2017, file: !2018, line: 24, baseType: !862, size: 64, offset: 512)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2017, file: !2018, line: 25, baseType: !862, size: 64, offset: 576)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2017, file: !2018, line: 26, baseType: !862, size: 64, offset: 640)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2017, file: !2018, line: 27, baseType: !862, size: 64, offset: 704)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2017, file: !2018, line: 28, baseType: !862, size: 64, offset: 768)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2017, file: !2018, line: 29, baseType: !862, size: 64, offset: 832)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2003, file: !2002, line: 44, baseType: !1571, size: 32, offset: 832)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2003, file: !2002, line: 50, baseType: !1683, size: 16, offset: 864)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2003, file: !2002, line: 51, baseType: !2037, size: 16, offset: 880)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !269, line: 18, baseType: !2038)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !271, line: 23, baseType: !2039)
!2039 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1820, file: !1547, line: 495, baseType: !902, size: 64, offset: 6528)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1820, file: !1547, line: 497, baseType: !2042, size: 64, offset: 6592)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1547, line: 381, size: 384, elements: !2044)
!2044 = !{!2045, !2046, !4112}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2043, file: !1547, line: 382, baseType: !1571, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2043, file: !1547, line: 383, baseType: !2047, size: 128, offset: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1547, line: 376, size: 128, elements: !2048)
!2048 = !{!2049, !4110}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2047, file: !1547, line: 377, baseType: !2050, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2052, line: 640, size: 48640, elements: !2053)
!2052 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2053 = !{!2054, !2060, !2062, !2063, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2080, !2098, !2109, !2192, !2193, !2194, !2205, !2206, !2208, !2209, !2210, !2211, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2289, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2326, !2328, !2329, !2330, !2342, !2343, !2344, !2345, !2346, !2347, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2371, !2376, !2556, !2557, !2558, !2559, !2561, !2564, !2567, !2570, !2573, !2577, !2678, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2724, !2725, !2726, !2727, !2728, !2733, !2734, !2735, !2738, !2739, !3759, !3768, !3771, !3772, !3773, !3776, !3777, !3856, !3857, !3860, !3861, !3864, !3865, !3866, !3870, !3871, !3872, !3885, !3886, !3887, !3897, !3902, !3905, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2051, file: !2052, line: 646, baseType: !2055, size: 128)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2056, line: 56, size: 128, elements: !2057)
!2056 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2055, file: !2056, line: 57, baseType: !902, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2055, file: !2056, line: 58, baseType: !268, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2051, file: !2052, line: 649, baseType: !2061, size: 64, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !862)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2051, file: !2052, line: 657, baseType: !973, size: 64, offset: 192)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2051, file: !2052, line: 658, baseType: !2064, size: 32, offset: 256)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !2065, line: 113, baseType: !2066)
!2065 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !2065, line: 111, size: 32, elements: !2067)
!2067 = !{!2068}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !2066, file: !2065, line: 112, baseType: !1571, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2051, file: !2052, line: 660, baseType: !7, size: 32, offset: 288)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2051, file: !2052, line: 661, baseType: !7, size: 32, offset: 320)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2051, file: !2052, line: 684, baseType: !913, size: 32, offset: 352)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2051, file: !2052, line: 686, baseType: !913, size: 32, offset: 384)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2051, file: !2052, line: 687, baseType: !913, size: 32, offset: 416)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2051, file: !2052, line: 688, baseType: !913, size: 32, offset: 448)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2051, file: !2052, line: 689, baseType: !7, size: 32, offset: 480)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2051, file: !2052, line: 691, baseType: !2077, size: 64, offset: 512)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2079)
!2079 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2052, line: 691, flags: DIFlagFwdDecl)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2051, file: !2052, line: 692, baseType: !2081, size: 832, offset: 576)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2052, line: 451, size: 832, elements: !2082)
!2082 = !{!2083, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2081, file: !2052, line: 453, baseType: !2084, size: 128)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2052, line: 325, size: 128, elements: !2085)
!2085 = !{!2086, !2087}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2084, file: !2052, line: 326, baseType: !902, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2084, file: !2052, line: 327, baseType: !268, size: 32, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2081, file: !2052, line: 454, baseType: !1584, size: 192, align: 64, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2081, file: !2052, line: 455, baseType: !919, size: 128, offset: 320)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2081, file: !2052, line: 456, baseType: !7, size: 32, offset: 448)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2081, file: !2052, line: 458, baseType: !943, size: 64, offset: 512)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2081, file: !2052, line: 459, baseType: !943, size: 64, offset: 576)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2081, file: !2052, line: 460, baseType: !943, size: 64, offset: 640)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2081, file: !2052, line: 461, baseType: !943, size: 64, offset: 704)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2081, file: !2052, line: 463, baseType: !943, size: 64, offset: 768)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2081, file: !2052, line: 465, baseType: !2097, offset: 832)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2052, line: 415, elements: !1034)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2051, file: !2052, line: 693, baseType: !2099, size: 384, offset: 1408)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2052, line: 489, size: 384, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2099, file: !2052, line: 490, baseType: !919, size: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2099, file: !2052, line: 491, baseType: !902, size: 64, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2099, file: !2052, line: 492, baseType: !902, size: 64, offset: 192)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2099, file: !2052, line: 493, baseType: !7, size: 32, offset: 256)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2099, file: !2052, line: 494, baseType: !320, size: 16, offset: 288)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2099, file: !2052, line: 495, baseType: !320, size: 16, offset: 304)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2099, file: !2052, line: 497, baseType: !2108, size: 64, offset: 320)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2051, file: !2052, line: 697, baseType: !2110, size: 1792, offset: 1792)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2052, line: 507, size: 1792, elements: !2111)
!2111 = !{!2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2189, !2190}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2110, file: !2052, line: 508, baseType: !1584, size: 192, align: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2110, file: !2052, line: 515, baseType: !943, size: 64, offset: 192)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2110, file: !2052, line: 516, baseType: !943, size: 64, offset: 256)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2110, file: !2052, line: 517, baseType: !943, size: 64, offset: 320)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2110, file: !2052, line: 518, baseType: !943, size: 64, offset: 384)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2110, file: !2052, line: 519, baseType: !943, size: 64, offset: 448)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2110, file: !2052, line: 526, baseType: !1508, size: 64, offset: 512)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2110, file: !2052, line: 527, baseType: !943, size: 64, offset: 576)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2110, file: !2052, line: 528, baseType: !7, size: 32, offset: 640)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2110, file: !2052, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2110, file: !2052, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2110, file: !2052, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2110, file: !2052, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2110, file: !2052, line: 563, baseType: !2126, size: 512, offset: 704)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !2127)
!2127 = !{!2128, !2136, !2137, !2142, !2183, !2186, !2187, !2188}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2126, file: !20, line: 119, baseType: !2129, size: 256)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2130, line: 9, size: 256, elements: !2131)
!2130 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2131 = !{!2132, !2133}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2129, file: !2130, line: 10, baseType: !1584, size: 192, align: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2129, file: !2130, line: 11, baseType: !2134, size: 64, offset: 192)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !2135, line: 29, baseType: !1508)
!2135 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2126, file: !20, line: 120, baseType: !2134, size: 64, offset: 256)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2126, file: !20, line: 121, baseType: !2138, size: 64, offset: 320)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!19, !2141}
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2126, file: !20, line: 122, baseType: !2143, size: 64, offset: 384)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !2145)
!2145 = !{!2146, !2164, !2165, !2168, !2173, !2174, !2178, !2182}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2144, file: !20, line: 160, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !2149)
!2149 = !{!2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2148, file: !20, line: 215, baseType: !1597)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2148, file: !20, line: 216, baseType: !7, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2148, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2148, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2148, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2148, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2148, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2148, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2148, file: !20, line: 233, baseType: !2134, size: 64, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2148, file: !20, line: 234, baseType: !2141, size: 64, offset: 192)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2148, file: !20, line: 235, baseType: !2134, size: 64, offset: 256)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2148, file: !20, line: 236, baseType: !2141, size: 64, offset: 320)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2148, file: !20, line: 237, baseType: !2163, size: 4096, offset: 512)
!2163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2144, size: 4096, elements: !296)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2144, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2144, file: !20, line: 162, baseType: !2166, size: 32, offset: 96)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !897, line: 27, baseType: !2167)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1090, line: 96, baseType: !913)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2144, file: !20, line: 163, baseType: !2169, size: 32, offset: 128)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1168, line: 276, baseType: !2170)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1168, line: 276, size: 32, elements: !2171)
!2171 = !{!2172}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2170, file: !1168, line: 276, baseType: !1172, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2144, file: !20, line: 164, baseType: !2141, size: 64, offset: 192)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2144, file: !20, line: 165, baseType: !2175, size: 128, offset: 256)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2130, line: 14, size: 128, elements: !2176)
!2176 = !{!2177}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2175, file: !2130, line: 15, baseType: !1576, size: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2144, file: !20, line: 166, baseType: !2179, size: 64, offset: 384)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = !DISubroutineType(types: !2181)
!2181 = !{!2134}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2144, file: !20, line: 167, baseType: !2134, size: 64, offset: 448)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2126, file: !20, line: 123, baseType: !2184, size: 8, offset: 448)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !269, line: 17, baseType: !2185)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !271, line: 21, baseType: !165)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2126, file: !20, line: 124, baseType: !2184, size: 8, offset: 456)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2126, file: !20, line: 125, baseType: !2184, size: 8, offset: 464)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2126, file: !20, line: 126, baseType: !2184, size: 8, offset: 472)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2110, file: !2052, line: 572, baseType: !2126, size: 512, offset: 1216)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2110, file: !2052, line: 580, baseType: !2191, size: 64, offset: 1728)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2051, file: !2052, line: 721, baseType: !7, size: 32, offset: 3584)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2051, file: !2052, line: 722, baseType: !913, size: 32, offset: 3616)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2051, file: !2052, line: 723, baseType: !2195, size: 64, offset: 3648)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2197)
!2197 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2198, line: 17, baseType: !2199)
!2198 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2198, line: 17, size: 64, elements: !2200)
!2200 = !{!2201}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2199, file: !2198, line: 17, baseType: !2202, size: 64)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 64, elements: !2203)
!2203 = !{!2204}
!2204 = !DISubrange(count: 1)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2051, file: !2052, line: 724, baseType: !2197, size: 64, offset: 3712)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2051, file: !2052, line: 749, baseType: !2207, offset: 3776)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2052, line: 290, elements: !1034)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2051, file: !2052, line: 751, baseType: !919, size: 128, offset: 3776)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2051, file: !2052, line: 757, baseType: !1816, size: 64, offset: 3904)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2051, file: !2052, line: 758, baseType: !1816, size: 64, offset: 3968)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2051, file: !2052, line: 761, baseType: !2212, size: 320, offset: 4032)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1993, line: 34, size: 320, elements: !2213)
!2213 = !{!2214, !2215}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2212, file: !1993, line: 35, baseType: !943, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2212, file: !1993, line: 36, baseType: !2216, size: 256, offset: 64)
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1823, size: 256, elements: !243)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2051, file: !2052, line: 766, baseType: !913, size: 32, offset: 4352)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2051, file: !2052, line: 767, baseType: !913, size: 32, offset: 4384)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2051, file: !2052, line: 768, baseType: !913, size: 32, offset: 4416)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2051, file: !2052, line: 770, baseType: !913, size: 32, offset: 4448)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2051, file: !2052, line: 772, baseType: !902, size: 64, offset: 4480)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2051, file: !2052, line: 775, baseType: !7, size: 32, offset: 4544)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2051, file: !2052, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2051, file: !2052, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2051, file: !2052, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2051, file: !2052, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2051, file: !2052, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2051, file: !2052, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2051, file: !2052, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2051, file: !2052, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2051, file: !2052, line: 831, baseType: !902, size: 64, offset: 4672)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2051, file: !2052, line: 833, baseType: !2233, size: 384, offset: 4736)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2234)
!2234 = !{!2235, !2240}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2233, file: !25, line: 26, baseType: !2236, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DISubroutineType(types: !2238)
!2238 = !{!862, !2239}
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, scope: !2233, file: !25, line: 27, baseType: !2241, size: 320, offset: 64)
!2241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2233, file: !25, line: 27, size: 320, elements: !2242)
!2242 = !{!2243, !2252, !2279}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2241, file: !25, line: 36, baseType: !2244, size: 320)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2241, file: !25, line: 29, size: 320, elements: !2245)
!2245 = !{!2246, !2247, !2248, !2249, !2250, !2251}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2244, file: !25, line: 30, baseType: !978, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2244, file: !25, line: 31, baseType: !268, size: 32, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2244, file: !25, line: 32, baseType: !268, size: 32, offset: 96)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2244, file: !25, line: 33, baseType: !268, size: 32, offset: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2244, file: !25, line: 34, baseType: !943, size: 64, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2244, file: !25, line: 35, baseType: !978, size: 64, offset: 256)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2241, file: !25, line: 46, baseType: !2253, size: 192)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2241, file: !25, line: 38, size: 192, elements: !2254)
!2254 = !{!2255, !2256, !2257, !2278}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2253, file: !25, line: 39, baseType: !2166, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2253, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, scope: !2253, file: !25, line: 41, baseType: !2258, size: 64, offset: 64)
!2258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2253, file: !25, line: 41, size: 64, elements: !2259)
!2259 = !{!2260, !2268}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2258, file: !25, line: 42, baseType: !2261, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2263, line: 7, size: 128, elements: !2264)
!2263 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2264 = !{!2265, !2267}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2262, file: !2263, line: 8, baseType: !2266, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1090, line: 93, baseType: !1305)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2262, file: !2263, line: 9, baseType: !1305, size: 64, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2258, file: !25, line: 43, baseType: !2269, size: 64)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2271, line: 7, size: 64, elements: !2272)
!2271 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2272 = !{!2273, !2277}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2270, file: !2271, line: 8, baseType: !2274, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2271, line: 5, baseType: !2275)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !269, line: 20, baseType: !2276)
!2276 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !271, line: 26, baseType: !913)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2270, file: !2271, line: 9, baseType: !2275, size: 32, offset: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2253, file: !25, line: 45, baseType: !943, size: 64, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2241, file: !25, line: 54, baseType: !2280, size: 256)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2241, file: !25, line: 48, size: 256, elements: !2281)
!2281 = !{!2282, !2285, !2286, !2287, !2288}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2280, file: !25, line: 49, baseType: !2283, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2280, file: !25, line: 50, baseType: !913, size: 32, offset: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2280, file: !25, line: 51, baseType: !913, size: 32, offset: 96)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2280, file: !25, line: 52, baseType: !902, size: 64, offset: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2280, file: !25, line: 53, baseType: !902, size: 64, offset: 192)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2051, file: !2052, line: 835, baseType: !2290, size: 32, offset: 5120)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !897, line: 22, baseType: !2291)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1090, line: 28, baseType: !913)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2051, file: !2052, line: 836, baseType: !2290, size: 32, offset: 5152)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2051, file: !2052, line: 840, baseType: !902, size: 64, offset: 5184)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2051, file: !2052, line: 849, baseType: !2050, size: 64, offset: 5248)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2051, file: !2052, line: 852, baseType: !2050, size: 64, offset: 5312)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2051, file: !2052, line: 857, baseType: !919, size: 128, offset: 5376)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2051, file: !2052, line: 858, baseType: !919, size: 128, offset: 5504)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2051, file: !2052, line: 859, baseType: !2050, size: 64, offset: 5632)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2051, file: !2052, line: 867, baseType: !919, size: 128, offset: 5696)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2051, file: !2052, line: 868, baseType: !919, size: 128, offset: 5824)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2051, file: !2052, line: 871, baseType: !2302, size: 64, offset: 5952)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !94, line: 59, size: 768, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308, !2310, !2311, !2317, !2318}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2303, file: !94, line: 61, baseType: !2064, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2303, file: !94, line: 62, baseType: !7, size: 32, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2303, file: !94, line: 63, baseType: !1020, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2303, file: !94, line: 65, baseType: !2309, size: 256, offset: 64)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 256, elements: !243)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2303, file: !94, line: 66, baseType: !1410, size: 64, offset: 320)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2303, file: !94, line: 68, baseType: !2312, size: 128, offset: 384)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1698, line: 40, baseType: !2313)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1698, line: 36, size: 128, elements: !2314)
!2314 = !{!2315, !2316}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2313, file: !1698, line: 37, baseType: !1020)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2313, file: !1698, line: 38, baseType: !919, size: 128)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2303, file: !94, line: 69, baseType: !1145, size: 128, align: 64, offset: 512)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2303, file: !94, line: 70, baseType: !2319, size: 128, offset: 640)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2320, size: 128, elements: !2203)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !94, line: 54, size: 128, elements: !2321)
!2321 = !{!2322, !2323}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2320, file: !94, line: 55, baseType: !913, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2320, file: !94, line: 56, baseType: !2324, size: 64, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !94, line: 56, flags: DIFlagFwdDecl)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2051, file: !2052, line: 872, baseType: !2327, size: 512, offset: 6016)
!2327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1414, size: 512, elements: !243)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2051, file: !2052, line: 873, baseType: !919, size: 128, offset: 6528)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2051, file: !2052, line: 874, baseType: !919, size: 128, offset: 6656)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2051, file: !2052, line: 876, baseType: !2331, size: 64, offset: 6784)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2333, line: 26, size: 192, elements: !2334)
!2333 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2334 = !{!2335, !2336}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2332, file: !2333, line: 27, baseType: !7, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2332, file: !2333, line: 28, baseType: !2337, size: 128, offset: 64)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2338, line: 43, size: 128, elements: !2339)
!2338 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2339 = !{!2340, !2341}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2337, file: !2338, line: 44, baseType: !1597)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2337, file: !2338, line: 45, baseType: !919, size: 128)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2051, file: !2052, line: 879, baseType: !1480, size: 64, offset: 6848)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2051, file: !2052, line: 882, baseType: !1480, size: 64, offset: 6912)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2051, file: !2052, line: 884, baseType: !943, size: 64, offset: 6976)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2051, file: !2052, line: 885, baseType: !943, size: 64, offset: 7040)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2051, file: !2052, line: 890, baseType: !943, size: 64, offset: 7104)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2051, file: !2052, line: 891, baseType: !2348, size: 128, offset: 7168)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2052, line: 242, size: 128, elements: !2349)
!2349 = !{!2350, !2351, !2352}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2348, file: !2052, line: 244, baseType: !943, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2348, file: !2052, line: 245, baseType: !943, size: 64, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2348, file: !2052, line: 246, baseType: !1597, offset: 128)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2051, file: !2052, line: 900, baseType: !902, size: 64, offset: 7296)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2051, file: !2052, line: 901, baseType: !902, size: 64, offset: 7360)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2051, file: !2052, line: 904, baseType: !943, size: 64, offset: 7424)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2051, file: !2052, line: 907, baseType: !943, size: 64, offset: 7488)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2051, file: !2052, line: 910, baseType: !902, size: 64, offset: 7552)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2051, file: !2052, line: 911, baseType: !902, size: 64, offset: 7616)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2051, file: !2052, line: 914, baseType: !2360, size: 640, offset: 7680)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2361, line: 123, size: 640, elements: !2362)
!2361 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2362 = !{!2363, !2369, !2370}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2360, file: !2361, line: 124, baseType: !2364, size: 576)
!2364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2365, size: 576, elements: !308)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2361, line: 108, size: 192, elements: !2366)
!2366 = !{!2367, !2368}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2365, file: !2361, line: 109, baseType: !943, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2365, file: !2361, line: 110, baseType: !2175, size: 128, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2360, file: !2361, line: 125, baseType: !7, size: 32, offset: 576)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2360, file: !2361, line: 126, baseType: !7, size: 32, offset: 608)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2051, file: !2052, line: 917, baseType: !2372, size: 192, offset: 8320)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2361, line: 134, size: 192, elements: !2373)
!2373 = !{!2374, !2375}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2372, file: !2361, line: 135, baseType: !1145, size: 128, align: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2372, file: !2361, line: 136, baseType: !7, size: 32, offset: 128)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2051, file: !2052, line: 923, baseType: !2377, size: 64, offset: 8512)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2379)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2380, line: 111, size: 1280, elements: !2381)
!2380 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2381 = !{!2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2399, !2400, !2401, !2402, !2403, !2404, !2509, !2510, !2511, !2512, !2538, !2541, !2551}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2379, file: !2380, line: 112, baseType: !1571, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2379, file: !2380, line: 120, baseType: !1207, size: 32, offset: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2379, file: !2380, line: 121, baseType: !1215, size: 32, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2379, file: !2380, line: 122, baseType: !1207, size: 32, offset: 96)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2379, file: !2380, line: 123, baseType: !1215, size: 32, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2379, file: !2380, line: 124, baseType: !1207, size: 32, offset: 160)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2379, file: !2380, line: 125, baseType: !1215, size: 32, offset: 192)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2379, file: !2380, line: 126, baseType: !1207, size: 32, offset: 224)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2379, file: !2380, line: 127, baseType: !1215, size: 32, offset: 256)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2379, file: !2380, line: 128, baseType: !7, size: 32, offset: 288)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2379, file: !2380, line: 129, baseType: !2393, size: 64, offset: 320)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2394, line: 26, baseType: !2395)
!2394 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2394, line: 24, size: 64, elements: !2396)
!2396 = !{!2397}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2395, file: !2394, line: 25, baseType: !2398, size: 64)
!2398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !270, size: 64, elements: !323)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2379, file: !2380, line: 130, baseType: !2393, size: 64, offset: 384)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2379, file: !2380, line: 131, baseType: !2393, size: 64, offset: 448)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2379, file: !2380, line: 132, baseType: !2393, size: 64, offset: 512)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2379, file: !2380, line: 133, baseType: !2393, size: 64, offset: 576)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2379, file: !2380, line: 135, baseType: !165, size: 8, offset: 640)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2379, file: !2380, line: 137, baseType: !2405, size: 64, offset: 704)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2407, line: 189, size: 1664, elements: !2408)
!2407 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2408 = !{!2409, !2410, !2413, !2418, !2419, !2422, !2423, !2428, !2429, !2430, !2431, !2433, !2434, !2435, !2436, !2437, !2473, !2494}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2406, file: !2407, line: 190, baseType: !2064, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2406, file: !2407, line: 191, baseType: !2411, size: 32, offset: 32)
!2411 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2407, line: 28, baseType: !2412)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !897, line: 98, baseType: !2275)
!2413 = !DIDerivedType(tag: DW_TAG_member, scope: !2406, file: !2407, line: 192, baseType: !2414, size: 192, offset: 64)
!2414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2406, file: !2407, line: 192, size: 192, elements: !2415)
!2415 = !{!2416, !2417}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2414, file: !2407, line: 193, baseType: !919, size: 128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2414, file: !2407, line: 194, baseType: !1584, size: 192, align: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2406, file: !2407, line: 199, baseType: !1591, size: 256, offset: 256)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2406, file: !2407, line: 200, baseType: !2420, size: 64, offset: 512)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2407, line: 200, flags: DIFlagFwdDecl)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2406, file: !2407, line: 201, baseType: !973, size: 64, offset: 576)
!2423 = !DIDerivedType(tag: DW_TAG_member, scope: !2406, file: !2407, line: 202, baseType: !2424, size: 64, offset: 640)
!2424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2406, file: !2407, line: 202, size: 64, elements: !2425)
!2425 = !{!2426, !2427}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2424, file: !2407, line: 203, baseType: !1311, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2424, file: !2407, line: 204, baseType: !1311, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2406, file: !2407, line: 206, baseType: !1311, size: 64, offset: 704)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2406, file: !2407, line: 207, baseType: !1207, size: 32, offset: 768)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2406, file: !2407, line: 208, baseType: !1215, size: 32, offset: 800)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2406, file: !2407, line: 209, baseType: !2432, size: 32, offset: 832)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2407, line: 31, baseType: !1331)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2406, file: !2407, line: 210, baseType: !320, size: 16, offset: 864)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2406, file: !2407, line: 211, baseType: !320, size: 16, offset: 880)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2406, file: !2407, line: 215, baseType: !2039, size: 16, offset: 896)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2406, file: !2407, line: 222, baseType: !902, size: 64, offset: 960)
!2437 = !DIDerivedType(tag: DW_TAG_member, scope: !2406, file: !2407, line: 239, baseType: !2438, size: 320, offset: 1024)
!2438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2406, file: !2407, line: 239, size: 320, elements: !2439)
!2439 = !{!2440, !2465}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2438, file: !2407, line: 240, baseType: !2441, size: 320)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2407, line: 108, size: 320, elements: !2442)
!2442 = !{!2443, !2444, !2454, !2457, !2464}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2441, file: !2407, line: 110, baseType: !902, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, scope: !2441, file: !2407, line: 111, baseType: !2445, size: 64, offset: 64)
!2445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2441, file: !2407, line: 111, size: 64, elements: !2446)
!2446 = !{!2447, !2453}
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !2407, line: 112, baseType: !2448, size: 64)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2445, file: !2407, line: 112, size: 64, elements: !2449)
!2449 = !{!2450, !2451}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2448, file: !2407, line: 114, baseType: !1683, size: 16)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2448, file: !2407, line: 115, baseType: !2452, size: 48, offset: 16)
!2452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 48, elements: !265)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2445, file: !2407, line: 121, baseType: !902, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2441, file: !2407, line: 123, baseType: !2455, size: 64, offset: 128)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2407, line: 96, flags: DIFlagFwdDecl)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2441, file: !2407, line: 124, baseType: !2458, size: 64, offset: 192)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2407, line: 102, size: 192, elements: !2460)
!2460 = !{!2461, !2462, !2463}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2459, file: !2407, line: 103, baseType: !1145, size: 128, align: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2459, file: !2407, line: 104, baseType: !2064, size: 32, offset: 128)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2459, file: !2407, line: 105, baseType: !1262, size: 8, offset: 160)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2441, file: !2407, line: 125, baseType: !948, size: 64, offset: 256)
!2465 = !DIDerivedType(tag: DW_TAG_member, scope: !2438, file: !2407, line: 241, baseType: !2466, size: 320)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2438, file: !2407, line: 241, size: 320, elements: !2467)
!2467 = !{!2468, !2469, !2470, !2471, !2472}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2466, file: !2407, line: 242, baseType: !902, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2466, file: !2407, line: 243, baseType: !902, size: 64, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2466, file: !2407, line: 244, baseType: !2455, size: 64, offset: 128)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2466, file: !2407, line: 245, baseType: !2458, size: 64, offset: 192)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2466, file: !2407, line: 246, baseType: !1061, size: 64, offset: 256)
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !2406, file: !2407, line: 254, baseType: !2474, size: 256, offset: 1344)
!2474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2406, file: !2407, line: 254, size: 256, elements: !2475)
!2475 = !{!2476, !2482}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2474, file: !2407, line: 255, baseType: !2477, size: 256)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2407, line: 128, size: 256, elements: !2478)
!2478 = !{!2479, !2480}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2477, file: !2407, line: 129, baseType: !973, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2477, file: !2407, line: 130, baseType: !2481, size: 256)
!2481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 256, elements: !243)
!2482 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2407, line: 256, baseType: !2483, size: 256)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2474, file: !2407, line: 256, size: 256, elements: !2484)
!2484 = !{!2485, !2486}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2483, file: !2407, line: 258, baseType: !919, size: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2483, file: !2407, line: 259, baseType: !2487, size: 128, offset: 128)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2488, line: 22, size: 128, elements: !2489)
!2488 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2489 = !{!2490, !2493}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2487, file: !2488, line: 23, baseType: !2491, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2492 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2488, line: 23, flags: DIFlagFwdDecl)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2487, file: !2488, line: 24, baseType: !902, size: 64, offset: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2406, file: !2407, line: 274, baseType: !2495, size: 64, offset: 1600)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2407, line: 170, size: 192, elements: !2497)
!2497 = !{!2498, !2507, !2508}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2496, file: !2407, line: 171, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2407, line: 165, baseType: !2500)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{!913, !2405, !2503, !2505, !2405}
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2456)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2477)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2496, file: !2407, line: 172, baseType: !2405, size: 64, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2496, file: !2407, line: 173, baseType: !2455, size: 64, offset: 128)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2379, file: !2380, line: 138, baseType: !2405, size: 64, offset: 768)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2379, file: !2380, line: 139, baseType: !2405, size: 64, offset: 832)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2379, file: !2380, line: 140, baseType: !2405, size: 64, offset: 896)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2379, file: !2380, line: 145, baseType: !2513, size: 64, offset: 960)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2515, line: 13, size: 896, elements: !2516)
!2515 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2516 = !{!2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2514, file: !2515, line: 14, baseType: !2064, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2514, file: !2515, line: 15, baseType: !1571, size: 32, offset: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2514, file: !2515, line: 16, baseType: !1571, size: 32, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2514, file: !2515, line: 21, baseType: !1502, size: 64, offset: 128)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2514, file: !2515, line: 27, baseType: !902, size: 64, offset: 192)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2514, file: !2515, line: 28, baseType: !902, size: 64, offset: 256)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2514, file: !2515, line: 29, baseType: !1502, size: 64, offset: 320)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2514, file: !2515, line: 32, baseType: !1414, size: 128, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2514, file: !2515, line: 33, baseType: !1207, size: 32, offset: 512)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2514, file: !2515, line: 37, baseType: !1502, size: 64, offset: 576)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2514, file: !2515, line: 44, baseType: !2528, size: 256, offset: 640)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2529, line: 15, size: 256, elements: !2530)
!2529 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2530 = !{!2531, !2532, !2533, !2534, !2535, !2536, !2537}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2528, file: !2529, line: 16, baseType: !1597)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2528, file: !2529, line: 18, baseType: !913, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2528, file: !2529, line: 19, baseType: !913, size: 32, offset: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2528, file: !2529, line: 20, baseType: !913, size: 32, offset: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2528, file: !2529, line: 21, baseType: !913, size: 32, offset: 96)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2528, file: !2529, line: 22, baseType: !902, size: 64, offset: 128)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2528, file: !2529, line: 23, baseType: !902, size: 64, offset: 192)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2379, file: !2380, line: 146, baseType: !2539, size: 64, offset: 1024)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1208, line: 18, flags: DIFlagFwdDecl)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2379, file: !2380, line: 147, baseType: !2542, size: 64, offset: 1088)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2380, line: 25, size: 64, elements: !2544)
!2544 = !{!2545, !2546, !2547}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2543, file: !2380, line: 26, baseType: !1571, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2543, file: !2380, line: 27, baseType: !913, size: 32, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2543, file: !2380, line: 28, baseType: !2548, offset: 64)
!2548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, elements: !2549)
!2549 = !{!2550}
!2550 = !DISubrange(count: 0)
!2551 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !2380, line: 149, baseType: !2552, size: 128, offset: 1152)
!2552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !2380, line: 149, size: 128, elements: !2553)
!2553 = !{!2554, !2555}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2552, file: !2380, line: 150, baseType: !913, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2552, file: !2380, line: 151, baseType: !1145, size: 128, align: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2051, file: !2052, line: 926, baseType: !2377, size: 64, offset: 8576)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2051, file: !2052, line: 929, baseType: !2377, size: 64, offset: 8640)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2051, file: !2052, line: 933, baseType: !2405, size: 64, offset: 8704)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2051, file: !2052, line: 943, baseType: !2560, size: 128, offset: 8768)
!2560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 128, elements: !247)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2051, file: !2052, line: 945, baseType: !2562, size: 64, offset: 8896)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2052, line: 49, flags: DIFlagFwdDecl)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2051, file: !2052, line: 956, baseType: !2565, size: 64, offset: 8960)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2052, line: 45, flags: DIFlagFwdDecl)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2051, file: !2052, line: 959, baseType: !2568, size: 64, offset: 9024)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2052, line: 959, flags: DIFlagFwdDecl)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2051, file: !2052, line: 962, baseType: !2571, size: 64, offset: 9088)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2052, line: 66, flags: DIFlagFwdDecl)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2051, file: !2052, line: 966, baseType: !2574, size: 64, offset: 9152)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2575 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2576, line: 35, flags: DIFlagFwdDecl)
!2576 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2051, file: !2052, line: 969, baseType: !2578, size: 64, offset: 9216)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2580, line: 82, size: 7296, elements: !2581)
!2580 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2581 = !{!2582, !2583, !2584, !2585, !2586, !2587, !2588, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2617, !2626, !2627, !2629, !2630, !2631, !2634, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2664, !2665, !2672, !2673, !2674, !2675, !2676, !2677}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2579, file: !2580, line: 83, baseType: !2064, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2579, file: !2580, line: 84, baseType: !1571, size: 32, offset: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2579, file: !2580, line: 85, baseType: !913, size: 32, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2579, file: !2580, line: 86, baseType: !919, size: 128, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2579, file: !2580, line: 88, baseType: !2312, size: 128, offset: 256)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2579, file: !2580, line: 91, baseType: !2050, size: 64, offset: 384)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2579, file: !2580, line: 94, baseType: !2589, size: 192, offset: 448)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2590, line: 30, size: 192, elements: !2591)
!2590 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2591 = !{!2592, !2593}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2589, file: !2590, line: 31, baseType: !919, size: 128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2589, file: !2590, line: 32, baseType: !2594, size: 64, offset: 128)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2595, line: 25, baseType: !2596)
!2595 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2595, line: 23, size: 64, elements: !2597)
!2597 = !{!2598}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2596, file: !2595, line: 24, baseType: !2202, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2579, file: !2580, line: 97, baseType: !1410, size: 64, offset: 640)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2579, file: !2580, line: 100, baseType: !913, size: 32, offset: 704)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2579, file: !2580, line: 106, baseType: !913, size: 32, offset: 736)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2579, file: !2580, line: 107, baseType: !2050, size: 64, offset: 768)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2579, file: !2580, line: 110, baseType: !913, size: 32, offset: 832)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2579, file: !2580, line: 111, baseType: !7, size: 32, offset: 864)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2579, file: !2580, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2579, file: !2580, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2579, file: !2580, line: 128, baseType: !913, size: 32, offset: 928)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2579, file: !2580, line: 129, baseType: !919, size: 128, offset: 960)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2579, file: !2580, line: 132, baseType: !2126, size: 512, offset: 1088)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2579, file: !2580, line: 133, baseType: !2134, size: 64, offset: 1600)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2579, file: !2580, line: 140, baseType: !2612, size: 256, offset: 1664)
!2612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2613, size: 256, elements: !323)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2580, line: 38, size: 128, elements: !2614)
!2614 = !{!2615, !2616}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2613, file: !2580, line: 39, baseType: !943, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2613, file: !2580, line: 40, baseType: !943, size: 64, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2579, file: !2580, line: 146, baseType: !2618, size: 192, offset: 1920)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2580, line: 66, size: 192, elements: !2619)
!2619 = !{!2620}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2618, file: !2580, line: 67, baseType: !2621, size: 192)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2580, line: 47, size: 192, elements: !2622)
!2622 = !{!2623, !2624, !2625}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2621, file: !2580, line: 48, baseType: !1504, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2621, file: !2580, line: 49, baseType: !1504, size: 64, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2621, file: !2580, line: 50, baseType: !1504, size: 64, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2579, file: !2580, line: 150, baseType: !2360, size: 640, offset: 2112)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2579, file: !2580, line: 153, baseType: !2628, size: 256, offset: 2752)
!2628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2302, size: 256, elements: !243)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2579, file: !2580, line: 159, baseType: !2302, size: 64, offset: 3008)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2579, file: !2580, line: 162, baseType: !913, size: 32, offset: 3072)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2579, file: !2580, line: 164, baseType: !2632, size: 64, offset: 3136)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 64)
!2633 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2580, line: 164, flags: DIFlagFwdDecl)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2579, file: !2580, line: 175, baseType: !2635, size: 32, offset: 3200)
!2635 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1168, line: 805, baseType: !2636)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1168, line: 798, size: 32, elements: !2637)
!2637 = !{!2638, !2639}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2636, file: !1168, line: 803, baseType: !1167, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2636, file: !1168, line: 804, baseType: !1020, offset: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2579, file: !2580, line: 176, baseType: !943, size: 64, offset: 3264)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2579, file: !2580, line: 176, baseType: !943, size: 64, offset: 3328)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2579, file: !2580, line: 176, baseType: !943, size: 64, offset: 3392)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2579, file: !2580, line: 176, baseType: !943, size: 64, offset: 3456)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2579, file: !2580, line: 177, baseType: !943, size: 64, offset: 3520)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2579, file: !2580, line: 178, baseType: !943, size: 64, offset: 3584)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2579, file: !2580, line: 179, baseType: !2348, size: 128, offset: 3648)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2579, file: !2580, line: 180, baseType: !902, size: 64, offset: 3776)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2579, file: !2580, line: 180, baseType: !902, size: 64, offset: 3840)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2579, file: !2580, line: 180, baseType: !902, size: 64, offset: 3904)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2579, file: !2580, line: 180, baseType: !902, size: 64, offset: 3968)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2579, file: !2580, line: 181, baseType: !902, size: 64, offset: 4032)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2579, file: !2580, line: 181, baseType: !902, size: 64, offset: 4096)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2579, file: !2580, line: 181, baseType: !902, size: 64, offset: 4160)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2579, file: !2580, line: 181, baseType: !902, size: 64, offset: 4224)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2579, file: !2580, line: 182, baseType: !902, size: 64, offset: 4288)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2579, file: !2580, line: 182, baseType: !902, size: 64, offset: 4352)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2579, file: !2580, line: 182, baseType: !902, size: 64, offset: 4416)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2579, file: !2580, line: 182, baseType: !902, size: 64, offset: 4480)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2579, file: !2580, line: 183, baseType: !902, size: 64, offset: 4544)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2579, file: !2580, line: 183, baseType: !902, size: 64, offset: 4608)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2579, file: !2580, line: 184, baseType: !2662, offset: 4672)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2663, line: 12, elements: !1034)
!2663 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2579, file: !2580, line: 192, baseType: !945, size: 64, offset: 4672)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2579, file: !2580, line: 203, baseType: !2666, size: 2048, offset: 4736)
!2666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2667, size: 2048, elements: !247)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2668, line: 43, size: 128, elements: !2669)
!2668 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2667, file: !2668, line: 44, baseType: !1104, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2667, file: !2668, line: 45, baseType: !1104, size: 64, offset: 64)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2579, file: !2580, line: 220, baseType: !1262, size: 8, offset: 6784)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2579, file: !2580, line: 221, baseType: !2039, size: 16, offset: 6800)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2579, file: !2580, line: 222, baseType: !2039, size: 16, offset: 6816)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2579, file: !2580, line: 224, baseType: !1816, size: 64, offset: 6848)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2579, file: !2580, line: 227, baseType: !1498, size: 192, offset: 6912)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2579, file: !2580, line: 233, baseType: !1498, size: 192, offset: 7104)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2051, file: !2052, line: 970, baseType: !2679, size: 64, offset: 9280)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2580, line: 20, size: 16576, elements: !2681)
!2681 = !{!2682, !2683, !2684, !2685}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2680, file: !2580, line: 21, baseType: !1020)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2680, file: !2580, line: 22, baseType: !2064, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2680, file: !2580, line: 23, baseType: !2312, size: 128, offset: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2680, file: !2580, line: 24, baseType: !2686, size: 16384, offset: 192)
!2686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2687, size: 16384, elements: !404)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2590, line: 49, size: 256, elements: !2688)
!2688 = !{!2689}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2687, file: !2590, line: 50, baseType: !2690, size: 256)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2590, line: 35, size: 256, elements: !2691)
!2691 = !{!2692, !2699, !2700, !2706}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2690, file: !2590, line: 37, baseType: !2693, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2694, line: 19, baseType: !2695)
!2694 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2694, line: 18, baseType: !2697)
!2697 = !DISubroutineType(types: !2698)
!2698 = !{null, !913}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2690, file: !2590, line: 38, baseType: !902, size: 64, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2690, file: !2590, line: 44, baseType: !2701, size: 64, offset: 128)
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2694, line: 22, baseType: !2702)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2694, line: 21, baseType: !2704)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{null}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2690, file: !2590, line: 46, baseType: !2594, size: 64, offset: 192)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2051, file: !2052, line: 971, baseType: !2594, size: 64, offset: 9344)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2051, file: !2052, line: 972, baseType: !2594, size: 64, offset: 9408)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2051, file: !2052, line: 974, baseType: !2594, size: 64, offset: 9472)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2051, file: !2052, line: 975, baseType: !2589, size: 192, offset: 9536)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2051, file: !2052, line: 976, baseType: !902, size: 64, offset: 9728)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2051, file: !2052, line: 977, baseType: !1102, size: 64, offset: 9792)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2051, file: !2052, line: 978, baseType: !7, size: 32, offset: 9856)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2051, file: !2052, line: 980, baseType: !1148, size: 64, offset: 9920)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2051, file: !2052, line: 989, baseType: !2716, size: 128, offset: 9984)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2717, line: 35, size: 128, elements: !2718)
!2717 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2718 = !{!2719, !2720, !2721}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2716, file: !2717, line: 36, baseType: !913, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2716, file: !2717, line: 37, baseType: !1571, size: 32, offset: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2716, file: !2717, line: 38, baseType: !2722, size: 64, offset: 64)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2717, line: 23, flags: DIFlagFwdDecl)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2051, file: !2052, line: 992, baseType: !943, size: 64, offset: 10112)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2051, file: !2052, line: 993, baseType: !943, size: 64, offset: 10176)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2051, file: !2052, line: 996, baseType: !1020, offset: 10240)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2051, file: !2052, line: 999, baseType: !1597, offset: 10240)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2051, file: !2052, line: 1001, baseType: !2729, size: 64, offset: 10240)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2052, line: 636, size: 64, elements: !2730)
!2730 = !{!2731}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2729, file: !2052, line: 637, baseType: !2732, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2051, file: !2052, line: 1005, baseType: !1576, size: 128, offset: 10304)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2051, file: !2052, line: 1007, baseType: !2050, size: 64, offset: 10432)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2051, file: !2052, line: 1009, baseType: !2736, size: 64, offset: 10496)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2052, line: 1009, flags: DIFlagFwdDecl)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2051, file: !2052, line: 1043, baseType: !973, size: 64, offset: 10560)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2051, file: !2052, line: 1046, baseType: !2740, size: 64, offset: 10624)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2742, line: 554, size: 128, elements: !2743)
!2742 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2743 = !{!2744, !3758}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2741, file: !2742, line: 555, baseType: !2745, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !2747, line: 203, size: 832, elements: !2748)
!2747 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!2748 = !{!2749, !2750, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3726, !3731, !3732, !3751, !3752, !3753, !3754, !3755, !3757}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2746, file: !2747, line: 204, baseType: !2745, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2746, file: !2747, line: 205, baseType: !2751, size: 64, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !2753, line: 167, size: 8512, elements: !2754)
!2753 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!2754 = !{!2755, !2756, !2757, !2758, !2760, !2761, !2762, !2835, !2836, !3025, !3693, !3694, !3695, !3696, !3697, !3698, !3701, !3702, !3705, !3706, !3707, !3710}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2752, file: !2753, line: 171, baseType: !913, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2752, file: !2753, line: 172, baseType: !913, size: 32, offset: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2752, file: !2753, line: 173, baseType: !913, size: 32, offset: 64)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2752, file: !2753, line: 176, baseType: !2759, size: 256, offset: 96)
!2759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 256, elements: !420)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2752, file: !2753, line: 178, baseType: !320, size: 16, offset: 352)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2752, file: !2753, line: 179, baseType: !320, size: 16, offset: 368)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2752, file: !2753, line: 186, baseType: !2763, size: 64, offset: 384)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !2753, line: 149, size: 256, elements: !2765)
!2765 = !{!2766, !2767, !2768, !2831}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2764, file: !2753, line: 150, baseType: !1145, size: 128, align: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2764, file: !2753, line: 151, baseType: !913, size: 32, offset: 128)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2764, file: !2753, line: 152, baseType: !2769, size: 64, offset: 192)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !2753, line: 53, size: 6592, elements: !2771)
!2771 = !{!2772, !2773, !2774, !2775, !2778, !2799, !2800, !2801, !2802, !2803, !2813}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !2770, file: !2753, line: 54, baseType: !1654, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !2770, file: !2753, line: 60, baseType: !1654, size: 64, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2770, file: !2753, line: 64, baseType: !902, size: 64, offset: 128)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !2770, file: !2753, line: 65, baseType: !2776, size: 64, offset: 192)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !2753, line: 65, flags: DIFlagFwdDecl)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2770, file: !2753, line: 66, baseType: !2779, size: 128, offset: 256)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2780, line: 105, size: 128, elements: !2781)
!2780 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2779, file: !2780, line: 110, baseType: !902, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2779, file: !2780, line: 118, baseType: !2784, size: 64, offset: 64)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2780, line: 95, size: 448, elements: !2786)
!2786 = !{!2787, !2788, !2794, !2795, !2796, !2797, !2798}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2785, file: !2780, line: 96, baseType: !1502, size: 64)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2785, file: !2780, line: 97, baseType: !2789, size: 64, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2780, line: 60, baseType: !2791)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{null, !2793}
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2785, file: !2780, line: 98, baseType: !2789, size: 64, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2785, file: !2780, line: 99, baseType: !1262, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2785, file: !2780, line: 100, baseType: !1262, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2785, file: !2780, line: 101, baseType: !1145, size: 128, align: 64, offset: 256)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2785, file: !2780, line: 102, baseType: !2793, size: 64, offset: 384)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !2770, file: !2753, line: 68, baseType: !1004, size: 5568, offset: 384)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !2770, file: !2753, line: 69, baseType: !1013, size: 64, offset: 5952)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2770, file: !2753, line: 70, baseType: !913, size: 32, offset: 6016)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !2770, file: !2753, line: 70, baseType: !913, size: 32, offset: 6048)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2770, file: !2753, line: 71, baseType: !2804, size: 64, offset: 6080)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !2753, line: 48, size: 808, elements: !2806)
!2806 = !{!2807, !2811}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2805, file: !2753, line: 49, baseType: !2808, size: 296)
!2808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 296, elements: !2809)
!2809 = !{!2810}
!2810 = !DISubrange(count: 37)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2805, file: !2753, line: 50, baseType: !2812, size: 512, offset: 296)
!2812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 512, elements: !404)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !2770, file: !2753, line: 75, baseType: !2814, size: 448, offset: 6144)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !845, line: 124, size: 448, elements: !2815)
!2815 = !{!2816, !2827, !2828}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2814, file: !845, line: 125, baseType: !2817, size: 256)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !845, line: 102, size: 256, elements: !2818)
!2818 = !{!2819, !2820, !2821}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2817, file: !845, line: 103, baseType: !1502, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2817, file: !845, line: 104, baseType: !919, size: 128, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2817, file: !845, line: 105, baseType: !2822, size: 64, offset: 192)
!2822 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !845, line: 21, baseType: !2823)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{null, !2826}
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2814, file: !845, line: 126, baseType: !1145, size: 128, align: 64, offset: 256)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2814, file: !845, line: 129, baseType: !2829, size: 64, offset: 384)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !845, line: 18, flags: DIFlagFwdDecl)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2764, file: !2753, line: 153, baseType: !2832, offset: 256)
!2832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2769, elements: !2833)
!2833 = !{!2834}
!2834 = !DISubrange(count: -1)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2752, file: !2753, line: 187, baseType: !2770, size: 6592, offset: 448)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2752, file: !2753, line: 189, baseType: !2837, size: 64, offset: 7040)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2839)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !43, line: 1844, size: 960, elements: !2840)
!2840 = !{!2841, !2846, !2954, !2958, !2962, !2966, !2967, !2971, !2975, !2979, !2985, !2989, !3015, !3020, !3021}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2839, file: !43, line: 1845, baseType: !2842, size: 64)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!2845, !2745}
!2845 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !2747, line: 515, baseType: !7)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2839, file: !43, line: 1846, baseType: !2847, size: 64, offset: 64)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!913, !2850, !2953}
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !2747, line: 22, size: 1344, elements: !2852)
!2852 = !{!2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2951, !2952}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2851, file: !2747, line: 23, baseType: !1285, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2851, file: !2747, line: 24, baseType: !913, size: 32, offset: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2851, file: !2747, line: 25, baseType: !1201, size: 64, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2851, file: !2747, line: 26, baseType: !1371, size: 64, offset: 128)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2851, file: !2747, line: 27, baseType: !1498, size: 192, offset: 192)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2851, file: !2747, line: 28, baseType: !973, size: 64, offset: 384)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2851, file: !2747, line: 29, baseType: !973, size: 64, offset: 448)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2851, file: !2747, line: 30, baseType: !913, size: 32, offset: 512)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2851, file: !2747, line: 31, baseType: !1262, size: 8, offset: 544)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2851, file: !2747, line: 33, baseType: !919, size: 128, offset: 576)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2851, file: !2747, line: 35, baseType: !2850, size: 64, offset: 704)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2851, file: !2747, line: 36, baseType: !2184, size: 8, offset: 768)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2851, file: !2747, line: 37, baseType: !2769, size: 64, offset: 832)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2851, file: !2747, line: 39, baseType: !7, size: 32, offset: 896)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2851, file: !2747, line: 41, baseType: !1020, offset: 928)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2851, file: !2747, line: 42, baseType: !2751, size: 64, offset: 960)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2851, file: !2747, line: 43, baseType: !2870, size: 64, offset: 1024)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !31, line: 165, size: 4672, elements: !2872)
!2872 = !{!2873, !2874, !2875, !2876, !2877, !2878, !2883, !2884, !2885, !2886, !2887, !2888, !2944, !2945, !2946, !2947, !2949, !2950}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2871, file: !31, line: 166, baseType: !943, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2871, file: !31, line: 167, baseType: !1584, size: 192, align: 64, offset: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !2871, file: !31, line: 168, baseType: !919, size: 128, offset: 256)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2871, file: !31, line: 169, baseType: !902, size: 64, offset: 384)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !2871, file: !31, line: 170, baseType: !902, size: 64, offset: 448)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2871, file: !31, line: 172, baseType: !2879, size: 32, offset: 512)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2880, line: 19, size: 32, elements: !2881)
!2880 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2881 = !{!2882}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2879, file: !2880, line: 20, baseType: !2064, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2871, file: !31, line: 173, baseType: !7, size: 32, offset: 544)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !2871, file: !31, line: 174, baseType: !7, size: 32, offset: 576)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !2871, file: !31, line: 175, baseType: !7, size: 32, offset: 608)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !2871, file: !31, line: 175, baseType: !7, size: 32, offset: 640)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !2871, file: !31, line: 181, baseType: !1502, size: 64, offset: 704)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !2871, file: !31, line: 183, baseType: !2889, size: 2688, offset: 768)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !31, line: 107, size: 2688, elements: !2890)
!2890 = !{!2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2920, !2921, !2922, !2923, !2924, !2942, !2943}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !2889, file: !31, line: 108, baseType: !2870, size: 64)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2889, file: !31, line: 110, baseType: !902, size: 64, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !2889, file: !31, line: 111, baseType: !902, size: 64, offset: 128)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !2889, file: !31, line: 113, baseType: !919, size: 128, offset: 192)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !2889, file: !31, line: 114, baseType: !919, size: 128, offset: 320)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !2889, file: !31, line: 115, baseType: !919, size: 128, offset: 448)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !2889, file: !31, line: 116, baseType: !919, size: 128, offset: 576)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2889, file: !31, line: 117, baseType: !1020, offset: 704)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !2889, file: !31, line: 119, baseType: !2900, size: 256, offset: 704)
!2900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2901, size: 256, elements: !243)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2902, line: 97, size: 64, elements: !2903)
!2902 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2903 = !{!2904}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2901, file: !2902, line: 98, baseType: !1508, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !2889, file: !31, line: 121, baseType: !902, size: 64, offset: 960)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !2889, file: !31, line: 123, baseType: !902, size: 64, offset: 1024)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !2889, file: !31, line: 124, baseType: !902, size: 64, offset: 1088)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !2889, file: !31, line: 125, baseType: !902, size: 64, offset: 1152)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !2889, file: !31, line: 126, baseType: !902, size: 64, offset: 1216)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !2889, file: !31, line: 127, baseType: !902, size: 64, offset: 1280)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !2889, file: !31, line: 135, baseType: !902, size: 64, offset: 1344)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !2889, file: !31, line: 136, baseType: !902, size: 64, offset: 1408)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !2889, file: !31, line: 138, baseType: !2914, size: 128, offset: 1472)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !2915, line: 76, size: 128, elements: !2916)
!2915 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!2916 = !{!2917, !2918, !2919}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2914, file: !2915, line: 78, baseType: !2901, size: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2914, file: !2915, line: 80, baseType: !7, size: 32, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2914, file: !2915, line: 81, baseType: !1597, offset: 96)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !2889, file: !31, line: 139, baseType: !913, size: 32, offset: 1600)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !2889, file: !31, line: 140, baseType: !30, size: 32, offset: 1632)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !2889, file: !31, line: 142, baseType: !1020, offset: 1664)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !2889, file: !31, line: 143, baseType: !919, size: 128, offset: 1664)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !2889, file: !31, line: 144, baseType: !2925, size: 704, offset: 1792)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !845, line: 115, size: 704, elements: !2926)
!2926 = !{!2927, !2928, !2940, !2941}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2925, file: !845, line: 116, baseType: !2817, size: 256)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2925, file: !845, line: 117, baseType: !2929, size: 320, offset: 256)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2930, line: 11, size: 320, elements: !2931)
!2930 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2931 = !{!2932, !2933, !2934, !2939}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2929, file: !2930, line: 16, baseType: !1414, size: 128)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2929, file: !2930, line: 17, baseType: !902, size: 64, offset: 128)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2929, file: !2930, line: 18, baseType: !2935, size: 64, offset: 192)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{null, !2938}
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2929, file: !2930, line: 19, baseType: !268, size: 32, offset: 256)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2925, file: !845, line: 120, baseType: !2829, size: 64, offset: 576)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2925, file: !845, line: 121, baseType: !913, size: 32, offset: 640)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !2889, file: !31, line: 146, baseType: !902, size: 64, offset: 2496)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !2889, file: !31, line: 148, baseType: !919, size: 128, offset: 2560)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !2871, file: !31, line: 184, baseType: !919, size: 128, offset: 3456)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !2871, file: !31, line: 190, baseType: !2312, size: 128, offset: 3584)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2871, file: !31, line: 192, baseType: !1003, size: 64, offset: 3712)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2871, file: !31, line: 193, baseType: !2948, size: 512, offset: 3776)
!2948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 512, elements: !404)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2871, file: !31, line: 194, baseType: !1003, size: 64, offset: 4288)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !2871, file: !31, line: 196, baseType: !2929, size: 320, offset: 4352)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2851, file: !2747, line: 46, baseType: !913, size: 32, offset: 1088)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2851, file: !2747, line: 48, baseType: !1498, size: 192, offset: 1152)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !897, line: 150, baseType: !7)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2839, file: !43, line: 1847, baseType: !2955, size: 64, offset: 128)
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 64)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{null, !2751, !2953}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2839, file: !43, line: 1848, baseType: !2959, size: 64, offset: 192)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{!913, !2850, !1654, !1545, !7}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2839, file: !43, line: 1849, baseType: !2963, size: 64, offset: 256)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DISubroutineType(types: !2965)
!2965 = !{!913, !2850, !2953, !7, !902}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2839, file: !43, line: 1850, baseType: !2963, size: 64, offset: 320)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2839, file: !43, line: 1851, baseType: !2968, size: 64, offset: 384)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{!7, !2751, !7}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2839, file: !43, line: 1853, baseType: !2972, size: 64, offset: 448)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{null, !2751}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2839, file: !43, line: 1854, baseType: !2976, size: 64, offset: 512)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!913, !2751}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2839, file: !43, line: 1855, baseType: !2980, size: 64, offset: 576)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{!913, !2850, !2983}
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !85, line: 51, flags: DIFlagFwdDecl)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2839, file: !43, line: 1857, baseType: !2986, size: 64, offset: 640)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{null, !2850, !902}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2839, file: !43, line: 1858, baseType: !2990, size: 64, offset: 704)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!913, !2751, !1654, !7, !2993, !973}
!2993 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !43, line: 354, baseType: !2994)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = !DISubroutineType(types: !2996)
!2996 = !{!913, !2997, !7, !973}
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2999, line: 106, size: 512, elements: !3000)
!2999 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!3000 = !{!3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3010, !3011}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2998, file: !2999, line: 107, baseType: !944, size: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2998, file: !2999, line: 108, baseType: !944, size: 64, offset: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2998, file: !2999, line: 109, baseType: !944, size: 64, offset: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2998, file: !2999, line: 110, baseType: !2185, size: 8, offset: 192)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2998, file: !2999, line: 111, baseType: !2185, size: 8, offset: 200)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2998, file: !2999, line: 112, baseType: !2185, size: 8, offset: 208)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2998, file: !2999, line: 113, baseType: !2185, size: 8, offset: 216)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2998, file: !2999, line: 114, baseType: !3009, size: 32, offset: 224)
!3009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2185, size: 32, elements: !243)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2998, file: !2999, line: 115, baseType: !944, size: 64, offset: 256)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2998, file: !2999, line: 116, baseType: !3012, size: 192, offset: 320)
!3012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2185, size: 192, elements: !3013)
!3013 = !{!3014}
!3014 = !DISubrange(count: 24)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2839, file: !43, line: 1860, baseType: !3016, size: 64, offset: 768)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{!1061, !2751, !3019}
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2839, file: !43, line: 1861, baseType: !1405, size: 64, offset: 832)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2839, file: !43, line: 1862, baseType: !3022, size: 64, offset: 896)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3024)
!3024 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !43, line: 41, flags: DIFlagFwdDecl)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2752, file: !2753, line: 190, baseType: !3026, size: 64, offset: 7104)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !43, line: 399, size: 14464, elements: !3028)
!3028 = !{!3029, !3245, !3367, !3368, !3371, !3374, !3470, !3471, !3472, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3531, !3540, !3541, !3542, !3543, !3544, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3650, !3651, !3652, !3653, !3654, !3655, !3688, !3689, !3690, !3691}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !3027, file: !43, line: 400, baseType: !3030, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !43, line: 130, size: 2176, elements: !3032)
!3032 = !{!3033, !3034, !3037, !3120, !3121, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3135, !3148, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3243, !3244}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3031, file: !43, line: 131, baseType: !3026, size: 64)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !3031, file: !43, line: 132, baseType: !3035, size: 64, offset: 64)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !43, line: 132, flags: DIFlagFwdDecl)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !3031, file: !43, line: 133, baseType: !3038, size: 64, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !519, line: 16, size: 4032, elements: !3040)
!3040 = !{!3041, !3047, !3048, !3051, !3052, !3053, !3054, !3055, !3056, !3059, !3060, !3075, !3076, !3077, !3078, !3079, !3081, !3082, !3083, !3084, !3087, !3088, !3089, !3090, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105}
!3041 = !DIDerivedType(tag: DW_TAG_member, scope: !3039, file: !519, line: 17, baseType: !3042, size: 192)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3039, file: !519, line: 17, size: 192, elements: !3043)
!3043 = !{!3044, !3045, !3046}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3042, file: !519, line: 19, baseType: !1020)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !3042, file: !519, line: 27, baseType: !919, size: 128)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3042, file: !519, line: 32, baseType: !902, size: 64, offset: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3039, file: !519, line: 38, baseType: !2925, size: 704, offset: 192)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3039, file: !519, line: 40, baseType: !3049, size: 64, offset: 896)
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !2198, line: 756, baseType: !3050)
!3050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2199, size: 64, elements: !2203)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !3039, file: !519, line: 45, baseType: !913, size: 32, offset: 960)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !3039, file: !519, line: 50, baseType: !913, size: 32, offset: 992)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3039, file: !519, line: 53, baseType: !902, size: 64, offset: 1024)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !3039, file: !519, line: 59, baseType: !973, size: 64, offset: 1088)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3039, file: !519, line: 63, baseType: !3026, size: 64, offset: 1152)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3039, file: !519, line: 65, baseType: !3057, size: 64, offset: 1216)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !43, line: 40, flags: DIFlagFwdDecl)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3039, file: !519, line: 71, baseType: !973, size: 64, offset: 1280)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !3039, file: !519, line: 77, baseType: !3061, size: 192, offset: 1344)
!3061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !3062, line: 48, size: 192, elements: !3063)
!3062 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!3063 = !{!3064, !3065, !3066, !3067}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3061, file: !3062, line: 52, baseType: !7, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3061, file: !3062, line: 57, baseType: !7, size: 32, offset: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !3061, file: !3062, line: 62, baseType: !7, size: 32, offset: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3061, file: !3062, line: 67, baseType: !3068, size: 64, offset: 128)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !3062, line: 20, size: 192, elements: !3070)
!3070 = !{!3071, !3072, !3073, !3074}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3069, file: !3062, line: 24, baseType: !902, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !3069, file: !3062, line: 29, baseType: !902, size: 64, offset: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !3069, file: !3062, line: 34, baseType: !902, size: 64, offset: 128)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !3069, file: !3062, line: 39, baseType: !1020, offset: 192)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !3039, file: !519, line: 83, baseType: !3035, size: 64, offset: 1536)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !3039, file: !519, line: 89, baseType: !7, size: 32, offset: 1600)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3039, file: !519, line: 92, baseType: !320, size: 16, offset: 1632)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !3039, file: !519, line: 94, baseType: !320, size: 16, offset: 1648)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !3039, file: !519, line: 96, baseType: !3080, size: 64, offset: 1664)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !3039, file: !519, line: 99, baseType: !1020, offset: 1728)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !3039, file: !519, line: 104, baseType: !1697, size: 320, offset: 1728)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !3039, file: !519, line: 110, baseType: !1571, size: 32, offset: 2048)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3039, file: !519, line: 116, baseType: !3085, size: 64, offset: 2112)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !519, line: 9, flags: DIFlagFwdDecl)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !3039, file: !519, line: 122, baseType: !3085, size: 64, offset: 2176)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !3039, file: !519, line: 125, baseType: !902, size: 64, offset: 2240)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !3039, file: !519, line: 127, baseType: !902, size: 64, offset: 2304)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !3039, file: !519, line: 130, baseType: !3091, size: 448, offset: 2368)
!3091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 448, elements: !3092)
!3092 = !{!3093}
!3093 = !DISubrange(count: 7)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3039, file: !519, line: 133, baseType: !7, size: 32, offset: 2816)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !3039, file: !519, line: 135, baseType: !7, size: 32, offset: 2848)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !3039, file: !519, line: 141, baseType: !1571, size: 32, offset: 2880)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !3039, file: !519, line: 145, baseType: !1571, size: 32, offset: 2912)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !3039, file: !519, line: 148, baseType: !1414, size: 128, offset: 2944)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !3039, file: !519, line: 150, baseType: !1414, size: 128, offset: 3072)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3039, file: !519, line: 152, baseType: !1007, size: 512, offset: 3200)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !3039, file: !519, line: 155, baseType: !902, size: 64, offset: 3712)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !3039, file: !519, line: 157, baseType: !902, size: 64, offset: 3776)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !3039, file: !519, line: 159, baseType: !902, size: 64, offset: 3840)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !3039, file: !519, line: 175, baseType: !919, size: 128, offset: 3904)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !3039, file: !519, line: 182, baseType: !3106, offset: 4032)
!3106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3107, elements: !2833)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !3108, line: 16, size: 576, elements: !3109)
!3108 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!3109 = !{!3110, !3112, !3113, !3114, !3115, !3116, !3117, !3119}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !3107, file: !3108, line: 17, baseType: !3111, size: 32)
!3111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 32, elements: !323)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !3107, file: !3108, line: 18, baseType: !2039, size: 16, offset: 32)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !3107, file: !3108, line: 19, baseType: !2184, size: 8, offset: 48)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !3107, file: !3108, line: 20, baseType: !2184, size: 8, offset: 56)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !3107, file: !3108, line: 21, baseType: !2337, size: 128, offset: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !3107, file: !3108, line: 23, baseType: !1148, size: 64, offset: 192)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !3107, file: !3108, line: 24, baseType: !3118, size: 64, offset: 256)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !3107, file: !3108, line: 25, baseType: !2817, size: 256, offset: 320)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !3031, file: !43, line: 135, baseType: !7, size: 32, offset: 192)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !3031, file: !43, line: 136, baseType: !3122, size: 32, offset: 224)
!3122 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !43, line: 66, baseType: !270)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3031, file: !43, line: 138, baseType: !913, size: 32, offset: 256)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !3031, file: !43, line: 139, baseType: !913, size: 32, offset: 288)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !3031, file: !43, line: 142, baseType: !7, size: 32, offset: 320)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !3031, file: !43, line: 143, baseType: !1654, size: 64, offset: 384)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !3031, file: !43, line: 145, baseType: !2745, size: 64, offset: 448)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !3031, file: !43, line: 146, baseType: !2745, size: 64, offset: 512)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !3031, file: !43, line: 148, baseType: !919, size: 128, offset: 576)
!3130 = !DIDerivedType(tag: DW_TAG_member, scope: !3031, file: !43, line: 157, baseType: !3131, size: 128, offset: 704)
!3131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3031, file: !43, line: 157, size: 128, elements: !3132)
!3132 = !{!3133, !3134}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3131, file: !43, line: 158, baseType: !1414, size: 128)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !3131, file: !43, line: 159, baseType: !919, size: 128)
!3135 = !DIDerivedType(tag: DW_TAG_member, scope: !3031, file: !43, line: 167, baseType: !3136, size: 192, offset: 832)
!3136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3031, file: !43, line: 167, size: 192, elements: !3137)
!3137 = !{!3138, !3139, !3146, !3147}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3136, file: !43, line: 168, baseType: !1584, size: 192, align: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !3136, file: !43, line: 169, baseType: !3140, size: 128)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !3141, line: 31, size: 128, elements: !3142)
!3141 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!3142 = !{!3143, !3144, !3145}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !3140, file: !3141, line: 32, baseType: !1545, size: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !3140, file: !3141, line: 33, baseType: !7, size: 32, offset: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !3140, file: !3141, line: 34, baseType: !7, size: 32, offset: 96)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !3136, file: !43, line: 170, baseType: !973, size: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !3136, file: !43, line: 171, baseType: !913, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, scope: !3031, file: !43, line: 180, baseType: !3149, size: 256, offset: 1024)
!3149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3031, file: !43, line: 180, size: 256, elements: !3150)
!3150 = !{!3151, !3186}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !3149, file: !43, line: 184, baseType: !3152, size: 192)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3149, file: !43, line: 181, size: 192, elements: !3153)
!3153 = !{!3154, !3184}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !3152, file: !43, line: 182, baseType: !3155, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3157, line: 73, size: 448, elements: !3158)
!3157 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3158 = !{!3159, !3160, !3173, !3178, !3183}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3156, file: !3157, line: 74, baseType: !3026, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3156, file: !3157, line: 75, baseType: !3161, size: 64, offset: 64)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3157, line: 99, size: 704, elements: !3163)
!3163 = !{!3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3162, file: !3157, line: 100, baseType: !1502, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3162, file: !3157, line: 101, baseType: !1571, size: 32, offset: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3162, file: !3157, line: 102, baseType: !1571, size: 32, offset: 96)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3162, file: !3157, line: 105, baseType: !1020, offset: 128)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3162, file: !3157, line: 107, baseType: !320, size: 16, offset: 128)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3162, file: !3157, line: 109, baseType: !1563, size: 128, offset: 192)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3162, file: !3157, line: 110, baseType: !3155, size: 64, offset: 320)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3162, file: !3157, line: 111, baseType: !1410, size: 64, offset: 384)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3162, file: !3157, line: 113, baseType: !2817, size: 256, offset: 448)
!3173 = !DIDerivedType(tag: DW_TAG_member, scope: !3156, file: !3157, line: 83, baseType: !3174, size: 128, offset: 128)
!3174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3156, file: !3157, line: 83, size: 128, elements: !3175)
!3175 = !{!3176, !3177}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3174, file: !3157, line: 84, baseType: !919, size: 128)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3174, file: !3157, line: 85, baseType: !1776, size: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, scope: !3156, file: !3157, line: 87, baseType: !3179, size: 128, offset: 256)
!3179 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3156, file: !3157, line: 87, size: 128, elements: !3180)
!3180 = !{!3181, !3182}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3179, file: !3157, line: 88, baseType: !1414, size: 128)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3179, file: !3157, line: 89, baseType: !1145, size: 128, align: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3156, file: !3157, line: 92, baseType: !7, size: 32, offset: 384)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3152, file: !43, line: 183, baseType: !3185, size: 128, offset: 64)
!3185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 128, elements: !323)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3149, file: !43, line: 190, baseType: !3187, size: 256)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3149, file: !43, line: 186, size: 256, elements: !3188)
!3188 = !{!3189, !3190, !3191}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3187, file: !43, line: 187, baseType: !7, size: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3187, file: !43, line: 188, baseType: !919, size: 128, offset: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !3187, file: !43, line: 189, baseType: !3192, size: 64, offset: 192)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !43, line: 62, baseType: !3194)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{null, !3030, !3196}
!3196 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !2747, line: 58, baseType: !2184)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !3031, file: !43, line: 193, baseType: !2751, size: 64, offset: 1280)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3031, file: !43, line: 194, baseType: !2769, size: 64, offset: 1344)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !3031, file: !43, line: 200, baseType: !943, size: 64, offset: 1408)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !3031, file: !43, line: 202, baseType: !943, size: 64, offset: 1472)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !3031, file: !43, line: 212, baseType: !320, size: 16, offset: 1536)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !3031, file: !43, line: 218, baseType: !320, size: 16, offset: 1552)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !3031, file: !43, line: 221, baseType: !320, size: 16, offset: 1568)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !3031, file: !43, line: 229, baseType: !320, size: 16, offset: 1584)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3031, file: !43, line: 230, baseType: !320, size: 16, offset: 1600)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3031, file: !43, line: 232, baseType: !42, size: 32, offset: 1632)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3031, file: !43, line: 233, baseType: !2064, size: 32, offset: 1664)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3031, file: !43, line: 235, baseType: !7, size: 32, offset: 1696)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !3031, file: !43, line: 236, baseType: !902, size: 64, offset: 1728)
!3210 = !DIDerivedType(tag: DW_TAG_member, scope: !3031, file: !43, line: 238, baseType: !3211, size: 256, offset: 1792)
!3211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3031, file: !43, line: 238, size: 256, elements: !3212)
!3212 = !{!3213, !3242}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !3211, file: !43, line: 239, baseType: !3214, size: 256)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !3215, line: 23, size: 256, elements: !3216)
!3215 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!3216 = !{!3217, !3239, !3241}
!3217 = !DIDerivedType(tag: DW_TAG_member, scope: !3214, file: !3215, line: 24, baseType: !3218, size: 128)
!3218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3214, file: !3215, line: 24, size: 128, elements: !3219)
!3219 = !{!3220, !3232}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3218, file: !3215, line: 25, baseType: !3221, size: 128)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !3222, line: 58, size: 128, elements: !3223)
!3222 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!3223 = !{!3224, !3225, !3230, !3231}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3221, file: !3222, line: 59, baseType: !1139, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !3222, line: 60, baseType: !3226, size: 32, offset: 64)
!3226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !3222, line: 60, size: 32, elements: !3227)
!3227 = !{!3228, !3229}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !3226, file: !3222, line: 61, baseType: !7, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !3226, file: !3222, line: 62, baseType: !1571, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3221, file: !3222, line: 65, baseType: !1683, size: 16, offset: 96)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3221, file: !3222, line: 65, baseType: !1683, size: 16, offset: 112)
!3232 = !DIDerivedType(tag: DW_TAG_member, scope: !3218, file: !3215, line: 26, baseType: !3233, size: 128)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3218, file: !3215, line: 26, size: 128, elements: !3234)
!3234 = !{!3235, !3236, !3237, !3238}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3233, file: !3215, line: 27, baseType: !1139, size: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3233, file: !3215, line: 28, baseType: !7, size: 32, offset: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3233, file: !3215, line: 30, baseType: !1683, size: 16, offset: 96)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3233, file: !3215, line: 30, baseType: !1683, size: 16, offset: 112)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3214, file: !3215, line: 34, baseType: !3240, size: 64, offset: 128)
!3240 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !3215, line: 17, baseType: !1240)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3214, file: !3215, line: 35, baseType: !973, size: 64, offset: 192)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !3211, file: !43, line: 240, baseType: !943, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !3031, file: !43, line: 246, baseType: !3192, size: 64, offset: 2048)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !3031, file: !43, line: 247, baseType: !973, size: 64, offset: 2112)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !3027, file: !43, line: 401, baseType: !3246, size: 64, offset: 64)
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !49, line: 101, size: 4992, elements: !3248)
!3248 = !{!3249, !3361, !3362, !3363, !3364, !3365}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3247, file: !49, line: 103, baseType: !3250, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !49, line: 66, size: 2240, elements: !3252)
!3252 = !{!3253, !3254, !3336, !3337, !3338, !3351, !3352, !3353, !3355, !3356, !3360}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !3251, file: !49, line: 69, baseType: !1776, size: 64)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3251, file: !49, line: 72, baseType: !3255, size: 1408, offset: 64)
!3255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !49, line: 29, size: 1408, elements: !3256)
!3256 = !{!3257, !3261, !3265, !3269, !3273, !3277, !3281, !3285, !3290, !3294, !3298, !3304, !3308, !3309, !3313, !3317, !3321, !3325, !3326, !3330, !3331, !3335}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !3255, file: !49, line: 30, baseType: !3258, size: 64)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DISubroutineType(types: !3260)
!3260 = !{!913, !3026, !3250}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !3255, file: !49, line: 31, baseType: !3262, size: 64, offset: 64)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{null, !3246}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3255, file: !49, line: 32, baseType: !3266, size: 64, offset: 128)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!913, !3038, !7}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3255, file: !49, line: 33, baseType: !3270, size: 64, offset: 192)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{null, !3038, !7}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !3255, file: !49, line: 34, baseType: !3274, size: 64, offset: 256)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{null, !3038}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !3255, file: !49, line: 36, baseType: !3278, size: 64, offset: 320)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!1262, !3026, !3030, !2745}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !3255, file: !49, line: 37, baseType: !3282, size: 64, offset: 384)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!1262, !3038, !2745, !7}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !3255, file: !49, line: 38, baseType: !3286, size: 64, offset: 448)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!913, !3026, !3289, !2745}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !3255, file: !49, line: 39, baseType: !3291, size: 64, offset: 512)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{null, !3026, !3030, !48}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !3255, file: !49, line: 40, baseType: !3295, size: 64, offset: 576)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{null, !3026, !3030, !3030}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !3255, file: !49, line: 41, baseType: !3299, size: 64, offset: 640)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{null, !7, !3302}
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !49, line: 26, flags: DIFlagFwdDecl)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !3255, file: !49, line: 42, baseType: !3305, size: 64, offset: 704)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3306 = !DISubroutineType(types: !3307)
!3307 = !{null, !3030}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !3255, file: !49, line: 43, baseType: !3305, size: 64, offset: 768)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !3255, file: !49, line: 44, baseType: !3310, size: 64, offset: 832)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{null, !3038, !922, !1262}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !3255, file: !49, line: 45, baseType: !3314, size: 64, offset: 896)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 64)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{!3030, !3038}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !3255, file: !49, line: 46, baseType: !3318, size: 64, offset: 960)
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 64)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{!1262, !3038}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !3255, file: !49, line: 47, baseType: !3322, size: 64, offset: 1024)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{null, !3030, !943}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !3255, file: !49, line: 48, baseType: !3305, size: 64, offset: 1088)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !3255, file: !49, line: 49, baseType: !3327, size: 64, offset: 1152)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!3030, !3026, !3030}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !3255, file: !49, line: 50, baseType: !3327, size: 64, offset: 1216)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !3255, file: !49, line: 51, baseType: !3332, size: 64, offset: 1280)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = !DISubroutineType(types: !3334)
!3334 = !{null, !3155}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !3255, file: !49, line: 52, baseType: !3332, size: 64, offset: 1344)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !3251, file: !49, line: 74, baseType: !1102, size: 64, offset: 1472)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !3251, file: !49, line: 75, baseType: !1102, size: 64, offset: 1536)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !3251, file: !49, line: 76, baseType: !3339, size: 64, offset: 1600)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !49, line: 57, size: 256, elements: !3341)
!3341 = !{!3342, !3343, !3347}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3340, file: !49, line: 58, baseType: !1093, size: 128)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3340, file: !49, line: 59, baseType: !3344, size: 64, offset: 128)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!1088, !3246, !1061}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3340, file: !49, line: 60, baseType: !3348, size: 64, offset: 192)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{!1088, !3246, !948, !1102}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !3251, file: !49, line: 77, baseType: !948, size: 64, offset: 1664)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !3251, file: !49, line: 78, baseType: !948, size: 64, offset: 1728)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !3251, file: !49, line: 79, baseType: !3354, size: 32, offset: 1792)
!3354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !3251, file: !49, line: 80, baseType: !1405, size: 64, offset: 1856)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !3251, file: !49, line: 87, baseType: !3357, size: 176, offset: 1920)
!3357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 176, elements: !3358)
!3358 = !{!3359}
!3359 = !DISubrange(count: 22)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3251, file: !49, line: 88, baseType: !919, size: 128, offset: 2112)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !3247, file: !49, line: 104, baseType: !973, size: 64, offset: 64)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3247, file: !49, line: 105, baseType: !1007, size: 512, offset: 128)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3247, file: !49, line: 106, baseType: !1498, size: 192, offset: 640)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3247, file: !49, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3247, file: !49, line: 108, baseType: !3366, size: 4096, offset: 896)
!3366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 4096, elements: !404)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !3027, file: !43, line: 403, baseType: !2779, size: 128, offset: 128)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3027, file: !43, line: 405, baseType: !3369, size: 64, offset: 256)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !43, line: 43, flags: DIFlagFwdDecl)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !3027, file: !43, line: 406, baseType: !3372, size: 64, offset: 320)
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!3373 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !43, line: 42, flags: DIFlagFwdDecl)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !3027, file: !43, line: 408, baseType: !3375, size: 64, offset: 384)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3377)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !519, line: 290, size: 960, elements: !3378)
!3378 = !{!3379, !3389, !3390, !3394, !3398, !3402, !3406, !3407, !3411, !3412, !3459, !3463, !3464, !3465, !3466}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !3377, file: !519, line: 294, baseType: !3380, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!3196, !3038, !3383}
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3385)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !519, line: 277, size: 128, elements: !3386)
!3386 = !{!3387, !3388}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !3385, file: !519, line: 278, baseType: !3030, size: 64)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3385, file: !519, line: 279, baseType: !1262, size: 8, offset: 64)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !3377, file: !519, line: 304, baseType: !3274, size: 64, offset: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !3377, file: !519, line: 312, baseType: !3391, size: 64, offset: 128)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{!1262, !3026}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !3377, file: !519, line: 317, baseType: !3395, size: 64, offset: 192)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{null, !3026}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3377, file: !519, line: 322, baseType: !3399, size: 64, offset: 256)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 64)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{!55, !3030, !1262}
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3377, file: !519, line: 327, baseType: !3403, size: 64, offset: 320)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!3404 = !DISubroutineType(types: !3405)
!3405 = !{!913, !3038}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3377, file: !519, line: 332, baseType: !3305, size: 64, offset: 384)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3377, file: !519, line: 339, baseType: !3408, size: 64, offset: 448)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DISubroutineType(types: !3410)
!3410 = !{!913, !3038, !973, !7}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3377, file: !519, line: 343, baseType: !3270, size: 64, offset: 512)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !3377, file: !519, line: 352, baseType: !3413, size: 64, offset: 576)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!913, !3416, !3030, !7, !7}
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !519, line: 249, size: 2304, elements: !3418)
!3418 = !{!3419, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3454, !3455, !3457, !3458}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3417, file: !519, line: 250, baseType: !3420, size: 384)
!3420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3421, size: 384, elements: !308)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !519, line: 195, size: 128, elements: !3422)
!3422 = !{!3423, !3425, !3426}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !3421, file: !519, line: 196, baseType: !3424, size: 64)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !3421, file: !519, line: 197, baseType: !7, size: 32, offset: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !3421, file: !519, line: 198, baseType: !7, size: 32, offset: 96)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !3417, file: !519, line: 251, baseType: !7, size: 32, offset: 384)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3417, file: !519, line: 252, baseType: !3375, size: 64, offset: 448)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3417, file: !519, line: 253, baseType: !7, size: 32, offset: 512)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3417, file: !519, line: 254, baseType: !7, size: 32, offset: 544)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !3417, file: !519, line: 255, baseType: !7, size: 32, offset: 576)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3417, file: !519, line: 256, baseType: !7, size: 32, offset: 608)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3417, file: !519, line: 257, baseType: !913, size: 32, offset: 640)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3417, file: !519, line: 258, baseType: !7, size: 32, offset: 672)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3417, file: !519, line: 259, baseType: !7, size: 32, offset: 704)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3417, file: !519, line: 260, baseType: !973, size: 64, offset: 768)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !3417, file: !519, line: 261, baseType: !1571, size: 32, offset: 832)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !3417, file: !519, line: 263, baseType: !3439, size: 512, offset: 896)
!3439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !3062, line: 97, size: 512, elements: !3440)
!3440 = !{!3441, !3442, !3443, !3444, !3445, !3451, !3452, !3453}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !3439, file: !3062, line: 101, baseType: !3061, size: 192)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !3439, file: !3062, line: 109, baseType: !3424, size: 64, offset: 192)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !3439, file: !3062, line: 115, baseType: !7, size: 32, offset: 256)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !3439, file: !3062, line: 120, baseType: !1571, size: 32, offset: 288)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !3439, file: !3062, line: 125, baseType: !3446, size: 64, offset: 320)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !3062, line: 76, size: 192, elements: !3448)
!3448 = !{!3449, !3450}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !3447, file: !3062, line: 80, baseType: !1571, size: 32)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3447, file: !3062, line: 85, baseType: !2312, size: 128, offset: 64)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !3439, file: !3062, line: 130, baseType: !1571, size: 32, offset: 384)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !3439, file: !3062, line: 135, baseType: !1262, size: 8, offset: 416)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !3439, file: !3062, line: 141, baseType: !7, size: 32, offset: 448)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !3417, file: !519, line: 264, baseType: !3439, size: 512, offset: 1408)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3417, file: !519, line: 265, baseType: !3456, size: 64, offset: 1920)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !3417, file: !519, line: 267, baseType: !1498, size: 192, offset: 1984)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !3417, file: !519, line: 268, baseType: !919, size: 128, offset: 2176)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !3377, file: !519, line: 357, baseType: !3460, size: 64, offset: 640)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{null, !3416, !3030, !7}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !3377, file: !519, line: 363, baseType: !3305, size: 64, offset: 704)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !3377, file: !519, line: 369, baseType: !3305, size: 64, offset: 768)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !3377, file: !519, line: 374, baseType: !3391, size: 64, offset: 832)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !3377, file: !519, line: 380, baseType: !3467, size: 64, offset: 896)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!913, !3416}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !3027, file: !43, line: 411, baseType: !3035, size: 64, offset: 448)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3027, file: !43, line: 413, baseType: !7, size: 32, offset: 512)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !3027, file: !43, line: 416, baseType: !3473, size: 64, offset: 576)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3027, file: !43, line: 417, baseType: !7, size: 32, offset: 640)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !3027, file: !43, line: 419, baseType: !2870, size: 64, offset: 704)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !3027, file: !43, line: 425, baseType: !973, size: 64, offset: 768)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !3027, file: !43, line: 430, baseType: !902, size: 64, offset: 832)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !3027, file: !43, line: 436, baseType: !1571, size: 32, offset: 896)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3027, file: !43, line: 442, baseType: !913, size: 32, offset: 928)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !3027, file: !43, line: 447, baseType: !896, size: 32, offset: 960)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !3027, file: !43, line: 449, baseType: !1020, offset: 992)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3027, file: !43, line: 454, baseType: !1007, size: 512, offset: 1024)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !3027, file: !43, line: 459, baseType: !1013, size: 64, offset: 1536)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !3027, file: !43, line: 462, baseType: !3485, size: 128, offset: 1600)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !2753, line: 159, size: 128, elements: !3486)
!3486 = !{!3487, !3516, !3517, !3518, !3519}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3485, file: !2753, line: 160, baseType: !3488, size: 64)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3490)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !43, line: 1664, size: 320, elements: !3491)
!3491 = !{!3492, !3506, !3507, !3510, !3515}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3490, file: !43, line: 1665, baseType: !3493, size: 64)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !43, line: 1660, baseType: !3495)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!3196, !3497}
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !43, line: 1651, size: 320, elements: !3499)
!3499 = !{!3500, !3501, !3502, !3503, !3504, !3505}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3498, file: !43, line: 1652, baseType: !973, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3498, file: !43, line: 1653, baseType: !973, size: 64, offset: 64)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3498, file: !43, line: 1654, baseType: !1654, size: 64, offset: 128)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3498, file: !43, line: 1655, baseType: !7, size: 32, offset: 192)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3498, file: !43, line: 1656, baseType: !320, size: 16, offset: 224)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3498, file: !43, line: 1657, baseType: !948, size: 64, offset: 256)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3490, file: !43, line: 1666, baseType: !3493, size: 64, offset: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3490, file: !43, line: 1667, baseType: !3508, size: 64, offset: 128)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !43, line: 1661, baseType: !3306)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3490, file: !43, line: 1668, baseType: !3511, size: 64, offset: 192)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !43, line: 1662, baseType: !3513)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{null, !3030, !7}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3490, file: !43, line: 1669, baseType: !948, size: 64, offset: 256)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3485, file: !2753, line: 161, baseType: !165, size: 8, offset: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3485, file: !2753, line: 162, baseType: !165, size: 8, offset: 72)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3485, file: !2753, line: 163, baseType: !165, size: 8, offset: 80)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3485, file: !2753, line: 164, baseType: !165, size: 8, offset: 88)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3027, file: !43, line: 466, baseType: !1003, size: 64, offset: 1728)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !3027, file: !43, line: 467, baseType: !59, size: 32, offset: 1792)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !3027, file: !43, line: 468, baseType: !7, size: 32, offset: 1824)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !3027, file: !43, line: 474, baseType: !902, size: 64, offset: 1856)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !3027, file: !43, line: 476, baseType: !7, size: 32, offset: 1920)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !3027, file: !43, line: 477, baseType: !7, size: 32, offset: 1952)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !3027, file: !43, line: 484, baseType: !7, size: 32, offset: 1984)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !3027, file: !43, line: 485, baseType: !913, size: 32, offset: 2016)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !3027, file: !43, line: 487, baseType: !3529, size: 64, offset: 2048)
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!3530 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !43, line: 44, flags: DIFlagFwdDecl)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !3027, file: !43, line: 488, baseType: !3532, size: 5120, offset: 2112)
!3532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3533, size: 5120, elements: !247)
!3533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !2747, line: 540, size: 320, elements: !3534)
!3534 = !{!3535, !3536, !3537, !3538, !3539}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3533, file: !2747, line: 541, baseType: !943, size: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3533, file: !2747, line: 542, baseType: !943, size: 64, offset: 64)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3533, file: !2747, line: 543, baseType: !943, size: 64, offset: 128)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3533, file: !2747, line: 544, baseType: !268, size: 32, offset: 192)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3533, file: !2747, line: 545, baseType: !943, size: 64, offset: 256)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3027, file: !43, line: 490, baseType: !2929, size: 320, offset: 7232)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !3027, file: !43, line: 491, baseType: !2817, size: 256, offset: 7552)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !3027, file: !43, line: 493, baseType: !1571, size: 32, offset: 7808)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3027, file: !43, line: 495, baseType: !919, size: 128, offset: 7872)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !3027, file: !43, line: 502, baseType: !3545, size: 896, offset: 8000)
!3545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !43, line: 321, size: 896, elements: !3546)
!3546 = !{!3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3545, file: !43, line: 322, baseType: !902, size: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3545, file: !43, line: 323, baseType: !902, size: 64, offset: 64)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3545, file: !43, line: 324, baseType: !902, size: 64, offset: 128)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3545, file: !43, line: 326, baseType: !7, size: 32, offset: 192)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3545, file: !43, line: 327, baseType: !7, size: 32, offset: 224)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3545, file: !43, line: 328, baseType: !7, size: 32, offset: 256)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3545, file: !43, line: 329, baseType: !7, size: 32, offset: 288)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3545, file: !43, line: 330, baseType: !7, size: 32, offset: 320)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3545, file: !43, line: 331, baseType: !7, size: 32, offset: 352)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3545, file: !43, line: 332, baseType: !7, size: 32, offset: 384)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3545, file: !43, line: 333, baseType: !7, size: 32, offset: 416)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3545, file: !43, line: 334, baseType: !7, size: 32, offset: 448)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3545, file: !43, line: 335, baseType: !7, size: 32, offset: 480)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3545, file: !43, line: 336, baseType: !7, size: 32, offset: 512)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3545, file: !43, line: 337, baseType: !7, size: 32, offset: 544)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3545, file: !43, line: 338, baseType: !7, size: 32, offset: 576)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3545, file: !43, line: 339, baseType: !7, size: 32, offset: 608)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3545, file: !43, line: 340, baseType: !7, size: 32, offset: 640)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3545, file: !43, line: 341, baseType: !7, size: 32, offset: 672)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3545, file: !43, line: 342, baseType: !7, size: 32, offset: 704)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3545, file: !43, line: 344, baseType: !320, size: 16, offset: 736)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3545, file: !43, line: 345, baseType: !320, size: 16, offset: 752)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3545, file: !43, line: 346, baseType: !320, size: 16, offset: 768)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3545, file: !43, line: 348, baseType: !165, size: 8, offset: 784)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3545, file: !43, line: 349, baseType: !165, size: 8, offset: 792)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3545, file: !43, line: 350, baseType: !165, size: 8, offset: 800)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3545, file: !43, line: 351, baseType: !66, size: 32, offset: 832)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !3027, file: !43, line: 504, baseType: !7, size: 32, offset: 8896)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !3027, file: !43, line: 534, baseType: !7, size: 32, offset: 8928)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !3027, file: !43, line: 535, baseType: !7, size: 32, offset: 8960)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3027, file: !43, line: 536, baseType: !913, size: 32, offset: 8992)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !3027, file: !43, line: 537, baseType: !1498, size: 192, offset: 9024)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3027, file: !43, line: 544, baseType: !3057, size: 64, offset: 9216)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !3027, file: !43, line: 546, baseType: !919, size: 128, offset: 9280)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !3027, file: !43, line: 547, baseType: !1020, offset: 9408)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !3027, file: !43, line: 548, baseType: !2925, size: 704, offset: 9408)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3027, file: !43, line: 550, baseType: !1498, size: 192, offset: 10112)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !3027, file: !43, line: 551, baseType: !1498, size: 192, offset: 10304)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !3027, file: !43, line: 557, baseType: !919, size: 128, offset: 10496)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !3027, file: !43, line: 558, baseType: !1020, offset: 10624)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !3027, file: !43, line: 560, baseType: !913, size: 32, offset: 10624)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !3027, file: !43, line: 563, baseType: !3589, size: 256, offset: 10688)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3590, line: 18, size: 256, elements: !3591)
!3590 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3591 = !{!3592, !3593, !3594, !3595}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3589, file: !3590, line: 19, baseType: !1003, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3589, file: !3590, line: 20, baseType: !913, size: 32, offset: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3589, file: !3590, line: 21, baseType: !3026, size: 64, offset: 128)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3589, file: !3590, line: 22, baseType: !3596, size: 64, offset: 192)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3598)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3590, line: 10, size: 256, elements: !3599)
!3599 = !{!3600, !3641, !3645, !3649}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3598, file: !3590, line: 11, baseType: !3601, size: 64)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!913, !3604}
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3606, line: 22, size: 1280, elements: !3607)
!3606 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3607 = !{!3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3605, file: !3606, line: 23, baseType: !2276, size: 32)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3605, file: !3606, line: 24, baseType: !270, size: 32, offset: 32)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3605, file: !3606, line: 25, baseType: !270, size: 32, offset: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3605, file: !3606, line: 28, baseType: !270, size: 32, offset: 96)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3605, file: !3606, line: 29, baseType: !944, size: 64, offset: 128)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3605, file: !3606, line: 30, baseType: !944, size: 64, offset: 192)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3605, file: !3606, line: 31, baseType: !270, size: 32, offset: 256)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3605, file: !3606, line: 32, baseType: !270, size: 32, offset: 288)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3605, file: !3606, line: 33, baseType: !270, size: 32, offset: 320)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3605, file: !3606, line: 34, baseType: !270, size: 32, offset: 352)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3605, file: !3606, line: 35, baseType: !944, size: 64, offset: 384)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3605, file: !3606, line: 38, baseType: !270, size: 32, offset: 448)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3605, file: !3606, line: 40, baseType: !270, size: 32, offset: 480)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3605, file: !3606, line: 41, baseType: !270, size: 32, offset: 512)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3605, file: !3606, line: 42, baseType: !270, size: 32, offset: 544)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3605, file: !3606, line: 43, baseType: !944, size: 64, offset: 576)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3605, file: !3606, line: 44, baseType: !944, size: 64, offset: 640)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3605, file: !3606, line: 46, baseType: !270, size: 32, offset: 704)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3605, file: !3606, line: 47, baseType: !270, size: 32, offset: 736)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3605, file: !3606, line: 48, baseType: !944, size: 64, offset: 768)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3605, file: !3606, line: 49, baseType: !270, size: 32, offset: 832)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3605, file: !3606, line: 51, baseType: !270, size: 32, offset: 864)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3605, file: !3606, line: 52, baseType: !270, size: 32, offset: 896)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3605, file: !3606, line: 53, baseType: !270, size: 32, offset: 928)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3605, file: !3606, line: 54, baseType: !270, size: 32, offset: 960)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3605, file: !3606, line: 55, baseType: !270, size: 32, offset: 992)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3605, file: !3606, line: 56, baseType: !270, size: 32, offset: 1024)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3605, file: !3606, line: 57, baseType: !270, size: 32, offset: 1056)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3605, file: !3606, line: 58, baseType: !2276, size: 32, offset: 1088)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3605, file: !3606, line: 59, baseType: !2276, size: 32, offset: 1120)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3605, file: !3606, line: 60, baseType: !944, size: 64, offset: 1152)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3605, file: !3606, line: 61, baseType: !270, size: 32, offset: 1216)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3605, file: !3606, line: 63, baseType: !270, size: 32, offset: 1248)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3598, file: !3590, line: 12, baseType: !3642, size: 64, offset: 64)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{!913, !3030, !3604, !2953}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3598, file: !3590, line: 14, baseType: !3646, size: 64, offset: 128)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = !DISubroutineType(types: !3648)
!3648 = !{!913, !3030, !3604}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3598, file: !3590, line: 15, baseType: !3305, size: 64, offset: 192)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3027, file: !43, line: 570, baseType: !1145, size: 128, align: 64, offset: 10944)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !3027, file: !43, line: 571, baseType: !2312, size: 128, offset: 11072)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !3027, file: !43, line: 576, baseType: !1498, size: 192, offset: 11200)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !3027, file: !43, line: 578, baseType: !3416, size: 64, offset: 11392)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !3027, file: !43, line: 579, baseType: !919, size: 128, offset: 11456)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !3027, file: !43, line: 580, baseType: !3656, size: 2368, offset: 11584)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2742, line: 682, size: 2368, elements: !3657)
!3657 = !{!3658, !3659, !3660, !3681, !3682, !3683, !3684, !3685, !3686, !3687}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3656, file: !2742, line: 683, baseType: !1776, size: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3656, file: !2742, line: 684, baseType: !7, size: 32, offset: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3656, file: !2742, line: 686, baseType: !3661, size: 448, offset: 128)
!3661 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3662, line: 26, baseType: !3663)
!3662 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3662, line: 16, size: 448, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3668, !3669, !3670, !3675, !3680}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3663, file: !3662, line: 17, baseType: !1020)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3663, file: !3662, line: 18, baseType: !913, size: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3663, file: !3662, line: 19, baseType: !913, size: 32, offset: 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3663, file: !3662, line: 20, baseType: !1645, size: 64, offset: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3663, file: !3662, line: 22, baseType: !973, size: 64, offset: 128)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3663, file: !3662, line: 23, baseType: !3671, size: 64, offset: 192)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3662, line: 13, baseType: !3673)
!3673 = !DISubroutineType(types: !3674)
!3674 = !{!973, !896, !973}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3663, file: !3662, line: 24, baseType: !3676, size: 64, offset: 256)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3662, line: 14, baseType: !3678)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{null, !973, !973}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3663, file: !3662, line: 25, baseType: !2312, size: 128, offset: 320)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3656, file: !2742, line: 687, baseType: !3661, size: 448, offset: 576)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3656, file: !2742, line: 689, baseType: !3661, size: 448, offset: 1024)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3656, file: !2742, line: 690, baseType: !3661, size: 448, offset: 1472)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3656, file: !2742, line: 697, baseType: !1020, offset: 1920)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3656, file: !2742, line: 698, baseType: !2741, size: 128, offset: 1920)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3656, file: !2742, line: 699, baseType: !2817, size: 256, offset: 2048)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3656, file: !2742, line: 700, baseType: !2829, size: 64, offset: 2304)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !3027, file: !43, line: 582, baseType: !1162, size: 64, offset: 13952)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !3027, file: !43, line: 589, baseType: !1262, size: 8, offset: 14016)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3027, file: !43, line: 591, baseType: !1102, size: 64, offset: 14080)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !3027, file: !43, line: 594, baseType: !3692, size: 320, offset: 14144)
!3692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 320, elements: !282)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2752, file: !2753, line: 191, baseType: !973, size: 64, offset: 7168)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2752, file: !2753, line: 193, baseType: !913, size: 32, offset: 7232)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2752, file: !2753, line: 194, baseType: !902, size: 64, offset: 7296)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2752, file: !2753, line: 196, baseType: !1591, size: 256, offset: 7360)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2752, file: !2753, line: 197, baseType: !1013, size: 64, offset: 7616)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2752, file: !2753, line: 199, baseType: !3699, size: 64, offset: 7680)
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 64)
!3700 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !2753, line: 199, flags: DIFlagFwdDecl)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2752, file: !2753, line: 200, baseType: !1571, size: 32, offset: 7744)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2752, file: !2753, line: 201, baseType: !3703, size: 64, offset: 7808)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !2753, line: 156, flags: DIFlagFwdDecl)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2752, file: !2753, line: 203, baseType: !1007, size: 512, offset: 7872)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2752, file: !2753, line: 208, baseType: !913, size: 32, offset: 8384)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2752, file: !2753, line: 209, baseType: !3708, size: 64, offset: 8448)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !2753, line: 157, flags: DIFlagFwdDecl)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2752, file: !2753, line: 210, baseType: !3711, offset: 8512)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1421, line: 192, elements: !1034)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2746, file: !2747, line: 206, baseType: !7, size: 32, offset: 128)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2746, file: !2747, line: 210, baseType: !320, size: 16, offset: 160)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2746, file: !2747, line: 211, baseType: !320, size: 16, offset: 176)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2746, file: !2747, line: 212, baseType: !320, size: 16, offset: 192)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2746, file: !2747, line: 213, baseType: !3196, size: 8, offset: 208)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2746, file: !2747, line: 214, baseType: !2184, size: 8, offset: 216)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2746, file: !2747, line: 215, baseType: !1571, size: 32, offset: 224)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2746, file: !2747, line: 217, baseType: !3720, size: 192, offset: 256)
!3720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !3141, line: 37, size: 192, elements: !3721)
!3721 = !{!3722, !3723, !3724, !3725}
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3720, file: !3141, line: 38, baseType: !1654, size: 64)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3720, file: !3141, line: 40, baseType: !7, size: 32, offset: 64)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3720, file: !3141, line: 42, baseType: !7, size: 32, offset: 96)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3720, file: !3141, line: 44, baseType: !7, size: 32, offset: 128)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2746, file: !2747, line: 219, baseType: !3727, size: 64, offset: 448)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3728 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !2747, line: 19, baseType: !3729)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{null, !2745}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2746, file: !2747, line: 221, baseType: !973, size: 64, offset: 512)
!3732 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 240, baseType: !3733, size: 64, offset: 576)
!3733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 240, size: 64, elements: !3734)
!3734 = !{!3735}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3733, file: !2747, line: 242, baseType: !3736, size: 64)
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2742, line: 313, size: 832, elements: !3738)
!3738 = !{!3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3749}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3737, file: !2742, line: 314, baseType: !2745, size: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3737, file: !2742, line: 316, baseType: !3720, size: 192, offset: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3737, file: !2742, line: 318, baseType: !320, size: 16, offset: 256)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3737, file: !2742, line: 319, baseType: !320, size: 16, offset: 272)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3737, file: !2742, line: 320, baseType: !320, size: 16, offset: 288)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3737, file: !2742, line: 321, baseType: !320, size: 16, offset: 304)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3737, file: !2742, line: 323, baseType: !3720, size: 192, offset: 320)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3737, file: !2742, line: 325, baseType: !2817, size: 256, offset: 512)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3737, file: !2742, line: 327, baseType: !3748, size: 64, offset: 768)
!3748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3737, file: !2742, line: 328, baseType: !3750, offset: 832)
!3750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3140, elements: !2833)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2746, file: !2747, line: 246, baseType: !320, size: 16, offset: 640)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2746, file: !2747, line: 252, baseType: !320, size: 16, offset: 656)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2746, file: !2747, line: 254, baseType: !1571, size: 32, offset: 672)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2746, file: !2747, line: 256, baseType: !3748, size: 64, offset: 704)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2746, file: !2747, line: 258, baseType: !3756, size: 64, offset: 768)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2746, file: !2747, line: 265, baseType: !3750, offset: 832)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2741, file: !2742, line: 556, baseType: !2745, size: 64, offset: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2051, file: !2052, line: 1050, baseType: !3760, size: 64, offset: 10688)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !43, line: 1236, size: 320, elements: !3762)
!3762 = !{!3763, !3764, !3765, !3766, !3767}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3761, file: !43, line: 1237, baseType: !919, size: 128)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3761, file: !43, line: 1238, baseType: !919, size: 128, offset: 128)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3761, file: !43, line: 1239, baseType: !320, size: 16, offset: 256)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3761, file: !43, line: 1240, baseType: !1262, size: 8, offset: 272)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3761, file: !43, line: 1241, baseType: !1262, size: 8, offset: 280)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2051, file: !2052, line: 1054, baseType: !3769, size: 64, offset: 10752)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2052, line: 55, flags: DIFlagFwdDecl)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2051, file: !2052, line: 1056, baseType: !2870, size: 64, offset: 10816)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2051, file: !2052, line: 1058, baseType: !3161, size: 64, offset: 10880)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2051, file: !2052, line: 1061, baseType: !3774, size: 64, offset: 10944)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2052, line: 43, flags: DIFlagFwdDecl)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2051, file: !2052, line: 1064, baseType: !902, size: 64, offset: 11008)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2051, file: !2052, line: 1065, baseType: !3778, size: 64, offset: 11072)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2590, line: 14, baseType: !3780)
!3780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2590, line: 12, size: 384, elements: !3781)
!3781 = !{!3782}
!3782 = !DIDerivedType(tag: DW_TAG_member, scope: !3780, file: !2590, line: 13, baseType: !3783, size: 384)
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3780, file: !2590, line: 13, size: 384, elements: !3784)
!3784 = !{!3785, !3786, !3787, !3788}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3783, file: !2590, line: 13, baseType: !913, size: 32)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3783, file: !2590, line: 13, baseType: !913, size: 32, offset: 32)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3783, file: !2590, line: 13, baseType: !913, size: 32, offset: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3783, file: !2590, line: 13, baseType: !3789, size: 256, offset: 128)
!3789 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3790, line: 32, size: 256, elements: !3791)
!3790 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3791 = !{!3792, !3797, !3810, !3816, !3825, !3845, !3850}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3789, file: !3790, line: 37, baseType: !3793, size: 64)
!3793 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3789, file: !3790, line: 34, size: 64, elements: !3794)
!3794 = !{!3795, !3796}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3793, file: !3790, line: 35, baseType: !2291, size: 32)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3793, file: !3790, line: 36, baseType: !1213, size: 32, offset: 32)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3789, file: !3790, line: 45, baseType: !3798, size: 192)
!3798 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3789, file: !3790, line: 40, size: 192, elements: !3799)
!3799 = !{!3800, !3802, !3803, !3809}
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3798, file: !3790, line: 41, baseType: !3801, size: 32)
!3801 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1090, line: 95, baseType: !913)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3798, file: !3790, line: 42, baseType: !913, size: 32, offset: 32)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3798, file: !3790, line: 43, baseType: !3804, size: 64, offset: 64)
!3804 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3790, line: 11, baseType: !3805)
!3805 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3790, line: 8, size: 64, elements: !3806)
!3806 = !{!3807, !3808}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3805, file: !3790, line: 9, baseType: !913, size: 32)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3805, file: !3790, line: 10, baseType: !973, size: 64)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3798, file: !3790, line: 44, baseType: !913, size: 32, offset: 128)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3789, file: !3790, line: 52, baseType: !3811, size: 128)
!3811 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3789, file: !3790, line: 48, size: 128, elements: !3812)
!3812 = !{!3813, !3814, !3815}
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3811, file: !3790, line: 49, baseType: !2291, size: 32)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3811, file: !3790, line: 50, baseType: !1213, size: 32, offset: 32)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3811, file: !3790, line: 51, baseType: !3804, size: 64, offset: 64)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3789, file: !3790, line: 61, baseType: !3817, size: 256)
!3817 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3789, file: !3790, line: 55, size: 256, elements: !3818)
!3818 = !{!3819, !3820, !3821, !3822, !3824}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3817, file: !3790, line: 56, baseType: !2291, size: 32)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3817, file: !3790, line: 57, baseType: !1213, size: 32, offset: 32)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3817, file: !3790, line: 58, baseType: !913, size: 32, offset: 64)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3817, file: !3790, line: 59, baseType: !3823, size: 64, offset: 128)
!3823 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1090, line: 94, baseType: !1091)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3817, file: !3790, line: 60, baseType: !3823, size: 64, offset: 192)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3789, file: !3790, line: 95, baseType: !3826, size: 256)
!3826 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3789, file: !3790, line: 64, size: 256, elements: !3827)
!3827 = !{!3828, !3829}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3826, file: !3790, line: 65, baseType: !973, size: 64)
!3829 = !DIDerivedType(tag: DW_TAG_member, scope: !3826, file: !3790, line: 77, baseType: !3830, size: 192, offset: 64)
!3830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3826, file: !3790, line: 77, size: 192, elements: !3831)
!3831 = !{!3832, !3833, !3840}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3830, file: !3790, line: 82, baseType: !2039, size: 16)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3830, file: !3790, line: 88, baseType: !3834, size: 192)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3830, file: !3790, line: 84, size: 192, elements: !3835)
!3835 = !{!3836, !3838, !3839}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3834, file: !3790, line: 85, baseType: !3837, size: 64)
!3837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 64, elements: !296)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3834, file: !3790, line: 86, baseType: !973, size: 64, offset: 64)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3834, file: !3790, line: 87, baseType: !973, size: 64, offset: 128)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3830, file: !3790, line: 93, baseType: !3841, size: 96)
!3841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3830, file: !3790, line: 90, size: 96, elements: !3842)
!3842 = !{!3843, !3844}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3841, file: !3790, line: 91, baseType: !3837, size: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3841, file: !3790, line: 92, baseType: !270, size: 32, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3789, file: !3790, line: 101, baseType: !3846, size: 128)
!3846 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3789, file: !3790, line: 98, size: 128, elements: !3847)
!3847 = !{!3848, !3849}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3846, file: !3790, line: 99, baseType: !862, size: 64)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3846, file: !3790, line: 100, baseType: !913, size: 32, offset: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3789, file: !3790, line: 108, baseType: !3851, size: 128)
!3851 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3789, file: !3790, line: 104, size: 128, elements: !3852)
!3852 = !{!3853, !3854, !3855}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3851, file: !3790, line: 105, baseType: !973, size: 64)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3851, file: !3790, line: 106, baseType: !913, size: 32, offset: 64)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3851, file: !3790, line: 107, baseType: !7, size: 32, offset: 96)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2051, file: !2052, line: 1067, baseType: !2662, offset: 11136)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2051, file: !2052, line: 1099, baseType: !3858, size: 64, offset: 11136)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2052, line: 56, flags: DIFlagFwdDecl)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2051, file: !2052, line: 1103, baseType: !919, size: 128, offset: 11200)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2051, file: !2052, line: 1104, baseType: !3862, size: 64, offset: 11328)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2052, line: 46, flags: DIFlagFwdDecl)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2051, file: !2052, line: 1105, baseType: !1498, size: 192, offset: 11392)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2051, file: !2052, line: 1106, baseType: !7, size: 32, offset: 11584)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2051, file: !2052, line: 1109, baseType: !3867, size: 128, offset: 11648)
!3867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3868, size: 128, elements: !323)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2052, line: 51, flags: DIFlagFwdDecl)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2051, file: !2052, line: 1110, baseType: !1498, size: 192, offset: 11776)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2051, file: !2052, line: 1111, baseType: !919, size: 128, offset: 11968)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2051, file: !2052, line: 1173, baseType: !3873, size: 64, offset: 12096)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3875, line: 62, size: 256, align: 256, elements: !3876)
!3875 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3876 = !{!3877, !3878, !3879, !3884}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3874, file: !3875, line: 75, baseType: !270, size: 32)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3874, file: !3875, line: 90, baseType: !270, size: 32, offset: 32)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3874, file: !3875, line: 124, baseType: !3880, size: 64, offset: 64)
!3880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3874, file: !3875, line: 109, size: 64, elements: !3881)
!3881 = !{!3882, !3883}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3880, file: !3875, line: 110, baseType: !944, size: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3880, file: !3875, line: 112, baseType: !944, size: 64)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3874, file: !3875, line: 144, baseType: !270, size: 32, offset: 128)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2051, file: !2052, line: 1174, baseType: !268, size: 32, offset: 12160)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2051, file: !2052, line: 1179, baseType: !902, size: 64, offset: 12224)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2051, file: !2052, line: 1182, baseType: !3888, size: 128, offset: 12288)
!3888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1993, line: 76, size: 128, elements: !3889)
!3889 = !{!3890, !3895, !3896}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3888, file: !1993, line: 85, baseType: !3891, size: 64)
!3891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3892, line: 7, size: 64, elements: !3893)
!3892 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3893 = !{!3894}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3891, file: !3892, line: 12, baseType: !2199, size: 64)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3888, file: !1993, line: 88, baseType: !1262, size: 8, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3888, file: !1993, line: 95, baseType: !1262, size: 8, offset: 72)
!3897 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !2052, line: 1184, baseType: !3898, size: 128, offset: 12416)
!3898 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !2052, line: 1184, size: 128, elements: !3899)
!3899 = !{!3900, !3901}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3898, file: !2052, line: 1185, baseType: !2064, size: 32)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3898, file: !2052, line: 1186, baseType: !1145, size: 128, align: 64)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2051, file: !2052, line: 1190, baseType: !3903, size: 64, offset: 12544)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !2052, line: 53, flags: DIFlagFwdDecl)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2051, file: !2052, line: 1192, baseType: !3906, size: 128, offset: 12608)
!3906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1993, line: 64, size: 128, elements: !3907)
!3907 = !{!3908, !3909, !3910}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3906, file: !1993, line: 65, baseType: !1545, size: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3906, file: !1993, line: 67, baseType: !270, size: 32, offset: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3906, file: !1993, line: 68, baseType: !270, size: 32, offset: 96)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2051, file: !2052, line: 1206, baseType: !913, size: 32, offset: 12736)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2051, file: !2052, line: 1207, baseType: !913, size: 32, offset: 12768)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2051, file: !2052, line: 1209, baseType: !902, size: 64, offset: 12800)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2051, file: !2052, line: 1219, baseType: !943, size: 64, offset: 12864)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2051, file: !2052, line: 1220, baseType: !943, size: 64, offset: 12928)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2051, file: !2052, line: 1317, baseType: !913, size: 32, offset: 12992)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2051, file: !2052, line: 1319, baseType: !2050, size: 64, offset: 13056)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2051, file: !2052, line: 1322, baseType: !3919, size: 64, offset: 13120)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3921, line: 56, size: 512, elements: !3922)
!3921 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3922 = !{!3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3920, file: !3921, line: 57, baseType: !3919, size: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3920, file: !3921, line: 58, baseType: !973, size: 64, offset: 64)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3920, file: !3921, line: 59, baseType: !902, size: 64, offset: 128)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3920, file: !3921, line: 60, baseType: !902, size: 64, offset: 192)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3920, file: !3921, line: 61, baseType: !1644, size: 64, offset: 256)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3920, file: !3921, line: 62, baseType: !7, size: 32, offset: 320)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3920, file: !3921, line: 63, baseType: !942, size: 64, offset: 384)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3920, file: !3921, line: 64, baseType: !3931, size: 64, offset: 448)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2051, file: !2052, line: 1326, baseType: !2064, size: 32, offset: 13184)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2051, file: !2052, line: 1342, baseType: !973, size: 64, offset: 13248)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2051, file: !2052, line: 1343, baseType: !944, size: 64, offset: 13312)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2051, file: !2052, line: 1344, baseType: !943, size: 64, offset: 13376)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2051, file: !2052, line: 1345, baseType: !944, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2051, file: !2052, line: 1346, baseType: !944, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2051, file: !2052, line: 1347, baseType: !944, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2051, file: !2052, line: 1348, baseType: !1145, size: 128, align: 64, offset: 13504)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2051, file: !2052, line: 1358, baseType: !3942, size: 34816, offset: 13824)
!3942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3943, line: 485, size: 34816, elements: !3944)
!3943 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3944 = !{!3945, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3974, !3975, !3976, !3977, !3978, !3979, !3982, !3983, !3984}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3942, file: !3943, line: 487, baseType: !3946, size: 192)
!3946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3947, size: 192, elements: !308)
!3947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3948, line: 16, size: 64, elements: !3949)
!3948 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3949 = !{!3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3947, file: !3948, line: 17, baseType: !1683, size: 16)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3947, file: !3948, line: 18, baseType: !1683, size: 16, offset: 16)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3947, file: !3948, line: 19, baseType: !1683, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3947, file: !3948, line: 19, baseType: !1683, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3947, file: !3948, line: 19, baseType: !1683, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3947, file: !3948, line: 19, baseType: !1683, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3947, file: !3948, line: 19, baseType: !1683, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3947, file: !3948, line: 20, baseType: !1683, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3947, file: !3948, line: 20, baseType: !1683, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3947, file: !3948, line: 20, baseType: !1683, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3947, file: !3948, line: 20, baseType: !1683, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3947, file: !3948, line: 20, baseType: !1683, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3947, file: !3948, line: 20, baseType: !1683, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3942, file: !3943, line: 491, baseType: !902, size: 64, offset: 192)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3942, file: !3943, line: 495, baseType: !320, size: 16, offset: 256)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3942, file: !3943, line: 496, baseType: !320, size: 16, offset: 272)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3942, file: !3943, line: 497, baseType: !320, size: 16, offset: 288)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3942, file: !3943, line: 498, baseType: !320, size: 16, offset: 304)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3942, file: !3943, line: 502, baseType: !902, size: 64, offset: 320)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3942, file: !3943, line: 503, baseType: !902, size: 64, offset: 384)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3942, file: !3943, line: 514, baseType: !3971, size: 256, offset: 448)
!3971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3972, size: 256, elements: !243)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3943, line: 483, flags: DIFlagFwdDecl)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3942, file: !3943, line: 516, baseType: !902, size: 64, offset: 704)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3942, file: !3943, line: 518, baseType: !902, size: 64, offset: 768)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3942, file: !3943, line: 520, baseType: !902, size: 64, offset: 832)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3942, file: !3943, line: 521, baseType: !902, size: 64, offset: 896)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3942, file: !3943, line: 522, baseType: !902, size: 64, offset: 960)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3942, file: !3943, line: 528, baseType: !3980, size: 64, offset: 1024)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3943, line: 10, flags: DIFlagFwdDecl)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3942, file: !3943, line: 535, baseType: !902, size: 64, offset: 1088)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3942, file: !3943, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3942, file: !3943, line: 540, baseType: !3985, size: 33280, offset: 1536)
!3985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3986, line: 317, size: 33280, elements: !3987)
!3986 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3987 = !{!3988, !3989, !3990}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3985, file: !3986, line: 330, baseType: !7, size: 32)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3985, file: !3986, line: 337, baseType: !902, size: 64, offset: 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3985, file: !3986, line: 348, baseType: !3991, size: 32768, offset: 512)
!3991 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3986, line: 304, size: 32768, elements: !3992)
!3992 = !{!3993, !4008, !4043, !4093, !4106}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3991, file: !3986, line: 305, baseType: !3994, size: 896)
!3994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3986, line: 12, size: 896, elements: !3995)
!3995 = !{!3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4007}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3994, file: !3986, line: 13, baseType: !268, size: 32)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3994, file: !3986, line: 14, baseType: !268, size: 32, offset: 32)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3994, file: !3986, line: 15, baseType: !268, size: 32, offset: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3994, file: !3986, line: 16, baseType: !268, size: 32, offset: 96)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3994, file: !3986, line: 17, baseType: !268, size: 32, offset: 128)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3994, file: !3986, line: 18, baseType: !268, size: 32, offset: 160)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3994, file: !3986, line: 19, baseType: !268, size: 32, offset: 192)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3994, file: !3986, line: 22, baseType: !4004, size: 640, offset: 224)
!4004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 640, elements: !4005)
!4005 = !{!4006}
!4006 = !DISubrange(count: 20)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3994, file: !3986, line: 25, baseType: !268, size: 32, offset: 864)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3991, file: !3986, line: 306, baseType: !4009, size: 4096, align: 128)
!4009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3986, line: 34, size: 4096, align: 128, elements: !4010)
!4010 = !{!4011, !4012, !4013, !4014, !4015, !4030, !4031, !4032, !4034, !4036, !4038}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4009, file: !3986, line: 35, baseType: !1683, size: 16)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4009, file: !3986, line: 36, baseType: !1683, size: 16, offset: 16)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4009, file: !3986, line: 37, baseType: !1683, size: 16, offset: 32)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4009, file: !3986, line: 38, baseType: !1683, size: 16, offset: 48)
!4015 = !DIDerivedType(tag: DW_TAG_member, scope: !4009, file: !3986, line: 39, baseType: !4016, size: 128, offset: 64)
!4016 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4009, file: !3986, line: 39, size: 128, elements: !4017)
!4017 = !{!4018, !4023}
!4018 = !DIDerivedType(tag: DW_TAG_member, scope: !4016, file: !3986, line: 40, baseType: !4019, size: 128)
!4019 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4016, file: !3986, line: 40, size: 128, elements: !4020)
!4020 = !{!4021, !4022}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4019, file: !3986, line: 41, baseType: !943, size: 64)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4019, file: !3986, line: 42, baseType: !943, size: 64, offset: 64)
!4023 = !DIDerivedType(tag: DW_TAG_member, scope: !4016, file: !3986, line: 44, baseType: !4024, size: 128)
!4024 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4016, file: !3986, line: 44, size: 128, elements: !4025)
!4025 = !{!4026, !4027, !4028, !4029}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4024, file: !3986, line: 45, baseType: !268, size: 32)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4024, file: !3986, line: 46, baseType: !268, size: 32, offset: 32)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4024, file: !3986, line: 47, baseType: !268, size: 32, offset: 64)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4024, file: !3986, line: 48, baseType: !268, size: 32, offset: 96)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4009, file: !3986, line: 51, baseType: !268, size: 32, offset: 192)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4009, file: !3986, line: 52, baseType: !268, size: 32, offset: 224)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4009, file: !3986, line: 55, baseType: !4033, size: 1024, offset: 256)
!4033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 1024, elements: !420)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4009, file: !3986, line: 58, baseType: !4035, size: 2048, offset: 1280)
!4035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 2048, elements: !404)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4009, file: !3986, line: 60, baseType: !4037, size: 384, offset: 3328)
!4037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 384, elements: !400)
!4038 = !DIDerivedType(tag: DW_TAG_member, scope: !4009, file: !3986, line: 62, baseType: !4039, size: 384, offset: 3712)
!4039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4009, file: !3986, line: 62, size: 384, elements: !4040)
!4040 = !{!4041, !4042}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4039, file: !3986, line: 63, baseType: !4037, size: 384)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4039, file: !3986, line: 64, baseType: !4037, size: 384)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3991, file: !3986, line: 307, baseType: !4044, size: 1088)
!4044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3986, line: 79, size: 1088, elements: !4045)
!4045 = !{!4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4092}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4044, file: !3986, line: 80, baseType: !268, size: 32)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4044, file: !3986, line: 81, baseType: !268, size: 32, offset: 32)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4044, file: !3986, line: 82, baseType: !268, size: 32, offset: 64)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4044, file: !3986, line: 83, baseType: !268, size: 32, offset: 96)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4044, file: !3986, line: 84, baseType: !268, size: 32, offset: 128)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4044, file: !3986, line: 85, baseType: !268, size: 32, offset: 160)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4044, file: !3986, line: 86, baseType: !268, size: 32, offset: 192)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4044, file: !3986, line: 88, baseType: !4004, size: 640, offset: 224)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4044, file: !3986, line: 89, baseType: !2184, size: 8, offset: 864)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4044, file: !3986, line: 90, baseType: !2184, size: 8, offset: 872)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4044, file: !3986, line: 91, baseType: !2184, size: 8, offset: 880)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4044, file: !3986, line: 92, baseType: !2184, size: 8, offset: 888)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4044, file: !3986, line: 93, baseType: !2184, size: 8, offset: 896)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4044, file: !3986, line: 94, baseType: !2184, size: 8, offset: 904)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4044, file: !3986, line: 95, baseType: !4061, size: 64, offset: 960)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4063, line: 11, size: 128, elements: !4064)
!4063 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4064 = !{!4065, !4066}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4062, file: !4063, line: 12, baseType: !862, size: 64)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4062, file: !4063, line: 13, baseType: !4067, size: 64, offset: 64)
!4067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4068, size: 64)
!4068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4069, line: 56, size: 1344, elements: !4070)
!4069 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4070 = !{!4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4068, file: !4069, line: 61, baseType: !902, size: 64)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4068, file: !4069, line: 62, baseType: !902, size: 64, offset: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4068, file: !4069, line: 63, baseType: !902, size: 64, offset: 128)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4068, file: !4069, line: 64, baseType: !902, size: 64, offset: 192)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4068, file: !4069, line: 65, baseType: !902, size: 64, offset: 256)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4068, file: !4069, line: 66, baseType: !902, size: 64, offset: 320)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4068, file: !4069, line: 68, baseType: !902, size: 64, offset: 384)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4068, file: !4069, line: 69, baseType: !902, size: 64, offset: 448)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4068, file: !4069, line: 70, baseType: !902, size: 64, offset: 512)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4068, file: !4069, line: 71, baseType: !902, size: 64, offset: 576)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4068, file: !4069, line: 72, baseType: !902, size: 64, offset: 640)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4068, file: !4069, line: 73, baseType: !902, size: 64, offset: 704)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4068, file: !4069, line: 74, baseType: !902, size: 64, offset: 768)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4068, file: !4069, line: 75, baseType: !902, size: 64, offset: 832)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4068, file: !4069, line: 76, baseType: !902, size: 64, offset: 896)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4068, file: !4069, line: 81, baseType: !902, size: 64, offset: 960)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4068, file: !4069, line: 83, baseType: !902, size: 64, offset: 1024)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4068, file: !4069, line: 84, baseType: !902, size: 64, offset: 1088)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4068, file: !4069, line: 85, baseType: !902, size: 64, offset: 1152)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4068, file: !4069, line: 86, baseType: !902, size: 64, offset: 1216)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4068, file: !4069, line: 87, baseType: !902, size: 64, offset: 1280)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4044, file: !3986, line: 96, baseType: !268, size: 32, offset: 1024)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3991, file: !3986, line: 308, baseType: !4094, size: 4608, align: 512)
!4094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3986, line: 289, size: 4608, align: 512, elements: !4095)
!4095 = !{!4096, !4097, !4104}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4094, file: !3986, line: 290, baseType: !4009, size: 4096, align: 128)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4094, file: !3986, line: 291, baseType: !4098, size: 512, offset: 4096)
!4098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3986, line: 268, size: 512, elements: !4099)
!4099 = !{!4100, !4101, !4102}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4098, file: !3986, line: 269, baseType: !943, size: 64)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4098, file: !3986, line: 270, baseType: !943, size: 64, offset: 64)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4098, file: !3986, line: 271, baseType: !4103, size: 384, offset: 128)
!4103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 384, elements: !265)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4094, file: !3986, line: 292, baseType: !4105, offset: 4608)
!4105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, elements: !2549)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3991, file: !3986, line: 309, baseType: !4107, size: 32768)
!4107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 32768, elements: !4108)
!4108 = !{!4109}
!4109 = !DISubrange(count: 4096)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2047, file: !1547, line: 378, baseType: !4111, size: 64, offset: 64)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2043, file: !1547, line: 384, baseType: !2332, size: 192, offset: 192)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1820, file: !1547, line: 500, baseType: !1020, offset: 6656)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1820, file: !1547, line: 501, baseType: !4115, size: 64, offset: 6656)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4116, size: 64)
!4116 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1547, line: 387, flags: DIFlagFwdDecl)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1820, file: !1547, line: 516, baseType: !2539, size: 64, offset: 6720)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1820, file: !1547, line: 519, baseType: !1132, size: 64, offset: 6784)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1820, file: !1547, line: 521, baseType: !4120, size: 64, offset: 6848)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 64)
!4121 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1547, line: 521, flags: DIFlagFwdDecl)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1820, file: !1547, line: 545, baseType: !1571, size: 32, offset: 6912)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1820, file: !1547, line: 548, baseType: !1262, size: 8, offset: 6944)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1820, file: !1547, line: 550, baseType: !4125, offset: 6952)
!4125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4126, line: 142, elements: !1034)
!4126 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1820, file: !1547, line: 554, baseType: !2817, size: 256, offset: 6976)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1820, file: !1547, line: 557, baseType: !268, size: 32, offset: 7232)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1817, file: !1547, line: 565, baseType: !4130, offset: 7296)
!4130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, elements: !2833)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1813, file: !1547, line: 151, baseType: !1571, size: 32)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1805, file: !1547, line: 156, baseType: !1020, offset: 256)
!4133 = !DIDerivedType(tag: DW_TAG_member, scope: !1551, file: !1547, line: 159, baseType: !4134, size: 128)
!4134 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1551, file: !1547, line: 159, size: 128, elements: !4135)
!4135 = !{!4136, !4180}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4134, file: !1547, line: 161, baseType: !4137, size: 64)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !72, line: 110, size: 1152, elements: !4139)
!4139 = !{!4140, !4150, !4151, !4152, !4153, !4154, !4155, !4167, !4168, !4169}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4138, file: !72, line: 111, baseType: !4141, size: 384)
!4141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !72, line: 19, size: 384, elements: !4142)
!4142 = !{!4143, !4145, !4146, !4147, !4148, !4149}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4141, file: !72, line: 20, baseType: !4144, size: 64)
!4144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4141, file: !72, line: 21, baseType: !4144, size: 64, offset: 64)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4141, file: !72, line: 22, baseType: !4144, size: 64, offset: 128)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4141, file: !72, line: 23, baseType: !902, size: 64, offset: 192)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4141, file: !72, line: 24, baseType: !902, size: 64, offset: 256)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4141, file: !72, line: 25, baseType: !902, size: 64, offset: 320)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4138, file: !72, line: 112, baseType: !2793, size: 64, offset: 384)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4138, file: !72, line: 113, baseType: !2779, size: 128, offset: 448)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4138, file: !72, line: 114, baseType: !2332, size: 192, offset: 576)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4138, file: !72, line: 115, baseType: !71, size: 32, offset: 768)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4138, file: !72, line: 116, baseType: !7, size: 32, offset: 800)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4138, file: !72, line: 117, baseType: !4156, size: 64, offset: 832)
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4158)
!4158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !72, line: 67, size: 256, elements: !4159)
!4159 = !{!4160, !4161, !4165, !4166}
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4158, file: !72, line: 73, baseType: !1664, size: 64)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4158, file: !72, line: 78, baseType: !4162, size: 64, offset: 64)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{null, !4137}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4158, file: !72, line: 83, baseType: !4162, size: 64, offset: 128)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4158, file: !72, line: 89, baseType: !1869, size: 64, offset: 192)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4138, file: !72, line: 118, baseType: !973, size: 64, offset: 896)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4138, file: !72, line: 119, baseType: !913, size: 32, offset: 960)
!4169 = !DIDerivedType(tag: DW_TAG_member, scope: !4138, file: !72, line: 120, baseType: !4170, size: 128, offset: 1024)
!4170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4138, file: !72, line: 120, size: 128, elements: !4171)
!4171 = !{!4172, !4178}
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4170, file: !72, line: 121, baseType: !4173, size: 128)
!4173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4174, line: 6, size: 128, elements: !4175)
!4174 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4175 = !{!4176, !4177}
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4173, file: !4174, line: 7, baseType: !943, size: 64)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4173, file: !4174, line: 8, baseType: !943, size: 64, offset: 64)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4170, file: !72, line: 122, baseType: !4179)
!4179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4173, elements: !2549)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4134, file: !1547, line: 162, baseType: !973, size: 64, offset: 64)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1551, file: !1547, line: 176, baseType: !1145, size: 128, align: 64)
!4182 = !DIDerivedType(tag: DW_TAG_member, scope: !1546, file: !1547, line: 179, baseType: !4183, size: 32, offset: 384)
!4183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1546, file: !1547, line: 179, size: 32, elements: !4184)
!4184 = !{!4185, !4186, !4187, !4188}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4183, file: !1547, line: 184, baseType: !1571, size: 32)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4183, file: !1547, line: 192, baseType: !7, size: 32)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4183, file: !1547, line: 194, baseType: !7, size: 32)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4183, file: !1547, line: 195, baseType: !913, size: 32)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1546, file: !1547, line: 199, baseType: !1571, size: 32, offset: 416)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1432, file: !85, line: 1964, baseType: !4191, size: 64, offset: 1344)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!862, !1371, !4194}
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4196, line: 12, size: 256, elements: !4197)
!4196 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4197 = !{!4198, !4199, !4200, !4201, !4202}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4195, file: !4196, line: 13, baseType: !896, size: 32)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4195, file: !4196, line: 16, baseType: !913, size: 32, offset: 32)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4195, file: !4196, line: 23, baseType: !902, size: 64, offset: 64)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4195, file: !4196, line: 30, baseType: !902, size: 64, offset: 128)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4195, file: !4196, line: 33, baseType: !4203, size: 64, offset: 192)
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4204, size: 64)
!4204 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1547, line: 27, flags: DIFlagFwdDecl)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1432, file: !85, line: 1966, baseType: !4191, size: 64, offset: 1408)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1372, file: !85, line: 1424, baseType: !4207, size: 64, offset: 448)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4209)
!4209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !79, line: 322, size: 704, elements: !4210)
!4210 = !{!4211, !4257, !4261, !4265, !4266, !4267, !4268, !4269, !4274, !4279, !4283}
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4209, file: !79, line: 323, baseType: !4212, size: 64)
!4212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 64)
!4213 = !DISubroutineType(types: !4214)
!4214 = !{!913, !4215}
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !79, line: 294, size: 1600, elements: !4217)
!4217 = !{!4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4242, !4243, !4244}
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4216, file: !79, line: 295, baseType: !1414, size: 128)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4216, file: !79, line: 296, baseType: !919, size: 128, offset: 128)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4216, file: !79, line: 297, baseType: !919, size: 128, offset: 256)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4216, file: !79, line: 298, baseType: !919, size: 128, offset: 384)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4216, file: !79, line: 299, baseType: !1498, size: 192, offset: 512)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4216, file: !79, line: 300, baseType: !1020, offset: 704)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4216, file: !79, line: 301, baseType: !1571, size: 32, offset: 704)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4216, file: !79, line: 302, baseType: !1371, size: 64, offset: 768)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4216, file: !79, line: 303, baseType: !4227, size: 64, offset: 832)
!4227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !79, line: 68, size: 64, elements: !4228)
!4228 = !{!4229, !4241}
!4229 = !DIDerivedType(tag: DW_TAG_member, scope: !4227, file: !79, line: 69, baseType: !4230, size: 32)
!4230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4227, file: !79, line: 69, size: 32, elements: !4231)
!4231 = !{!4232, !4233, !4234}
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4230, file: !79, line: 70, baseType: !1207, size: 32)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4230, file: !79, line: 71, baseType: !1215, size: 32)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4230, file: !79, line: 72, baseType: !4235, size: 32)
!4235 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4236, line: 24, baseType: !4237)
!4236 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4236, line: 22, size: 32, elements: !4238)
!4238 = !{!4239}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4237, file: !4236, line: 23, baseType: !4240, size: 32)
!4240 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4236, line: 20, baseType: !1213)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4227, file: !79, line: 74, baseType: !78, size: 32, offset: 32)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4216, file: !79, line: 304, baseType: !1303, size: 64, offset: 896)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4216, file: !79, line: 305, baseType: !902, size: 64, offset: 960)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4216, file: !79, line: 306, baseType: !4245, size: 576, offset: 1024)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !79, line: 205, size: 576, elements: !4246)
!4246 = !{!4247, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4245, file: !79, line: 206, baseType: !4248, size: 64)
!4248 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !79, line: 66, baseType: !1305)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4245, file: !79, line: 207, baseType: !4248, size: 64, offset: 64)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4245, file: !79, line: 208, baseType: !4248, size: 64, offset: 128)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4245, file: !79, line: 209, baseType: !4248, size: 64, offset: 192)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4245, file: !79, line: 210, baseType: !4248, size: 64, offset: 256)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4245, file: !79, line: 211, baseType: !4248, size: 64, offset: 320)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4245, file: !79, line: 212, baseType: !4248, size: 64, offset: 384)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4245, file: !79, line: 213, baseType: !1311, size: 64, offset: 448)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4245, file: !79, line: 214, baseType: !1311, size: 64, offset: 512)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4209, file: !79, line: 324, baseType: !4258, size: 64, offset: 64)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 64)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{!4215, !1371, !913}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4209, file: !79, line: 325, baseType: !4262, size: 64, offset: 128)
!4262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4263, size: 64)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{null, !4215}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4209, file: !79, line: 326, baseType: !4212, size: 64, offset: 192)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4209, file: !79, line: 327, baseType: !4212, size: 64, offset: 256)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4209, file: !79, line: 328, baseType: !4212, size: 64, offset: 320)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4209, file: !79, line: 329, baseType: !1460, size: 64, offset: 384)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4209, file: !79, line: 332, baseType: !4270, size: 64, offset: 448)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{!4273, !1201}
!4273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4209, file: !79, line: 333, baseType: !4275, size: 64, offset: 512)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!913, !1201, !4278}
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4209, file: !79, line: 335, baseType: !4280, size: 64, offset: 576)
!4280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4281, size: 64)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{!913, !1201, !4273}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4209, file: !79, line: 337, baseType: !4284, size: 64, offset: 640)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = !DISubroutineType(types: !4286)
!4286 = !{!913, !1371, !4287}
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4227, size: 64)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1372, file: !85, line: 1425, baseType: !4289, size: 64, offset: 512)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4291)
!4291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !79, line: 428, size: 704, elements: !4292)
!4292 = !{!4293, !4297, !4298, !4302, !4303, !4304, !4319, !4342, !4346, !4347, !4370}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4291, file: !79, line: 429, baseType: !4294, size: 64)
!4294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4295, size: 64)
!4295 = !DISubroutineType(types: !4296)
!4296 = !{!913, !1371, !913, !913, !1321}
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4291, file: !79, line: 430, baseType: !1460, size: 64, offset: 64)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4291, file: !79, line: 431, baseType: !4299, size: 64, offset: 128)
!4299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4300, size: 64)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!913, !1371, !7}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4291, file: !79, line: 432, baseType: !4299, size: 64, offset: 192)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4291, file: !79, line: 433, baseType: !1460, size: 64, offset: 256)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4291, file: !79, line: 434, baseType: !4305, size: 64, offset: 320)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!913, !1371, !913, !4308}
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 64)
!4309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !79, line: 415, size: 256, elements: !4310)
!4310 = !{!4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318}
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4309, file: !79, line: 416, baseType: !913, size: 32)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4309, file: !79, line: 417, baseType: !7, size: 32, offset: 32)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4309, file: !79, line: 418, baseType: !7, size: 32, offset: 64)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4309, file: !79, line: 420, baseType: !7, size: 32, offset: 96)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4309, file: !79, line: 421, baseType: !7, size: 32, offset: 128)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4309, file: !79, line: 422, baseType: !7, size: 32, offset: 160)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4309, file: !79, line: 423, baseType: !7, size: 32, offset: 192)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4309, file: !79, line: 424, baseType: !7, size: 32, offset: 224)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4291, file: !79, line: 435, baseType: !4320, size: 64, offset: 384)
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4321 = !DISubroutineType(types: !4322)
!4322 = !{!913, !1371, !4227, !4323}
!4323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4324, size: 64)
!4324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !79, line: 343, size: 960, elements: !4325)
!4325 = !{!4326, !4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341}
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4324, file: !79, line: 344, baseType: !913, size: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4324, file: !79, line: 345, baseType: !943, size: 64, offset: 64)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4324, file: !79, line: 346, baseType: !943, size: 64, offset: 128)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4324, file: !79, line: 347, baseType: !943, size: 64, offset: 192)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4324, file: !79, line: 348, baseType: !943, size: 64, offset: 256)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4324, file: !79, line: 349, baseType: !943, size: 64, offset: 320)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4324, file: !79, line: 350, baseType: !943, size: 64, offset: 384)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4324, file: !79, line: 351, baseType: !1508, size: 64, offset: 448)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4324, file: !79, line: 353, baseType: !1508, size: 64, offset: 512)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4324, file: !79, line: 354, baseType: !913, size: 32, offset: 576)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4324, file: !79, line: 355, baseType: !913, size: 32, offset: 608)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4324, file: !79, line: 356, baseType: !943, size: 64, offset: 640)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4324, file: !79, line: 357, baseType: !943, size: 64, offset: 704)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4324, file: !79, line: 358, baseType: !943, size: 64, offset: 768)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4324, file: !79, line: 359, baseType: !1508, size: 64, offset: 832)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4324, file: !79, line: 360, baseType: !913, size: 32, offset: 896)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4291, file: !79, line: 436, baseType: !4343, size: 64, offset: 448)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 64)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!913, !1371, !4287, !4323}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4291, file: !79, line: 438, baseType: !4320, size: 64, offset: 512)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4291, file: !79, line: 439, baseType: !4348, size: 64, offset: 576)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = !DISubroutineType(types: !4350)
!4350 = !{!913, !1371, !4351}
!4351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4352, size: 64)
!4352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !79, line: 409, size: 1408, elements: !4353)
!4353 = !{!4354, !4355}
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4352, file: !79, line: 410, baseType: !7, size: 32)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4352, file: !79, line: 411, baseType: !4356, size: 1344, offset: 64)
!4356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4357, size: 1344, elements: !308)
!4357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !79, line: 395, size: 448, elements: !4358)
!4358 = !{!4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4369}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4357, file: !79, line: 396, baseType: !7, size: 32)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4357, file: !79, line: 397, baseType: !7, size: 32, offset: 32)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4357, file: !79, line: 399, baseType: !7, size: 32, offset: 64)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4357, file: !79, line: 400, baseType: !7, size: 32, offset: 96)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4357, file: !79, line: 401, baseType: !7, size: 32, offset: 128)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4357, file: !79, line: 402, baseType: !7, size: 32, offset: 160)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4357, file: !79, line: 403, baseType: !7, size: 32, offset: 192)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4357, file: !79, line: 404, baseType: !945, size: 64, offset: 256)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4357, file: !79, line: 405, baseType: !4368, size: 64, offset: 320)
!4368 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !897, line: 126, baseType: !943)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4357, file: !79, line: 406, baseType: !4368, size: 64, offset: 384)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4291, file: !79, line: 440, baseType: !4299, size: 64, offset: 640)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1372, file: !85, line: 1426, baseType: !4372, size: 64, offset: 576)
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4373, size: 64)
!4373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4374)
!4374 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !85, line: 49, flags: DIFlagFwdDecl)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1372, file: !85, line: 1427, baseType: !902, size: 64, offset: 640)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1372, file: !85, line: 1428, baseType: !902, size: 64, offset: 704)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1372, file: !85, line: 1429, baseType: !902, size: 64, offset: 768)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1372, file: !85, line: 1430, baseType: !1162, size: 64, offset: 832)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1372, file: !85, line: 1431, baseType: !1591, size: 256, offset: 896)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1372, file: !85, line: 1432, baseType: !913, size: 32, offset: 1152)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1372, file: !85, line: 1433, baseType: !1571, size: 32, offset: 1184)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1372, file: !85, line: 1437, baseType: !4383, size: 64, offset: 1216)
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 64)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4386)
!4386 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !85, line: 1437, flags: DIFlagFwdDecl)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1372, file: !85, line: 1449, baseType: !4388, size: 64, offset: 1280)
!4388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1178, line: 34, size: 64, elements: !4389)
!4389 = !{!4390}
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4388, file: !1178, line: 35, baseType: !1181, size: 64)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1372, file: !85, line: 1450, baseType: !919, size: 128, offset: 1344)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1372, file: !85, line: 1451, baseType: !2850, size: 64, offset: 1472)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1372, file: !85, line: 1452, baseType: !2870, size: 64, offset: 1536)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1372, file: !85, line: 1453, baseType: !4395, size: 64, offset: 1600)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !85, line: 1453, flags: DIFlagFwdDecl)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1372, file: !85, line: 1454, baseType: !1414, size: 128, offset: 1664)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1372, file: !85, line: 1455, baseType: !7, size: 32, offset: 1792)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1372, file: !85, line: 1456, baseType: !4400, size: 2432, offset: 1856)
!4400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !79, line: 518, size: 2432, elements: !4401)
!4401 = !{!4402, !4403, !4404, !4406, !4438}
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4400, file: !79, line: 519, baseType: !7, size: 32)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4400, file: !79, line: 520, baseType: !1591, size: 256, offset: 64)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4400, file: !79, line: 521, baseType: !4405, size: 192, offset: 320)
!4405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1201, size: 192, elements: !308)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4400, file: !79, line: 522, baseType: !4407, size: 1728, offset: 512)
!4407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4408, size: 1728, elements: !308)
!4408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !79, line: 222, size: 576, elements: !4409)
!4409 = !{!4410, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4408, file: !79, line: 223, baseType: !4411, size: 64)
!4411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4412, size: 64)
!4412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !79, line: 443, size: 256, elements: !4413)
!4413 = !{!4414, !4415, !4428, !4429}
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4412, file: !79, line: 444, baseType: !913, size: 32)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4412, file: !79, line: 445, baseType: !4416, size: 64, offset: 64)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4418)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !79, line: 310, size: 512, elements: !4419)
!4419 = !{!4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4418, file: !79, line: 311, baseType: !1460, size: 64)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4418, file: !79, line: 312, baseType: !1460, size: 64, offset: 64)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4418, file: !79, line: 313, baseType: !1460, size: 64, offset: 128)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4418, file: !79, line: 314, baseType: !1460, size: 64, offset: 192)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4418, file: !79, line: 315, baseType: !4212, size: 64, offset: 256)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4418, file: !79, line: 316, baseType: !4212, size: 64, offset: 320)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4418, file: !79, line: 317, baseType: !4212, size: 64, offset: 384)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4418, file: !79, line: 318, baseType: !4284, size: 64, offset: 448)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4412, file: !79, line: 446, baseType: !1405, size: 64, offset: 128)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4412, file: !79, line: 447, baseType: !4411, size: 64, offset: 192)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4408, file: !79, line: 224, baseType: !913, size: 32, offset: 64)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4408, file: !79, line: 226, baseType: !919, size: 128, offset: 128)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4408, file: !79, line: 227, baseType: !902, size: 64, offset: 256)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4408, file: !79, line: 228, baseType: !7, size: 32, offset: 320)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4408, file: !79, line: 229, baseType: !7, size: 32, offset: 352)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4408, file: !79, line: 230, baseType: !4248, size: 64, offset: 384)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4408, file: !79, line: 231, baseType: !4248, size: 64, offset: 448)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4408, file: !79, line: 232, baseType: !973, size: 64, offset: 512)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4400, file: !79, line: 523, baseType: !4439, size: 192, offset: 2240)
!4439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4416, size: 192, elements: !308)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1372, file: !85, line: 1458, baseType: !4441, size: 2112, offset: 4288)
!4441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !85, line: 1410, size: 2112, elements: !4442)
!4442 = !{!4443, !4444, !4445}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4441, file: !85, line: 1411, baseType: !913, size: 32)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4441, file: !85, line: 1412, baseType: !2312, size: 128, offset: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4441, file: !85, line: 1413, baseType: !4446, size: 1920, offset: 192)
!4446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4447, size: 1920, elements: !308)
!4447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4448, line: 12, size: 640, elements: !4449)
!4448 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4449 = !{!4450, !4458, !4459, !4464, !4465}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4447, file: !4448, line: 13, baseType: !4451, size: 320)
!4451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4452, line: 17, size: 320, elements: !4453)
!4452 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4453 = !{!4454, !4455, !4456, !4457}
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4451, file: !4452, line: 18, baseType: !913, size: 32)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4451, file: !4452, line: 19, baseType: !913, size: 32, offset: 32)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4451, file: !4452, line: 20, baseType: !2312, size: 128, offset: 64)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4451, file: !4452, line: 22, baseType: !1145, size: 128, align: 64, offset: 192)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4447, file: !4448, line: 14, baseType: !3424, size: 64, offset: 320)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4447, file: !4448, line: 15, baseType: !4460, size: 64, offset: 384)
!4460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4461, line: 16, size: 64, elements: !4462)
!4461 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4462 = !{!4463}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4460, file: !4461, line: 17, baseType: !2050, size: 64)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4447, file: !4448, line: 16, baseType: !2312, size: 128, offset: 448)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4447, file: !4448, line: 17, baseType: !1571, size: 32, offset: 576)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1372, file: !85, line: 1465, baseType: !973, size: 64, offset: 6400)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1372, file: !85, line: 1468, baseType: !268, size: 32, offset: 6464)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1372, file: !85, line: 1470, baseType: !1311, size: 64, offset: 6528)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1372, file: !85, line: 1471, baseType: !1311, size: 64, offset: 6592)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1372, file: !85, line: 1473, baseType: !270, size: 32, offset: 6656)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1372, file: !85, line: 1474, baseType: !4472, size: 64, offset: 6720)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !85, line: 603, flags: DIFlagFwdDecl)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1372, file: !85, line: 1477, baseType: !2759, size: 256, offset: 6784)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1372, file: !85, line: 1478, baseType: !4476, size: 128, offset: 7040)
!4476 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4477, line: 18, baseType: !4478)
!4477 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4478 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4477, line: 16, size: 128, elements: !4479)
!4479 = !{!4480}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4478, file: !4477, line: 17, baseType: !4481, size: 128)
!4481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2185, size: 128, elements: !247)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1372, file: !85, line: 1480, baseType: !7, size: 32, offset: 7168)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1372, file: !85, line: 1481, baseType: !2953, size: 32, offset: 7200)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1372, file: !85, line: 1487, baseType: !1498, size: 192, offset: 7232)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1372, file: !85, line: 1493, baseType: !948, size: 64, offset: 7424)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1372, file: !85, line: 1495, baseType: !4487, size: 64, offset: 7488)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 64)
!4488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4489)
!4489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1160, line: 135, size: 1024, align: 512, elements: !4490)
!4490 = !{!4491, !4495, !4496, !4503, !4509, !4513, !4517, !4521, !4522, !4526, !4530, !4535, !4539}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4489, file: !1160, line: 136, baseType: !4492, size: 64)
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 64)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{!913, !1162, !7}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4489, file: !1160, line: 137, baseType: !4492, size: 64, offset: 64)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4489, file: !1160, line: 138, baseType: !4497, size: 64, offset: 128)
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4498, size: 64)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{!913, !4500, !4502}
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4489, file: !1160, line: 139, baseType: !4504, size: 64, offset: 192)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!913, !4500, !7, !948, !4507}
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1186)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4489, file: !1160, line: 141, baseType: !4510, size: 64, offset: 256)
!4510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4511, size: 64)
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!913, !4500}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4489, file: !1160, line: 142, baseType: !4514, size: 64, offset: 320)
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4515, size: 64)
!4515 = !DISubroutineType(types: !4516)
!4516 = !{!913, !1162}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4489, file: !1160, line: 143, baseType: !4518, size: 64, offset: 384)
!4518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4519, size: 64)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{null, !1162}
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4489, file: !1160, line: 144, baseType: !4518, size: 64, offset: 448)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4489, file: !1160, line: 145, baseType: !4523, size: 64, offset: 512)
!4523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4524, size: 64)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{null, !1162, !1201}
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4489, file: !1160, line: 146, baseType: !4527, size: 64, offset: 576)
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 64)
!4528 = !DISubroutineType(types: !4529)
!4529 = !{!1061, !1162, !1061, !913}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4489, file: !1160, line: 147, baseType: !4531, size: 64, offset: 640)
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4532, size: 64)
!4532 = !DISubroutineType(types: !4533)
!4533 = !{!1158, !4534}
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4489, file: !1160, line: 148, baseType: !4536, size: 64, offset: 704)
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 64)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!913, !1321, !1262}
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4489, file: !1160, line: 149, baseType: !4540, size: 64, offset: 768)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!1162, !1162, !4543}
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1372, file: !85, line: 1500, baseType: !913, size: 32, offset: 7552)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1372, file: !85, line: 1502, baseType: !4547, size: 448, offset: 7616)
!4547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4196, line: 60, size: 448, elements: !4548)
!4548 = !{!4549, !4554, !4555, !4556, !4557, !4558, !4559}
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4547, file: !4196, line: 61, baseType: !4550, size: 64)
!4550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4551 = !DISubroutineType(types: !4552)
!4552 = !{!902, !4553, !4194}
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4547, size: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4547, file: !4196, line: 63, baseType: !4550, size: 64, offset: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4547, file: !4196, line: 66, baseType: !862, size: 64, offset: 128)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4547, file: !4196, line: 67, baseType: !913, size: 32, offset: 192)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4547, file: !4196, line: 68, baseType: !7, size: 32, offset: 224)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4547, file: !4196, line: 71, baseType: !919, size: 128, offset: 256)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4547, file: !4196, line: 77, baseType: !4560, size: 64, offset: 384)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1372, file: !85, line: 1505, baseType: !1502, size: 64, offset: 8064)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1372, file: !85, line: 1508, baseType: !1502, size: 64, offset: 8128)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1372, file: !85, line: 1511, baseType: !913, size: 32, offset: 8192)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1372, file: !85, line: 1514, baseType: !1750, size: 32, offset: 8224)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1372, file: !85, line: 1517, baseType: !2829, size: 64, offset: 8256)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1372, file: !85, line: 1518, baseType: !1410, size: 64, offset: 8320)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1372, file: !85, line: 1525, baseType: !2539, size: 64, offset: 8384)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1372, file: !85, line: 1532, baseType: !4569, size: 64, offset: 8448)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4570, line: 52, size: 64, elements: !4571)
!4570 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4571 = !{!4572}
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4569, file: !4570, line: 53, baseType: !4573, size: 64)
!4573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4574, size: 64)
!4574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4570, line: 40, size: 256, elements: !4575)
!4575 = !{!4576, !4577, !4582}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4574, file: !4570, line: 42, baseType: !1020)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4574, file: !4570, line: 44, baseType: !4578, size: 192)
!4578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4570, line: 28, size: 192, elements: !4579)
!4579 = !{!4580, !4581}
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4578, file: !4570, line: 29, baseType: !919, size: 128)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4578, file: !4570, line: 31, baseType: !862, size: 64, offset: 128)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4574, file: !4570, line: 49, baseType: !862, size: 64, offset: 192)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1372, file: !85, line: 1533, baseType: !4569, size: 64, offset: 8512)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1372, file: !85, line: 1534, baseType: !1145, size: 128, align: 64, offset: 8576)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1372, file: !85, line: 1535, baseType: !2817, size: 256, offset: 8704)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1372, file: !85, line: 1537, baseType: !1498, size: 192, offset: 8960)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1372, file: !85, line: 1542, baseType: !913, size: 32, offset: 9152)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1372, file: !85, line: 1545, baseType: !1020, offset: 9184)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1372, file: !85, line: 1546, baseType: !919, size: 128, offset: 9216)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1372, file: !85, line: 1548, baseType: !1020, offset: 9344)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1372, file: !85, line: 1549, baseType: !919, size: 128, offset: 9344)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1202, file: !85, line: 624, baseType: !1558, size: 64, offset: 256)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1202, file: !85, line: 631, baseType: !902, size: 64, offset: 320)
!4594 = !DIDerivedType(tag: DW_TAG_member, scope: !1202, file: !85, line: 639, baseType: !4595, size: 32, offset: 384)
!4595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1202, file: !85, line: 639, size: 32, elements: !4596)
!4596 = !{!4597, !4598}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4595, file: !85, line: 640, baseType: !3354, size: 32)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4595, file: !85, line: 641, baseType: !7, size: 32)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1202, file: !85, line: 643, baseType: !1285, size: 32, offset: 416)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1202, file: !85, line: 644, baseType: !1303, size: 64, offset: 448)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1202, file: !85, line: 645, baseType: !1307, size: 128, offset: 512)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1202, file: !85, line: 646, baseType: !1307, size: 128, offset: 640)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1202, file: !85, line: 647, baseType: !1307, size: 128, offset: 768)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1202, file: !85, line: 648, baseType: !1020, offset: 896)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1202, file: !85, line: 649, baseType: !320, size: 16, offset: 896)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1202, file: !85, line: 650, baseType: !2184, size: 8, offset: 912)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1202, file: !85, line: 651, baseType: !2184, size: 8, offset: 920)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1202, file: !85, line: 652, baseType: !4368, size: 64, offset: 960)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1202, file: !85, line: 659, baseType: !902, size: 64, offset: 1024)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1202, file: !85, line: 660, baseType: !1591, size: 256, offset: 1088)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1202, file: !85, line: 662, baseType: !902, size: 64, offset: 1344)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1202, file: !85, line: 663, baseType: !902, size: 64, offset: 1408)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1202, file: !85, line: 665, baseType: !1414, size: 128, offset: 1472)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1202, file: !85, line: 666, baseType: !919, size: 128, offset: 1600)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1202, file: !85, line: 675, baseType: !919, size: 128, offset: 1728)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1202, file: !85, line: 676, baseType: !919, size: 128, offset: 1856)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1202, file: !85, line: 677, baseType: !919, size: 128, offset: 1984)
!4618 = !DIDerivedType(tag: DW_TAG_member, scope: !1202, file: !85, line: 678, baseType: !4619, size: 128, offset: 2112)
!4619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1202, file: !85, line: 678, size: 128, elements: !4620)
!4620 = !{!4621, !4622}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4619, file: !85, line: 679, baseType: !1410, size: 64)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4619, file: !85, line: 680, baseType: !1145, size: 128, align: 64)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1202, file: !85, line: 682, baseType: !1504, size: 64, offset: 2240)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1202, file: !85, line: 683, baseType: !1504, size: 64, offset: 2304)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1202, file: !85, line: 684, baseType: !1571, size: 32, offset: 2368)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1202, file: !85, line: 685, baseType: !1571, size: 32, offset: 2400)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1202, file: !85, line: 686, baseType: !1571, size: 32, offset: 2432)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1202, file: !85, line: 688, baseType: !1571, size: 32, offset: 2464)
!4629 = !DIDerivedType(tag: DW_TAG_member, scope: !1202, file: !85, line: 690, baseType: !4630, size: 64, offset: 2496)
!4630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1202, file: !85, line: 690, size: 64, elements: !4631)
!4631 = !{!4632, !4854}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4630, file: !85, line: 691, baseType: !4633, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 64)
!4634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4635)
!4635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !85, line: 1822, size: 2048, elements: !4636)
!4636 = !{!4637, !4638, !4642, !4646, !4650, !4651, !4652, !4656, !4669, !4670, !4678, !4682, !4683, !4687, !4688, !4692, !4697, !4698, !4702, !4706, !4814, !4818, !4819, !4823, !4824, !4828, !4832, !4837, !4841, !4845, !4849, !4853}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4635, file: !85, line: 1823, baseType: !1405, size: 64)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4635, file: !85, line: 1824, baseType: !4639, size: 64, offset: 64)
!4639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4640, size: 64)
!4640 = !DISubroutineType(types: !4641)
!4641 = !{!1303, !1132, !1303, !913}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4635, file: !85, line: 1825, baseType: !4643, size: 64, offset: 128)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{!1088, !1132, !1061, !1102, !1520}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4635, file: !85, line: 1826, baseType: !4647, size: 64, offset: 192)
!4647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4648, size: 64)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!1088, !1132, !948, !1102, !1520}
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4635, file: !85, line: 1827, baseType: !1668, size: 64, offset: 256)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4635, file: !85, line: 1828, baseType: !1668, size: 64, offset: 320)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4635, file: !85, line: 1829, baseType: !4653, size: 64, offset: 384)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{!913, !1671, !1262}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4635, file: !85, line: 1830, baseType: !4657, size: 64, offset: 448)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!913, !1132, !4660}
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !85, line: 1776, size: 128, elements: !4662)
!4662 = !{!4663, !4668}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4661, file: !85, line: 1777, baseType: !4664, size: 64)
!4664 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !85, line: 1773, baseType: !4665)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{!913, !4660, !948, !913, !1303, !943, !7}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4661, file: !85, line: 1778, baseType: !1303, size: 64, offset: 64)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4635, file: !85, line: 1831, baseType: !4657, size: 64, offset: 512)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4635, file: !85, line: 1832, baseType: !4671, size: 64, offset: 576)
!4671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4672, size: 64)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!4674, !1132, !4676}
!4674 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4675, line: 52, baseType: !7)
!4675 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4677, size: 64)
!4677 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1391, line: 27, flags: DIFlagFwdDecl)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4635, file: !85, line: 1833, baseType: !4679, size: 64, offset: 640)
!4679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4680, size: 64)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{!862, !1132, !7, !902}
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4635, file: !85, line: 1834, baseType: !4679, size: 64, offset: 704)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4635, file: !85, line: 1835, baseType: !4684, size: 64, offset: 768)
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4685, size: 64)
!4685 = !DISubroutineType(types: !4686)
!4686 = !{!913, !1132, !1823}
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4635, file: !85, line: 1836, baseType: !902, size: 64, offset: 832)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4635, file: !85, line: 1837, baseType: !4689, size: 64, offset: 896)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!913, !1201, !1132}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4635, file: !85, line: 1838, baseType: !4693, size: 64, offset: 960)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DISubroutineType(types: !4695)
!4695 = !{!913, !1132, !4696}
!4696 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !85, line: 1007, baseType: !973)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4635, file: !85, line: 1839, baseType: !4689, size: 64, offset: 1024)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4635, file: !85, line: 1840, baseType: !4699, size: 64, offset: 1088)
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4700, size: 64)
!4700 = !DISubroutineType(types: !4701)
!4701 = !{!913, !1132, !1303, !1303, !913}
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4635, file: !85, line: 1841, baseType: !4703, size: 64, offset: 1152)
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = !DISubroutineType(types: !4705)
!4705 = !{!913, !913, !1132, !913}
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4635, file: !85, line: 1842, baseType: !4707, size: 64, offset: 1216)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{!913, !1132, !913, !4710}
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4711, size: 64)
!4711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !85, line: 1062, size: 1664, elements: !4712)
!4712 = !{!4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4744, !4745, !4746, !4759, !4790}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4711, file: !85, line: 1063, baseType: !4710, size: 64)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4711, file: !85, line: 1064, baseType: !919, size: 128, offset: 64)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4711, file: !85, line: 1065, baseType: !1414, size: 128, offset: 192)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4711, file: !85, line: 1066, baseType: !919, size: 128, offset: 320)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4711, file: !85, line: 1069, baseType: !919, size: 128, offset: 448)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4711, file: !85, line: 1072, baseType: !4696, size: 64, offset: 576)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4711, file: !85, line: 1073, baseType: !7, size: 32, offset: 640)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4711, file: !85, line: 1074, baseType: !165, size: 8, offset: 672)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4711, file: !85, line: 1075, baseType: !7, size: 32, offset: 704)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4711, file: !85, line: 1076, baseType: !913, size: 32, offset: 736)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4711, file: !85, line: 1077, baseType: !2312, size: 128, offset: 768)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4711, file: !85, line: 1078, baseType: !1132, size: 64, offset: 896)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4711, file: !85, line: 1079, baseType: !1303, size: 64, offset: 960)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4711, file: !85, line: 1080, baseType: !1303, size: 64, offset: 1024)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4711, file: !85, line: 1082, baseType: !4728, size: 64, offset: 1088)
!4728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4729, size: 64)
!4729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !85, line: 1314, size: 320, elements: !4730)
!4730 = !{!4731, !4739, !4740, !4741, !4742, !4743}
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4729, file: !85, line: 1315, baseType: !4732)
!4732 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4733, line: 20, baseType: !4734)
!4733 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4733, line: 11, elements: !4735)
!4735 = !{!4736}
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4734, file: !4733, line: 12, baseType: !4737)
!4737 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1032, line: 33, baseType: !4738)
!4738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1032, line: 31, elements: !1034)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4729, file: !85, line: 1316, baseType: !913, size: 32)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4729, file: !85, line: 1317, baseType: !913, size: 32, offset: 32)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4729, file: !85, line: 1318, baseType: !4728, size: 64, offset: 64)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4729, file: !85, line: 1319, baseType: !1132, size: 64, offset: 128)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4729, file: !85, line: 1320, baseType: !1145, size: 128, align: 64, offset: 192)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4711, file: !85, line: 1084, baseType: !902, size: 64, offset: 1152)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4711, file: !85, line: 1085, baseType: !902, size: 64, offset: 1216)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4711, file: !85, line: 1087, baseType: !4747, size: 64, offset: 1280)
!4747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4748, size: 64)
!4748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4749)
!4749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !85, line: 1011, size: 128, elements: !4750)
!4750 = !{!4751, !4755}
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4749, file: !85, line: 1012, baseType: !4752, size: 64)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{null, !4710, !4710}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4749, file: !85, line: 1013, baseType: !4756, size: 64, offset: 64)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4757, size: 64)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{null, !4710}
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4711, file: !85, line: 1088, baseType: !4760, size: 64, offset: 1344)
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4761, size: 64)
!4761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4762)
!4762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !85, line: 1016, size: 512, elements: !4763)
!4763 = !{!4764, !4768, !4772, !4773, !4777, !4781, !4785, !4789}
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4762, file: !85, line: 1017, baseType: !4765, size: 64)
!4765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4766, size: 64)
!4766 = !DISubroutineType(types: !4767)
!4767 = !{!4696, !4696}
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4762, file: !85, line: 1018, baseType: !4769, size: 64, offset: 64)
!4769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4770, size: 64)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{null, !4696}
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4762, file: !85, line: 1019, baseType: !4756, size: 64, offset: 128)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4762, file: !85, line: 1020, baseType: !4774, size: 64, offset: 192)
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4775, size: 64)
!4775 = !DISubroutineType(types: !4776)
!4776 = !{!913, !4710, !913}
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4762, file: !85, line: 1021, baseType: !4778, size: 64, offset: 256)
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4779, size: 64)
!4779 = !DISubroutineType(types: !4780)
!4780 = !{!1262, !4710}
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4762, file: !85, line: 1022, baseType: !4782, size: 64, offset: 320)
!4782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4783, size: 64)
!4783 = !DISubroutineType(types: !4784)
!4784 = !{!913, !4710, !913, !922}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4762, file: !85, line: 1023, baseType: !4786, size: 64, offset: 384)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{null, !4710, !1645}
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4762, file: !85, line: 1024, baseType: !4778, size: 64, offset: 448)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4711, file: !85, line: 1097, baseType: !4791, size: 256, offset: 1408)
!4791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4711, file: !85, line: 1089, size: 256, elements: !4792)
!4792 = !{!4793, !4802, !4808}
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4791, file: !85, line: 1090, baseType: !4794, size: 256)
!4794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4795, line: 10, size: 256, elements: !4796)
!4795 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4796 = !{!4797, !4798, !4801}
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4794, file: !4795, line: 11, baseType: !268, size: 32)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4794, file: !4795, line: 12, baseType: !4799, size: 64, offset: 64)
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4800, size: 64)
!4800 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4795, line: 5, flags: DIFlagFwdDecl)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4794, file: !4795, line: 13, baseType: !919, size: 128, offset: 128)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4791, file: !85, line: 1091, baseType: !4803, size: 64)
!4803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4795, line: 17, size: 64, elements: !4804)
!4804 = !{!4805}
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4803, file: !4795, line: 18, baseType: !4806, size: 64)
!4806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4807 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4795, line: 16, flags: DIFlagFwdDecl)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4791, file: !85, line: 1096, baseType: !4809, size: 192)
!4809 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4791, file: !85, line: 1092, size: 192, elements: !4810)
!4810 = !{!4811, !4812, !4813}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4809, file: !85, line: 1093, baseType: !919, size: 128)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4809, file: !85, line: 1094, baseType: !913, size: 32, offset: 128)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4809, file: !85, line: 1095, baseType: !7, size: 32, offset: 160)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4635, file: !85, line: 1843, baseType: !4815, size: 64, offset: 1280)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 64)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{!1088, !1132, !1545, !913, !1102, !1520, !913}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4635, file: !85, line: 1844, baseType: !1943, size: 64, offset: 1344)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4635, file: !85, line: 1845, baseType: !4820, size: 64, offset: 1408)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!913, !913}
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4635, file: !85, line: 1846, baseType: !4707, size: 64, offset: 1472)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4635, file: !85, line: 1847, baseType: !4825, size: 64, offset: 1536)
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{!1088, !3903, !1132, !1520, !1102, !7}
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4635, file: !85, line: 1848, baseType: !4829, size: 64, offset: 1600)
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{!1088, !1132, !1520, !3903, !1102, !7}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4635, file: !85, line: 1849, baseType: !4833, size: 64, offset: 1664)
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4834, size: 64)
!4834 = !DISubroutineType(types: !4835)
!4835 = !{!913, !1132, !862, !4836, !1645}
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 64)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4635, file: !85, line: 1850, baseType: !4838, size: 64, offset: 1728)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = !DISubroutineType(types: !4840)
!4840 = !{!862, !1132, !913, !1303, !1303}
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4635, file: !85, line: 1852, baseType: !4842, size: 64, offset: 1792)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{null, !1486, !1132}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4635, file: !85, line: 1856, baseType: !4846, size: 64, offset: 1856)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!1088, !1132, !1303, !1132, !1303, !1102, !7}
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4635, file: !85, line: 1858, baseType: !4850, size: 64, offset: 1920)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!1303, !1132, !1303, !1132, !1303, !1303, !7}
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4635, file: !85, line: 1861, baseType: !4699, size: 64, offset: 1984)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4630, file: !85, line: 692, baseType: !1439, size: 64)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1202, file: !85, line: 694, baseType: !4856, size: 64, offset: 2560)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !85, line: 1100, size: 384, elements: !4858)
!4858 = !{!4859, !4860, !4861, !4862}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4857, file: !85, line: 1101, baseType: !1020)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4857, file: !85, line: 1102, baseType: !919, size: 128)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4857, file: !85, line: 1103, baseType: !919, size: 128, offset: 128)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4857, file: !85, line: 1104, baseType: !919, size: 128, offset: 256)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1202, file: !85, line: 695, baseType: !1559, size: 1216, align: 64, offset: 2624)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1202, file: !85, line: 696, baseType: !919, size: 128, offset: 3840)
!4865 = !DIDerivedType(tag: DW_TAG_member, scope: !1202, file: !85, line: 697, baseType: !4866, size: 64, offset: 3968)
!4866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1202, file: !85, line: 697, size: 64, elements: !4867)
!4867 = !{!4868, !4869, !4870, !4873, !4874}
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4866, file: !85, line: 698, baseType: !3903, size: 64)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4866, file: !85, line: 699, baseType: !2850, size: 64)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4866, file: !85, line: 700, baseType: !4871, size: 64)
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4872, size: 64)
!4872 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !85, line: 700, flags: DIFlagFwdDecl)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4866, file: !85, line: 701, baseType: !1061, size: 64)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4866, file: !85, line: 702, baseType: !7, size: 32)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1202, file: !85, line: 705, baseType: !270, size: 32, offset: 4032)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1202, file: !85, line: 708, baseType: !270, size: 32, offset: 4064)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1202, file: !85, line: 709, baseType: !4472, size: 64, offset: 4096)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1202, file: !85, line: 720, baseType: !973, size: 64, offset: 4160)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1163, file: !1160, line: 98, baseType: !4880, size: 256, offset: 448)
!4880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 256, elements: !420)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1163, file: !1160, line: 101, baseType: !4882, size: 32, offset: 704)
!4882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4883, line: 25, size: 32, elements: !4884)
!4883 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4884 = !{!4885}
!4885 = !DIDerivedType(tag: DW_TAG_member, scope: !4882, file: !4883, line: 26, baseType: !4886, size: 32)
!4886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4882, file: !4883, line: 26, size: 32, elements: !4887)
!4887 = !{!4888}
!4888 = !DIDerivedType(tag: DW_TAG_member, scope: !4886, file: !4883, line: 30, baseType: !4889, size: 32)
!4889 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4886, file: !4883, line: 30, size: 32, elements: !4890)
!4890 = !{!4891, !4892}
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4889, file: !4883, line: 31, baseType: !1020)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4889, file: !4883, line: 32, baseType: !913, size: 32)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1163, file: !1160, line: 102, baseType: !4487, size: 64, offset: 768)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1163, file: !1160, line: 103, baseType: !1371, size: 64, offset: 832)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1163, file: !1160, line: 104, baseType: !902, size: 64, offset: 896)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1163, file: !1160, line: 105, baseType: !973, size: 64, offset: 960)
!4897 = !DIDerivedType(tag: DW_TAG_member, scope: !1163, file: !1160, line: 107, baseType: !4898, size: 128, offset: 1024)
!4898 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1163, file: !1160, line: 107, size: 128, elements: !4899)
!4899 = !{!4900, !4901}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4898, file: !1160, line: 108, baseType: !919, size: 128)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4898, file: !1160, line: 109, baseType: !4902, size: 64)
!4902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1163, file: !1160, line: 111, baseType: !919, size: 128, offset: 1152)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1163, file: !1160, line: 112, baseType: !919, size: 128, offset: 1280)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1163, file: !1160, line: 120, baseType: !4906, size: 128, offset: 1408)
!4906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1163, file: !1160, line: 116, size: 128, elements: !4907)
!4907 = !{!4908, !4909, !4910}
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4906, file: !1160, line: 117, baseType: !1414, size: 128)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4906, file: !1160, line: 118, baseType: !1177, size: 128)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4906, file: !1160, line: 119, baseType: !1145, size: 128, align: 64)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1133, file: !85, line: 922, baseType: !1201, size: 64, offset: 256)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1133, file: !85, line: 923, baseType: !4633, size: 64, offset: 320)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1133, file: !85, line: 929, baseType: !1020, offset: 384)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1133, file: !85, line: 930, baseType: !84, size: 32, offset: 384)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1133, file: !85, line: 931, baseType: !1502, size: 64, offset: 448)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1133, file: !85, line: 932, baseType: !7, size: 32, offset: 512)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1133, file: !85, line: 933, baseType: !2953, size: 32, offset: 544)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1133, file: !85, line: 934, baseType: !1498, size: 192, offset: 576)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1133, file: !85, line: 935, baseType: !1303, size: 64, offset: 768)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1133, file: !85, line: 936, baseType: !4921, size: 192, offset: 832)
!4921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !85, line: 885, size: 192, elements: !4922)
!4922 = !{!4923, !4924, !4925, !4926, !4927, !4928}
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4921, file: !85, line: 886, baseType: !4732)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4921, file: !85, line: 887, baseType: !2302, size: 64)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4921, file: !85, line: 888, baseType: !93, size: 32, offset: 64)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4921, file: !85, line: 889, baseType: !1207, size: 32, offset: 96)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4921, file: !85, line: 889, baseType: !1207, size: 32, offset: 128)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4921, file: !85, line: 890, baseType: !913, size: 32, offset: 160)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1133, file: !85, line: 937, baseType: !2377, size: 64, offset: 1024)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1133, file: !85, line: 938, baseType: !4931, size: 256, offset: 1088)
!4931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !85, line: 896, size: 256, elements: !4932)
!4932 = !{!4933, !4934, !4935, !4936, !4937, !4938}
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4931, file: !85, line: 897, baseType: !902, size: 64)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4931, file: !85, line: 898, baseType: !7, size: 32, offset: 64)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4931, file: !85, line: 899, baseType: !7, size: 32, offset: 96)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4931, file: !85, line: 902, baseType: !7, size: 32, offset: 128)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4931, file: !85, line: 903, baseType: !7, size: 32, offset: 160)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4931, file: !85, line: 904, baseType: !1303, size: 64, offset: 192)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1133, file: !85, line: 940, baseType: !943, size: 64, offset: 1344)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1133, file: !85, line: 945, baseType: !973, size: 64, offset: 1408)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1133, file: !85, line: 949, baseType: !919, size: 128, offset: 1472)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1133, file: !85, line: 950, baseType: !919, size: 128, offset: 1600)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1133, file: !85, line: 952, baseType: !1558, size: 64, offset: 1728)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1133, file: !85, line: 953, baseType: !1750, size: 32, offset: 1792)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1133, file: !85, line: 954, baseType: !1750, size: 32, offset: 1824)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1123, file: !1082, line: 174, baseType: !1129, size: 64, offset: 320)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1123, file: !1082, line: 176, baseType: !4948, size: 64, offset: 384)
!4948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4949, size: 64)
!4949 = !DISubroutineType(types: !4950)
!4950 = !{!913, !1132, !1013, !1122, !1823}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1111, file: !1082, line: 90, baseType: !1106, size: 64, offset: 192)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1111, file: !1082, line: 91, baseType: !4953, size: 64, offset: 256)
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1072, file: !1008, line: 143, baseType: !4955, size: 64, offset: 256)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!4958, !1013}
!4958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4959, size: 64)
!4959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4960)
!4960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !102, line: 39, size: 384, elements: !4961)
!4961 = !{!4962, !4963, !4967, !4971, !4977, !4981}
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4960, file: !102, line: 40, baseType: !101, size: 32)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4960, file: !102, line: 41, baseType: !4964, size: 64, offset: 64)
!4964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4965, size: 64)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!1262}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4960, file: !102, line: 42, baseType: !4968, size: 64, offset: 128)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{!973}
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4960, file: !102, line: 43, baseType: !4972, size: 64, offset: 192)
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4973, size: 64)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!3931, !4975}
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4976, size: 64)
!4976 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !102, line: 19, flags: DIFlagFwdDecl)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4960, file: !102, line: 44, baseType: !4978, size: 64, offset: 256)
!4978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4979, size: 64)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!3931}
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4960, file: !102, line: 45, baseType: !1240, size: 64, offset: 320)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1072, file: !1008, line: 144, baseType: !4983, size: 64, offset: 320)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!3931, !1013}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1072, file: !1008, line: 145, baseType: !4987, size: 64, offset: 384)
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4988, size: 64)
!4988 = !DISubroutineType(types: !4989)
!4989 = !{null, !1013, !4990, !4991}
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!4991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1007, file: !1008, line: 70, baseType: !4993, size: 64, offset: 384)
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1391, line: 123, size: 1024, elements: !4995)
!4995 = !{!4996, !4997, !4998, !4999, !5000, !5001, !5002, !5003, !5112, !5113, !5114, !5115, !5116}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4994, file: !1391, line: 124, baseType: !1571, size: 32)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4994, file: !1391, line: 125, baseType: !1571, size: 32, offset: 32)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4994, file: !1391, line: 135, baseType: !4993, size: 64, offset: 64)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4994, file: !1391, line: 136, baseType: !948, size: 64, offset: 128)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4994, file: !1391, line: 138, baseType: !1584, size: 192, align: 64, offset: 192)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4994, file: !1391, line: 140, baseType: !3931, size: 64, offset: 384)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4994, file: !1391, line: 141, baseType: !7, size: 32, offset: 448)
!5003 = !DIDerivedType(tag: DW_TAG_member, scope: !4994, file: !1391, line: 142, baseType: !5004, size: 256, offset: 512)
!5004 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4994, file: !1391, line: 142, size: 256, elements: !5005)
!5005 = !{!5006, !5052, !5056}
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5004, file: !1391, line: 143, baseType: !5007, size: 192)
!5007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1391, line: 91, size: 192, elements: !5008)
!5008 = !{!5009, !5010, !5011}
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !5007, file: !1391, line: 92, baseType: !902, size: 64)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5007, file: !1391, line: 94, baseType: !1580, size: 64, offset: 64)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !5007, file: !1391, line: 100, baseType: !5012, size: 64, offset: 128)
!5012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5013, size: 64)
!5013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1391, line: 180, size: 704, elements: !5014)
!5014 = !{!5015, !5016, !5017, !5024, !5025, !5026, !5050, !5051}
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5013, file: !1391, line: 182, baseType: !4993, size: 64)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5013, file: !1391, line: 183, baseType: !7, size: 32, offset: 64)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !5013, file: !1391, line: 186, baseType: !5018, size: 192, offset: 128)
!5018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !5019, line: 19, size: 192, elements: !5020)
!5019 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!5020 = !{!5021, !5022, !5023}
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !5018, file: !5019, line: 20, baseType: !1563, size: 128)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !5018, file: !5019, line: 21, baseType: !7, size: 32, offset: 128)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !5018, file: !5019, line: 22, baseType: !7, size: 32, offset: 160)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !5013, file: !1391, line: 187, baseType: !268, size: 32, offset: 320)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !5013, file: !1391, line: 188, baseType: !268, size: 32, offset: 352)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !5013, file: !1391, line: 189, baseType: !5027, size: 64, offset: 384)
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5028, size: 64)
!5028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1391, line: 168, size: 320, elements: !5029)
!5029 = !{!5030, !5034, !5038, !5042, !5046}
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !5028, file: !1391, line: 169, baseType: !5031, size: 64)
!5031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5032, size: 64)
!5032 = !DISubroutineType(types: !5033)
!5033 = !{!913, !1486, !5012}
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !5028, file: !1391, line: 171, baseType: !5035, size: 64, offset: 64)
!5035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5036, size: 64)
!5036 = !DISubroutineType(types: !5037)
!5037 = !{!913, !4993, !948, !1097}
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !5028, file: !1391, line: 173, baseType: !5039, size: 64, offset: 128)
!5039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5040, size: 64)
!5040 = !DISubroutineType(types: !5041)
!5041 = !{!913, !4993}
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !5028, file: !1391, line: 174, baseType: !5043, size: 64, offset: 192)
!5043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5044, size: 64)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{!913, !4993, !4993, !948}
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !5028, file: !1391, line: 176, baseType: !5047, size: 64, offset: 256)
!5047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5048, size: 64)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{!913, !1486, !4993, !5012}
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !5013, file: !1391, line: 192, baseType: !919, size: 128, offset: 448)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !5013, file: !1391, line: 194, baseType: !2312, size: 128, offset: 576)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !5004, file: !1391, line: 144, baseType: !5053, size: 64)
!5053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1391, line: 103, size: 64, elements: !5054)
!5054 = !{!5055}
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !5053, file: !1391, line: 104, baseType: !4993, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5004, file: !1391, line: 145, baseType: !5057, size: 256)
!5057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1391, line: 107, size: 256, elements: !5058)
!5058 = !{!5059, !5107, !5110, !5111}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5057, file: !1391, line: 108, baseType: !5060, size: 64)
!5060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5061, size: 64)
!5061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5062)
!5062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1391, line: 217, size: 768, elements: !5063)
!5063 = !{!5064, !5084, !5088, !5089, !5090, !5091, !5092, !5096, !5097, !5098, !5099, !5103}
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5062, file: !1391, line: 222, baseType: !5065, size: 64)
!5065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5066, size: 64)
!5066 = !DISubroutineType(types: !5067)
!5067 = !{!913, !5068}
!5068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 64)
!5069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1391, line: 197, size: 1088, elements: !5070)
!5070 = !{!5071, !5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5069, file: !1391, line: 199, baseType: !4993, size: 64)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5069, file: !1391, line: 200, baseType: !1132, size: 64, offset: 64)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !5069, file: !1391, line: 201, baseType: !1486, size: 64, offset: 128)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5069, file: !1391, line: 202, baseType: !973, size: 64, offset: 192)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5069, file: !1391, line: 205, baseType: !1498, size: 192, offset: 256)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !5069, file: !1391, line: 206, baseType: !1498, size: 192, offset: 448)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5069, file: !1391, line: 207, baseType: !913, size: 32, offset: 640)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5069, file: !1391, line: 208, baseType: !919, size: 128, offset: 704)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !5069, file: !1391, line: 209, baseType: !1061, size: 64, offset: 832)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5069, file: !1391, line: 211, baseType: !1102, size: 64, offset: 896)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !5069, file: !1391, line: 212, baseType: !1262, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !5069, file: !1391, line: 213, baseType: !1262, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !5069, file: !1391, line: 214, baseType: !1851, size: 64, offset: 1024)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5062, file: !1391, line: 223, baseType: !5085, size: 64, offset: 64)
!5085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5086, size: 64)
!5086 = !DISubroutineType(types: !5087)
!5087 = !{null, !5068}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !5062, file: !1391, line: 236, baseType: !1530, size: 64, offset: 128)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !5062, file: !1391, line: 238, baseType: !1517, size: 64, offset: 192)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !5062, file: !1391, line: 239, baseType: !1526, size: 64, offset: 256)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !5062, file: !1391, line: 240, baseType: !1522, size: 64, offset: 320)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5062, file: !1391, line: 242, baseType: !5093, size: 64, offset: 384)
!5093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5094, size: 64)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{!1088, !5068, !1061, !1102, !1303}
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5062, file: !1391, line: 252, baseType: !1102, size: 64, offset: 448)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !5062, file: !1391, line: 259, baseType: !1262, size: 8, offset: 512)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5062, file: !1391, line: 260, baseType: !5093, size: 64, offset: 576)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5062, file: !1391, line: 263, baseType: !5100, size: 64, offset: 640)
!5100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 64)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!4674, !5068, !4676}
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5062, file: !1391, line: 266, baseType: !5104, size: 64, offset: 704)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{!913, !5068, !1823}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5057, file: !1391, line: 109, baseType: !5108, size: 64, offset: 64)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64)
!5109 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1391, line: 31, flags: DIFlagFwdDecl)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5057, file: !1391, line: 110, baseType: !1303, size: 64, offset: 128)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !5057, file: !1391, line: 111, baseType: !4993, size: 64, offset: 192)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4994, file: !1391, line: 148, baseType: !973, size: 64, offset: 768)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4994, file: !1391, line: 154, baseType: !943, size: 64, offset: 832)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4994, file: !1391, line: 156, baseType: !320, size: 16, offset: 896)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4994, file: !1391, line: 157, baseType: !1097, size: 16, offset: 912)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4994, file: !1391, line: 158, baseType: !5117, size: 64, offset: 960)
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 64)
!5118 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1391, line: 32, flags: DIFlagFwdDecl)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1007, file: !1008, line: 71, baseType: !2879, size: 32, offset: 448)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1007, file: !1008, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1007, file: !1008, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1007, file: !1008, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1007, file: !1008, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1007, file: !1008, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1004, file: !114, line: 463, baseType: !1003, size: 64, offset: 512)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1004, file: !114, line: 465, baseType: !5127, size: 64, offset: 576)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 64)
!5128 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !114, line: 36, flags: DIFlagFwdDecl)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1004, file: !114, line: 467, baseType: !948, size: 64, offset: 640)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1004, file: !114, line: 468, baseType: !5131, size: 64, offset: 704)
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5132, size: 64)
!5132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5133)
!5133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !114, line: 87, size: 384, elements: !5134)
!5134 = !{!5135, !5136, !5137, !5141, !5145, !5149}
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5133, file: !114, line: 88, baseType: !948, size: 64)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5133, file: !114, line: 89, baseType: !1108, size: 64, offset: 64)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5133, file: !114, line: 90, baseType: !5138, size: 64, offset: 128)
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 64)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!913, !1003, !1056}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5133, file: !114, line: 91, baseType: !5142, size: 64, offset: 192)
!5142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5143, size: 64)
!5143 = !DISubroutineType(types: !5144)
!5144 = !{!1061, !1003, !3019, !4990, !4991}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5133, file: !114, line: 93, baseType: !5146, size: 64, offset: 256)
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5147, size: 64)
!5147 = !DISubroutineType(types: !5148)
!5148 = !{null, !1003}
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5133, file: !114, line: 95, baseType: !5150, size: 64, offset: 320)
!5150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5151, size: 64)
!5151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5152)
!5152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !60, line: 278, size: 1472, elements: !5153)
!5153 = !{!5154, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179}
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !5152, file: !60, line: 279, baseType: !5155, size: 64)
!5155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5156, size: 64)
!5156 = !DISubroutineType(types: !5157)
!5157 = !{!913, !1003}
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5152, file: !60, line: 280, baseType: !5146, size: 64, offset: 64)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5152, file: !60, line: 281, baseType: !5155, size: 64, offset: 128)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5152, file: !60, line: 282, baseType: !5155, size: 64, offset: 192)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !5152, file: !60, line: 283, baseType: !5155, size: 64, offset: 256)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !5152, file: !60, line: 284, baseType: !5155, size: 64, offset: 320)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !5152, file: !60, line: 285, baseType: !5155, size: 64, offset: 384)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !5152, file: !60, line: 286, baseType: !5155, size: 64, offset: 448)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !5152, file: !60, line: 287, baseType: !5155, size: 64, offset: 512)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !5152, file: !60, line: 288, baseType: !5155, size: 64, offset: 576)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !5152, file: !60, line: 289, baseType: !5155, size: 64, offset: 640)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !5152, file: !60, line: 290, baseType: !5155, size: 64, offset: 704)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !5152, file: !60, line: 291, baseType: !5155, size: 64, offset: 768)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !5152, file: !60, line: 292, baseType: !5155, size: 64, offset: 832)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !5152, file: !60, line: 293, baseType: !5155, size: 64, offset: 896)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !5152, file: !60, line: 294, baseType: !5155, size: 64, offset: 960)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !5152, file: !60, line: 295, baseType: !5155, size: 64, offset: 1024)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !5152, file: !60, line: 296, baseType: !5155, size: 64, offset: 1088)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !5152, file: !60, line: 297, baseType: !5155, size: 64, offset: 1152)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !5152, file: !60, line: 298, baseType: !5155, size: 64, offset: 1216)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !5152, file: !60, line: 299, baseType: !5155, size: 64, offset: 1280)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !5152, file: !60, line: 300, baseType: !5155, size: 64, offset: 1344)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !5152, file: !60, line: 301, baseType: !5155, size: 64, offset: 1408)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1004, file: !114, line: 470, baseType: !5181, size: 64, offset: 768)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 64)
!5182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !5183, line: 82, size: 1408, elements: !5184)
!5183 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!5184 = !{!5185, !5186, !5187, !5188, !5189, !5190, !5191, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5264, !5267, !5268}
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5182, file: !5183, line: 83, baseType: !948, size: 64)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5182, file: !5183, line: 84, baseType: !948, size: 64, offset: 64)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !5182, file: !5183, line: 85, baseType: !1003, size: 64, offset: 128)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !5182, file: !5183, line: 86, baseType: !1108, size: 64, offset: 192)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5182, file: !5183, line: 87, baseType: !1108, size: 64, offset: 256)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !5182, file: !5183, line: 88, baseType: !1108, size: 64, offset: 320)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5182, file: !5183, line: 90, baseType: !5192, size: 64, offset: 384)
!5192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5193, size: 64)
!5193 = !DISubroutineType(types: !5194)
!5194 = !{!913, !1003, !5195}
!5195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5196, size: 64)
!5196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !108, line: 95, size: 1152, elements: !5197)
!5197 = !{!5198, !5199, !5200, !5201, !5202, !5203, !5204, !5217, !5228, !5229, !5230, !5231, !5232, !5240, !5241, !5242, !5243, !5244, !5245}
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5196, file: !108, line: 96, baseType: !948, size: 64)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5196, file: !108, line: 97, baseType: !5181, size: 64, offset: 64)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5196, file: !108, line: 99, baseType: !1405, size: 64, offset: 128)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !5196, file: !108, line: 100, baseType: !948, size: 64, offset: 192)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !5196, file: !108, line: 102, baseType: !1262, size: 8, offset: 256)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !5196, file: !108, line: 103, baseType: !107, size: 32, offset: 288)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !5196, file: !108, line: 105, baseType: !5205, size: 64, offset: 320)
!5205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5206, size: 64)
!5206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5207)
!5207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !5208, line: 262, size: 1600, elements: !5209)
!5208 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!5209 = !{!5210, !5211, !5212, !5216}
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5207, file: !5208, line: 263, baseType: !2759, size: 256)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5207, file: !5208, line: 264, baseType: !2759, size: 256, offset: 256)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !5207, file: !5208, line: 265, baseType: !5213, size: 1024, offset: 512)
!5213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 1024, elements: !5214)
!5214 = !{!5215}
!5215 = !DISubrange(count: 128)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5207, file: !5208, line: 266, baseType: !3931, size: 64, offset: 1536)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !5196, file: !108, line: 106, baseType: !5218, size: 64, offset: 384)
!5218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5219, size: 64)
!5219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5220)
!5220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !5208, line: 210, size: 256, elements: !5221)
!5221 = !{!5222, !5224, !5226, !5227}
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5220, file: !5208, line: 211, baseType: !5223, size: 72)
!5223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2185, size: 72, elements: !834)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5220, file: !5208, line: 212, baseType: !5225, size: 64, offset: 128)
!5225 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !5208, line: 14, baseType: !902)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !5220, file: !5208, line: 213, baseType: !270, size: 32, offset: 192)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !5220, file: !5208, line: 214, baseType: !270, size: 32, offset: 224)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5196, file: !108, line: 108, baseType: !5155, size: 64, offset: 448)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5196, file: !108, line: 109, baseType: !5146, size: 64, offset: 512)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5196, file: !108, line: 110, baseType: !5155, size: 64, offset: 576)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5196, file: !108, line: 111, baseType: !5146, size: 64, offset: 640)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5196, file: !108, line: 112, baseType: !5233, size: 64, offset: 704)
!5233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5234, size: 64)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{!913, !1003, !5236}
!5236 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !60, line: 52, baseType: !5237)
!5237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !60, line: 50, size: 32, elements: !5238)
!5238 = !{!5239}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5237, file: !60, line: 51, baseType: !913, size: 32)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5196, file: !108, line: 113, baseType: !5155, size: 64, offset: 768)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5196, file: !108, line: 114, baseType: !1108, size: 64, offset: 832)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5196, file: !108, line: 115, baseType: !1108, size: 64, offset: 896)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5196, file: !108, line: 117, baseType: !5150, size: 64, offset: 960)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !5196, file: !108, line: 118, baseType: !5146, size: 64, offset: 1024)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5196, file: !108, line: 120, baseType: !5246, size: 64, offset: 1088)
!5246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5247, size: 64)
!5247 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !108, line: 120, flags: DIFlagFwdDecl)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5182, file: !5183, line: 91, baseType: !5138, size: 64, offset: 448)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5182, file: !5183, line: 92, baseType: !5155, size: 64, offset: 512)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5182, file: !5183, line: 93, baseType: !5146, size: 64, offset: 576)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5182, file: !5183, line: 94, baseType: !5155, size: 64, offset: 640)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5182, file: !5183, line: 95, baseType: !5146, size: 64, offset: 704)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !5182, file: !5183, line: 97, baseType: !5155, size: 64, offset: 768)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !5182, file: !5183, line: 98, baseType: !5155, size: 64, offset: 832)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5182, file: !5183, line: 100, baseType: !5233, size: 64, offset: 896)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5182, file: !5183, line: 101, baseType: !5155, size: 64, offset: 960)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !5182, file: !5183, line: 103, baseType: !5155, size: 64, offset: 1024)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !5182, file: !5183, line: 105, baseType: !5155, size: 64, offset: 1088)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5182, file: !5183, line: 107, baseType: !5150, size: 64, offset: 1152)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !5182, file: !5183, line: 109, baseType: !5261, size: 64, offset: 1216)
!5261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5262, size: 64)
!5262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5263)
!5263 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !5183, line: 109, flags: DIFlagFwdDecl)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5182, file: !5183, line: 111, baseType: !5265, size: 64, offset: 1280)
!5265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5266, size: 64)
!5266 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !5183, line: 111, flags: DIFlagFwdDecl)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !5182, file: !5183, line: 112, baseType: !1420, offset: 1344)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !5182, file: !5183, line: 114, baseType: !1262, size: 8, offset: 1344)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1004, file: !114, line: 471, baseType: !5195, size: 64, offset: 832)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1004, file: !114, line: 473, baseType: !973, size: 64, offset: 896)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1004, file: !114, line: 475, baseType: !973, size: 64, offset: 960)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1004, file: !114, line: 480, baseType: !1498, size: 192, offset: 1024)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1004, file: !114, line: 484, baseType: !5274, size: 576, offset: 1216)
!5274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !114, line: 361, size: 576, elements: !5275)
!5275 = !{!5276, !5277, !5278, !5279, !5280, !5281}
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !5274, file: !114, line: 362, baseType: !919, size: 128)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !5274, file: !114, line: 363, baseType: !919, size: 128, offset: 128)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !5274, file: !114, line: 364, baseType: !919, size: 128, offset: 256)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !5274, file: !114, line: 365, baseType: !919, size: 128, offset: 384)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !5274, file: !114, line: 366, baseType: !1262, size: 8, offset: 512)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5274, file: !114, line: 367, baseType: !113, size: 32, offset: 544)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1004, file: !114, line: 485, baseType: !5283, size: 2304, offset: 1792)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !60, line: 565, size: 2304, elements: !5284)
!5284 = !{!5285, !5286, !5287, !5288, !5289, !5290, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5298, !5299, !5300, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5369, !5373}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !5283, file: !60, line: 566, baseType: !5236, size: 32)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !5283, file: !60, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !5283, file: !60, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !5283, file: !60, line: 569, baseType: !1262, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !5283, file: !60, line: 570, baseType: !1262, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !5283, file: !60, line: 571, baseType: !1262, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !5283, file: !60, line: 572, baseType: !1262, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !5283, file: !60, line: 573, baseType: !1262, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !5283, file: !60, line: 574, baseType: !1262, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !5283, file: !60, line: 575, baseType: !1262, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !5283, file: !60, line: 576, baseType: !1262, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !5283, file: !60, line: 577, baseType: !268, size: 32, offset: 64)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5283, file: !60, line: 578, baseType: !1020, offset: 96)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5283, file: !60, line: 580, baseType: !919, size: 128, offset: 128)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !5283, file: !60, line: 581, baseType: !2332, size: 192, offset: 256)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !5283, file: !60, line: 582, baseType: !5301, size: 64, offset: 448)
!5301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5302, size: 64)
!5302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !5303, line: 43, size: 1472, elements: !5304)
!5303 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!5304 = !{!5305, !5306, !5307, !5308, !5309, !5312, !5313, !5314, !5315, !5316, !5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326}
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5302, file: !5303, line: 44, baseType: !948, size: 64)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5302, file: !5303, line: 45, baseType: !913, size: 32, offset: 64)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5302, file: !5303, line: 46, baseType: !919, size: 128, offset: 128)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5302, file: !5303, line: 47, baseType: !1020, offset: 256)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5302, file: !5303, line: 48, baseType: !5310, size: 64, offset: 256)
!5310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5311, size: 64)
!5311 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !60, line: 533, flags: DIFlagFwdDecl)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5302, file: !5303, line: 49, baseType: !2929, size: 320, offset: 320)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5302, file: !5303, line: 50, baseType: !902, size: 64, offset: 640)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !5302, file: !5303, line: 51, baseType: !2134, size: 64, offset: 704)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !5302, file: !5303, line: 52, baseType: !2134, size: 64, offset: 768)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !5302, file: !5303, line: 53, baseType: !2134, size: 64, offset: 832)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !5302, file: !5303, line: 54, baseType: !2134, size: 64, offset: 896)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !5302, file: !5303, line: 55, baseType: !2134, size: 64, offset: 960)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !5302, file: !5303, line: 56, baseType: !902, size: 64, offset: 1024)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !5302, file: !5303, line: 57, baseType: !902, size: 64, offset: 1088)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !5302, file: !5303, line: 58, baseType: !902, size: 64, offset: 1152)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !5302, file: !5303, line: 59, baseType: !902, size: 64, offset: 1216)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !5302, file: !5303, line: 60, baseType: !902, size: 64, offset: 1280)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5302, file: !5303, line: 61, baseType: !1003, size: 64, offset: 1344)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5302, file: !5303, line: 62, baseType: !1262, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !5302, file: !5303, line: 63, baseType: !1262, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !5283, file: !60, line: 583, baseType: !1262, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !5283, file: !60, line: 584, baseType: !1262, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !5283, file: !60, line: 585, baseType: !1262, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !5283, file: !60, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !5283, file: !60, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !5283, file: !60, line: 592, baseType: !2126, size: 512, offset: 576)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5283, file: !60, line: 593, baseType: !943, size: 64, offset: 1088)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5283, file: !60, line: 594, baseType: !2817, size: 256, offset: 1152)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !5283, file: !60, line: 595, baseType: !2312, size: 128, offset: 1408)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5283, file: !60, line: 596, baseType: !5310, size: 64, offset: 1536)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !5283, file: !60, line: 597, baseType: !1571, size: 32, offset: 1600)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !5283, file: !60, line: 598, baseType: !1571, size: 32, offset: 1632)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !5283, file: !60, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !5283, file: !60, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !5283, file: !60, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !5283, file: !60, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !5283, file: !60, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !5283, file: !60, line: 604, baseType: !1262, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !5283, file: !60, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !5283, file: !60, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !5283, file: !60, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !5283, file: !60, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !5283, file: !60, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !5283, file: !60, line: 610, baseType: !7, size: 32, offset: 1696)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5283, file: !60, line: 611, baseType: !120, size: 32, offset: 1728)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !5283, file: !60, line: 612, baseType: !59, size: 32, offset: 1760)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !5283, file: !60, line: 613, baseType: !913, size: 32, offset: 1792)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !5283, file: !60, line: 614, baseType: !913, size: 32, offset: 1824)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !5283, file: !60, line: 615, baseType: !943, size: 64, offset: 1856)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !5283, file: !60, line: 616, baseType: !943, size: 64, offset: 1920)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !5283, file: !60, line: 617, baseType: !943, size: 64, offset: 1984)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !5283, file: !60, line: 618, baseType: !943, size: 64, offset: 2048)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !5283, file: !60, line: 620, baseType: !5360, size: 64, offset: 2112)
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 64)
!5361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !60, line: 536, size: 256, elements: !5362)
!5362 = !{!5363, !5364, !5365, !5366}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5361, file: !60, line: 537, baseType: !1020)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5361, file: !60, line: 538, baseType: !7, size: 32)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !5361, file: !60, line: 540, baseType: !919, size: 128, offset: 64)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !5361, file: !60, line: 543, baseType: !5367, size: 64, offset: 192)
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 64)
!5368 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !60, line: 534, flags: DIFlagFwdDecl)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !5283, file: !60, line: 621, baseType: !5370, size: 64, offset: 2176)
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5371, size: 64)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{null, !1003, !2275}
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !5283, file: !60, line: 622, baseType: !5374, size: 64, offset: 2240)
!5374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5375, size: 64)
!5375 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !60, line: 622, flags: DIFlagFwdDecl)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1004, file: !114, line: 486, baseType: !5377, size: 64, offset: 4096)
!5377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5378, size: 64)
!5378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !60, line: 642, size: 1792, elements: !5379)
!5379 = !{!5380, !5381, !5382, !5386, !5387, !5388}
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5378, file: !60, line: 643, baseType: !5152, size: 1472)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5378, file: !60, line: 644, baseType: !5155, size: 64, offset: 1472)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5378, file: !60, line: 645, baseType: !5383, size: 64, offset: 1536)
!5383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5384, size: 64)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{null, !1003, !1262}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5378, file: !60, line: 646, baseType: !5155, size: 64, offset: 1600)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !5378, file: !60, line: 647, baseType: !5146, size: 64, offset: 1664)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !5378, file: !60, line: 648, baseType: !5146, size: 64, offset: 1728)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1004, file: !114, line: 493, baseType: !5390, size: 64, offset: 4160)
!5390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5391, size: 64)
!5391 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !114, line: 493, flags: DIFlagFwdDecl)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1004, file: !114, line: 499, baseType: !919, size: 128, offset: 4224)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1004, file: !114, line: 502, baseType: !5394, size: 64, offset: 4352)
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5395, size: 64)
!5395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5396)
!5396 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !114, line: 502, flags: DIFlagFwdDecl)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1004, file: !114, line: 504, baseType: !5398, size: 64, offset: 4416)
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1004, file: !114, line: 505, baseType: !943, size: 64, offset: 4480)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1004, file: !114, line: 510, baseType: !943, size: 64, offset: 4544)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1004, file: !114, line: 511, baseType: !5402, size: 64, offset: 4608)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5404)
!5404 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !114, line: 511, flags: DIFlagFwdDecl)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1004, file: !114, line: 513, baseType: !5406, size: 64, offset: 4672)
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 64)
!5407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !114, line: 288, size: 128, elements: !5408)
!5408 = !{!5409, !5410}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5407, file: !114, line: 293, baseType: !7, size: 32)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !5407, file: !114, line: 294, baseType: !902, size: 64, offset: 64)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1004, file: !114, line: 515, baseType: !919, size: 128, offset: 4736)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1004, file: !114, line: 526, baseType: !5413, offset: 4864)
!5413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !5414, line: 5, elements: !1034)
!5414 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1004, file: !114, line: 528, baseType: !5416, size: 64, offset: 4864)
!5416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5417, size: 64)
!5417 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !5418, line: 14, flags: DIFlagFwdDecl)
!5418 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1004, file: !114, line: 529, baseType: !5420, size: 64, offset: 4928)
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !5422, line: 17, size: 192, elements: !5423)
!5422 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!5423 = !{!5424, !5425, !5508}
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !5421, file: !5422, line: 18, baseType: !5420, size: 64)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5421, file: !5422, line: 19, baseType: !5426, size: 64, offset: 64)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5428)
!5428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !5422, line: 110, size: 1152, elements: !5429)
!5429 = !{!5430, !5434, !5438, !5444, !5450, !5454, !5458, !5463, !5467, !5468, !5472, !5476, !5480, !5491, !5492, !5493, !5494, !5504}
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5428, file: !5422, line: 111, baseType: !5431, size: 64)
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5432, size: 64)
!5432 = !DISubroutineType(types: !5433)
!5433 = !{!5420, !5420}
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5428, file: !5422, line: 112, baseType: !5435, size: 64, offset: 64)
!5435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5436, size: 64)
!5436 = !DISubroutineType(types: !5437)
!5437 = !{null, !5420}
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !5428, file: !5422, line: 113, baseType: !5439, size: 64, offset: 128)
!5439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5440, size: 64)
!5440 = !DISubroutineType(types: !5441)
!5441 = !{!1262, !5442}
!5442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5443, size: 64)
!5443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5421)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !5428, file: !5422, line: 114, baseType: !5445, size: 64, offset: 192)
!5445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5446, size: 64)
!5446 = !DISubroutineType(types: !5447)
!5447 = !{!3931, !5442, !5448}
!5448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5449, size: 64)
!5449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !5428, file: !5422, line: 116, baseType: !5451, size: 64, offset: 256)
!5451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5452, size: 64)
!5452 = !DISubroutineType(types: !5453)
!5453 = !{!1262, !5442, !948}
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !5428, file: !5422, line: 118, baseType: !5455, size: 64, offset: 320)
!5455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5456, size: 64)
!5456 = !DISubroutineType(types: !5457)
!5457 = !{!913, !5442, !948, !7, !973, !1102}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !5428, file: !5422, line: 123, baseType: !5459, size: 64, offset: 384)
!5459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5460, size: 64)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{!913, !5442, !948, !5462, !1102}
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !5428, file: !5422, line: 126, baseType: !5464, size: 64, offset: 448)
!5464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5465, size: 64)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!948, !5442}
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !5428, file: !5422, line: 127, baseType: !5464, size: 64, offset: 512)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !5428, file: !5422, line: 128, baseType: !5469, size: 64, offset: 576)
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{!5420, !5442}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !5428, file: !5422, line: 130, baseType: !5473, size: 64, offset: 640)
!5473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5474, size: 64)
!5474 = !DISubroutineType(types: !5475)
!5475 = !{!5420, !5442, !5420}
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !5428, file: !5422, line: 133, baseType: !5477, size: 64, offset: 704)
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5478, size: 64)
!5478 = !DISubroutineType(types: !5479)
!5479 = !{!5420, !5442, !948}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !5428, file: !5422, line: 135, baseType: !5481, size: 64, offset: 768)
!5481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5482, size: 64)
!5482 = !DISubroutineType(types: !5483)
!5483 = !{!913, !5442, !948, !948, !7, !7, !5484}
!5484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5485, size: 64)
!5485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !5422, line: 43, size: 640, elements: !5486)
!5486 = !{!5487, !5488, !5489}
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5485, file: !5422, line: 44, baseType: !5420, size: 64)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !5485, file: !5422, line: 45, baseType: !7, size: 32, offset: 64)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5485, file: !5422, line: 46, baseType: !5490, size: 512, offset: 128)
!5490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 512, elements: !296)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !5428, file: !5422, line: 140, baseType: !5473, size: 64, offset: 832)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !5428, file: !5422, line: 143, baseType: !5469, size: 64, offset: 896)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !5428, file: !5422, line: 145, baseType: !5431, size: 64, offset: 960)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !5428, file: !5422, line: 146, baseType: !5495, size: 64, offset: 1024)
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5496, size: 64)
!5496 = !DISubroutineType(types: !5497)
!5497 = !{!913, !5442, !5498}
!5498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5499, size: 64)
!5499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !5422, line: 29, size: 128, elements: !5500)
!5500 = !{!5501, !5502, !5503}
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5499, file: !5422, line: 30, baseType: !7, size: 32)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5499, file: !5422, line: 31, baseType: !7, size: 32, offset: 32)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !5499, file: !5422, line: 32, baseType: !5442, size: 64, offset: 64)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !5428, file: !5422, line: 148, baseType: !5505, size: 64, offset: 1088)
!5505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5506, size: 64)
!5506 = !DISubroutineType(types: !5507)
!5507 = !{!913, !5442, !1003}
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5421, file: !5422, line: 20, baseType: !1003, size: 64, offset: 128)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1004, file: !114, line: 534, baseType: !1285, size: 32, offset: 4992)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1004, file: !114, line: 535, baseType: !268, size: 32, offset: 5024)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1004, file: !114, line: 537, baseType: !1020, offset: 5056)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1004, file: !114, line: 538, baseType: !919, size: 128, offset: 5056)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1004, file: !114, line: 540, baseType: !5514, size: 64, offset: 5184)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !5516, line: 54, size: 960, elements: !5517)
!5516 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!5517 = !{!5518, !5519, !5520, !5521, !5522, !5523, !5524, !5528, !5532, !5533, !5534, !5535, !5539, !5543, !5544}
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5515, file: !5516, line: 55, baseType: !948, size: 64)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5515, file: !5516, line: 56, baseType: !1405, size: 64, offset: 64)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !5515, file: !5516, line: 58, baseType: !1108, size: 64, offset: 128)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5515, file: !5516, line: 59, baseType: !1108, size: 64, offset: 192)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !5515, file: !5516, line: 60, baseType: !1013, size: 64, offset: 256)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !5515, file: !5516, line: 62, baseType: !5138, size: 64, offset: 320)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5515, file: !5516, line: 63, baseType: !5525, size: 64, offset: 384)
!5525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5526, size: 64)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!1061, !1003, !3019}
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !5515, file: !5516, line: 65, baseType: !5529, size: 64, offset: 448)
!5529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5530, size: 64)
!5530 = !DISubroutineType(types: !5531)
!5531 = !{null, !5514}
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !5515, file: !5516, line: 66, baseType: !5146, size: 64, offset: 512)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !5515, file: !5516, line: 68, baseType: !5155, size: 64, offset: 576)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !5515, file: !5516, line: 70, baseType: !4958, size: 64, offset: 640)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5515, file: !5516, line: 71, baseType: !5536, size: 64, offset: 704)
!5536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5537, size: 64)
!5537 = !DISubroutineType(types: !5538)
!5538 = !{!3931, !1003}
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5515, file: !5516, line: 73, baseType: !5540, size: 64, offset: 768)
!5540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 64)
!5541 = !DISubroutineType(types: !5542)
!5542 = !{null, !1003, !4990, !4991}
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5515, file: !5516, line: 75, baseType: !5150, size: 64, offset: 832)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5515, file: !5516, line: 77, baseType: !5265, size: 64, offset: 896)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1004, file: !114, line: 541, baseType: !1108, size: 64, offset: 5248)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1004, file: !114, line: 543, baseType: !5146, size: 64, offset: 5312)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1004, file: !114, line: 544, baseType: !5548, size: 64, offset: 5376)
!5548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5549, size: 64)
!5549 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !114, line: 45, flags: DIFlagFwdDecl)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1004, file: !114, line: 545, baseType: !5551, size: 64, offset: 5440)
!5551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5552, size: 64)
!5552 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !114, line: 47, flags: DIFlagFwdDecl)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1004, file: !114, line: 547, baseType: !1262, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1004, file: !114, line: 548, baseType: !1262, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1004, file: !114, line: 549, baseType: !1262, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1004, file: !114, line: 550, baseType: !1262, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !926, file: !916, line: 635, baseType: !1004, size: 5568, offset: 2304)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !926, file: !916, line: 636, baseType: !1122, size: 64, offset: 7872)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !926, file: !916, line: 637, baseType: !1122, size: 64, offset: 7936)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !926, file: !916, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !915, file: !916, line: 312, baseType: !925, size: 64, offset: 192)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !915, file: !916, line: 314, baseType: !973, size: 64, offset: 256)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !915, file: !916, line: 315, baseType: !988, size: 64, offset: 320)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !915, file: !916, line: 316, baseType: !5565, size: 64, offset: 384)
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 64)
!5566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !916, line: 69, size: 832, elements: !5567)
!5567 = !{!5568, !5569, !5570, !5573, !5574}
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5566, file: !916, line: 70, baseType: !925, size: 64)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5566, file: !916, line: 71, baseType: !919, size: 128, offset: 64)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !5566, file: !916, line: 72, baseType: !5571, size: 64, offset: 192)
!5571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5572, size: 64)
!5572 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !916, line: 72, flags: DIFlagFwdDecl)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5566, file: !916, line: 73, baseType: !165, size: 8, offset: 256)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5566, file: !916, line: 74, baseType: !1007, size: 512, offset: 320)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !915, file: !916, line: 318, baseType: !7, size: 32, offset: 448)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !915, file: !916, line: 319, baseType: !320, size: 16, offset: 480)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !915, file: !916, line: 320, baseType: !320, size: 16, offset: 496)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !915, file: !916, line: 321, baseType: !320, size: 16, offset: 512)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !915, file: !916, line: 322, baseType: !320, size: 16, offset: 528)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !915, file: !916, line: 323, baseType: !7, size: 32, offset: 544)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !915, file: !916, line: 324, baseType: !2184, size: 8, offset: 576)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !915, file: !916, line: 325, baseType: !2184, size: 8, offset: 584)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !915, file: !916, line: 330, baseType: !2184, size: 8, offset: 592)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !915, file: !916, line: 331, baseType: !2184, size: 8, offset: 600)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !915, file: !916, line: 332, baseType: !2184, size: 8, offset: 608)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !915, file: !916, line: 333, baseType: !2184, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !915, file: !916, line: 334, baseType: !2184, size: 8, offset: 624)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !915, file: !916, line: 335, baseType: !2184, size: 8, offset: 632)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !915, file: !916, line: 336, baseType: !1683, size: 16, offset: 640)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !915, file: !916, line: 337, baseType: !5591, size: 64, offset: 704)
!5591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !915, file: !916, line: 339, baseType: !5593, size: 64, offset: 768)
!5593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5594, size: 64)
!5594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !916, line: 858, size: 2048, elements: !5595)
!5595 = !{!5596, !5597, !5598, !5610, !5614, !5618, !5622, !5626, !5627, !5631, !5650, !5651, !5652}
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5594, file: !916, line: 859, baseType: !919, size: 128)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5594, file: !916, line: 860, baseType: !948, size: 64, offset: 128)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !5594, file: !916, line: 861, baseType: !5599, size: 64, offset: 192)
!5599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5600, size: 64)
!5600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5601)
!5601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !5208, line: 38, size: 256, elements: !5602)
!5602 = !{!5603, !5604, !5605, !5606, !5607, !5608, !5609}
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5601, file: !5208, line: 39, baseType: !270, size: 32)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5601, file: !5208, line: 39, baseType: !270, size: 32, offset: 32)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !5601, file: !5208, line: 40, baseType: !270, size: 32, offset: 64)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !5601, file: !5208, line: 40, baseType: !270, size: 32, offset: 96)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5601, file: !5208, line: 41, baseType: !270, size: 32, offset: 128)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !5601, file: !5208, line: 41, baseType: !270, size: 32, offset: 160)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5601, file: !5208, line: 42, baseType: !5225, size: 64, offset: 192)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5594, file: !916, line: 862, baseType: !5611, size: 64, offset: 256)
!5611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5612, size: 64)
!5612 = !DISubroutineType(types: !5613)
!5613 = !{!913, !914, !5599}
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5594, file: !916, line: 863, baseType: !5615, size: 64, offset: 320)
!5615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 64)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{null, !914}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5594, file: !916, line: 864, baseType: !5619, size: 64, offset: 384)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5620, size: 64)
!5620 = !DISubroutineType(types: !5621)
!5621 = !{!913, !914, !5236}
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5594, file: !916, line: 865, baseType: !5623, size: 64, offset: 448)
!5623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5624, size: 64)
!5624 = !DISubroutineType(types: !5625)
!5625 = !{!913, !914}
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5594, file: !916, line: 866, baseType: !5615, size: 64, offset: 512)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !5594, file: !916, line: 867, baseType: !5628, size: 64, offset: 576)
!5628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5629, size: 64)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{!913, !914, !913}
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !5594, file: !916, line: 868, baseType: !5632, size: 64, offset: 640)
!5632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5633, size: 64)
!5633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5634)
!5634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !916, line: 795, size: 384, elements: !5635)
!5635 = !{!5636, !5642, !5646, !5647, !5648, !5649}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !5634, file: !916, line: 797, baseType: !5637, size: 64)
!5637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5638, size: 64)
!5638 = !DISubroutineType(types: !5639)
!5639 = !{!5640, !914, !5641}
!5640 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !916, line: 772, baseType: !7)
!5641 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !916, line: 180, baseType: !7)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !5634, file: !916, line: 801, baseType: !5643, size: 64, offset: 64)
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5644, size: 64)
!5644 = !DISubroutineType(types: !5645)
!5645 = !{!5640, !914}
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !5634, file: !916, line: 804, baseType: !5643, size: 64, offset: 128)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !5634, file: !916, line: 807, baseType: !5615, size: 64, offset: 192)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !5634, file: !916, line: 808, baseType: !5615, size: 64, offset: 256)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5634, file: !916, line: 811, baseType: !5615, size: 64, offset: 320)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5594, file: !916, line: 869, baseType: !1108, size: 64, offset: 704)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5594, file: !916, line: 870, baseType: !5196, size: 1152, offset: 768)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !5594, file: !916, line: 871, baseType: !5653, size: 128, offset: 1920)
!5653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !916, line: 759, size: 128, elements: !5654)
!5654 = !{!5655, !5656}
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5653, file: !916, line: 760, baseType: !1020)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5653, file: !916, line: 761, baseType: !919, size: 128)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !915, file: !916, line: 340, baseType: !943, size: 64, offset: 832)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !915, file: !916, line: 346, baseType: !5407, size: 128, offset: 896)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !915, file: !916, line: 348, baseType: !5660, size: 32, offset: 1024)
!5660 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !916, line: 155, baseType: !913)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !915, file: !916, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !915, file: !916, line: 352, baseType: !2184, size: 8, offset: 1064)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !915, file: !916, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !915, file: !916, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !915, file: !916, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !915, file: !916, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !915, file: !916, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !915, file: !916, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !915, file: !916, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !915, file: !916, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !915, file: !916, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !915, file: !916, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !915, file: !916, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !915, file: !916, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !915, file: !916, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !915, file: !916, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !915, file: !916, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !915, file: !916, line: 376, baseType: !7, size: 32, offset: 1120)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !915, file: !916, line: 377, baseType: !7, size: 32, offset: 1152)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !915, file: !916, line: 380, baseType: !5681, size: 64, offset: 1216)
!5681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5682, size: 64)
!5682 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !916, line: 303, flags: DIFlagFwdDecl)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !915, file: !916, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !915, file: !916, line: 383, baseType: !913, size: 32, offset: 1312)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !915, file: !916, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !915, file: !916, line: 387, baseType: !5641, size: 32, offset: 1376)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !915, file: !916, line: 388, baseType: !1004, size: 5568, offset: 1408)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !915, file: !916, line: 390, baseType: !913, size: 32, offset: 6976)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !915, file: !916, line: 396, baseType: !7, size: 32, offset: 7008)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !915, file: !916, line: 397, baseType: !5691, size: 8704, offset: 7040)
!5691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 8704, elements: !5692)
!5692 = !{!5693}
!5693 = !DISubrange(count: 17)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !915, file: !916, line: 399, baseType: !1262, size: 8, offset: 15744)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !915, file: !916, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !915, file: !916, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !915, file: !916, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !915, file: !916, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !915, file: !916, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !915, file: !916, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !915, file: !916, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !915, file: !916, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !915, file: !916, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !915, file: !916, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !915, file: !916, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !915, file: !916, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !915, file: !916, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !915, file: !916, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !915, file: !916, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !915, file: !916, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !915, file: !916, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !915, file: !916, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !915, file: !916, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !915, file: !916, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !915, file: !916, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !915, file: !916, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !915, file: !916, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !915, file: !916, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !915, file: !916, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !915, file: !916, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !915, file: !916, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !915, file: !916, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !915, file: !916, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !915, file: !916, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !915, file: !916, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !915, file: !916, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !915, file: !916, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !915, file: !916, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !915, file: !916, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !915, file: !916, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !915, file: !916, line: 450, baseType: !5732, size: 16, offset: 15792)
!5732 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !916, line: 206, baseType: !320)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !915, file: !916, line: 451, baseType: !1571, size: 32, offset: 15808)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !915, file: !916, line: 453, baseType: !5735, size: 512, offset: 15840)
!5735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 512, elements: !247)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !915, file: !916, line: 454, baseType: !1410, size: 64, offset: 16384)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !915, file: !916, line: 455, baseType: !1122, size: 64, offset: 16448)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !915, file: !916, line: 456, baseType: !913, size: 32, offset: 16512)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !915, file: !916, line: 457, baseType: !5740, size: 1088, offset: 16576)
!5740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1122, size: 1088, elements: !5692)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !915, file: !916, line: 458, baseType: !5740, size: 1088, offset: 17664)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !915, file: !916, line: 469, baseType: !1108, size: 64, offset: 18752)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !915, file: !916, line: 471, baseType: !5744, size: 64, offset: 18816)
!5744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5745, size: 64)
!5745 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !916, line: 304, flags: DIFlagFwdDecl)
!5746 = !DIDerivedType(tag: DW_TAG_member, scope: !915, file: !916, line: 478, baseType: !5747, size: 64, offset: 18880)
!5747 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !915, file: !916, line: 478, size: 64, elements: !5748)
!5748 = !{!5749, !5752}
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !5747, file: !916, line: 479, baseType: !5750, size: 64)
!5750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5751, size: 64)
!5751 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !916, line: 305, flags: DIFlagFwdDecl)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !5747, file: !916, line: 480, baseType: !914, size: 64)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !915, file: !916, line: 482, baseType: !1683, size: 16, offset: 18944)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !915, file: !916, line: 483, baseType: !2184, size: 8, offset: 18960)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !915, file: !916, line: 497, baseType: !1683, size: 16, offset: 18976)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !915, file: !916, line: 498, baseType: !942, size: 64, offset: 19008)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !915, file: !916, line: 499, baseType: !1102, size: 64, offset: 19072)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !915, file: !916, line: 500, baseType: !1061, size: 64, offset: 19136)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !915, file: !916, line: 502, baseType: !902, size: 64, offset: 19200)
!5760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5761, size: 64)
!5761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_hba", file: !164, line: 692, size: 5376, elements: !5762)
!5762 = !{!5763, !5764, !5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5781, !6210, !6211, !6212, !6213, !6214, !6215, !6219, !6220, !6221, !6241, !6246, !6247, !6248, !6249, !6250, !6252, !6253, !6254, !6255, !6256, !6257, !6258, !6259, !6260, !6261, !6262, !6263, !6264, !6265, !6266, !6267, !6275, !6276, !6277, !6278, !6279, !6280, !6282, !6283, !6291, !6292, !6293, !6302, !6303, !6304}
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_block_size", scope: !5761, file: !164, line: 693, baseType: !7, size: 32)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_geom_heads", scope: !5761, file: !164, line: 694, baseType: !165, size: 8, offset: 32)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_geom_sectors", scope: !5761, file: !164, line: 695, baseType: !165, size: 8, offset: 40)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !5761, file: !164, line: 696, baseType: !165, size: 8, offset: 48)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_size", scope: !5761, file: !164, line: 697, baseType: !320, size: 16, offset: 64)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "segment_size", scope: !5761, file: !164, line: 698, baseType: !320, size: 16, offset: 80)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "new_ev_seq", scope: !5761, file: !164, line: 699, baseType: !320, size: 16, offset: 96)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "old_ev_seq", scope: !5761, file: !164, line: 700, baseType: !320, size: 16, offset: 112)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "dual_mode_interface", scope: !5761, file: !164, line: 701, baseType: !1262, size: 8, offset: 128)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "bgi_status_supported", scope: !5761, file: !164, line: 702, baseType: !1262, size: 8, offset: 136)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "safte_enabled", scope: !5761, file: !164, line: 703, baseType: !1262, size: 8, offset: 144)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "need_ldev_info", scope: !5761, file: !164, line: 704, baseType: !1262, size: 8, offset: 152)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "need_err_info", scope: !5761, file: !164, line: 705, baseType: !1262, size: 8, offset: 160)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "need_rbld", scope: !5761, file: !164, line: 706, baseType: !1262, size: 8, offset: 168)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "need_cc_status", scope: !5761, file: !164, line: 707, baseType: !1262, size: 8, offset: 176)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "need_bgi_status", scope: !5761, file: !164, line: 708, baseType: !1262, size: 8, offset: 184)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "rbld_first", scope: !5761, file: !164, line: 709, baseType: !1262, size: 8, offset: 192)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !5761, file: !164, line: 711, baseType: !914, size: 64, offset: 256)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5761, file: !164, line: 712, baseType: !5782, size: 64, offset: 320)
!5782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5783, size: 64)
!5783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !154, line: 524, size: 16256, elements: !5784)
!5784 = !{!5785, !5786, !5787, !5788, !5789, !5790, !5791, !5792, !5793, !5794, !5795, !6156, !6159, !6160, !6161, !6162, !6163, !6164, !6165, !6166, !6167, !6168, !6169, !6170, !6171, !6172, !6173, !6174, !6175, !6176, !6177, !6178, !6179, !6180, !6181, !6182, !6183, !6184, !6185, !6186, !6187, !6188, !6189, !6190, !6191, !6192, !6194, !6195, !6196, !6197, !6198, !6199, !6200, !6201, !6202, !6203, !6204, !6205, !6206, !6207, !6208, !6209}
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !5783, file: !154, line: 533, baseType: !919, size: 128)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !5783, file: !154, line: 534, baseType: !919, size: 128, offset: 128)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !5783, file: !154, line: 536, baseType: !919, size: 128, offset: 256)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !5783, file: !154, line: 538, baseType: !1020, offset: 384)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !5783, file: !154, line: 539, baseType: !1906, size: 64, offset: 384)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !5783, file: !154, line: 541, baseType: !1498, size: 192, offset: 448)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !5783, file: !154, line: 543, baseType: !919, size: 128, offset: 640)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !5783, file: !154, line: 544, baseType: !2050, size: 64, offset: 768)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !5783, file: !154, line: 545, baseType: !2331, size: 64, offset: 832)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !5783, file: !154, line: 547, baseType: !2312, size: 128, offset: 896)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !5783, file: !154, line: 548, baseType: !5796, size: 64, offset: 1024)
!5796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5797, size: 64)
!5797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !154, line: 32, size: 2880, elements: !5798)
!5798 = !{!5799, !5800, !5801, !5805, !5958, !6041, !6042, !6043, !6047, !6051, !6052, !6053, !6054, !6055, !6059, !6060, !6064, !6068, !6072, !6076, !6080, !6084, !6088, !6092, !6096, !6097, !6101, !6105, !6109, !6113, !6114, !6115, !6116, !6117, !6118, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6148, !6149, !6150, !6151, !6152, !6155}
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5797, file: !154, line: 33, baseType: !1405, size: 64)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5797, file: !154, line: 34, baseType: !948, size: 64, offset: 64)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5797, file: !154, line: 43, baseType: !5802, size: 64, offset: 128)
!5802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5803, size: 64)
!5803 = !DISubroutineType(types: !5804)
!5804 = !{!948, !5782}
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5797, file: !154, line: 50, baseType: !5806, size: 64, offset: 192)
!5806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5807, size: 64)
!5807 = !DISubroutineType(types: !5808)
!5808 = !{!913, !5809, !7, !973}
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!5810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !128, line: 101, size: 15232, align: 64, elements: !5811)
!5811 = !{!5812, !5813, !5814, !5815, !5816, !5817, !5818, !5819, !5820, !5821, !5822, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5833, !5834, !5835, !5836, !5837, !5838, !5839, !5841, !5842, !5843, !5844, !5852, !5853, !5854, !5855, !5856, !5880, !5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915, !5916, !5917, !5918, !5919, !5920, !5921, !5922, !5923, !5924, !5925, !5926, !5927, !5928, !5929, !5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942, !5946, !5947, !5950, !5951, !5952, !5953, !5954, !5955, !5956, !5957}
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5810, file: !128, line: 102, baseType: !5782, size: 64)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !5810, file: !128, line: 103, baseType: !3026, size: 64, offset: 64)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5810, file: !128, line: 106, baseType: !919, size: 128, offset: 128)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !5810, file: !128, line: 107, baseType: !919, size: 128, offset: 256)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !5810, file: !128, line: 109, baseType: !1571, size: 32, offset: 384)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !5810, file: !128, line: 110, baseType: !1571, size: 32, offset: 416)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !5810, file: !128, line: 112, baseType: !1571, size: 32, offset: 448)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5810, file: !128, line: 113, baseType: !1020, offset: 480)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !5810, file: !128, line: 114, baseType: !919, size: 128, offset: 512)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5810, file: !128, line: 115, baseType: !320, size: 16, offset: 640)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !5810, file: !128, line: 116, baseType: !320, size: 16, offset: 656)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !5810, file: !128, line: 117, baseType: !320, size: 16, offset: 672)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !5810, file: !128, line: 118, baseType: !320, size: 16, offset: 688)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !5810, file: !128, line: 119, baseType: !902, size: 64, offset: 704)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !5810, file: !128, line: 120, baseType: !902, size: 64, offset: 768)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !5810, file: !128, line: 123, baseType: !902, size: 64, offset: 832)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5810, file: !128, line: 125, baseType: !7, size: 32, offset: 896)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5810, file: !128, line: 125, baseType: !7, size: 32, offset: 928)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !5810, file: !128, line: 126, baseType: !943, size: 64, offset: 960)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !5810, file: !128, line: 127, baseType: !7, size: 32, offset: 1024)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !5810, file: !128, line: 129, baseType: !7, size: 32, offset: 1056)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5810, file: !128, line: 131, baseType: !973, size: 64, offset: 1088)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5810, file: !128, line: 132, baseType: !165, size: 8, offset: 1152)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5810, file: !128, line: 133, baseType: !637, size: 8, offset: 1160)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !5810, file: !128, line: 134, baseType: !637, size: 8, offset: 1168)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !5810, file: !128, line: 135, baseType: !1498, size: 192, offset: 1216)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !5810, file: !128, line: 136, baseType: !165, size: 8, offset: 1408)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !5810, file: !128, line: 137, baseType: !5840, size: 64, offset: 1472)
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5810, file: !128, line: 138, baseType: !948, size: 64, offset: 1536)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5810, file: !128, line: 139, baseType: !948, size: 64, offset: 1600)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5810, file: !128, line: 140, baseType: !948, size: 64, offset: 1664)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !5810, file: !128, line: 143, baseType: !5845, size: 64, offset: 1728)
!5845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5846, size: 64)
!5846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !128, line: 95, size: 192, elements: !5847)
!5847 = !{!5848, !5849, !5850}
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5846, file: !128, line: 96, baseType: !1145, size: 128, align: 64)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5846, file: !128, line: 97, baseType: !913, size: 32, offset: 128)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5846, file: !128, line: 98, baseType: !5851, offset: 160)
!5851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, elements: !2833)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !5810, file: !128, line: 144, baseType: !5845, size: 64, offset: 1792)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !5810, file: !128, line: 145, baseType: !5845, size: 64, offset: 1856)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !5810, file: !128, line: 146, baseType: !5845, size: 64, offset: 1920)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !5810, file: !128, line: 147, baseType: !165, size: 8, offset: 1984)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !5810, file: !128, line: 148, baseType: !5857, size: 64, offset: 2048)
!5857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5858, size: 64)
!5858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !128, line: 289, size: 6272, align: 64, elements: !5859)
!5859 = !{!5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867, !5868, !5869, !5870, !5871, !5872, !5873, !5874, !5875, !5876, !5877, !5878, !5879}
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !5858, file: !128, line: 290, baseType: !5809, size: 64)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5858, file: !128, line: 291, baseType: !919, size: 128, offset: 64)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !5858, file: !128, line: 292, baseType: !919, size: 128, offset: 192)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5858, file: !128, line: 293, baseType: !1004, size: 5568, offset: 320)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !5858, file: !128, line: 294, baseType: !2879, size: 32, offset: 5888)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5858, file: !128, line: 295, baseType: !7, size: 32, offset: 5920)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5858, file: !128, line: 296, baseType: !7, size: 32, offset: 5952)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !5858, file: !128, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !5858, file: !128, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !5858, file: !128, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !5858, file: !128, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !5858, file: !128, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !5858, file: !128, line: 310, baseType: !1571, size: 32, offset: 6016)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !5858, file: !128, line: 311, baseType: !1571, size: 32, offset: 6048)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5858, file: !128, line: 317, baseType: !7, size: 32, offset: 6080)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !5858, file: !128, line: 318, baseType: !7, size: 32, offset: 6112)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5858, file: !128, line: 321, baseType: !637, size: 8, offset: 6144)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5858, file: !128, line: 322, baseType: !127, size: 32, offset: 6176)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5858, file: !128, line: 323, baseType: !973, size: 64, offset: 6208)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !5858, file: !128, line: 324, baseType: !4130, offset: 6272)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !5810, file: !128, line: 150, baseType: !5881, size: 64, offset: 2112)
!5881 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !128, line: 18, baseType: !944)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !5810, file: !128, line: 154, baseType: !7, size: 32, offset: 2176)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !5810, file: !128, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5810, file: !128, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !5810, file: !128, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !5810, file: !128, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !5810, file: !128, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !5810, file: !128, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !5810, file: !128, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !5810, file: !128, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !5810, file: !128, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !5810, file: !128, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !5810, file: !128, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !5810, file: !128, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !5810, file: !128, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !5810, file: !128, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !5810, file: !128, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !5810, file: !128, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !5810, file: !128, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !5810, file: !128, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !5810, file: !128, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5810, file: !128, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !5810, file: !128, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !5810, file: !128, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !5810, file: !128, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !5810, file: !128, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !5810, file: !128, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !5810, file: !128, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !5810, file: !128, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !5810, file: !128, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !5810, file: !128, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !5810, file: !128, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !5810, file: !128, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !5810, file: !128, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !5810, file: !128, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !5810, file: !128, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !5810, file: !128, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !5810, file: !128, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !5810, file: !128, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !5810, file: !128, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !5810, file: !128, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !5810, file: !128, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !5810, file: !128, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !5810, file: !128, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !5810, file: !128, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !5810, file: !128, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !5810, file: !128, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !5810, file: !128, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !5810, file: !128, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !5810, file: !128, line: 208, baseType: !1262, size: 8, offset: 2256)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !5810, file: !128, line: 210, baseType: !1571, size: 32, offset: 2272)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !5810, file: !128, line: 212, baseType: !2202, size: 64, offset: 2304)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !5810, file: !128, line: 213, baseType: !2202, size: 64, offset: 2368)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !5810, file: !128, line: 214, baseType: !919, size: 128, offset: 2432)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !5810, file: !128, line: 215, baseType: !2817, size: 256, offset: 2560)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !5810, file: !128, line: 217, baseType: !7, size: 32, offset: 2816)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !5810, file: !128, line: 220, baseType: !1571, size: 32, offset: 2848)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !5810, file: !128, line: 221, baseType: !1571, size: 32, offset: 2880)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !5810, file: !128, line: 222, baseType: !1571, size: 32, offset: 2912)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !5810, file: !128, line: 224, baseType: !1004, size: 5568, offset: 2944)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !5810, file: !128, line: 225, baseType: !1004, size: 5568, offset: 8512)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !5810, file: !128, line: 227, baseType: !5943, size: 256, offset: 14080)
!5943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !845, line: 168, size: 256, elements: !5944)
!5944 = !{!5945}
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5943, file: !845, line: 169, baseType: !2817, size: 256)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5810, file: !128, line: 228, baseType: !2817, size: 256, offset: 14336)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5810, file: !128, line: 230, baseType: !5948, size: 64, offset: 14592)
!5948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5949, size: 64)
!5949 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !128, line: 230, flags: DIFlagFwdDecl)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !5810, file: !128, line: 231, baseType: !973, size: 64, offset: 14656)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !5810, file: !128, line: 233, baseType: !1102, size: 64, offset: 14720)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !5810, file: !128, line: 234, baseType: !973, size: 64, offset: 14784)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !5810, file: !128, line: 236, baseType: !165, size: 8, offset: 14848)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !5810, file: !128, line: 237, baseType: !1498, size: 192, offset: 14912)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !5810, file: !128, line: 238, baseType: !135, size: 32, offset: 15104)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !5810, file: !128, line: 239, baseType: !2050, size: 64, offset: 15168)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !5810, file: !128, line: 240, baseType: !4130, offset: 15232)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !5797, file: !154, line: 65, baseType: !5959, size: 64, offset: 256)
!5959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5960, size: 64)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{!913, !5782, !5962}
!5962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5963, size: 64)
!5963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !5964, line: 68, size: 3136, elements: !5965)
!5964 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!5965 = !{!5966, !5978, !5979, !5980, !5981, !5982, !5983, !5984, !5985, !5986, !5987, !5988, !5989, !5990, !5991, !5992, !6011, !6013, !6014, !6015, !6016, !6017, !6021, !6035, !6036, !6037, !6038, !6039, !6040}
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !5963, file: !5964, line: 69, baseType: !5967, size: 448)
!5967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !5968, line: 9, size: 448, elements: !5969)
!5968 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!5969 = !{!5970, !5971, !5972, !5973, !5974, !5975, !5976, !5977}
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !5967, file: !5968, line: 10, baseType: !246, size: 128)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5967, file: !5968, line: 11, baseType: !5840, size: 64, offset: 128)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !5967, file: !5968, line: 12, baseType: !320, size: 16, offset: 192)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5967, file: !5968, line: 13, baseType: !913, size: 32, offset: 224)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !5967, file: !5968, line: 14, baseType: !7, size: 32, offset: 256)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !5967, file: !5968, line: 15, baseType: !7, size: 32, offset: 288)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5967, file: !5968, line: 16, baseType: !913, size: 32, offset: 320)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !5967, file: !5968, line: 17, baseType: !973, size: 64, offset: 384)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5963, file: !5964, line: 70, baseType: !5809, size: 64, offset: 448)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !5963, file: !5964, line: 71, baseType: !919, size: 128, offset: 512)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !5963, file: !5964, line: 72, baseType: !2925, size: 704, offset: 640)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5963, file: !5964, line: 74, baseType: !1145, size: 128, align: 64, offset: 1344)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !5963, file: !5964, line: 76, baseType: !913, size: 32, offset: 1472)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !5963, file: !5964, line: 83, baseType: !902, size: 64, offset: 1536)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5963, file: !5964, line: 85, baseType: !913, size: 32, offset: 1600)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !5963, file: !5964, line: 86, baseType: !913, size: 32, offset: 1632)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !5963, file: !5964, line: 88, baseType: !165, size: 8, offset: 1664)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !5963, file: !5964, line: 89, baseType: !165, size: 8, offset: 1672)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !5963, file: !5964, line: 90, baseType: !165, size: 8, offset: 1680)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !5963, file: !5964, line: 92, baseType: !320, size: 16, offset: 1696)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !5963, file: !5964, line: 93, baseType: !146, size: 32, offset: 1728)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !5963, file: !5964, line: 96, baseType: !5840, size: 64, offset: 1792)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !5963, file: !5964, line: 100, baseType: !5993, size: 192, offset: 1856)
!5993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !5964, line: 35, size: 192, elements: !5994)
!5994 = !{!5995, !6010}
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !5993, file: !5964, line: 36, baseType: !5996, size: 128)
!5996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !5997, line: 42, size: 128, elements: !5998)
!5997 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!5998 = !{!5999, !6008, !6009}
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !5996, file: !5997, line: 43, baseType: !6000, size: 64)
!6000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6001, size: 64)
!6001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !5997, line: 11, size: 256, elements: !6002)
!6002 = !{!6003, !6004, !6005, !6006, !6007}
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !6001, file: !5997, line: 12, baseType: !902, size: 64)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6001, file: !5997, line: 13, baseType: !7, size: 32, offset: 64)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6001, file: !5997, line: 14, baseType: !7, size: 32, offset: 96)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !6001, file: !5997, line: 15, baseType: !1761, size: 64, offset: 128)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !6001, file: !5997, line: 17, baseType: !7, size: 32, offset: 192)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !5996, file: !5997, line: 44, baseType: !7, size: 32, offset: 64)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !5996, file: !5997, line: 45, baseType: !7, size: 32, offset: 96)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5993, file: !5964, line: 37, baseType: !7, size: 32, offset: 128)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !5963, file: !5964, line: 101, baseType: !6012, size: 64, offset: 2048)
!6012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5993, size: 64)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !5963, file: !5964, line: 103, baseType: !7, size: 32, offset: 2112)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !5963, file: !5964, line: 106, baseType: !7, size: 32, offset: 2144)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5963, file: !5964, line: 112, baseType: !3030, size: 64, offset: 2176)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !5963, file: !5964, line: 115, baseType: !5840, size: 64, offset: 2240)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !5963, file: !5964, line: 123, baseType: !6018, size: 64, offset: 2304)
!6018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6019, size: 64)
!6019 = !DISubroutineType(types: !6020)
!6020 = !{null, !5962}
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !5963, file: !5964, line: 129, baseType: !6022, size: 512, offset: 2368)
!6022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !5964, line: 41, size: 512, elements: !6023)
!6023 = !{!6024, !6025, !6026, !6027, !6028, !6029, !6031, !6032, !6033, !6034}
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6022, file: !5964, line: 42, baseType: !1061, size: 64)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !6022, file: !5964, line: 43, baseType: !913, size: 32, offset: 64)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !6022, file: !5964, line: 44, baseType: !6000, size: 64, offset: 128)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !6022, file: !5964, line: 45, baseType: !913, size: 32, offset: 192)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !6022, file: !5964, line: 47, baseType: !1761, size: 64, offset: 256)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !6022, file: !5964, line: 49, baseType: !6030, size: 32, offset: 320)
!6030 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !913)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !6022, file: !5964, line: 50, baseType: !6030, size: 32, offset: 352)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !6022, file: !5964, line: 51, baseType: !6030, size: 32, offset: 384)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !6022, file: !5964, line: 52, baseType: !6030, size: 32, offset: 416)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !6022, file: !5964, line: 53, baseType: !6030, size: 32, offset: 448)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !5963, file: !5964, line: 131, baseType: !5840, size: 64, offset: 2880)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5963, file: !5964, line: 139, baseType: !913, size: 32, offset: 2944)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5963, file: !5964, line: 140, baseType: !913, size: 32, offset: 2976)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5963, file: !5964, line: 141, baseType: !902, size: 64, offset: 3008)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5963, file: !5964, line: 143, baseType: !165, size: 8, offset: 3072)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !5963, file: !5964, line: 144, baseType: !7, size: 32, offset: 3104)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !5797, file: !154, line: 66, baseType: !5959, size: 64, offset: 320)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !5797, file: !154, line: 102, baseType: !5959, size: 64, offset: 384)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !5797, file: !154, line: 112, baseType: !6044, size: 64, offset: 448)
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{null, !5782, !1683}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !5797, file: !154, line: 132, baseType: !6048, size: 64, offset: 512)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{!913, !5962}
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !5797, file: !154, line: 133, baseType: !6048, size: 64, offset: 576)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !5797, file: !154, line: 134, baseType: !6048, size: 64, offset: 640)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !5797, file: !154, line: 135, baseType: !6048, size: 64, offset: 704)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !5797, file: !154, line: 136, baseType: !6048, size: 64, offset: 768)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !5797, file: !154, line: 164, baseType: !6056, size: 64, offset: 832)
!6056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6057, size: 64)
!6057 = !DISubroutineType(types: !6058)
!6058 = !{!913, !5809}
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !5797, file: !154, line: 195, baseType: !6056, size: 64, offset: 896)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !5797, file: !154, line: 206, baseType: !6061, size: 64, offset: 960)
!6061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6062, size: 64)
!6062 = !DISubroutineType(types: !6063)
!6063 = !{null, !5809}
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !5797, file: !154, line: 220, baseType: !6065, size: 64, offset: 1024)
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 64)
!6066 = !DISubroutineType(types: !6067)
!6067 = !{!913, !5857}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !5797, file: !154, line: 230, baseType: !6069, size: 64, offset: 1088)
!6069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6070, size: 64)
!6070 = !DISubroutineType(types: !6071)
!6071 = !{null, !5857}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !5797, file: !154, line: 241, baseType: !6073, size: 64, offset: 1152)
!6073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6074, size: 64)
!6074 = !DISubroutineType(types: !6075)
!6075 = !{!913, !5782, !902}
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !5797, file: !154, line: 250, baseType: !6077, size: 64, offset: 1216)
!6077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6078, size: 64)
!6078 = !DISubroutineType(types: !6079)
!6079 = !{null, !5782}
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !5797, file: !154, line: 263, baseType: !6081, size: 64, offset: 1280)
!6081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6082, size: 64)
!6082 = !DISubroutineType(types: !6083)
!6083 = !{!913, !5809, !913}
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !5797, file: !154, line: 271, baseType: !6085, size: 64, offset: 1344)
!6085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6086, size: 64)
!6086 = !DISubroutineType(types: !6087)
!6087 = !{!913, !5782}
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !5797, file: !154, line: 278, baseType: !6089, size: 64, offset: 1408)
!6089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6090, size: 64)
!6090 = !DISubroutineType(types: !6091)
!6091 = !{!1262, !3030}
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !5797, file: !154, line: 288, baseType: !6093, size: 64, offset: 1472)
!6093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6094, size: 64)
!6094 = !DISubroutineType(types: !6095)
!6095 = !{!913, !5809, !2850, !1654, !1480}
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5797, file: !154, line: 297, baseType: !6061, size: 64, offset: 1536)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !5797, file: !154, line: 306, baseType: !6098, size: 64, offset: 1600)
!6098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6099, size: 64)
!6099 = !DISubroutineType(types: !6100)
!6100 = !{!913, !1486, !5782}
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !5797, file: !154, line: 307, baseType: !6102, size: 64, offset: 1664)
!6102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6103, size: 64)
!6103 = !DISubroutineType(types: !6104)
!6104 = !{!913, !5782, !1061, !913}
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !5797, file: !154, line: 316, baseType: !6106, size: 64, offset: 1728)
!6106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6107, size: 64)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!55, !5962}
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !5797, file: !154, line: 326, baseType: !6110, size: 64, offset: 1792)
!6110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6111, size: 64)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{!913, !5782, !913}
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !5797, file: !154, line: 334, baseType: !948, size: 64, offset: 1856)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !5797, file: !154, line: 340, baseType: !988, size: 64, offset: 1920)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5797, file: !154, line: 347, baseType: !913, size: 32, offset: 1984)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5797, file: !154, line: 356, baseType: !913, size: 32, offset: 2016)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5797, file: !154, line: 362, baseType: !320, size: 16, offset: 2048)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5797, file: !154, line: 363, baseType: !320, size: 16, offset: 2064)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5797, file: !154, line: 368, baseType: !7, size: 32, offset: 2080)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5797, file: !154, line: 373, baseType: !7, size: 32, offset: 2112)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5797, file: !154, line: 379, baseType: !902, size: 64, offset: 2176)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5797, file: !154, line: 381, baseType: !902, size: 64, offset: 2240)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5797, file: !154, line: 400, baseType: !2039, size: 16, offset: 2304)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !5797, file: !154, line: 406, baseType: !165, size: 8, offset: 2320)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !5797, file: !154, line: 409, baseType: !913, size: 32, offset: 2336)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !5797, file: !154, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !5797, file: !154, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5797, file: !154, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !5797, file: !154, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !5797, file: !154, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5797, file: !154, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5797, file: !154, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5797, file: !154, line: 445, baseType: !7, size: 32, offset: 2400)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !5797, file: !154, line: 459, baseType: !6135, size: 64, offset: 2432)
!6135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6136, size: 64)
!6136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6137, size: 64)
!6137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !114, line: 99, size: 256, elements: !6138)
!6138 = !{!6139, !6140, !6144}
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6137, file: !114, line: 100, baseType: !1093, size: 128)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6137, file: !114, line: 101, baseType: !6141, size: 64, offset: 128)
!6141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6142, size: 64)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!1088, !1003, !6136, !1061}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6137, file: !114, line: 103, baseType: !6145, size: 64, offset: 192)
!6145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6146, size: 64)
!6146 = !DISubroutineType(types: !6147)
!6147 = !{!1088, !1003, !6136, !948, !1102}
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !5797, file: !154, line: 464, baseType: !6135, size: 64, offset: 2496)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !5797, file: !154, line: 470, baseType: !1108, size: 64, offset: 2560)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !5797, file: !154, line: 479, baseType: !943, size: 64, offset: 2624)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5797, file: !154, line: 484, baseType: !7, size: 32, offset: 2688)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !5797, file: !154, line: 485, baseType: !6153, size: 64, offset: 2752)
!6153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6154, size: 64)
!6154 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !154, line: 19, flags: DIFlagFwdDecl)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !5797, file: !154, line: 488, baseType: !913, size: 32, offset: 2816)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !5783, file: !154, line: 549, baseType: !6157, size: 64, offset: 1088)
!6157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6158, size: 64)
!6158 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !154, line: 23, flags: DIFlagFwdDecl)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5783, file: !154, line: 552, baseType: !3417, size: 2304, offset: 1152)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !5783, file: !154, line: 554, baseType: !1571, size: 32, offset: 3456)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !5783, file: !154, line: 556, baseType: !7, size: 32, offset: 3488)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !5783, file: !154, line: 558, baseType: !7, size: 32, offset: 3520)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !5783, file: !154, line: 560, baseType: !7, size: 32, offset: 3552)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !5783, file: !154, line: 563, baseType: !913, size: 32, offset: 3584)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !5783, file: !154, line: 564, baseType: !902, size: 64, offset: 3648)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !5783, file: !154, line: 573, baseType: !7, size: 32, offset: 3712)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !5783, file: !154, line: 574, baseType: !7, size: 32, offset: 3744)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !5783, file: !154, line: 575, baseType: !943, size: 64, offset: 3776)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !5783, file: !154, line: 584, baseType: !7, size: 32, offset: 3840)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !5783, file: !154, line: 593, baseType: !320, size: 16, offset: 3872)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5783, file: !154, line: 595, baseType: !913, size: 32, offset: 3904)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5783, file: !154, line: 596, baseType: !913, size: 32, offset: 3936)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5783, file: !154, line: 597, baseType: !2039, size: 16, offset: 3968)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5783, file: !154, line: 598, baseType: !320, size: 16, offset: 3984)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5783, file: !154, line: 599, baseType: !320, size: 16, offset: 4000)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5783, file: !154, line: 600, baseType: !7, size: 32, offset: 4032)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5783, file: !154, line: 601, baseType: !7, size: 32, offset: 4064)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5783, file: !154, line: 602, baseType: !902, size: 64, offset: 4096)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5783, file: !154, line: 603, baseType: !902, size: 64, offset: 4160)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5783, file: !154, line: 612, baseType: !7, size: 32, offset: 4224)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !5783, file: !154, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5783, file: !154, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !5783, file: !154, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !5783, file: !154, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !5783, file: !154, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !5783, file: !154, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !5783, file: !154, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5783, file: !154, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5783, file: !154, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !5783, file: !154, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !5783, file: !154, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !5783, file: !154, line: 653, baseType: !6193, size: 160, offset: 4272)
!6193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 160, elements: !4005)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !5783, file: !154, line: 654, baseType: !2829, size: 64, offset: 4480)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !5783, file: !154, line: 659, baseType: !2829, size: 64, offset: 4544)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5783, file: !154, line: 664, baseType: !7, size: 32, offset: 4608)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !5783, file: !154, line: 667, baseType: !7, size: 32, offset: 4640)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !5783, file: !154, line: 668, baseType: !165, size: 8, offset: 4672)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5783, file: !154, line: 671, baseType: !902, size: 64, offset: 4736)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !5783, file: !154, line: 672, baseType: !902, size: 64, offset: 4800)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !5783, file: !154, line: 673, baseType: !165, size: 8, offset: 4864)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !5783, file: !154, line: 674, baseType: !165, size: 8, offset: 4872)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5783, file: !154, line: 675, baseType: !7, size: 32, offset: 4896)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !5783, file: !154, line: 678, baseType: !153, size: 32, offset: 4928)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !5783, file: !154, line: 681, baseType: !1004, size: 5568, offset: 4992)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !5783, file: !154, line: 681, baseType: !1004, size: 5568, offset: 10560)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !5783, file: !154, line: 687, baseType: !973, size: 64, offset: 16128)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !5783, file: !154, line: 693, baseType: !1003, size: 64, offset: 16192)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5783, file: !154, line: 700, baseType: !4130, align: 64, offset: 16256)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !5761, file: !164, line: 714, baseType: !2829, size: 64, offset: 384)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !5761, file: !164, line: 715, baseType: !6193, size: 160, offset: 448)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "monitor_work", scope: !5761, file: !164, line: 716, baseType: !2925, size: 704, offset: 640)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "primary_monitor_time", scope: !5761, file: !164, line: 717, baseType: !902, size: 64, offset: 1344)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_monitor_time", scope: !5761, file: !164, line: 718, baseType: !902, size: 64, offset: 1408)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "sg_pool", scope: !5761, file: !164, line: 720, baseType: !6216, size: 64, offset: 1472)
!6216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6217, size: 64)
!6217 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !6218, line: 21, flags: DIFlagFwdDecl)
!6218 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "dcdb_pool", scope: !5761, file: !164, line: 721, baseType: !6216, size: 64, offset: 1536)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !5761, file: !164, line: 723, baseType: !1020, offset: 1600)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "qcmd", scope: !5761, file: !164, line: 725, baseType: !6222, size: 64, offset: 1600)
!6222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6223, size: 64)
!6223 = !DISubroutineType(types: !6224)
!6224 = !{null, !5760, !6225}
!6225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6226, size: 64)
!6226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_cmdblk", file: !164, line: 682, size: 512, elements: !6227)
!6227 = !{!6228, !6229, !6230, !6231, !6233, !6234, !6240}
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "mbox", scope: !6226, file: !164, line: 683, baseType: !239, size: 128)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6226, file: !164, line: 684, baseType: !320, size: 16, offset: 128)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6226, file: !164, line: 685, baseType: !2331, size: 64, offset: 192)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "dcdb", scope: !6226, file: !164, line: 686, baseType: !6232, size: 64, offset: 256)
!6232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "dcdb_addr", scope: !6226, file: !164, line: 687, baseType: !1761, size: 64, offset: 320)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !6226, file: !164, line: 688, baseType: !6235, size: 64, offset: 384)
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6236, size: 64)
!6236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_sge", file: !164, line: 564, size: 64, elements: !6237)
!6237 = !{!6238, !6239}
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "sge_addr", scope: !6236, file: !164, line: 565, baseType: !268, size: 32)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "sge_count", scope: !6236, file: !164, line: 566, baseType: !268, size: 32, offset: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "sgl_addr", scope: !6226, file: !164, line: 689, baseType: !1761, size: 64, offset: 448)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "write_cmd_mbox", scope: !5761, file: !164, line: 726, baseType: !6242, size: 64, offset: 1664)
!6242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6243, size: 64)
!6243 = !DISubroutineType(types: !6244)
!6244 = !{null, !6245, !6245}
!6245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "get_cmd_mbox", scope: !5761, file: !164, line: 728, baseType: !1240, size: 64, offset: 1728)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "disable_intr", scope: !5761, file: !164, line: 729, baseType: !1240, size: 64, offset: 1792)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5761, file: !164, line: 730, baseType: !1240, size: 64, offset: 1856)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "ctlr_num", scope: !5761, file: !164, line: 732, baseType: !7, size: 32, offset: 1920)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "model_name", scope: !5761, file: !164, line: 733, baseType: !6251, size: 160, offset: 1952)
!6251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 160, elements: !4005)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5761, file: !164, line: 734, baseType: !399, size: 96, offset: 2112)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5761, file: !164, line: 736, baseType: !7, size: 32, offset: 2208)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "io_addr", scope: !5761, file: !164, line: 737, baseType: !942, size: 64, offset: 2240)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "pci_addr", scope: !5761, file: !164, line: 738, baseType: !942, size: 64, offset: 2304)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "io_base", scope: !5761, file: !164, line: 739, baseType: !973, size: 64, offset: 2368)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_base", scope: !5761, file: !164, line: 740, baseType: !973, size: 64, offset: 2432)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_mbox_size", scope: !5761, file: !164, line: 742, baseType: !1102, size: 64, offset: 2496)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_mbox_addr", scope: !5761, file: !164, line: 743, baseType: !1761, size: 64, offset: 2560)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "first_cmd_mbox", scope: !5761, file: !164, line: 744, baseType: !6245, size: 64, offset: 2624)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "last_cmd_mbox", scope: !5761, file: !164, line: 745, baseType: !6245, size: 64, offset: 2688)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "next_cmd_mbox", scope: !5761, file: !164, line: 746, baseType: !6245, size: 64, offset: 2752)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cmd_mbox1", scope: !5761, file: !164, line: 747, baseType: !6245, size: 64, offset: 2816)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cmd_mbox2", scope: !5761, file: !164, line: 748, baseType: !6245, size: 64, offset: 2880)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "stat_mbox_size", scope: !5761, file: !164, line: 750, baseType: !1102, size: 64, offset: 2944)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "stat_mbox_addr", scope: !5761, file: !164, line: 751, baseType: !1761, size: 64, offset: 3008)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "first_stat_mbox", scope: !5761, file: !164, line: 752, baseType: !6268, size: 64, offset: 3072)
!6268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6269, size: 64)
!6269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_stat_mbox", file: !164, line: 675, size: 32, elements: !6270)
!6270 = !{!6271, !6272, !6273, !6274}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6269, file: !164, line: 676, baseType: !165, size: 8)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !6269, file: !164, line: 677, baseType: !165, size: 7, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !6269, file: !164, line: 678, baseType: !165, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 8)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6269, file: !164, line: 679, baseType: !320, size: 16, offset: 16)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "last_stat_mbox", scope: !5761, file: !164, line: 753, baseType: !6268, size: 64, offset: 3136)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "next_stat_mbox", scope: !5761, file: !164, line: 754, baseType: !6268, size: 64, offset: 3200)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "dcmd_blk", scope: !5761, file: !164, line: 756, baseType: !6226, size: 512, offset: 3264)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "mcmd_blk", scope: !5761, file: !164, line: 757, baseType: !6226, size: 512, offset: 3776)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "dcmd_mutex", scope: !5761, file: !164, line: 758, baseType: !1498, size: 192, offset: 4288)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "enquiry", scope: !5761, file: !164, line: 760, baseType: !6281, size: 64, offset: 4480)
!6281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "enquiry_addr", scope: !5761, file: !164, line: 761, baseType: !1761, size: 64, offset: 4544)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "err_table", scope: !5761, file: !164, line: 763, baseType: !6284, size: 64, offset: 4608)
!6284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6285, size: 64)
!6285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_error_entry", file: !164, line: 447, size: 32, elements: !6286)
!6286 = !{!6287, !6288, !6289, !6290}
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "parity_err", scope: !6285, file: !164, line: 448, baseType: !165, size: 8)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "soft_err", scope: !6285, file: !164, line: 449, baseType: !165, size: 8, offset: 8)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "hard_err", scope: !6285, file: !164, line: 450, baseType: !165, size: 8, offset: 16)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "misc_err", scope: !6285, file: !164, line: 451, baseType: !165, size: 8, offset: 24)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "err_table_addr", scope: !5761, file: !164, line: 764, baseType: !1761, size: 64, offset: 4672)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "last_rbld_status", scope: !5761, file: !164, line: 766, baseType: !320, size: 16, offset: 4736)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_info_buf", scope: !5761, file: !164, line: 768, baseType: !6294, size: 64, offset: 4800)
!6294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6295, size: 64)
!6295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_ldev_info", file: !164, line: 360, size: 64, elements: !6296)
!6296 = !{!6297, !6298, !6299, !6300, !6301}
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6295, file: !164, line: 361, baseType: !7, size: 32)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6295, file: !164, line: 362, baseType: !229, size: 8, offset: 32)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "raid_level", scope: !6295, file: !164, line: 363, baseType: !7, size: 7, offset: 40, flags: DIFlagBitField, extraData: i64 40)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "wb_enabled", scope: !6295, file: !164, line: 364, baseType: !7, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 40)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !6295, file: !164, line: 365, baseType: !7, size: 16, offset: 48, flags: DIFlagBitField, extraData: i64 40)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_info_addr", scope: !5761, file: !164, line: 769, baseType: !1761, size: 64, offset: 4864)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "bgi_status", scope: !5761, file: !164, line: 771, baseType: !471, size: 256, offset: 4928)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mutex", scope: !5761, file: !164, line: 773, baseType: !1498, size: 192, offset: 5184)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "irq_handler", scope: !906, file: !164, line: 954, baseType: !6306, size: 64, offset: 64)
!6306 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !990, line: 92, baseType: !6307)
!6307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6308, size: 64)
!6308 = !DISubroutineType(types: !6309)
!6309 = !{!6310, !913, !973}
!6310 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !487, line: 17, baseType: !486)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_size", scope: !906, file: !164, line: 955, baseType: !7, size: 32, offset: 128)
!6312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !4675, line: 32, baseType: !270)
!6313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6312, size: 64)
!6314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !4675, line: 30, baseType: !1684)
!6315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6314, size: 64)
!6316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!6317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!6318 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !897, line: 107, baseType: !943)
!6319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6320, size: 64)
!6320 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !922)
!6321 = !{!0, !6322, !6324, !6326, !6328, !6330, !6335, !6340, !6343, !6348, !6351, !6392, !6394, !6397, !6402, !6404, !6406, !6412, !6419, !6422, !6424, !6426, !6428, !6430, !6432, !6434, !6436, !6438, !6440, !6447, !6452}
!6322 = !DIGlobalVariableExpression(var: !6323, expr: !DIExpression())
!6323 = distinct !DIGlobalVariable(name: "DAC960_PG_privdata", scope: !2, file: !3, line: 3090, type: !906, isLocal: false, isDefinition: true)
!6324 = !DIGlobalVariableExpression(var: !6325, expr: !DIExpression())
!6325 = distinct !DIGlobalVariable(name: "DAC960_PD_privdata", scope: !2, file: !3, line: 3293, type: !906, isLocal: false, isDefinition: true)
!6326 = !DIGlobalVariableExpression(var: !6327, expr: !DIExpression())
!6327 = distinct !DIGlobalVariable(name: "DAC960_P_privdata", scope: !2, file: !3, line: 3491, type: !906, isLocal: false, isDefinition: true)
!6328 = !DIGlobalVariableExpression(var: !6329, expr: !DIExpression())
!6329 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_myrb_init_module318", scope: !2, file: !3, line: 3654, type: !973, isLocal: true, isDefinition: true)
!6330 = !DIGlobalVariableExpression(var: !6331, expr: !DIExpression())
!6331 = distinct !DIGlobalVariable(name: "__exitcall_myrb_cleanup_module", scope: !2, file: !3, line: 3655, type: !6332, isLocal: true, isDefinition: true)
!6332 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !6333, line: 117, baseType: !6334)
!6333 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!6334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!6335 = !DIGlobalVariableExpression(var: !6336, expr: !DIExpression())
!6336 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description319", scope: !2, file: !3, line: 3657, type: !6337, isLocal: true, isDefinition: true, align: 8)
!6337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 624, elements: !6338)
!6338 = !{!6339}
!6339 = !DISubrange(count: 78)
!6340 = !DIGlobalVariableExpression(var: !6341, expr: !DIExpression())
!6341 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author320", scope: !2, file: !3, line: 3658, type: !6342, isLocal: true, isDefinition: true, align: 8)
!6342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 352, elements: !1989)
!6343 = !DIGlobalVariableExpression(var: !6344, expr: !DIExpression())
!6344 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file321", scope: !2, file: !3, line: 3659, type: !6345, isLocal: true, isDefinition: true, align: 8)
!6345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 224, elements: !6346)
!6346 = !{!6347}
!6347 = !DISubrange(count: 28)
!6348 = !DIGlobalVariableExpression(var: !6349, expr: !DIExpression())
!6349 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license322", scope: !2, file: !3, line: 3659, type: !6350, isLocal: true, isDefinition: true, align: 8)
!6350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 136, elements: !5692)
!6351 = !DIGlobalVariableExpression(var: !6352, expr: !DIExpression())
!6352 = distinct !DIGlobalVariable(name: "myrb_raid_template", scope: !2, file: !3, line: 27, type: !6353, isLocal: true, isDefinition: true)
!6353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6354, size: 64)
!6354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raid_template", file: !566, line: 9, size: 768, elements: !6355)
!6355 = !{!6356}
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "raid_attrs", scope: !6354, file: !566, line: 10, baseType: !6357, size: 768)
!6357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "transport_container", file: !6358, line: 56, size: 768, elements: !6359)
!6358 = !DIFile(filename: "./include/linux/transport_class.h", directory: "/home/lizy2001/genbc/linux")
!6359 = !{!6360, !6391}
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !6357, file: !6358, line: 57, baseType: !6361, size: 704)
!6361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_container", file: !6362, line: 16, size: 704, elements: !6363)
!6362 = !DIFile(filename: "./include/linux/attribute_container.h", directory: "/home/lizy2001/genbc/linux")
!6363 = !{!6364, !6365, !6382, !6383, !6384, !6385, !6390}
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6361, file: !6362, line: 17, baseType: !919, size: 128)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "containers", scope: !6361, file: !6362, line: 18, baseType: !6366, size: 256, align: 64, offset: 128)
!6366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist", file: !6367, line: 18, size: 256, align: 64, elements: !6368)
!6367 = !DIFile(filename: "./include/linux/klist.h", directory: "/home/lizy2001/genbc/linux")
!6368 = !{!6369, !6370, !6371, !6381}
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "k_lock", scope: !6366, file: !6367, line: 19, baseType: !1020)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "k_list", scope: !6366, file: !6367, line: 20, baseType: !919, size: 128)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6366, file: !6367, line: 21, baseType: !6372, size: 64, offset: 128)
!6372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6373, size: 64)
!6373 = !DISubroutineType(types: !6374)
!6374 = !{null, !6375}
!6375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6376, size: 64)
!6376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist_node", file: !6367, line: 37, size: 256, elements: !6377)
!6377 = !{!6378, !6379, !6380}
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "n_klist", scope: !6376, file: !6367, line: 38, baseType: !973, size: 64)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "n_node", scope: !6376, file: !6367, line: 39, baseType: !919, size: 128, offset: 64)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "n_ref", scope: !6376, file: !6367, line: 40, baseType: !2879, size: 32, offset: 192)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6366, file: !6367, line: 22, baseType: !6372, size: 64, offset: 192)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6361, file: !6362, line: 19, baseType: !5514, size: 64, offset: 384)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !6361, file: !6362, line: 20, baseType: !1109, size: 64, offset: 448)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !6361, file: !6362, line: 21, baseType: !6135, size: 64, offset: 512)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6361, file: !6362, line: 22, baseType: !6386, size: 64, offset: 576)
!6386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6387, size: 64)
!6387 = !DISubroutineType(types: !6388)
!6388 = !{!913, !6389, !1003}
!6389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 64)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6361, file: !6362, line: 24, baseType: !902, size: 64, offset: 640)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !6357, file: !6358, line: 58, baseType: !1109, size: 64, offset: 704)
!6392 = !DIGlobalVariableExpression(var: !6393, expr: !DIExpression())
!6393 = distinct !DIGlobalVariable(name: "myrb_pci_driver", scope: !2, file: !3, line: 3626, type: !5594, isLocal: true, isDefinition: true)
!6394 = !DIGlobalVariableExpression(var: !6395, expr: !DIExpression())
!6395 = distinct !DIGlobalVariable(name: "myrb_id_table", scope: !2, file: !3, line: 3604, type: !6396, isLocal: true, isDefinition: true)
!6396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5600, size: 1280, elements: !282)
!6397 = !DIGlobalVariableExpression(var: !6398, expr: !DIExpression())
!6398 = distinct !DIGlobalVariable(name: "__key", scope: !6399, file: !3, line: 3515, type: !1420, isLocal: true, isDefinition: true)
!6399 = distinct !DISubprogram(name: "myrb_detect", scope: !3, file: !3, line: 3497, type: !6400, scopeLine: 3499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!6400 = !DISubroutineType(types: !6401)
!6401 = !{!5760, !914, !5599}
!6402 = !DIGlobalVariableExpression(var: !6403, expr: !DIExpression())
!6403 = distinct !DIGlobalVariable(name: "__key", scope: !6399, file: !3, line: 3516, type: !1420, isLocal: true, isDefinition: true)
!6404 = !DIGlobalVariableExpression(var: !6405, expr: !DIExpression())
!6405 = distinct !DIGlobalVariable(name: "myrb_template", scope: !2, file: !3, line: 2229, type: !5797, isLocal: true, isDefinition: true)
!6406 = !DIGlobalVariableExpression(var: !6407, expr: !DIExpression())
!6407 = distinct !DIGlobalVariable(name: "__warned", scope: !6408, file: !6409, line: 275, type: !1262, isLocal: true, isDefinition: true)
!6408 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !6409, file: !6409, line: 271, type: !6410, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!6409 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!6410 = !DISubroutineType(types: !6411)
!6411 = !{!1761, !1003, !973, !1102, !146, !902}
!6412 = !DIGlobalVariableExpression(var: !6413, expr: !DIExpression())
!6413 = distinct !DIGlobalVariable(name: "myrb_devstate_name_list", scope: !2, file: !3, line: 40, type: !6414, isLocal: true, isDefinition: true)
!6414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6415, size: 768, elements: !265)
!6415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_devstate_name_entry", file: !3, line: 37, size: 128, elements: !6416)
!6416 = !{!6417, !6418}
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6415, file: !3, line: 38, baseType: !229, size: 8)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6415, file: !3, line: 39, baseType: !948, size: 64, offset: 64)
!6419 = !DIGlobalVariableExpression(var: !6420, expr: !DIExpression())
!6420 = distinct !DIGlobalVariable(name: "myrb_shost_attrs", scope: !2, file: !3, line: 2221, type: !6421, isLocal: true, isDefinition: true)
!6421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6136, size: 320, elements: !282)
!6422 = !DIGlobalVariableExpression(var: !6423, expr: !DIExpression())
!6423 = distinct !DIGlobalVariable(name: "dev_attr_ctlr_num", scope: !2, file: !3, line: 2172, type: !6137, isLocal: true, isDefinition: true)
!6424 = !DIGlobalVariableExpression(var: !6425, expr: !DIExpression())
!6425 = distinct !DIGlobalVariable(name: "dev_attr_model", scope: !2, file: !3, line: 2192, type: !6137, isLocal: true, isDefinition: true)
!6426 = !DIGlobalVariableExpression(var: !6427, expr: !DIExpression())
!6427 = distinct !DIGlobalVariable(name: "dev_attr_firmware", scope: !2, file: !3, line: 2182, type: !6137, isLocal: true, isDefinition: true)
!6428 = !DIGlobalVariableExpression(var: !6429, expr: !DIExpression())
!6429 = distinct !DIGlobalVariable(name: "dev_attr_flush_cache", scope: !2, file: !3, line: 2211, type: !6137, isLocal: true, isDefinition: true)
!6430 = !DIGlobalVariableExpression(var: !6431, expr: !DIExpression())
!6431 = distinct !DIGlobalVariable(name: "myrb_sdev_attrs", scope: !2, file: !3, line: 2213, type: !6421, isLocal: true, isDefinition: true)
!6432 = !DIGlobalVariableExpression(var: !6433, expr: !DIExpression())
!6433 = distinct !DIGlobalVariable(name: "dev_attr_rebuild", scope: !2, file: !3, line: 2049, type: !6137, isLocal: true, isDefinition: true)
!6434 = !DIGlobalVariableExpression(var: !6435, expr: !DIExpression())
!6435 = distinct !DIGlobalVariable(name: "dev_attr_consistency_check", scope: !2, file: !3, line: 2162, type: !6137, isLocal: true, isDefinition: true)
!6436 = !DIGlobalVariableExpression(var: !6437, expr: !DIExpression())
!6437 = distinct !DIGlobalVariable(name: "dev_attr_raid_state", scope: !2, file: !3, line: 1900, type: !6137, isLocal: true, isDefinition: true)
!6438 = !DIGlobalVariableExpression(var: !6439, expr: !DIExpression())
!6439 = distinct !DIGlobalVariable(name: "dev_attr_raid_level", scope: !2, file: !3, line: 1922, type: !6137, isLocal: true, isDefinition: true)
!6440 = !DIGlobalVariableExpression(var: !6441, expr: !DIExpression())
!6441 = distinct !DIGlobalVariable(name: "myrb_raidlevel_name_list", scope: !2, file: !3, line: 64, type: !6442, isLocal: true, isDefinition: true)
!6442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6443, size: 768, elements: !265)
!6443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_raidlevel_name_entry", file: !3, line: 61, size: 128, elements: !6444)
!6444 = !{!6445, !6446}
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !6443, file: !3, line: 62, baseType: !617, size: 8)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6443, file: !3, line: 63, baseType: !948, size: 64, offset: 64)
!6447 = !DIGlobalVariableExpression(var: !6448, expr: !DIExpression())
!6448 = distinct !DIGlobalVariable(name: "myrb_event_msg", scope: !2, file: !3, line: 262, type: !6449, isLocal: true, isDefinition: true)
!6449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1061, size: 832, elements: !6450)
!6450 = !{!6451}
!6451 = !DISubrange(count: 13)
!6452 = !DIGlobalVariableExpression(var: !6453, expr: !DIExpression())
!6453 = distinct !DIGlobalVariable(name: "myrb_raid_functions", scope: !2, file: !3, line: 2318, type: !6454, isLocal: true, isDefinition: true)
!6454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raid_function_template", file: !566, line: 13, size: 256, elements: !6455)
!6455 = !{!6456, !6457, !6458, !6459}
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !6454, file: !566, line: 14, baseType: !973, size: 64)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "is_raid", scope: !6454, file: !566, line: 15, baseType: !5155, size: 64, offset: 64)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "get_resync", scope: !6454, file: !566, line: 16, baseType: !5146, size: 64, offset: 128)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6454, file: !566, line: 17, baseType: !5146, size: 64, offset: 192)
!6460 = !{!"rsp"}
!6461 = !{i32 7, !"Dwarf Version", i32 4}
!6462 = !{i32 2, !"Debug Info Version", i32 3}
!6463 = !{i32 1, !"wchar_size", i32 2}
!6464 = !{i32 1, !"Code Model", i32 2}
!6465 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6466 = distinct !DISubprogram(name: "DAC960_LA_hw_init", scope: !3, file: !3, line: 2726, type: !911, scopeLine: 2728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!6467 = !DILocalVariable(name: "pdev", arg: 1, scope: !6466, file: !3, line: 2726, type: !914)
!6468 = !DILocation(line: 2726, column: 46, scope: !6466)
!6469 = !DILocalVariable(name: "cb", arg: 2, scope: !6466, file: !3, line: 2727, type: !5760)
!6470 = !DILocation(line: 2727, column: 20, scope: !6466)
!6471 = !DILocalVariable(name: "base", arg: 3, scope: !6466, file: !3, line: 2727, type: !973)
!6472 = !DILocation(line: 2727, column: 38, scope: !6466)
!6473 = !DILocalVariable(name: "timeout", scope: !6466, file: !3, line: 2729, type: !913)
!6474 = !DILocation(line: 2729, column: 6, scope: !6466)
!6475 = !DILocalVariable(name: "error", scope: !6466, file: !3, line: 2730, type: !165)
!6476 = !DILocation(line: 2730, column: 16, scope: !6466)
!6477 = !DILocalVariable(name: "parm0", scope: !6466, file: !3, line: 2730, type: !165)
!6478 = !DILocation(line: 2730, column: 23, scope: !6466)
!6479 = !DILocalVariable(name: "parm1", scope: !6466, file: !3, line: 2730, type: !165)
!6480 = !DILocation(line: 2730, column: 30, scope: !6466)
!6481 = !DILocation(line: 2732, column: 25, scope: !6466)
!6482 = !DILocation(line: 2732, column: 2, scope: !6466)
!6483 = !DILocation(line: 2733, column: 31, scope: !6466)
!6484 = !DILocation(line: 2733, column: 2, scope: !6466)
!6485 = !DILocation(line: 2734, column: 2, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 2734, column: 2)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 2734, column: 2)
!6488 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2734, column: 2)
!6489 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 2734, column: 2)
!6490 = !DILocation(line: 2735, column: 2, scope: !6466)
!6491 = !DILocation(line: 2735, column: 36, scope: !6466)
!6492 = !DILocation(line: 2735, column: 9, scope: !6466)
!6493 = !DILocation(line: 2735, column: 42, scope: !6466)
!6494 = !DILocation(line: 2736, column: 9, scope: !6466)
!6495 = !DILocation(line: 2736, column: 17, scope: !6466)
!6496 = !DILocation(line: 0, scope: !6466)
!6497 = !DILocation(line: 2737, column: 35, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 2737, column: 7)
!6499 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 2736, column: 41)
!6500 = !DILocation(line: 2737, column: 7, scope: !6498)
!6501 = !DILocation(line: 2738, column: 28, scope: !6498)
!6502 = !DILocation(line: 2739, column: 23, scope: !6498)
!6503 = !DILocation(line: 2739, column: 27, scope: !6498)
!6504 = !DILocation(line: 2739, column: 34, scope: !6498)
!6505 = !DILocation(line: 2739, column: 41, scope: !6498)
!6506 = !DILocation(line: 2739, column: 7, scope: !6498)
!6507 = !DILocation(line: 2737, column: 7, scope: !6499)
!6508 = !DILocation(line: 2740, column: 4, scope: !6498)
!6509 = !DILocation(line: 2741, column: 3, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 2741, column: 3)
!6511 = distinct !DILexicalBlock(scope: !6512, file: !3, line: 2741, column: 3)
!6512 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 2741, column: 3)
!6513 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 2741, column: 3)
!6514 = !DILocation(line: 2742, column: 10, scope: !6499)
!6515 = distinct !{!6515, !6490, !6516}
!6516 = !DILocation(line: 2743, column: 2, scope: !6466)
!6517 = !DILocation(line: 2744, column: 6, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 2744, column: 6)
!6519 = !DILocation(line: 2744, column: 14, scope: !6518)
!6520 = !DILocation(line: 2744, column: 6, scope: !6466)
!6521 = !DILocation(line: 2745, column: 3, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 2744, column: 39)
!6523 = !DILocation(line: 2747, column: 3, scope: !6522)
!6524 = !DILocation(line: 2749, column: 24, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 2749, column: 6)
!6526 = !DILocation(line: 2749, column: 7, scope: !6525)
!6527 = !DILocation(line: 2749, column: 6, scope: !6466)
!6528 = !DILocation(line: 2750, column: 3, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 2749, column: 50)
!6530 = !DILocation(line: 2752, column: 24, scope: !6529)
!6531 = !DILocation(line: 2752, column: 3, scope: !6529)
!6532 = !DILocation(line: 2753, column: 3, scope: !6529)
!6533 = !DILocation(line: 2755, column: 24, scope: !6466)
!6534 = !DILocation(line: 2755, column: 2, scope: !6466)
!6535 = !DILocation(line: 2756, column: 2, scope: !6466)
!6536 = !DILocation(line: 2756, column: 6, scope: !6466)
!6537 = !DILocation(line: 2756, column: 11, scope: !6466)
!6538 = !DILocation(line: 2757, column: 2, scope: !6466)
!6539 = !DILocation(line: 2757, column: 6, scope: !6466)
!6540 = !DILocation(line: 2757, column: 21, scope: !6466)
!6541 = !DILocation(line: 2758, column: 6, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 2758, column: 6)
!6543 = !DILocation(line: 2758, column: 10, scope: !6542)
!6544 = !DILocation(line: 2758, column: 6, scope: !6466)
!6545 = !DILocation(line: 2759, column: 3, scope: !6542)
!6546 = !DILocation(line: 2759, column: 7, scope: !6542)
!6547 = !DILocation(line: 2759, column: 20, scope: !6542)
!6548 = !DILocation(line: 2761, column: 3, scope: !6542)
!6549 = !DILocation(line: 2761, column: 7, scope: !6542)
!6550 = !DILocation(line: 2761, column: 20, scope: !6542)
!6551 = !DILocation(line: 2762, column: 2, scope: !6466)
!6552 = !DILocation(line: 2762, column: 6, scope: !6466)
!6553 = !DILocation(line: 2762, column: 19, scope: !6466)
!6554 = !DILocation(line: 2763, column: 2, scope: !6466)
!6555 = !DILocation(line: 2763, column: 6, scope: !6466)
!6556 = !DILocation(line: 2763, column: 12, scope: !6466)
!6557 = !DILocation(line: 2765, column: 2, scope: !6466)
!6558 = !DILocation(line: 2766, column: 1, scope: !6466)
!6559 = distinct !DISubprogram(name: "DAC960_LA_intr_handler", scope: !3, file: !3, line: 2768, type: !6308, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!6560 = !DILocalVariable(name: "lock", arg: 1, scope: !6561, file: !6562, line: 407, type: !1906)
!6561 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6562, file: !6562, line: 407, type: !6563, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!6562 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6563 = !DISubroutineType(types: !6564)
!6564 = !{null, !1906, !902}
!6565 = !DILocation(line: 407, column: 64, scope: !6561, inlinedAt: !6566)
!6566 = distinct !DILocation(line: 2810, column: 2, scope: !6559)
!6567 = !DILocalVariable(name: "flags", arg: 2, scope: !6561, file: !6562, line: 407, type: !902)
!6568 = !DILocation(line: 407, column: 84, scope: !6561, inlinedAt: !6566)
!6569 = !DILocalVariable(name: "lock", arg: 1, scope: !6570, file: !6562, line: 327, type: !1906)
!6570 = distinct !DISubprogram(name: "spinlock_check", scope: !6562, file: !6562, line: 327, type: !6571, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!6571 = !DISubroutineType(types: !6572)
!6572 = !{!6573, !1906}
!6573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!6574 = !DILocation(line: 327, column: 67, scope: !6570, inlinedAt: !6575)
!6575 = distinct !DILocation(line: 2775, column: 2, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 2775, column: 2)
!6577 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2775, column: 2)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 2775, column: 2)
!6579 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 2775, column: 2)
!6580 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 2775, column: 2)
!6581 = !DILocalVariable(name: "irq", arg: 1, scope: !6559, file: !3, line: 2768, type: !913)
!6582 = !DILocation(line: 2768, column: 47, scope: !6559)
!6583 = !DILocalVariable(name: "arg", arg: 2, scope: !6559, file: !3, line: 2768, type: !973)
!6584 = !DILocation(line: 2768, column: 58, scope: !6559)
!6585 = !DILocalVariable(name: "cb", scope: !6559, file: !3, line: 2770, type: !5760)
!6586 = !DILocation(line: 2770, column: 19, scope: !6559)
!6587 = !DILocation(line: 2770, column: 24, scope: !6559)
!6588 = !DILocalVariable(name: "base", scope: !6559, file: !3, line: 2771, type: !973)
!6589 = !DILocation(line: 2771, column: 16, scope: !6559)
!6590 = !DILocation(line: 2771, column: 23, scope: !6559)
!6591 = !DILocation(line: 2771, column: 27, scope: !6559)
!6592 = !DILocalVariable(name: "next_stat_mbox", scope: !6559, file: !3, line: 2772, type: !6268)
!6593 = !DILocation(line: 2772, column: 25, scope: !6559)
!6594 = !DILocalVariable(name: "flags", scope: !6559, file: !3, line: 2773, type: !902)
!6595 = !DILocation(line: 2773, column: 16, scope: !6559)
!6596 = !DILocation(line: 2775, column: 2, scope: !6559)
!6597 = !DILocation(line: 2775, column: 2, scope: !6580)
!6598 = !DILocalVariable(name: "__dummy", scope: !6599, file: !3, line: 2775, type: !902)
!6599 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 2775, column: 2)
!6600 = !DILocation(line: 2775, column: 2, scope: !6599)
!6601 = !DILocalVariable(name: "__dummy2", scope: !6599, file: !3, line: 2775, type: !902)
!6602 = !DILocation(line: 2775, column: 2, scope: !6579)
!6603 = !DILocation(line: 2775, column: 2, scope: !6578)
!6604 = !DILocation(line: 2775, column: 2, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2775, column: 2)
!6606 = !DILocalVariable(name: "__dummy", scope: !6607, file: !3, line: 2775, type: !902)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 2775, column: 2)
!6608 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 2775, column: 2)
!6609 = !DILocation(line: 2775, column: 2, scope: !6607)
!6610 = !DILocalVariable(name: "__dummy2", scope: !6607, file: !3, line: 2775, type: !902)
!6611 = !DILocation(line: 2775, column: 2, scope: !6608)
!6612 = !DILocation(line: 2775, column: 2, scope: !6577)
!6613 = !{i32 -2140867030}
!6614 = !DILocation(line: 2775, column: 2, scope: !6576)
!6615 = !DILocation(line: 329, column: 10, scope: !6570, inlinedAt: !6575)
!6616 = !DILocation(line: 329, column: 16, scope: !6570, inlinedAt: !6575)
!6617 = !DILocation(line: 2776, column: 21, scope: !6559)
!6618 = !DILocation(line: 2776, column: 2, scope: !6559)
!6619 = !DILocation(line: 2777, column: 19, scope: !6559)
!6620 = !DILocation(line: 2777, column: 23, scope: !6559)
!6621 = !DILocation(line: 2777, column: 17, scope: !6559)
!6622 = !DILocation(line: 2778, column: 2, scope: !6559)
!6623 = !DILocation(line: 2778, column: 9, scope: !6559)
!6624 = !DILocation(line: 2778, column: 25, scope: !6559)
!6625 = !DILocalVariable(name: "id", scope: !6626, file: !3, line: 2779, type: !165)
!6626 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 2778, column: 32)
!6627 = !DILocation(line: 2779, column: 17, scope: !6626)
!6628 = !DILocation(line: 2779, column: 22, scope: !6626)
!6629 = !DILocation(line: 2779, column: 38, scope: !6626)
!6630 = !DILocalVariable(name: "scmd", scope: !6626, file: !3, line: 2780, type: !5962)
!6631 = !DILocation(line: 2780, column: 21, scope: !6626)
!6632 = !DILocalVariable(name: "cmd_blk", scope: !6626, file: !3, line: 2781, type: !6225)
!6633 = !DILocation(line: 2781, column: 23, scope: !6626)
!6634 = !DILocation(line: 2783, column: 7, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 2783, column: 7)
!6636 = !DILocation(line: 2783, column: 10, scope: !6635)
!6637 = !DILocation(line: 2783, column: 7, scope: !6626)
!6638 = !DILocation(line: 2784, column: 15, scope: !6635)
!6639 = !DILocation(line: 2784, column: 19, scope: !6635)
!6640 = !DILocation(line: 2784, column: 12, scope: !6635)
!6641 = !DILocation(line: 2784, column: 4, scope: !6635)
!6642 = !DILocation(line: 2785, column: 12, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2785, column: 12)
!6644 = !DILocation(line: 2785, column: 15, scope: !6643)
!6645 = !DILocation(line: 2785, column: 12, scope: !6635)
!6646 = !DILocation(line: 2786, column: 15, scope: !6643)
!6647 = !DILocation(line: 2786, column: 19, scope: !6643)
!6648 = !DILocation(line: 2786, column: 12, scope: !6643)
!6649 = !DILocation(line: 2786, column: 4, scope: !6643)
!6650 = !DILocation(line: 2788, column: 30, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 2787, column: 8)
!6652 = !DILocation(line: 2788, column: 34, scope: !6651)
!6653 = !DILocation(line: 2788, column: 40, scope: !6651)
!6654 = !DILocation(line: 2788, column: 43, scope: !6651)
!6655 = !DILocation(line: 2788, column: 11, scope: !6651)
!6656 = !DILocation(line: 2788, column: 9, scope: !6651)
!6657 = !DILocation(line: 2789, column: 8, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 2789, column: 8)
!6659 = !DILocation(line: 2789, column: 8, scope: !6651)
!6660 = !DILocation(line: 2790, column: 29, scope: !6658)
!6661 = !DILocation(line: 2790, column: 15, scope: !6658)
!6662 = !DILocation(line: 2790, column: 13, scope: !6658)
!6663 = !DILocation(line: 2790, column: 5, scope: !6658)
!6664 = !DILocation(line: 2792, column: 7, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 2792, column: 7)
!6666 = !DILocation(line: 2792, column: 7, scope: !6626)
!6667 = !DILocation(line: 2793, column: 22, scope: !6665)
!6668 = !DILocation(line: 2793, column: 38, scope: !6665)
!6669 = !DILocation(line: 2793, column: 4, scope: !6665)
!6670 = !DILocation(line: 2793, column: 13, scope: !6665)
!6671 = !DILocation(line: 2793, column: 20, scope: !6665)
!6672 = !DILocation(line: 2795, column: 4, scope: !6665)
!6673 = !DILocation(line: 2798, column: 10, scope: !6626)
!6674 = !DILocation(line: 2798, column: 3, scope: !6626)
!6675 = !DILocation(line: 2799, column: 7, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 2799, column: 7)
!6677 = !DILocation(line: 2799, column: 26, scope: !6676)
!6678 = !DILocation(line: 2799, column: 30, scope: !6676)
!6679 = !DILocation(line: 2799, column: 24, scope: !6676)
!6680 = !DILocation(line: 2799, column: 7, scope: !6626)
!6681 = !DILocation(line: 2800, column: 21, scope: !6676)
!6682 = !DILocation(line: 2800, column: 25, scope: !6676)
!6683 = !DILocation(line: 2800, column: 19, scope: !6676)
!6684 = !DILocation(line: 2800, column: 4, scope: !6676)
!6685 = !DILocation(line: 2802, column: 7, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 2802, column: 7)
!6687 = !DILocation(line: 2802, column: 7, scope: !6626)
!6688 = !DILocation(line: 2803, column: 8, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 2803, column: 8)
!6690 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 2802, column: 16)
!6691 = !DILocation(line: 2803, column: 11, scope: !6689)
!6692 = !DILocation(line: 2803, column: 8, scope: !6690)
!6693 = !DILocation(line: 2804, column: 24, scope: !6689)
!6694 = !DILocation(line: 2804, column: 28, scope: !6689)
!6695 = !DILocation(line: 2804, column: 5, scope: !6689)
!6696 = !DILocation(line: 2806, column: 22, scope: !6689)
!6697 = !DILocation(line: 2806, column: 26, scope: !6689)
!6698 = !DILocation(line: 2806, column: 35, scope: !6689)
!6699 = !DILocation(line: 2806, column: 5, scope: !6689)
!6700 = !DILocation(line: 2807, column: 3, scope: !6690)
!6701 = distinct !{!6701, !6622, !6702}
!6702 = !DILocation(line: 2808, column: 2, scope: !6559)
!6703 = !DILocation(line: 2809, column: 23, scope: !6559)
!6704 = !DILocation(line: 2809, column: 2, scope: !6559)
!6705 = !DILocation(line: 2809, column: 6, scope: !6559)
!6706 = !DILocation(line: 2809, column: 21, scope: !6559)
!6707 = !DILocation(line: 2810, column: 26, scope: !6559)
!6708 = !DILocation(line: 2810, column: 30, scope: !6559)
!6709 = !DILocation(line: 2810, column: 42, scope: !6559)
!6710 = !DILocalVariable(name: "__dummy", scope: !6711, file: !6562, line: 409, type: !902)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !6562, line: 409, column: 2)
!6712 = distinct !DILexicalBlock(scope: !6561, file: !6562, line: 409, column: 2)
!6713 = !DILocation(line: 409, column: 2, scope: !6711, inlinedAt: !6566)
!6714 = !DILocalVariable(name: "__dummy2", scope: !6711, file: !6562, line: 409, type: !902)
!6715 = !DILocalVariable(name: "__dummy", scope: !6716, file: !6562, line: 409, type: !902)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !6562, line: 409, column: 2)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !6562, line: 409, column: 2)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !6562, line: 409, column: 2)
!6719 = distinct !DILexicalBlock(scope: !6712, file: !6562, line: 409, column: 2)
!6720 = !DILocation(line: 409, column: 2, scope: !6716, inlinedAt: !6566)
!6721 = !DILocalVariable(name: "__dummy2", scope: !6716, file: !6562, line: 409, type: !902)
!6722 = !DILocation(line: 409, column: 2, scope: !6717, inlinedAt: !6566)
!6723 = !DILocation(line: 409, column: 2, scope: !6724, inlinedAt: !6566)
!6724 = distinct !DILexicalBlock(scope: !6719, file: !6562, line: 409, column: 2)
!6725 = !{i32 -2145378230}
!6726 = !DILocation(line: 409, column: 2, scope: !6727, inlinedAt: !6566)
!6727 = distinct !DILexicalBlock(scope: !6724, file: !6562, line: 409, column: 2)
!6728 = !DILocation(line: 2811, column: 2, scope: !6559)
!6729 = distinct !DISubprogram(name: "DAC960_PG_hw_init", scope: !3, file: !3, line: 3004, type: !911, scopeLine: 3006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!6730 = !DILocalVariable(name: "pdev", arg: 1, scope: !6729, file: !3, line: 3004, type: !914)
!6731 = !DILocation(line: 3004, column: 46, scope: !6729)
!6732 = !DILocalVariable(name: "cb", arg: 2, scope: !6729, file: !3, line: 3005, type: !5760)
!6733 = !DILocation(line: 3005, column: 20, scope: !6729)
!6734 = !DILocalVariable(name: "base", arg: 3, scope: !6729, file: !3, line: 3005, type: !973)
!6735 = !DILocation(line: 3005, column: 38, scope: !6729)
!6736 = !DILocalVariable(name: "timeout", scope: !6729, file: !3, line: 3007, type: !913)
!6737 = !DILocation(line: 3007, column: 6, scope: !6729)
!6738 = !DILocalVariable(name: "error", scope: !6729, file: !3, line: 3008, type: !165)
!6739 = !DILocation(line: 3008, column: 16, scope: !6729)
!6740 = !DILocalVariable(name: "parm0", scope: !6729, file: !3, line: 3008, type: !165)
!6741 = !DILocation(line: 3008, column: 23, scope: !6729)
!6742 = !DILocalVariable(name: "parm1", scope: !6729, file: !3, line: 3008, type: !165)
!6743 = !DILocation(line: 3008, column: 30, scope: !6729)
!6744 = !DILocation(line: 3010, column: 25, scope: !6729)
!6745 = !DILocation(line: 3010, column: 2, scope: !6729)
!6746 = !DILocation(line: 3011, column: 31, scope: !6729)
!6747 = !DILocation(line: 3011, column: 2, scope: !6729)
!6748 = !DILocation(line: 3012, column: 2, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 3012, column: 2)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 3012, column: 2)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 3012, column: 2)
!6752 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 3012, column: 2)
!6753 = !DILocation(line: 3013, column: 2, scope: !6729)
!6754 = !DILocation(line: 3013, column: 36, scope: !6729)
!6755 = !DILocation(line: 3013, column: 9, scope: !6729)
!6756 = !DILocation(line: 3013, column: 42, scope: !6729)
!6757 = !DILocation(line: 3014, column: 9, scope: !6729)
!6758 = !DILocation(line: 3014, column: 17, scope: !6729)
!6759 = !DILocation(line: 0, scope: !6729)
!6760 = !DILocation(line: 3015, column: 35, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3015, column: 7)
!6762 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 3014, column: 41)
!6763 = !DILocation(line: 3015, column: 7, scope: !6761)
!6764 = !DILocation(line: 3016, column: 23, scope: !6761)
!6765 = !DILocation(line: 3017, column: 23, scope: !6761)
!6766 = !DILocation(line: 3017, column: 27, scope: !6761)
!6767 = !DILocation(line: 3017, column: 34, scope: !6761)
!6768 = !DILocation(line: 3017, column: 41, scope: !6761)
!6769 = !DILocation(line: 3017, column: 7, scope: !6761)
!6770 = !DILocation(line: 3015, column: 7, scope: !6762)
!6771 = !DILocation(line: 3018, column: 4, scope: !6761)
!6772 = !DILocation(line: 3019, column: 3, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 3019, column: 3)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 3019, column: 3)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 3019, column: 3)
!6776 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3019, column: 3)
!6777 = !DILocation(line: 3020, column: 10, scope: !6762)
!6778 = distinct !{!6778, !6753, !6779}
!6779 = !DILocation(line: 3021, column: 2, scope: !6729)
!6780 = !DILocation(line: 3022, column: 6, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 3022, column: 6)
!6782 = !DILocation(line: 3022, column: 14, scope: !6781)
!6783 = !DILocation(line: 3022, column: 6, scope: !6729)
!6784 = !DILocation(line: 3023, column: 3, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 3022, column: 39)
!6786 = !DILocation(line: 3025, column: 3, scope: !6785)
!6787 = !DILocation(line: 3027, column: 24, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 3027, column: 6)
!6789 = !DILocation(line: 3027, column: 7, scope: !6788)
!6790 = !DILocation(line: 3027, column: 6, scope: !6729)
!6791 = !DILocation(line: 3028, column: 3, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 3027, column: 50)
!6793 = !DILocation(line: 3030, column: 24, scope: !6792)
!6794 = !DILocation(line: 3030, column: 3, scope: !6792)
!6795 = !DILocation(line: 3031, column: 3, scope: !6792)
!6796 = !DILocation(line: 3033, column: 24, scope: !6729)
!6797 = !DILocation(line: 3033, column: 2, scope: !6729)
!6798 = !DILocation(line: 3034, column: 2, scope: !6729)
!6799 = !DILocation(line: 3034, column: 6, scope: !6729)
!6800 = !DILocation(line: 3034, column: 11, scope: !6729)
!6801 = !DILocation(line: 3035, column: 2, scope: !6729)
!6802 = !DILocation(line: 3035, column: 6, scope: !6729)
!6803 = !DILocation(line: 3035, column: 21, scope: !6729)
!6804 = !DILocation(line: 3036, column: 6, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 3036, column: 6)
!6806 = !DILocation(line: 3036, column: 10, scope: !6805)
!6807 = !DILocation(line: 3036, column: 6, scope: !6729)
!6808 = !DILocation(line: 3037, column: 3, scope: !6805)
!6809 = !DILocation(line: 3037, column: 7, scope: !6805)
!6810 = !DILocation(line: 3037, column: 20, scope: !6805)
!6811 = !DILocation(line: 3039, column: 3, scope: !6805)
!6812 = !DILocation(line: 3039, column: 7, scope: !6805)
!6813 = !DILocation(line: 3039, column: 20, scope: !6805)
!6814 = !DILocation(line: 3040, column: 2, scope: !6729)
!6815 = !DILocation(line: 3040, column: 6, scope: !6729)
!6816 = !DILocation(line: 3040, column: 19, scope: !6729)
!6817 = !DILocation(line: 3041, column: 2, scope: !6729)
!6818 = !DILocation(line: 3041, column: 6, scope: !6729)
!6819 = !DILocation(line: 3041, column: 12, scope: !6729)
!6820 = !DILocation(line: 3043, column: 2, scope: !6729)
!6821 = !DILocation(line: 3044, column: 1, scope: !6729)
!6822 = distinct !DISubprogram(name: "DAC960_PG_intr_handler", scope: !3, file: !3, line: 3046, type: !6308, scopeLine: 3047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!6823 = !DILocation(line: 407, column: 64, scope: !6561, inlinedAt: !6824)
!6824 = distinct !DILocation(line: 3086, column: 2, scope: !6822)
!6825 = !DILocation(line: 407, column: 84, scope: !6561, inlinedAt: !6824)
!6826 = !DILocation(line: 327, column: 67, scope: !6570, inlinedAt: !6827)
!6827 = distinct !DILocation(line: 3053, column: 2, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 3053, column: 2)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 3053, column: 2)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 3053, column: 2)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 3053, column: 2)
!6832 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 3053, column: 2)
!6833 = !DILocalVariable(name: "irq", arg: 1, scope: !6822, file: !3, line: 3046, type: !913)
!6834 = !DILocation(line: 3046, column: 47, scope: !6822)
!6835 = !DILocalVariable(name: "arg", arg: 2, scope: !6822, file: !3, line: 3046, type: !973)
!6836 = !DILocation(line: 3046, column: 58, scope: !6822)
!6837 = !DILocalVariable(name: "cb", scope: !6822, file: !3, line: 3048, type: !5760)
!6838 = !DILocation(line: 3048, column: 19, scope: !6822)
!6839 = !DILocation(line: 3048, column: 24, scope: !6822)
!6840 = !DILocalVariable(name: "base", scope: !6822, file: !3, line: 3049, type: !973)
!6841 = !DILocation(line: 3049, column: 16, scope: !6822)
!6842 = !DILocation(line: 3049, column: 23, scope: !6822)
!6843 = !DILocation(line: 3049, column: 27, scope: !6822)
!6844 = !DILocalVariable(name: "next_stat_mbox", scope: !6822, file: !3, line: 3050, type: !6268)
!6845 = !DILocation(line: 3050, column: 25, scope: !6822)
!6846 = !DILocalVariable(name: "flags", scope: !6822, file: !3, line: 3051, type: !902)
!6847 = !DILocation(line: 3051, column: 16, scope: !6822)
!6848 = !DILocation(line: 3053, column: 2, scope: !6822)
!6849 = !DILocation(line: 3053, column: 2, scope: !6832)
!6850 = !DILocalVariable(name: "__dummy", scope: !6851, file: !3, line: 3053, type: !902)
!6851 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 3053, column: 2)
!6852 = !DILocation(line: 3053, column: 2, scope: !6851)
!6853 = !DILocalVariable(name: "__dummy2", scope: !6851, file: !3, line: 3053, type: !902)
!6854 = !DILocation(line: 3053, column: 2, scope: !6831)
!6855 = !DILocation(line: 3053, column: 2, scope: !6830)
!6856 = !DILocation(line: 3053, column: 2, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 3053, column: 2)
!6858 = !DILocalVariable(name: "__dummy", scope: !6859, file: !3, line: 3053, type: !902)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 3053, column: 2)
!6860 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 3053, column: 2)
!6861 = !DILocation(line: 3053, column: 2, scope: !6859)
!6862 = !DILocalVariable(name: "__dummy2", scope: !6859, file: !3, line: 3053, type: !902)
!6863 = !DILocation(line: 3053, column: 2, scope: !6860)
!6864 = !DILocation(line: 3053, column: 2, scope: !6829)
!6865 = !{i32 -2140860479}
!6866 = !DILocation(line: 3053, column: 2, scope: !6828)
!6867 = !DILocation(line: 329, column: 10, scope: !6570, inlinedAt: !6827)
!6868 = !DILocation(line: 329, column: 16, scope: !6570, inlinedAt: !6827)
!6869 = !DILocation(line: 3054, column: 21, scope: !6822)
!6870 = !DILocation(line: 3054, column: 2, scope: !6822)
!6871 = !DILocation(line: 3055, column: 19, scope: !6822)
!6872 = !DILocation(line: 3055, column: 23, scope: !6822)
!6873 = !DILocation(line: 3055, column: 17, scope: !6822)
!6874 = !DILocation(line: 3056, column: 2, scope: !6822)
!6875 = !DILocation(line: 3056, column: 9, scope: !6822)
!6876 = !DILocation(line: 3056, column: 25, scope: !6822)
!6877 = !DILocalVariable(name: "id", scope: !6878, file: !3, line: 3057, type: !165)
!6878 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 3056, column: 32)
!6879 = !DILocation(line: 3057, column: 17, scope: !6878)
!6880 = !DILocation(line: 3057, column: 22, scope: !6878)
!6881 = !DILocation(line: 3057, column: 38, scope: !6878)
!6882 = !DILocalVariable(name: "scmd", scope: !6878, file: !3, line: 3058, type: !5962)
!6883 = !DILocation(line: 3058, column: 21, scope: !6878)
!6884 = !DILocalVariable(name: "cmd_blk", scope: !6878, file: !3, line: 3059, type: !6225)
!6885 = !DILocation(line: 3059, column: 23, scope: !6878)
!6886 = !DILocation(line: 3061, column: 7, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 3061, column: 7)
!6888 = !DILocation(line: 3061, column: 10, scope: !6887)
!6889 = !DILocation(line: 3061, column: 7, scope: !6878)
!6890 = !DILocation(line: 3062, column: 15, scope: !6887)
!6891 = !DILocation(line: 3062, column: 19, scope: !6887)
!6892 = !DILocation(line: 3062, column: 12, scope: !6887)
!6893 = !DILocation(line: 3062, column: 4, scope: !6887)
!6894 = !DILocation(line: 3063, column: 12, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 3063, column: 12)
!6896 = !DILocation(line: 3063, column: 15, scope: !6895)
!6897 = !DILocation(line: 3063, column: 12, scope: !6887)
!6898 = !DILocation(line: 3064, column: 15, scope: !6895)
!6899 = !DILocation(line: 3064, column: 19, scope: !6895)
!6900 = !DILocation(line: 3064, column: 12, scope: !6895)
!6901 = !DILocation(line: 3064, column: 4, scope: !6895)
!6902 = !DILocation(line: 3066, column: 30, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 3065, column: 8)
!6904 = !DILocation(line: 3066, column: 34, scope: !6903)
!6905 = !DILocation(line: 3066, column: 40, scope: !6903)
!6906 = !DILocation(line: 3066, column: 43, scope: !6903)
!6907 = !DILocation(line: 3066, column: 11, scope: !6903)
!6908 = !DILocation(line: 3066, column: 9, scope: !6903)
!6909 = !DILocation(line: 3067, column: 8, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 3067, column: 8)
!6911 = !DILocation(line: 3067, column: 8, scope: !6903)
!6912 = !DILocation(line: 3068, column: 29, scope: !6910)
!6913 = !DILocation(line: 3068, column: 15, scope: !6910)
!6914 = !DILocation(line: 3068, column: 13, scope: !6910)
!6915 = !DILocation(line: 3068, column: 5, scope: !6910)
!6916 = !DILocation(line: 3070, column: 7, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 3070, column: 7)
!6918 = !DILocation(line: 3070, column: 7, scope: !6878)
!6919 = !DILocation(line: 3071, column: 22, scope: !6917)
!6920 = !DILocation(line: 3071, column: 38, scope: !6917)
!6921 = !DILocation(line: 3071, column: 4, scope: !6917)
!6922 = !DILocation(line: 3071, column: 13, scope: !6917)
!6923 = !DILocation(line: 3071, column: 20, scope: !6917)
!6924 = !DILocation(line: 3073, column: 4, scope: !6917)
!6925 = !DILocation(line: 3076, column: 10, scope: !6878)
!6926 = !DILocation(line: 3076, column: 3, scope: !6878)
!6927 = !DILocation(line: 3077, column: 7, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 3077, column: 7)
!6929 = !DILocation(line: 3077, column: 26, scope: !6928)
!6930 = !DILocation(line: 3077, column: 30, scope: !6928)
!6931 = !DILocation(line: 3077, column: 24, scope: !6928)
!6932 = !DILocation(line: 3077, column: 7, scope: !6878)
!6933 = !DILocation(line: 3078, column: 21, scope: !6928)
!6934 = !DILocation(line: 3078, column: 25, scope: !6928)
!6935 = !DILocation(line: 3078, column: 19, scope: !6928)
!6936 = !DILocation(line: 3078, column: 4, scope: !6928)
!6937 = !DILocation(line: 3080, column: 7, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 3080, column: 7)
!6939 = !DILocation(line: 3080, column: 10, scope: !6938)
!6940 = !DILocation(line: 3080, column: 7, scope: !6878)
!6941 = !DILocation(line: 3081, column: 23, scope: !6938)
!6942 = !DILocation(line: 3081, column: 27, scope: !6938)
!6943 = !DILocation(line: 3081, column: 4, scope: !6938)
!6944 = !DILocation(line: 3083, column: 21, scope: !6938)
!6945 = !DILocation(line: 3083, column: 25, scope: !6938)
!6946 = !DILocation(line: 3083, column: 34, scope: !6938)
!6947 = !DILocation(line: 3083, column: 4, scope: !6938)
!6948 = distinct !{!6948, !6874, !6949}
!6949 = !DILocation(line: 3084, column: 2, scope: !6822)
!6950 = !DILocation(line: 3085, column: 23, scope: !6822)
!6951 = !DILocation(line: 3085, column: 2, scope: !6822)
!6952 = !DILocation(line: 3085, column: 6, scope: !6822)
!6953 = !DILocation(line: 3085, column: 21, scope: !6822)
!6954 = !DILocation(line: 3086, column: 26, scope: !6822)
!6955 = !DILocation(line: 3086, column: 30, scope: !6822)
!6956 = !DILocation(line: 3086, column: 42, scope: !6822)
!6957 = !DILocation(line: 409, column: 2, scope: !6711, inlinedAt: !6824)
!6958 = !DILocation(line: 409, column: 2, scope: !6716, inlinedAt: !6824)
!6959 = !DILocation(line: 409, column: 2, scope: !6717, inlinedAt: !6824)
!6960 = !DILocation(line: 409, column: 2, scope: !6724, inlinedAt: !6824)
!6961 = !DILocation(line: 409, column: 2, scope: !6727, inlinedAt: !6824)
!6962 = !DILocation(line: 3087, column: 2, scope: !6822)
!6963 = distinct !DISubprogram(name: "DAC960_PD_hw_init", scope: !3, file: !3, line: 3212, type: !911, scopeLine: 3214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!6964 = !DILocalVariable(name: "pdev", arg: 1, scope: !6963, file: !3, line: 3212, type: !914)
!6965 = !DILocation(line: 3212, column: 46, scope: !6963)
!6966 = !DILocalVariable(name: "cb", arg: 2, scope: !6963, file: !3, line: 3213, type: !5760)
!6967 = !DILocation(line: 3213, column: 20, scope: !6963)
!6968 = !DILocalVariable(name: "base", arg: 3, scope: !6963, file: !3, line: 3213, type: !973)
!6969 = !DILocation(line: 3213, column: 38, scope: !6963)
!6970 = !DILocalVariable(name: "timeout", scope: !6963, file: !3, line: 3215, type: !913)
!6971 = !DILocation(line: 3215, column: 6, scope: !6963)
!6972 = !DILocalVariable(name: "error", scope: !6963, file: !3, line: 3216, type: !165)
!6973 = !DILocation(line: 3216, column: 16, scope: !6963)
!6974 = !DILocalVariable(name: "parm0", scope: !6963, file: !3, line: 3216, type: !165)
!6975 = !DILocation(line: 3216, column: 23, scope: !6963)
!6976 = !DILocalVariable(name: "parm1", scope: !6963, file: !3, line: 3216, type: !165)
!6977 = !DILocation(line: 3216, column: 30, scope: !6963)
!6978 = !DILocation(line: 3218, column: 7, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 3218, column: 6)
!6980 = !DILocation(line: 3218, column: 6, scope: !6963)
!6981 = !DILocation(line: 3219, column: 3, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6979, file: !3, line: 3218, column: 50)
!6983 = !DILocation(line: 3221, column: 3, scope: !6982)
!6984 = !DILocation(line: 3223, column: 25, scope: !6963)
!6985 = !DILocation(line: 3223, column: 2, scope: !6963)
!6986 = !DILocation(line: 3224, column: 31, scope: !6963)
!6987 = !DILocation(line: 3224, column: 2, scope: !6963)
!6988 = !DILocation(line: 3225, column: 2, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 3225, column: 2)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 3225, column: 2)
!6991 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 3225, column: 2)
!6992 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 3225, column: 2)
!6993 = !DILocation(line: 3226, column: 2, scope: !6963)
!6994 = !DILocation(line: 3226, column: 36, scope: !6963)
!6995 = !DILocation(line: 3226, column: 9, scope: !6963)
!6996 = !DILocation(line: 3226, column: 42, scope: !6963)
!6997 = !DILocation(line: 3227, column: 9, scope: !6963)
!6998 = !DILocation(line: 3227, column: 17, scope: !6963)
!6999 = !DILocation(line: 0, scope: !6963)
!7000 = !DILocation(line: 3228, column: 35, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 3228, column: 7)
!7002 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 3227, column: 41)
!7003 = !DILocation(line: 3228, column: 7, scope: !7001)
!7004 = !DILocation(line: 3229, column: 28, scope: !7001)
!7005 = !DILocation(line: 3230, column: 23, scope: !7001)
!7006 = !DILocation(line: 3230, column: 27, scope: !7001)
!7007 = !DILocation(line: 3230, column: 34, scope: !7001)
!7008 = !DILocation(line: 3230, column: 41, scope: !7001)
!7009 = !DILocation(line: 3230, column: 7, scope: !7001)
!7010 = !DILocation(line: 3228, column: 7, scope: !7002)
!7011 = !DILocation(line: 3231, column: 4, scope: !7001)
!7012 = !DILocation(line: 3232, column: 3, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !3, line: 3232, column: 3)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 3232, column: 3)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 3232, column: 3)
!7016 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 3232, column: 3)
!7017 = !DILocation(line: 3233, column: 10, scope: !7002)
!7018 = distinct !{!7018, !6993, !7019}
!7019 = !DILocation(line: 3234, column: 2, scope: !6963)
!7020 = !DILocation(line: 3235, column: 6, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 3235, column: 6)
!7022 = !DILocation(line: 3235, column: 14, scope: !7021)
!7023 = !DILocation(line: 3235, column: 6, scope: !6963)
!7024 = !DILocation(line: 3236, column: 3, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 3235, column: 39)
!7026 = !DILocation(line: 3238, column: 3, scope: !7025)
!7027 = !DILocation(line: 3240, column: 24, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 3240, column: 6)
!7029 = !DILocation(line: 3240, column: 7, scope: !7028)
!7030 = !DILocation(line: 3240, column: 6, scope: !6963)
!7031 = !DILocation(line: 3241, column: 3, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 3240, column: 35)
!7033 = !DILocation(line: 3243, column: 24, scope: !7032)
!7034 = !DILocation(line: 3243, column: 3, scope: !7032)
!7035 = !DILocation(line: 3244, column: 3, scope: !7032)
!7036 = !DILocation(line: 3246, column: 24, scope: !6963)
!7037 = !DILocation(line: 3246, column: 2, scope: !6963)
!7038 = !DILocation(line: 3247, column: 2, scope: !6963)
!7039 = !DILocation(line: 3247, column: 6, scope: !6963)
!7040 = !DILocation(line: 3247, column: 11, scope: !6963)
!7041 = !DILocation(line: 3248, column: 2, scope: !6963)
!7042 = !DILocation(line: 3248, column: 6, scope: !6963)
!7043 = !DILocation(line: 3248, column: 19, scope: !6963)
!7044 = !DILocation(line: 3249, column: 2, scope: !6963)
!7045 = !DILocation(line: 3249, column: 6, scope: !6963)
!7046 = !DILocation(line: 3249, column: 12, scope: !6963)
!7047 = !DILocation(line: 3251, column: 2, scope: !6963)
!7048 = !DILocation(line: 3252, column: 1, scope: !6963)
!7049 = distinct !DISubprogram(name: "DAC960_PD_intr_handler", scope: !3, file: !3, line: 3254, type: !6308, scopeLine: 3255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7050 = !DILocation(line: 407, column: 64, scope: !6561, inlinedAt: !7051)
!7051 = distinct !DILocation(line: 3289, column: 2, scope: !7049)
!7052 = !DILocation(line: 407, column: 84, scope: !6561, inlinedAt: !7051)
!7053 = !DILocation(line: 327, column: 67, scope: !6570, inlinedAt: !7054)
!7054 = distinct !DILocation(line: 3260, column: 2, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 3260, column: 2)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !3, line: 3260, column: 2)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 3260, column: 2)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 3260, column: 2)
!7059 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 3260, column: 2)
!7060 = !DILocalVariable(name: "irq", arg: 1, scope: !7049, file: !3, line: 3254, type: !913)
!7061 = !DILocation(line: 3254, column: 47, scope: !7049)
!7062 = !DILocalVariable(name: "arg", arg: 2, scope: !7049, file: !3, line: 3254, type: !973)
!7063 = !DILocation(line: 3254, column: 58, scope: !7049)
!7064 = !DILocalVariable(name: "cb", scope: !7049, file: !3, line: 3256, type: !5760)
!7065 = !DILocation(line: 3256, column: 19, scope: !7049)
!7066 = !DILocation(line: 3256, column: 24, scope: !7049)
!7067 = !DILocalVariable(name: "base", scope: !7049, file: !3, line: 3257, type: !973)
!7068 = !DILocation(line: 3257, column: 16, scope: !7049)
!7069 = !DILocation(line: 3257, column: 23, scope: !7049)
!7070 = !DILocation(line: 3257, column: 27, scope: !7049)
!7071 = !DILocalVariable(name: "flags", scope: !7049, file: !3, line: 3258, type: !902)
!7072 = !DILocation(line: 3258, column: 16, scope: !7049)
!7073 = !DILocation(line: 3260, column: 2, scope: !7049)
!7074 = !DILocation(line: 3260, column: 2, scope: !7059)
!7075 = !DILocalVariable(name: "__dummy", scope: !7076, file: !3, line: 3260, type: !902)
!7076 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 3260, column: 2)
!7077 = !DILocation(line: 3260, column: 2, scope: !7076)
!7078 = !DILocalVariable(name: "__dummy2", scope: !7076, file: !3, line: 3260, type: !902)
!7079 = !DILocation(line: 3260, column: 2, scope: !7058)
!7080 = !DILocation(line: 3260, column: 2, scope: !7057)
!7081 = !DILocation(line: 3260, column: 2, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7057, file: !3, line: 3260, column: 2)
!7083 = !DILocalVariable(name: "__dummy", scope: !7084, file: !3, line: 3260, type: !902)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 3260, column: 2)
!7085 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 3260, column: 2)
!7086 = !DILocation(line: 3260, column: 2, scope: !7084)
!7087 = !DILocalVariable(name: "__dummy2", scope: !7084, file: !3, line: 3260, type: !902)
!7088 = !DILocation(line: 3260, column: 2, scope: !7085)
!7089 = !DILocation(line: 3260, column: 2, scope: !7056)
!7090 = !{i32 -2140855339}
!7091 = !DILocation(line: 3260, column: 2, scope: !7055)
!7092 = !DILocation(line: 329, column: 10, scope: !6570, inlinedAt: !7054)
!7093 = !DILocation(line: 329, column: 16, scope: !6570, inlinedAt: !7054)
!7094 = !DILocation(line: 3261, column: 2, scope: !7049)
!7095 = !DILocation(line: 3261, column: 44, scope: !7049)
!7096 = !DILocation(line: 3261, column: 9, scope: !7049)
!7097 = !DILocalVariable(name: "id", scope: !7098, file: !3, line: 3262, type: !165)
!7098 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 3261, column: 51)
!7099 = !DILocation(line: 3262, column: 17, scope: !7098)
!7100 = !DILocation(line: 3262, column: 54, scope: !7098)
!7101 = !DILocation(line: 3262, column: 22, scope: !7098)
!7102 = !DILocalVariable(name: "scmd", scope: !7098, file: !3, line: 3263, type: !5962)
!7103 = !DILocation(line: 3263, column: 21, scope: !7098)
!7104 = !DILocalVariable(name: "cmd_blk", scope: !7098, file: !3, line: 3264, type: !6225)
!7105 = !DILocation(line: 3264, column: 23, scope: !7098)
!7106 = !DILocation(line: 3266, column: 7, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 3266, column: 7)
!7108 = !DILocation(line: 3266, column: 10, scope: !7107)
!7109 = !DILocation(line: 3266, column: 7, scope: !7098)
!7110 = !DILocation(line: 3267, column: 15, scope: !7107)
!7111 = !DILocation(line: 3267, column: 19, scope: !7107)
!7112 = !DILocation(line: 3267, column: 12, scope: !7107)
!7113 = !DILocation(line: 3267, column: 4, scope: !7107)
!7114 = !DILocation(line: 3268, column: 12, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 3268, column: 12)
!7116 = !DILocation(line: 3268, column: 15, scope: !7115)
!7117 = !DILocation(line: 3268, column: 12, scope: !7107)
!7118 = !DILocation(line: 3269, column: 15, scope: !7115)
!7119 = !DILocation(line: 3269, column: 19, scope: !7115)
!7120 = !DILocation(line: 3269, column: 12, scope: !7115)
!7121 = !DILocation(line: 3269, column: 4, scope: !7115)
!7122 = !DILocation(line: 3271, column: 30, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 3270, column: 8)
!7124 = !DILocation(line: 3271, column: 34, scope: !7123)
!7125 = !DILocation(line: 3271, column: 40, scope: !7123)
!7126 = !DILocation(line: 3271, column: 43, scope: !7123)
!7127 = !DILocation(line: 3271, column: 11, scope: !7123)
!7128 = !DILocation(line: 3271, column: 9, scope: !7123)
!7129 = !DILocation(line: 3272, column: 8, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 3272, column: 8)
!7131 = !DILocation(line: 3272, column: 8, scope: !7123)
!7132 = !DILocation(line: 3273, column: 29, scope: !7130)
!7133 = !DILocation(line: 3273, column: 15, scope: !7130)
!7134 = !DILocation(line: 3273, column: 13, scope: !7130)
!7135 = !DILocation(line: 3273, column: 5, scope: !7130)
!7136 = !DILocation(line: 3275, column: 7, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 3275, column: 7)
!7138 = !DILocation(line: 3275, column: 7, scope: !7098)
!7139 = !DILocation(line: 3276, column: 44, scope: !7137)
!7140 = !DILocation(line: 3276, column: 22, scope: !7137)
!7141 = !DILocation(line: 3276, column: 4, scope: !7137)
!7142 = !DILocation(line: 3276, column: 13, scope: !7137)
!7143 = !DILocation(line: 3276, column: 20, scope: !7137)
!7144 = !DILocation(line: 3278, column: 4, scope: !7137)
!7145 = !DILocation(line: 3281, column: 22, scope: !7098)
!7146 = !DILocation(line: 3281, column: 3, scope: !7098)
!7147 = !DILocation(line: 3282, column: 32, scope: !7098)
!7148 = !DILocation(line: 3282, column: 3, scope: !7098)
!7149 = !DILocation(line: 3284, column: 7, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 3284, column: 7)
!7151 = !DILocation(line: 3284, column: 10, scope: !7150)
!7152 = !DILocation(line: 3284, column: 7, scope: !7098)
!7153 = !DILocation(line: 3285, column: 23, scope: !7150)
!7154 = !DILocation(line: 3285, column: 27, scope: !7150)
!7155 = !DILocation(line: 3285, column: 4, scope: !7150)
!7156 = !DILocation(line: 3287, column: 21, scope: !7150)
!7157 = !DILocation(line: 3287, column: 25, scope: !7150)
!7158 = !DILocation(line: 3287, column: 34, scope: !7150)
!7159 = !DILocation(line: 3287, column: 4, scope: !7150)
!7160 = distinct !{!7160, !7094, !7161}
!7161 = !DILocation(line: 3288, column: 2, scope: !7049)
!7162 = !DILocation(line: 3289, column: 26, scope: !7049)
!7163 = !DILocation(line: 3289, column: 30, scope: !7049)
!7164 = !DILocation(line: 3289, column: 42, scope: !7049)
!7165 = !DILocation(line: 409, column: 2, scope: !6711, inlinedAt: !7051)
!7166 = !DILocation(line: 409, column: 2, scope: !6716, inlinedAt: !7051)
!7167 = !DILocation(line: 409, column: 2, scope: !6717, inlinedAt: !7051)
!7168 = !DILocation(line: 409, column: 2, scope: !6724, inlinedAt: !7051)
!7169 = !DILocation(line: 409, column: 2, scope: !6727, inlinedAt: !7051)
!7170 = !DILocation(line: 3290, column: 2, scope: !7049)
!7171 = distinct !DISubprogram(name: "DAC960_P_hw_init", scope: !3, file: !3, line: 3378, type: !911, scopeLine: 3380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7172 = !DILocalVariable(name: "pdev", arg: 1, scope: !7171, file: !3, line: 3378, type: !914)
!7173 = !DILocation(line: 3378, column: 45, scope: !7171)
!7174 = !DILocalVariable(name: "cb", arg: 2, scope: !7171, file: !3, line: 3379, type: !5760)
!7175 = !DILocation(line: 3379, column: 20, scope: !7171)
!7176 = !DILocalVariable(name: "base", arg: 3, scope: !7171, file: !3, line: 3379, type: !973)
!7177 = !DILocation(line: 3379, column: 38, scope: !7171)
!7178 = !DILocalVariable(name: "timeout", scope: !7171, file: !3, line: 3381, type: !913)
!7179 = !DILocation(line: 3381, column: 6, scope: !7171)
!7180 = !DILocalVariable(name: "error", scope: !7171, file: !3, line: 3382, type: !165)
!7181 = !DILocation(line: 3382, column: 16, scope: !7171)
!7182 = !DILocalVariable(name: "parm0", scope: !7171, file: !3, line: 3382, type: !165)
!7183 = !DILocation(line: 3382, column: 23, scope: !7171)
!7184 = !DILocalVariable(name: "parm1", scope: !7171, file: !3, line: 3382, type: !165)
!7185 = !DILocation(line: 3382, column: 30, scope: !7171)
!7186 = !DILocation(line: 3384, column: 7, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 3384, column: 6)
!7188 = !DILocation(line: 3384, column: 6, scope: !7171)
!7189 = !DILocation(line: 3385, column: 3, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 3384, column: 50)
!7191 = !DILocation(line: 3387, column: 3, scope: !7190)
!7192 = !DILocation(line: 3389, column: 25, scope: !7171)
!7193 = !DILocation(line: 3389, column: 2, scope: !7171)
!7194 = !DILocation(line: 3390, column: 31, scope: !7171)
!7195 = !DILocation(line: 3390, column: 2, scope: !7171)
!7196 = !DILocation(line: 3391, column: 2, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 3391, column: 2)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !3, line: 3391, column: 2)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !3, line: 3391, column: 2)
!7200 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 3391, column: 2)
!7201 = !DILocation(line: 3392, column: 2, scope: !7171)
!7202 = !DILocation(line: 3392, column: 36, scope: !7171)
!7203 = !DILocation(line: 3392, column: 9, scope: !7171)
!7204 = !DILocation(line: 3392, column: 42, scope: !7171)
!7205 = !DILocation(line: 3393, column: 9, scope: !7171)
!7206 = !DILocation(line: 3393, column: 17, scope: !7171)
!7207 = !DILocation(line: 0, scope: !7171)
!7208 = !DILocation(line: 3394, column: 35, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 3394, column: 7)
!7210 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 3393, column: 41)
!7211 = !DILocation(line: 3394, column: 7, scope: !7209)
!7212 = !DILocation(line: 3395, column: 23, scope: !7209)
!7213 = !DILocation(line: 3396, column: 23, scope: !7209)
!7214 = !DILocation(line: 3396, column: 27, scope: !7209)
!7215 = !DILocation(line: 3396, column: 34, scope: !7209)
!7216 = !DILocation(line: 3396, column: 41, scope: !7209)
!7217 = !DILocation(line: 3396, column: 7, scope: !7209)
!7218 = !DILocation(line: 3394, column: 7, scope: !7210)
!7219 = !DILocation(line: 3397, column: 4, scope: !7209)
!7220 = !DILocation(line: 3398, column: 3, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 3398, column: 3)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 3398, column: 3)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3398, column: 3)
!7224 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 3398, column: 3)
!7225 = !DILocation(line: 3399, column: 10, scope: !7210)
!7226 = distinct !{!7226, !7201, !7227}
!7227 = !DILocation(line: 3400, column: 2, scope: !7171)
!7228 = !DILocation(line: 3401, column: 6, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 3401, column: 6)
!7230 = !DILocation(line: 3401, column: 14, scope: !7229)
!7231 = !DILocation(line: 3401, column: 6, scope: !7171)
!7232 = !DILocation(line: 3402, column: 3, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 3401, column: 39)
!7234 = !DILocation(line: 3404, column: 3, scope: !7233)
!7235 = !DILocation(line: 3406, column: 24, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 3406, column: 6)
!7237 = !DILocation(line: 3406, column: 7, scope: !7236)
!7238 = !DILocation(line: 3406, column: 6, scope: !7171)
!7239 = !DILocation(line: 3407, column: 3, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 3406, column: 35)
!7241 = !DILocation(line: 3409, column: 24, scope: !7240)
!7242 = !DILocation(line: 3409, column: 3, scope: !7240)
!7243 = !DILocation(line: 3410, column: 3, scope: !7240)
!7244 = !DILocation(line: 3412, column: 24, scope: !7171)
!7245 = !DILocation(line: 3412, column: 2, scope: !7171)
!7246 = !DILocation(line: 3413, column: 2, scope: !7171)
!7247 = !DILocation(line: 3413, column: 6, scope: !7171)
!7248 = !DILocation(line: 3413, column: 11, scope: !7171)
!7249 = !DILocation(line: 3414, column: 2, scope: !7171)
!7250 = !DILocation(line: 3414, column: 6, scope: !7171)
!7251 = !DILocation(line: 3414, column: 19, scope: !7171)
!7252 = !DILocation(line: 3415, column: 2, scope: !7171)
!7253 = !DILocation(line: 3415, column: 6, scope: !7171)
!7254 = !DILocation(line: 3415, column: 12, scope: !7171)
!7255 = !DILocation(line: 3417, column: 2, scope: !7171)
!7256 = !DILocation(line: 3418, column: 1, scope: !7171)
!7257 = distinct !DISubprogram(name: "DAC960_P_intr_handler", scope: !3, file: !3, line: 3420, type: !6308, scopeLine: 3421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7258 = !DILocation(line: 407, column: 64, scope: !6561, inlinedAt: !7259)
!7259 = distinct !DILocation(line: 3487, column: 2, scope: !7257)
!7260 = !DILocation(line: 407, column: 84, scope: !6561, inlinedAt: !7259)
!7261 = !DILocation(line: 327, column: 67, scope: !6570, inlinedAt: !7262)
!7262 = distinct !DILocation(line: 3426, column: 2, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 3426, column: 2)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 3426, column: 2)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 3426, column: 2)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 3426, column: 2)
!7267 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 3426, column: 2)
!7268 = !DILocalVariable(name: "irq", arg: 1, scope: !7257, file: !3, line: 3420, type: !913)
!7269 = !DILocation(line: 3420, column: 46, scope: !7257)
!7270 = !DILocalVariable(name: "arg", arg: 2, scope: !7257, file: !3, line: 3420, type: !973)
!7271 = !DILocation(line: 3420, column: 57, scope: !7257)
!7272 = !DILocalVariable(name: "cb", scope: !7257, file: !3, line: 3422, type: !5760)
!7273 = !DILocation(line: 3422, column: 19, scope: !7257)
!7274 = !DILocation(line: 3422, column: 24, scope: !7257)
!7275 = !DILocalVariable(name: "base", scope: !7257, file: !3, line: 3423, type: !973)
!7276 = !DILocation(line: 3423, column: 16, scope: !7257)
!7277 = !DILocation(line: 3423, column: 23, scope: !7257)
!7278 = !DILocation(line: 3423, column: 27, scope: !7257)
!7279 = !DILocalVariable(name: "flags", scope: !7257, file: !3, line: 3424, type: !902)
!7280 = !DILocation(line: 3424, column: 16, scope: !7257)
!7281 = !DILocation(line: 3426, column: 2, scope: !7257)
!7282 = !DILocation(line: 3426, column: 2, scope: !7267)
!7283 = !DILocalVariable(name: "__dummy", scope: !7284, file: !3, line: 3426, type: !902)
!7284 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 3426, column: 2)
!7285 = !DILocation(line: 3426, column: 2, scope: !7284)
!7286 = !DILocalVariable(name: "__dummy2", scope: !7284, file: !3, line: 3426, type: !902)
!7287 = !DILocation(line: 3426, column: 2, scope: !7266)
!7288 = !DILocation(line: 3426, column: 2, scope: !7265)
!7289 = !DILocation(line: 3426, column: 2, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 3426, column: 2)
!7291 = !DILocalVariable(name: "__dummy", scope: !7292, file: !3, line: 3426, type: !902)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 3426, column: 2)
!7293 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 3426, column: 2)
!7294 = !DILocation(line: 3426, column: 2, scope: !7292)
!7295 = !DILocalVariable(name: "__dummy2", scope: !7292, file: !3, line: 3426, type: !902)
!7296 = !DILocation(line: 3426, column: 2, scope: !7293)
!7297 = !DILocation(line: 3426, column: 2, scope: !7264)
!7298 = !{i32 -2140852222}
!7299 = !DILocation(line: 3426, column: 2, scope: !7263)
!7300 = !DILocation(line: 329, column: 10, scope: !6570, inlinedAt: !7262)
!7301 = !DILocation(line: 329, column: 16, scope: !6570, inlinedAt: !7262)
!7302 = !DILocation(line: 3427, column: 2, scope: !7257)
!7303 = !DILocation(line: 3427, column: 44, scope: !7257)
!7304 = !DILocation(line: 3427, column: 9, scope: !7257)
!7305 = !DILocalVariable(name: "id", scope: !7306, file: !3, line: 3428, type: !165)
!7306 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 3427, column: 51)
!7307 = !DILocation(line: 3428, column: 17, scope: !7306)
!7308 = !DILocation(line: 3428, column: 54, scope: !7306)
!7309 = !DILocation(line: 3428, column: 22, scope: !7306)
!7310 = !DILocalVariable(name: "scmd", scope: !7306, file: !3, line: 3429, type: !5962)
!7311 = !DILocation(line: 3429, column: 21, scope: !7306)
!7312 = !DILocalVariable(name: "cmd_blk", scope: !7306, file: !3, line: 3430, type: !6225)
!7313 = !DILocation(line: 3430, column: 23, scope: !7306)
!7314 = !DILocalVariable(name: "mbox", scope: !7306, file: !3, line: 3431, type: !6245)
!7315 = !DILocation(line: 3431, column: 24, scope: !7306)
!7316 = !DILocalVariable(name: "op", scope: !7306, file: !3, line: 3432, type: !163)
!7317 = !DILocation(line: 3432, column: 24, scope: !7306)
!7318 = !DILocation(line: 3435, column: 7, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 3435, column: 7)
!7320 = !DILocation(line: 3435, column: 10, scope: !7319)
!7321 = !DILocation(line: 3435, column: 7, scope: !7306)
!7322 = !DILocation(line: 3436, column: 15, scope: !7319)
!7323 = !DILocation(line: 3436, column: 19, scope: !7319)
!7324 = !DILocation(line: 3436, column: 12, scope: !7319)
!7325 = !DILocation(line: 3436, column: 4, scope: !7319)
!7326 = !DILocation(line: 3437, column: 12, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7319, file: !3, line: 3437, column: 12)
!7328 = !DILocation(line: 3437, column: 15, scope: !7327)
!7329 = !DILocation(line: 3437, column: 12, scope: !7319)
!7330 = !DILocation(line: 3438, column: 15, scope: !7327)
!7331 = !DILocation(line: 3438, column: 19, scope: !7327)
!7332 = !DILocation(line: 3438, column: 12, scope: !7327)
!7333 = !DILocation(line: 3438, column: 4, scope: !7327)
!7334 = !DILocation(line: 3440, column: 30, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 3439, column: 8)
!7336 = !DILocation(line: 3440, column: 34, scope: !7335)
!7337 = !DILocation(line: 3440, column: 40, scope: !7335)
!7338 = !DILocation(line: 3440, column: 43, scope: !7335)
!7339 = !DILocation(line: 3440, column: 11, scope: !7335)
!7340 = !DILocation(line: 3440, column: 9, scope: !7335)
!7341 = !DILocation(line: 3441, column: 8, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 3441, column: 8)
!7343 = !DILocation(line: 3441, column: 8, scope: !7335)
!7344 = !DILocation(line: 3442, column: 29, scope: !7342)
!7345 = !DILocation(line: 3442, column: 15, scope: !7342)
!7346 = !DILocation(line: 3442, column: 13, scope: !7342)
!7347 = !DILocation(line: 3442, column: 5, scope: !7342)
!7348 = !DILocation(line: 3444, column: 7, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 3444, column: 7)
!7350 = !DILocation(line: 3444, column: 7, scope: !7306)
!7351 = !DILocation(line: 3445, column: 44, scope: !7349)
!7352 = !DILocation(line: 3445, column: 22, scope: !7349)
!7353 = !DILocation(line: 3445, column: 4, scope: !7349)
!7354 = !DILocation(line: 3445, column: 13, scope: !7349)
!7355 = !DILocation(line: 3445, column: 20, scope: !7349)
!7356 = !DILocation(line: 3447, column: 4, scope: !7349)
!7357 = !DILocation(line: 3450, column: 22, scope: !7306)
!7358 = !DILocation(line: 3450, column: 3, scope: !7306)
!7359 = !DILocation(line: 3451, column: 32, scope: !7306)
!7360 = !DILocation(line: 3451, column: 3, scope: !7306)
!7361 = !DILocation(line: 3453, column: 8, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 3453, column: 7)
!7363 = !DILocation(line: 3453, column: 7, scope: !7306)
!7364 = !DILocation(line: 3454, column: 4, scope: !7362)
!7365 = distinct !{!7365, !7302, !7366}
!7366 = !DILocation(line: 3486, column: 2, scope: !7257)
!7367 = !DILocation(line: 3456, column: 11, scope: !7306)
!7368 = !DILocation(line: 3456, column: 20, scope: !7306)
!7369 = !DILocation(line: 3456, column: 8, scope: !7306)
!7370 = !DILocation(line: 3457, column: 8, scope: !7306)
!7371 = !DILocation(line: 3457, column: 14, scope: !7306)
!7372 = !DILocation(line: 3457, column: 21, scope: !7306)
!7373 = !DILocation(line: 3457, column: 6, scope: !7306)
!7374 = !DILocation(line: 3458, column: 11, scope: !7306)
!7375 = !DILocation(line: 3458, column: 3, scope: !7306)
!7376 = !DILocation(line: 3460, column: 4, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 3458, column: 15)
!7378 = !DILocation(line: 3460, column: 10, scope: !7377)
!7379 = !DILocation(line: 3460, column: 17, scope: !7377)
!7380 = !DILocation(line: 3460, column: 24, scope: !7377)
!7381 = !DILocation(line: 3461, column: 27, scope: !7377)
!7382 = !DILocation(line: 3461, column: 31, scope: !7377)
!7383 = !DILocation(line: 3461, column: 4, scope: !7377)
!7384 = !DILocation(line: 3462, column: 4, scope: !7377)
!7385 = !DILocation(line: 3464, column: 4, scope: !7377)
!7386 = !DILocation(line: 3464, column: 10, scope: !7377)
!7387 = !DILocation(line: 3464, column: 17, scope: !7377)
!7388 = !DILocation(line: 3464, column: 24, scope: !7377)
!7389 = !DILocation(line: 3465, column: 35, scope: !7377)
!7390 = !DILocation(line: 3465, column: 4, scope: !7377)
!7391 = !DILocation(line: 3466, column: 4, scope: !7377)
!7392 = !DILocation(line: 3468, column: 4, scope: !7377)
!7393 = !DILocation(line: 3468, column: 10, scope: !7377)
!7394 = !DILocation(line: 3468, column: 17, scope: !7377)
!7395 = !DILocation(line: 3468, column: 24, scope: !7377)
!7396 = !DILocation(line: 3469, column: 35, scope: !7377)
!7397 = !DILocation(line: 3469, column: 4, scope: !7377)
!7398 = !DILocation(line: 3470, column: 4, scope: !7377)
!7399 = !DILocation(line: 3472, column: 4, scope: !7377)
!7400 = !DILocation(line: 3472, column: 10, scope: !7377)
!7401 = !DILocation(line: 3472, column: 17, scope: !7377)
!7402 = !DILocation(line: 3472, column: 24, scope: !7377)
!7403 = !DILocation(line: 3473, column: 35, scope: !7377)
!7404 = !DILocation(line: 3473, column: 4, scope: !7377)
!7405 = !DILocation(line: 3474, column: 4, scope: !7377)
!7406 = !DILocation(line: 3476, column: 4, scope: !7377)
!7407 = !DILocation(line: 3476, column: 10, scope: !7377)
!7408 = !DILocation(line: 3476, column: 17, scope: !7377)
!7409 = !DILocation(line: 3476, column: 24, scope: !7377)
!7410 = !DILocation(line: 3477, column: 35, scope: !7377)
!7411 = !DILocation(line: 3477, column: 4, scope: !7377)
!7412 = !DILocation(line: 3478, column: 4, scope: !7377)
!7413 = !DILocation(line: 3480, column: 4, scope: !7377)
!7414 = !DILocation(line: 3482, column: 7, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 3482, column: 7)
!7416 = !DILocation(line: 3482, column: 10, scope: !7415)
!7417 = !DILocation(line: 3482, column: 7, scope: !7306)
!7418 = !DILocation(line: 3483, column: 23, scope: !7415)
!7419 = !DILocation(line: 3483, column: 27, scope: !7415)
!7420 = !DILocation(line: 3483, column: 4, scope: !7415)
!7421 = !DILocation(line: 3485, column: 21, scope: !7415)
!7422 = !DILocation(line: 3485, column: 25, scope: !7415)
!7423 = !DILocation(line: 3485, column: 34, scope: !7415)
!7424 = !DILocation(line: 3485, column: 4, scope: !7415)
!7425 = !DILocation(line: 3487, column: 26, scope: !7257)
!7426 = !DILocation(line: 3487, column: 30, scope: !7257)
!7427 = !DILocation(line: 3487, column: 42, scope: !7257)
!7428 = !DILocation(line: 409, column: 2, scope: !6711, inlinedAt: !7259)
!7429 = !DILocation(line: 409, column: 2, scope: !6716, inlinedAt: !7259)
!7430 = !DILocation(line: 409, column: 2, scope: !6717, inlinedAt: !7259)
!7431 = !DILocation(line: 409, column: 2, scope: !6724, inlinedAt: !7259)
!7432 = !DILocation(line: 409, column: 2, scope: !6727, inlinedAt: !7259)
!7433 = !DILocation(line: 3488, column: 2, scope: !7257)
!7434 = distinct !DISubprogram(name: "myrb_cleanup_module", scope: !3, file: !3, line: 3648, type: !2704, scopeLine: 3649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7435 = !DILocation(line: 3650, column: 2, scope: !7434)
!7436 = !DILocation(line: 3651, column: 21, scope: !7434)
!7437 = !DILocation(line: 3651, column: 2, scope: !7434)
!7438 = !DILocation(line: 3652, column: 1, scope: !7434)
!7439 = distinct !DISubprogram(name: "myrb_init_module", scope: !3, file: !3, line: 3633, type: !7440, scopeLine: 3634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{!913}
!7442 = !DILocalVariable(name: "ret", scope: !7439, file: !3, line: 3635, type: !913)
!7443 = !DILocation(line: 3635, column: 6, scope: !7439)
!7444 = !DILocation(line: 3637, column: 23, scope: !7439)
!7445 = !DILocation(line: 3637, column: 21, scope: !7439)
!7446 = !DILocation(line: 3638, column: 7, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 3638, column: 6)
!7448 = !DILocation(line: 3638, column: 6, scope: !7439)
!7449 = !DILocation(line: 3639, column: 3, scope: !7447)
!7450 = !DILocation(line: 3641, column: 8, scope: !7439)
!7451 = !DILocation(line: 3641, column: 6, scope: !7439)
!7452 = !DILocation(line: 3642, column: 6, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 3642, column: 6)
!7454 = !DILocation(line: 3642, column: 6, scope: !7439)
!7455 = !DILocation(line: 3643, column: 22, scope: !7453)
!7456 = !DILocation(line: 3643, column: 3, scope: !7453)
!7457 = !DILocation(line: 3645, column: 9, scope: !7439)
!7458 = !DILocation(line: 3645, column: 2, scope: !7439)
!7459 = !DILocation(line: 3646, column: 1, scope: !7439)
!7460 = distinct !DISubprogram(name: "DAC960_LA_disable_intr", scope: !3, file: !3, line: 2624, type: !1241, scopeLine: 2625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7461 = !DILocalVariable(name: "base", arg: 1, scope: !7460, file: !3, line: 2624, type: !973)
!7462 = !DILocation(line: 2624, column: 57, scope: !7460)
!7463 = !DILocalVariable(name: "odb", scope: !7460, file: !3, line: 2626, type: !165)
!7464 = !DILocation(line: 2626, column: 16, scope: !7460)
!7465 = !DILocation(line: 2628, column: 6, scope: !7460)
!7466 = !DILocation(line: 2629, column: 9, scope: !7460)
!7467 = !DILocation(line: 2629, column: 14, scope: !7460)
!7468 = !DILocation(line: 2629, column: 19, scope: !7460)
!7469 = !DILocation(line: 2629, column: 2, scope: !7460)
!7470 = !DILocation(line: 2630, column: 1, scope: !7460)
!7471 = distinct !DISubprogram(name: "DAC960_LA_ack_hw_mbox_status", scope: !3, file: !3, line: 2552, type: !1241, scopeLine: 2553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7472 = !DILocalVariable(name: "base", arg: 1, scope: !7471, file: !3, line: 2552, type: !973)
!7473 = !DILocation(line: 2552, column: 63, scope: !7471)
!7474 = !DILocation(line: 2554, column: 39, scope: !7471)
!7475 = !DILocation(line: 2554, column: 44, scope: !7471)
!7476 = !DILocation(line: 2554, column: 2, scope: !7471)
!7477 = !DILocation(line: 2555, column: 1, scope: !7471)
!7478 = distinct !DISubprogram(name: "DAC960_LA_init_in_progress", scope: !3, file: !3, line: 2579, type: !7479, scopeLine: 2580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7479 = !DISubroutineType(types: !7480)
!7480 = !{!1262, !973}
!7481 = !DILocalVariable(name: "base", arg: 1, scope: !7478, file: !3, line: 2579, type: !973)
!7482 = !DILocation(line: 2579, column: 61, scope: !7478)
!7483 = !DILocalVariable(name: "idb", scope: !7478, file: !3, line: 2581, type: !165)
!7484 = !DILocation(line: 2581, column: 16, scope: !7478)
!7485 = !DILocation(line: 2581, column: 28, scope: !7478)
!7486 = !DILocation(line: 2581, column: 33, scope: !7478)
!7487 = !DILocation(line: 2581, column: 22, scope: !7478)
!7488 = !DILocation(line: 2583, column: 11, scope: !7478)
!7489 = !DILocation(line: 2583, column: 15, scope: !7478)
!7490 = !DILocation(line: 2583, column: 9, scope: !7478)
!7491 = !DILocation(line: 2583, column: 2, scope: !7478)
!7492 = distinct !DISubprogram(name: "DAC960_LA_read_error_status", scope: !3, file: !3, line: 2672, type: !7493, scopeLine: 2674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{!1262, !973, !5840, !5840, !5840}
!7495 = !DILocalVariable(name: "base", arg: 1, scope: !7492, file: !3, line: 2672, type: !973)
!7496 = !DILocation(line: 2672, column: 43, scope: !7492)
!7497 = !DILocalVariable(name: "error", arg: 2, scope: !7492, file: !3, line: 2672, type: !5840)
!7498 = !DILocation(line: 2672, column: 64, scope: !7492)
!7499 = !DILocalVariable(name: "param0", arg: 3, scope: !7492, file: !3, line: 2673, type: !5840)
!7500 = !DILocation(line: 2673, column: 18, scope: !7492)
!7501 = !DILocalVariable(name: "param1", arg: 4, scope: !7492, file: !3, line: 2673, type: !5840)
!7502 = !DILocation(line: 2673, column: 41, scope: !7492)
!7503 = !DILocalVariable(name: "errsts", scope: !7492, file: !3, line: 2675, type: !165)
!7504 = !DILocation(line: 2675, column: 16, scope: !7492)
!7505 = !DILocation(line: 2675, column: 31, scope: !7492)
!7506 = !DILocation(line: 2675, column: 36, scope: !7492)
!7507 = !DILocation(line: 2675, column: 25, scope: !7492)
!7508 = !DILocation(line: 2677, column: 8, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 2677, column: 6)
!7510 = !DILocation(line: 2677, column: 15, scope: !7509)
!7511 = !DILocation(line: 2677, column: 6, scope: !7492)
!7512 = !DILocation(line: 2678, column: 3, scope: !7509)
!7513 = !DILocation(line: 2679, column: 9, scope: !7492)
!7514 = !DILocation(line: 2681, column: 11, scope: !7492)
!7515 = !DILocation(line: 2681, column: 3, scope: !7492)
!7516 = !DILocation(line: 2681, column: 9, scope: !7492)
!7517 = !DILocation(line: 2682, column: 18, scope: !7492)
!7518 = !DILocation(line: 2682, column: 23, scope: !7492)
!7519 = !DILocation(line: 2682, column: 12, scope: !7492)
!7520 = !DILocation(line: 2682, column: 3, scope: !7492)
!7521 = !DILocation(line: 2682, column: 10, scope: !7492)
!7522 = !DILocation(line: 2683, column: 18, scope: !7492)
!7523 = !DILocation(line: 2683, column: 23, scope: !7492)
!7524 = !DILocation(line: 2683, column: 12, scope: !7492)
!7525 = !DILocation(line: 2683, column: 3, scope: !7492)
!7526 = !DILocation(line: 2683, column: 10, scope: !7492)
!7527 = !DILocation(line: 2684, column: 15, scope: !7492)
!7528 = !DILocation(line: 2684, column: 20, scope: !7492)
!7529 = !DILocation(line: 2684, column: 2, scope: !7492)
!7530 = !DILocation(line: 2685, column: 2, scope: !7492)
!7531 = !DILocation(line: 2686, column: 1, scope: !7492)
!7532 = distinct !DISubprogram(name: "myrb_err_status", scope: !3, file: !3, line: 2492, type: !7533, scopeLine: 2494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7533 = !DISubroutineType(types: !7534)
!7534 = !{!1262, !5760, !165, !165, !165}
!7535 = !DILocalVariable(name: "cb", arg: 1, scope: !7532, file: !3, line: 2492, type: !5760)
!7536 = !DILocation(line: 2492, column: 46, scope: !7532)
!7537 = !DILocalVariable(name: "error", arg: 2, scope: !7532, file: !3, line: 2492, type: !165)
!7538 = !DILocation(line: 2492, column: 64, scope: !7532)
!7539 = !DILocalVariable(name: "parm0", arg: 3, scope: !7532, file: !3, line: 2493, type: !165)
!7540 = !DILocation(line: 2493, column: 17, scope: !7532)
!7541 = !DILocalVariable(name: "parm1", arg: 4, scope: !7532, file: !3, line: 2493, type: !165)
!7542 = !DILocation(line: 2493, column: 38, scope: !7532)
!7543 = !DILocalVariable(name: "pdev", scope: !7532, file: !3, line: 2495, type: !914)
!7544 = !DILocation(line: 2495, column: 18, scope: !7532)
!7545 = !DILocation(line: 2495, column: 25, scope: !7532)
!7546 = !DILocation(line: 2495, column: 29, scope: !7532)
!7547 = !DILocation(line: 2497, column: 10, scope: !7532)
!7548 = !DILocation(line: 2497, column: 2, scope: !7532)
!7549 = !DILocation(line: 2499, column: 3, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 2497, column: 17)
!7551 = !DILocation(line: 2502, column: 3, scope: !7550)
!7552 = !DILocation(line: 2504, column: 3, scope: !7550)
!7553 = !DILocation(line: 2505, column: 3, scope: !7550)
!7554 = !DILocation(line: 2507, column: 3, scope: !7550)
!7555 = !DILocation(line: 2508, column: 3, scope: !7550)
!7556 = !DILocation(line: 2510, column: 3, scope: !7550)
!7557 = !DILocation(line: 2511, column: 3, scope: !7550)
!7558 = !DILocation(line: 2513, column: 3, scope: !7550)
!7559 = !DILocation(line: 2514, column: 3, scope: !7550)
!7560 = !DILocation(line: 2516, column: 3, scope: !7550)
!7561 = !DILocation(line: 2518, column: 3, scope: !7550)
!7562 = !DILocation(line: 2520, column: 3, scope: !7550)
!7563 = !DILocation(line: 2521, column: 3, scope: !7550)
!7564 = !DILocation(line: 2523, column: 3, scope: !7550)
!7565 = !DILocation(line: 2524, column: 3, scope: !7550)
!7566 = !DILocation(line: 2526, column: 3, scope: !7550)
!7567 = !DILocation(line: 2527, column: 3, scope: !7550)
!7568 = !DILocation(line: 2529, column: 3, scope: !7550)
!7569 = !DILocation(line: 2530, column: 3, scope: !7550)
!7570 = !DILocation(line: 2532, column: 3, scope: !7550)
!7571 = !DILocation(line: 2534, column: 3, scope: !7550)
!7572 = !DILocation(line: 2536, column: 2, scope: !7532)
!7573 = !DILocation(line: 2537, column: 1, scope: !7532)
!7574 = distinct !DISubprogram(name: "myrb_enable_mmio", scope: !3, file: !3, line: 808, type: !7575, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7575 = !DISubroutineType(types: !7576)
!7576 = !{!1262, !5760, !7577}
!7577 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbox_mmio_init_t", file: !164, line: 948, baseType: !7578)
!7578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7579, size: 64)
!7579 = !DISubroutineType(types: !7580)
!7580 = !{!320, !914, !973, !6245}
!7581 = !DILocalVariable(name: "cb", arg: 1, scope: !7574, file: !3, line: 808, type: !5760)
!7582 = !DILocation(line: 808, column: 47, scope: !7574)
!7583 = !DILocalVariable(name: "mmio_init_fn", arg: 2, scope: !7574, file: !3, line: 808, type: !7577)
!7584 = !DILocation(line: 808, column: 68, scope: !7574)
!7585 = !DILocalVariable(name: "base", scope: !7574, file: !3, line: 810, type: !973)
!7586 = !DILocation(line: 810, column: 16, scope: !7574)
!7587 = !DILocation(line: 810, column: 23, scope: !7574)
!7588 = !DILocation(line: 810, column: 27, scope: !7574)
!7589 = !DILocalVariable(name: "pdev", scope: !7574, file: !3, line: 811, type: !914)
!7590 = !DILocation(line: 811, column: 18, scope: !7574)
!7591 = !DILocation(line: 811, column: 25, scope: !7574)
!7592 = !DILocation(line: 811, column: 29, scope: !7574)
!7593 = !DILocalVariable(name: "err_table_size", scope: !7574, file: !3, line: 812, type: !1102)
!7594 = !DILocation(line: 812, column: 9, scope: !7574)
!7595 = !DILocalVariable(name: "ldev_info_size", scope: !7574, file: !3, line: 813, type: !1102)
!7596 = !DILocation(line: 813, column: 9, scope: !7574)
!7597 = !DILocalVariable(name: "cmd_mbox_mem", scope: !7574, file: !3, line: 814, type: !6245)
!7598 = !DILocation(line: 814, column: 23, scope: !7574)
!7599 = !DILocalVariable(name: "stat_mbox_mem", scope: !7574, file: !3, line: 815, type: !6268)
!7600 = !DILocation(line: 815, column: 25, scope: !7574)
!7601 = !DILocalVariable(name: "mbox", scope: !7574, file: !3, line: 816, type: !239)
!7602 = !DILocation(line: 816, column: 22, scope: !7574)
!7603 = !DILocalVariable(name: "status", scope: !7574, file: !3, line: 817, type: !320)
!7604 = !DILocation(line: 817, column: 17, scope: !7574)
!7605 = !DILocation(line: 819, column: 2, scope: !7574)
!7606 = !DILocation(line: 821, column: 20, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 821, column: 6)
!7608 = !DILocation(line: 821, column: 26, scope: !7607)
!7609 = !DILocation(line: 821, column: 6, scope: !7607)
!7610 = !DILocation(line: 821, column: 6, scope: !7574)
!7611 = !DILocation(line: 822, column: 3, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 821, column: 50)
!7613 = !DILocation(line: 823, column: 3, scope: !7612)
!7614 = !DILocation(line: 826, column: 36, scope: !7574)
!7615 = !DILocation(line: 826, column: 42, scope: !7574)
!7616 = !DILocation(line: 828, column: 8, scope: !7574)
!7617 = !DILocation(line: 828, column: 12, scope: !7574)
!7618 = !DILocation(line: 826, column: 16, scope: !7574)
!7619 = !DILocation(line: 826, column: 2, scope: !7574)
!7620 = !DILocation(line: 826, column: 6, scope: !7574)
!7621 = !DILocation(line: 826, column: 14, scope: !7574)
!7622 = !DILocation(line: 829, column: 7, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 829, column: 6)
!7624 = !DILocation(line: 829, column: 11, scope: !7623)
!7625 = !DILocation(line: 829, column: 6, scope: !7574)
!7626 = !DILocation(line: 830, column: 3, scope: !7623)
!7627 = !DILocation(line: 832, column: 17, scope: !7574)
!7628 = !DILocation(line: 834, column: 38, scope: !7574)
!7629 = !DILocation(line: 834, column: 44, scope: !7574)
!7630 = !DILocation(line: 834, column: 49, scope: !7574)
!7631 = !DILocation(line: 835, column: 10, scope: !7574)
!7632 = !DILocation(line: 835, column: 14, scope: !7574)
!7633 = !DILocation(line: 834, column: 18, scope: !7574)
!7634 = !DILocation(line: 834, column: 2, scope: !7574)
!7635 = !DILocation(line: 834, column: 6, scope: !7574)
!7636 = !DILocation(line: 834, column: 16, scope: !7574)
!7637 = !DILocation(line: 836, column: 7, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 836, column: 6)
!7639 = !DILocation(line: 836, column: 11, scope: !7638)
!7640 = !DILocation(line: 836, column: 6, scope: !7574)
!7641 = !DILocation(line: 837, column: 3, scope: !7638)
!7642 = !DILocation(line: 839, column: 17, scope: !7574)
!7643 = !DILocation(line: 840, column: 42, scope: !7574)
!7644 = !DILocation(line: 840, column: 48, scope: !7574)
!7645 = !DILocation(line: 840, column: 53, scope: !7574)
!7646 = !DILocation(line: 841, column: 14, scope: !7574)
!7647 = !DILocation(line: 841, column: 18, scope: !7574)
!7648 = !DILocation(line: 840, column: 22, scope: !7574)
!7649 = !DILocation(line: 840, column: 2, scope: !7574)
!7650 = !DILocation(line: 840, column: 6, scope: !7574)
!7651 = !DILocation(line: 840, column: 20, scope: !7574)
!7652 = !DILocation(line: 842, column: 7, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 842, column: 6)
!7654 = !DILocation(line: 842, column: 11, scope: !7653)
!7655 = !DILocation(line: 842, column: 6, scope: !7574)
!7656 = !DILocation(line: 843, column: 3, scope: !7653)
!7657 = !DILocation(line: 848, column: 7, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 848, column: 6)
!7659 = !DILocation(line: 848, column: 6, scope: !7574)
!7660 = !DILocation(line: 849, column: 3, scope: !7658)
!7661 = !DILocation(line: 852, column: 2, scope: !7574)
!7662 = !DILocation(line: 852, column: 6, scope: !7574)
!7663 = !DILocation(line: 852, column: 20, scope: !7574)
!7664 = !DILocation(line: 853, column: 43, scope: !7574)
!7665 = !DILocation(line: 853, column: 49, scope: !7574)
!7666 = !DILocation(line: 854, column: 7, scope: !7574)
!7667 = !DILocation(line: 854, column: 11, scope: !7574)
!7668 = !DILocation(line: 855, column: 8, scope: !7574)
!7669 = !DILocation(line: 855, column: 12, scope: !7574)
!7670 = !DILocation(line: 853, column: 23, scope: !7574)
!7671 = !DILocation(line: 853, column: 2, scope: !7574)
!7672 = !DILocation(line: 853, column: 6, scope: !7574)
!7673 = !DILocation(line: 853, column: 21, scope: !7574)
!7674 = !DILocation(line: 857, column: 7, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 857, column: 6)
!7676 = !DILocation(line: 857, column: 11, scope: !7675)
!7677 = !DILocation(line: 857, column: 6, scope: !7574)
!7678 = !DILocation(line: 858, column: 3, scope: !7675)
!7679 = !DILocation(line: 860, column: 17, scope: !7574)
!7680 = !DILocation(line: 860, column: 21, scope: !7574)
!7681 = !DILocation(line: 860, column: 15, scope: !7574)
!7682 = !DILocation(line: 861, column: 15, scope: !7574)
!7683 = !DILocation(line: 862, column: 22, scope: !7574)
!7684 = !DILocation(line: 862, column: 2, scope: !7574)
!7685 = !DILocation(line: 862, column: 6, scope: !7574)
!7686 = !DILocation(line: 862, column: 20, scope: !7574)
!7687 = !DILocation(line: 863, column: 22, scope: !7574)
!7688 = !DILocation(line: 863, column: 26, scope: !7574)
!7689 = !DILocation(line: 863, column: 2, scope: !7574)
!7690 = !DILocation(line: 863, column: 6, scope: !7574)
!7691 = !DILocation(line: 863, column: 20, scope: !7574)
!7692 = !DILocation(line: 864, column: 23, scope: !7574)
!7693 = !DILocation(line: 864, column: 27, scope: !7574)
!7694 = !DILocation(line: 864, column: 2, scope: !7574)
!7695 = !DILocation(line: 864, column: 6, scope: !7574)
!7696 = !DILocation(line: 864, column: 21, scope: !7574)
!7697 = !DILocation(line: 865, column: 23, scope: !7574)
!7698 = !DILocation(line: 865, column: 27, scope: !7574)
!7699 = !DILocation(line: 865, column: 41, scope: !7574)
!7700 = !DILocation(line: 865, column: 2, scope: !7574)
!7701 = !DILocation(line: 865, column: 6, scope: !7574)
!7702 = !DILocation(line: 865, column: 21, scope: !7574)
!7703 = !DILocation(line: 868, column: 2, scope: !7574)
!7704 = !DILocation(line: 868, column: 6, scope: !7574)
!7705 = !DILocation(line: 868, column: 21, scope: !7574)
!7706 = !DILocation(line: 870, column: 44, scope: !7574)
!7707 = !DILocation(line: 870, column: 50, scope: !7574)
!7708 = !DILocation(line: 871, column: 8, scope: !7574)
!7709 = !DILocation(line: 871, column: 12, scope: !7574)
!7710 = !DILocation(line: 872, column: 9, scope: !7574)
!7711 = !DILocation(line: 872, column: 13, scope: !7574)
!7712 = !DILocation(line: 870, column: 24, scope: !7574)
!7713 = !DILocation(line: 870, column: 2, scope: !7574)
!7714 = !DILocation(line: 870, column: 6, scope: !7574)
!7715 = !DILocation(line: 870, column: 22, scope: !7574)
!7716 = !DILocation(line: 874, column: 7, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 874, column: 6)
!7718 = !DILocation(line: 874, column: 11, scope: !7717)
!7719 = !DILocation(line: 874, column: 6, scope: !7574)
!7720 = !DILocation(line: 875, column: 3, scope: !7717)
!7721 = !DILocation(line: 877, column: 18, scope: !7574)
!7722 = !DILocation(line: 877, column: 22, scope: !7574)
!7723 = !DILocation(line: 877, column: 16, scope: !7574)
!7724 = !DILocation(line: 878, column: 16, scope: !7574)
!7725 = !DILocation(line: 879, column: 23, scope: !7574)
!7726 = !DILocation(line: 879, column: 2, scope: !7574)
!7727 = !DILocation(line: 879, column: 6, scope: !7574)
!7728 = !DILocation(line: 879, column: 21, scope: !7574)
!7729 = !DILocation(line: 880, column: 23, scope: !7574)
!7730 = !DILocation(line: 880, column: 27, scope: !7574)
!7731 = !DILocation(line: 880, column: 2, scope: !7574)
!7732 = !DILocation(line: 880, column: 6, scope: !7574)
!7733 = !DILocation(line: 880, column: 21, scope: !7574)
!7734 = !DILocation(line: 883, column: 2, scope: !7574)
!7735 = !DILocation(line: 883, column: 6, scope: !7574)
!7736 = !DILocation(line: 883, column: 26, scope: !7574)
!7737 = !DILocation(line: 884, column: 7, scope: !7574)
!7738 = !DILocation(line: 884, column: 13, scope: !7574)
!7739 = !DILocation(line: 884, column: 20, scope: !7574)
!7740 = !DILocation(line: 885, column: 7, scope: !7574)
!7741 = !DILocation(line: 885, column: 13, scope: !7574)
!7742 = !DILocation(line: 885, column: 16, scope: !7574)
!7743 = !DILocation(line: 886, column: 7, scope: !7574)
!7744 = !DILocation(line: 886, column: 13, scope: !7574)
!7745 = !DILocation(line: 886, column: 21, scope: !7574)
!7746 = !DILocation(line: 887, column: 29, scope: !7574)
!7747 = !DILocation(line: 887, column: 33, scope: !7574)
!7748 = !DILocation(line: 887, column: 7, scope: !7574)
!7749 = !DILocation(line: 887, column: 13, scope: !7574)
!7750 = !DILocation(line: 887, column: 27, scope: !7574)
!7751 = !DILocation(line: 888, column: 30, scope: !7574)
!7752 = !DILocation(line: 888, column: 34, scope: !7574)
!7753 = !DILocation(line: 888, column: 7, scope: !7574)
!7754 = !DILocation(line: 888, column: 13, scope: !7574)
!7755 = !DILocation(line: 888, column: 28, scope: !7574)
!7756 = !DILocation(line: 890, column: 11, scope: !7574)
!7757 = !DILocation(line: 890, column: 24, scope: !7574)
!7758 = !DILocation(line: 890, column: 30, scope: !7574)
!7759 = !DILocation(line: 890, column: 9, scope: !7574)
!7760 = !DILocation(line: 891, column: 6, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 891, column: 6)
!7762 = !DILocation(line: 891, column: 13, scope: !7761)
!7763 = !DILocation(line: 891, column: 6, scope: !7574)
!7764 = !DILocation(line: 892, column: 3, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 891, column: 37)
!7766 = !DILocation(line: 892, column: 7, scope: !7765)
!7767 = !DILocation(line: 892, column: 27, scope: !7765)
!7768 = !DILocation(line: 893, column: 8, scope: !7765)
!7769 = !DILocation(line: 893, column: 14, scope: !7765)
!7770 = !DILocation(line: 893, column: 22, scope: !7765)
!7771 = !DILocation(line: 894, column: 12, scope: !7765)
!7772 = !DILocation(line: 894, column: 25, scope: !7765)
!7773 = !DILocation(line: 894, column: 31, scope: !7765)
!7774 = !DILocation(line: 894, column: 10, scope: !7765)
!7775 = !DILocation(line: 895, column: 7, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 895, column: 7)
!7777 = !DILocation(line: 895, column: 14, scope: !7776)
!7778 = !DILocation(line: 895, column: 7, scope: !7765)
!7779 = !DILocation(line: 896, column: 4, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 895, column: 38)
!7781 = !DILocation(line: 899, column: 4, scope: !7780)
!7782 = !DILocation(line: 901, column: 2, scope: !7765)
!7783 = !DILocation(line: 902, column: 2, scope: !7574)
!7784 = !DILocation(line: 903, column: 1, scope: !7574)
!7785 = distinct !DISubprogram(name: "DAC960_LA_mbox_init", scope: !3, file: !3, line: 2689, type: !7579, scopeLine: 2691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7786 = !DILocalVariable(name: "pdev", arg: 1, scope: !7785, file: !3, line: 2689, type: !914)
!7787 = !DILocation(line: 2689, column: 37, scope: !7785)
!7788 = !DILocalVariable(name: "base", arg: 2, scope: !7785, file: !3, line: 2689, type: !973)
!7789 = !DILocation(line: 2689, column: 57, scope: !7785)
!7790 = !DILocalVariable(name: "mbox", arg: 3, scope: !7785, file: !3, line: 2690, type: !6245)
!7791 = !DILocation(line: 2690, column: 24, scope: !7785)
!7792 = !DILocalVariable(name: "status", scope: !7785, file: !3, line: 2692, type: !320)
!7793 = !DILocation(line: 2692, column: 17, scope: !7785)
!7794 = !DILocalVariable(name: "timeout", scope: !7785, file: !3, line: 2693, type: !913)
!7795 = !DILocation(line: 2693, column: 6, scope: !7785)
!7796 = !DILocation(line: 2695, column: 2, scope: !7785)
!7797 = !DILocation(line: 2695, column: 9, scope: !7785)
!7798 = !DILocation(line: 2695, column: 17, scope: !7785)
!7799 = !DILocation(line: 2696, column: 34, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 2696, column: 7)
!7801 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2695, column: 41)
!7802 = !DILocation(line: 2696, column: 8, scope: !7800)
!7803 = !DILocation(line: 2696, column: 7, scope: !7801)
!7804 = !DILocation(line: 2697, column: 4, scope: !7800)
!7805 = !DILocation(line: 2698, column: 3, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 2698, column: 3)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 2698, column: 3)
!7808 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 2698, column: 3)
!7809 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 2698, column: 3)
!7810 = !DILocation(line: 2699, column: 10, scope: !7801)
!7811 = distinct !{!7811, !7796, !7812}
!7812 = !DILocation(line: 2700, column: 2, scope: !7785)
!7813 = !DILocation(line: 2701, column: 32, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2701, column: 6)
!7815 = !DILocation(line: 2701, column: 6, scope: !7814)
!7816 = !DILocation(line: 2701, column: 6, scope: !7785)
!7817 = !DILocation(line: 2702, column: 3, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2701, column: 39)
!7819 = !DILocation(line: 2704, column: 3, scope: !7818)
!7820 = !DILocation(line: 2706, column: 26, scope: !7785)
!7821 = !DILocation(line: 2706, column: 32, scope: !7785)
!7822 = !DILocation(line: 2706, column: 2, scope: !7785)
!7823 = !DILocation(line: 2707, column: 28, scope: !7785)
!7824 = !DILocation(line: 2707, column: 2, scope: !7785)
!7825 = !DILocation(line: 2708, column: 10, scope: !7785)
!7826 = !DILocation(line: 2709, column: 2, scope: !7785)
!7827 = !DILocation(line: 2709, column: 9, scope: !7785)
!7828 = !DILocation(line: 2709, column: 17, scope: !7785)
!7829 = !DILocation(line: 2710, column: 42, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2710, column: 7)
!7831 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2709, column: 41)
!7832 = !DILocation(line: 2710, column: 7, scope: !7830)
!7833 = !DILocation(line: 2710, column: 7, scope: !7831)
!7834 = !DILocation(line: 2711, column: 4, scope: !7830)
!7835 = !DILocation(line: 2712, column: 3, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 2712, column: 3)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 2712, column: 3)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 2712, column: 3)
!7839 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2712, column: 3)
!7840 = !DILocation(line: 2713, column: 10, scope: !7831)
!7841 = distinct !{!7841, !7826, !7842}
!7842 = !DILocation(line: 2714, column: 2, scope: !7785)
!7843 = !DILocation(line: 2715, column: 42, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2715, column: 6)
!7845 = !DILocation(line: 2715, column: 7, scope: !7844)
!7846 = !DILocation(line: 2715, column: 6, scope: !7785)
!7847 = !DILocation(line: 2716, column: 3, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 2715, column: 49)
!7849 = !DILocation(line: 2717, column: 3, scope: !7848)
!7850 = !DILocation(line: 2719, column: 33, scope: !7785)
!7851 = !DILocation(line: 2719, column: 11, scope: !7785)
!7852 = !DILocation(line: 2719, column: 9, scope: !7785)
!7853 = !DILocation(line: 2720, column: 29, scope: !7785)
!7854 = !DILocation(line: 2720, column: 2, scope: !7785)
!7855 = !DILocation(line: 2721, column: 31, scope: !7785)
!7856 = !DILocation(line: 2721, column: 2, scope: !7785)
!7857 = !DILocation(line: 2723, column: 9, scope: !7785)
!7858 = !DILocation(line: 2723, column: 2, scope: !7785)
!7859 = !DILocation(line: 2724, column: 1, scope: !7785)
!7860 = distinct !DISubprogram(name: "DAC960_LA_reset_ctrl", scope: !3, file: !3, line: 2562, type: !1241, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7861 = !DILocalVariable(name: "base", arg: 1, scope: !7860, file: !3, line: 2562, type: !973)
!7862 = !DILocation(line: 2562, column: 55, scope: !7860)
!7863 = !DILocation(line: 2564, column: 35, scope: !7860)
!7864 = !DILocation(line: 2564, column: 40, scope: !7860)
!7865 = !DILocation(line: 2564, column: 2, scope: !7860)
!7866 = !DILocation(line: 2565, column: 1, scope: !7860)
!7867 = distinct !DISubprogram(name: "DAC960_LA_enable_intr", scope: !3, file: !3, line: 2616, type: !1241, scopeLine: 2617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7868 = !DILocalVariable(name: "base", arg: 1, scope: !7867, file: !3, line: 2616, type: !973)
!7869 = !DILocation(line: 2616, column: 56, scope: !7867)
!7870 = !DILocalVariable(name: "odb", scope: !7867, file: !3, line: 2618, type: !165)
!7871 = !DILocation(line: 2618, column: 16, scope: !7867)
!7872 = !DILocation(line: 2620, column: 6, scope: !7867)
!7873 = !DILocation(line: 2621, column: 9, scope: !7867)
!7874 = !DILocation(line: 2621, column: 14, scope: !7867)
!7875 = !DILocation(line: 2621, column: 19, scope: !7867)
!7876 = !DILocation(line: 2621, column: 2, scope: !7867)
!7877 = !DILocation(line: 2622, column: 1, scope: !7867)
!7878 = distinct !DISubprogram(name: "myrb_qcmd", scope: !3, file: !3, line: 163, type: !6223, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7879 = !DILocalVariable(name: "cb", arg: 1, scope: !7878, file: !3, line: 163, type: !5760)
!7880 = !DILocation(line: 163, column: 40, scope: !7878)
!7881 = !DILocalVariable(name: "cmd_blk", arg: 2, scope: !7878, file: !3, line: 163, type: !6225)
!7882 = !DILocation(line: 163, column: 64, scope: !7878)
!7883 = !DILocalVariable(name: "base", scope: !7878, file: !3, line: 165, type: !973)
!7884 = !DILocation(line: 165, column: 16, scope: !7878)
!7885 = !DILocation(line: 165, column: 23, scope: !7878)
!7886 = !DILocation(line: 165, column: 27, scope: !7878)
!7887 = !DILocalVariable(name: "mbox", scope: !7878, file: !3, line: 166, type: !6245)
!7888 = !DILocation(line: 166, column: 23, scope: !7878)
!7889 = !DILocation(line: 166, column: 31, scope: !7878)
!7890 = !DILocation(line: 166, column: 40, scope: !7878)
!7891 = !DILocalVariable(name: "next_mbox", scope: !7878, file: !3, line: 167, type: !6245)
!7892 = !DILocation(line: 167, column: 23, scope: !7878)
!7893 = !DILocation(line: 167, column: 35, scope: !7878)
!7894 = !DILocation(line: 167, column: 39, scope: !7878)
!7895 = !DILocation(line: 169, column: 2, scope: !7878)
!7896 = !DILocation(line: 169, column: 6, scope: !7878)
!7897 = !DILocation(line: 169, column: 21, scope: !7878)
!7898 = !DILocation(line: 169, column: 32, scope: !7878)
!7899 = !DILocation(line: 170, column: 6, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 170, column: 6)
!7901 = !DILocation(line: 170, column: 10, scope: !7900)
!7902 = !DILocation(line: 170, column: 26, scope: !7900)
!7903 = !DILocation(line: 170, column: 35, scope: !7900)
!7904 = !DILocation(line: 170, column: 40, scope: !7900)
!7905 = !DILocation(line: 171, column: 6, scope: !7900)
!7906 = !DILocation(line: 171, column: 10, scope: !7900)
!7907 = !DILocation(line: 171, column: 26, scope: !7900)
!7908 = !DILocation(line: 171, column: 35, scope: !7900)
!7909 = !DILocation(line: 170, column: 6, scope: !7878)
!7910 = !DILocation(line: 172, column: 3, scope: !7900)
!7911 = !DILocation(line: 172, column: 7, scope: !7900)
!7912 = !DILocation(line: 172, column: 20, scope: !7900)
!7913 = !DILocation(line: 173, column: 23, scope: !7878)
!7914 = !DILocation(line: 173, column: 27, scope: !7878)
!7915 = !DILocation(line: 173, column: 2, scope: !7878)
!7916 = !DILocation(line: 173, column: 6, scope: !7878)
!7917 = !DILocation(line: 173, column: 21, scope: !7878)
!7918 = !DILocation(line: 174, column: 23, scope: !7878)
!7919 = !DILocation(line: 174, column: 2, scope: !7878)
!7920 = !DILocation(line: 174, column: 6, scope: !7878)
!7921 = !DILocation(line: 174, column: 21, scope: !7878)
!7922 = !DILocation(line: 175, column: 6, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 175, column: 6)
!7924 = !DILocation(line: 175, column: 20, scope: !7923)
!7925 = !DILocation(line: 175, column: 24, scope: !7923)
!7926 = !DILocation(line: 175, column: 18, scope: !7923)
!7927 = !DILocation(line: 175, column: 6, scope: !7878)
!7928 = !DILocation(line: 176, column: 15, scope: !7923)
!7929 = !DILocation(line: 176, column: 19, scope: !7923)
!7930 = !DILocation(line: 176, column: 13, scope: !7923)
!7931 = !DILocation(line: 176, column: 3, scope: !7923)
!7932 = !DILocation(line: 177, column: 22, scope: !7878)
!7933 = !DILocation(line: 177, column: 2, scope: !7878)
!7934 = !DILocation(line: 177, column: 6, scope: !7878)
!7935 = !DILocation(line: 177, column: 20, scope: !7878)
!7936 = !DILocation(line: 178, column: 1, scope: !7878)
!7937 = distinct !DISubprogram(name: "DAC960_LA_write_cmd_mbox", scope: !3, file: !3, line: 2639, type: !6243, scopeLine: 2641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7938 = !DILocalVariable(name: "mem_mbox", arg: 1, scope: !7937, file: !3, line: 2639, type: !6245)
!7939 = !DILocation(line: 2639, column: 66, scope: !7937)
!7940 = !DILocalVariable(name: "mbox", arg: 2, scope: !7937, file: !3, line: 2640, type: !6245)
!7941 = !DILocation(line: 2640, column: 24, scope: !7937)
!7942 = !DILocation(line: 2642, column: 23, scope: !7937)
!7943 = !DILocation(line: 2642, column: 29, scope: !7937)
!7944 = !DILocation(line: 2642, column: 2, scope: !7937)
!7945 = !DILocation(line: 2642, column: 12, scope: !7937)
!7946 = !DILocation(line: 2642, column: 21, scope: !7937)
!7947 = !DILocation(line: 2643, column: 23, scope: !7937)
!7948 = !DILocation(line: 2643, column: 29, scope: !7937)
!7949 = !DILocation(line: 2643, column: 2, scope: !7937)
!7950 = !DILocation(line: 2643, column: 12, scope: !7937)
!7951 = !DILocation(line: 2643, column: 21, scope: !7937)
!7952 = !DILocation(line: 2644, column: 23, scope: !7937)
!7953 = !DILocation(line: 2644, column: 29, scope: !7937)
!7954 = !DILocation(line: 2644, column: 2, scope: !7937)
!7955 = !DILocation(line: 2644, column: 12, scope: !7937)
!7956 = !DILocation(line: 2644, column: 21, scope: !7937)
!7957 = !DILocation(line: 2646, column: 2, scope: !7937)
!7958 = !{i32 -2140870443}
!7959 = !DILocation(line: 2647, column: 23, scope: !7937)
!7960 = !DILocation(line: 2647, column: 29, scope: !7937)
!7961 = !DILocation(line: 2647, column: 2, scope: !7937)
!7962 = !DILocation(line: 2647, column: 12, scope: !7937)
!7963 = !DILocation(line: 2647, column: 21, scope: !7937)
!7964 = !DILocation(line: 2649, column: 2, scope: !7937)
!7965 = !{i32 -2140870407}
!7966 = !DILocation(line: 2650, column: 1, scope: !7937)
!7967 = distinct !DISubprogram(name: "DAC960_LA_mem_mbox_new_cmd", scope: !3, file: !3, line: 2567, type: !1241, scopeLine: 2568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7968 = !DILocalVariable(name: "base", arg: 1, scope: !7967, file: !3, line: 2567, type: !973)
!7969 = !DILocation(line: 2567, column: 61, scope: !7967)
!7970 = !DILocation(line: 2569, column: 38, scope: !7967)
!7971 = !DILocation(line: 2569, column: 43, scope: !7967)
!7972 = !DILocation(line: 2569, column: 2, scope: !7967)
!7973 = !DILocation(line: 2570, column: 1, scope: !7967)
!7974 = distinct !DISubprogram(name: "DAC960_LA_hw_mbox_new_cmd", scope: !3, file: !3, line: 2547, type: !1241, scopeLine: 2548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7975 = !DILocalVariable(name: "base", arg: 1, scope: !7974, file: !3, line: 2547, type: !973)
!7976 = !DILocation(line: 2547, column: 60, scope: !7974)
!7977 = !DILocation(line: 2549, column: 39, scope: !7974)
!7978 = !DILocation(line: 2549, column: 44, scope: !7974)
!7979 = !DILocation(line: 2549, column: 2, scope: !7974)
!7980 = !DILocation(line: 2550, column: 1, scope: !7974)
!7981 = distinct !DISubprogram(name: "writeb", scope: !7982, file: !7982, line: 65, type: !7983, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7982 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!7983 = !DISubroutineType(types: !7984)
!7984 = !{null, !165, !7985}
!7985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7986, size: 64)
!7986 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!7987 = !DILocalVariable(name: "val", arg: 1, scope: !7981, file: !7982, line: 65, type: !165)
!7988 = !DILocation(line: 65, column: 1, scope: !7981)
!7989 = !DILocalVariable(name: "addr", arg: 2, scope: !7981, file: !7982, line: 65, type: !7985)
!7990 = !{i32 -2143330886}
!7991 = distinct !DISubprogram(name: "readb", scope: !7982, file: !7982, line: 57, type: !7992, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!7992 = !DISubroutineType(types: !7993)
!7993 = !{!165, !7994}
!7994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7995, size: 64)
!7995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7986)
!7996 = !DILocalVariable(name: "addr", arg: 1, scope: !7991, file: !7982, line: 57, type: !7994)
!7997 = !DILocation(line: 57, column: 1, scope: !7991)
!7998 = !DILocalVariable(name: "ret", scope: !7991, file: !7982, line: 57, type: !165)
!7999 = !{i32 -2143333340}
!8000 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !6409, file: !6409, line: 392, type: !8001, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8001 = !DISubroutineType(types: !8002)
!8002 = !{!973, !1003, !1102, !8003, !896}
!8003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!8004 = !DILocalVariable(name: "dev", arg: 1, scope: !8000, file: !6409, line: 392, type: !1003)
!8005 = !DILocation(line: 392, column: 55, scope: !8000)
!8006 = !DILocalVariable(name: "size", arg: 2, scope: !8000, file: !6409, line: 392, type: !1102)
!8007 = !DILocation(line: 392, column: 67, scope: !8000)
!8008 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !8000, file: !6409, line: 393, type: !8003)
!8009 = !DILocation(line: 393, column: 15, scope: !8000)
!8010 = !DILocalVariable(name: "gfp", arg: 4, scope: !8000, file: !6409, line: 393, type: !896)
!8011 = !DILocation(line: 393, column: 33, scope: !8000)
!8012 = !DILocation(line: 396, column: 25, scope: !8000)
!8013 = !DILocation(line: 396, column: 30, scope: !8000)
!8014 = !DILocation(line: 396, column: 36, scope: !8000)
!8015 = !DILocation(line: 396, column: 48, scope: !8000)
!8016 = !DILocation(line: 397, column: 5, scope: !8000)
!8017 = !DILocation(line: 397, column: 9, scope: !8000)
!8018 = !DILocation(line: 397, column: 4, scope: !8000)
!8019 = !DILocation(line: 396, column: 9, scope: !8000)
!8020 = !DILocation(line: 396, column: 2, scope: !8000)
!8021 = distinct !DISubprogram(name: "DAC960_LA_hw_mbox_is_full", scope: !3, file: !3, line: 2572, type: !7479, scopeLine: 2573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8022 = !DILocalVariable(name: "base", arg: 1, scope: !8021, file: !3, line: 2572, type: !973)
!8023 = !DILocation(line: 2572, column: 60, scope: !8021)
!8024 = !DILocalVariable(name: "idb", scope: !8021, file: !3, line: 2574, type: !165)
!8025 = !DILocation(line: 2574, column: 16, scope: !8021)
!8026 = !DILocation(line: 2574, column: 28, scope: !8021)
!8027 = !DILocation(line: 2574, column: 33, scope: !8021)
!8028 = !DILocation(line: 2574, column: 22, scope: !8021)
!8029 = !DILocation(line: 2576, column: 11, scope: !8021)
!8030 = !DILocation(line: 2576, column: 15, scope: !8021)
!8031 = !DILocation(line: 2576, column: 9, scope: !8021)
!8032 = !DILocation(line: 2576, column: 2, scope: !8021)
!8033 = distinct !DISubprogram(name: "DAC960_LA_write_hw_mbox", scope: !3, file: !3, line: 2652, type: !8034, scopeLine: 2654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8034 = !DISubroutineType(types: !8035)
!8035 = !{null, !973, !6245}
!8036 = !DILocalVariable(name: "base", arg: 1, scope: !8033, file: !3, line: 2652, type: !973)
!8037 = !DILocation(line: 2652, column: 58, scope: !8033)
!8038 = !DILocalVariable(name: "mbox", arg: 2, scope: !8033, file: !3, line: 2653, type: !6245)
!8039 = !DILocation(line: 2653, column: 24, scope: !8033)
!8040 = !DILocation(line: 2655, column: 9, scope: !8033)
!8041 = !DILocation(line: 2655, column: 15, scope: !8033)
!8042 = !DILocation(line: 2655, column: 25, scope: !8033)
!8043 = !DILocation(line: 2655, column: 30, scope: !8033)
!8044 = !DILocation(line: 2655, column: 2, scope: !8033)
!8045 = !DILocation(line: 2656, column: 9, scope: !8033)
!8046 = !DILocation(line: 2656, column: 15, scope: !8033)
!8047 = !DILocation(line: 2656, column: 25, scope: !8033)
!8048 = !DILocation(line: 2656, column: 30, scope: !8033)
!8049 = !DILocation(line: 2656, column: 2, scope: !8033)
!8050 = !DILocation(line: 2657, column: 9, scope: !8033)
!8051 = !DILocation(line: 2657, column: 15, scope: !8033)
!8052 = !DILocation(line: 2657, column: 25, scope: !8033)
!8053 = !DILocation(line: 2657, column: 30, scope: !8033)
!8054 = !DILocation(line: 2657, column: 2, scope: !8033)
!8055 = !DILocation(line: 2658, column: 9, scope: !8033)
!8056 = !DILocation(line: 2658, column: 15, scope: !8033)
!8057 = !DILocation(line: 2658, column: 26, scope: !8033)
!8058 = !DILocation(line: 2658, column: 31, scope: !8033)
!8059 = !DILocation(line: 2658, column: 2, scope: !8033)
!8060 = !DILocation(line: 2659, column: 1, scope: !8033)
!8061 = distinct !DISubprogram(name: "DAC960_LA_hw_mbox_status_available", scope: !3, file: !3, line: 2602, type: !7479, scopeLine: 2603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8062 = !DILocalVariable(name: "base", arg: 1, scope: !8061, file: !3, line: 2602, type: !973)
!8063 = !DILocation(line: 2602, column: 69, scope: !8061)
!8064 = !DILocalVariable(name: "odb", scope: !8061, file: !3, line: 2604, type: !165)
!8065 = !DILocation(line: 2604, column: 16, scope: !8061)
!8066 = !DILocation(line: 2604, column: 28, scope: !8061)
!8067 = !DILocation(line: 2604, column: 33, scope: !8061)
!8068 = !DILocation(line: 2604, column: 22, scope: !8061)
!8069 = !DILocation(line: 2606, column: 9, scope: !8061)
!8070 = !DILocation(line: 2606, column: 13, scope: !8061)
!8071 = !DILocation(line: 2606, column: 2, scope: !8061)
!8072 = distinct !DISubprogram(name: "DAC960_LA_read_status", scope: !3, file: !3, line: 2666, type: !8073, scopeLine: 2667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8073 = !DISubroutineType(types: !8074)
!8074 = !{!320, !973}
!8075 = !DILocalVariable(name: "base", arg: 1, scope: !8072, file: !3, line: 2666, type: !973)
!8076 = !DILocation(line: 2666, column: 66, scope: !8072)
!8077 = !DILocation(line: 2668, column: 15, scope: !8072)
!8078 = !DILocation(line: 2668, column: 20, scope: !8072)
!8079 = !DILocation(line: 2668, column: 9, scope: !8072)
!8080 = !DILocation(line: 2668, column: 2, scope: !8072)
!8081 = distinct !DISubprogram(name: "DAC960_LA_ack_hw_mbox_intr", scope: !3, file: !3, line: 2586, type: !1241, scopeLine: 2587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8082 = !DILocalVariable(name: "base", arg: 1, scope: !8081, file: !3, line: 2586, type: !973)
!8083 = !DILocation(line: 2586, column: 61, scope: !8081)
!8084 = !DILocation(line: 2588, column: 39, scope: !8081)
!8085 = !DILocation(line: 2588, column: 44, scope: !8081)
!8086 = !DILocation(line: 2588, column: 2, scope: !8081)
!8087 = !DILocation(line: 2589, column: 1, scope: !8081)
!8088 = distinct !DISubprogram(name: "writel", scope: !7982, file: !7982, line: 67, type: !8089, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8089 = !DISubroutineType(types: !8090)
!8090 = !{null, !7, !7985}
!8091 = !DILocalVariable(name: "val", arg: 1, scope: !8088, file: !7982, line: 67, type: !7)
!8092 = !DILocation(line: 67, column: 1, scope: !8088)
!8093 = !DILocalVariable(name: "addr", arg: 2, scope: !8088, file: !7982, line: 67, type: !7985)
!8094 = !{i32 -2143330116}
!8095 = distinct !DISubprogram(name: "readw", scope: !7982, file: !7982, line: 58, type: !8096, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8096 = !DISubroutineType(types: !8097)
!8097 = !{!320, !7994}
!8098 = !DILocalVariable(name: "addr", arg: 1, scope: !8095, file: !7982, line: 58, type: !7994)
!8099 = !DILocation(line: 58, column: 1, scope: !8095)
!8100 = !DILocalVariable(name: "ret", scope: !8095, file: !7982, line: 58, type: !320)
!8101 = !{i32 -2143332926}
!8102 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !8103, file: !8103, line: 666, type: !8104, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8103 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!902}
!8106 = !DILocalVariable(name: "f", scope: !8102, file: !8103, line: 668, type: !902)
!8107 = !DILocation(line: 668, column: 16, scope: !8102)
!8108 = !DILocation(line: 670, column: 6, scope: !8102)
!8109 = !DILocation(line: 670, column: 4, scope: !8102)
!8110 = !DILocation(line: 671, column: 2, scope: !8102)
!8111 = !DILocation(line: 672, column: 9, scope: !8102)
!8112 = !DILocation(line: 672, column: 2, scope: !8102)
!8113 = distinct !DISubprogram(name: "DAC960_LA_ack_intr", scope: !3, file: !3, line: 2596, type: !1241, scopeLine: 2597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8114 = !DILocalVariable(name: "base", arg: 1, scope: !8113, file: !3, line: 2596, type: !973)
!8115 = !DILocation(line: 2596, column: 53, scope: !8113)
!8116 = !DILocation(line: 2599, column: 9, scope: !8113)
!8117 = !DILocation(line: 2599, column: 14, scope: !8113)
!8118 = !DILocation(line: 2598, column: 2, scope: !8113)
!8119 = !DILocation(line: 2600, column: 1, scope: !8113)
!8120 = distinct !DISubprogram(name: "scsi_host_find_tag", scope: !8121, file: !8121, line: 22, type: !8122, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8121 = !DIFile(filename: "./include/scsi/scsi_tcq.h", directory: "/home/lizy2001/genbc/linux")
!8122 = !DISubroutineType(types: !8123)
!8123 = !{!5962, !5782, !913}
!8124 = !DILocalVariable(name: "shost", arg: 1, scope: !8120, file: !8121, line: 22, type: !5782)
!8125 = !DILocation(line: 22, column: 70, scope: !8120)
!8126 = !DILocalVariable(name: "tag", arg: 2, scope: !8120, file: !8121, line: 23, type: !913)
!8127 = !DILocation(line: 23, column: 7, scope: !8120)
!8128 = !DILocalVariable(name: "req", scope: !8120, file: !8121, line: 25, type: !3030)
!8129 = !DILocation(line: 25, column: 18, scope: !8120)
!8130 = !DILocalVariable(name: "hwq", scope: !8120, file: !8121, line: 26, type: !1683)
!8131 = !DILocation(line: 26, column: 6, scope: !8120)
!8132 = !DILocation(line: 28, column: 6, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8120, file: !8121, line: 28, column: 6)
!8134 = !DILocation(line: 28, column: 10, scope: !8133)
!8135 = !DILocation(line: 28, column: 6, scope: !8120)
!8136 = !DILocation(line: 29, column: 3, scope: !8133)
!8137 = !DILocation(line: 31, column: 33, scope: !8120)
!8138 = !DILocation(line: 31, column: 8, scope: !8120)
!8139 = !DILocation(line: 31, column: 6, scope: !8120)
!8140 = !DILocation(line: 32, column: 6, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8120, file: !8121, line: 32, column: 6)
!8142 = !DILocation(line: 32, column: 12, scope: !8141)
!8143 = !DILocation(line: 32, column: 19, scope: !8141)
!8144 = !DILocation(line: 32, column: 27, scope: !8141)
!8145 = !DILocation(line: 32, column: 10, scope: !8141)
!8146 = !DILocation(line: 32, column: 6, scope: !8120)
!8147 = !DILocation(line: 33, column: 26, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8141, file: !8121, line: 32, column: 41)
!8149 = !DILocation(line: 33, column: 33, scope: !8148)
!8150 = !DILocation(line: 33, column: 41, scope: !8148)
!8151 = !DILocation(line: 33, column: 46, scope: !8148)
!8152 = !DILocation(line: 34, column: 31, scope: !8148)
!8153 = !DILocation(line: 34, column: 6, scope: !8148)
!8154 = !DILocation(line: 33, column: 9, scope: !8148)
!8155 = !DILocation(line: 33, column: 7, scope: !8148)
!8156 = !DILocation(line: 35, column: 2, scope: !8148)
!8157 = !DILocation(line: 37, column: 7, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8120, file: !8121, line: 37, column: 6)
!8159 = !DILocation(line: 37, column: 11, scope: !8158)
!8160 = !DILocation(line: 37, column: 38, scope: !8158)
!8161 = !DILocation(line: 37, column: 15, scope: !8158)
!8162 = !DILocation(line: 37, column: 6, scope: !8120)
!8163 = !DILocation(line: 38, column: 3, scope: !8158)
!8164 = !DILocation(line: 39, column: 26, scope: !8120)
!8165 = !DILocation(line: 39, column: 9, scope: !8120)
!8166 = !DILocation(line: 39, column: 2, scope: !8120)
!8167 = !DILocation(line: 40, column: 1, scope: !8120)
!8168 = distinct !DISubprogram(name: "scsi_cmd_priv", scope: !5964, file: !5964, line: 151, type: !8169, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8169 = !DISubroutineType(types: !8170)
!8170 = !{!973, !5962}
!8171 = !DILocalVariable(name: "cmd", arg: 1, scope: !8168, file: !5964, line: 151, type: !5962)
!8172 = !DILocation(line: 151, column: 53, scope: !8168)
!8173 = !DILocation(line: 153, column: 9, scope: !8168)
!8174 = !DILocation(line: 153, column: 13, scope: !8168)
!8175 = !DILocation(line: 153, column: 2, scope: !8168)
!8176 = distinct !DISubprogram(name: "myrb_handle_cmdblk", scope: !3, file: !3, line: 2402, type: !6223, scopeLine: 2403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8177 = !DILocalVariable(name: "cb", arg: 1, scope: !8176, file: !3, line: 2402, type: !5760)
!8178 = !DILocation(line: 2402, column: 49, scope: !8176)
!8179 = !DILocalVariable(name: "cmd_blk", arg: 2, scope: !8176, file: !3, line: 2402, type: !6225)
!8180 = !DILocation(line: 2402, column: 73, scope: !8176)
!8181 = !DILocation(line: 2404, column: 7, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 2404, column: 6)
!8183 = !DILocation(line: 2404, column: 6, scope: !8176)
!8184 = !DILocation(line: 2405, column: 3, scope: !8182)
!8185 = !DILocation(line: 2407, column: 6, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 2407, column: 6)
!8187 = !DILocation(line: 2407, column: 15, scope: !8186)
!8188 = !DILocation(line: 2407, column: 6, scope: !8176)
!8189 = !DILocation(line: 2408, column: 12, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8186, file: !3, line: 2407, column: 27)
!8191 = !DILocation(line: 2408, column: 21, scope: !8190)
!8192 = !DILocation(line: 2408, column: 3, scope: !8190)
!8193 = !DILocation(line: 2409, column: 3, scope: !8190)
!8194 = !DILocation(line: 2409, column: 12, scope: !8190)
!8195 = !DILocation(line: 2409, column: 23, scope: !8190)
!8196 = !DILocation(line: 2410, column: 2, scope: !8190)
!8197 = !DILocation(line: 2411, column: 1, scope: !8176)
!8198 = distinct !DISubprogram(name: "myrb_handle_scsi", scope: !3, file: !3, line: 2325, type: !8199, scopeLine: 2327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8199 = !DISubroutineType(types: !8200)
!8200 = !{null, !5760, !6225, !5962}
!8201 = !DILocalVariable(name: "cb", arg: 1, scope: !8198, file: !3, line: 2325, type: !5760)
!8202 = !DILocation(line: 2325, column: 47, scope: !8198)
!8203 = !DILocalVariable(name: "cmd_blk", arg: 2, scope: !8198, file: !3, line: 2325, type: !6225)
!8204 = !DILocation(line: 2325, column: 71, scope: !8198)
!8205 = !DILocalVariable(name: "scmd", arg: 3, scope: !8198, file: !3, line: 2326, type: !5962)
!8206 = !DILocation(line: 2326, column: 21, scope: !8198)
!8207 = !DILocalVariable(name: "status", scope: !8198, file: !3, line: 2328, type: !320)
!8208 = !DILocation(line: 2328, column: 17, scope: !8198)
!8209 = !DILocation(line: 2330, column: 7, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 2330, column: 6)
!8211 = !DILocation(line: 2330, column: 6, scope: !8198)
!8212 = !DILocation(line: 2331, column: 3, scope: !8210)
!8213 = !DILocation(line: 2333, column: 17, scope: !8198)
!8214 = !DILocation(line: 2333, column: 2, scope: !8198)
!8215 = !DILocation(line: 2335, column: 6, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 2335, column: 6)
!8217 = !DILocation(line: 2335, column: 15, scope: !8216)
!8218 = !DILocation(line: 2335, column: 6, scope: !8198)
!8219 = !DILocation(line: 2336, column: 10, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 2335, column: 21)
!8221 = !DILocation(line: 2336, column: 16, scope: !8220)
!8222 = !DILocation(line: 2336, column: 31, scope: !8220)
!8223 = !DILocation(line: 2336, column: 40, scope: !8220)
!8224 = !DILocation(line: 2336, column: 46, scope: !8220)
!8225 = !DILocation(line: 2336, column: 3, scope: !8220)
!8226 = !DILocation(line: 2337, column: 17, scope: !8220)
!8227 = !DILocation(line: 2337, column: 21, scope: !8220)
!8228 = !DILocation(line: 2337, column: 32, scope: !8220)
!8229 = !DILocation(line: 2337, column: 41, scope: !8220)
!8230 = !DILocation(line: 2338, column: 10, scope: !8220)
!8231 = !DILocation(line: 2338, column: 19, scope: !8220)
!8232 = !DILocation(line: 2337, column: 3, scope: !8220)
!8233 = !DILocation(line: 2339, column: 3, scope: !8220)
!8234 = !DILocation(line: 2339, column: 12, scope: !8220)
!8235 = !DILocation(line: 2339, column: 17, scope: !8220)
!8236 = !DILocation(line: 2340, column: 2, scope: !8220)
!8237 = !DILocation(line: 2341, column: 6, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 2341, column: 6)
!8239 = !DILocation(line: 2341, column: 15, scope: !8238)
!8240 = !DILocation(line: 2341, column: 6, scope: !8198)
!8241 = !DILocation(line: 2342, column: 17, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 2341, column: 20)
!8243 = !DILocation(line: 2342, column: 21, scope: !8242)
!8244 = !DILocation(line: 2342, column: 30, scope: !8242)
!8245 = !DILocation(line: 2342, column: 39, scope: !8242)
!8246 = !DILocation(line: 2342, column: 44, scope: !8242)
!8247 = !DILocation(line: 2342, column: 53, scope: !8242)
!8248 = !DILocation(line: 2342, column: 3, scope: !8242)
!8249 = !DILocation(line: 2343, column: 3, scope: !8242)
!8250 = !DILocation(line: 2343, column: 12, scope: !8242)
!8251 = !DILocation(line: 2343, column: 16, scope: !8242)
!8252 = !DILocation(line: 2344, column: 3, scope: !8242)
!8253 = !DILocation(line: 2344, column: 12, scope: !8242)
!8254 = !DILocation(line: 2344, column: 21, scope: !8242)
!8255 = !DILocation(line: 2345, column: 2, scope: !8242)
!8256 = !DILocation(line: 2346, column: 11, scope: !8198)
!8257 = !DILocation(line: 2346, column: 20, scope: !8198)
!8258 = !DILocation(line: 2346, column: 9, scope: !8198)
!8259 = !DILocation(line: 2347, column: 10, scope: !8198)
!8260 = !DILocation(line: 2347, column: 2, scope: !8198)
!8261 = !DILocation(line: 2350, column: 35, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 2347, column: 18)
!8263 = !DILocation(line: 2350, column: 33, scope: !8262)
!8264 = !DILocation(line: 2350, column: 3, scope: !8262)
!8265 = !DILocation(line: 2350, column: 9, scope: !8262)
!8266 = !DILocation(line: 2350, column: 16, scope: !8262)
!8267 = !DILocation(line: 2351, column: 3, scope: !8262)
!8268 = !DILocation(line: 2355, column: 7, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8262, file: !3, line: 2355, column: 7)
!8270 = !DILocation(line: 2355, column: 13, scope: !8269)
!8271 = !DILocation(line: 2355, column: 31, scope: !8269)
!8272 = !DILocation(line: 2355, column: 7, scope: !8262)
!8273 = !DILocation(line: 2357, column: 31, scope: !8269)
!8274 = !DILocation(line: 2357, column: 37, scope: !8269)
!8275 = !DILocation(line: 2357, column: 4, scope: !8269)
!8276 = !DILocation(line: 2361, column: 31, scope: !8269)
!8277 = !DILocation(line: 2361, column: 37, scope: !8269)
!8278 = !DILocation(line: 2361, column: 4, scope: !8269)
!8279 = !DILocation(line: 2363, column: 3, scope: !8262)
!8280 = !DILocation(line: 2363, column: 9, scope: !8262)
!8281 = !DILocation(line: 2363, column: 16, scope: !8262)
!8282 = !DILocation(line: 2364, column: 3, scope: !8262)
!8283 = !DILocation(line: 2366, column: 25, scope: !8262)
!8284 = !DILocation(line: 2366, column: 3, scope: !8262)
!8285 = !DILocation(line: 2367, column: 7, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8262, file: !3, line: 2367, column: 7)
!8287 = !DILocation(line: 2367, column: 13, scope: !8286)
!8288 = !DILocation(line: 2367, column: 31, scope: !8286)
!8289 = !DILocation(line: 2367, column: 7, scope: !8262)
!8290 = !DILocation(line: 2369, column: 31, scope: !8286)
!8291 = !DILocation(line: 2369, column: 37, scope: !8286)
!8292 = !DILocation(line: 2369, column: 4, scope: !8286)
!8293 = !DILocation(line: 2373, column: 31, scope: !8286)
!8294 = !DILocation(line: 2373, column: 37, scope: !8286)
!8295 = !DILocation(line: 2373, column: 4, scope: !8286)
!8296 = !DILocation(line: 2375, column: 3, scope: !8262)
!8297 = !DILocation(line: 2375, column: 9, scope: !8262)
!8298 = !DILocation(line: 2375, column: 16, scope: !8262)
!8299 = !DILocation(line: 2376, column: 3, scope: !8262)
!8300 = !DILocation(line: 2380, column: 3, scope: !8262)
!8301 = !DILocation(line: 2380, column: 9, scope: !8262)
!8302 = !DILocation(line: 2380, column: 16, scope: !8262)
!8303 = !DILocation(line: 2381, column: 3, scope: !8262)
!8304 = !DILocation(line: 2386, column: 30, scope: !8262)
!8305 = !DILocation(line: 2386, column: 36, scope: !8262)
!8306 = !DILocation(line: 2386, column: 3, scope: !8262)
!8307 = !DILocation(line: 2388, column: 3, scope: !8262)
!8308 = !DILocation(line: 2391, column: 3, scope: !8262)
!8309 = !DILocation(line: 2391, column: 9, scope: !8262)
!8310 = !DILocation(line: 2391, column: 16, scope: !8262)
!8311 = !DILocation(line: 2392, column: 3, scope: !8262)
!8312 = !DILocation(line: 2394, column: 25, scope: !8262)
!8313 = !DILocation(line: 2395, column: 40, scope: !8262)
!8314 = !DILocation(line: 2394, column: 3, scope: !8262)
!8315 = !DILocation(line: 2396, column: 3, scope: !8262)
!8316 = !DILocation(line: 2396, column: 9, scope: !8262)
!8317 = !DILocation(line: 2396, column: 16, scope: !8262)
!8318 = !DILocation(line: 2397, column: 3, scope: !8262)
!8319 = !DILocation(line: 2399, column: 2, scope: !8198)
!8320 = !DILocation(line: 2399, column: 8, scope: !8198)
!8321 = !DILocation(line: 2399, column: 18, scope: !8198)
!8322 = !DILocation(line: 2400, column: 1, scope: !8198)
!8323 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !8103, file: !8103, line: 646, type: !8104, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8324 = !DILocalVariable(name: "__ret", scope: !8325, file: !8103, line: 648, type: !902)
!8325 = distinct !DILexicalBlock(scope: !8323, file: !8103, line: 648, column: 9)
!8326 = !DILocation(line: 648, column: 9, scope: !8325)
!8327 = !DILocalVariable(name: "__edi", scope: !8325, file: !8103, line: 648, type: !902)
!8328 = !DILocalVariable(name: "__esi", scope: !8325, file: !8103, line: 648, type: !902)
!8329 = !DILocalVariable(name: "__edx", scope: !8325, file: !8103, line: 648, type: !902)
!8330 = !DILocalVariable(name: "__ecx", scope: !8325, file: !8103, line: 648, type: !902)
!8331 = !DILocalVariable(name: "__eax", scope: !8325, file: !8103, line: 648, type: !902)
!8332 = !DILocation(line: 648, column: 9, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8334, file: !8103, line: 648, column: 9)
!8334 = distinct !DILexicalBlock(scope: !8325, file: !8103, line: 648, column: 9)
!8335 = !{i32 -2145691799, i32 -2145689484, i32 -2145689250, i32 -2145689199, i32 -2145689171, i32 -2145689146, i32 -2145689462, i32 -2145689449, i32 -2145689011, i32 -2145688892, i32 -2145689357, i32 -2145689330, i32 -2145689302, i32 -2145689272}
!8336 = !DILocalVariable(name: "__mask", scope: !8337, file: !8103, line: 648, type: !902)
!8337 = distinct !DILexicalBlock(scope: !8333, file: !8103, line: 648, column: 9)
!8338 = !DILocation(line: 648, column: 9, scope: !8337)
!8339 = !DILocation(line: 648, column: 9, scope: !8334)
!8340 = !DILocation(line: 648, column: 2, scope: !8323)
!8341 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !8103, file: !8103, line: 656, type: !2704, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8342 = !DILocalVariable(name: "__edi", scope: !8343, file: !8103, line: 658, type: !902)
!8343 = distinct !DILexicalBlock(scope: !8341, file: !8103, line: 658, column: 2)
!8344 = !DILocation(line: 658, column: 2, scope: !8343)
!8345 = !DILocalVariable(name: "__esi", scope: !8343, file: !8103, line: 658, type: !902)
!8346 = !DILocalVariable(name: "__edx", scope: !8343, file: !8103, line: 658, type: !902)
!8347 = !DILocalVariable(name: "__ecx", scope: !8343, file: !8103, line: 658, type: !902)
!8348 = !DILocalVariable(name: "__eax", scope: !8343, file: !8103, line: 658, type: !902)
!8349 = !{i32 -2145684705, i32 -2145683973, i32 -2145683739, i32 -2145683688, i32 -2145683660, i32 -2145683635, i32 -2145683951, i32 -2145683938, i32 -2145683500, i32 -2145683381, i32 -2145683846, i32 -2145683819, i32 -2145683791, i32 -2145683761}
!8350 = !DILocation(line: 659, column: 1, scope: !8341)
!8351 = distinct !DISubprogram(name: "blk_mq_unique_tag_to_hwq", scope: !519, file: !519, line: 467, type: !8352, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8352 = !DISubroutineType(types: !8353)
!8353 = !{!1683, !268}
!8354 = !DILocalVariable(name: "unique_tag", arg: 1, scope: !8351, file: !519, line: 467, type: !268)
!8355 = !DILocation(line: 467, column: 48, scope: !8351)
!8356 = !DILocation(line: 469, column: 9, scope: !8351)
!8357 = !DILocation(line: 469, column: 20, scope: !8351)
!8358 = !DILocation(line: 469, column: 2, scope: !8351)
!8359 = distinct !DISubprogram(name: "blk_mq_unique_tag_to_tag", scope: !519, file: !519, line: 472, type: !8352, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8360 = !DILocalVariable(name: "unique_tag", arg: 1, scope: !8359, file: !519, line: 472, type: !268)
!8361 = !DILocation(line: 472, column: 48, scope: !8359)
!8362 = !DILocation(line: 474, column: 9, scope: !8359)
!8363 = !DILocation(line: 474, column: 20, scope: !8359)
!8364 = !DILocation(line: 474, column: 2, scope: !8359)
!8365 = distinct !DISubprogram(name: "blk_mq_request_started", scope: !519, file: !519, line: 486, type: !8366, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8366 = !DISubroutineType(types: !8367)
!8367 = !{!913, !3030}
!8368 = !DILocalVariable(name: "rq", arg: 1, scope: !8365, file: !519, line: 486, type: !3030)
!8369 = !DILocation(line: 486, column: 58, scope: !8365)
!8370 = !DILocation(line: 488, column: 25, scope: !8365)
!8371 = !DILocation(line: 488, column: 9, scope: !8365)
!8372 = !DILocation(line: 488, column: 29, scope: !8365)
!8373 = !DILocation(line: 488, column: 2, scope: !8365)
!8374 = distinct !DISubprogram(name: "blk_mq_rq_to_pdu", scope: !519, file: !519, line: 567, type: !8375, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8375 = !DISubroutineType(types: !8376)
!8376 = !{!973, !3030}
!8377 = !DILocalVariable(name: "rq", arg: 1, scope: !8374, file: !519, line: 567, type: !3030)
!8378 = !DILocation(line: 567, column: 54, scope: !8374)
!8379 = !DILocation(line: 569, column: 9, scope: !8374)
!8380 = !DILocation(line: 569, column: 12, scope: !8374)
!8381 = !DILocation(line: 569, column: 2, scope: !8374)
!8382 = distinct !DISubprogram(name: "blk_mq_rq_state", scope: !519, file: !519, line: 481, type: !8383, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8383 = !DISubroutineType(types: !8384)
!8384 = !{!42, !3030}
!8385 = !DILocalVariable(name: "rq", arg: 1, scope: !8382, file: !519, line: 481, type: !3030)
!8386 = !DILocation(line: 481, column: 64, scope: !8382)
!8387 = !DILocation(line: 483, column: 9, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8382, file: !519, line: 483, column: 9)
!8389 = !DILocation(line: 483, column: 9, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8388, file: !519, line: 483, column: 9)
!8391 = !DILocation(line: 483, column: 2, scope: !8382)
!8392 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !8103, file: !8103, line: 651, type: !8393, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8393 = !DISubroutineType(types: !8394)
!8394 = !{null, !902}
!8395 = !DILocalVariable(name: "f", arg: 1, scope: !8392, file: !8103, line: 651, type: !902)
!8396 = !DILocation(line: 651, column: 65, scope: !8392)
!8397 = !DILocalVariable(name: "__edi", scope: !8398, file: !8103, line: 653, type: !902)
!8398 = distinct !DILexicalBlock(scope: !8392, file: !8103, line: 653, column: 2)
!8399 = !DILocation(line: 653, column: 2, scope: !8398)
!8400 = !DILocalVariable(name: "__esi", scope: !8398, file: !8103, line: 653, type: !902)
!8401 = !DILocalVariable(name: "__edx", scope: !8398, file: !8103, line: 653, type: !902)
!8402 = !DILocalVariable(name: "__ecx", scope: !8398, file: !8103, line: 653, type: !902)
!8403 = !DILocalVariable(name: "__eax", scope: !8398, file: !8103, line: 653, type: !902)
!8404 = !{i32 -2145687332, i32 -2145686582, i32 -2145686348, i32 -2145686297, i32 -2145686269, i32 -2145686244, i32 -2145686560, i32 -2145686547, i32 -2145686109, i32 -2145685990, i32 -2145686455, i32 -2145686428, i32 -2145686400, i32 -2145686370}
!8405 = !DILocation(line: 654, column: 1, scope: !8392)
!8406 = distinct !DISubprogram(name: "DAC960_PG_disable_intr", scope: !3, file: !3, line: 2900, type: !1241, scopeLine: 2901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8407 = !DILocalVariable(name: "base", arg: 1, scope: !8406, file: !3, line: 2900, type: !973)
!8408 = !DILocation(line: 2900, column: 57, scope: !8406)
!8409 = !DILocalVariable(name: "imask", scope: !8406, file: !3, line: 2902, type: !7)
!8410 = !DILocation(line: 2902, column: 15, scope: !8406)
!8411 = !DILocation(line: 2904, column: 9, scope: !8406)
!8412 = !DILocation(line: 2904, column: 16, scope: !8406)
!8413 = !DILocation(line: 2904, column: 21, scope: !8406)
!8414 = !DILocation(line: 2904, column: 2, scope: !8406)
!8415 = !DILocation(line: 2905, column: 1, scope: !8406)
!8416 = distinct !DISubprogram(name: "DAC960_PG_ack_hw_mbox_status", scope: !3, file: !3, line: 2828, type: !1241, scopeLine: 2829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8417 = !DILocalVariable(name: "base", arg: 1, scope: !8416, file: !3, line: 2828, type: !973)
!8418 = !DILocation(line: 2828, column: 63, scope: !8416)
!8419 = !DILocation(line: 2830, column: 39, scope: !8416)
!8420 = !DILocation(line: 2830, column: 44, scope: !8416)
!8421 = !DILocation(line: 2830, column: 2, scope: !8416)
!8422 = !DILocation(line: 2831, column: 1, scope: !8416)
!8423 = distinct !DISubprogram(name: "DAC960_PG_init_in_progress", scope: !3, file: !3, line: 2855, type: !7479, scopeLine: 2856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8424 = !DILocalVariable(name: "base", arg: 1, scope: !8423, file: !3, line: 2855, type: !973)
!8425 = !DILocation(line: 2855, column: 61, scope: !8423)
!8426 = !DILocalVariable(name: "idb", scope: !8423, file: !3, line: 2857, type: !165)
!8427 = !DILocation(line: 2857, column: 16, scope: !8423)
!8428 = !DILocation(line: 2857, column: 28, scope: !8423)
!8429 = !DILocation(line: 2857, column: 33, scope: !8423)
!8430 = !DILocation(line: 2857, column: 22, scope: !8423)
!8431 = !DILocation(line: 2859, column: 9, scope: !8423)
!8432 = !DILocation(line: 2859, column: 13, scope: !8423)
!8433 = !DILocation(line: 2859, column: 2, scope: !8423)
!8434 = distinct !DISubprogram(name: "DAC960_PG_read_error_status", scope: !3, file: !3, line: 2949, type: !7493, scopeLine: 2951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8435 = !DILocalVariable(name: "base", arg: 1, scope: !8434, file: !3, line: 2949, type: !973)
!8436 = !DILocation(line: 2949, column: 43, scope: !8434)
!8437 = !DILocalVariable(name: "error", arg: 2, scope: !8434, file: !3, line: 2949, type: !5840)
!8438 = !DILocation(line: 2949, column: 64, scope: !8434)
!8439 = !DILocalVariable(name: "param0", arg: 3, scope: !8434, file: !3, line: 2950, type: !5840)
!8440 = !DILocation(line: 2950, column: 18, scope: !8434)
!8441 = !DILocalVariable(name: "param1", arg: 4, scope: !8434, file: !3, line: 2950, type: !5840)
!8442 = !DILocation(line: 2950, column: 41, scope: !8434)
!8443 = !DILocalVariable(name: "errsts", scope: !8434, file: !3, line: 2952, type: !165)
!8444 = !DILocation(line: 2952, column: 16, scope: !8434)
!8445 = !DILocation(line: 2952, column: 31, scope: !8434)
!8446 = !DILocation(line: 2952, column: 36, scope: !8434)
!8447 = !DILocation(line: 2952, column: 25, scope: !8434)
!8448 = !DILocation(line: 2954, column: 8, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 2954, column: 6)
!8450 = !DILocation(line: 2954, column: 15, scope: !8449)
!8451 = !DILocation(line: 2954, column: 6, scope: !8434)
!8452 = !DILocation(line: 2955, column: 3, scope: !8449)
!8453 = !DILocation(line: 2956, column: 9, scope: !8434)
!8454 = !DILocation(line: 2957, column: 11, scope: !8434)
!8455 = !DILocation(line: 2957, column: 3, scope: !8434)
!8456 = !DILocation(line: 2957, column: 9, scope: !8434)
!8457 = !DILocation(line: 2958, column: 18, scope: !8434)
!8458 = !DILocation(line: 2958, column: 23, scope: !8434)
!8459 = !DILocation(line: 2958, column: 12, scope: !8434)
!8460 = !DILocation(line: 2958, column: 3, scope: !8434)
!8461 = !DILocation(line: 2958, column: 10, scope: !8434)
!8462 = !DILocation(line: 2959, column: 18, scope: !8434)
!8463 = !DILocation(line: 2959, column: 23, scope: !8434)
!8464 = !DILocation(line: 2959, column: 12, scope: !8434)
!8465 = !DILocation(line: 2959, column: 3, scope: !8434)
!8466 = !DILocation(line: 2959, column: 10, scope: !8434)
!8467 = !DILocation(line: 2960, column: 12, scope: !8434)
!8468 = !DILocation(line: 2960, column: 17, scope: !8434)
!8469 = !DILocation(line: 2960, column: 2, scope: !8434)
!8470 = !DILocation(line: 2961, column: 2, scope: !8434)
!8471 = !DILocation(line: 2962, column: 1, scope: !8434)
!8472 = distinct !DISubprogram(name: "DAC960_PG_mbox_init", scope: !3, file: !3, line: 2965, type: !7579, scopeLine: 2967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8473 = !DILocalVariable(name: "pdev", arg: 1, scope: !8472, file: !3, line: 2965, type: !914)
!8474 = !DILocation(line: 2965, column: 37, scope: !8472)
!8475 = !DILocalVariable(name: "base", arg: 2, scope: !8472, file: !3, line: 2965, type: !973)
!8476 = !DILocation(line: 2965, column: 57, scope: !8472)
!8477 = !DILocalVariable(name: "mbox", arg: 3, scope: !8472, file: !3, line: 2966, type: !6245)
!8478 = !DILocation(line: 2966, column: 24, scope: !8472)
!8479 = !DILocalVariable(name: "status", scope: !8472, file: !3, line: 2968, type: !320)
!8480 = !DILocation(line: 2968, column: 17, scope: !8472)
!8481 = !DILocalVariable(name: "timeout", scope: !8472, file: !3, line: 2969, type: !913)
!8482 = !DILocation(line: 2969, column: 6, scope: !8472)
!8483 = !DILocation(line: 2971, column: 2, scope: !8472)
!8484 = !DILocation(line: 2971, column: 9, scope: !8472)
!8485 = !DILocation(line: 2971, column: 17, scope: !8472)
!8486 = !DILocation(line: 2972, column: 34, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 2972, column: 7)
!8488 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 2971, column: 41)
!8489 = !DILocation(line: 2972, column: 8, scope: !8487)
!8490 = !DILocation(line: 2972, column: 7, scope: !8488)
!8491 = !DILocation(line: 2973, column: 4, scope: !8487)
!8492 = !DILocation(line: 2974, column: 3, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 2974, column: 3)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 2974, column: 3)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 2974, column: 3)
!8496 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 2974, column: 3)
!8497 = !DILocation(line: 2975, column: 10, scope: !8488)
!8498 = distinct !{!8498, !8483, !8499}
!8499 = !DILocation(line: 2976, column: 2, scope: !8472)
!8500 = !DILocation(line: 2977, column: 32, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 2977, column: 6)
!8502 = !DILocation(line: 2977, column: 6, scope: !8501)
!8503 = !DILocation(line: 2977, column: 6, scope: !8472)
!8504 = !DILocation(line: 2978, column: 3, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2977, column: 39)
!8506 = !DILocation(line: 2980, column: 3, scope: !8505)
!8507 = !DILocation(line: 2982, column: 26, scope: !8472)
!8508 = !DILocation(line: 2982, column: 32, scope: !8472)
!8509 = !DILocation(line: 2982, column: 2, scope: !8472)
!8510 = !DILocation(line: 2983, column: 28, scope: !8472)
!8511 = !DILocation(line: 2983, column: 2, scope: !8472)
!8512 = !DILocation(line: 2985, column: 10, scope: !8472)
!8513 = !DILocation(line: 2986, column: 2, scope: !8472)
!8514 = !DILocation(line: 2986, column: 9, scope: !8472)
!8515 = !DILocation(line: 2986, column: 17, scope: !8472)
!8516 = !DILocation(line: 2987, column: 42, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 2987, column: 7)
!8518 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 2986, column: 41)
!8519 = !DILocation(line: 2987, column: 7, scope: !8517)
!8520 = !DILocation(line: 2987, column: 7, scope: !8518)
!8521 = !DILocation(line: 2988, column: 4, scope: !8517)
!8522 = !DILocation(line: 2989, column: 3, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 2989, column: 3)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 2989, column: 3)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 2989, column: 3)
!8526 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 2989, column: 3)
!8527 = !DILocation(line: 2990, column: 10, scope: !8518)
!8528 = distinct !{!8528, !8513, !8529}
!8529 = !DILocation(line: 2991, column: 2, scope: !8472)
!8530 = !DILocation(line: 2992, column: 42, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 2992, column: 6)
!8532 = !DILocation(line: 2992, column: 7, scope: !8531)
!8533 = !DILocation(line: 2992, column: 6, scope: !8472)
!8534 = !DILocation(line: 2993, column: 3, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 2992, column: 49)
!8536 = !DILocation(line: 2995, column: 3, scope: !8535)
!8537 = !DILocation(line: 2997, column: 33, scope: !8472)
!8538 = !DILocation(line: 2997, column: 11, scope: !8472)
!8539 = !DILocation(line: 2997, column: 9, scope: !8472)
!8540 = !DILocation(line: 2998, column: 29, scope: !8472)
!8541 = !DILocation(line: 2998, column: 2, scope: !8472)
!8542 = !DILocation(line: 2999, column: 31, scope: !8472)
!8543 = !DILocation(line: 2999, column: 2, scope: !8472)
!8544 = !DILocation(line: 3001, column: 9, scope: !8472)
!8545 = !DILocation(line: 3001, column: 2, scope: !8472)
!8546 = !DILocation(line: 3002, column: 1, scope: !8472)
!8547 = distinct !DISubprogram(name: "DAC960_PG_reset_ctrl", scope: !3, file: !3, line: 2838, type: !1241, scopeLine: 2839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8548 = !DILocalVariable(name: "base", arg: 1, scope: !8547, file: !3, line: 2838, type: !973)
!8549 = !DILocation(line: 2838, column: 55, scope: !8547)
!8550 = !DILocation(line: 2840, column: 35, scope: !8547)
!8551 = !DILocation(line: 2840, column: 40, scope: !8547)
!8552 = !DILocation(line: 2840, column: 2, scope: !8547)
!8553 = !DILocation(line: 2841, column: 1, scope: !8547)
!8554 = distinct !DISubprogram(name: "DAC960_PG_enable_intr", scope: !3, file: !3, line: 2892, type: !1241, scopeLine: 2893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8555 = !DILocalVariable(name: "base", arg: 1, scope: !8554, file: !3, line: 2892, type: !973)
!8556 = !DILocation(line: 2892, column: 56, scope: !8554)
!8557 = !DILocalVariable(name: "imask", scope: !8554, file: !3, line: 2894, type: !7)
!8558 = !DILocation(line: 2894, column: 15, scope: !8554)
!8559 = !DILocation(line: 2896, column: 8, scope: !8554)
!8560 = !DILocation(line: 2897, column: 9, scope: !8554)
!8561 = !DILocation(line: 2897, column: 16, scope: !8554)
!8562 = !DILocation(line: 2897, column: 21, scope: !8554)
!8563 = !DILocation(line: 2897, column: 2, scope: !8554)
!8564 = !DILocation(line: 2898, column: 1, scope: !8554)
!8565 = distinct !DISubprogram(name: "DAC960_PG_write_cmd_mbox", scope: !3, file: !3, line: 2914, type: !6243, scopeLine: 2916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8566 = !DILocalVariable(name: "mem_mbox", arg: 1, scope: !8565, file: !3, line: 2914, type: !6245)
!8567 = !DILocation(line: 2914, column: 66, scope: !8565)
!8568 = !DILocalVariable(name: "mbox", arg: 2, scope: !8565, file: !3, line: 2915, type: !6245)
!8569 = !DILocation(line: 2915, column: 24, scope: !8565)
!8570 = !DILocation(line: 2917, column: 23, scope: !8565)
!8571 = !DILocation(line: 2917, column: 29, scope: !8565)
!8572 = !DILocation(line: 2917, column: 2, scope: !8565)
!8573 = !DILocation(line: 2917, column: 12, scope: !8565)
!8574 = !DILocation(line: 2917, column: 21, scope: !8565)
!8575 = !DILocation(line: 2918, column: 23, scope: !8565)
!8576 = !DILocation(line: 2918, column: 29, scope: !8565)
!8577 = !DILocation(line: 2918, column: 2, scope: !8565)
!8578 = !DILocation(line: 2918, column: 12, scope: !8565)
!8579 = !DILocation(line: 2918, column: 21, scope: !8565)
!8580 = !DILocation(line: 2919, column: 23, scope: !8565)
!8581 = !DILocation(line: 2919, column: 29, scope: !8565)
!8582 = !DILocation(line: 2919, column: 2, scope: !8565)
!8583 = !DILocation(line: 2919, column: 12, scope: !8565)
!8584 = !DILocation(line: 2919, column: 21, scope: !8565)
!8585 = !DILocation(line: 2921, column: 2, scope: !8565)
!8586 = !{i32 -2140863891}
!8587 = !DILocation(line: 2922, column: 23, scope: !8565)
!8588 = !DILocation(line: 2922, column: 29, scope: !8565)
!8589 = !DILocation(line: 2922, column: 2, scope: !8565)
!8590 = !DILocation(line: 2922, column: 12, scope: !8565)
!8591 = !DILocation(line: 2922, column: 21, scope: !8565)
!8592 = !DILocation(line: 2924, column: 2, scope: !8565)
!8593 = !{i32 -2140863855}
!8594 = !DILocation(line: 2925, column: 1, scope: !8565)
!8595 = distinct !DISubprogram(name: "DAC960_PG_mem_mbox_new_cmd", scope: !3, file: !3, line: 2843, type: !1241, scopeLine: 2844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8596 = !DILocalVariable(name: "base", arg: 1, scope: !8595, file: !3, line: 2843, type: !973)
!8597 = !DILocation(line: 2843, column: 61, scope: !8595)
!8598 = !DILocation(line: 2845, column: 38, scope: !8595)
!8599 = !DILocation(line: 2845, column: 43, scope: !8595)
!8600 = !DILocation(line: 2845, column: 2, scope: !8595)
!8601 = !DILocation(line: 2846, column: 1, scope: !8595)
!8602 = distinct !DISubprogram(name: "DAC960_PG_hw_mbox_new_cmd", scope: !3, file: !3, line: 2823, type: !1241, scopeLine: 2824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8603 = !DILocalVariable(name: "base", arg: 1, scope: !8602, file: !3, line: 2823, type: !973)
!8604 = !DILocation(line: 2823, column: 60, scope: !8602)
!8605 = !DILocation(line: 2825, column: 39, scope: !8602)
!8606 = !DILocation(line: 2825, column: 44, scope: !8602)
!8607 = !DILocation(line: 2825, column: 2, scope: !8602)
!8608 = !DILocation(line: 2826, column: 1, scope: !8602)
!8609 = distinct !DISubprogram(name: "readl", scope: !7982, file: !7982, line: 59, type: !8610, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8610 = !DISubroutineType(types: !8611)
!8611 = !{!7, !7994}
!8612 = !DILocalVariable(name: "addr", arg: 1, scope: !8609, file: !7982, line: 59, type: !7994)
!8613 = !DILocation(line: 59, column: 1, scope: !8609)
!8614 = !DILocalVariable(name: "ret", scope: !8609, file: !7982, line: 59, type: !7)
!8615 = !{i32 -2143332509}
!8616 = distinct !DISubprogram(name: "DAC960_PG_hw_mbox_is_full", scope: !3, file: !3, line: 2848, type: !7479, scopeLine: 2849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8617 = !DILocalVariable(name: "base", arg: 1, scope: !8616, file: !3, line: 2848, type: !973)
!8618 = !DILocation(line: 2848, column: 60, scope: !8616)
!8619 = !DILocalVariable(name: "idb", scope: !8616, file: !3, line: 2850, type: !165)
!8620 = !DILocation(line: 2850, column: 16, scope: !8616)
!8621 = !DILocation(line: 2850, column: 28, scope: !8616)
!8622 = !DILocation(line: 2850, column: 33, scope: !8616)
!8623 = !DILocation(line: 2850, column: 22, scope: !8616)
!8624 = !DILocation(line: 2852, column: 9, scope: !8616)
!8625 = !DILocation(line: 2852, column: 13, scope: !8616)
!8626 = !DILocation(line: 2852, column: 2, scope: !8616)
!8627 = distinct !DISubprogram(name: "DAC960_PG_write_hw_mbox", scope: !3, file: !3, line: 2927, type: !8034, scopeLine: 2929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8628 = !DILocalVariable(name: "base", arg: 1, scope: !8627, file: !3, line: 2927, type: !973)
!8629 = !DILocation(line: 2927, column: 58, scope: !8627)
!8630 = !DILocalVariable(name: "mbox", arg: 2, scope: !8627, file: !3, line: 2928, type: !6245)
!8631 = !DILocation(line: 2928, column: 24, scope: !8627)
!8632 = !DILocation(line: 2930, column: 9, scope: !8627)
!8633 = !DILocation(line: 2930, column: 15, scope: !8627)
!8634 = !DILocation(line: 2930, column: 25, scope: !8627)
!8635 = !DILocation(line: 2930, column: 30, scope: !8627)
!8636 = !DILocation(line: 2930, column: 2, scope: !8627)
!8637 = !DILocation(line: 2931, column: 9, scope: !8627)
!8638 = !DILocation(line: 2931, column: 15, scope: !8627)
!8639 = !DILocation(line: 2931, column: 25, scope: !8627)
!8640 = !DILocation(line: 2931, column: 30, scope: !8627)
!8641 = !DILocation(line: 2931, column: 2, scope: !8627)
!8642 = !DILocation(line: 2932, column: 9, scope: !8627)
!8643 = !DILocation(line: 2932, column: 15, scope: !8627)
!8644 = !DILocation(line: 2932, column: 25, scope: !8627)
!8645 = !DILocation(line: 2932, column: 30, scope: !8627)
!8646 = !DILocation(line: 2932, column: 2, scope: !8627)
!8647 = !DILocation(line: 2933, column: 9, scope: !8627)
!8648 = !DILocation(line: 2933, column: 15, scope: !8627)
!8649 = !DILocation(line: 2933, column: 26, scope: !8627)
!8650 = !DILocation(line: 2933, column: 31, scope: !8627)
!8651 = !DILocation(line: 2933, column: 2, scope: !8627)
!8652 = !DILocation(line: 2934, column: 1, scope: !8627)
!8653 = distinct !DISubprogram(name: "DAC960_PG_hw_mbox_status_available", scope: !3, file: !3, line: 2878, type: !7479, scopeLine: 2879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8654 = !DILocalVariable(name: "base", arg: 1, scope: !8653, file: !3, line: 2878, type: !973)
!8655 = !DILocation(line: 2878, column: 69, scope: !8653)
!8656 = !DILocalVariable(name: "odb", scope: !8653, file: !3, line: 2880, type: !165)
!8657 = !DILocation(line: 2880, column: 16, scope: !8653)
!8658 = !DILocation(line: 2880, column: 28, scope: !8653)
!8659 = !DILocation(line: 2880, column: 33, scope: !8653)
!8660 = !DILocation(line: 2880, column: 22, scope: !8653)
!8661 = !DILocation(line: 2882, column: 9, scope: !8653)
!8662 = !DILocation(line: 2882, column: 13, scope: !8653)
!8663 = !DILocation(line: 2882, column: 2, scope: !8653)
!8664 = distinct !DISubprogram(name: "DAC960_PG_read_status", scope: !3, file: !3, line: 2943, type: !8073, scopeLine: 2944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8665 = !DILocalVariable(name: "base", arg: 1, scope: !8664, file: !3, line: 2943, type: !973)
!8666 = !DILocation(line: 2943, column: 37, scope: !8664)
!8667 = !DILocation(line: 2945, column: 15, scope: !8664)
!8668 = !DILocation(line: 2945, column: 20, scope: !8664)
!8669 = !DILocation(line: 2945, column: 9, scope: !8664)
!8670 = !DILocation(line: 2945, column: 2, scope: !8664)
!8671 = distinct !DISubprogram(name: "DAC960_PG_ack_hw_mbox_intr", scope: !3, file: !3, line: 2862, type: !1241, scopeLine: 2863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8672 = !DILocalVariable(name: "base", arg: 1, scope: !8671, file: !3, line: 2862, type: !973)
!8673 = !DILocation(line: 2862, column: 61, scope: !8671)
!8674 = !DILocation(line: 2864, column: 39, scope: !8671)
!8675 = !DILocation(line: 2864, column: 44, scope: !8671)
!8676 = !DILocation(line: 2864, column: 2, scope: !8671)
!8677 = !DILocation(line: 2865, column: 1, scope: !8671)
!8678 = distinct !DISubprogram(name: "DAC960_PG_ack_intr", scope: !3, file: !3, line: 2872, type: !1241, scopeLine: 2873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8679 = !DILocalVariable(name: "base", arg: 1, scope: !8678, file: !3, line: 2872, type: !973)
!8680 = !DILocation(line: 2872, column: 53, scope: !8678)
!8681 = !DILocation(line: 2875, column: 9, scope: !8678)
!8682 = !DILocation(line: 2875, column: 14, scope: !8678)
!8683 = !DILocation(line: 2874, column: 2, scope: !8678)
!8684 = !DILocation(line: 2876, column: 1, scope: !8678)
!8685 = distinct !DISubprogram(name: "DAC960_PD_disable_intr", scope: !3, file: !3, line: 3152, type: !1241, scopeLine: 3153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8686 = !DILocalVariable(name: "base", arg: 1, scope: !8685, file: !3, line: 3152, type: !973)
!8687 = !DILocation(line: 3152, column: 57, scope: !8685)
!8688 = !DILocation(line: 3154, column: 12, scope: !8685)
!8689 = !DILocation(line: 3154, column: 17, scope: !8685)
!8690 = !DILocation(line: 3154, column: 2, scope: !8685)
!8691 = !DILocation(line: 3155, column: 1, scope: !8685)
!8692 = distinct !DISubprogram(name: "DAC960_PD_ack_hw_mbox_status", scope: !3, file: !3, line: 3106, type: !1241, scopeLine: 3107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8693 = !DILocalVariable(name: "base", arg: 1, scope: !8692, file: !3, line: 3106, type: !973)
!8694 = !DILocation(line: 3106, column: 63, scope: !8692)
!8695 = !DILocation(line: 3108, column: 39, scope: !8692)
!8696 = !DILocation(line: 3108, column: 44, scope: !8692)
!8697 = !DILocation(line: 3108, column: 2, scope: !8692)
!8698 = !DILocation(line: 3109, column: 1, scope: !8692)
!8699 = distinct !DISubprogram(name: "DAC960_PD_init_in_progress", scope: !3, file: !3, line: 3128, type: !7479, scopeLine: 3129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8700 = !DILocalVariable(name: "base", arg: 1, scope: !8699, file: !3, line: 3128, type: !973)
!8701 = !DILocation(line: 3128, column: 61, scope: !8699)
!8702 = !DILocalVariable(name: "idb", scope: !8699, file: !3, line: 3130, type: !165)
!8703 = !DILocation(line: 3130, column: 16, scope: !8699)
!8704 = !DILocation(line: 3130, column: 28, scope: !8699)
!8705 = !DILocation(line: 3130, column: 33, scope: !8699)
!8706 = !DILocation(line: 3130, column: 22, scope: !8699)
!8707 = !DILocation(line: 3132, column: 9, scope: !8699)
!8708 = !DILocation(line: 3132, column: 13, scope: !8699)
!8709 = !DILocation(line: 3132, column: 2, scope: !8699)
!8710 = distinct !DISubprogram(name: "DAC960_PD_read_error_status", scope: !3, file: !3, line: 3186, type: !7493, scopeLine: 3188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8711 = !DILocalVariable(name: "base", arg: 1, scope: !8710, file: !3, line: 3186, type: !973)
!8712 = !DILocation(line: 3186, column: 43, scope: !8710)
!8713 = !DILocalVariable(name: "error", arg: 2, scope: !8710, file: !3, line: 3186, type: !5840)
!8714 = !DILocation(line: 3186, column: 64, scope: !8710)
!8715 = !DILocalVariable(name: "param0", arg: 3, scope: !8710, file: !3, line: 3187, type: !5840)
!8716 = !DILocation(line: 3187, column: 18, scope: !8710)
!8717 = !DILocalVariable(name: "param1", arg: 4, scope: !8710, file: !3, line: 3187, type: !5840)
!8718 = !DILocation(line: 3187, column: 41, scope: !8710)
!8719 = !DILocalVariable(name: "errsts", scope: !8710, file: !3, line: 3189, type: !165)
!8720 = !DILocation(line: 3189, column: 16, scope: !8710)
!8721 = !DILocation(line: 3189, column: 31, scope: !8710)
!8722 = !DILocation(line: 3189, column: 36, scope: !8710)
!8723 = !DILocation(line: 3189, column: 25, scope: !8710)
!8724 = !DILocation(line: 3191, column: 8, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 3191, column: 6)
!8726 = !DILocation(line: 3191, column: 15, scope: !8725)
!8727 = !DILocation(line: 3191, column: 6, scope: !8710)
!8728 = !DILocation(line: 3192, column: 3, scope: !8725)
!8729 = !DILocation(line: 3193, column: 9, scope: !8710)
!8730 = !DILocation(line: 3194, column: 11, scope: !8710)
!8731 = !DILocation(line: 3194, column: 3, scope: !8710)
!8732 = !DILocation(line: 3194, column: 9, scope: !8710)
!8733 = !DILocation(line: 3195, column: 18, scope: !8710)
!8734 = !DILocation(line: 3195, column: 23, scope: !8710)
!8735 = !DILocation(line: 3195, column: 12, scope: !8710)
!8736 = !DILocation(line: 3195, column: 3, scope: !8710)
!8737 = !DILocation(line: 3195, column: 10, scope: !8710)
!8738 = !DILocation(line: 3196, column: 18, scope: !8710)
!8739 = !DILocation(line: 3196, column: 23, scope: !8710)
!8740 = !DILocation(line: 3196, column: 12, scope: !8710)
!8741 = !DILocation(line: 3196, column: 3, scope: !8710)
!8742 = !DILocation(line: 3196, column: 10, scope: !8710)
!8743 = !DILocation(line: 3197, column: 12, scope: !8710)
!8744 = !DILocation(line: 3197, column: 17, scope: !8710)
!8745 = !DILocation(line: 3197, column: 2, scope: !8710)
!8746 = !DILocation(line: 3198, column: 2, scope: !8710)
!8747 = !DILocation(line: 3199, column: 1, scope: !8710)
!8748 = distinct !DISubprogram(name: "DAC960_PD_reset_ctrl", scope: !3, file: !3, line: 3116, type: !1241, scopeLine: 3117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8749 = !DILocalVariable(name: "base", arg: 1, scope: !8748, file: !3, line: 3116, type: !973)
!8750 = !DILocation(line: 3116, column: 55, scope: !8748)
!8751 = !DILocation(line: 3118, column: 35, scope: !8748)
!8752 = !DILocation(line: 3118, column: 40, scope: !8748)
!8753 = !DILocation(line: 3118, column: 2, scope: !8748)
!8754 = !DILocation(line: 3119, column: 1, scope: !8748)
!8755 = distinct !DISubprogram(name: "DAC960_PD_enable_intr", scope: !3, file: !3, line: 3147, type: !1241, scopeLine: 3148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8756 = !DILocalVariable(name: "base", arg: 1, scope: !8755, file: !3, line: 3147, type: !973)
!8757 = !DILocation(line: 3147, column: 56, scope: !8755)
!8758 = !DILocation(line: 3149, column: 39, scope: !8755)
!8759 = !DILocation(line: 3149, column: 44, scope: !8755)
!8760 = !DILocation(line: 3149, column: 2, scope: !8755)
!8761 = !DILocation(line: 3150, column: 1, scope: !8755)
!8762 = distinct !DISubprogram(name: "DAC960_PD_qcmd", scope: !3, file: !3, line: 3201, type: !6223, scopeLine: 3202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8763 = !DILocalVariable(name: "cb", arg: 1, scope: !8762, file: !3, line: 3201, type: !5760)
!8764 = !DILocation(line: 3201, column: 45, scope: !8762)
!8765 = !DILocalVariable(name: "cmd_blk", arg: 2, scope: !8762, file: !3, line: 3201, type: !6225)
!8766 = !DILocation(line: 3201, column: 69, scope: !8762)
!8767 = !DILocalVariable(name: "base", scope: !8762, file: !3, line: 3203, type: !973)
!8768 = !DILocation(line: 3203, column: 16, scope: !8762)
!8769 = !DILocation(line: 3203, column: 23, scope: !8762)
!8770 = !DILocation(line: 3203, column: 27, scope: !8762)
!8771 = !DILocalVariable(name: "mbox", scope: !8762, file: !3, line: 3204, type: !6245)
!8772 = !DILocation(line: 3204, column: 23, scope: !8762)
!8773 = !DILocation(line: 3204, column: 31, scope: !8762)
!8774 = !DILocation(line: 3204, column: 40, scope: !8762)
!8775 = !DILocation(line: 3206, column: 2, scope: !8762)
!8776 = !DILocation(line: 3206, column: 35, scope: !8762)
!8777 = !DILocation(line: 3206, column: 9, scope: !8762)
!8778 = !DILocation(line: 3207, column: 3, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 3207, column: 3)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 3207, column: 3)
!8781 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 3207, column: 3)
!8782 = distinct !DILexicalBlock(scope: !8762, file: !3, line: 3207, column: 3)
!8783 = distinct !{!8783, !8775, !8784}
!8784 = !DILocation(line: 3207, column: 3, scope: !8762)
!8785 = !DILocation(line: 3208, column: 27, scope: !8762)
!8786 = !DILocation(line: 3208, column: 33, scope: !8762)
!8787 = !DILocation(line: 3208, column: 2, scope: !8762)
!8788 = !DILocation(line: 3209, column: 28, scope: !8762)
!8789 = !DILocation(line: 3209, column: 2, scope: !8762)
!8790 = !DILocation(line: 3210, column: 1, scope: !8762)
!8791 = distinct !DISubprogram(name: "DAC960_PD_hw_mbox_is_full", scope: !3, file: !3, line: 3121, type: !7479, scopeLine: 3122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8792 = !DILocalVariable(name: "base", arg: 1, scope: !8791, file: !3, line: 3121, type: !973)
!8793 = !DILocation(line: 3121, column: 60, scope: !8791)
!8794 = !DILocalVariable(name: "idb", scope: !8791, file: !3, line: 3123, type: !165)
!8795 = !DILocation(line: 3123, column: 16, scope: !8791)
!8796 = !DILocation(line: 3123, column: 28, scope: !8791)
!8797 = !DILocation(line: 3123, column: 33, scope: !8791)
!8798 = !DILocation(line: 3123, column: 22, scope: !8791)
!8799 = !DILocation(line: 3125, column: 9, scope: !8791)
!8800 = !DILocation(line: 3125, column: 13, scope: !8791)
!8801 = !DILocation(line: 3125, column: 2, scope: !8791)
!8802 = distinct !DISubprogram(name: "DAC960_PD_write_cmd_mbox", scope: !3, file: !3, line: 3164, type: !8034, scopeLine: 3166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8803 = !DILocalVariable(name: "base", arg: 1, scope: !8802, file: !3, line: 3164, type: !973)
!8804 = !DILocation(line: 3164, column: 59, scope: !8802)
!8805 = !DILocalVariable(name: "mbox", arg: 2, scope: !8802, file: !3, line: 3165, type: !6245)
!8806 = !DILocation(line: 3165, column: 24, scope: !8802)
!8807 = !DILocation(line: 3167, column: 9, scope: !8802)
!8808 = !DILocation(line: 3167, column: 15, scope: !8802)
!8809 = !DILocation(line: 3167, column: 25, scope: !8802)
!8810 = !DILocation(line: 3167, column: 30, scope: !8802)
!8811 = !DILocation(line: 3167, column: 2, scope: !8802)
!8812 = !DILocation(line: 3168, column: 9, scope: !8802)
!8813 = !DILocation(line: 3168, column: 15, scope: !8802)
!8814 = !DILocation(line: 3168, column: 25, scope: !8802)
!8815 = !DILocation(line: 3168, column: 30, scope: !8802)
!8816 = !DILocation(line: 3168, column: 2, scope: !8802)
!8817 = !DILocation(line: 3169, column: 9, scope: !8802)
!8818 = !DILocation(line: 3169, column: 15, scope: !8802)
!8819 = !DILocation(line: 3169, column: 25, scope: !8802)
!8820 = !DILocation(line: 3169, column: 30, scope: !8802)
!8821 = !DILocation(line: 3169, column: 2, scope: !8802)
!8822 = !DILocation(line: 3170, column: 9, scope: !8802)
!8823 = !DILocation(line: 3170, column: 15, scope: !8802)
!8824 = !DILocation(line: 3170, column: 26, scope: !8802)
!8825 = !DILocation(line: 3170, column: 31, scope: !8802)
!8826 = !DILocation(line: 3170, column: 2, scope: !8802)
!8827 = !DILocation(line: 3171, column: 1, scope: !8802)
!8828 = distinct !DISubprogram(name: "DAC960_PD_hw_mbox_new_cmd", scope: !3, file: !3, line: 3101, type: !1241, scopeLine: 3102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8829 = !DILocalVariable(name: "base", arg: 1, scope: !8828, file: !3, line: 3101, type: !973)
!8830 = !DILocation(line: 3101, column: 60, scope: !8828)
!8831 = !DILocation(line: 3103, column: 39, scope: !8828)
!8832 = !DILocation(line: 3103, column: 44, scope: !8828)
!8833 = !DILocation(line: 3103, column: 2, scope: !8828)
!8834 = !DILocation(line: 3104, column: 1, scope: !8828)
!8835 = distinct !DISubprogram(name: "DAC960_PD_hw_mbox_status_available", scope: !3, file: !3, line: 3140, type: !7479, scopeLine: 3141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8836 = !DILocalVariable(name: "base", arg: 1, scope: !8835, file: !3, line: 3140, type: !973)
!8837 = !DILocation(line: 3140, column: 69, scope: !8835)
!8838 = !DILocalVariable(name: "odb", scope: !8835, file: !3, line: 3142, type: !165)
!8839 = !DILocation(line: 3142, column: 16, scope: !8835)
!8840 = !DILocation(line: 3142, column: 28, scope: !8835)
!8841 = !DILocation(line: 3142, column: 33, scope: !8835)
!8842 = !DILocation(line: 3142, column: 22, scope: !8835)
!8843 = !DILocation(line: 3144, column: 9, scope: !8835)
!8844 = !DILocation(line: 3144, column: 13, scope: !8835)
!8845 = !DILocation(line: 3144, column: 2, scope: !8835)
!8846 = distinct !DISubprogram(name: "DAC960_PD_read_status_cmd_ident", scope: !3, file: !3, line: 3174, type: !8847, scopeLine: 3175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8847 = !DISubroutineType(types: !8848)
!8848 = !{!165, !973}
!8849 = !DILocalVariable(name: "base", arg: 1, scope: !8846, file: !3, line: 3174, type: !973)
!8850 = !DILocation(line: 3174, column: 47, scope: !8846)
!8851 = !DILocation(line: 3176, column: 15, scope: !8846)
!8852 = !DILocation(line: 3176, column: 20, scope: !8846)
!8853 = !DILocation(line: 3176, column: 9, scope: !8846)
!8854 = !DILocation(line: 3176, column: 2, scope: !8846)
!8855 = distinct !DISubprogram(name: "DAC960_PD_read_status", scope: !3, file: !3, line: 3180, type: !8073, scopeLine: 3181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8856 = !DILocalVariable(name: "base", arg: 1, scope: !8855, file: !3, line: 3180, type: !973)
!8857 = !DILocation(line: 3180, column: 37, scope: !8855)
!8858 = !DILocation(line: 3182, column: 15, scope: !8855)
!8859 = !DILocation(line: 3182, column: 20, scope: !8855)
!8860 = !DILocation(line: 3182, column: 9, scope: !8855)
!8861 = !DILocation(line: 3182, column: 2, scope: !8855)
!8862 = distinct !DISubprogram(name: "DAC960_PD_ack_intr", scope: !3, file: !3, line: 3135, type: !1241, scopeLine: 3136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8863 = !DILocalVariable(name: "base", arg: 1, scope: !8862, file: !3, line: 3135, type: !973)
!8864 = !DILocation(line: 3135, column: 53, scope: !8862)
!8865 = !DILocation(line: 3137, column: 39, scope: !8862)
!8866 = !DILocation(line: 3137, column: 44, scope: !8862)
!8867 = !DILocation(line: 3137, column: 2, scope: !8862)
!8868 = !DILocation(line: 3138, column: 1, scope: !8862)
!8869 = distinct !DISubprogram(name: "DAC960_P_qcmd", scope: !3, file: !3, line: 3340, type: !6223, scopeLine: 3341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8870 = !DILocalVariable(name: "cb", arg: 1, scope: !8869, file: !3, line: 3340, type: !5760)
!8871 = !DILocation(line: 3340, column: 44, scope: !8869)
!8872 = !DILocalVariable(name: "cmd_blk", arg: 2, scope: !8869, file: !3, line: 3340, type: !6225)
!8873 = !DILocation(line: 3340, column: 68, scope: !8869)
!8874 = !DILocalVariable(name: "base", scope: !8869, file: !3, line: 3342, type: !973)
!8875 = !DILocation(line: 3342, column: 16, scope: !8869)
!8876 = !DILocation(line: 3342, column: 23, scope: !8869)
!8877 = !DILocation(line: 3342, column: 27, scope: !8869)
!8878 = !DILocalVariable(name: "mbox", scope: !8869, file: !3, line: 3343, type: !6245)
!8879 = !DILocation(line: 3343, column: 23, scope: !8869)
!8880 = !DILocation(line: 3343, column: 31, scope: !8869)
!8881 = !DILocation(line: 3343, column: 40, scope: !8869)
!8882 = !DILocation(line: 3345, column: 10, scope: !8869)
!8883 = !DILocation(line: 3345, column: 16, scope: !8869)
!8884 = !DILocation(line: 3345, column: 23, scope: !8869)
!8885 = !DILocation(line: 3345, column: 2, scope: !8869)
!8886 = !DILocation(line: 3347, column: 3, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8869, file: !3, line: 3345, column: 31)
!8888 = !DILocation(line: 3347, column: 9, scope: !8887)
!8889 = !DILocation(line: 3347, column: 16, scope: !8887)
!8890 = !DILocation(line: 3347, column: 23, scope: !8887)
!8891 = !DILocation(line: 3348, column: 3, scope: !8887)
!8892 = !DILocation(line: 3350, column: 3, scope: !8887)
!8893 = !DILocation(line: 3350, column: 9, scope: !8887)
!8894 = !DILocation(line: 3350, column: 16, scope: !8887)
!8895 = !DILocation(line: 3350, column: 23, scope: !8887)
!8896 = !DILocation(line: 3351, column: 3, scope: !8887)
!8897 = !DILocation(line: 3353, column: 3, scope: !8887)
!8898 = !DILocation(line: 3353, column: 9, scope: !8887)
!8899 = !DILocation(line: 3353, column: 16, scope: !8887)
!8900 = !DILocation(line: 3353, column: 23, scope: !8887)
!8901 = !DILocation(line: 3354, column: 32, scope: !8887)
!8902 = !DILocation(line: 3354, column: 3, scope: !8887)
!8903 = !DILocation(line: 3355, column: 3, scope: !8887)
!8904 = !DILocation(line: 3357, column: 3, scope: !8887)
!8905 = !DILocation(line: 3357, column: 9, scope: !8887)
!8906 = !DILocation(line: 3357, column: 16, scope: !8887)
!8907 = !DILocation(line: 3357, column: 23, scope: !8887)
!8908 = !DILocation(line: 3358, column: 32, scope: !8887)
!8909 = !DILocation(line: 3358, column: 3, scope: !8887)
!8910 = !DILocation(line: 3359, column: 3, scope: !8887)
!8911 = !DILocation(line: 3361, column: 3, scope: !8887)
!8912 = !DILocation(line: 3361, column: 9, scope: !8887)
!8913 = !DILocation(line: 3361, column: 16, scope: !8887)
!8914 = !DILocation(line: 3361, column: 23, scope: !8887)
!8915 = !DILocation(line: 3362, column: 32, scope: !8887)
!8916 = !DILocation(line: 3362, column: 3, scope: !8887)
!8917 = !DILocation(line: 3363, column: 3, scope: !8887)
!8918 = !DILocation(line: 3365, column: 3, scope: !8887)
!8919 = !DILocation(line: 3365, column: 9, scope: !8887)
!8920 = !DILocation(line: 3365, column: 16, scope: !8887)
!8921 = !DILocation(line: 3365, column: 23, scope: !8887)
!8922 = !DILocation(line: 3366, column: 32, scope: !8887)
!8923 = !DILocation(line: 3366, column: 3, scope: !8887)
!8924 = !DILocation(line: 3367, column: 3, scope: !8887)
!8925 = !DILocation(line: 3369, column: 3, scope: !8887)
!8926 = !DILocation(line: 3371, column: 2, scope: !8869)
!8927 = !DILocation(line: 3371, column: 35, scope: !8869)
!8928 = !DILocation(line: 3371, column: 9, scope: !8869)
!8929 = !DILocation(line: 3372, column: 3, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 3372, column: 3)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 3372, column: 3)
!8932 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 3372, column: 3)
!8933 = distinct !DILexicalBlock(scope: !8869, file: !3, line: 3372, column: 3)
!8934 = distinct !{!8934, !8926, !8935}
!8935 = !DILocation(line: 3372, column: 3, scope: !8869)
!8936 = !DILocation(line: 3373, column: 27, scope: !8869)
!8937 = !DILocation(line: 3373, column: 33, scope: !8869)
!8938 = !DILocation(line: 3373, column: 2, scope: !8869)
!8939 = !DILocation(line: 3374, column: 28, scope: !8869)
!8940 = !DILocation(line: 3374, column: 2, scope: !8869)
!8941 = !DILocation(line: 3375, column: 1, scope: !8869)
!8942 = distinct !DISubprogram(name: "myrb_translate_to_rw_command", scope: !3, file: !3, line: 3320, type: !8943, scopeLine: 3321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{null, !6225}
!8945 = !DILocalVariable(name: "cmd_blk", arg: 1, scope: !8942, file: !3, line: 3320, type: !6225)
!8946 = !DILocation(line: 3320, column: 69, scope: !8942)
!8947 = !DILocalVariable(name: "mbox", scope: !8942, file: !3, line: 3322, type: !6245)
!8948 = !DILocation(line: 3322, column: 23, scope: !8942)
!8949 = !DILocation(line: 3322, column: 31, scope: !8942)
!8950 = !DILocation(line: 3322, column: 40, scope: !8942)
!8951 = !DILocalVariable(name: "ldev_num", scope: !8942, file: !3, line: 3323, type: !913)
!8952 = !DILocation(line: 3323, column: 6, scope: !8942)
!8953 = !DILocation(line: 3323, column: 17, scope: !8942)
!8954 = !DILocation(line: 3323, column: 23, scope: !8942)
!8955 = !DILocation(line: 3323, column: 29, scope: !8942)
!8956 = !DILocation(line: 3323, column: 32, scope: !8942)
!8957 = !DILocation(line: 3325, column: 2, scope: !8942)
!8958 = !DILocation(line: 3325, column: 8, scope: !8942)
!8959 = !DILocation(line: 3325, column: 17, scope: !8942)
!8960 = !DILocation(line: 3326, column: 20, scope: !8942)
!8961 = !DILocation(line: 3326, column: 26, scope: !8942)
!8962 = !DILocation(line: 3326, column: 35, scope: !8942)
!8963 = !DILocation(line: 3326, column: 2, scope: !8942)
!8964 = !DILocation(line: 3326, column: 8, scope: !8942)
!8965 = !DILocation(line: 3326, column: 17, scope: !8942)
!8966 = !DILocation(line: 3327, column: 19, scope: !8942)
!8967 = !DILocation(line: 3327, column: 2, scope: !8942)
!8968 = !DILocation(line: 3327, column: 8, scope: !8942)
!8969 = !DILocation(line: 3327, column: 17, scope: !8942)
!8970 = !DILocation(line: 3328, column: 1, scope: !8942)
!8971 = distinct !DISubprogram(name: "myrb_translate_enquiry", scope: !3, file: !3, line: 3307, type: !1241, scopeLine: 3308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8972 = !DILocalVariable(name: "enq", arg: 1, scope: !8971, file: !3, line: 3307, type: !973)
!8973 = !DILocation(line: 3307, column: 49, scope: !8971)
!8974 = !DILocation(line: 3309, column: 9, scope: !8971)
!8975 = !DILocation(line: 3309, column: 13, scope: !8971)
!8976 = !DILocation(line: 3309, column: 20, scope: !8971)
!8977 = !DILocation(line: 3309, column: 24, scope: !8971)
!8978 = !DILocation(line: 3309, column: 2, scope: !8971)
!8979 = !DILocation(line: 3310, column: 9, scope: !8971)
!8980 = !DILocation(line: 3310, column: 13, scope: !8971)
!8981 = !DILocation(line: 3310, column: 2, scope: !8971)
!8982 = !DILocation(line: 3311, column: 1, scope: !8971)
!8983 = distinct !DISubprogram(name: "myrb_translate_from_rw_command", scope: !3, file: !3, line: 3330, type: !8943, scopeLine: 3331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!8984 = !DILocalVariable(name: "cmd_blk", arg: 1, scope: !8983, file: !3, line: 3330, type: !6225)
!8985 = !DILocation(line: 3330, column: 71, scope: !8983)
!8986 = !DILocalVariable(name: "mbox", scope: !8983, file: !3, line: 3332, type: !6245)
!8987 = !DILocation(line: 3332, column: 23, scope: !8983)
!8988 = !DILocation(line: 3332, column: 31, scope: !8983)
!8989 = !DILocation(line: 3332, column: 40, scope: !8983)
!8990 = !DILocalVariable(name: "ldev_num", scope: !8983, file: !3, line: 3333, type: !913)
!8991 = !DILocation(line: 3333, column: 6, scope: !8983)
!8992 = !DILocation(line: 3333, column: 17, scope: !8983)
!8993 = !DILocation(line: 3333, column: 23, scope: !8983)
!8994 = !DILocation(line: 3335, column: 19, scope: !8983)
!8995 = !DILocation(line: 3335, column: 25, scope: !8983)
!8996 = !DILocation(line: 3335, column: 34, scope: !8983)
!8997 = !DILocation(line: 3335, column: 2, scope: !8983)
!8998 = !DILocation(line: 3335, column: 8, scope: !8983)
!8999 = !DILocation(line: 3335, column: 17, scope: !8983)
!9000 = !DILocation(line: 3336, column: 2, scope: !8983)
!9001 = !DILocation(line: 3336, column: 8, scope: !8983)
!9002 = !DILocation(line: 3336, column: 17, scope: !8983)
!9003 = !DILocation(line: 3337, column: 20, scope: !8983)
!9004 = !DILocation(line: 3337, column: 29, scope: !8983)
!9005 = !DILocation(line: 3337, column: 2, scope: !8983)
!9006 = !DILocation(line: 3337, column: 8, scope: !8983)
!9007 = !DILocation(line: 3337, column: 17, scope: !8983)
!9008 = !DILocation(line: 3338, column: 1, scope: !8983)
!9009 = distinct !DISubprogram(name: "myrb_probe", scope: !3, file: !3, line: 3559, type: !5612, scopeLine: 3560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9010 = !DILocalVariable(name: "dev", arg: 1, scope: !9009, file: !3, line: 3559, type: !914)
!9011 = !DILocation(line: 3559, column: 39, scope: !9009)
!9012 = !DILocalVariable(name: "entry", arg: 2, scope: !9009, file: !3, line: 3559, type: !5599)
!9013 = !DILocation(line: 3559, column: 72, scope: !9009)
!9014 = !DILocalVariable(name: "cb", scope: !9009, file: !3, line: 3561, type: !5760)
!9015 = !DILocation(line: 3561, column: 19, scope: !9009)
!9016 = !DILocalVariable(name: "ret", scope: !9009, file: !3, line: 3562, type: !913)
!9017 = !DILocation(line: 3562, column: 6, scope: !9009)
!9018 = !DILocation(line: 3564, column: 19, scope: !9009)
!9019 = !DILocation(line: 3564, column: 24, scope: !9009)
!9020 = !DILocation(line: 3564, column: 7, scope: !9009)
!9021 = !DILocation(line: 3564, column: 5, scope: !9009)
!9022 = !DILocation(line: 3565, column: 7, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 3565, column: 6)
!9024 = !DILocation(line: 3565, column: 6, scope: !9009)
!9025 = !DILocation(line: 3566, column: 3, scope: !9023)
!9026 = !DILocation(line: 3568, column: 28, scope: !9009)
!9027 = !DILocation(line: 3568, column: 8, scope: !9009)
!9028 = !DILocation(line: 3568, column: 6, scope: !9009)
!9029 = !DILocation(line: 3569, column: 6, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 3569, column: 6)
!9031 = !DILocation(line: 3569, column: 10, scope: !9030)
!9032 = !DILocation(line: 3569, column: 6, scope: !9009)
!9033 = !DILocation(line: 3570, column: 16, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 3569, column: 15)
!9035 = !DILocation(line: 3570, column: 3, scope: !9034)
!9036 = !DILocation(line: 3571, column: 10, scope: !9034)
!9037 = !DILocation(line: 3571, column: 3, scope: !9034)
!9038 = !DILocation(line: 3574, column: 28, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 3574, column: 6)
!9040 = !DILocation(line: 3574, column: 33, scope: !9039)
!9041 = !DILocation(line: 3574, column: 7, scope: !9039)
!9042 = !DILocation(line: 3574, column: 6, scope: !9009)
!9043 = !DILocation(line: 3575, column: 7, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 3574, column: 38)
!9045 = !DILocation(line: 3576, column: 3, scope: !9044)
!9046 = !DILocation(line: 3579, column: 22, scope: !9009)
!9047 = !DILocation(line: 3579, column: 26, scope: !9009)
!9048 = !DILocation(line: 3579, column: 33, scope: !9009)
!9049 = !DILocation(line: 3579, column: 38, scope: !9009)
!9050 = !DILocation(line: 3579, column: 8, scope: !9009)
!9051 = !DILocation(line: 3579, column: 6, scope: !9009)
!9052 = !DILocation(line: 3580, column: 6, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 3580, column: 6)
!9054 = !DILocation(line: 3580, column: 6, scope: !9009)
!9055 = !DILocation(line: 3581, column: 3, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 3580, column: 11)
!9057 = !DILocation(line: 3582, column: 25, scope: !9056)
!9058 = !DILocation(line: 3582, column: 3, scope: !9056)
!9059 = !DILocation(line: 3583, column: 3, scope: !9056)
!9060 = !DILocation(line: 3585, column: 17, scope: !9009)
!9061 = !DILocation(line: 3585, column: 21, scope: !9009)
!9062 = !DILocation(line: 3585, column: 2, scope: !9009)
!9063 = !DILocation(line: 3586, column: 2, scope: !9009)
!9064 = !DILabel(scope: !9009, name: "failed", file: !3, line: 3587)
!9065 = !DILocation(line: 3587, column: 1, scope: !9009)
!9066 = !DILocation(line: 3588, column: 15, scope: !9009)
!9067 = !DILocation(line: 3588, column: 2, scope: !9009)
!9068 = !DILocation(line: 3589, column: 9, scope: !9009)
!9069 = !DILocation(line: 3589, column: 2, scope: !9009)
!9070 = !DILocation(line: 3590, column: 1, scope: !9009)
!9071 = distinct !DISubprogram(name: "myrb_remove", scope: !3, file: !3, line: 3593, type: !5616, scopeLine: 3594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9072 = !DILocalVariable(name: "pdev", arg: 1, scope: !9071, file: !3, line: 3593, type: !914)
!9073 = !DILocation(line: 3593, column: 41, scope: !9071)
!9074 = !DILocalVariable(name: "cb", scope: !9071, file: !3, line: 3595, type: !5760)
!9075 = !DILocation(line: 3595, column: 19, scope: !9071)
!9076 = !DILocation(line: 3595, column: 40, scope: !9071)
!9077 = !DILocation(line: 3595, column: 24, scope: !9071)
!9078 = !DILocation(line: 3597, column: 2, scope: !9071)
!9079 = !DILocation(line: 3598, column: 18, scope: !9071)
!9080 = !DILocation(line: 3598, column: 2, scope: !9071)
!9081 = !DILocation(line: 3599, column: 15, scope: !9071)
!9082 = !DILocation(line: 3599, column: 2, scope: !9071)
!9083 = !DILocation(line: 3600, column: 24, scope: !9071)
!9084 = !DILocation(line: 3600, column: 2, scope: !9071)
!9085 = !DILocation(line: 3601, column: 1, scope: !9071)
!9086 = !DILocation(line: 327, column: 67, scope: !6570, inlinedAt: !9087)
!9087 = distinct !DILocation(line: 3530, column: 2, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3530, column: 2)
!9089 = !DILocalVariable(name: "pdev", arg: 1, scope: !6399, file: !3, line: 3497, type: !914)
!9090 = !DILocation(line: 3497, column: 53, scope: !6399)
!9091 = !DILocalVariable(name: "entry", arg: 2, scope: !6399, file: !3, line: 3498, type: !5599)
!9092 = !DILocation(line: 3498, column: 31, scope: !6399)
!9093 = !DILocalVariable(name: "privdata", scope: !6399, file: !3, line: 3500, type: !905)
!9094 = !DILocation(line: 3500, column: 24, scope: !6399)
!9095 = !DILocation(line: 3501, column: 27, scope: !6399)
!9096 = !DILocation(line: 3501, column: 34, scope: !6399)
!9097 = !DILocation(line: 3501, column: 3, scope: !6399)
!9098 = !DILocalVariable(name: "irq_handler", scope: !6399, file: !3, line: 3502, type: !6306)
!9099 = !DILocation(line: 3502, column: 16, scope: !6399)
!9100 = !DILocation(line: 3502, column: 30, scope: !6399)
!9101 = !DILocation(line: 3502, column: 40, scope: !6399)
!9102 = !DILocalVariable(name: "mmio_size", scope: !6399, file: !3, line: 3503, type: !7)
!9103 = !DILocation(line: 3503, column: 15, scope: !6399)
!9104 = !DILocation(line: 3503, column: 27, scope: !6399)
!9105 = !DILocation(line: 3503, column: 37, scope: !6399)
!9106 = !DILocalVariable(name: "shost", scope: !6399, file: !3, line: 3504, type: !5782)
!9107 = !DILocation(line: 3504, column: 20, scope: !6399)
!9108 = !DILocalVariable(name: "cb", scope: !6399, file: !3, line: 3505, type: !5760)
!9109 = !DILocation(line: 3505, column: 19, scope: !6399)
!9110 = !DILocation(line: 3507, column: 10, scope: !6399)
!9111 = !DILocation(line: 3507, column: 8, scope: !6399)
!9112 = !DILocation(line: 3508, column: 7, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3508, column: 6)
!9114 = !DILocation(line: 3508, column: 6, scope: !6399)
!9115 = !DILocation(line: 3509, column: 3, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9113, file: !3, line: 3508, column: 14)
!9117 = !DILocation(line: 3510, column: 3, scope: !9116)
!9118 = !DILocation(line: 3512, column: 2, scope: !6399)
!9119 = !DILocation(line: 3512, column: 9, scope: !6399)
!9120 = !DILocation(line: 3512, column: 21, scope: !6399)
!9121 = !DILocation(line: 3513, column: 2, scope: !6399)
!9122 = !DILocation(line: 3513, column: 9, scope: !6399)
!9123 = !DILocation(line: 3513, column: 17, scope: !6399)
!9124 = !DILocation(line: 3514, column: 18, scope: !6399)
!9125 = !DILocation(line: 3514, column: 7, scope: !6399)
!9126 = !DILocation(line: 3514, column: 5, scope: !6399)
!9127 = !DILocation(line: 3515, column: 2, scope: !6399)
!9128 = !DILocation(line: 3515, column: 2, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3515, column: 2)
!9130 = !DILocation(line: 3516, column: 2, scope: !6399)
!9131 = !DILocation(line: 3516, column: 2, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3516, column: 2)
!9133 = !DILocation(line: 3517, column: 13, scope: !6399)
!9134 = !DILocation(line: 3517, column: 2, scope: !6399)
!9135 = !DILocation(line: 3517, column: 6, scope: !6399)
!9136 = !DILocation(line: 3517, column: 11, scope: !6399)
!9137 = !DILocation(line: 3519, column: 24, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3519, column: 6)
!9139 = !DILocation(line: 3519, column: 6, scope: !9138)
!9140 = !DILocation(line: 3519, column: 6, scope: !6399)
!9141 = !DILocation(line: 3520, column: 3, scope: !9138)
!9142 = !DILocation(line: 3522, column: 6, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3522, column: 6)
!9144 = !DILocation(line: 3522, column: 16, scope: !9143)
!9145 = !DILocation(line: 3522, column: 24, scope: !9143)
!9146 = !DILocation(line: 3522, column: 45, scope: !9143)
!9147 = !DILocation(line: 3523, column: 6, scope: !9143)
!9148 = !DILocation(line: 3523, column: 16, scope: !9143)
!9149 = !DILocation(line: 3523, column: 24, scope: !9143)
!9150 = !DILocation(line: 3522, column: 6, scope: !6399)
!9151 = !DILocation(line: 3524, column: 17, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 3523, column: 45)
!9153 = !DILocation(line: 3524, column: 3, scope: !9152)
!9154 = !DILocation(line: 3524, column: 7, scope: !9152)
!9155 = !DILocation(line: 3524, column: 15, scope: !9152)
!9156 = !DILocation(line: 3525, column: 18, scope: !9152)
!9157 = !DILocation(line: 3525, column: 3, scope: !9152)
!9158 = !DILocation(line: 3525, column: 7, scope: !9152)
!9159 = !DILocation(line: 3525, column: 16, scope: !9152)
!9160 = !DILocation(line: 3526, column: 2, scope: !9152)
!9161 = !DILocation(line: 3527, column: 18, scope: !9143)
!9162 = !DILocation(line: 3527, column: 3, scope: !9143)
!9163 = !DILocation(line: 3527, column: 7, scope: !9143)
!9164 = !DILocation(line: 3527, column: 16, scope: !9143)
!9165 = !DILocation(line: 3529, column: 18, scope: !6399)
!9166 = !DILocation(line: 3529, column: 24, scope: !6399)
!9167 = !DILocation(line: 3529, column: 2, scope: !6399)
!9168 = !DILocation(line: 3530, column: 2, scope: !6399)
!9169 = !DILocation(line: 3530, column: 2, scope: !9088)
!9170 = !DILocation(line: 329, column: 10, scope: !6570, inlinedAt: !9087)
!9171 = !DILocation(line: 329, column: 16, scope: !6570, inlinedAt: !9087)
!9172 = !DILocation(line: 3531, column: 6, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3531, column: 6)
!9174 = !DILocation(line: 3531, column: 16, scope: !9173)
!9175 = !DILocation(line: 3531, column: 6, scope: !6399)
!9176 = !DILocation(line: 3532, column: 13, scope: !9173)
!9177 = !DILocation(line: 3532, column: 3, scope: !9173)
!9178 = !DILocation(line: 3533, column: 26, scope: !6399)
!9179 = !DILocation(line: 3533, column: 30, scope: !6399)
!9180 = !DILocation(line: 3533, column: 39, scope: !6399)
!9181 = !DILocation(line: 3533, column: 52, scope: !6399)
!9182 = !DILocation(line: 3533, column: 18, scope: !6399)
!9183 = !DILocation(line: 3533, column: 2, scope: !6399)
!9184 = !DILocation(line: 3533, column: 6, scope: !6399)
!9185 = !DILocation(line: 3533, column: 16, scope: !6399)
!9186 = !DILocation(line: 3534, column: 6, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3534, column: 6)
!9188 = !DILocation(line: 3534, column: 10, scope: !9187)
!9189 = !DILocation(line: 3534, column: 20, scope: !9187)
!9190 = !DILocation(line: 3534, column: 6, scope: !6399)
!9191 = !DILocation(line: 3535, column: 3, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 3534, column: 29)
!9193 = !DILocation(line: 3537, column: 3, scope: !9192)
!9194 = !DILocation(line: 3540, column: 16, scope: !6399)
!9195 = !DILocation(line: 3540, column: 20, scope: !6399)
!9196 = !DILocation(line: 3540, column: 33, scope: !6399)
!9197 = !DILocation(line: 3540, column: 37, scope: !6399)
!9198 = !DILocation(line: 3540, column: 46, scope: !6399)
!9199 = !DILocation(line: 3540, column: 30, scope: !6399)
!9200 = !DILocation(line: 3540, column: 2, scope: !6399)
!9201 = !DILocation(line: 3540, column: 6, scope: !6399)
!9202 = !DILocation(line: 3540, column: 14, scope: !6399)
!9203 = !DILocation(line: 3541, column: 6, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3541, column: 6)
!9205 = !DILocation(line: 3541, column: 16, scope: !9204)
!9206 = !DILocation(line: 3541, column: 24, scope: !9204)
!9207 = !DILocation(line: 3541, column: 30, scope: !9204)
!9208 = !DILocation(line: 3541, column: 34, scope: !9204)
!9209 = !DILocation(line: 3541, column: 38, scope: !9204)
!9210 = !DILocation(line: 3541, column: 6, scope: !6399)
!9211 = !DILocation(line: 3542, column: 3, scope: !9204)
!9212 = !DILocation(line: 3544, column: 18, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3544, column: 6)
!9214 = !DILocation(line: 3544, column: 24, scope: !9213)
!9215 = !DILocation(line: 3544, column: 29, scope: !9213)
!9216 = !DILocation(line: 3544, column: 63, scope: !9213)
!9217 = !DILocation(line: 3544, column: 6, scope: !9213)
!9218 = !DILocation(line: 3544, column: 67, scope: !9213)
!9219 = !DILocation(line: 3544, column: 6, scope: !6399)
!9220 = !DILocation(line: 3545, column: 3, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 3544, column: 72)
!9222 = !DILocation(line: 3547, column: 3, scope: !9221)
!9223 = !DILocation(line: 3549, column: 12, scope: !6399)
!9224 = !DILocation(line: 3549, column: 18, scope: !6399)
!9225 = !DILocation(line: 3549, column: 2, scope: !6399)
!9226 = !DILocation(line: 3549, column: 6, scope: !6399)
!9227 = !DILocation(line: 3549, column: 10, scope: !6399)
!9228 = !DILocation(line: 3550, column: 9, scope: !6399)
!9229 = !DILocation(line: 3550, column: 2, scope: !6399)
!9230 = !DILabel(scope: !6399, name: "failure", file: !3, line: 3552)
!9231 = !DILocation(line: 3552, column: 1, scope: !6399)
!9232 = !DILocation(line: 3553, column: 2, scope: !6399)
!9233 = !DILocation(line: 3555, column: 15, scope: !6399)
!9234 = !DILocation(line: 3555, column: 2, scope: !6399)
!9235 = !DILocation(line: 3556, column: 2, scope: !6399)
!9236 = !DILocation(line: 3557, column: 1, scope: !6399)
!9237 = distinct !DISubprogram(name: "myrb_get_hba_config", scope: !3, file: !3, line: 913, type: !9238, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9238 = !DISubroutineType(types: !9239)
!9239 = !{!913, !5760}
!9240 = !DILocalVariable(name: "cb", arg: 1, scope: !9237, file: !3, line: 913, type: !5760)
!9241 = !DILocation(line: 913, column: 49, scope: !9237)
!9242 = !DILocalVariable(name: "enquiry2", scope: !9237, file: !3, line: 915, type: !9243)
!9243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!9244 = !DILocation(line: 915, column: 24, scope: !9237)
!9245 = !DILocalVariable(name: "enquiry2_addr", scope: !9237, file: !3, line: 916, type: !1761)
!9246 = !DILocation(line: 916, column: 13, scope: !9237)
!9247 = !DILocalVariable(name: "config2", scope: !9237, file: !3, line: 917, type: !9248)
!9248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!9249 = !DILocation(line: 917, column: 23, scope: !9237)
!9250 = !DILocalVariable(name: "config2_addr", scope: !9237, file: !3, line: 918, type: !1761)
!9251 = !DILocation(line: 918, column: 13, scope: !9237)
!9252 = !DILocalVariable(name: "shost", scope: !9237, file: !3, line: 919, type: !5782)
!9253 = !DILocation(line: 919, column: 20, scope: !9237)
!9254 = !DILocation(line: 919, column: 28, scope: !9237)
!9255 = !DILocation(line: 919, column: 32, scope: !9237)
!9256 = !DILocalVariable(name: "pdev", scope: !9237, file: !3, line: 920, type: !914)
!9257 = !DILocation(line: 920, column: 18, scope: !9237)
!9258 = !DILocation(line: 920, column: 25, scope: !9237)
!9259 = !DILocation(line: 920, column: 29, scope: !9237)
!9260 = !DILocalVariable(name: "pchan_max", scope: !9237, file: !3, line: 921, type: !913)
!9261 = !DILocation(line: 921, column: 6, scope: !9237)
!9262 = !DILocalVariable(name: "pchan_cur", scope: !9237, file: !3, line: 921, type: !913)
!9263 = !DILocation(line: 921, column: 21, scope: !9237)
!9264 = !DILocalVariable(name: "status", scope: !9237, file: !3, line: 922, type: !320)
!9265 = !DILocation(line: 922, column: 17, scope: !9237)
!9266 = !DILocalVariable(name: "ret", scope: !9237, file: !3, line: 923, type: !913)
!9267 = !DILocation(line: 923, column: 6, scope: !9237)
!9268 = !DILocalVariable(name: "memsize", scope: !9237, file: !3, line: 923, type: !913)
!9269 = !DILocation(line: 923, column: 21, scope: !9237)
!9270 = !DILocation(line: 925, column: 33, scope: !9237)
!9271 = !DILocation(line: 925, column: 39, scope: !9237)
!9272 = !DILocation(line: 925, column: 13, scope: !9237)
!9273 = !DILocation(line: 925, column: 11, scope: !9237)
!9274 = !DILocation(line: 927, column: 7, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 927, column: 6)
!9276 = !DILocation(line: 927, column: 6, scope: !9237)
!9277 = !DILocation(line: 928, column: 3, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 927, column: 17)
!9279 = !DILocation(line: 930, column: 3, scope: !9278)
!9280 = !DILocation(line: 932, column: 32, scope: !9237)
!9281 = !DILocation(line: 932, column: 38, scope: !9237)
!9282 = !DILocation(line: 932, column: 12, scope: !9237)
!9283 = !DILocation(line: 932, column: 10, scope: !9237)
!9284 = !DILocation(line: 934, column: 7, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 934, column: 6)
!9286 = !DILocation(line: 934, column: 6, scope: !9237)
!9287 = !DILocation(line: 935, column: 3, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 934, column: 16)
!9289 = !DILocation(line: 937, column: 22, scope: !9288)
!9290 = !DILocation(line: 937, column: 28, scope: !9288)
!9291 = !DILocation(line: 938, column: 7, scope: !9288)
!9292 = !DILocation(line: 938, column: 17, scope: !9288)
!9293 = !DILocation(line: 937, column: 3, scope: !9288)
!9294 = !DILocation(line: 939, column: 3, scope: !9288)
!9295 = !DILocation(line: 941, column: 14, scope: !9237)
!9296 = !DILocation(line: 941, column: 18, scope: !9237)
!9297 = !DILocation(line: 941, column: 2, scope: !9237)
!9298 = !DILocation(line: 942, column: 28, scope: !9237)
!9299 = !DILocation(line: 942, column: 11, scope: !9237)
!9300 = !DILocation(line: 942, column: 9, scope: !9237)
!9301 = !DILocation(line: 943, column: 16, scope: !9237)
!9302 = !DILocation(line: 943, column: 20, scope: !9237)
!9303 = !DILocation(line: 943, column: 2, scope: !9237)
!9304 = !DILocation(line: 944, column: 6, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 944, column: 6)
!9306 = !DILocation(line: 944, column: 13, scope: !9305)
!9307 = !DILocation(line: 944, column: 6, scope: !9237)
!9308 = !DILocation(line: 945, column: 3, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 944, column: 37)
!9310 = !DILocation(line: 947, column: 3, scope: !9309)
!9311 = !DILocation(line: 950, column: 27, scope: !9237)
!9312 = !DILocation(line: 950, column: 50, scope: !9237)
!9313 = !DILocation(line: 950, column: 11, scope: !9237)
!9314 = !DILocation(line: 950, column: 9, scope: !9237)
!9315 = !DILocation(line: 951, column: 6, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 951, column: 6)
!9317 = !DILocation(line: 951, column: 13, scope: !9316)
!9318 = !DILocation(line: 951, column: 6, scope: !9237)
!9319 = !DILocation(line: 952, column: 3, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 951, column: 37)
!9321 = !DILocation(line: 954, column: 3, scope: !9320)
!9322 = !DILocation(line: 957, column: 27, scope: !9237)
!9323 = !DILocation(line: 957, column: 54, scope: !9237)
!9324 = !DILocation(line: 957, column: 11, scope: !9237)
!9325 = !DILocation(line: 957, column: 9, scope: !9237)
!9326 = !DILocation(line: 958, column: 6, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 958, column: 6)
!9328 = !DILocation(line: 958, column: 13, scope: !9327)
!9329 = !DILocation(line: 958, column: 6, scope: !9237)
!9330 = !DILocation(line: 959, column: 3, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 958, column: 37)
!9332 = !DILocation(line: 961, column: 3, scope: !9331)
!9333 = !DILocation(line: 964, column: 30, scope: !9237)
!9334 = !DILocation(line: 964, column: 11, scope: !9237)
!9335 = !DILocation(line: 964, column: 9, scope: !9237)
!9336 = !DILocation(line: 965, column: 6, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 965, column: 6)
!9338 = !DILocation(line: 965, column: 13, scope: !9337)
!9339 = !DILocation(line: 965, column: 6, scope: !9237)
!9340 = !DILocation(line: 966, column: 3, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 965, column: 37)
!9342 = !DILocation(line: 968, column: 3, scope: !9341)
!9343 = !DILocation(line: 974, column: 10, scope: !9237)
!9344 = !DILocation(line: 974, column: 20, scope: !9237)
!9345 = !DILocation(line: 974, column: 23, scope: !9237)
!9346 = !DILocation(line: 974, column: 2, scope: !9237)
!9347 = !DILocation(line: 976, column: 7, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 976, column: 7)
!9349 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 974, column: 34)
!9350 = !DILocation(line: 976, column: 17, scope: !9348)
!9351 = !DILocation(line: 976, column: 26, scope: !9348)
!9352 = !DILocation(line: 976, column: 36, scope: !9348)
!9353 = !DILocation(line: 976, column: 7, scope: !9349)
!9354 = !DILocation(line: 977, column: 11, scope: !9348)
!9355 = !DILocation(line: 977, column: 15, scope: !9348)
!9356 = !DILocation(line: 977, column: 4, scope: !9348)
!9357 = !DILocation(line: 979, column: 11, scope: !9348)
!9358 = !DILocation(line: 979, column: 15, scope: !9348)
!9359 = !DILocation(line: 979, column: 4, scope: !9348)
!9360 = !DILocation(line: 980, column: 3, scope: !9349)
!9361 = !DILocation(line: 982, column: 10, scope: !9349)
!9362 = !DILocation(line: 982, column: 14, scope: !9349)
!9363 = !DILocation(line: 982, column: 3, scope: !9349)
!9364 = !DILocation(line: 983, column: 3, scope: !9349)
!9365 = !DILocation(line: 985, column: 10, scope: !9349)
!9366 = !DILocation(line: 985, column: 14, scope: !9349)
!9367 = !DILocation(line: 985, column: 3, scope: !9349)
!9368 = !DILocation(line: 986, column: 3, scope: !9349)
!9369 = !DILocation(line: 988, column: 10, scope: !9349)
!9370 = !DILocation(line: 988, column: 14, scope: !9349)
!9371 = !DILocation(line: 988, column: 3, scope: !9349)
!9372 = !DILocation(line: 989, column: 3, scope: !9349)
!9373 = !DILocation(line: 991, column: 10, scope: !9349)
!9374 = !DILocation(line: 991, column: 14, scope: !9349)
!9375 = !DILocation(line: 991, column: 3, scope: !9349)
!9376 = !DILocation(line: 992, column: 3, scope: !9349)
!9377 = !DILocation(line: 994, column: 10, scope: !9349)
!9378 = !DILocation(line: 994, column: 14, scope: !9349)
!9379 = !DILocation(line: 994, column: 3, scope: !9349)
!9380 = !DILocation(line: 995, column: 3, scope: !9349)
!9381 = !DILocation(line: 997, column: 10, scope: !9349)
!9382 = !DILocation(line: 997, column: 14, scope: !9349)
!9383 = !DILocation(line: 997, column: 3, scope: !9349)
!9384 = !DILocation(line: 998, column: 3, scope: !9349)
!9385 = !DILocation(line: 1000, column: 10, scope: !9349)
!9386 = !DILocation(line: 1000, column: 14, scope: !9349)
!9387 = !DILocation(line: 1000, column: 3, scope: !9349)
!9388 = !DILocation(line: 1001, column: 3, scope: !9349)
!9389 = !DILocation(line: 1003, column: 10, scope: !9349)
!9390 = !DILocation(line: 1003, column: 14, scope: !9349)
!9391 = !DILocation(line: 1003, column: 3, scope: !9349)
!9392 = !DILocation(line: 1004, column: 3, scope: !9349)
!9393 = !DILocation(line: 1006, column: 10, scope: !9349)
!9394 = !DILocation(line: 1006, column: 14, scope: !9349)
!9395 = !DILocation(line: 1006, column: 3, scope: !9349)
!9396 = !DILocation(line: 1007, column: 3, scope: !9349)
!9397 = !DILocation(line: 1009, column: 3, scope: !9349)
!9398 = !DILocation(line: 1012, column: 3, scope: !9349)
!9399 = !DILocation(line: 1046, column: 6, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1046, column: 6)
!9401 = !DILocation(line: 1046, column: 16, scope: !9400)
!9402 = !DILocation(line: 1046, column: 19, scope: !9400)
!9403 = !DILocation(line: 1046, column: 33, scope: !9400)
!9404 = !DILocation(line: 1046, column: 6, scope: !9237)
!9405 = !DILocation(line: 1047, column: 32, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 1046, column: 39)
!9407 = !DILocation(line: 1047, column: 36, scope: !9406)
!9408 = !DILocation(line: 1047, column: 45, scope: !9406)
!9409 = !DILocation(line: 1047, column: 3, scope: !9406)
!9410 = !DILocation(line: 1047, column: 13, scope: !9406)
!9411 = !DILocation(line: 1047, column: 16, scope: !9406)
!9412 = !DILocation(line: 1047, column: 30, scope: !9406)
!9413 = !DILocation(line: 1048, column: 32, scope: !9406)
!9414 = !DILocation(line: 1048, column: 36, scope: !9406)
!9415 = !DILocation(line: 1048, column: 45, scope: !9406)
!9416 = !DILocation(line: 1048, column: 3, scope: !9406)
!9417 = !DILocation(line: 1048, column: 13, scope: !9406)
!9418 = !DILocation(line: 1048, column: 16, scope: !9406)
!9419 = !DILocation(line: 1048, column: 30, scope: !9406)
!9420 = !DILocation(line: 1049, column: 3, scope: !9406)
!9421 = !DILocation(line: 1049, column: 13, scope: !9406)
!9422 = !DILocation(line: 1049, column: 16, scope: !9406)
!9423 = !DILocation(line: 1049, column: 30, scope: !9406)
!9424 = !DILocation(line: 1050, column: 3, scope: !9406)
!9425 = !DILocation(line: 1050, column: 13, scope: !9406)
!9426 = !DILocation(line: 1050, column: 16, scope: !9406)
!9427 = !DILocation(line: 1050, column: 24, scope: !9406)
!9428 = !DILocation(line: 1051, column: 2, scope: !9406)
!9429 = !DILocation(line: 1052, column: 11, scope: !9237)
!9430 = !DILocation(line: 1052, column: 15, scope: !9237)
!9431 = !DILocation(line: 1054, column: 3, scope: !9237)
!9432 = !DILocation(line: 1054, column: 13, scope: !9237)
!9433 = !DILocation(line: 1054, column: 16, scope: !9237)
!9434 = !DILocation(line: 1055, column: 3, scope: !9237)
!9435 = !DILocation(line: 1055, column: 13, scope: !9237)
!9436 = !DILocation(line: 1055, column: 16, scope: !9237)
!9437 = !DILocation(line: 1056, column: 3, scope: !9237)
!9438 = !DILocation(line: 1056, column: 13, scope: !9237)
!9439 = !DILocation(line: 1056, column: 16, scope: !9237)
!9440 = !DILocation(line: 1057, column: 3, scope: !9237)
!9441 = !DILocation(line: 1057, column: 13, scope: !9237)
!9442 = !DILocation(line: 1057, column: 16, scope: !9237)
!9443 = !DILocation(line: 1052, column: 2, scope: !9237)
!9444 = !DILocation(line: 1058, column: 9, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1058, column: 6)
!9446 = !DILocation(line: 1058, column: 19, scope: !9445)
!9447 = !DILocation(line: 1058, column: 22, scope: !9445)
!9448 = !DILocation(line: 1058, column: 36, scope: !9445)
!9449 = !DILocation(line: 1058, column: 41, scope: !9445)
!9450 = !DILocation(line: 1059, column: 9, scope: !9445)
!9451 = !DILocation(line: 1059, column: 19, scope: !9445)
!9452 = !DILocation(line: 1059, column: 22, scope: !9445)
!9453 = !DILocation(line: 1059, column: 36, scope: !9445)
!9454 = !DILocation(line: 1059, column: 42, scope: !9445)
!9455 = !DILocation(line: 1060, column: 9, scope: !9445)
!9456 = !DILocation(line: 1060, column: 19, scope: !9445)
!9457 = !DILocation(line: 1060, column: 22, scope: !9445)
!9458 = !DILocation(line: 1060, column: 36, scope: !9445)
!9459 = !DILocation(line: 1060, column: 41, scope: !9445)
!9460 = !DILocation(line: 1061, column: 9, scope: !9445)
!9461 = !DILocation(line: 1061, column: 19, scope: !9445)
!9462 = !DILocation(line: 1061, column: 22, scope: !9445)
!9463 = !DILocation(line: 1061, column: 36, scope: !9445)
!9464 = !DILocation(line: 1061, column: 42, scope: !9445)
!9465 = !DILocation(line: 1062, column: 9, scope: !9445)
!9466 = !DILocation(line: 1062, column: 19, scope: !9445)
!9467 = !DILocation(line: 1062, column: 22, scope: !9445)
!9468 = !DILocation(line: 1062, column: 36, scope: !9445)
!9469 = !DILocation(line: 1062, column: 41, scope: !9445)
!9470 = !DILocation(line: 1063, column: 9, scope: !9445)
!9471 = !DILocation(line: 1063, column: 19, scope: !9445)
!9472 = !DILocation(line: 1063, column: 22, scope: !9445)
!9473 = !DILocation(line: 1063, column: 36, scope: !9445)
!9474 = !DILocation(line: 1063, column: 43, scope: !9445)
!9475 = !DILocation(line: 1064, column: 9, scope: !9445)
!9476 = !DILocation(line: 1064, column: 19, scope: !9445)
!9477 = !DILocation(line: 1064, column: 22, scope: !9445)
!9478 = !DILocation(line: 1064, column: 36, scope: !9445)
!9479 = !DILocation(line: 1064, column: 41, scope: !9445)
!9480 = !DILocation(line: 1065, column: 16, scope: !9445)
!9481 = !DILocation(line: 1065, column: 20, scope: !9445)
!9482 = !DILocation(line: 1065, column: 9, scope: !9445)
!9483 = !DILocation(line: 1065, column: 46, scope: !9445)
!9484 = !DILocation(line: 1058, column: 6, scope: !9237)
!9485 = !DILocation(line: 1066, column: 3, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 1065, column: 54)
!9487 = !DILocation(line: 1069, column: 3, scope: !9486)
!9488 = !DILocation(line: 1075, column: 10, scope: !9237)
!9489 = !DILocation(line: 1075, column: 20, scope: !9237)
!9490 = !DILocation(line: 1075, column: 23, scope: !9237)
!9491 = !DILocation(line: 1075, column: 2, scope: !9237)
!9492 = !DILocation(line: 1077, column: 13, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1075, column: 30)
!9494 = !DILocation(line: 1078, column: 3, scope: !9493)
!9495 = !DILocation(line: 1081, column: 13, scope: !9493)
!9496 = !DILocation(line: 1082, column: 3, scope: !9493)
!9497 = !DILocation(line: 1084, column: 13, scope: !9493)
!9498 = !DILocation(line: 1085, column: 3, scope: !9493)
!9499 = !DILocation(line: 1087, column: 15, scope: !9493)
!9500 = !DILocation(line: 1087, column: 25, scope: !9493)
!9501 = !DILocation(line: 1087, column: 13, scope: !9493)
!9502 = !DILocation(line: 1088, column: 3, scope: !9493)
!9503 = !DILocation(line: 1090, column: 14, scope: !9237)
!9504 = !DILocation(line: 1090, column: 24, scope: !9237)
!9505 = !DILocation(line: 1090, column: 12, scope: !9237)
!9506 = !DILocation(line: 1091, column: 6, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1091, column: 6)
!9508 = !DILocation(line: 1091, column: 16, scope: !9507)
!9509 = !DILocation(line: 1091, column: 25, scope: !9507)
!9510 = !DILocation(line: 1091, column: 35, scope: !9507)
!9511 = !DILocation(line: 1091, column: 6, scope: !9237)
!9512 = !DILocation(line: 1092, column: 3, scope: !9507)
!9513 = !DILocation(line: 1092, column: 7, scope: !9507)
!9514 = !DILocation(line: 1092, column: 17, scope: !9507)
!9515 = !DILocation(line: 1093, column: 11, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 1093, column: 11)
!9517 = !DILocation(line: 1093, column: 21, scope: !9516)
!9518 = !DILocation(line: 1093, column: 30, scope: !9516)
!9519 = !DILocation(line: 1093, column: 40, scope: !9516)
!9520 = !DILocation(line: 1093, column: 11, scope: !9507)
!9521 = !DILocation(line: 1094, column: 3, scope: !9516)
!9522 = !DILocation(line: 1094, column: 7, scope: !9516)
!9523 = !DILocation(line: 1094, column: 17, scope: !9516)
!9524 = !DILocation(line: 1096, column: 3, scope: !9516)
!9525 = !DILocation(line: 1096, column: 7, scope: !9516)
!9526 = !DILocation(line: 1096, column: 17, scope: !9516)
!9527 = !DILocation(line: 1097, column: 24, scope: !9237)
!9528 = !DILocation(line: 1097, column: 34, scope: !9237)
!9529 = !DILocation(line: 1097, column: 2, scope: !9237)
!9530 = !DILocation(line: 1097, column: 6, scope: !9237)
!9531 = !DILocation(line: 1097, column: 22, scope: !9237)
!9532 = !DILocation(line: 1098, column: 23, scope: !9237)
!9533 = !DILocation(line: 1098, column: 2, scope: !9237)
!9534 = !DILocation(line: 1098, column: 9, scope: !9237)
!9535 = !DILocation(line: 1098, column: 21, scope: !9237)
!9536 = !DILocation(line: 1099, column: 18, scope: !9237)
!9537 = !DILocation(line: 1099, column: 28, scope: !9237)
!9538 = !DILocation(line: 1099, column: 2, scope: !9237)
!9539 = !DILocation(line: 1099, column: 9, scope: !9237)
!9540 = !DILocation(line: 1099, column: 16, scope: !9237)
!9541 = !DILocation(line: 1100, column: 12, scope: !9237)
!9542 = !DILocation(line: 1100, column: 22, scope: !9237)
!9543 = !DILocation(line: 1100, column: 31, scope: !9237)
!9544 = !DILocation(line: 1100, column: 10, scope: !9237)
!9545 = !DILocation(line: 1101, column: 23, scope: !9237)
!9546 = !DILocation(line: 1101, column: 33, scope: !9237)
!9547 = !DILocation(line: 1101, column: 44, scope: !9237)
!9548 = !DILocation(line: 1101, column: 2, scope: !9237)
!9549 = !DILocation(line: 1101, column: 6, scope: !9237)
!9550 = !DILocation(line: 1101, column: 20, scope: !9237)
!9551 = !DILocation(line: 1110, column: 21, scope: !9237)
!9552 = !DILocation(line: 1110, column: 25, scope: !9237)
!9553 = !DILocation(line: 1110, column: 34, scope: !9237)
!9554 = !DILocation(line: 1110, column: 2, scope: !9237)
!9555 = !DILocation(line: 1110, column: 9, scope: !9237)
!9556 = !DILocation(line: 1110, column: 19, scope: !9237)
!9557 = !DILocation(line: 1111, column: 6, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1111, column: 6)
!9559 = !DILocation(line: 1111, column: 13, scope: !9558)
!9560 = !DILocation(line: 1111, column: 23, scope: !9558)
!9561 = !DILocation(line: 1111, column: 6, scope: !9237)
!9562 = !DILocation(line: 1112, column: 22, scope: !9558)
!9563 = !DILocation(line: 1112, column: 32, scope: !9558)
!9564 = !DILocation(line: 1112, column: 3, scope: !9558)
!9565 = !DILocation(line: 1112, column: 10, scope: !9558)
!9566 = !DILocation(line: 1112, column: 20, scope: !9558)
!9567 = !DILocation(line: 1113, column: 6, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1113, column: 6)
!9569 = !DILocation(line: 1113, column: 13, scope: !9568)
!9570 = !DILocation(line: 1113, column: 23, scope: !9568)
!9571 = !DILocation(line: 1113, column: 6, scope: !9237)
!9572 = !DILocation(line: 1115, column: 3, scope: !9568)
!9573 = !DILocation(line: 1115, column: 10, scope: !9568)
!9574 = !DILocation(line: 1115, column: 20, scope: !9568)
!9575 = !DILocation(line: 1117, column: 6, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1117, column: 6)
!9577 = !DILocation(line: 1117, column: 13, scope: !9576)
!9578 = !DILocation(line: 1117, column: 23, scope: !9576)
!9579 = !DILocation(line: 1117, column: 6, scope: !9237)
!9580 = !DILocation(line: 1118, column: 3, scope: !9576)
!9581 = !DILocation(line: 1118, column: 10, scope: !9576)
!9582 = !DILocation(line: 1118, column: 20, scope: !9576)
!9583 = !DILocation(line: 1119, column: 23, scope: !9237)
!9584 = !DILocation(line: 1119, column: 33, scope: !9237)
!9585 = !DILocation(line: 1119, column: 2, scope: !9237)
!9586 = !DILocation(line: 1119, column: 9, scope: !9237)
!9587 = !DILocation(line: 1119, column: 21, scope: !9237)
!9588 = !DILocation(line: 1120, column: 24, scope: !9237)
!9589 = !DILocation(line: 1120, column: 34, scope: !9237)
!9590 = !DILocation(line: 1120, column: 2, scope: !9237)
!9591 = !DILocation(line: 1120, column: 9, scope: !9237)
!9592 = !DILocation(line: 1120, column: 22, scope: !9237)
!9593 = !DILocation(line: 1121, column: 6, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1121, column: 6)
!9595 = !DILocation(line: 1121, column: 13, scope: !9594)
!9596 = !DILocation(line: 1121, column: 26, scope: !9594)
!9597 = !DILocation(line: 1121, column: 6, scope: !9237)
!9598 = !DILocation(line: 1122, column: 3, scope: !9594)
!9599 = !DILocation(line: 1122, column: 10, scope: !9594)
!9600 = !DILocation(line: 1122, column: 23, scope: !9594)
!9601 = !DILocation(line: 1126, column: 20, scope: !9237)
!9602 = !DILocation(line: 1126, column: 29, scope: !9237)
!9603 = !DILocation(line: 1126, column: 49, scope: !9237)
!9604 = !DILocation(line: 1126, column: 58, scope: !9237)
!9605 = !DILocation(line: 1126, column: 47, scope: !9237)
!9606 = !DILocation(line: 1127, column: 3, scope: !9237)
!9607 = !DILocation(line: 1126, column: 2, scope: !9237)
!9608 = !DILocation(line: 1126, column: 6, scope: !9237)
!9609 = !DILocation(line: 1126, column: 18, scope: !9237)
!9610 = !DILocation(line: 1128, column: 21, scope: !9237)
!9611 = !DILocation(line: 1128, column: 30, scope: !9237)
!9612 = !DILocation(line: 1128, column: 53, scope: !9237)
!9613 = !DILocation(line: 1128, column: 62, scope: !9237)
!9614 = !DILocation(line: 1128, column: 51, scope: !9237)
!9615 = !DILocation(line: 1129, column: 3, scope: !9237)
!9616 = !DILocation(line: 1128, column: 2, scope: !9237)
!9617 = !DILocation(line: 1128, column: 6, scope: !9237)
!9618 = !DILocation(line: 1128, column: 19, scope: !9237)
!9619 = !DILocation(line: 1131, column: 2, scope: !9237)
!9620 = !DILocation(line: 1131, column: 6, scope: !9237)
!9621 = !DILocation(line: 1131, column: 22, scope: !9237)
!9622 = !DILocation(line: 1132, column: 2, scope: !9237)
!9623 = !DILocation(line: 1132, column: 6, scope: !9237)
!9624 = !DILocation(line: 1132, column: 24, scope: !9237)
!9625 = !DILocation(line: 1133, column: 6, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1133, column: 6)
!9627 = !DILocation(line: 1133, column: 15, scope: !9626)
!9628 = !DILocation(line: 1133, column: 6, scope: !9237)
!9629 = !DILocation(line: 1134, column: 3, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 1133, column: 31)
!9631 = !DILocation(line: 1134, column: 7, scope: !9630)
!9632 = !DILocation(line: 1134, column: 23, scope: !9630)
!9633 = !DILocation(line: 1135, column: 3, scope: !9630)
!9634 = !DILocation(line: 1135, column: 7, scope: !9630)
!9635 = !DILocation(line: 1135, column: 25, scope: !9630)
!9636 = !DILocation(line: 1136, column: 2, scope: !9630)
!9637 = !DILocation(line: 1141, column: 7, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1141, column: 6)
!9639 = !DILocation(line: 1141, column: 11, scope: !9638)
!9640 = !DILocation(line: 1141, column: 25, scope: !9638)
!9641 = !DILocation(line: 1141, column: 32, scope: !9638)
!9642 = !DILocation(line: 1142, column: 14, scope: !9638)
!9643 = !DILocation(line: 1142, column: 18, scope: !9638)
!9644 = !DILocation(line: 1142, column: 7, scope: !9638)
!9645 = !DILocation(line: 1142, column: 38, scope: !9638)
!9646 = !DILocation(line: 1142, column: 44, scope: !9638)
!9647 = !DILocation(line: 1143, column: 7, scope: !9638)
!9648 = !DILocation(line: 1143, column: 11, scope: !9638)
!9649 = !DILocation(line: 1143, column: 25, scope: !9638)
!9650 = !DILocation(line: 1143, column: 32, scope: !9638)
!9651 = !DILocation(line: 1144, column: 14, scope: !9638)
!9652 = !DILocation(line: 1144, column: 18, scope: !9638)
!9653 = !DILocation(line: 1144, column: 7, scope: !9638)
!9654 = !DILocation(line: 1144, column: 38, scope: !9638)
!9655 = !DILocation(line: 1141, column: 6, scope: !9237)
!9656 = !DILocation(line: 1145, column: 3, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 1144, column: 45)
!9658 = !DILocation(line: 1145, column: 7, scope: !9657)
!9659 = !DILocation(line: 1145, column: 28, scope: !9657)
!9660 = !DILocation(line: 1146, column: 20, scope: !9657)
!9661 = !DILocation(line: 1146, column: 3, scope: !9657)
!9662 = !DILocation(line: 1147, column: 2, scope: !9657)
!9663 = !DILocation(line: 1148, column: 2, scope: !9237)
!9664 = !DILocation(line: 1148, column: 6, scope: !9237)
!9665 = !DILocation(line: 1148, column: 23, scope: !9237)
!9666 = !DILocation(line: 1149, column: 6, scope: !9237)
!9667 = !DILocation(line: 1149, column: 2, scope: !9237)
!9668 = !DILabel(scope: !9237, name: "out", file: !3, line: 1151)
!9669 = !DILocation(line: 1151, column: 1, scope: !9237)
!9670 = !DILocation(line: 1152, column: 2, scope: !9237)
!9671 = !DILocation(line: 1154, column: 2, scope: !9237)
!9672 = !DILocation(line: 1157, column: 6, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1157, column: 6)
!9674 = !DILocation(line: 1157, column: 10, scope: !9673)
!9675 = !DILocation(line: 1157, column: 18, scope: !9673)
!9676 = !DILocation(line: 1157, column: 6, scope: !9237)
!9677 = !DILocation(line: 1158, column: 3, scope: !9673)
!9678 = !DILocation(line: 1162, column: 3, scope: !9673)
!9679 = !DILocation(line: 1166, column: 2, scope: !9237)
!9680 = !DILocation(line: 1169, column: 2, scope: !9237)
!9681 = !DILocation(line: 1173, column: 2, scope: !9237)
!9682 = !DILocation(line: 1179, column: 2, scope: !9237)
!9683 = !DILocation(line: 1184, column: 2, scope: !9237)
!9684 = !DILabel(scope: !9237, name: "out_free", file: !3, line: 1188)
!9685 = !DILocation(line: 1188, column: 1, scope: !9237)
!9686 = !DILocation(line: 1189, column: 21, scope: !9237)
!9687 = !DILocation(line: 1189, column: 27, scope: !9237)
!9688 = !DILocation(line: 1190, column: 6, scope: !9237)
!9689 = !DILocation(line: 1190, column: 16, scope: !9237)
!9690 = !DILocation(line: 1189, column: 2, scope: !9237)
!9691 = !DILocation(line: 1191, column: 21, scope: !9237)
!9692 = !DILocation(line: 1191, column: 27, scope: !9237)
!9693 = !DILocation(line: 1192, column: 6, scope: !9237)
!9694 = !DILocation(line: 1192, column: 15, scope: !9237)
!9695 = !DILocation(line: 1191, column: 2, scope: !9237)
!9696 = !DILocation(line: 1194, column: 9, scope: !9237)
!9697 = !DILocation(line: 1194, column: 2, scope: !9237)
!9698 = !DILocation(line: 1195, column: 1, scope: !9237)
!9699 = distinct !DISubprogram(name: "myrb_cleanup", scope: !3, file: !3, line: 1236, type: !9700, scopeLine: 1237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9700 = !DISubroutineType(types: !9701)
!9701 = !{null, !5760}
!9702 = !DILocalVariable(name: "cb", arg: 1, scope: !9699, file: !3, line: 1236, type: !5760)
!9703 = !DILocation(line: 1236, column: 43, scope: !9699)
!9704 = !DILocalVariable(name: "pdev", scope: !9699, file: !3, line: 1238, type: !914)
!9705 = !DILocation(line: 1238, column: 18, scope: !9699)
!9706 = !DILocation(line: 1238, column: 25, scope: !9699)
!9707 = !DILocation(line: 1238, column: 29, scope: !9699)
!9708 = !DILocation(line: 1241, column: 13, scope: !9699)
!9709 = !DILocation(line: 1241, column: 2, scope: !9699)
!9710 = !DILocation(line: 1243, column: 6, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 1243, column: 6)
!9712 = !DILocation(line: 1243, column: 10, scope: !9711)
!9713 = !DILocation(line: 1243, column: 6, scope: !9699)
!9714 = !DILocation(line: 1244, column: 3, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 1243, column: 21)
!9716 = !DILocation(line: 1244, column: 7, scope: !9715)
!9717 = !DILocation(line: 1244, column: 20, scope: !9715)
!9718 = !DILocation(line: 1244, column: 24, scope: !9715)
!9719 = !DILocation(line: 1245, column: 11, scope: !9715)
!9720 = !DILocation(line: 1245, column: 15, scope: !9715)
!9721 = !DILocation(line: 1245, column: 3, scope: !9715)
!9722 = !DILocation(line: 1246, column: 2, scope: !9715)
!9723 = !DILocation(line: 1247, column: 6, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 1247, column: 6)
!9725 = !DILocation(line: 1247, column: 10, scope: !9724)
!9726 = !DILocation(line: 1247, column: 6, scope: !9699)
!9727 = !DILocation(line: 1248, column: 12, scope: !9724)
!9728 = !DILocation(line: 1248, column: 16, scope: !9724)
!9729 = !DILocation(line: 1248, column: 21, scope: !9724)
!9730 = !DILocation(line: 1248, column: 3, scope: !9724)
!9731 = !DILocation(line: 1249, column: 6, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 1249, column: 6)
!9733 = !DILocation(line: 1249, column: 10, scope: !9732)
!9734 = !DILocation(line: 1249, column: 6, scope: !9699)
!9735 = !DILocation(line: 1250, column: 3, scope: !9732)
!9736 = !DILocation(line: 1251, column: 18, scope: !9699)
!9737 = !DILocation(line: 1251, column: 2, scope: !9699)
!9738 = !DILocation(line: 1252, column: 21, scope: !9699)
!9739 = !DILocation(line: 1252, column: 2, scope: !9699)
!9740 = !DILocation(line: 1253, column: 16, scope: !9699)
!9741 = !DILocation(line: 1253, column: 20, scope: !9699)
!9742 = !DILocation(line: 1253, column: 2, scope: !9699)
!9743 = !DILocation(line: 1254, column: 1, scope: !9699)
!9744 = distinct !DISubprogram(name: "myrb_create_mempools", scope: !3, file: !3, line: 90, type: !9745, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9745 = !DISubroutineType(types: !9746)
!9746 = !{!1262, !914, !5760}
!9747 = !DILocalVariable(name: "pdev", arg: 1, scope: !9744, file: !3, line: 90, type: !914)
!9748 = !DILocation(line: 90, column: 50, scope: !9744)
!9749 = !DILocalVariable(name: "cb", arg: 2, scope: !9744, file: !3, line: 90, type: !5760)
!9750 = !DILocation(line: 90, column: 73, scope: !9744)
!9751 = !DILocalVariable(name: "elem_size", scope: !9744, file: !3, line: 92, type: !1102)
!9752 = !DILocation(line: 92, column: 9, scope: !9744)
!9753 = !DILocalVariable(name: "elem_align", scope: !9744, file: !3, line: 92, type: !1102)
!9754 = !DILocation(line: 92, column: 20, scope: !9744)
!9755 = !DILocation(line: 94, column: 13, scope: !9744)
!9756 = !DILocation(line: 95, column: 14, scope: !9744)
!9757 = !DILocation(line: 95, column: 18, scope: !9744)
!9758 = !DILocation(line: 95, column: 24, scope: !9744)
!9759 = !DILocation(line: 95, column: 39, scope: !9744)
!9760 = !DILocation(line: 95, column: 37, scope: !9744)
!9761 = !DILocation(line: 95, column: 12, scope: !9744)
!9762 = !DILocation(line: 96, column: 44, scope: !9744)
!9763 = !DILocation(line: 96, column: 50, scope: !9744)
!9764 = !DILocation(line: 97, column: 11, scope: !9744)
!9765 = !DILocation(line: 97, column: 22, scope: !9744)
!9766 = !DILocation(line: 96, column: 16, scope: !9744)
!9767 = !DILocation(line: 96, column: 2, scope: !9744)
!9768 = !DILocation(line: 96, column: 6, scope: !9744)
!9769 = !DILocation(line: 96, column: 14, scope: !9744)
!9770 = !DILocation(line: 98, column: 6, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 98, column: 6)
!9772 = !DILocation(line: 98, column: 10, scope: !9771)
!9773 = !DILocation(line: 98, column: 18, scope: !9771)
!9774 = !DILocation(line: 98, column: 6, scope: !9744)
!9775 = !DILocation(line: 99, column: 3, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 98, column: 27)
!9777 = !DILocation(line: 101, column: 3, scope: !9776)
!9778 = !DILocation(line: 104, column: 48, scope: !9744)
!9779 = !DILocation(line: 104, column: 54, scope: !9744)
!9780 = !DILocation(line: 104, column: 18, scope: !9744)
!9781 = !DILocation(line: 104, column: 2, scope: !9744)
!9782 = !DILocation(line: 104, column: 6, scope: !9744)
!9783 = !DILocation(line: 104, column: 16, scope: !9744)
!9784 = !DILocation(line: 107, column: 7, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 107, column: 6)
!9786 = !DILocation(line: 107, column: 11, scope: !9785)
!9787 = !DILocation(line: 107, column: 6, scope: !9744)
!9788 = !DILocation(line: 108, column: 20, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 107, column: 22)
!9790 = !DILocation(line: 108, column: 24, scope: !9789)
!9791 = !DILocation(line: 108, column: 3, scope: !9789)
!9792 = !DILocation(line: 109, column: 3, scope: !9789)
!9793 = !DILocation(line: 109, column: 7, scope: !9789)
!9794 = !DILocation(line: 109, column: 15, scope: !9789)
!9795 = !DILocation(line: 110, column: 3, scope: !9789)
!9796 = !DILocation(line: 112, column: 3, scope: !9789)
!9797 = !DILocation(line: 115, column: 11, scope: !9744)
!9798 = !DILocation(line: 115, column: 15, scope: !9744)
!9799 = !DILocation(line: 116, column: 18, scope: !9744)
!9800 = !DILocation(line: 116, column: 22, scope: !9744)
!9801 = !DILocation(line: 116, column: 28, scope: !9744)
!9802 = !DILocation(line: 115, column: 2, scope: !9744)
!9803 = !DILocation(line: 117, column: 15, scope: !9744)
!9804 = !DILocation(line: 117, column: 2, scope: !9744)
!9805 = !DILocation(line: 117, column: 6, scope: !9744)
!9806 = !DILocation(line: 117, column: 13, scope: !9744)
!9807 = !DILocation(line: 118, column: 7, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 118, column: 6)
!9809 = !DILocation(line: 118, column: 11, scope: !9808)
!9810 = !DILocation(line: 118, column: 6, scope: !9744)
!9811 = !DILocation(line: 119, column: 20, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 118, column: 19)
!9813 = !DILocation(line: 119, column: 24, scope: !9812)
!9814 = !DILocation(line: 119, column: 3, scope: !9812)
!9815 = !DILocation(line: 120, column: 3, scope: !9812)
!9816 = !DILocation(line: 120, column: 7, scope: !9812)
!9817 = !DILocation(line: 120, column: 17, scope: !9812)
!9818 = !DILocation(line: 121, column: 20, scope: !9812)
!9819 = !DILocation(line: 121, column: 24, scope: !9812)
!9820 = !DILocation(line: 121, column: 3, scope: !9812)
!9821 = !DILocation(line: 122, column: 3, scope: !9812)
!9822 = !DILocation(line: 122, column: 7, scope: !9812)
!9823 = !DILocation(line: 122, column: 15, scope: !9812)
!9824 = !DILocation(line: 123, column: 3, scope: !9812)
!9825 = !DILocation(line: 125, column: 3, scope: !9812)
!9826 = !DILocation(line: 131, column: 2, scope: !9744)
!9827 = !DILocation(line: 131, column: 2, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 131, column: 2)
!9829 = !DILocation(line: 131, column: 2, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9828, file: !3, line: 131, column: 2)
!9831 = !DILocation(line: 132, column: 21, scope: !9744)
!9832 = !DILocation(line: 132, column: 25, scope: !9744)
!9833 = !DILocation(line: 132, column: 34, scope: !9744)
!9834 = !DILocation(line: 132, column: 38, scope: !9744)
!9835 = !DILocation(line: 132, column: 2, scope: !9744)
!9836 = !DILocation(line: 134, column: 2, scope: !9744)
!9837 = !DILocation(line: 135, column: 1, scope: !9744)
!9838 = distinct !DISubprogram(name: "scsi_add_host", scope: !154, file: !154, line: 753, type: !9839, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9839 = !DISubroutineType(types: !9840)
!9840 = !{!913, !5782, !1003}
!9841 = !DILocalVariable(name: "host", arg: 1, scope: !9838, file: !154, line: 753, type: !5782)
!9842 = !DILocation(line: 753, column: 64, scope: !9838)
!9843 = !DILocalVariable(name: "dev", arg: 2, scope: !9838, file: !154, line: 754, type: !1003)
!9844 = !DILocation(line: 754, column: 26, scope: !9838)
!9845 = !DILocation(line: 756, column: 32, scope: !9838)
!9846 = !DILocation(line: 756, column: 38, scope: !9838)
!9847 = !DILocation(line: 756, column: 43, scope: !9838)
!9848 = !DILocation(line: 756, column: 9, scope: !9838)
!9849 = !DILocation(line: 756, column: 2, scope: !9838)
!9850 = distinct !DISubprogram(name: "myrb_destroy_mempools", scope: !3, file: !3, line: 140, type: !9700, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9851 = !DILocalVariable(name: "cb", arg: 1, scope: !9850, file: !3, line: 140, type: !5760)
!9852 = !DILocation(line: 140, column: 52, scope: !9850)
!9853 = !DILocation(line: 142, column: 28, scope: !9850)
!9854 = !DILocation(line: 142, column: 32, scope: !9850)
!9855 = !DILocation(line: 142, column: 2, scope: !9850)
!9856 = !DILocation(line: 143, column: 20, scope: !9850)
!9857 = !DILocation(line: 143, column: 24, scope: !9850)
!9858 = !DILocation(line: 143, column: 2, scope: !9850)
!9859 = !DILocation(line: 145, column: 19, scope: !9850)
!9860 = !DILocation(line: 145, column: 23, scope: !9850)
!9861 = !DILocation(line: 145, column: 2, scope: !9850)
!9862 = !DILocation(line: 146, column: 19, scope: !9850)
!9863 = !DILocation(line: 146, column: 23, scope: !9850)
!9864 = !DILocation(line: 146, column: 2, scope: !9850)
!9865 = !DILocation(line: 147, column: 1, scope: !9850)
!9866 = distinct !DISubprogram(name: "shost_priv", scope: !154, file: !154, line: 710, type: !9867, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9867 = !DISubroutineType(types: !9868)
!9868 = !{!973, !5782}
!9869 = !DILocalVariable(name: "shost", arg: 1, scope: !9866, file: !154, line: 710, type: !5782)
!9870 = !DILocation(line: 710, column: 50, scope: !9866)
!9871 = !DILocation(line: 712, column: 17, scope: !9866)
!9872 = !DILocation(line: 712, column: 24, scope: !9866)
!9873 = !DILocation(line: 712, column: 9, scope: !9866)
!9874 = !DILocation(line: 712, column: 2, scope: !9866)
!9875 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !916, file: !916, line: 1870, type: !9876, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{null, !914, !973}
!9878 = !DILocalVariable(name: "pdev", arg: 1, scope: !9875, file: !916, line: 1870, type: !914)
!9879 = !DILocation(line: 1870, column: 52, scope: !9875)
!9880 = !DILocalVariable(name: "data", arg: 2, scope: !9875, file: !916, line: 1870, type: !973)
!9881 = !DILocation(line: 1870, column: 64, scope: !9875)
!9882 = !DILocation(line: 1872, column: 19, scope: !9875)
!9883 = !DILocation(line: 1872, column: 25, scope: !9875)
!9884 = !DILocation(line: 1872, column: 30, scope: !9875)
!9885 = !DILocation(line: 1872, column: 2, scope: !9875)
!9886 = !DILocation(line: 1873, column: 1, scope: !9875)
!9887 = distinct !DISubprogram(name: "request_irq", scope: !990, file: !990, line: 157, type: !9888, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9888 = !DISubroutineType(types: !9889)
!9889 = !{!913, !7, !6306, !902, !948, !973}
!9890 = !DILocalVariable(name: "irq", arg: 1, scope: !9887, file: !990, line: 157, type: !7)
!9891 = !DILocation(line: 157, column: 26, scope: !9887)
!9892 = !DILocalVariable(name: "handler", arg: 2, scope: !9887, file: !990, line: 157, type: !6306)
!9893 = !DILocation(line: 157, column: 45, scope: !9887)
!9894 = !DILocalVariable(name: "flags", arg: 3, scope: !9887, file: !990, line: 157, type: !902)
!9895 = !DILocation(line: 157, column: 68, scope: !9887)
!9896 = !DILocalVariable(name: "name", arg: 4, scope: !9887, file: !990, line: 158, type: !948)
!9897 = !DILocation(line: 158, column: 18, scope: !9887)
!9898 = !DILocalVariable(name: "dev", arg: 5, scope: !9887, file: !990, line: 158, type: !973)
!9899 = !DILocation(line: 158, column: 30, scope: !9887)
!9900 = !DILocation(line: 160, column: 30, scope: !9887)
!9901 = !DILocation(line: 160, column: 35, scope: !9887)
!9902 = !DILocation(line: 160, column: 50, scope: !9887)
!9903 = !DILocation(line: 160, column: 57, scope: !9887)
!9904 = !DILocation(line: 160, column: 63, scope: !9887)
!9905 = !DILocation(line: 160, column: 9, scope: !9887)
!9906 = !DILocation(line: 160, column: 2, scope: !9887)
!9907 = distinct !DISubprogram(name: "myrb_queuecommand", scope: !3, file: !3, line: 1634, type: !5960, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9908 = !DILocalVariable(name: "shost", arg: 1, scope: !9907, file: !3, line: 1634, type: !5782)
!9909 = !DILocation(line: 1634, column: 48, scope: !9907)
!9910 = !DILocalVariable(name: "scmd", arg: 2, scope: !9907, file: !3, line: 1635, type: !5962)
!9911 = !DILocation(line: 1635, column: 21, scope: !9907)
!9912 = !DILocalVariable(name: "sdev", scope: !9907, file: !3, line: 1637, type: !5809)
!9913 = !DILocation(line: 1637, column: 22, scope: !9907)
!9914 = !DILocation(line: 1637, column: 29, scope: !9907)
!9915 = !DILocation(line: 1637, column: 35, scope: !9907)
!9916 = !DILocation(line: 1639, column: 6, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 1639, column: 6)
!9918 = !DILocation(line: 1639, column: 12, scope: !9917)
!9919 = !DILocation(line: 1639, column: 43, scope: !9917)
!9920 = !DILocation(line: 1639, column: 22, scope: !9917)
!9921 = !DILocation(line: 1639, column: 20, scope: !9917)
!9922 = !DILocation(line: 1639, column: 6, scope: !9907)
!9923 = !DILocation(line: 1640, column: 3, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9917, file: !3, line: 1639, column: 51)
!9925 = !DILocation(line: 1640, column: 9, scope: !9924)
!9926 = !DILocation(line: 1640, column: 16, scope: !9924)
!9927 = !DILocation(line: 1641, column: 3, scope: !9924)
!9928 = !DILocation(line: 1641, column: 9, scope: !9924)
!9929 = !DILocation(line: 1641, column: 19, scope: !9924)
!9930 = !DILocation(line: 1642, column: 3, scope: !9924)
!9931 = !DILocation(line: 1644, column: 6, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 1644, column: 6)
!9933 = !DILocation(line: 1644, column: 12, scope: !9932)
!9934 = !DILocation(line: 1644, column: 44, scope: !9932)
!9935 = !DILocation(line: 1644, column: 23, scope: !9932)
!9936 = !DILocation(line: 1644, column: 20, scope: !9932)
!9937 = !DILocation(line: 1644, column: 6, scope: !9907)
!9938 = !DILocation(line: 1645, column: 33, scope: !9932)
!9939 = !DILocation(line: 1645, column: 40, scope: !9932)
!9940 = !DILocation(line: 1645, column: 10, scope: !9932)
!9941 = !DILocation(line: 1645, column: 3, scope: !9932)
!9942 = !DILocation(line: 1647, column: 33, scope: !9907)
!9943 = !DILocation(line: 1647, column: 40, scope: !9907)
!9944 = !DILocation(line: 1647, column: 9, scope: !9907)
!9945 = !DILocation(line: 1647, column: 2, scope: !9907)
!9946 = !DILocation(line: 1648, column: 1, scope: !9907)
!9947 = distinct !DISubprogram(name: "myrb_host_reset", scope: !3, file: !3, line: 1256, type: !6049, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9948 = !DILocalVariable(name: "scmd", arg: 1, scope: !9947, file: !3, line: 1256, type: !5962)
!9949 = !DILocation(line: 1256, column: 46, scope: !9947)
!9950 = !DILocalVariable(name: "shost", scope: !9947, file: !3, line: 1258, type: !5782)
!9951 = !DILocation(line: 1258, column: 20, scope: !9947)
!9952 = !DILocation(line: 1258, column: 28, scope: !9947)
!9953 = !DILocation(line: 1258, column: 34, scope: !9947)
!9954 = !DILocation(line: 1258, column: 42, scope: !9947)
!9955 = !DILocalVariable(name: "cb", scope: !9947, file: !3, line: 1259, type: !5760)
!9956 = !DILocation(line: 1259, column: 19, scope: !9947)
!9957 = !DILocation(line: 1259, column: 35, scope: !9947)
!9958 = !DILocation(line: 1259, column: 24, scope: !9947)
!9959 = !DILocation(line: 1261, column: 2, scope: !9947)
!9960 = !DILocation(line: 1261, column: 6, scope: !9947)
!9961 = !DILocation(line: 1261, column: 12, scope: !9947)
!9962 = !DILocation(line: 1261, column: 16, scope: !9947)
!9963 = !DILocation(line: 1262, column: 2, scope: !9947)
!9964 = distinct !DISubprogram(name: "myrb_slave_alloc", scope: !3, file: !3, line: 1732, type: !6057, scopeLine: 1733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9965 = !DILocalVariable(name: "sdev", arg: 1, scope: !9964, file: !3, line: 1732, type: !5809)
!9966 = !DILocation(line: 1732, column: 49, scope: !9964)
!9967 = !DILocation(line: 1734, column: 6, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 1734, column: 6)
!9969 = !DILocation(line: 1734, column: 12, scope: !9968)
!9970 = !DILocation(line: 1734, column: 43, scope: !9968)
!9971 = !DILocation(line: 1734, column: 49, scope: !9968)
!9972 = !DILocation(line: 1734, column: 22, scope: !9968)
!9973 = !DILocation(line: 1734, column: 20, scope: !9968)
!9974 = !DILocation(line: 1734, column: 6, scope: !9964)
!9975 = !DILocation(line: 1735, column: 3, scope: !9968)
!9976 = !DILocation(line: 1737, column: 6, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 1737, column: 6)
!9978 = !DILocation(line: 1737, column: 12, scope: !9977)
!9979 = !DILocation(line: 1737, column: 16, scope: !9977)
!9980 = !DILocation(line: 1737, column: 6, scope: !9964)
!9981 = !DILocation(line: 1738, column: 3, scope: !9977)
!9982 = !DILocation(line: 1740, column: 6, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 1740, column: 6)
!9984 = !DILocation(line: 1740, column: 12, scope: !9983)
!9985 = !DILocation(line: 1740, column: 44, scope: !9983)
!9986 = !DILocation(line: 1740, column: 50, scope: !9983)
!9987 = !DILocation(line: 1740, column: 23, scope: !9983)
!9988 = !DILocation(line: 1740, column: 20, scope: !9983)
!9989 = !DILocation(line: 1740, column: 6, scope: !9964)
!9990 = !DILocation(line: 1741, column: 32, scope: !9983)
!9991 = !DILocation(line: 1741, column: 10, scope: !9983)
!9992 = !DILocation(line: 1741, column: 3, scope: !9983)
!9993 = !DILocation(line: 1743, column: 31, scope: !9964)
!9994 = !DILocation(line: 1743, column: 9, scope: !9964)
!9995 = !DILocation(line: 1743, column: 2, scope: !9964)
!9996 = !DILocation(line: 1744, column: 1, scope: !9964)
!9997 = distinct !DISubprogram(name: "myrb_slave_configure", scope: !3, file: !3, line: 1746, type: !6057, scopeLine: 1747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!9998 = !DILocalVariable(name: "sdev", arg: 1, scope: !9997, file: !3, line: 1746, type: !5809)
!9999 = !DILocation(line: 1746, column: 53, scope: !9997)
!10000 = !DILocalVariable(name: "ldev_info", scope: !9997, file: !3, line: 1748, type: !6294)
!10001 = !DILocation(line: 1748, column: 25, scope: !9997)
!10002 = !DILocation(line: 1750, column: 6, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 1750, column: 6)
!10004 = !DILocation(line: 1750, column: 12, scope: !10003)
!10005 = !DILocation(line: 1750, column: 43, scope: !10003)
!10006 = !DILocation(line: 1750, column: 49, scope: !10003)
!10007 = !DILocation(line: 1750, column: 22, scope: !10003)
!10008 = !DILocation(line: 1750, column: 20, scope: !10003)
!10009 = !DILocation(line: 1750, column: 6, scope: !9997)
!10010 = !DILocation(line: 1751, column: 3, scope: !10003)
!10011 = !DILocation(line: 1753, column: 6, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 1753, column: 6)
!10013 = !DILocation(line: 1753, column: 12, scope: !10012)
!10014 = !DILocation(line: 1753, column: 43, scope: !10012)
!10015 = !DILocation(line: 1753, column: 49, scope: !10012)
!10016 = !DILocation(line: 1753, column: 22, scope: !10012)
!10017 = !DILocation(line: 1753, column: 20, scope: !10012)
!10018 = !DILocation(line: 1753, column: 6, scope: !9997)
!10019 = !DILocation(line: 1754, column: 3, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 1753, column: 56)
!10021 = !DILocation(line: 1754, column: 9, scope: !10020)
!10022 = !DILocation(line: 1754, column: 23, scope: !10020)
!10023 = !DILocation(line: 1755, column: 3, scope: !10020)
!10024 = !DILocation(line: 1757, column: 6, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 1757, column: 6)
!10026 = !DILocation(line: 1757, column: 12, scope: !10025)
!10027 = !DILocation(line: 1757, column: 16, scope: !10025)
!10028 = !DILocation(line: 1757, column: 6, scope: !9997)
!10029 = !DILocation(line: 1758, column: 3, scope: !10025)
!10030 = !DILocation(line: 1760, column: 14, scope: !9997)
!10031 = !DILocation(line: 1760, column: 20, scope: !9997)
!10032 = !DILocation(line: 1760, column: 12, scope: !9997)
!10033 = !DILocation(line: 1761, column: 7, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 1761, column: 6)
!10035 = !DILocation(line: 1761, column: 6, scope: !9997)
!10036 = !DILocation(line: 1762, column: 3, scope: !10034)
!10037 = !DILocation(line: 1763, column: 6, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 1763, column: 6)
!10039 = !DILocation(line: 1763, column: 17, scope: !10038)
!10040 = !DILocation(line: 1763, column: 23, scope: !10038)
!10041 = !DILocation(line: 1763, column: 6, scope: !9997)
!10042 = !DILocation(line: 1764, column: 3, scope: !10038)
!10043 = !DILocation(line: 1768, column: 2, scope: !9997)
!10044 = !DILocation(line: 1768, column: 8, scope: !9997)
!10045 = !DILocation(line: 1768, column: 25, scope: !9997)
!10046 = !DILocation(line: 1769, column: 2, scope: !9997)
!10047 = !DILocation(line: 1770, column: 1, scope: !9997)
!10048 = distinct !DISubprogram(name: "myrb_slave_destroy", scope: !3, file: !3, line: 1772, type: !6062, scopeLine: 1773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10049 = !DILocalVariable(name: "sdev", arg: 1, scope: !10048, file: !3, line: 1772, type: !5809)
!10050 = !DILocation(line: 1772, column: 52, scope: !10048)
!10051 = !DILocation(line: 1774, column: 8, scope: !10048)
!10052 = !DILocation(line: 1774, column: 14, scope: !10048)
!10053 = !DILocation(line: 1774, column: 2, scope: !10048)
!10054 = !DILocation(line: 1775, column: 1, scope: !10048)
!10055 = distinct !DISubprogram(name: "myrb_biosparam", scope: !3, file: !3, line: 1777, type: !6094, scopeLine: 1779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10056 = !DILocalVariable(name: "sdev", arg: 1, scope: !10055, file: !3, line: 1777, type: !5809)
!10057 = !DILocation(line: 1777, column: 47, scope: !10055)
!10058 = !DILocalVariable(name: "bdev", arg: 2, scope: !10055, file: !3, line: 1777, type: !2850)
!10059 = !DILocation(line: 1777, column: 74, scope: !10055)
!10060 = !DILocalVariable(name: "capacity", arg: 3, scope: !10055, file: !3, line: 1778, type: !1654)
!10061 = !DILocation(line: 1778, column: 12, scope: !10055)
!10062 = !DILocalVariable(name: "geom", arg: 4, scope: !10055, file: !3, line: 1778, type: !1480)
!10063 = !DILocation(line: 1778, column: 26, scope: !10055)
!10064 = !DILocalVariable(name: "cb", scope: !10055, file: !3, line: 1780, type: !5760)
!10065 = !DILocation(line: 1780, column: 19, scope: !10055)
!10066 = !DILocation(line: 1780, column: 35, scope: !10055)
!10067 = !DILocation(line: 1780, column: 41, scope: !10055)
!10068 = !DILocation(line: 1780, column: 24, scope: !10055)
!10069 = !DILocation(line: 1782, column: 12, scope: !10055)
!10070 = !DILocation(line: 1782, column: 16, scope: !10055)
!10071 = !DILocation(line: 1782, column: 2, scope: !10055)
!10072 = !DILocation(line: 1782, column: 10, scope: !10055)
!10073 = !DILocation(line: 1783, column: 12, scope: !10055)
!10074 = !DILocation(line: 1783, column: 16, scope: !10055)
!10075 = !DILocation(line: 1783, column: 2, scope: !10055)
!10076 = !DILocation(line: 1783, column: 10, scope: !10055)
!10077 = !DILocalVariable(name: "__base", scope: !10078, file: !3, line: 1784, type: !1331)
!10078 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1784, column: 12)
!10079 = !DILocation(line: 1784, column: 12, scope: !10078)
!10080 = !DILocalVariable(name: "__rem", scope: !10078, file: !3, line: 1784, type: !1331)
!10081 = !DILocation(line: 1784, column: 2, scope: !10055)
!10082 = !DILocation(line: 1784, column: 10, scope: !10055)
!10083 = !DILocation(line: 1786, column: 2, scope: !10055)
!10084 = distinct !DISubprogram(name: "myrb_logical_channel", scope: !3, file: !3, line: 32, type: !6086, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10085 = !DILocalVariable(name: "shost", arg: 1, scope: !10084, file: !3, line: 32, type: !5782)
!10086 = !DILocation(line: 32, column: 58, scope: !10084)
!10087 = !DILocation(line: 34, column: 9, scope: !10084)
!10088 = !DILocation(line: 34, column: 16, scope: !10084)
!10089 = !DILocation(line: 34, column: 28, scope: !10084)
!10090 = !DILocation(line: 34, column: 2, scope: !10084)
!10091 = distinct !DISubprogram(name: "myrb_ldev_queuecommand", scope: !3, file: !3, line: 1421, type: !5960, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10092 = !DILocation(line: 407, column: 64, scope: !6561, inlinedAt: !10093)
!10093 = distinct !DILocation(line: 1629, column: 2, scope: !10091)
!10094 = !DILocation(line: 407, column: 84, scope: !6561, inlinedAt: !10093)
!10095 = !DILocation(line: 327, column: 67, scope: !6570, inlinedAt: !10096)
!10096 = distinct !DILocation(line: 1627, column: 2, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 1627, column: 2)
!10098 = distinct !DILexicalBlock(scope: !10099, file: !3, line: 1627, column: 2)
!10099 = distinct !DILexicalBlock(scope: !10100, file: !3, line: 1627, column: 2)
!10100 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 1627, column: 2)
!10101 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1627, column: 2)
!10102 = !DILocalVariable(name: "p", arg: 1, scope: !10103, file: !10104, line: 184, type: !10107)
!10103 = distinct !DISubprogram(name: "__swab32p", scope: !10104, file: !10104, line: 184, type: !10105, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10104 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!10105 = !DISubroutineType(types: !10106)
!10106 = !{!270, !10107}
!10107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10108, size: 64)
!10108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !270)
!10109 = !DILocation(line: 184, column: 53, scope: !10103, inlinedAt: !10110)
!10110 = distinct !DILocation(line: 82, column: 9, scope: !10111, inlinedAt: !10117)
!10111 = distinct !DISubprogram(name: "__be32_to_cpup", scope: !10112, file: !10112, line: 80, type: !10113, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10112 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!10113 = !DISubroutineType(types: !10114)
!10114 = !{!270, !10115}
!10115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10116, size: 64)
!10116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6312)
!10117 = distinct !DILocation(line: 30, column: 9, scope: !10118, inlinedAt: !10122)
!10118 = distinct !DISubprogram(name: "get_unaligned_be32", scope: !10119, file: !10119, line: 28, type: !10120, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10119 = !DIFile(filename: "./include/linux/unaligned/access_ok.h", directory: "/home/lizy2001/genbc/linux")
!10120 = !DISubroutineType(types: !10121)
!10121 = !{!268, !3931}
!10122 = distinct !DILocation(line: 1570, column: 15, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1444, column: 25)
!10124 = !DILocalVariable(name: "p", arg: 1, scope: !10111, file: !10112, line: 80, type: !10115)
!10125 = !DILocation(line: 80, column: 59, scope: !10111, inlinedAt: !10117)
!10126 = !DILocalVariable(name: "p", arg: 1, scope: !10118, file: !10119, line: 28, type: !3931)
!10127 = !DILocation(line: 28, column: 59, scope: !10118, inlinedAt: !10122)
!10128 = !DILocation(line: 184, column: 53, scope: !10103, inlinedAt: !10129)
!10129 = distinct !DILocation(line: 82, column: 9, scope: !10111, inlinedAt: !10130)
!10130 = distinct !DILocation(line: 30, column: 9, scope: !10118, inlinedAt: !10131)
!10131 = distinct !DILocation(line: 1569, column: 9, scope: !10123)
!10132 = !DILocation(line: 80, column: 59, scope: !10111, inlinedAt: !10130)
!10133 = !DILocation(line: 28, column: 59, scope: !10118, inlinedAt: !10131)
!10134 = !DILocalVariable(name: "p", arg: 1, scope: !10135, file: !10104, line: 171, type: !10138)
!10135 = distinct !DISubprogram(name: "__swab16p", scope: !10104, file: !10104, line: 171, type: !10136, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10136 = !DISubroutineType(types: !10137)
!10137 = !{!1684, !10138}
!10138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10139, size: 64)
!10139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1684)
!10140 = !DILocation(line: 171, column: 53, scope: !10135, inlinedAt: !10141)
!10141 = distinct !DILocation(line: 90, column: 9, scope: !10142, inlinedAt: !10147)
!10142 = distinct !DISubprogram(name: "__be16_to_cpup", scope: !10112, file: !10112, line: 88, type: !10143, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10143 = !DISubroutineType(types: !10144)
!10144 = !{!1684, !10145}
!10145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10146, size: 64)
!10146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6314)
!10147 = distinct !DILocation(line: 25, column: 9, scope: !10148, inlinedAt: !10151)
!10148 = distinct !DISubprogram(name: "get_unaligned_be16", scope: !10119, file: !10119, line: 23, type: !10149, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10149 = !DISubroutineType(types: !10150)
!10150 = !{!1683, !3931}
!10151 = distinct !DILocation(line: 1553, column: 15, scope: !10123)
!10152 = !DILocalVariable(name: "p", arg: 1, scope: !10142, file: !10112, line: 88, type: !10145)
!10153 = !DILocation(line: 88, column: 59, scope: !10142, inlinedAt: !10147)
!10154 = !DILocalVariable(name: "p", arg: 1, scope: !10148, file: !10119, line: 23, type: !3931)
!10155 = !DILocation(line: 23, column: 59, scope: !10148, inlinedAt: !10151)
!10156 = !DILocation(line: 184, column: 53, scope: !10103, inlinedAt: !10157)
!10157 = distinct !DILocation(line: 82, column: 9, scope: !10111, inlinedAt: !10158)
!10158 = distinct !DILocation(line: 30, column: 9, scope: !10118, inlinedAt: !10159)
!10159 = distinct !DILocation(line: 1552, column: 9, scope: !10123)
!10160 = !DILocation(line: 80, column: 59, scope: !10111, inlinedAt: !10158)
!10161 = !DILocation(line: 28, column: 59, scope: !10118, inlinedAt: !10159)
!10162 = !DILocation(line: 184, column: 53, scope: !10103, inlinedAt: !10163)
!10163 = distinct !DILocation(line: 82, column: 9, scope: !10111, inlinedAt: !10164)
!10164 = distinct !DILocation(line: 30, column: 9, scope: !10118, inlinedAt: !10165)
!10165 = distinct !DILocation(line: 1491, column: 9, scope: !10123)
!10166 = !DILocation(line: 80, column: 59, scope: !10111, inlinedAt: !10164)
!10167 = !DILocation(line: 28, column: 59, scope: !10118, inlinedAt: !10165)
!10168 = !DILocalVariable(name: "shost", arg: 1, scope: !10091, file: !3, line: 1421, type: !5782)
!10169 = !DILocation(line: 1421, column: 53, scope: !10091)
!10170 = !DILocalVariable(name: "scmd", arg: 2, scope: !10091, file: !3, line: 1422, type: !5962)
!10171 = !DILocation(line: 1422, column: 21, scope: !10091)
!10172 = !DILocalVariable(name: "cb", scope: !10091, file: !3, line: 1424, type: !5760)
!10173 = !DILocation(line: 1424, column: 19, scope: !10091)
!10174 = !DILocation(line: 1424, column: 35, scope: !10091)
!10175 = !DILocation(line: 1424, column: 24, scope: !10091)
!10176 = !DILocalVariable(name: "cmd_blk", scope: !10091, file: !3, line: 1425, type: !6225)
!10177 = !DILocation(line: 1425, column: 22, scope: !10091)
!10178 = !DILocation(line: 1425, column: 46, scope: !10091)
!10179 = !DILocation(line: 1425, column: 32, scope: !10091)
!10180 = !DILocalVariable(name: "mbox", scope: !10091, file: !3, line: 1426, type: !6245)
!10181 = !DILocation(line: 1426, column: 23, scope: !10091)
!10182 = !DILocation(line: 1426, column: 31, scope: !10091)
!10183 = !DILocation(line: 1426, column: 40, scope: !10091)
!10184 = !DILocalVariable(name: "ldev_info", scope: !10091, file: !3, line: 1427, type: !6294)
!10185 = !DILocation(line: 1427, column: 25, scope: !10091)
!10186 = !DILocalVariable(name: "sdev", scope: !10091, file: !3, line: 1428, type: !5809)
!10187 = !DILocation(line: 1428, column: 22, scope: !10091)
!10188 = !DILocation(line: 1428, column: 29, scope: !10091)
!10189 = !DILocation(line: 1428, column: 35, scope: !10091)
!10190 = !DILocalVariable(name: "sgl", scope: !10091, file: !3, line: 1429, type: !6000)
!10191 = !DILocation(line: 1429, column: 22, scope: !10091)
!10192 = !DILocalVariable(name: "flags", scope: !10091, file: !3, line: 1430, type: !902)
!10193 = !DILocation(line: 1430, column: 16, scope: !10091)
!10194 = !DILocalVariable(name: "lba", scope: !10091, file: !3, line: 1431, type: !943)
!10195 = !DILocation(line: 1431, column: 6, scope: !10091)
!10196 = !DILocalVariable(name: "block_cnt", scope: !10091, file: !3, line: 1432, type: !268)
!10197 = !DILocation(line: 1432, column: 6, scope: !10091)
!10198 = !DILocalVariable(name: "nsge", scope: !10091, file: !3, line: 1433, type: !913)
!10199 = !DILocation(line: 1433, column: 6, scope: !10091)
!10200 = !DILocation(line: 1435, column: 14, scope: !10091)
!10201 = !DILocation(line: 1435, column: 20, scope: !10091)
!10202 = !DILocation(line: 1435, column: 12, scope: !10091)
!10203 = !DILocation(line: 1436, column: 6, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1436, column: 6)
!10205 = !DILocation(line: 1436, column: 17, scope: !10204)
!10206 = !DILocation(line: 1436, column: 23, scope: !10204)
!10207 = !DILocation(line: 1436, column: 45, scope: !10204)
!10208 = !DILocation(line: 1437, column: 6, scope: !10204)
!10209 = !DILocation(line: 1437, column: 17, scope: !10204)
!10210 = !DILocation(line: 1437, column: 23, scope: !10204)
!10211 = !DILocation(line: 1436, column: 6, scope: !10091)
!10212 = !DILocation(line: 1440, column: 3, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 1437, column: 42)
!10214 = !DILocation(line: 1440, column: 9, scope: !10213)
!10215 = !DILocation(line: 1440, column: 16, scope: !10213)
!10216 = !DILocation(line: 1441, column: 3, scope: !10213)
!10217 = !DILocation(line: 1441, column: 9, scope: !10213)
!10218 = !DILocation(line: 1441, column: 19, scope: !10213)
!10219 = !DILocation(line: 1442, column: 3, scope: !10213)
!10220 = !DILocation(line: 1444, column: 10, scope: !10091)
!10221 = !DILocation(line: 1444, column: 16, scope: !10091)
!10222 = !DILocation(line: 1444, column: 2, scope: !10091)
!10223 = !DILocation(line: 1446, column: 3, scope: !10123)
!10224 = !DILocation(line: 1446, column: 9, scope: !10123)
!10225 = !DILocation(line: 1446, column: 16, scope: !10123)
!10226 = !DILocation(line: 1447, column: 3, scope: !10123)
!10227 = !DILocation(line: 1447, column: 9, scope: !10123)
!10228 = !DILocation(line: 1447, column: 19, scope: !10123)
!10229 = !DILocation(line: 1448, column: 3, scope: !10123)
!10230 = !DILocation(line: 1450, column: 7, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1450, column: 7)
!10232 = !DILocation(line: 1450, column: 13, scope: !10231)
!10233 = !DILocation(line: 1450, column: 21, scope: !10231)
!10234 = !DILocation(line: 1450, column: 7, scope: !10123)
!10235 = !DILocation(line: 1452, column: 31, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10231, file: !3, line: 1450, column: 26)
!10237 = !DILocation(line: 1452, column: 37, scope: !10236)
!10238 = !DILocation(line: 1452, column: 4, scope: !10236)
!10239 = !DILocation(line: 1454, column: 4, scope: !10236)
!10240 = !DILocation(line: 1454, column: 10, scope: !10236)
!10241 = !DILocation(line: 1454, column: 17, scope: !10236)
!10242 = !DILocation(line: 1456, column: 3, scope: !10236)
!10243 = !DILocation(line: 1457, column: 17, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10231, file: !3, line: 1456, column: 10)
!10245 = !DILocation(line: 1457, column: 21, scope: !10244)
!10246 = !DILocation(line: 1457, column: 4, scope: !10244)
!10247 = !DILocation(line: 1458, column: 4, scope: !10244)
!10248 = !DILocation(line: 1458, column: 10, scope: !10244)
!10249 = !DILocation(line: 1458, column: 17, scope: !10244)
!10250 = !DILocation(line: 1460, column: 3, scope: !10123)
!10251 = !DILocation(line: 1460, column: 9, scope: !10123)
!10252 = !DILocation(line: 1460, column: 19, scope: !10123)
!10253 = !DILocation(line: 1461, column: 3, scope: !10123)
!10254 = !DILocation(line: 1463, column: 3, scope: !10123)
!10255 = !DILocation(line: 1463, column: 9, scope: !10123)
!10256 = !DILocation(line: 1463, column: 16, scope: !10123)
!10257 = !DILocation(line: 1464, column: 3, scope: !10123)
!10258 = !DILocation(line: 1464, column: 9, scope: !10123)
!10259 = !DILocation(line: 1464, column: 19, scope: !10123)
!10260 = !DILocation(line: 1465, column: 3, scope: !10123)
!10261 = !DILocation(line: 1467, column: 8, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1467, column: 7)
!10263 = !DILocation(line: 1467, column: 14, scope: !10262)
!10264 = !DILocation(line: 1467, column: 22, scope: !10262)
!10265 = !DILocation(line: 1467, column: 30, scope: !10262)
!10266 = !DILocation(line: 1467, column: 38, scope: !10262)
!10267 = !DILocation(line: 1468, column: 8, scope: !10262)
!10268 = !DILocation(line: 1468, column: 14, scope: !10262)
!10269 = !DILocation(line: 1468, column: 22, scope: !10262)
!10270 = !DILocation(line: 1468, column: 30, scope: !10262)
!10271 = !DILocation(line: 1467, column: 7, scope: !10123)
!10272 = !DILocation(line: 1470, column: 31, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 1468, column: 39)
!10274 = !DILocation(line: 1470, column: 37, scope: !10273)
!10275 = !DILocation(line: 1470, column: 4, scope: !10273)
!10276 = !DILocation(line: 1472, column: 4, scope: !10273)
!10277 = !DILocation(line: 1472, column: 10, scope: !10273)
!10278 = !DILocation(line: 1472, column: 17, scope: !10273)
!10279 = !DILocation(line: 1474, column: 3, scope: !10273)
!10280 = !DILocation(line: 1475, column: 20, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 1474, column: 10)
!10282 = !DILocation(line: 1475, column: 24, scope: !10281)
!10283 = !DILocation(line: 1475, column: 30, scope: !10281)
!10284 = !DILocation(line: 1475, column: 4, scope: !10281)
!10285 = !DILocation(line: 1476, column: 4, scope: !10281)
!10286 = !DILocation(line: 1476, column: 10, scope: !10281)
!10287 = !DILocation(line: 1476, column: 17, scope: !10281)
!10288 = !DILocation(line: 1478, column: 3, scope: !10123)
!10289 = !DILocation(line: 1478, column: 9, scope: !10123)
!10290 = !DILocation(line: 1478, column: 19, scope: !10123)
!10291 = !DILocation(line: 1479, column: 3, scope: !10123)
!10292 = !DILocation(line: 1481, column: 8, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1481, column: 7)
!10294 = !DILocation(line: 1481, column: 14, scope: !10293)
!10295 = !DILocation(line: 1481, column: 22, scope: !10293)
!10296 = !DILocation(line: 1481, column: 27, scope: !10293)
!10297 = !DILocation(line: 1482, column: 8, scope: !10293)
!10298 = !DILocation(line: 1482, column: 14, scope: !10293)
!10299 = !DILocation(line: 1482, column: 22, scope: !10293)
!10300 = !DILocation(line: 1481, column: 7, scope: !10123)
!10301 = !DILocation(line: 1484, column: 31, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 1482, column: 28)
!10303 = !DILocation(line: 1484, column: 37, scope: !10302)
!10304 = !DILocation(line: 1484, column: 4, scope: !10302)
!10305 = !DILocation(line: 1486, column: 4, scope: !10302)
!10306 = !DILocation(line: 1486, column: 10, scope: !10302)
!10307 = !DILocation(line: 1486, column: 17, scope: !10302)
!10308 = !DILocation(line: 1488, column: 4, scope: !10302)
!10309 = !DILocation(line: 1488, column: 10, scope: !10302)
!10310 = !DILocation(line: 1488, column: 20, scope: !10302)
!10311 = !DILocation(line: 1489, column: 4, scope: !10302)
!10312 = !DILocation(line: 1491, column: 29, scope: !10123)
!10313 = !DILocation(line: 1491, column: 35, scope: !10123)
!10314 = !DILocation(line: 30, column: 32, scope: !10118, inlinedAt: !10165)
!10315 = !DILocation(line: 30, column: 22, scope: !10118, inlinedAt: !10165)
!10316 = !DILocation(line: 82, column: 28, scope: !10111, inlinedAt: !10164)
!10317 = !DILocation(line: 189, column: 9, scope: !10103, inlinedAt: !10163)
!10318 = !DILocation(line: 1491, column: 9, scope: !10123)
!10319 = !DILocation(line: 1491, column: 7, scope: !10123)
!10320 = !DILocation(line: 1492, column: 7, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1492, column: 7)
!10322 = !DILocation(line: 1492, column: 7, scope: !10123)
!10323 = !DILocation(line: 1494, column: 31, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 1492, column: 12)
!10325 = !DILocation(line: 1494, column: 37, scope: !10324)
!10326 = !DILocation(line: 1494, column: 4, scope: !10324)
!10327 = !DILocation(line: 1496, column: 4, scope: !10324)
!10328 = !DILocation(line: 1496, column: 10, scope: !10324)
!10329 = !DILocation(line: 1496, column: 17, scope: !10324)
!10330 = !DILocation(line: 1498, column: 4, scope: !10324)
!10331 = !DILocation(line: 1498, column: 10, scope: !10324)
!10332 = !DILocation(line: 1498, column: 20, scope: !10324)
!10333 = !DILocation(line: 1499, column: 4, scope: !10324)
!10334 = !DILocation(line: 1501, column: 22, scope: !10123)
!10335 = !DILocation(line: 1501, column: 26, scope: !10123)
!10336 = !DILocation(line: 1501, column: 32, scope: !10123)
!10337 = !DILocation(line: 1501, column: 3, scope: !10123)
!10338 = !DILocation(line: 1502, column: 3, scope: !10123)
!10339 = !DILocation(line: 1502, column: 9, scope: !10123)
!10340 = !DILocation(line: 1502, column: 19, scope: !10123)
!10341 = !DILocation(line: 1503, column: 3, scope: !10123)
!10342 = !DILocation(line: 1505, column: 22, scope: !10123)
!10343 = !DILocation(line: 1505, column: 26, scope: !10123)
!10344 = !DILocation(line: 1505, column: 3, scope: !10123)
!10345 = !DILocation(line: 1506, column: 3, scope: !10123)
!10346 = !DILocation(line: 1506, column: 9, scope: !10123)
!10347 = !DILocation(line: 1506, column: 16, scope: !10123)
!10348 = !DILocation(line: 1507, column: 3, scope: !10123)
!10349 = !DILocation(line: 1509, column: 7, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1509, column: 7)
!10351 = !DILocation(line: 1509, column: 13, scope: !10350)
!10352 = !DILocation(line: 1509, column: 21, scope: !10350)
!10353 = !DILocation(line: 1509, column: 7, scope: !10123)
!10354 = !DILocation(line: 1511, column: 31, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 1509, column: 30)
!10356 = !DILocation(line: 1511, column: 37, scope: !10355)
!10357 = !DILocation(line: 1511, column: 4, scope: !10355)
!10358 = !DILocation(line: 1513, column: 4, scope: !10355)
!10359 = !DILocation(line: 1513, column: 10, scope: !10355)
!10360 = !DILocation(line: 1513, column: 17, scope: !10355)
!10361 = !DILocation(line: 1515, column: 3, scope: !10355)
!10362 = !DILocation(line: 1517, column: 4, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 1515, column: 10)
!10364 = !DILocation(line: 1517, column: 10, scope: !10363)
!10365 = !DILocation(line: 1517, column: 17, scope: !10363)
!10366 = !DILocation(line: 1519, column: 3, scope: !10123)
!10367 = !DILocation(line: 1519, column: 9, scope: !10123)
!10368 = !DILocation(line: 1519, column: 19, scope: !10123)
!10369 = !DILocation(line: 1520, column: 3, scope: !10123)
!10370 = !DILocation(line: 1522, column: 7, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1522, column: 7)
!10372 = !DILocation(line: 1522, column: 18, scope: !10371)
!10373 = !DILocation(line: 1522, column: 24, scope: !10371)
!10374 = !DILocation(line: 1522, column: 7, scope: !10123)
!10375 = !DILocation(line: 1524, column: 31, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 1522, column: 43)
!10377 = !DILocation(line: 1524, column: 37, scope: !10376)
!10378 = !DILocation(line: 1524, column: 4, scope: !10376)
!10379 = !DILocation(line: 1526, column: 4, scope: !10376)
!10380 = !DILocation(line: 1526, column: 10, scope: !10376)
!10381 = !DILocation(line: 1526, column: 17, scope: !10376)
!10382 = !DILocation(line: 1528, column: 4, scope: !10376)
!10383 = !DILocation(line: 1528, column: 10, scope: !10376)
!10384 = !DILocation(line: 1528, column: 20, scope: !10376)
!10385 = !DILocation(line: 1529, column: 4, scope: !10376)
!10386 = !DILocation(line: 1522, column: 27, scope: !10371)
!10387 = !DILocation(line: 1533, column: 12, scope: !10123)
!10388 = !DILocation(line: 1533, column: 18, scope: !10123)
!10389 = !DILocation(line: 1533, column: 26, scope: !10123)
!10390 = !DILocation(line: 1533, column: 34, scope: !10123)
!10391 = !DILocation(line: 1534, column: 11, scope: !10123)
!10392 = !DILocation(line: 1534, column: 17, scope: !10123)
!10393 = !DILocation(line: 1534, column: 25, scope: !10123)
!10394 = !DILocation(line: 1533, column: 41, scope: !10123)
!10395 = !DILocation(line: 1535, column: 10, scope: !10123)
!10396 = !DILocation(line: 1535, column: 16, scope: !10123)
!10397 = !DILocation(line: 1534, column: 31, scope: !10123)
!10398 = !DILocation(line: 1533, column: 9, scope: !10123)
!10399 = !DILocation(line: 1533, column: 7, scope: !10123)
!10400 = !DILocation(line: 1536, column: 15, scope: !10123)
!10401 = !DILocation(line: 1536, column: 21, scope: !10123)
!10402 = !DILocation(line: 1536, column: 13, scope: !10123)
!10403 = !DILocation(line: 1537, column: 3, scope: !10123)
!10404 = !DILocation(line: 1539, column: 7, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1539, column: 7)
!10406 = !DILocation(line: 1539, column: 18, scope: !10405)
!10407 = !DILocation(line: 1539, column: 24, scope: !10405)
!10408 = !DILocation(line: 1539, column: 7, scope: !10123)
!10409 = !DILocation(line: 1541, column: 31, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10405, file: !3, line: 1539, column: 43)
!10411 = !DILocation(line: 1541, column: 37, scope: !10410)
!10412 = !DILocation(line: 1541, column: 4, scope: !10410)
!10413 = !DILocation(line: 1543, column: 4, scope: !10410)
!10414 = !DILocation(line: 1543, column: 10, scope: !10410)
!10415 = !DILocation(line: 1543, column: 17, scope: !10410)
!10416 = !DILocation(line: 1545, column: 4, scope: !10410)
!10417 = !DILocation(line: 1545, column: 10, scope: !10410)
!10418 = !DILocation(line: 1545, column: 20, scope: !10410)
!10419 = !DILocation(line: 1546, column: 4, scope: !10410)
!10420 = !DILocation(line: 1539, column: 27, scope: !10405)
!10421 = !DILocation(line: 1552, column: 29, scope: !10123)
!10422 = !DILocation(line: 1552, column: 35, scope: !10123)
!10423 = !DILocation(line: 30, column: 32, scope: !10118, inlinedAt: !10159)
!10424 = !DILocation(line: 30, column: 22, scope: !10118, inlinedAt: !10159)
!10425 = !DILocation(line: 82, column: 28, scope: !10111, inlinedAt: !10158)
!10426 = !DILocation(line: 189, column: 9, scope: !10103, inlinedAt: !10157)
!10427 = !DILocation(line: 1552, column: 9, scope: !10123)
!10428 = !DILocation(line: 1552, column: 7, scope: !10123)
!10429 = !DILocation(line: 1553, column: 35, scope: !10123)
!10430 = !DILocation(line: 1553, column: 41, scope: !10123)
!10431 = !DILocation(line: 25, column: 32, scope: !10148, inlinedAt: !10151)
!10432 = !DILocation(line: 25, column: 22, scope: !10148, inlinedAt: !10151)
!10433 = !DILocation(line: 90, column: 28, scope: !10142, inlinedAt: !10147)
!10434 = !DILocation(line: 176, column: 9, scope: !10135, inlinedAt: !10141)
!10435 = !DILocation(line: 1553, column: 15, scope: !10123)
!10436 = !DILocation(line: 1553, column: 13, scope: !10123)
!10437 = !DILocation(line: 1554, column: 3, scope: !10123)
!10438 = !DILocation(line: 1556, column: 7, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1556, column: 7)
!10440 = !DILocation(line: 1556, column: 18, scope: !10439)
!10441 = !DILocation(line: 1556, column: 24, scope: !10439)
!10442 = !DILocation(line: 1556, column: 7, scope: !10123)
!10443 = !DILocation(line: 1558, column: 31, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 1556, column: 43)
!10445 = !DILocation(line: 1558, column: 37, scope: !10444)
!10446 = !DILocation(line: 1558, column: 4, scope: !10444)
!10447 = !DILocation(line: 1560, column: 4, scope: !10444)
!10448 = !DILocation(line: 1560, column: 10, scope: !10444)
!10449 = !DILocation(line: 1560, column: 17, scope: !10444)
!10450 = !DILocation(line: 1562, column: 4, scope: !10444)
!10451 = !DILocation(line: 1562, column: 10, scope: !10444)
!10452 = !DILocation(line: 1562, column: 20, scope: !10444)
!10453 = !DILocation(line: 1563, column: 4, scope: !10444)
!10454 = !DILocation(line: 1556, column: 27, scope: !10439)
!10455 = !DILocation(line: 1569, column: 29, scope: !10123)
!10456 = !DILocation(line: 1569, column: 35, scope: !10123)
!10457 = !DILocation(line: 30, column: 32, scope: !10118, inlinedAt: !10131)
!10458 = !DILocation(line: 30, column: 22, scope: !10118, inlinedAt: !10131)
!10459 = !DILocation(line: 82, column: 28, scope: !10111, inlinedAt: !10130)
!10460 = !DILocation(line: 189, column: 9, scope: !10103, inlinedAt: !10129)
!10461 = !DILocation(line: 1569, column: 9, scope: !10123)
!10462 = !DILocation(line: 1569, column: 7, scope: !10123)
!10463 = !DILocation(line: 1570, column: 35, scope: !10123)
!10464 = !DILocation(line: 1570, column: 41, scope: !10123)
!10465 = !DILocation(line: 30, column: 32, scope: !10118, inlinedAt: !10122)
!10466 = !DILocation(line: 30, column: 22, scope: !10118, inlinedAt: !10122)
!10467 = !DILocation(line: 82, column: 28, scope: !10111, inlinedAt: !10117)
!10468 = !DILocation(line: 189, column: 9, scope: !10103, inlinedAt: !10110)
!10469 = !DILocation(line: 1570, column: 13, scope: !10123)
!10470 = !DILocation(line: 1571, column: 3, scope: !10123)
!10471 = !DILocation(line: 1574, column: 30, scope: !10123)
!10472 = !DILocation(line: 1574, column: 36, scope: !10123)
!10473 = !DILocation(line: 1574, column: 3, scope: !10123)
!10474 = !DILocation(line: 1576, column: 3, scope: !10123)
!10475 = !DILocation(line: 1576, column: 9, scope: !10123)
!10476 = !DILocation(line: 1576, column: 16, scope: !10123)
!10477 = !DILocation(line: 1577, column: 3, scope: !10123)
!10478 = !DILocation(line: 1577, column: 9, scope: !10123)
!10479 = !DILocation(line: 1577, column: 19, scope: !10123)
!10480 = !DILocation(line: 1578, column: 3, scope: !10123)
!10481 = !DILocation(line: 1581, column: 17, scope: !10091)
!10482 = !DILocation(line: 1581, column: 2, scope: !10091)
!10483 = !DILocation(line: 1582, column: 19, scope: !10091)
!10484 = !DILocation(line: 1582, column: 25, scope: !10091)
!10485 = !DILocation(line: 1582, column: 34, scope: !10091)
!10486 = !DILocation(line: 1582, column: 38, scope: !10091)
!10487 = !DILocation(line: 1582, column: 2, scope: !10091)
!10488 = !DILocation(line: 1582, column: 8, scope: !10091)
!10489 = !DILocation(line: 1582, column: 14, scope: !10091)
!10490 = !DILocation(line: 1582, column: 17, scope: !10091)
!10491 = !DILocation(line: 1583, column: 6, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1583, column: 6)
!10493 = !DILocation(line: 1583, column: 12, scope: !10492)
!10494 = !DILocation(line: 1583, column: 30, scope: !10492)
!10495 = !DILocation(line: 1583, column: 6, scope: !10091)
!10496 = !DILocation(line: 1584, column: 3, scope: !10492)
!10497 = !DILocation(line: 1585, column: 22, scope: !10091)
!10498 = !DILocation(line: 1585, column: 9, scope: !10091)
!10499 = !DILocation(line: 1585, column: 7, scope: !10091)
!10500 = !DILocation(line: 1586, column: 6, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1586, column: 6)
!10502 = !DILocation(line: 1586, column: 11, scope: !10501)
!10503 = !DILocation(line: 1586, column: 6, scope: !10091)
!10504 = !DILocation(line: 1587, column: 21, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 1586, column: 17)
!10506 = !DILocation(line: 1587, column: 9, scope: !10505)
!10507 = !DILocation(line: 1587, column: 7, scope: !10505)
!10508 = !DILocation(line: 1588, column: 7, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 1588, column: 7)
!10510 = !DILocation(line: 1588, column: 13, scope: !10509)
!10511 = !DILocation(line: 1588, column: 31, scope: !10509)
!10512 = !DILocation(line: 1588, column: 7, scope: !10505)
!10513 = !DILocation(line: 1589, column: 4, scope: !10509)
!10514 = !DILocation(line: 1589, column: 10, scope: !10509)
!10515 = !DILocation(line: 1589, column: 16, scope: !10509)
!10516 = !DILocation(line: 1589, column: 23, scope: !10509)
!10517 = !DILocation(line: 1591, column: 4, scope: !10509)
!10518 = !DILocation(line: 1591, column: 10, scope: !10509)
!10519 = !DILocation(line: 1591, column: 16, scope: !10509)
!10520 = !DILocation(line: 1591, column: 23, scope: !10509)
!10521 = !DILocation(line: 1593, column: 29, scope: !10505)
!10522 = !DILocation(line: 1593, column: 3, scope: !10505)
!10523 = !DILocation(line: 1593, column: 9, scope: !10505)
!10524 = !DILocation(line: 1593, column: 15, scope: !10505)
!10525 = !DILocation(line: 1593, column: 18, scope: !10505)
!10526 = !DILocation(line: 1593, column: 27, scope: !10505)
!10527 = !DILocation(line: 1594, column: 29, scope: !10505)
!10528 = !DILocation(line: 1594, column: 35, scope: !10505)
!10529 = !DILocation(line: 1594, column: 3, scope: !10505)
!10530 = !DILocation(line: 1594, column: 9, scope: !10505)
!10531 = !DILocation(line: 1594, column: 15, scope: !10505)
!10532 = !DILocation(line: 1594, column: 18, scope: !10505)
!10533 = !DILocation(line: 1594, column: 27, scope: !10505)
!10534 = !DILocation(line: 1595, column: 21, scope: !10505)
!10535 = !DILocation(line: 1595, column: 3, scope: !10505)
!10536 = !DILocation(line: 1595, column: 9, scope: !10505)
!10537 = !DILocation(line: 1595, column: 15, scope: !10505)
!10538 = !DILocation(line: 1595, column: 19, scope: !10505)
!10539 = !DILocation(line: 1596, column: 27, scope: !10505)
!10540 = !DILocation(line: 1596, column: 22, scope: !10505)
!10541 = !DILocation(line: 1596, column: 3, scope: !10505)
!10542 = !DILocation(line: 1596, column: 9, scope: !10505)
!10543 = !DILocation(line: 1596, column: 15, scope: !10505)
!10544 = !DILocation(line: 1596, column: 20, scope: !10505)
!10545 = !DILocation(line: 1597, column: 2, scope: !10505)
!10546 = !DILocalVariable(name: "hw_sgl", scope: !10547, file: !3, line: 1598, type: !6235)
!10547 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 1597, column: 9)
!10548 = !DILocation(line: 1598, column: 20, scope: !10547)
!10549 = !DILocalVariable(name: "hw_sgl_addr", scope: !10547, file: !3, line: 1599, type: !1761)
!10550 = !DILocation(line: 1599, column: 14, scope: !10547)
!10551 = !DILocalVariable(name: "i", scope: !10547, file: !3, line: 1600, type: !913)
!10552 = !DILocation(line: 1600, column: 7, scope: !10547)
!10553 = !DILocation(line: 1602, column: 27, scope: !10547)
!10554 = !DILocation(line: 1602, column: 31, scope: !10547)
!10555 = !DILocation(line: 1602, column: 12, scope: !10547)
!10556 = !DILocation(line: 1602, column: 10, scope: !10547)
!10557 = !DILocation(line: 1603, column: 8, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10547, file: !3, line: 1603, column: 7)
!10559 = !DILocation(line: 1603, column: 7, scope: !10547)
!10560 = !DILocation(line: 1604, column: 4, scope: !10558)
!10561 = !DILocation(line: 1606, column: 18, scope: !10547)
!10562 = !DILocation(line: 1606, column: 3, scope: !10547)
!10563 = !DILocation(line: 1606, column: 12, scope: !10547)
!10564 = !DILocation(line: 1606, column: 16, scope: !10547)
!10565 = !DILocation(line: 1607, column: 23, scope: !10547)
!10566 = !DILocation(line: 1607, column: 3, scope: !10547)
!10567 = !DILocation(line: 1607, column: 12, scope: !10547)
!10568 = !DILocation(line: 1607, column: 21, scope: !10547)
!10569 = !DILocation(line: 1609, column: 7, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10547, file: !3, line: 1609, column: 7)
!10571 = !DILocation(line: 1609, column: 13, scope: !10570)
!10572 = !DILocation(line: 1609, column: 31, scope: !10570)
!10573 = !DILocation(line: 1609, column: 7, scope: !10547)
!10574 = !DILocation(line: 1610, column: 4, scope: !10570)
!10575 = !DILocation(line: 1610, column: 10, scope: !10570)
!10576 = !DILocation(line: 1610, column: 16, scope: !10570)
!10577 = !DILocation(line: 1610, column: 23, scope: !10570)
!10578 = !DILocation(line: 1612, column: 4, scope: !10570)
!10579 = !DILocation(line: 1612, column: 10, scope: !10570)
!10580 = !DILocation(line: 1612, column: 16, scope: !10570)
!10581 = !DILocation(line: 1612, column: 23, scope: !10570)
!10582 = !DILocation(line: 1614, column: 29, scope: !10547)
!10583 = !DILocation(line: 1614, column: 3, scope: !10547)
!10584 = !DILocation(line: 1614, column: 9, scope: !10547)
!10585 = !DILocation(line: 1614, column: 15, scope: !10547)
!10586 = !DILocation(line: 1614, column: 18, scope: !10547)
!10587 = !DILocation(line: 1614, column: 27, scope: !10547)
!10588 = !DILocation(line: 1615, column: 29, scope: !10547)
!10589 = !DILocation(line: 1615, column: 35, scope: !10547)
!10590 = !DILocation(line: 1615, column: 3, scope: !10547)
!10591 = !DILocation(line: 1615, column: 9, scope: !10547)
!10592 = !DILocation(line: 1615, column: 15, scope: !10547)
!10593 = !DILocation(line: 1615, column: 18, scope: !10547)
!10594 = !DILocation(line: 1615, column: 27, scope: !10547)
!10595 = !DILocation(line: 1616, column: 21, scope: !10547)
!10596 = !DILocation(line: 1616, column: 3, scope: !10547)
!10597 = !DILocation(line: 1616, column: 9, scope: !10547)
!10598 = !DILocation(line: 1616, column: 15, scope: !10547)
!10599 = !DILocation(line: 1616, column: 19, scope: !10547)
!10600 = !DILocation(line: 1617, column: 22, scope: !10547)
!10601 = !DILocation(line: 1617, column: 3, scope: !10547)
!10602 = !DILocation(line: 1617, column: 9, scope: !10547)
!10603 = !DILocation(line: 1617, column: 15, scope: !10547)
!10604 = !DILocation(line: 1617, column: 20, scope: !10547)
!10605 = !DILocation(line: 1618, column: 26, scope: !10547)
!10606 = !DILocation(line: 1618, column: 3, scope: !10547)
!10607 = !DILocation(line: 1618, column: 9, scope: !10547)
!10608 = !DILocation(line: 1618, column: 15, scope: !10547)
!10609 = !DILocation(line: 1618, column: 24, scope: !10547)
!10610 = !DILocation(line: 1620, column: 3, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10547, file: !3, line: 1620, column: 3)
!10612 = !DILocation(line: 1620, column: 3, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 1620, column: 3)
!10614 = !DILocation(line: 1621, column: 28, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 1620, column: 40)
!10616 = !DILocation(line: 1621, column: 23, scope: !10615)
!10617 = !DILocation(line: 1621, column: 4, scope: !10615)
!10618 = !DILocation(line: 1621, column: 12, scope: !10615)
!10619 = !DILocation(line: 1621, column: 21, scope: !10615)
!10620 = !DILocation(line: 1622, column: 29, scope: !10615)
!10621 = !DILocation(line: 1622, column: 4, scope: !10615)
!10622 = !DILocation(line: 1622, column: 12, scope: !10615)
!10623 = !DILocation(line: 1622, column: 22, scope: !10615)
!10624 = !DILocation(line: 1623, column: 10, scope: !10615)
!10625 = !DILocation(line: 1624, column: 3, scope: !10615)
!10626 = distinct !{!10626, !10610, !10627}
!10627 = !DILocation(line: 1624, column: 3, scope: !10611)
!10628 = !DILocation(line: 1586, column: 14, scope: !10501)
!10629 = !DILabel(scope: !10091, name: "submit", file: !3, line: 1626)
!10630 = !DILocation(line: 1626, column: 1, scope: !10091)
!10631 = !DILocation(line: 1627, column: 2, scope: !10091)
!10632 = !DILocation(line: 1627, column: 2, scope: !10101)
!10633 = !DILocalVariable(name: "__dummy", scope: !10634, file: !3, line: 1627, type: !902)
!10634 = distinct !DILexicalBlock(scope: !10100, file: !3, line: 1627, column: 2)
!10635 = !DILocation(line: 1627, column: 2, scope: !10634)
!10636 = !DILocalVariable(name: "__dummy2", scope: !10634, file: !3, line: 1627, type: !902)
!10637 = !DILocation(line: 1627, column: 2, scope: !10100)
!10638 = !DILocation(line: 1627, column: 2, scope: !10099)
!10639 = !DILocation(line: 1627, column: 2, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10099, file: !3, line: 1627, column: 2)
!10641 = !DILocalVariable(name: "__dummy", scope: !10642, file: !3, line: 1627, type: !902)
!10642 = distinct !DILexicalBlock(scope: !10643, file: !3, line: 1627, column: 2)
!10643 = distinct !DILexicalBlock(scope: !10640, file: !3, line: 1627, column: 2)
!10644 = !DILocation(line: 1627, column: 2, scope: !10642)
!10645 = !DILocalVariable(name: "__dummy2", scope: !10642, file: !3, line: 1627, type: !902)
!10646 = !DILocation(line: 1627, column: 2, scope: !10643)
!10647 = !DILocation(line: 1627, column: 2, scope: !10098)
!10648 = !{i32 -2140910971}
!10649 = !DILocation(line: 1627, column: 2, scope: !10097)
!10650 = !DILocation(line: 329, column: 10, scope: !6570, inlinedAt: !10096)
!10651 = !DILocation(line: 329, column: 16, scope: !6570, inlinedAt: !10096)
!10652 = !DILocation(line: 1628, column: 2, scope: !10091)
!10653 = !DILocation(line: 1628, column: 6, scope: !10091)
!10654 = !DILocation(line: 1628, column: 11, scope: !10091)
!10655 = !DILocation(line: 1628, column: 15, scope: !10091)
!10656 = !DILocation(line: 1629, column: 26, scope: !10091)
!10657 = !DILocation(line: 1629, column: 30, scope: !10091)
!10658 = !DILocation(line: 1629, column: 42, scope: !10091)
!10659 = !DILocation(line: 409, column: 2, scope: !6711, inlinedAt: !10093)
!10660 = !DILocation(line: 409, column: 2, scope: !6716, inlinedAt: !10093)
!10661 = !DILocation(line: 409, column: 2, scope: !6717, inlinedAt: !10093)
!10662 = !DILocation(line: 409, column: 2, scope: !6724, inlinedAt: !10093)
!10663 = !DILocation(line: 409, column: 2, scope: !6727, inlinedAt: !10093)
!10664 = !DILocation(line: 1631, column: 2, scope: !10091)
!10665 = !DILocation(line: 1632, column: 1, scope: !10091)
!10666 = distinct !DISubprogram(name: "myrb_pthru_queuecommand", scope: !3, file: !3, line: 1265, type: !5960, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10667 = !DILocation(line: 407, column: 64, scope: !6561, inlinedAt: !10668)
!10668 = distinct !DILocation(line: 1335, column: 2, scope: !10666)
!10669 = !DILocation(line: 407, column: 84, scope: !6561, inlinedAt: !10668)
!10670 = !DILocation(line: 327, column: 67, scope: !6570, inlinedAt: !10671)
!10671 = distinct !DILocation(line: 1333, column: 2, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 1333, column: 2)
!10673 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 1333, column: 2)
!10674 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 1333, column: 2)
!10675 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 1333, column: 2)
!10676 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 1333, column: 2)
!10677 = !DILocalVariable(name: "shost", arg: 1, scope: !10666, file: !3, line: 1265, type: !5782)
!10678 = !DILocation(line: 1265, column: 54, scope: !10666)
!10679 = !DILocalVariable(name: "scmd", arg: 2, scope: !10666, file: !3, line: 1266, type: !5962)
!10680 = !DILocation(line: 1266, column: 21, scope: !10666)
!10681 = !DILocalVariable(name: "cb", scope: !10666, file: !3, line: 1268, type: !5760)
!10682 = !DILocation(line: 1268, column: 19, scope: !10666)
!10683 = !DILocation(line: 1268, column: 35, scope: !10666)
!10684 = !DILocation(line: 1268, column: 24, scope: !10666)
!10685 = !DILocalVariable(name: "cmd_blk", scope: !10666, file: !3, line: 1269, type: !6225)
!10686 = !DILocation(line: 1269, column: 22, scope: !10666)
!10687 = !DILocation(line: 1269, column: 46, scope: !10666)
!10688 = !DILocation(line: 1269, column: 32, scope: !10666)
!10689 = !DILocalVariable(name: "mbox", scope: !10666, file: !3, line: 1270, type: !6245)
!10690 = !DILocation(line: 1270, column: 23, scope: !10666)
!10691 = !DILocation(line: 1270, column: 31, scope: !10666)
!10692 = !DILocation(line: 1270, column: 40, scope: !10666)
!10693 = !DILocalVariable(name: "dcdb", scope: !10666, file: !3, line: 1271, type: !6232)
!10694 = !DILocation(line: 1271, column: 20, scope: !10666)
!10695 = !DILocalVariable(name: "dcdb_addr", scope: !10666, file: !3, line: 1272, type: !1761)
!10696 = !DILocation(line: 1272, column: 13, scope: !10666)
!10697 = !DILocalVariable(name: "sdev", scope: !10666, file: !3, line: 1273, type: !5809)
!10698 = !DILocation(line: 1273, column: 22, scope: !10666)
!10699 = !DILocation(line: 1273, column: 29, scope: !10666)
!10700 = !DILocation(line: 1273, column: 35, scope: !10666)
!10701 = !DILocalVariable(name: "sgl", scope: !10666, file: !3, line: 1274, type: !6000)
!10702 = !DILocation(line: 1274, column: 22, scope: !10666)
!10703 = !DILocalVariable(name: "flags", scope: !10666, file: !3, line: 1275, type: !902)
!10704 = !DILocation(line: 1275, column: 16, scope: !10666)
!10705 = !DILocalVariable(name: "nsge", scope: !10666, file: !3, line: 1276, type: !913)
!10706 = !DILocation(line: 1276, column: 6, scope: !10666)
!10707 = !DILocation(line: 1278, column: 17, scope: !10666)
!10708 = !DILocation(line: 1278, column: 2, scope: !10666)
!10709 = !DILocation(line: 1279, column: 24, scope: !10666)
!10710 = !DILocation(line: 1279, column: 28, scope: !10666)
!10711 = !DILocation(line: 1279, column: 9, scope: !10666)
!10712 = !DILocation(line: 1279, column: 7, scope: !10666)
!10713 = !DILocation(line: 1280, column: 7, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 1280, column: 6)
!10715 = !DILocation(line: 1280, column: 6, scope: !10666)
!10716 = !DILocation(line: 1281, column: 3, scope: !10714)
!10717 = !DILocation(line: 1282, column: 22, scope: !10666)
!10718 = !DILocation(line: 1282, column: 9, scope: !10666)
!10719 = !DILocation(line: 1282, column: 7, scope: !10666)
!10720 = !DILocation(line: 1283, column: 6, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 1283, column: 6)
!10722 = !DILocation(line: 1283, column: 11, scope: !10721)
!10723 = !DILocation(line: 1283, column: 6, scope: !10666)
!10724 = !DILocation(line: 1284, column: 17, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1283, column: 16)
!10726 = !DILocation(line: 1284, column: 21, scope: !10725)
!10727 = !DILocation(line: 1284, column: 32, scope: !10725)
!10728 = !DILocation(line: 1284, column: 38, scope: !10725)
!10729 = !DILocation(line: 1284, column: 3, scope: !10725)
!10730 = !DILocation(line: 1285, column: 3, scope: !10725)
!10731 = !DILocation(line: 1285, column: 9, scope: !10725)
!10732 = !DILocation(line: 1285, column: 16, scope: !10725)
!10733 = !DILocation(line: 1286, column: 3, scope: !10725)
!10734 = !DILocation(line: 1286, column: 9, scope: !10725)
!10735 = !DILocation(line: 1286, column: 19, scope: !10725)
!10736 = !DILocation(line: 1287, column: 3, scope: !10725)
!10737 = !DILocation(line: 1290, column: 2, scope: !10666)
!10738 = !DILocation(line: 1290, column: 8, scope: !10666)
!10739 = !DILocation(line: 1290, column: 14, scope: !10666)
!10740 = !DILocation(line: 1290, column: 21, scope: !10666)
!10741 = !DILocation(line: 1291, column: 19, scope: !10666)
!10742 = !DILocation(line: 1291, column: 25, scope: !10666)
!10743 = !DILocation(line: 1291, column: 34, scope: !10666)
!10744 = !DILocation(line: 1291, column: 38, scope: !10666)
!10745 = !DILocation(line: 1291, column: 2, scope: !10666)
!10746 = !DILocation(line: 1291, column: 8, scope: !10666)
!10747 = !DILocation(line: 1291, column: 14, scope: !10666)
!10748 = !DILocation(line: 1291, column: 17, scope: !10666)
!10749 = !DILocation(line: 1292, column: 21, scope: !10666)
!10750 = !DILocation(line: 1292, column: 2, scope: !10666)
!10751 = !DILocation(line: 1292, column: 8, scope: !10666)
!10752 = !DILocation(line: 1292, column: 14, scope: !10666)
!10753 = !DILocation(line: 1292, column: 19, scope: !10666)
!10754 = !DILocation(line: 1293, column: 18, scope: !10666)
!10755 = !DILocation(line: 1293, column: 24, scope: !10666)
!10756 = !DILocation(line: 1293, column: 2, scope: !10666)
!10757 = !DILocation(line: 1293, column: 8, scope: !10666)
!10758 = !DILocation(line: 1293, column: 16, scope: !10666)
!10759 = !DILocation(line: 1294, column: 17, scope: !10666)
!10760 = !DILocation(line: 1294, column: 23, scope: !10666)
!10761 = !DILocation(line: 1294, column: 2, scope: !10666)
!10762 = !DILocation(line: 1294, column: 8, scope: !10666)
!10763 = !DILocation(line: 1294, column: 15, scope: !10666)
!10764 = !DILocation(line: 1295, column: 10, scope: !10666)
!10765 = !DILocation(line: 1295, column: 16, scope: !10666)
!10766 = !DILocation(line: 1295, column: 2, scope: !10666)
!10767 = !DILocation(line: 1297, column: 3, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 1295, column: 35)
!10769 = !DILocation(line: 1297, column: 9, scope: !10768)
!10770 = !DILocation(line: 1297, column: 19, scope: !10768)
!10771 = !DILocation(line: 1298, column: 3, scope: !10768)
!10772 = !DILocation(line: 1300, column: 3, scope: !10768)
!10773 = !DILocation(line: 1300, column: 9, scope: !10768)
!10774 = !DILocation(line: 1300, column: 19, scope: !10768)
!10775 = !DILocation(line: 1301, column: 3, scope: !10768)
!10776 = !DILocation(line: 1303, column: 3, scope: !10768)
!10777 = !DILocation(line: 1303, column: 9, scope: !10768)
!10778 = !DILocation(line: 1303, column: 19, scope: !10768)
!10779 = !DILocation(line: 1304, column: 3, scope: !10768)
!10780 = !DILocation(line: 1306, column: 3, scope: !10768)
!10781 = !DILocation(line: 1306, column: 9, scope: !10768)
!10782 = !DILocation(line: 1306, column: 19, scope: !10768)
!10783 = !DILocation(line: 1307, column: 3, scope: !10768)
!10784 = !DILocation(line: 1309, column: 2, scope: !10666)
!10785 = !DILocation(line: 1309, column: 8, scope: !10666)
!10786 = !DILocation(line: 1309, column: 21, scope: !10666)
!10787 = !DILocation(line: 1310, column: 6, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 1310, column: 6)
!10789 = !DILocation(line: 1310, column: 12, scope: !10788)
!10790 = !DILocation(line: 1310, column: 21, scope: !10788)
!10791 = !DILocation(line: 1310, column: 29, scope: !10788)
!10792 = !DILocation(line: 1310, column: 6, scope: !10666)
!10793 = !DILocation(line: 1311, column: 3, scope: !10788)
!10794 = !DILocation(line: 1311, column: 9, scope: !10788)
!10795 = !DILocation(line: 1311, column: 17, scope: !10788)
!10796 = !DILocation(line: 1312, column: 11, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10788, file: !3, line: 1312, column: 11)
!10798 = !DILocation(line: 1312, column: 17, scope: !10797)
!10799 = !DILocation(line: 1312, column: 26, scope: !10797)
!10800 = !DILocation(line: 1312, column: 34, scope: !10797)
!10801 = !DILocation(line: 1312, column: 11, scope: !10788)
!10802 = !DILocation(line: 1313, column: 3, scope: !10797)
!10803 = !DILocation(line: 1313, column: 9, scope: !10797)
!10804 = !DILocation(line: 1313, column: 17, scope: !10797)
!10805 = !DILocation(line: 1314, column: 11, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10797, file: !3, line: 1314, column: 11)
!10807 = !DILocation(line: 1314, column: 17, scope: !10806)
!10808 = !DILocation(line: 1314, column: 26, scope: !10806)
!10809 = !DILocation(line: 1314, column: 34, scope: !10806)
!10810 = !DILocation(line: 1314, column: 11, scope: !10797)
!10811 = !DILocation(line: 1315, column: 3, scope: !10806)
!10812 = !DILocation(line: 1315, column: 9, scope: !10806)
!10813 = !DILocation(line: 1315, column: 17, scope: !10806)
!10814 = !DILocation(line: 1317, column: 3, scope: !10806)
!10815 = !DILocation(line: 1317, column: 9, scope: !10806)
!10816 = !DILocation(line: 1317, column: 17, scope: !10806)
!10817 = !DILocation(line: 1318, column: 2, scope: !10666)
!10818 = !DILocation(line: 1318, column: 8, scope: !10666)
!10819 = !DILocation(line: 1318, column: 21, scope: !10666)
!10820 = !DILocation(line: 1319, column: 2, scope: !10666)
!10821 = !DILocation(line: 1319, column: 8, scope: !10666)
!10822 = !DILocation(line: 1319, column: 25, scope: !10666)
!10823 = !DILocation(line: 1320, column: 20, scope: !10666)
!10824 = !DILocation(line: 1320, column: 8, scope: !10666)
!10825 = !DILocation(line: 1320, column: 6, scope: !10666)
!10826 = !DILocation(line: 1321, column: 19, scope: !10666)
!10827 = !DILocation(line: 1321, column: 2, scope: !10666)
!10828 = !DILocation(line: 1321, column: 8, scope: !10666)
!10829 = !DILocation(line: 1321, column: 17, scope: !10666)
!10830 = !DILocation(line: 1322, column: 6, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 1322, column: 6)
!10832 = !DILocation(line: 1322, column: 22, scope: !10831)
!10833 = !DILocation(line: 1322, column: 6, scope: !10666)
!10834 = !DILocation(line: 1323, column: 23, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 1322, column: 35)
!10836 = !DILocation(line: 1323, column: 39, scope: !10835)
!10837 = !DILocation(line: 1323, column: 3, scope: !10835)
!10838 = !DILocation(line: 1323, column: 9, scope: !10835)
!10839 = !DILocation(line: 1323, column: 21, scope: !10835)
!10840 = !DILocation(line: 1324, column: 24, scope: !10835)
!10841 = !DILocation(line: 1324, column: 40, scope: !10835)
!10842 = !DILocation(line: 1324, column: 3, scope: !10835)
!10843 = !DILocation(line: 1324, column: 9, scope: !10835)
!10844 = !DILocation(line: 1324, column: 22, scope: !10835)
!10845 = !DILocation(line: 1325, column: 2, scope: !10835)
!10846 = !DILocation(line: 1326, column: 23, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 1325, column: 9)
!10848 = !DILocation(line: 1326, column: 3, scope: !10847)
!10849 = !DILocation(line: 1326, column: 9, scope: !10847)
!10850 = !DILocation(line: 1326, column: 21, scope: !10847)
!10851 = !DILocation(line: 1327, column: 3, scope: !10847)
!10852 = !DILocation(line: 1327, column: 9, scope: !10847)
!10853 = !DILocation(line: 1327, column: 22, scope: !10847)
!10854 = !DILocation(line: 1329, column: 18, scope: !10666)
!10855 = !DILocation(line: 1329, column: 24, scope: !10666)
!10856 = !DILocation(line: 1329, column: 2, scope: !10666)
!10857 = !DILocation(line: 1329, column: 8, scope: !10666)
!10858 = !DILocation(line: 1329, column: 16, scope: !10666)
!10859 = !DILocation(line: 1330, column: 2, scope: !10666)
!10860 = !DILocation(line: 1330, column: 8, scope: !10666)
!10861 = !DILocation(line: 1330, column: 18, scope: !10666)
!10862 = !DILocation(line: 1331, column: 10, scope: !10666)
!10863 = !DILocation(line: 1331, column: 16, scope: !10666)
!10864 = !DILocation(line: 1331, column: 2, scope: !10666)
!10865 = !DILocation(line: 1331, column: 21, scope: !10666)
!10866 = !DILocation(line: 1331, column: 27, scope: !10666)
!10867 = !DILocation(line: 1331, column: 33, scope: !10666)
!10868 = !DILocation(line: 1331, column: 39, scope: !10666)
!10869 = !DILocation(line: 1333, column: 2, scope: !10666)
!10870 = !DILocation(line: 1333, column: 2, scope: !10676)
!10871 = !DILocalVariable(name: "__dummy", scope: !10872, file: !3, line: 1333, type: !902)
!10872 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 1333, column: 2)
!10873 = !DILocation(line: 1333, column: 2, scope: !10872)
!10874 = !DILocalVariable(name: "__dummy2", scope: !10872, file: !3, line: 1333, type: !902)
!10875 = !DILocation(line: 1333, column: 2, scope: !10675)
!10876 = !DILocation(line: 1333, column: 2, scope: !10674)
!10877 = !DILocation(line: 1333, column: 2, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 1333, column: 2)
!10879 = !DILocalVariable(name: "__dummy", scope: !10880, file: !3, line: 1333, type: !902)
!10880 = distinct !DILexicalBlock(scope: !10881, file: !3, line: 1333, column: 2)
!10881 = distinct !DILexicalBlock(scope: !10878, file: !3, line: 1333, column: 2)
!10882 = !DILocation(line: 1333, column: 2, scope: !10880)
!10883 = !DILocalVariable(name: "__dummy2", scope: !10880, file: !3, line: 1333, type: !902)
!10884 = !DILocation(line: 1333, column: 2, scope: !10881)
!10885 = !DILocation(line: 1333, column: 2, scope: !10673)
!10886 = !{i32 -2140913287}
!10887 = !DILocation(line: 1333, column: 2, scope: !10672)
!10888 = !DILocation(line: 329, column: 10, scope: !6570, inlinedAt: !10671)
!10889 = !DILocation(line: 329, column: 16, scope: !6570, inlinedAt: !10671)
!10890 = !DILocation(line: 1334, column: 2, scope: !10666)
!10891 = !DILocation(line: 1334, column: 6, scope: !10666)
!10892 = !DILocation(line: 1334, column: 11, scope: !10666)
!10893 = !DILocation(line: 1334, column: 15, scope: !10666)
!10894 = !DILocation(line: 1335, column: 26, scope: !10666)
!10895 = !DILocation(line: 1335, column: 30, scope: !10666)
!10896 = !DILocation(line: 1335, column: 42, scope: !10666)
!10897 = !DILocation(line: 409, column: 2, scope: !6711, inlinedAt: !10668)
!10898 = !DILocation(line: 409, column: 2, scope: !6716, inlinedAt: !10668)
!10899 = !DILocation(line: 409, column: 2, scope: !6717, inlinedAt: !10668)
!10900 = !DILocation(line: 409, column: 2, scope: !6724, inlinedAt: !10668)
!10901 = !DILocation(line: 409, column: 2, scope: !6727, inlinedAt: !10668)
!10902 = !DILocation(line: 1336, column: 2, scope: !10666)
!10903 = !DILocation(line: 1337, column: 1, scope: !10666)
!10904 = distinct !DISubprogram(name: "myrb_inquiry", scope: !3, file: !3, line: 1339, type: !10905, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10905 = !DISubroutineType(types: !10906)
!10906 = !{null, !5760, !5962}
!10907 = !DILocalVariable(name: "cb", arg: 1, scope: !10904, file: !3, line: 1339, type: !5760)
!10908 = !DILocation(line: 1339, column: 43, scope: !10904)
!10909 = !DILocalVariable(name: "scmd", arg: 2, scope: !10904, file: !3, line: 1340, type: !5962)
!10910 = !DILocation(line: 1340, column: 21, scope: !10904)
!10911 = !DILocalVariable(name: "inq", scope: !10904, file: !3, line: 1342, type: !10912)
!10912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 288, elements: !10913)
!10913 = !{!10914}
!10914 = !DISubrange(count: 36)
!10915 = !DILocation(line: 1342, column: 16, scope: !10904)
!10916 = !DILocation(line: 1350, column: 6, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 1350, column: 6)
!10918 = !DILocation(line: 1350, column: 10, scope: !10917)
!10919 = !DILocation(line: 1350, column: 20, scope: !10917)
!10920 = !DILocation(line: 1350, column: 6, scope: !10904)
!10921 = !DILocation(line: 1351, column: 3, scope: !10917)
!10922 = !DILocation(line: 1351, column: 10, scope: !10917)
!10923 = !DILocation(line: 1352, column: 6, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 1352, column: 6)
!10925 = !DILocation(line: 1352, column: 10, scope: !10924)
!10926 = !DILocation(line: 1352, column: 20, scope: !10924)
!10927 = !DILocation(line: 1352, column: 6, scope: !10904)
!10928 = !DILocation(line: 1353, column: 3, scope: !10924)
!10929 = !DILocation(line: 1353, column: 10, scope: !10924)
!10930 = !DILocation(line: 1354, column: 10, scope: !10904)
!10931 = !DILocation(line: 1354, column: 19, scope: !10904)
!10932 = !DILocation(line: 1354, column: 23, scope: !10904)
!10933 = !DILocation(line: 1354, column: 2, scope: !10904)
!10934 = !DILocation(line: 1355, column: 10, scope: !10904)
!10935 = !DILocation(line: 1355, column: 19, scope: !10904)
!10936 = !DILocation(line: 1355, column: 23, scope: !10904)
!10937 = !DILocation(line: 1355, column: 2, scope: !10904)
!10938 = !DILocation(line: 1356, column: 10, scope: !10904)
!10939 = !DILocation(line: 1356, column: 20, scope: !10904)
!10940 = !DILocation(line: 1356, column: 24, scope: !10904)
!10941 = !DILocation(line: 1356, column: 2, scope: !10904)
!10942 = !DILocation(line: 1357, column: 10, scope: !10904)
!10943 = !DILocation(line: 1357, column: 20, scope: !10904)
!10944 = !DILocation(line: 1357, column: 24, scope: !10904)
!10945 = !DILocation(line: 1357, column: 2, scope: !10904)
!10946 = !DILocation(line: 1359, column: 27, scope: !10904)
!10947 = !DILocation(line: 1359, column: 41, scope: !10904)
!10948 = !DILocation(line: 1359, column: 2, scope: !10904)
!10949 = !DILocation(line: 1360, column: 1, scope: !10904)
!10950 = distinct !DISubprogram(name: "myrb_mode_sense", scope: !3, file: !3, line: 1363, type: !10951, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10951 = !DISubroutineType(types: !10952)
!10952 = !{null, !5760, !5962, !6294}
!10953 = !DILocalVariable(name: "val", arg: 1, scope: !10954, file: !10119, line: 53, type: !1683)
!10954 = distinct !DISubprogram(name: "put_unaligned_be16", scope: !10119, file: !10119, line: 53, type: !10955, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{null, !1683, !973}
!10957 = !DILocation(line: 53, column: 52, scope: !10954, inlinedAt: !10958)
!10958 = distinct !DILocation(line: 1393, column: 3, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10960, file: !3, line: 1391, column: 24)
!10960 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 1391, column: 6)
!10961 = !DILocalVariable(name: "p", arg: 2, scope: !10954, file: !10119, line: 53, type: !973)
!10962 = !DILocation(line: 53, column: 63, scope: !10954, inlinedAt: !10958)
!10963 = !DILocalVariable(name: "val", arg: 1, scope: !10964, file: !10119, line: 58, type: !268)
!10964 = distinct !DISubprogram(name: "put_unaligned_be32", scope: !10119, file: !10119, line: 58, type: !10965, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!10965 = !DISubroutineType(types: !10966)
!10966 = !{null, !268, !973}
!10967 = !DILocation(line: 58, column: 52, scope: !10964, inlinedAt: !10968)
!10968 = distinct !DILocation(line: 1385, column: 3, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 1380, column: 12)
!10970 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 1380, column: 6)
!10971 = !DILocalVariable(name: "p", arg: 2, scope: !10964, file: !10119, line: 58, type: !973)
!10972 = !DILocation(line: 58, column: 63, scope: !10964, inlinedAt: !10968)
!10973 = !DILocation(line: 58, column: 52, scope: !10964, inlinedAt: !10974)
!10974 = distinct !DILocation(line: 1384, column: 3, scope: !10969)
!10975 = !DILocation(line: 58, column: 63, scope: !10964, inlinedAt: !10974)
!10976 = !DILocalVariable(name: "cb", arg: 1, scope: !10950, file: !3, line: 1363, type: !5760)
!10977 = !DILocation(line: 1363, column: 34, scope: !10950)
!10978 = !DILocalVariable(name: "scmd", arg: 2, scope: !10950, file: !3, line: 1363, type: !5962)
!10979 = !DILocation(line: 1363, column: 56, scope: !10950)
!10980 = !DILocalVariable(name: "ldev_info", arg: 3, scope: !10950, file: !3, line: 1364, type: !6294)
!10981 = !DILocation(line: 1364, column: 26, scope: !10950)
!10982 = !DILocalVariable(name: "modes", scope: !10950, file: !3, line: 1366, type: !4880)
!10983 = !DILocation(line: 1366, column: 16, scope: !10950)
!10984 = !DILocalVariable(name: "mode_pg", scope: !10950, file: !3, line: 1366, type: !5840)
!10985 = !DILocation(line: 1366, column: 28, scope: !10950)
!10986 = !DILocalVariable(name: "dbd", scope: !10950, file: !3, line: 1367, type: !1262)
!10987 = !DILocation(line: 1367, column: 7, scope: !10950)
!10988 = !DILocalVariable(name: "mode_len", scope: !10950, file: !3, line: 1368, type: !1102)
!10989 = !DILocation(line: 1368, column: 9, scope: !10950)
!10990 = !DILocation(line: 1370, column: 9, scope: !10950)
!10991 = !DILocation(line: 1370, column: 15, scope: !10950)
!10992 = !DILocation(line: 1370, column: 23, scope: !10950)
!10993 = !DILocation(line: 1370, column: 31, scope: !10950)
!10994 = !DILocation(line: 1370, column: 6, scope: !10950)
!10995 = !DILocation(line: 1371, column: 6, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 1371, column: 6)
!10997 = !DILocation(line: 1371, column: 6, scope: !10950)
!10998 = !DILocation(line: 1372, column: 12, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 1371, column: 11)
!11000 = !DILocation(line: 1373, column: 14, scope: !10999)
!11001 = !DILocation(line: 1373, column: 11, scope: !10999)
!11002 = !DILocation(line: 1374, column: 2, scope: !10999)
!11003 = !DILocation(line: 1375, column: 12, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 1374, column: 9)
!11005 = !DILocation(line: 1376, column: 14, scope: !11004)
!11006 = !DILocation(line: 1376, column: 11, scope: !11004)
!11007 = !DILocation(line: 1378, column: 2, scope: !10950)
!11008 = !DILocation(line: 1379, column: 13, scope: !10950)
!11009 = !DILocation(line: 1379, column: 22, scope: !10950)
!11010 = !DILocation(line: 1379, column: 2, scope: !10950)
!11011 = !DILocation(line: 1379, column: 11, scope: !10950)
!11012 = !DILocation(line: 1380, column: 7, scope: !10970)
!11013 = !DILocation(line: 1380, column: 6, scope: !10950)
!11014 = !DILocalVariable(name: "block_desc", scope: !10969, file: !3, line: 1381, type: !5840)
!11015 = !DILocation(line: 1381, column: 18, scope: !10969)
!11016 = !DILocation(line: 1381, column: 32, scope: !10969)
!11017 = !DILocation(line: 1383, column: 3, scope: !10969)
!11018 = !DILocation(line: 1383, column: 12, scope: !10969)
!11019 = !DILocation(line: 1384, column: 22, scope: !10969)
!11020 = !DILocation(line: 1384, column: 33, scope: !10969)
!11021 = !DILocation(line: 1384, column: 40, scope: !10969)
!11022 = !DILocation(line: 60, column: 19, scope: !10964, inlinedAt: !10974)
!11023 = !DILocation(line: 60, column: 14, scope: !10964, inlinedAt: !10974)
!11024 = !DILocation(line: 60, column: 4, scope: !10964, inlinedAt: !10974)
!11025 = !DILocation(line: 60, column: 17, scope: !10964, inlinedAt: !10974)
!11026 = !DILocation(line: 1385, column: 22, scope: !10969)
!11027 = !DILocation(line: 1385, column: 26, scope: !10969)
!11028 = !DILocation(line: 1385, column: 44, scope: !10969)
!11029 = !DILocation(line: 60, column: 19, scope: !10964, inlinedAt: !10968)
!11030 = !DILocation(line: 60, column: 14, scope: !10964, inlinedAt: !10968)
!11031 = !DILocation(line: 60, column: 4, scope: !10964, inlinedAt: !10968)
!11032 = !DILocation(line: 60, column: 17, scope: !10964, inlinedAt: !10968)
!11033 = !DILocation(line: 1386, column: 2, scope: !10969)
!11034 = !DILocation(line: 1387, column: 2, scope: !10950)
!11035 = !DILocation(line: 1387, column: 13, scope: !10950)
!11036 = !DILocation(line: 1388, column: 2, scope: !10950)
!11037 = !DILocation(line: 1388, column: 13, scope: !10950)
!11038 = !DILocation(line: 1389, column: 6, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 1389, column: 6)
!11040 = !DILocation(line: 1389, column: 17, scope: !11039)
!11041 = !DILocation(line: 1389, column: 6, scope: !10950)
!11042 = !DILocation(line: 1390, column: 3, scope: !11039)
!11043 = !DILocation(line: 1390, column: 14, scope: !11039)
!11044 = !DILocation(line: 1391, column: 6, scope: !10960)
!11045 = !DILocation(line: 1391, column: 10, scope: !10960)
!11046 = !DILocation(line: 1391, column: 6, scope: !10950)
!11047 = !DILocation(line: 1392, column: 3, scope: !10959)
!11048 = !DILocation(line: 1392, column: 14, scope: !10959)
!11049 = !DILocation(line: 1393, column: 22, scope: !10959)
!11050 = !DILocation(line: 1393, column: 26, scope: !10959)
!11051 = !DILocation(line: 1393, column: 41, scope: !10959)
!11052 = !DILocation(line: 55, column: 19, scope: !10954, inlinedAt: !10958)
!11053 = !DILocation(line: 55, column: 14, scope: !10954, inlinedAt: !10958)
!11054 = !DILocation(line: 55, column: 4, scope: !10954, inlinedAt: !10958)
!11055 = !DILocation(line: 55, column: 17, scope: !10954, inlinedAt: !10958)
!11056 = !DILocation(line: 1394, column: 2, scope: !10959)
!11057 = !DILocation(line: 1396, column: 27, scope: !10950)
!11058 = !DILocation(line: 1396, column: 33, scope: !10950)
!11059 = !DILocation(line: 1396, column: 40, scope: !10950)
!11060 = !DILocation(line: 1396, column: 2, scope: !10950)
!11061 = !DILocation(line: 1397, column: 1, scope: !10950)
!11062 = distinct !DISubprogram(name: "myrb_read_capacity", scope: !3, file: !3, line: 1408, type: !10951, scopeLine: 1410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11063 = !DILocation(line: 58, column: 52, scope: !10964, inlinedAt: !11064)
!11064 = distinct !DILocation(line: 1417, column: 2, scope: !11062)
!11065 = !DILocation(line: 58, column: 63, scope: !10964, inlinedAt: !11064)
!11066 = !DILocation(line: 58, column: 52, scope: !10964, inlinedAt: !11067)
!11067 = distinct !DILocation(line: 1416, column: 2, scope: !11062)
!11068 = !DILocation(line: 58, column: 63, scope: !10964, inlinedAt: !11067)
!11069 = !DILocalVariable(name: "cb", arg: 1, scope: !11062, file: !3, line: 1408, type: !5760)
!11070 = !DILocation(line: 1408, column: 49, scope: !11062)
!11071 = !DILocalVariable(name: "scmd", arg: 2, scope: !11062, file: !3, line: 1408, type: !5962)
!11072 = !DILocation(line: 1408, column: 71, scope: !11062)
!11073 = !DILocalVariable(name: "ldev_info", arg: 3, scope: !11062, file: !3, line: 1409, type: !6294)
!11074 = !DILocation(line: 1409, column: 26, scope: !11062)
!11075 = !DILocalVariable(name: "data", scope: !11062, file: !3, line: 1411, type: !295)
!11076 = !DILocation(line: 1411, column: 16, scope: !11062)
!11077 = !DILocation(line: 1416, column: 21, scope: !11062)
!11078 = !DILocation(line: 1416, column: 32, scope: !11062)
!11079 = !DILocation(line: 1416, column: 37, scope: !11062)
!11080 = !DILocation(line: 1416, column: 43, scope: !11062)
!11081 = !DILocation(line: 60, column: 19, scope: !10964, inlinedAt: !11067)
!11082 = !DILocation(line: 60, column: 14, scope: !10964, inlinedAt: !11067)
!11083 = !DILocation(line: 60, column: 4, scope: !10964, inlinedAt: !11067)
!11084 = !DILocation(line: 60, column: 17, scope: !10964, inlinedAt: !11067)
!11085 = !DILocation(line: 1417, column: 21, scope: !11062)
!11086 = !DILocation(line: 1417, column: 25, scope: !11062)
!11087 = !DILocation(line: 1417, column: 43, scope: !11062)
!11088 = !DILocation(line: 60, column: 19, scope: !10964, inlinedAt: !11064)
!11089 = !DILocation(line: 60, column: 14, scope: !10964, inlinedAt: !11064)
!11090 = !DILocation(line: 60, column: 4, scope: !10964, inlinedAt: !11064)
!11091 = !DILocation(line: 60, column: 17, scope: !10964, inlinedAt: !11064)
!11092 = !DILocation(line: 1418, column: 27, scope: !11062)
!11093 = !DILocation(line: 1418, column: 33, scope: !11062)
!11094 = !DILocation(line: 1418, column: 2, scope: !11062)
!11095 = !DILocation(line: 1419, column: 1, scope: !11062)
!11096 = distinct !DISubprogram(name: "myrb_request_sense", scope: !3, file: !3, line: 1399, type: !10905, scopeLine: 1401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11097 = !DILocalVariable(name: "cb", arg: 1, scope: !11096, file: !3, line: 1399, type: !5760)
!11098 = !DILocation(line: 1399, column: 49, scope: !11096)
!11099 = !DILocalVariable(name: "scmd", arg: 2, scope: !11096, file: !3, line: 1400, type: !5962)
!11100 = !DILocation(line: 1400, column: 21, scope: !11096)
!11101 = !DILocation(line: 1402, column: 29, scope: !11096)
!11102 = !DILocation(line: 1402, column: 35, scope: !11096)
!11103 = !DILocation(line: 1402, column: 2, scope: !11096)
!11104 = !DILocation(line: 1404, column: 27, scope: !11096)
!11105 = !DILocation(line: 1404, column: 33, scope: !11096)
!11106 = !DILocation(line: 1404, column: 39, scope: !11096)
!11107 = !DILocation(line: 1404, column: 2, scope: !11096)
!11108 = !DILocation(line: 1406, column: 1, scope: !11096)
!11109 = distinct !DISubprogram(name: "myrb_reset_cmd", scope: !3, file: !3, line: 152, type: !8943, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11110 = !DILocalVariable(name: "cmd_blk", arg: 1, scope: !11109, file: !3, line: 152, type: !6225)
!11111 = !DILocation(line: 152, column: 55, scope: !11109)
!11112 = !DILocalVariable(name: "mbox", scope: !11109, file: !3, line: 154, type: !6245)
!11113 = !DILocation(line: 154, column: 23, scope: !11109)
!11114 = !DILocation(line: 154, column: 31, scope: !11109)
!11115 = !DILocation(line: 154, column: 40, scope: !11109)
!11116 = !DILocation(line: 156, column: 9, scope: !11109)
!11117 = !DILocation(line: 156, column: 2, scope: !11109)
!11118 = !DILocation(line: 157, column: 2, scope: !11109)
!11119 = !DILocation(line: 157, column: 11, scope: !11109)
!11120 = !DILocation(line: 157, column: 18, scope: !11109)
!11121 = !DILocation(line: 158, column: 1, scope: !11109)
!11122 = distinct !DISubprogram(name: "scsi_sglist", scope: !5964, file: !5964, line: 184, type: !11123, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11123 = !DISubroutineType(types: !11124)
!11124 = !{!6000, !5962}
!11125 = !DILocalVariable(name: "cmd", arg: 1, scope: !11122, file: !5964, line: 184, type: !5962)
!11126 = !DILocation(line: 184, column: 65, scope: !11122)
!11127 = !DILocation(line: 186, column: 9, scope: !11122)
!11128 = !DILocation(line: 186, column: 14, scope: !11122)
!11129 = !DILocation(line: 186, column: 18, scope: !11122)
!11130 = !DILocation(line: 186, column: 24, scope: !11122)
!11131 = !DILocation(line: 186, column: 2, scope: !11122)
!11132 = distinct !DISubprogram(name: "scsi_sg_copy_from_buffer", scope: !5964, file: !5964, line: 207, type: !11133, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11133 = !DISubroutineType(types: !11134)
!11134 = !{!913, !5962, !973, !913}
!11135 = !DILocalVariable(name: "cmd", arg: 1, scope: !11132, file: !5964, line: 207, type: !5962)
!11136 = !DILocation(line: 207, column: 62, scope: !11132)
!11137 = !DILocalVariable(name: "buf", arg: 2, scope: !11132, file: !5964, line: 208, type: !973)
!11138 = !DILocation(line: 208, column: 15, scope: !11132)
!11139 = !DILocalVariable(name: "buflen", arg: 3, scope: !11132, file: !5964, line: 208, type: !913)
!11140 = !DILocation(line: 208, column: 24, scope: !11132)
!11141 = !DILocation(line: 210, column: 41, scope: !11132)
!11142 = !DILocation(line: 210, column: 29, scope: !11132)
!11143 = !DILocation(line: 210, column: 61, scope: !11132)
!11144 = !DILocation(line: 210, column: 47, scope: !11132)
!11145 = !DILocation(line: 211, column: 8, scope: !11132)
!11146 = !DILocation(line: 211, column: 13, scope: !11132)
!11147 = !DILocation(line: 210, column: 9, scope: !11132)
!11148 = !DILocation(line: 210, column: 2, scope: !11132)
!11149 = distinct !DISubprogram(name: "scsi_sg_count", scope: !5964, file: !5964, line: 179, type: !11150, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11150 = !DISubroutineType(types: !11151)
!11151 = !{!7, !5962}
!11152 = !DILocalVariable(name: "cmd", arg: 1, scope: !11149, file: !5964, line: 179, type: !5962)
!11153 = !DILocation(line: 179, column: 56, scope: !11149)
!11154 = !DILocation(line: 181, column: 9, scope: !11149)
!11155 = !DILocation(line: 181, column: 14, scope: !11149)
!11156 = !DILocation(line: 181, column: 18, scope: !11149)
!11157 = !DILocation(line: 181, column: 24, scope: !11149)
!11158 = !DILocation(line: 181, column: 2, scope: !11149)
!11159 = distinct !DISubprogram(name: "__fswab32", scope: !10104, file: !10104, line: 57, type: !11160, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11160 = !DISubroutineType(types: !11161)
!11161 = !{!270, !270}
!11162 = !DILocalVariable(name: "val", arg: 1, scope: !11159, file: !10104, line: 57, type: !270)
!11163 = !DILocation(line: 57, column: 57, scope: !11159)
!11164 = !DILocation(line: 60, column: 23, scope: !11159)
!11165 = !DILocation(line: 60, column: 9, scope: !11159)
!11166 = !DILocation(line: 60, column: 2, scope: !11159)
!11167 = distinct !DISubprogram(name: "__arch_swab32", scope: !11168, file: !11168, line: 8, type: !11160, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11168 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!11169 = !DILocalVariable(name: "val", arg: 1, scope: !11167, file: !11168, line: 8, type: !270)
!11170 = !DILocation(line: 8, column: 61, scope: !11167)
!11171 = !DILocation(line: 10, column: 38, scope: !11167)
!11172 = !DILocation(line: 10, column: 2, scope: !11167)
!11173 = !{i32 516384}
!11174 = !DILocation(line: 11, column: 9, scope: !11167)
!11175 = !DILocation(line: 11, column: 2, scope: !11167)
!11176 = distinct !DISubprogram(name: "__fswab16", scope: !10104, file: !10104, line: 48, type: !11177, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11177 = !DISubroutineType(types: !11178)
!11178 = !{!1684, !1684}
!11179 = !DILocalVariable(name: "val", arg: 1, scope: !11176, file: !10104, line: 48, type: !1684)
!11180 = !DILocation(line: 48, column: 57, scope: !11176)
!11181 = !DILocation(line: 53, column: 9, scope: !11176)
!11182 = !DILocation(line: 53, column: 2, scope: !11176)
!11183 = distinct !DISubprogram(name: "myrb_ldev_slave_alloc", scope: !3, file: !3, line: 1650, type: !6057, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11184 = !DILocalVariable(name: "sdev", arg: 1, scope: !11183, file: !3, line: 1650, type: !5809)
!11185 = !DILocation(line: 1650, column: 54, scope: !11183)
!11186 = !DILocalVariable(name: "cb", scope: !11183, file: !3, line: 1652, type: !5760)
!11187 = !DILocation(line: 1652, column: 19, scope: !11183)
!11188 = !DILocation(line: 1652, column: 35, scope: !11183)
!11189 = !DILocation(line: 1652, column: 41, scope: !11183)
!11190 = !DILocation(line: 1652, column: 24, scope: !11183)
!11191 = !DILocalVariable(name: "ldev_info", scope: !11183, file: !3, line: 1653, type: !6294)
!11192 = !DILocation(line: 1653, column: 25, scope: !11183)
!11193 = !DILocalVariable(name: "ldev_num", scope: !11183, file: !3, line: 1654, type: !320)
!11194 = !DILocation(line: 1654, column: 17, scope: !11183)
!11195 = !DILocation(line: 1654, column: 28, scope: !11183)
!11196 = !DILocation(line: 1654, column: 34, scope: !11183)
!11197 = !DILocalVariable(name: "level", scope: !11183, file: !3, line: 1655, type: !565)
!11198 = !DILocation(line: 1655, column: 18, scope: !11183)
!11199 = !DILocation(line: 1657, column: 14, scope: !11183)
!11200 = !DILocation(line: 1657, column: 18, scope: !11183)
!11201 = !DILocation(line: 1657, column: 34, scope: !11183)
!11202 = !DILocation(line: 1657, column: 32, scope: !11183)
!11203 = !DILocation(line: 1657, column: 12, scope: !11183)
!11204 = !DILocation(line: 1658, column: 7, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 1658, column: 6)
!11206 = !DILocation(line: 1658, column: 6, scope: !11183)
!11207 = !DILocation(line: 1659, column: 3, scope: !11205)
!11208 = !DILocation(line: 1661, column: 19, scope: !11183)
!11209 = !DILocation(line: 1661, column: 2, scope: !11183)
!11210 = !DILocation(line: 1661, column: 8, scope: !11183)
!11211 = !DILocation(line: 1661, column: 17, scope: !11183)
!11212 = !DILocation(line: 1662, column: 7, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 1662, column: 6)
!11214 = !DILocation(line: 1662, column: 13, scope: !11213)
!11215 = !DILocation(line: 1662, column: 6, scope: !11183)
!11216 = !DILocation(line: 1663, column: 3, scope: !11213)
!11217 = !DILocation(line: 1667, column: 9, scope: !11183)
!11218 = !DILocation(line: 1667, column: 15, scope: !11183)
!11219 = !DILocation(line: 1667, column: 25, scope: !11183)
!11220 = !DILocation(line: 1667, column: 2, scope: !11183)
!11221 = !DILocation(line: 1669, column: 10, scope: !11183)
!11222 = !DILocation(line: 1669, column: 21, scope: !11183)
!11223 = !DILocation(line: 1669, column: 2, scope: !11183)
!11224 = !DILocation(line: 1671, column: 9, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 1669, column: 33)
!11226 = !DILocation(line: 1672, column: 3, scope: !11225)
!11227 = !DILocation(line: 1674, column: 9, scope: !11225)
!11228 = !DILocation(line: 1675, column: 3, scope: !11225)
!11229 = !DILocation(line: 1677, column: 9, scope: !11225)
!11230 = !DILocation(line: 1678, column: 3, scope: !11225)
!11231 = !DILocation(line: 1680, column: 9, scope: !11225)
!11232 = !DILocation(line: 1681, column: 3, scope: !11225)
!11233 = !DILocation(line: 1683, column: 9, scope: !11225)
!11234 = !DILocation(line: 1684, column: 3, scope: !11225)
!11235 = !DILocation(line: 1686, column: 9, scope: !11225)
!11236 = !DILocation(line: 1687, column: 3, scope: !11225)
!11237 = !DILocation(line: 1689, column: 9, scope: !11225)
!11238 = !DILocation(line: 1690, column: 3, scope: !11225)
!11239 = !DILocation(line: 1692, column: 17, scope: !11183)
!11240 = !DILocation(line: 1692, column: 38, scope: !11183)
!11241 = !DILocation(line: 1692, column: 44, scope: !11183)
!11242 = !DILocation(line: 1692, column: 57, scope: !11183)
!11243 = !DILocation(line: 1692, column: 2, scope: !11183)
!11244 = !DILocation(line: 1693, column: 2, scope: !11183)
!11245 = !DILocation(line: 1694, column: 1, scope: !11183)
!11246 = distinct !DISubprogram(name: "myrb_pdev_slave_alloc", scope: !3, file: !3, line: 1696, type: !6057, scopeLine: 1697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11247 = !DILocalVariable(name: "sdev", arg: 1, scope: !11246, file: !3, line: 1696, type: !5809)
!11248 = !DILocation(line: 1696, column: 54, scope: !11246)
!11249 = !DILocalVariable(name: "cb", scope: !11246, file: !3, line: 1698, type: !5760)
!11250 = !DILocation(line: 1698, column: 19, scope: !11246)
!11251 = !DILocation(line: 1698, column: 35, scope: !11246)
!11252 = !DILocation(line: 1698, column: 41, scope: !11246)
!11253 = !DILocation(line: 1698, column: 24, scope: !11246)
!11254 = !DILocalVariable(name: "pdev_info", scope: !11246, file: !3, line: 1699, type: !11255)
!11255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!11256 = !DILocation(line: 1699, column: 26, scope: !11246)
!11257 = !DILocalVariable(name: "status", scope: !11246, file: !3, line: 1700, type: !320)
!11258 = !DILocation(line: 1700, column: 17, scope: !11246)
!11259 = !DILocation(line: 1702, column: 6, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 1702, column: 6)
!11261 = !DILocation(line: 1702, column: 12, scope: !11260)
!11262 = !DILocation(line: 1702, column: 15, scope: !11260)
!11263 = !DILocation(line: 1702, column: 6, scope: !11246)
!11264 = !DILocation(line: 1703, column: 3, scope: !11260)
!11265 = !DILocation(line: 1705, column: 14, scope: !11246)
!11266 = !DILocation(line: 1705, column: 12, scope: !11246)
!11267 = !DILocation(line: 1706, column: 7, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 1706, column: 6)
!11269 = !DILocation(line: 1706, column: 6, scope: !11246)
!11270 = !DILocation(line: 1707, column: 3, scope: !11268)
!11271 = !DILocation(line: 1709, column: 28, scope: !11246)
!11272 = !DILocation(line: 1710, column: 7, scope: !11246)
!11273 = !DILocation(line: 1710, column: 13, scope: !11246)
!11274 = !DILocation(line: 1709, column: 11, scope: !11246)
!11275 = !DILocation(line: 1709, column: 9, scope: !11246)
!11276 = !DILocation(line: 1711, column: 6, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 1711, column: 6)
!11278 = !DILocation(line: 1711, column: 13, scope: !11277)
!11279 = !DILocation(line: 1711, column: 6, scope: !11246)
!11280 = !DILocation(line: 1715, column: 9, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11277, file: !3, line: 1711, column: 37)
!11282 = !DILocation(line: 1715, column: 3, scope: !11281)
!11283 = !DILocation(line: 1716, column: 3, scope: !11281)
!11284 = !DILocation(line: 1718, column: 7, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 1718, column: 6)
!11286 = !DILocation(line: 1718, column: 18, scope: !11285)
!11287 = !DILocation(line: 1718, column: 6, scope: !11246)
!11288 = !DILocation(line: 1721, column: 9, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11285, file: !3, line: 1718, column: 27)
!11290 = !DILocation(line: 1721, column: 3, scope: !11289)
!11291 = !DILocation(line: 1722, column: 3, scope: !11289)
!11292 = !DILocation(line: 1727, column: 19, scope: !11246)
!11293 = !DILocation(line: 1727, column: 2, scope: !11246)
!11294 = !DILocation(line: 1727, column: 8, scope: !11246)
!11295 = !DILocation(line: 1727, column: 17, scope: !11246)
!11296 = !DILocation(line: 1729, column: 2, scope: !11246)
!11297 = !DILocation(line: 1730, column: 1, scope: !11246)
!11298 = distinct !DISubprogram(name: "kzalloc", scope: !581, file: !581, line: 662, type: !11299, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11299 = !DISubroutineType(types: !11300)
!11300 = !{!973, !1102, !896}
!11301 = !DILocalVariable(name: "s", arg: 1, scope: !11302, file: !581, line: 445, type: !1776)
!11302 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !581, file: !581, line: 445, type: !11303, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{!973, !1776, !896, !1102}
!11305 = !DILocation(line: 445, column: 72, scope: !11302, inlinedAt: !11306)
!11306 = distinct !DILocation(line: 552, column: 10, scope: !11307, inlinedAt: !11310)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !581, line: 540, column: 34)
!11308 = distinct !DILexicalBlock(scope: !11309, file: !581, line: 540, column: 6)
!11309 = distinct !DISubprogram(name: "kmalloc", scope: !581, file: !581, line: 538, type: !11299, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11310 = distinct !DILocation(line: 664, column: 9, scope: !11298)
!11311 = !DILocalVariable(name: "flags", arg: 2, scope: !11302, file: !581, line: 446, type: !896)
!11312 = !DILocation(line: 446, column: 9, scope: !11302, inlinedAt: !11306)
!11313 = !DILocalVariable(name: "size", arg: 3, scope: !11302, file: !581, line: 446, type: !1102)
!11314 = !DILocation(line: 446, column: 23, scope: !11302, inlinedAt: !11306)
!11315 = !DILocalVariable(name: "ret", scope: !11302, file: !581, line: 448, type: !973)
!11316 = !DILocation(line: 448, column: 8, scope: !11302, inlinedAt: !11306)
!11317 = !DILocalVariable(name: "flags", arg: 1, scope: !11318, file: !581, line: 318, type: !896)
!11318 = distinct !DISubprogram(name: "kmalloc_type", scope: !581, file: !581, line: 318, type: !11319, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11319 = !DISubroutineType(types: !11320)
!11320 = !{!580, !896}
!11321 = !DILocation(line: 318, column: 67, scope: !11318, inlinedAt: !11322)
!11322 = distinct !DILocation(line: 553, column: 20, scope: !11307, inlinedAt: !11310)
!11323 = !DILocalVariable(name: "size", arg: 1, scope: !11324, file: !581, line: 346, type: !1102)
!11324 = distinct !DISubprogram(name: "kmalloc_index", scope: !581, file: !581, line: 346, type: !11325, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11325 = !DISubroutineType(types: !11326)
!11326 = !{!7, !1102}
!11327 = !DILocation(line: 346, column: 58, scope: !11324, inlinedAt: !11328)
!11328 = distinct !DILocation(line: 547, column: 11, scope: !11307, inlinedAt: !11310)
!11329 = !DILocalVariable(name: "size", arg: 1, scope: !11330, file: !581, line: 472, type: !1102)
!11330 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !581, file: !581, line: 472, type: !11331, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11331 = !DISubroutineType(types: !11332)
!11332 = !{!973, !1102, !896, !7}
!11333 = !DILocation(line: 472, column: 28, scope: !11330, inlinedAt: !11334)
!11334 = distinct !DILocation(line: 481, column: 9, scope: !11335, inlinedAt: !11336)
!11335 = distinct !DISubprogram(name: "kmalloc_large", scope: !581, file: !581, line: 478, type: !11299, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11336 = distinct !DILocation(line: 545, column: 11, scope: !11337, inlinedAt: !11310)
!11337 = distinct !DILexicalBlock(scope: !11307, file: !581, line: 544, column: 7)
!11338 = !DILocalVariable(name: "flags", arg: 2, scope: !11330, file: !581, line: 472, type: !896)
!11339 = !DILocation(line: 472, column: 40, scope: !11330, inlinedAt: !11334)
!11340 = !DILocalVariable(name: "order", arg: 3, scope: !11330, file: !581, line: 472, type: !7)
!11341 = !DILocation(line: 472, column: 60, scope: !11330, inlinedAt: !11334)
!11342 = !DILocalVariable(name: "size", arg: 1, scope: !11335, file: !581, line: 478, type: !1102)
!11343 = !DILocation(line: 478, column: 51, scope: !11335, inlinedAt: !11336)
!11344 = !DILocalVariable(name: "flags", arg: 2, scope: !11335, file: !581, line: 478, type: !896)
!11345 = !DILocation(line: 478, column: 63, scope: !11335, inlinedAt: !11336)
!11346 = !DILocalVariable(name: "order", scope: !11335, file: !581, line: 480, type: !7)
!11347 = !DILocation(line: 480, column: 15, scope: !11335, inlinedAt: !11336)
!11348 = !DILocalVariable(name: "size", arg: 1, scope: !11309, file: !581, line: 538, type: !1102)
!11349 = !DILocation(line: 538, column: 45, scope: !11309, inlinedAt: !11310)
!11350 = !DILocalVariable(name: "flags", arg: 2, scope: !11309, file: !581, line: 538, type: !896)
!11351 = !DILocation(line: 538, column: 57, scope: !11309, inlinedAt: !11310)
!11352 = !DILocalVariable(name: "index", scope: !11307, file: !581, line: 542, type: !7)
!11353 = !DILocation(line: 542, column: 16, scope: !11307, inlinedAt: !11310)
!11354 = !DILocalVariable(name: "size", arg: 1, scope: !11298, file: !581, line: 662, type: !1102)
!11355 = !DILocation(line: 662, column: 36, scope: !11298)
!11356 = !DILocalVariable(name: "flags", arg: 2, scope: !11298, file: !581, line: 662, type: !896)
!11357 = !DILocation(line: 662, column: 48, scope: !11298)
!11358 = !DILocation(line: 664, column: 17, scope: !11298)
!11359 = !DILocation(line: 664, column: 23, scope: !11298)
!11360 = !DILocation(line: 664, column: 29, scope: !11298)
!11361 = !DILocation(line: 540, column: 27, scope: !11308, inlinedAt: !11310)
!11362 = !DILocation(line: 540, column: 6, scope: !11308, inlinedAt: !11310)
!11363 = !DILocation(line: 540, column: 6, scope: !11309, inlinedAt: !11310)
!11364 = !DILocation(line: 544, column: 7, scope: !11337, inlinedAt: !11310)
!11365 = !DILocation(line: 544, column: 12, scope: !11337, inlinedAt: !11310)
!11366 = !DILocation(line: 544, column: 7, scope: !11307, inlinedAt: !11310)
!11367 = !DILocation(line: 545, column: 25, scope: !11337, inlinedAt: !11310)
!11368 = !DILocation(line: 545, column: 31, scope: !11337, inlinedAt: !11310)
!11369 = !DILocation(line: 480, column: 33, scope: !11335, inlinedAt: !11336)
!11370 = !DILocation(line: 480, column: 23, scope: !11335, inlinedAt: !11336)
!11371 = !DILocation(line: 481, column: 29, scope: !11335, inlinedAt: !11336)
!11372 = !DILocation(line: 481, column: 35, scope: !11335, inlinedAt: !11336)
!11373 = !DILocation(line: 481, column: 42, scope: !11335, inlinedAt: !11336)
!11374 = !DILocation(line: 474, column: 23, scope: !11330, inlinedAt: !11334)
!11375 = !DILocation(line: 474, column: 29, scope: !11330, inlinedAt: !11334)
!11376 = !DILocation(line: 474, column: 36, scope: !11330, inlinedAt: !11334)
!11377 = !DILocation(line: 474, column: 9, scope: !11330, inlinedAt: !11334)
!11378 = !DILocation(line: 545, column: 4, scope: !11337, inlinedAt: !11310)
!11379 = !DILocation(line: 547, column: 25, scope: !11307, inlinedAt: !11310)
!11380 = !DILocation(line: 348, column: 7, scope: !11381, inlinedAt: !11328)
!11381 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 348, column: 6)
!11382 = !DILocation(line: 348, column: 6, scope: !11324, inlinedAt: !11328)
!11383 = !DILocation(line: 349, column: 3, scope: !11381, inlinedAt: !11328)
!11384 = !DILocation(line: 351, column: 6, scope: !11385, inlinedAt: !11328)
!11385 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 351, column: 6)
!11386 = !DILocation(line: 351, column: 11, scope: !11385, inlinedAt: !11328)
!11387 = !DILocation(line: 351, column: 6, scope: !11324, inlinedAt: !11328)
!11388 = !DILocation(line: 352, column: 3, scope: !11385, inlinedAt: !11328)
!11389 = !DILocation(line: 354, column: 32, scope: !11390, inlinedAt: !11328)
!11390 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 354, column: 6)
!11391 = !DILocation(line: 354, column: 37, scope: !11390, inlinedAt: !11328)
!11392 = !DILocation(line: 354, column: 42, scope: !11390, inlinedAt: !11328)
!11393 = !DILocation(line: 354, column: 45, scope: !11390, inlinedAt: !11328)
!11394 = !DILocation(line: 354, column: 50, scope: !11390, inlinedAt: !11328)
!11395 = !DILocation(line: 354, column: 6, scope: !11324, inlinedAt: !11328)
!11396 = !DILocation(line: 355, column: 3, scope: !11390, inlinedAt: !11328)
!11397 = !DILocation(line: 356, column: 32, scope: !11398, inlinedAt: !11328)
!11398 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 356, column: 6)
!11399 = !DILocation(line: 356, column: 37, scope: !11398, inlinedAt: !11328)
!11400 = !DILocation(line: 356, column: 43, scope: !11398, inlinedAt: !11328)
!11401 = !DILocation(line: 356, column: 46, scope: !11398, inlinedAt: !11328)
!11402 = !DILocation(line: 356, column: 51, scope: !11398, inlinedAt: !11328)
!11403 = !DILocation(line: 356, column: 6, scope: !11324, inlinedAt: !11328)
!11404 = !DILocation(line: 357, column: 3, scope: !11398, inlinedAt: !11328)
!11405 = !DILocation(line: 358, column: 6, scope: !11406, inlinedAt: !11328)
!11406 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 358, column: 6)
!11407 = !DILocation(line: 358, column: 11, scope: !11406, inlinedAt: !11328)
!11408 = !DILocation(line: 358, column: 6, scope: !11324, inlinedAt: !11328)
!11409 = !DILocation(line: 358, column: 26, scope: !11406, inlinedAt: !11328)
!11410 = !DILocation(line: 359, column: 6, scope: !11411, inlinedAt: !11328)
!11411 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 359, column: 6)
!11412 = !DILocation(line: 359, column: 11, scope: !11411, inlinedAt: !11328)
!11413 = !DILocation(line: 359, column: 6, scope: !11324, inlinedAt: !11328)
!11414 = !DILocation(line: 359, column: 26, scope: !11411, inlinedAt: !11328)
!11415 = !DILocation(line: 360, column: 6, scope: !11416, inlinedAt: !11328)
!11416 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 360, column: 6)
!11417 = !DILocation(line: 360, column: 11, scope: !11416, inlinedAt: !11328)
!11418 = !DILocation(line: 360, column: 6, scope: !11324, inlinedAt: !11328)
!11419 = !DILocation(line: 360, column: 26, scope: !11416, inlinedAt: !11328)
!11420 = !DILocation(line: 361, column: 6, scope: !11421, inlinedAt: !11328)
!11421 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 361, column: 6)
!11422 = !DILocation(line: 361, column: 11, scope: !11421, inlinedAt: !11328)
!11423 = !DILocation(line: 361, column: 6, scope: !11324, inlinedAt: !11328)
!11424 = !DILocation(line: 361, column: 26, scope: !11421, inlinedAt: !11328)
!11425 = !DILocation(line: 362, column: 6, scope: !11426, inlinedAt: !11328)
!11426 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 362, column: 6)
!11427 = !DILocation(line: 362, column: 11, scope: !11426, inlinedAt: !11328)
!11428 = !DILocation(line: 362, column: 6, scope: !11324, inlinedAt: !11328)
!11429 = !DILocation(line: 362, column: 26, scope: !11426, inlinedAt: !11328)
!11430 = !DILocation(line: 363, column: 6, scope: !11431, inlinedAt: !11328)
!11431 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 363, column: 6)
!11432 = !DILocation(line: 363, column: 11, scope: !11431, inlinedAt: !11328)
!11433 = !DILocation(line: 363, column: 6, scope: !11324, inlinedAt: !11328)
!11434 = !DILocation(line: 363, column: 26, scope: !11431, inlinedAt: !11328)
!11435 = !DILocation(line: 364, column: 6, scope: !11436, inlinedAt: !11328)
!11436 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 364, column: 6)
!11437 = !DILocation(line: 364, column: 11, scope: !11436, inlinedAt: !11328)
!11438 = !DILocation(line: 364, column: 6, scope: !11324, inlinedAt: !11328)
!11439 = !DILocation(line: 364, column: 26, scope: !11436, inlinedAt: !11328)
!11440 = !DILocation(line: 365, column: 6, scope: !11441, inlinedAt: !11328)
!11441 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 365, column: 6)
!11442 = !DILocation(line: 365, column: 11, scope: !11441, inlinedAt: !11328)
!11443 = !DILocation(line: 365, column: 6, scope: !11324, inlinedAt: !11328)
!11444 = !DILocation(line: 365, column: 26, scope: !11441, inlinedAt: !11328)
!11445 = !DILocation(line: 366, column: 6, scope: !11446, inlinedAt: !11328)
!11446 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 366, column: 6)
!11447 = !DILocation(line: 366, column: 11, scope: !11446, inlinedAt: !11328)
!11448 = !DILocation(line: 366, column: 6, scope: !11324, inlinedAt: !11328)
!11449 = !DILocation(line: 366, column: 26, scope: !11446, inlinedAt: !11328)
!11450 = !DILocation(line: 367, column: 6, scope: !11451, inlinedAt: !11328)
!11451 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 367, column: 6)
!11452 = !DILocation(line: 367, column: 11, scope: !11451, inlinedAt: !11328)
!11453 = !DILocation(line: 367, column: 6, scope: !11324, inlinedAt: !11328)
!11454 = !DILocation(line: 367, column: 26, scope: !11451, inlinedAt: !11328)
!11455 = !DILocation(line: 368, column: 6, scope: !11456, inlinedAt: !11328)
!11456 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 368, column: 6)
!11457 = !DILocation(line: 368, column: 11, scope: !11456, inlinedAt: !11328)
!11458 = !DILocation(line: 368, column: 6, scope: !11324, inlinedAt: !11328)
!11459 = !DILocation(line: 368, column: 26, scope: !11456, inlinedAt: !11328)
!11460 = !DILocation(line: 369, column: 6, scope: !11461, inlinedAt: !11328)
!11461 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 369, column: 6)
!11462 = !DILocation(line: 369, column: 11, scope: !11461, inlinedAt: !11328)
!11463 = !DILocation(line: 369, column: 6, scope: !11324, inlinedAt: !11328)
!11464 = !DILocation(line: 369, column: 26, scope: !11461, inlinedAt: !11328)
!11465 = !DILocation(line: 370, column: 6, scope: !11466, inlinedAt: !11328)
!11466 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 370, column: 6)
!11467 = !DILocation(line: 370, column: 11, scope: !11466, inlinedAt: !11328)
!11468 = !DILocation(line: 370, column: 6, scope: !11324, inlinedAt: !11328)
!11469 = !DILocation(line: 370, column: 26, scope: !11466, inlinedAt: !11328)
!11470 = !DILocation(line: 371, column: 6, scope: !11471, inlinedAt: !11328)
!11471 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 371, column: 6)
!11472 = !DILocation(line: 371, column: 11, scope: !11471, inlinedAt: !11328)
!11473 = !DILocation(line: 371, column: 6, scope: !11324, inlinedAt: !11328)
!11474 = !DILocation(line: 371, column: 26, scope: !11471, inlinedAt: !11328)
!11475 = !DILocation(line: 372, column: 6, scope: !11476, inlinedAt: !11328)
!11476 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 372, column: 6)
!11477 = !DILocation(line: 372, column: 11, scope: !11476, inlinedAt: !11328)
!11478 = !DILocation(line: 372, column: 6, scope: !11324, inlinedAt: !11328)
!11479 = !DILocation(line: 372, column: 26, scope: !11476, inlinedAt: !11328)
!11480 = !DILocation(line: 373, column: 6, scope: !11481, inlinedAt: !11328)
!11481 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 373, column: 6)
!11482 = !DILocation(line: 373, column: 11, scope: !11481, inlinedAt: !11328)
!11483 = !DILocation(line: 373, column: 6, scope: !11324, inlinedAt: !11328)
!11484 = !DILocation(line: 373, column: 26, scope: !11481, inlinedAt: !11328)
!11485 = !DILocation(line: 374, column: 6, scope: !11486, inlinedAt: !11328)
!11486 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 374, column: 6)
!11487 = !DILocation(line: 374, column: 11, scope: !11486, inlinedAt: !11328)
!11488 = !DILocation(line: 374, column: 6, scope: !11324, inlinedAt: !11328)
!11489 = !DILocation(line: 374, column: 26, scope: !11486, inlinedAt: !11328)
!11490 = !DILocation(line: 375, column: 6, scope: !11491, inlinedAt: !11328)
!11491 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 375, column: 6)
!11492 = !DILocation(line: 375, column: 11, scope: !11491, inlinedAt: !11328)
!11493 = !DILocation(line: 375, column: 6, scope: !11324, inlinedAt: !11328)
!11494 = !DILocation(line: 375, column: 27, scope: !11491, inlinedAt: !11328)
!11495 = !DILocation(line: 376, column: 6, scope: !11496, inlinedAt: !11328)
!11496 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 376, column: 6)
!11497 = !DILocation(line: 376, column: 11, scope: !11496, inlinedAt: !11328)
!11498 = !DILocation(line: 376, column: 6, scope: !11324, inlinedAt: !11328)
!11499 = !DILocation(line: 376, column: 32, scope: !11496, inlinedAt: !11328)
!11500 = !DILocation(line: 377, column: 6, scope: !11501, inlinedAt: !11328)
!11501 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 377, column: 6)
!11502 = !DILocation(line: 377, column: 11, scope: !11501, inlinedAt: !11328)
!11503 = !DILocation(line: 377, column: 6, scope: !11324, inlinedAt: !11328)
!11504 = !DILocation(line: 377, column: 32, scope: !11501, inlinedAt: !11328)
!11505 = !DILocation(line: 378, column: 6, scope: !11506, inlinedAt: !11328)
!11506 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 378, column: 6)
!11507 = !DILocation(line: 378, column: 11, scope: !11506, inlinedAt: !11328)
!11508 = !DILocation(line: 378, column: 6, scope: !11324, inlinedAt: !11328)
!11509 = !DILocation(line: 378, column: 32, scope: !11506, inlinedAt: !11328)
!11510 = !DILocation(line: 379, column: 6, scope: !11511, inlinedAt: !11328)
!11511 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 379, column: 6)
!11512 = !DILocation(line: 379, column: 11, scope: !11511, inlinedAt: !11328)
!11513 = !DILocation(line: 379, column: 6, scope: !11324, inlinedAt: !11328)
!11514 = !DILocation(line: 379, column: 33, scope: !11511, inlinedAt: !11328)
!11515 = !DILocation(line: 380, column: 6, scope: !11516, inlinedAt: !11328)
!11516 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 380, column: 6)
!11517 = !DILocation(line: 380, column: 11, scope: !11516, inlinedAt: !11328)
!11518 = !DILocation(line: 380, column: 6, scope: !11324, inlinedAt: !11328)
!11519 = !DILocation(line: 380, column: 33, scope: !11516, inlinedAt: !11328)
!11520 = !DILocation(line: 381, column: 6, scope: !11521, inlinedAt: !11328)
!11521 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 381, column: 6)
!11522 = !DILocation(line: 381, column: 11, scope: !11521, inlinedAt: !11328)
!11523 = !DILocation(line: 381, column: 6, scope: !11324, inlinedAt: !11328)
!11524 = !DILocation(line: 381, column: 33, scope: !11521, inlinedAt: !11328)
!11525 = !DILocation(line: 382, column: 2, scope: !11526, inlinedAt: !11328)
!11526 = distinct !DILexicalBlock(scope: !11527, file: !581, line: 382, column: 2)
!11527 = distinct !DILexicalBlock(scope: !11324, file: !581, line: 382, column: 2)
!11528 = !{i32 -2143176526, i32 -2143176497, i32 -2143176451, i32 -2143176393, i32 -2143176339, i32 -2143176285, i32 -2143176230, i32 -2143176199}
!11529 = !DILocation(line: 382, column: 2, scope: !11530, inlinedAt: !11328)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !581, line: 382, column: 2)
!11531 = distinct !DILexicalBlock(scope: !11527, file: !581, line: 382, column: 2)
!11532 = !{i32 -2143175756, i32 -2143175749, i32 -2143175695, i32 -2143175664, i32 -2143175634}
!11533 = !DILocation(line: 382, column: 2, scope: !11531, inlinedAt: !11328)
!11534 = !DILocation(line: 386, column: 1, scope: !11324, inlinedAt: !11328)
!11535 = !DILocation(line: 547, column: 9, scope: !11307, inlinedAt: !11310)
!11536 = !DILocation(line: 549, column: 8, scope: !11537, inlinedAt: !11310)
!11537 = distinct !DILexicalBlock(scope: !11307, file: !581, line: 549, column: 7)
!11538 = !DILocation(line: 549, column: 7, scope: !11307, inlinedAt: !11310)
!11539 = !DILocation(line: 550, column: 4, scope: !11537, inlinedAt: !11310)
!11540 = !DILocation(line: 553, column: 33, scope: !11307, inlinedAt: !11310)
!11541 = !DILocation(line: 325, column: 6, scope: !11542, inlinedAt: !11322)
!11542 = distinct !DILexicalBlock(scope: !11318, file: !581, line: 325, column: 6)
!11543 = !DILocation(line: 325, column: 6, scope: !11318, inlinedAt: !11322)
!11544 = !DILocation(line: 326, column: 3, scope: !11542, inlinedAt: !11322)
!11545 = !DILocation(line: 332, column: 9, scope: !11318, inlinedAt: !11322)
!11546 = !DILocation(line: 332, column: 15, scope: !11318, inlinedAt: !11322)
!11547 = !DILocation(line: 332, column: 2, scope: !11318, inlinedAt: !11322)
!11548 = !DILocation(line: 336, column: 1, scope: !11318, inlinedAt: !11322)
!11549 = !DILocation(line: 553, column: 5, scope: !11307, inlinedAt: !11310)
!11550 = !DILocation(line: 553, column: 41, scope: !11307, inlinedAt: !11310)
!11551 = !DILocation(line: 554, column: 5, scope: !11307, inlinedAt: !11310)
!11552 = !DILocation(line: 554, column: 12, scope: !11307, inlinedAt: !11310)
!11553 = !DILocation(line: 448, column: 31, scope: !11302, inlinedAt: !11306)
!11554 = !DILocation(line: 448, column: 34, scope: !11302, inlinedAt: !11306)
!11555 = !DILocation(line: 448, column: 14, scope: !11302, inlinedAt: !11306)
!11556 = !DILocation(line: 450, column: 22, scope: !11302, inlinedAt: !11306)
!11557 = !DILocation(line: 450, column: 25, scope: !11302, inlinedAt: !11306)
!11558 = !DILocation(line: 450, column: 30, scope: !11302, inlinedAt: !11306)
!11559 = !DILocation(line: 450, column: 36, scope: !11302, inlinedAt: !11306)
!11560 = !DILocation(line: 450, column: 8, scope: !11302, inlinedAt: !11306)
!11561 = !DILocation(line: 450, column: 6, scope: !11302, inlinedAt: !11306)
!11562 = !DILocation(line: 451, column: 9, scope: !11302, inlinedAt: !11306)
!11563 = !DILocation(line: 552, column: 3, scope: !11307, inlinedAt: !11310)
!11564 = !DILocation(line: 557, column: 19, scope: !11309, inlinedAt: !11310)
!11565 = !DILocation(line: 557, column: 25, scope: !11309, inlinedAt: !11310)
!11566 = !DILocation(line: 557, column: 9, scope: !11309, inlinedAt: !11310)
!11567 = !DILocation(line: 557, column: 2, scope: !11309, inlinedAt: !11310)
!11568 = !DILocation(line: 558, column: 1, scope: !11309, inlinedAt: !11310)
!11569 = !DILocation(line: 664, column: 2, scope: !11298)
!11570 = distinct !DISubprogram(name: "raid_set_level", scope: !566, file: !566, line: 74, type: !11571, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11571 = !DISubroutineType(types: !11572)
!11572 = !{null, !6353, !1003, !565}
!11573 = !DILocalVariable(name: "r", arg: 1, scope: !11570, file: !566, line: 74, type: !6353)
!11574 = !DILocation(line: 74, column: 1, scope: !11570)
!11575 = !DILocalVariable(name: "dev", arg: 2, scope: !11570, file: !566, line: 74, type: !1003)
!11576 = !DILocalVariable(name: "value", arg: 3, scope: !11570, file: !566, line: 74, type: !565)
!11577 = !DILocalVariable(name: "device", scope: !11570, file: !566, line: 74, type: !1003)
!11578 = !DILocalVariable(name: "rd", scope: !11570, file: !566, line: 74, type: !11579)
!11579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11580, size: 64)
!11580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raid_data", file: !566, line: 43, size: 256, elements: !11581)
!11581 = !{!11582, !11583, !11584, !11585, !11586}
!11582 = !DIDerivedType(tag: DW_TAG_member, name: "component_list", scope: !11580, file: !566, line: 44, baseType: !919, size: 128)
!11583 = !DIDerivedType(tag: DW_TAG_member, name: "component_count", scope: !11580, file: !566, line: 45, baseType: !913, size: 32, offset: 128)
!11584 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !11580, file: !566, line: 46, baseType: !565, size: 32, offset: 160)
!11585 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11580, file: !566, line: 47, baseType: !587, size: 32, offset: 192)
!11586 = !DIDerivedType(tag: DW_TAG_member, name: "resync", scope: !11580, file: !566, line: 48, baseType: !913, size: 32, offset: 224)
!11587 = !DILocation(line: 74, column: 1, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11589, file: !566, line: 74, column: 1)
!11589 = distinct !DILexicalBlock(scope: !11570, file: !566, line: 74, column: 1)
!11590 = !DILocation(line: 74, column: 1, scope: !11589)
!11591 = !DILocation(line: 74, column: 1, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11588, file: !566, line: 74, column: 1)
!11593 = !DILocation(line: 74, column: 1, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11592, file: !566, line: 74, column: 1)
!11595 = !DILocation(line: 74, column: 1, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11592, file: !566, line: 74, column: 1)
!11597 = !{i32 -2141642752, i32 -2141642723, i32 -2141642677, i32 -2141642619, i32 -2141642565, i32 -2141642511, i32 -2141642456, i32 -2141642425}
!11598 = !DILocation(line: 74, column: 1, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11600, file: !566, line: 74, column: 1)
!11600 = distinct !DILexicalBlock(scope: !11592, file: !566, line: 74, column: 1)
!11601 = !{i32 -2141641977, i32 -2141641970, i32 -2141641916, i32 -2141641885, i32 -2141641855}
!11602 = !DILocation(line: 74, column: 1, scope: !11600)
!11603 = distinct !DISubprogram(name: "get_order", scope: !11604, file: !11604, line: 29, type: !11605, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11604 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11605 = !DISubroutineType(types: !11606)
!11606 = !{!913, !902}
!11607 = !DILocalVariable(name: "x", arg: 1, scope: !11608, file: !11609, line: 366, type: !944)
!11608 = distinct !DISubprogram(name: "fls64", scope: !11609, file: !11609, line: 366, type: !11610, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11609 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!11610 = !DISubroutineType(types: !11611)
!11611 = !{!913, !944}
!11612 = !DILocation(line: 366, column: 40, scope: !11608, inlinedAt: !11613)
!11613 = distinct !DILocation(line: 46, column: 9, scope: !11603)
!11614 = !DILocalVariable(name: "bitpos", scope: !11608, file: !11609, line: 368, type: !913)
!11615 = !DILocation(line: 368, column: 6, scope: !11608, inlinedAt: !11613)
!11616 = !DILocalVariable(name: "size", arg: 1, scope: !11603, file: !11604, line: 29, type: !902)
!11617 = !DILocation(line: 29, column: 63, scope: !11603)
!11618 = !DILocation(line: 31, column: 27, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11603, file: !11604, line: 31, column: 6)
!11620 = !DILocation(line: 31, column: 6, scope: !11619)
!11621 = !DILocation(line: 31, column: 6, scope: !11603)
!11622 = !DILocation(line: 32, column: 8, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11624, file: !11604, line: 32, column: 7)
!11624 = distinct !DILexicalBlock(scope: !11619, file: !11604, line: 31, column: 34)
!11625 = !DILocation(line: 32, column: 7, scope: !11624)
!11626 = !DILocation(line: 33, column: 4, scope: !11623)
!11627 = !DILocation(line: 35, column: 7, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11624, file: !11604, line: 35, column: 7)
!11629 = !DILocation(line: 35, column: 12, scope: !11628)
!11630 = !DILocation(line: 35, column: 7, scope: !11624)
!11631 = !DILocation(line: 36, column: 4, scope: !11628)
!11632 = !DILocation(line: 38, column: 10, scope: !11624)
!11633 = !DILocation(line: 38, column: 28, scope: !11624)
!11634 = !DILocation(line: 38, column: 41, scope: !11624)
!11635 = !DILocation(line: 38, column: 3, scope: !11624)
!11636 = !DILocation(line: 41, column: 6, scope: !11603)
!11637 = !DILocation(line: 42, column: 7, scope: !11603)
!11638 = !DILocation(line: 46, column: 15, scope: !11603)
!11639 = !DILocation(line: 374, column: 2, scope: !11608, inlinedAt: !11613)
!11640 = !DILocation(line: 376, column: 14, scope: !11608, inlinedAt: !11613)
!11641 = !{i32 396160}
!11642 = !DILocation(line: 377, column: 9, scope: !11608, inlinedAt: !11613)
!11643 = !DILocation(line: 377, column: 16, scope: !11608, inlinedAt: !11613)
!11644 = !DILocation(line: 46, column: 2, scope: !11603)
!11645 = !DILocation(line: 48, column: 1, scope: !11603)
!11646 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11647, file: !11647, line: 30, type: !11648, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11647 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11648 = !DISubroutineType(types: !11649)
!11649 = !{!913, !943}
!11650 = !DILocation(line: 366, column: 40, scope: !11608, inlinedAt: !11651)
!11651 = distinct !DILocation(line: 32, column: 9, scope: !11646)
!11652 = !DILocation(line: 368, column: 6, scope: !11608, inlinedAt: !11651)
!11653 = !DILocalVariable(name: "n", arg: 1, scope: !11646, file: !11647, line: 30, type: !943)
!11654 = !DILocation(line: 30, column: 21, scope: !11646)
!11655 = !DILocation(line: 32, column: 15, scope: !11646)
!11656 = !DILocation(line: 374, column: 2, scope: !11608, inlinedAt: !11651)
!11657 = !DILocation(line: 376, column: 14, scope: !11608, inlinedAt: !11651)
!11658 = !DILocation(line: 377, column: 9, scope: !11608, inlinedAt: !11651)
!11659 = !DILocation(line: 377, column: 16, scope: !11608, inlinedAt: !11651)
!11660 = !DILocation(line: 32, column: 18, scope: !11646)
!11661 = !DILocation(line: 32, column: 2, scope: !11646)
!11662 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !11663, file: !11663, line: 137, type: !11664, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11663 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!11664 = !DISubroutineType(types: !11665)
!11665 = !{!973, !1776, !3931, !1102, !896}
!11666 = !DILocalVariable(name: "s", arg: 1, scope: !11662, file: !11663, line: 137, type: !1776)
!11667 = !DILocation(line: 137, column: 54, scope: !11662)
!11668 = !DILocalVariable(name: "object", arg: 2, scope: !11662, file: !11663, line: 137, type: !3931)
!11669 = !DILocation(line: 137, column: 69, scope: !11662)
!11670 = !DILocalVariable(name: "size", arg: 3, scope: !11662, file: !11663, line: 138, type: !1102)
!11671 = !DILocation(line: 138, column: 12, scope: !11662)
!11672 = !DILocalVariable(name: "flags", arg: 4, scope: !11662, file: !11663, line: 138, type: !896)
!11673 = !DILocation(line: 138, column: 24, scope: !11662)
!11674 = !DILocation(line: 140, column: 17, scope: !11662)
!11675 = !DILocation(line: 140, column: 2, scope: !11662)
!11676 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !114, file: !114, line: 655, type: !11677, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11677 = !DISubroutineType(types: !11678)
!11678 = !{!973, !5448}
!11679 = !DILocalVariable(name: "dev", arg: 1, scope: !11676, file: !114, line: 655, type: !5448)
!11680 = !DILocation(line: 655, column: 58, scope: !11676)
!11681 = !DILocation(line: 657, column: 9, scope: !11676)
!11682 = !DILocation(line: 657, column: 14, scope: !11676)
!11683 = !DILocation(line: 657, column: 2, scope: !11676)
!11684 = distinct !DISubprogram(name: "myrb_exec_type3D", scope: !3, file: !3, line: 229, type: !11685, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11685 = !DISubroutineType(types: !11686)
!11686 = !{!320, !5760, !163, !5809, !11255}
!11687 = !DILocalVariable(name: "cb", arg: 1, scope: !11684, file: !3, line: 229, type: !5760)
!11688 = !DILocation(line: 229, column: 57, scope: !11684)
!11689 = !DILocalVariable(name: "op", arg: 2, scope: !11684, file: !3, line: 230, type: !163)
!11690 = !DILocation(line: 230, column: 24, scope: !11684)
!11691 = !DILocalVariable(name: "sdev", arg: 3, scope: !11684, file: !3, line: 230, type: !5809)
!11692 = !DILocation(line: 230, column: 48, scope: !11684)
!11693 = !DILocalVariable(name: "pdev_info", arg: 4, scope: !11684, file: !3, line: 231, type: !11255)
!11694 = !DILocation(line: 231, column: 27, scope: !11684)
!11695 = !DILocalVariable(name: "cmd_blk", scope: !11684, file: !3, line: 233, type: !6225)
!11696 = !DILocation(line: 233, column: 22, scope: !11684)
!11697 = !DILocation(line: 233, column: 33, scope: !11684)
!11698 = !DILocation(line: 233, column: 37, scope: !11684)
!11699 = !DILocalVariable(name: "mbox", scope: !11684, file: !3, line: 234, type: !6245)
!11700 = !DILocation(line: 234, column: 23, scope: !11684)
!11701 = !DILocation(line: 234, column: 31, scope: !11684)
!11702 = !DILocation(line: 234, column: 40, scope: !11684)
!11703 = !DILocalVariable(name: "status", scope: !11684, file: !3, line: 235, type: !320)
!11704 = !DILocation(line: 235, column: 17, scope: !11684)
!11705 = !DILocalVariable(name: "pdev_info_addr", scope: !11684, file: !3, line: 236, type: !1761)
!11706 = !DILocation(line: 236, column: 13, scope: !11684)
!11707 = !DILocation(line: 238, column: 19, scope: !11684)
!11708 = !DILocation(line: 238, column: 17, scope: !11684)
!11709 = !DILocation(line: 241, column: 25, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11684, file: !3, line: 241, column: 6)
!11711 = !DILocation(line: 241, column: 29, scope: !11710)
!11712 = !DILocation(line: 241, column: 35, scope: !11710)
!11713 = !DILocation(line: 241, column: 40, scope: !11710)
!11714 = !DILocation(line: 241, column: 6, scope: !11710)
!11715 = !DILocation(line: 241, column: 6, scope: !11684)
!11716 = !DILocation(line: 242, column: 3, scope: !11710)
!11717 = !DILocation(line: 244, column: 14, scope: !11684)
!11718 = !DILocation(line: 244, column: 18, scope: !11684)
!11719 = !DILocation(line: 244, column: 2, scope: !11684)
!11720 = !DILocation(line: 245, column: 17, scope: !11684)
!11721 = !DILocation(line: 245, column: 2, scope: !11684)
!11722 = !DILocation(line: 246, column: 2, scope: !11684)
!11723 = !DILocation(line: 246, column: 8, scope: !11684)
!11724 = !DILocation(line: 246, column: 15, scope: !11684)
!11725 = !DILocation(line: 246, column: 18, scope: !11684)
!11726 = !DILocation(line: 247, column: 24, scope: !11684)
!11727 = !DILocation(line: 247, column: 2, scope: !11684)
!11728 = !DILocation(line: 247, column: 8, scope: !11684)
!11729 = !DILocation(line: 247, column: 15, scope: !11684)
!11730 = !DILocation(line: 247, column: 22, scope: !11684)
!11731 = !DILocation(line: 248, column: 25, scope: !11684)
!11732 = !DILocation(line: 248, column: 31, scope: !11684)
!11733 = !DILocation(line: 248, column: 2, scope: !11684)
!11734 = !DILocation(line: 248, column: 8, scope: !11684)
!11735 = !DILocation(line: 248, column: 15, scope: !11684)
!11736 = !DILocation(line: 248, column: 23, scope: !11684)
!11737 = !DILocation(line: 249, column: 24, scope: !11684)
!11738 = !DILocation(line: 249, column: 30, scope: !11684)
!11739 = !DILocation(line: 249, column: 2, scope: !11684)
!11740 = !DILocation(line: 249, column: 8, scope: !11684)
!11741 = !DILocation(line: 249, column: 15, scope: !11684)
!11742 = !DILocation(line: 249, column: 22, scope: !11684)
!11743 = !DILocation(line: 250, column: 22, scope: !11684)
!11744 = !DILocation(line: 250, column: 2, scope: !11684)
!11745 = !DILocation(line: 250, column: 8, scope: !11684)
!11746 = !DILocation(line: 250, column: 15, scope: !11684)
!11747 = !DILocation(line: 250, column: 20, scope: !11684)
!11748 = !DILocation(line: 251, column: 25, scope: !11684)
!11749 = !DILocation(line: 251, column: 29, scope: !11684)
!11750 = !DILocation(line: 251, column: 11, scope: !11684)
!11751 = !DILocation(line: 251, column: 9, scope: !11684)
!11752 = !DILocation(line: 252, column: 16, scope: !11684)
!11753 = !DILocation(line: 252, column: 20, scope: !11684)
!11754 = !DILocation(line: 252, column: 2, scope: !11684)
!11755 = !DILocation(line: 253, column: 2, scope: !11684)
!11756 = !DILocation(line: 255, column: 6, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11684, file: !3, line: 255, column: 6)
!11758 = !DILocation(line: 255, column: 13, scope: !11757)
!11759 = !DILocation(line: 255, column: 36, scope: !11757)
!11760 = !DILocation(line: 256, column: 6, scope: !11757)
!11761 = !DILocation(line: 256, column: 12, scope: !11757)
!11762 = !DILocation(line: 256, column: 19, scope: !11757)
!11763 = !DILocation(line: 256, column: 26, scope: !11757)
!11764 = !DILocation(line: 255, column: 6, scope: !11684)
!11765 = !DILocation(line: 257, column: 27, scope: !11757)
!11766 = !DILocation(line: 257, column: 3, scope: !11757)
!11767 = !DILocation(line: 259, column: 9, scope: !11684)
!11768 = !DILocation(line: 259, column: 2, scope: !11684)
!11769 = !DILocation(line: 260, column: 1, scope: !11684)
!11770 = !DILocalVariable(name: "dev", arg: 1, scope: !6408, file: !6409, line: 271, type: !1003)
!11771 = !DILocation(line: 271, column: 62, scope: !6408)
!11772 = !DILocalVariable(name: "ptr", arg: 2, scope: !6408, file: !6409, line: 271, type: !973)
!11773 = !DILocation(line: 271, column: 73, scope: !6408)
!11774 = !DILocalVariable(name: "size", arg: 3, scope: !6408, file: !6409, line: 272, type: !1102)
!11775 = !DILocation(line: 272, column: 10, scope: !6408)
!11776 = !DILocalVariable(name: "dir", arg: 4, scope: !6408, file: !6409, line: 272, type: !146)
!11777 = !DILocation(line: 272, column: 40, scope: !6408)
!11778 = !DILocalVariable(name: "attrs", arg: 5, scope: !6408, file: !6409, line: 272, type: !902)
!11779 = !DILocation(line: 272, column: 59, scope: !6408)
!11780 = !DILocalVariable(name: "__ret_warn_once", scope: !11781, file: !6409, line: 275, type: !913)
!11781 = distinct !DILexicalBlock(scope: !11782, file: !6409, line: 275, column: 6)
!11782 = distinct !DILexicalBlock(scope: !6408, file: !6409, line: 275, column: 6)
!11783 = !DILocation(line: 275, column: 6, scope: !11781)
!11784 = !DILocation(line: 275, column: 6, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11781, file: !6409, line: 275, column: 6)
!11786 = !DILocation(line: 0, scope: !11785)
!11787 = !DILocation(line: 275, column: 6, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11785, file: !6409, line: 275, column: 6)
!11789 = !DILocalVariable(name: "__ret_warn_on", scope: !11790, file: !6409, line: 275, type: !913)
!11790 = distinct !DILexicalBlock(scope: !11788, file: !6409, line: 275, column: 6)
!11791 = !DILocation(line: 275, column: 6, scope: !11790)
!11792 = !DILocation(line: 275, column: 6, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11790, file: !6409, line: 275, column: 6)
!11794 = !DILocation(line: 275, column: 6, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11793, file: !6409, line: 275, column: 6)
!11796 = !DILocation(line: 275, column: 6, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11795, file: !6409, line: 275, column: 6)
!11798 = !DILocation(line: 275, column: 6, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11795, file: !6409, line: 275, column: 6)
!11800 = !DILocation(line: 275, column: 6, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11799, file: !6409, line: 275, column: 6)
!11802 = !DILocation(line: 275, column: 6, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11799, file: !6409, line: 275, column: 6)
!11804 = !{i32 -2141664180, i32 -2141664151, i32 -2141664105, i32 -2141664047, i32 -2141663993, i32 -2141663939, i32 -2141663884, i32 -2141663853}
!11805 = !DILocation(line: 275, column: 6, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11799, file: !6409, line: 275, column: 6)
!11807 = !{i32 -2141663433, i32 -2141663426, i32 -2141663374, i32 -2141663343, i32 -2141663313}
!11808 = !DILocation(line: 275, column: 6, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11799, file: !6409, line: 275, column: 6)
!11810 = !DILocation(line: 275, column: 6, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11795, file: !6409, line: 275, column: 6)
!11812 = !DILocation(line: 275, column: 6, scope: !11782)
!11813 = !DILocation(line: 275, column: 6, scope: !6408)
!11814 = !DILocation(line: 277, column: 3, scope: !11782)
!11815 = !DILocation(line: 278, column: 23, scope: !6408)
!11816 = !DILocation(line: 278, column: 28, scope: !6408)
!11817 = !DILocation(line: 278, column: 33, scope: !6408)
!11818 = !DILocation(line: 278, column: 2, scope: !6408)
!11819 = !DILocation(line: 279, column: 28, scope: !6408)
!11820 = !DILocation(line: 279, column: 33, scope: !6408)
!11821 = !DILocation(line: 279, column: 52, scope: !6408)
!11822 = !DILocation(line: 280, column: 4, scope: !6408)
!11823 = !DILocation(line: 280, column: 10, scope: !6408)
!11824 = !DILocation(line: 280, column: 15, scope: !6408)
!11825 = !DILocation(line: 279, column: 9, scope: !6408)
!11826 = !DILocation(line: 279, column: 2, scope: !6408)
!11827 = !DILocation(line: 281, column: 1, scope: !6408)
!11828 = distinct !DISubprogram(name: "dma_mapping_error", scope: !6409, file: !6409, line: 94, type: !11829, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11829 = !DISubroutineType(types: !11830)
!11830 = !{!913, !1003, !1761}
!11831 = !DILocalVariable(name: "dev", arg: 1, scope: !11828, file: !6409, line: 94, type: !1003)
!11832 = !DILocation(line: 94, column: 52, scope: !11828)
!11833 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !11828, file: !6409, line: 94, type: !1761)
!11834 = !DILocation(line: 94, column: 68, scope: !11828)
!11835 = !DILocation(line: 96, column: 26, scope: !11828)
!11836 = !DILocation(line: 96, column: 31, scope: !11828)
!11837 = !DILocation(line: 96, column: 2, scope: !11828)
!11838 = !DILocation(line: 98, column: 6, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11828, file: !6409, line: 98, column: 6)
!11840 = !DILocation(line: 98, column: 15, scope: !11839)
!11841 = !DILocation(line: 98, column: 6, scope: !11828)
!11842 = !DILocation(line: 99, column: 3, scope: !11839)
!11843 = !DILocation(line: 100, column: 2, scope: !11828)
!11844 = !DILocation(line: 101, column: 1, scope: !11828)
!11845 = distinct !DISubprogram(name: "myrb_exec_cmd", scope: !3, file: !3, line: 185, type: !11846, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11846 = !DISubroutineType(types: !11847)
!11847 = !{!320, !5760, !6225}
!11848 = !DILocalVariable(name: "pfo_val__", scope: !11849, file: !11850, line: 26, type: !268)
!11849 = distinct !DILexicalBlock(scope: !11851, file: !11850, line: 26, column: 9)
!11850 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!11851 = distinct !DISubprogram(name: "preempt_count", scope: !11850, file: !11850, line: 24, type: !7440, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11852 = !DILocation(line: 26, column: 9, scope: !11849, inlinedAt: !11853)
!11853 = distinct !DILocation(line: 197, column: 2, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11845, file: !3, line: 197, column: 2)
!11855 = !DILocation(line: 407, column: 64, scope: !6561, inlinedAt: !11856)
!11856 = distinct !DILocation(line: 195, column: 2, scope: !11845)
!11857 = !DILocation(line: 407, column: 84, scope: !6561, inlinedAt: !11856)
!11858 = !DILocation(line: 327, column: 67, scope: !6570, inlinedAt: !11859)
!11859 = distinct !DILocation(line: 193, column: 2, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11861, file: !3, line: 193, column: 2)
!11861 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 193, column: 2)
!11862 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 193, column: 2)
!11863 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 193, column: 2)
!11864 = distinct !DILexicalBlock(scope: !11845, file: !3, line: 193, column: 2)
!11865 = !DILocalVariable(name: "cb", arg: 1, scope: !11845, file: !3, line: 185, type: !5760)
!11866 = !DILocation(line: 185, column: 54, scope: !11845)
!11867 = !DILocalVariable(name: "cmd_blk", arg: 2, scope: !11845, file: !3, line: 186, type: !6225)
!11868 = !DILocation(line: 186, column: 23, scope: !11845)
!11869 = !DILocalVariable(name: "cmpl", scope: !11845, file: !3, line: 188, type: !2332)
!11870 = !DILocation(line: 188, column: 2, scope: !11845)
!11871 = !DILocalVariable(name: "flags", scope: !11845, file: !3, line: 189, type: !902)
!11872 = !DILocation(line: 189, column: 16, scope: !11845)
!11873 = !DILocation(line: 191, column: 2, scope: !11845)
!11874 = !DILocation(line: 191, column: 11, scope: !11845)
!11875 = !DILocation(line: 191, column: 22, scope: !11845)
!11876 = !DILocation(line: 193, column: 2, scope: !11845)
!11877 = !DILocation(line: 193, column: 2, scope: !11864)
!11878 = !DILocalVariable(name: "__dummy", scope: !11879, file: !3, line: 193, type: !902)
!11879 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 193, column: 2)
!11880 = !DILocation(line: 193, column: 2, scope: !11879)
!11881 = !DILocalVariable(name: "__dummy2", scope: !11879, file: !3, line: 193, type: !902)
!11882 = !DILocation(line: 193, column: 2, scope: !11863)
!11883 = !DILocation(line: 193, column: 2, scope: !11862)
!11884 = !DILocation(line: 193, column: 2, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 193, column: 2)
!11886 = !DILocalVariable(name: "__dummy", scope: !11887, file: !3, line: 193, type: !902)
!11887 = distinct !DILexicalBlock(scope: !11888, file: !3, line: 193, column: 2)
!11888 = distinct !DILexicalBlock(scope: !11885, file: !3, line: 193, column: 2)
!11889 = !DILocation(line: 193, column: 2, scope: !11887)
!11890 = !DILocalVariable(name: "__dummy2", scope: !11887, file: !3, line: 193, type: !902)
!11891 = !DILocation(line: 193, column: 2, scope: !11888)
!11892 = !DILocation(line: 193, column: 2, scope: !11861)
!11893 = !{i32 -2140928799}
!11894 = !DILocation(line: 193, column: 2, scope: !11860)
!11895 = !DILocation(line: 329, column: 10, scope: !6570, inlinedAt: !11859)
!11896 = !DILocation(line: 329, column: 16, scope: !6570, inlinedAt: !11859)
!11897 = !DILocation(line: 194, column: 2, scope: !11845)
!11898 = !DILocation(line: 194, column: 6, scope: !11845)
!11899 = !DILocation(line: 194, column: 11, scope: !11845)
!11900 = !DILocation(line: 194, column: 15, scope: !11845)
!11901 = !DILocation(line: 195, column: 26, scope: !11845)
!11902 = !DILocation(line: 195, column: 30, scope: !11845)
!11903 = !DILocation(line: 195, column: 42, scope: !11845)
!11904 = !DILocation(line: 409, column: 2, scope: !6711, inlinedAt: !11856)
!11905 = !DILocation(line: 409, column: 2, scope: !6716, inlinedAt: !11856)
!11906 = !DILocation(line: 409, column: 2, scope: !6717, inlinedAt: !11856)
!11907 = !DILocation(line: 409, column: 2, scope: !6724, inlinedAt: !11856)
!11908 = !DILocation(line: 409, column: 2, scope: !6727, inlinedAt: !11856)
!11909 = !DILocalVariable(name: "__ret_warn_on", scope: !11854, file: !3, line: 197, type: !913)
!11910 = !DILocation(line: 197, column: 2, scope: !11854)
!11911 = !{i32 -2145458887}
!11912 = !DILocation(line: 26, column: 41, scope: !11851, inlinedAt: !11853)
!11913 = !DILocation(line: 197, column: 2, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11854, file: !3, line: 197, column: 2)
!11915 = !DILocation(line: 197, column: 2, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 197, column: 2)
!11917 = !DILocation(line: 197, column: 2, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 197, column: 2)
!11919 = !DILocation(line: 197, column: 2, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 197, column: 2)
!11921 = !{i32 -2140927541, i32 -2140927512, i32 -2140927466, i32 -2140927408, i32 -2140927354, i32 -2140927300, i32 -2140927245, i32 -2140927214}
!11922 = !DILocation(line: 197, column: 2, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 197, column: 2)
!11924 = !{i32 -2140926813, i32 -2140926806, i32 -2140926754, i32 -2140926723, i32 -2140926693}
!11925 = !DILocation(line: 197, column: 2, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 197, column: 2)
!11927 = !DILocation(line: 198, column: 2, scope: !11845)
!11928 = !DILocation(line: 199, column: 9, scope: !11845)
!11929 = !DILocation(line: 199, column: 18, scope: !11845)
!11930 = !DILocation(line: 199, column: 2, scope: !11845)
!11931 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !6409, file: !6409, line: 283, type: !11932, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11932 = !DISubroutineType(types: !11933)
!11933 = !{null, !1003, !1761, !1102, !146, !902}
!11934 = !DILocalVariable(name: "dev", arg: 1, scope: !11931, file: !6409, line: 283, type: !1003)
!11935 = !DILocation(line: 283, column: 58, scope: !11931)
!11936 = !DILocalVariable(name: "addr", arg: 2, scope: !11931, file: !6409, line: 283, type: !1761)
!11937 = !DILocation(line: 283, column: 74, scope: !11931)
!11938 = !DILocalVariable(name: "size", arg: 3, scope: !11931, file: !6409, line: 284, type: !1102)
!11939 = !DILocation(line: 284, column: 10, scope: !11931)
!11940 = !DILocalVariable(name: "dir", arg: 4, scope: !11931, file: !6409, line: 284, type: !146)
!11941 = !DILocation(line: 284, column: 40, scope: !11931)
!11942 = !DILocalVariable(name: "attrs", arg: 5, scope: !11931, file: !6409, line: 284, type: !902)
!11943 = !DILocation(line: 284, column: 59, scope: !11931)
!11944 = !DILocation(line: 286, column: 30, scope: !11931)
!11945 = !DILocation(line: 286, column: 35, scope: !11931)
!11946 = !DILocation(line: 286, column: 41, scope: !11931)
!11947 = !DILocation(line: 286, column: 47, scope: !11931)
!11948 = !DILocation(line: 286, column: 52, scope: !11931)
!11949 = !DILocation(line: 286, column: 9, scope: !11931)
!11950 = !DILocation(line: 286, column: 2, scope: !11931)
!11951 = distinct !DISubprogram(name: "myrb_translate_devstate", scope: !3, file: !3, line: 3313, type: !1241, scopeLine: 3314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11952 = !DILocalVariable(name: "state", arg: 1, scope: !11951, file: !3, line: 3313, type: !973)
!11953 = !DILocation(line: 3313, column: 50, scope: !11951)
!11954 = !DILocation(line: 3315, column: 9, scope: !11951)
!11955 = !DILocation(line: 3315, column: 15, scope: !11951)
!11956 = !DILocation(line: 3315, column: 20, scope: !11951)
!11957 = !DILocation(line: 3315, column: 26, scope: !11951)
!11958 = !DILocation(line: 3315, column: 2, scope: !11951)
!11959 = !DILocation(line: 3316, column: 10, scope: !11951)
!11960 = !DILocation(line: 3316, column: 16, scope: !11951)
!11961 = !DILocation(line: 3316, column: 21, scope: !11951)
!11962 = !DILocation(line: 3316, column: 27, scope: !11951)
!11963 = !DILocation(line: 3316, column: 2, scope: !11951)
!11964 = !DILocation(line: 3317, column: 10, scope: !11951)
!11965 = !DILocation(line: 3317, column: 16, scope: !11951)
!11966 = !DILocation(line: 3317, column: 21, scope: !11951)
!11967 = !DILocation(line: 3317, column: 27, scope: !11951)
!11968 = !DILocation(line: 3317, column: 2, scope: !11951)
!11969 = !DILocation(line: 3318, column: 1, scope: !11951)
!11970 = distinct !DISubprogram(name: "dev_name", scope: !114, file: !114, line: 609, type: !11971, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11971 = !DISubroutineType(types: !11972)
!11972 = !{!948, !5448}
!11973 = !DILocalVariable(name: "dev", arg: 1, scope: !11970, file: !114, line: 609, type: !5448)
!11974 = !DILocation(line: 609, column: 57, scope: !11970)
!11975 = !DILocation(line: 612, column: 6, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11970, file: !114, line: 612, column: 6)
!11977 = !DILocation(line: 612, column: 11, scope: !11976)
!11978 = !DILocation(line: 612, column: 6, scope: !11970)
!11979 = !DILocation(line: 613, column: 10, scope: !11976)
!11980 = !DILocation(line: 613, column: 15, scope: !11976)
!11981 = !DILocation(line: 613, column: 3, scope: !11976)
!11982 = !DILocation(line: 615, column: 23, scope: !11970)
!11983 = !DILocation(line: 615, column: 28, scope: !11970)
!11984 = !DILocation(line: 615, column: 9, scope: !11970)
!11985 = !DILocation(line: 615, column: 2, scope: !11970)
!11986 = !DILocation(line: 616, column: 1, scope: !11970)
!11987 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !6409, file: !6409, line: 87, type: !11988, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11988 = !DISubroutineType(types: !11989)
!11989 = !{null, !1003, !3931, !902}
!11990 = !DILocalVariable(name: "dev", arg: 1, scope: !11987, file: !6409, line: 87, type: !1003)
!11991 = !DILocation(line: 87, column: 56, scope: !11987)
!11992 = !DILocalVariable(name: "addr", arg: 2, scope: !11987, file: !6409, line: 87, type: !3931)
!11993 = !DILocation(line: 87, column: 73, scope: !11987)
!11994 = !DILocalVariable(name: "len", arg: 3, scope: !11987, file: !6409, line: 88, type: !902)
!11995 = !DILocation(line: 88, column: 17, scope: !11987)
!11996 = !DILocation(line: 90, column: 1, scope: !11987)
!11997 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !11998, file: !11998, line: 18, type: !11999, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!11998 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!11999 = !DISubroutineType(types: !12000)
!12000 = !{!902, !902}
!12001 = !DILocalVariable(name: "x", arg: 1, scope: !11997, file: !11998, line: 18, type: !902)
!12002 = !DILocation(line: 18, column: 63, scope: !11997)
!12003 = !DILocalVariable(name: "y", scope: !11997, file: !11998, line: 20, type: !902)
!12004 = !DILocation(line: 20, column: 16, scope: !11997)
!12005 = !DILocation(line: 20, column: 20, scope: !11997)
!12006 = !DILocation(line: 20, column: 22, scope: !11997)
!12007 = !DILocation(line: 23, column: 6, scope: !11997)
!12008 = !DILocation(line: 23, column: 12, scope: !11997)
!12009 = !DILocation(line: 23, column: 16, scope: !11997)
!12010 = !DILocation(line: 23, column: 14, scope: !11997)
!12011 = !DILocation(line: 23, column: 11, scope: !11997)
!12012 = !DILocation(line: 23, column: 21, scope: !11997)
!12013 = !DILocation(line: 23, column: 55, scope: !11997)
!12014 = !DILocation(line: 23, column: 53, scope: !11997)
!12015 = !DILocation(line: 23, column: 8, scope: !11997)
!12016 = !DILocation(line: 23, column: 4, scope: !11997)
!12017 = !DILocation(line: 25, column: 9, scope: !11997)
!12018 = !DILocation(line: 25, column: 2, scope: !11997)
!12019 = distinct !DISubprogram(name: "kobject_name", scope: !1008, file: !1008, line: 88, type: !12020, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12020 = !DISubroutineType(types: !12021)
!12021 = !{!948, !12022}
!12022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12023, size: 64)
!12023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!12024 = !DILocalVariable(name: "kobj", arg: 1, scope: !12019, file: !1008, line: 88, type: !12022)
!12025 = !DILocation(line: 88, column: 62, scope: !12019)
!12026 = !DILocation(line: 90, column: 9, scope: !12019)
!12027 = !DILocation(line: 90, column: 15, scope: !12019)
!12028 = !DILocation(line: 90, column: 2, scope: !12019)
!12029 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !6409, file: !6409, line: 83, type: !12030, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12030 = !DISubroutineType(types: !12031)
!12031 = !{null, !1003, !1761}
!12032 = !DILocalVariable(name: "dev", arg: 1, scope: !12029, file: !6409, line: 83, type: !1003)
!12033 = !DILocation(line: 83, column: 59, scope: !12029)
!12034 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !12029, file: !6409, line: 84, type: !1761)
!12035 = !DILocation(line: 84, column: 14, scope: !12029)
!12036 = !DILocation(line: 86, column: 1, scope: !12029)
!12037 = distinct !DISubprogram(name: "myrb_devstate_name", scope: !3, file: !3, line: 49, type: !12038, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12038 = !DISubroutineType(types: !12039)
!12039 = !{!948, !229}
!12040 = !DILocalVariable(name: "state", arg: 1, scope: !12037, file: !3, line: 49, type: !229)
!12041 = !DILocation(line: 49, column: 58, scope: !12037)
!12042 = !DILocalVariable(name: "entry", scope: !12037, file: !3, line: 51, type: !12043)
!12043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6415, size: 64)
!12044 = !DILocation(line: 51, column: 35, scope: !12037)
!12045 = !DILocalVariable(name: "i", scope: !12037, file: !3, line: 52, type: !913)
!12046 = !DILocation(line: 52, column: 6, scope: !12037)
!12047 = !DILocation(line: 54, column: 9, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 54, column: 2)
!12049 = !DILocation(line: 54, column: 7, scope: !12048)
!12050 = !DILocation(line: 54, column: 14, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12048, file: !3, line: 54, column: 2)
!12052 = !DILocation(line: 54, column: 16, scope: !12051)
!12053 = !DILocation(line: 54, column: 2, scope: !12048)
!12054 = !DILocation(line: 55, column: 7, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12056, file: !3, line: 55, column: 7)
!12056 = distinct !DILexicalBlock(scope: !12051, file: !3, line: 54, column: 60)
!12057 = !DILocation(line: 55, column: 13, scope: !12055)
!12058 = !DILocation(line: 55, column: 16, scope: !12055)
!12059 = !DILocation(line: 55, column: 25, scope: !12055)
!12060 = !DILocation(line: 55, column: 22, scope: !12055)
!12061 = !DILocation(line: 55, column: 7, scope: !12056)
!12062 = !DILocation(line: 56, column: 11, scope: !12055)
!12063 = !DILocation(line: 56, column: 17, scope: !12055)
!12064 = !DILocation(line: 56, column: 20, scope: !12055)
!12065 = !DILocation(line: 56, column: 4, scope: !12055)
!12066 = !DILocation(line: 57, column: 2, scope: !12056)
!12067 = !DILocation(line: 54, column: 56, scope: !12051)
!12068 = !DILocation(line: 54, column: 2, scope: !12051)
!12069 = distinct !{!12069, !12053, !12070}
!12070 = !DILocation(line: 57, column: 2, scope: !12048)
!12071 = !DILocation(line: 58, column: 2, scope: !12037)
!12072 = !DILocation(line: 59, column: 1, scope: !12037)
!12073 = distinct !DISubprogram(name: "ctlr_num_show", scope: !3, file: !3, line: 2164, type: !6142, scopeLine: 2166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12074 = !DILocalVariable(name: "dev", arg: 1, scope: !12073, file: !3, line: 2164, type: !1003)
!12075 = !DILocation(line: 2164, column: 45, scope: !12073)
!12076 = !DILocalVariable(name: "attr", arg: 2, scope: !12073, file: !3, line: 2165, type: !6136)
!12077 = !DILocation(line: 2165, column: 28, scope: !12073)
!12078 = !DILocalVariable(name: "buf", arg: 3, scope: !12073, file: !3, line: 2165, type: !1061)
!12079 = !DILocation(line: 2165, column: 40, scope: !12073)
!12080 = !DILocalVariable(name: "shost", scope: !12073, file: !3, line: 2167, type: !5782)
!12081 = !DILocation(line: 2167, column: 20, scope: !12073)
!12082 = !DILocalVariable(name: "__mptr", scope: !12083, file: !3, line: 2167, type: !973)
!12083 = distinct !DILexicalBlock(scope: !12073, file: !3, line: 2167, column: 28)
!12084 = !DILocation(line: 2167, column: 28, scope: !12083)
!12085 = !DILocation(line: 2167, column: 28, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 2167, column: 28)
!12087 = !DILocalVariable(name: "cb", scope: !12073, file: !3, line: 2168, type: !5760)
!12088 = !DILocation(line: 2168, column: 19, scope: !12073)
!12089 = !DILocation(line: 2168, column: 35, scope: !12073)
!12090 = !DILocation(line: 2168, column: 24, scope: !12073)
!12091 = !DILocation(line: 2170, column: 18, scope: !12073)
!12092 = !DILocation(line: 2170, column: 35, scope: !12073)
!12093 = !DILocation(line: 2170, column: 39, scope: !12073)
!12094 = !DILocation(line: 2170, column: 9, scope: !12073)
!12095 = !DILocation(line: 2170, column: 2, scope: !12073)
!12096 = distinct !DISubprogram(name: "model_show", scope: !3, file: !3, line: 2184, type: !6142, scopeLine: 2186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12097 = !DILocalVariable(name: "dev", arg: 1, scope: !12096, file: !3, line: 2184, type: !1003)
!12098 = !DILocation(line: 2184, column: 42, scope: !12096)
!12099 = !DILocalVariable(name: "attr", arg: 2, scope: !12096, file: !3, line: 2185, type: !6136)
!12100 = !DILocation(line: 2185, column: 28, scope: !12096)
!12101 = !DILocalVariable(name: "buf", arg: 3, scope: !12096, file: !3, line: 2185, type: !1061)
!12102 = !DILocation(line: 2185, column: 40, scope: !12096)
!12103 = !DILocalVariable(name: "shost", scope: !12096, file: !3, line: 2187, type: !5782)
!12104 = !DILocation(line: 2187, column: 20, scope: !12096)
!12105 = !DILocalVariable(name: "__mptr", scope: !12106, file: !3, line: 2187, type: !973)
!12106 = distinct !DILexicalBlock(scope: !12096, file: !3, line: 2187, column: 28)
!12107 = !DILocation(line: 2187, column: 28, scope: !12106)
!12108 = !DILocation(line: 2187, column: 28, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12106, file: !3, line: 2187, column: 28)
!12110 = !DILocalVariable(name: "cb", scope: !12096, file: !3, line: 2188, type: !5760)
!12111 = !DILocation(line: 2188, column: 19, scope: !12096)
!12112 = !DILocation(line: 2188, column: 35, scope: !12096)
!12113 = !DILocation(line: 2188, column: 24, scope: !12096)
!12114 = !DILocation(line: 2190, column: 18, scope: !12096)
!12115 = !DILocation(line: 2190, column: 35, scope: !12096)
!12116 = !DILocation(line: 2190, column: 39, scope: !12096)
!12117 = !DILocation(line: 2190, column: 9, scope: !12096)
!12118 = !DILocation(line: 2190, column: 2, scope: !12096)
!12119 = distinct !DISubprogram(name: "firmware_show", scope: !3, file: !3, line: 2174, type: !6142, scopeLine: 2176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12120 = !DILocalVariable(name: "dev", arg: 1, scope: !12119, file: !3, line: 2174, type: !1003)
!12121 = !DILocation(line: 2174, column: 45, scope: !12119)
!12122 = !DILocalVariable(name: "attr", arg: 2, scope: !12119, file: !3, line: 2175, type: !6136)
!12123 = !DILocation(line: 2175, column: 28, scope: !12119)
!12124 = !DILocalVariable(name: "buf", arg: 3, scope: !12119, file: !3, line: 2175, type: !1061)
!12125 = !DILocation(line: 2175, column: 40, scope: !12119)
!12126 = !DILocalVariable(name: "shost", scope: !12119, file: !3, line: 2177, type: !5782)
!12127 = !DILocation(line: 2177, column: 20, scope: !12119)
!12128 = !DILocalVariable(name: "__mptr", scope: !12129, file: !3, line: 2177, type: !973)
!12129 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 2177, column: 28)
!12130 = !DILocation(line: 2177, column: 28, scope: !12129)
!12131 = !DILocation(line: 2177, column: 28, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2177, column: 28)
!12133 = !DILocalVariable(name: "cb", scope: !12119, file: !3, line: 2178, type: !5760)
!12134 = !DILocation(line: 2178, column: 19, scope: !12119)
!12135 = !DILocation(line: 2178, column: 35, scope: !12119)
!12136 = !DILocation(line: 2178, column: 24, scope: !12119)
!12137 = !DILocation(line: 2180, column: 18, scope: !12119)
!12138 = !DILocation(line: 2180, column: 35, scope: !12119)
!12139 = !DILocation(line: 2180, column: 39, scope: !12119)
!12140 = !DILocation(line: 2180, column: 9, scope: !12119)
!12141 = !DILocation(line: 2180, column: 2, scope: !12119)
!12142 = distinct !DISubprogram(name: "flush_cache_store", scope: !3, file: !3, line: 2194, type: !6146, scopeLine: 2196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12143 = !DILocalVariable(name: "dev", arg: 1, scope: !12142, file: !3, line: 2194, type: !1003)
!12144 = !DILocation(line: 2194, column: 49, scope: !12142)
!12145 = !DILocalVariable(name: "attr", arg: 2, scope: !12142, file: !3, line: 2195, type: !6136)
!12146 = !DILocation(line: 2195, column: 28, scope: !12142)
!12147 = !DILocalVariable(name: "buf", arg: 3, scope: !12142, file: !3, line: 2195, type: !948)
!12148 = !DILocation(line: 2195, column: 46, scope: !12142)
!12149 = !DILocalVariable(name: "count", arg: 4, scope: !12142, file: !3, line: 2195, type: !1102)
!12150 = !DILocation(line: 2195, column: 58, scope: !12142)
!12151 = !DILocalVariable(name: "shost", scope: !12142, file: !3, line: 2197, type: !5782)
!12152 = !DILocation(line: 2197, column: 20, scope: !12142)
!12153 = !DILocalVariable(name: "__mptr", scope: !12154, file: !3, line: 2197, type: !973)
!12154 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 2197, column: 28)
!12155 = !DILocation(line: 2197, column: 28, scope: !12154)
!12156 = !DILocation(line: 2197, column: 28, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12154, file: !3, line: 2197, column: 28)
!12158 = !DILocalVariable(name: "cb", scope: !12142, file: !3, line: 2198, type: !5760)
!12159 = !DILocation(line: 2198, column: 19, scope: !12142)
!12160 = !DILocation(line: 2198, column: 35, scope: !12142)
!12161 = !DILocation(line: 2198, column: 24, scope: !12142)
!12162 = !DILocalVariable(name: "status", scope: !12142, file: !3, line: 2199, type: !320)
!12163 = !DILocation(line: 2199, column: 17, scope: !12142)
!12164 = !DILocation(line: 2201, column: 27, scope: !12142)
!12165 = !DILocation(line: 2201, column: 11, scope: !12142)
!12166 = !DILocation(line: 2201, column: 9, scope: !12142)
!12167 = !DILocation(line: 2202, column: 6, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 2202, column: 6)
!12169 = !DILocation(line: 2202, column: 13, scope: !12168)
!12170 = !DILocation(line: 2202, column: 6, scope: !12142)
!12171 = !DILocation(line: 2203, column: 3, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12168, file: !3, line: 2202, column: 37)
!12173 = !DILocation(line: 2205, column: 10, scope: !12172)
!12174 = !DILocation(line: 2205, column: 3, scope: !12172)
!12175 = !DILocation(line: 2207, column: 2, scope: !12142)
!12176 = !DILocation(line: 2209, column: 2, scope: !12142)
!12177 = !DILocation(line: 2210, column: 1, scope: !12142)
!12178 = distinct !DISubprogram(name: "myrb_exec_type3", scope: !3, file: !3, line: 207, type: !12179, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12179 = !DISubroutineType(types: !12180)
!12180 = !{!320, !5760, !163, !1761}
!12181 = !DILocalVariable(name: "cb", arg: 1, scope: !12178, file: !3, line: 207, type: !5760)
!12182 = !DILocation(line: 207, column: 56, scope: !12178)
!12183 = !DILocalVariable(name: "op", arg: 2, scope: !12178, file: !3, line: 208, type: !163)
!12184 = !DILocation(line: 208, column: 24, scope: !12178)
!12185 = !DILocalVariable(name: "addr", arg: 3, scope: !12178, file: !3, line: 208, type: !1761)
!12186 = !DILocation(line: 208, column: 39, scope: !12178)
!12187 = !DILocalVariable(name: "cmd_blk", scope: !12178, file: !3, line: 210, type: !6225)
!12188 = !DILocation(line: 210, column: 22, scope: !12178)
!12189 = !DILocation(line: 210, column: 33, scope: !12178)
!12190 = !DILocation(line: 210, column: 37, scope: !12178)
!12191 = !DILocalVariable(name: "mbox", scope: !12178, file: !3, line: 211, type: !6245)
!12192 = !DILocation(line: 211, column: 23, scope: !12178)
!12193 = !DILocation(line: 211, column: 31, scope: !12178)
!12194 = !DILocation(line: 211, column: 40, scope: !12178)
!12195 = !DILocalVariable(name: "status", scope: !12178, file: !3, line: 212, type: !320)
!12196 = !DILocation(line: 212, column: 17, scope: !12178)
!12197 = !DILocation(line: 214, column: 14, scope: !12178)
!12198 = !DILocation(line: 214, column: 18, scope: !12178)
!12199 = !DILocation(line: 214, column: 2, scope: !12178)
!12200 = !DILocation(line: 215, column: 17, scope: !12178)
!12201 = !DILocation(line: 215, column: 2, scope: !12178)
!12202 = !DILocation(line: 216, column: 2, scope: !12178)
!12203 = !DILocation(line: 216, column: 8, scope: !12178)
!12204 = !DILocation(line: 216, column: 14, scope: !12178)
!12205 = !DILocation(line: 216, column: 17, scope: !12178)
!12206 = !DILocation(line: 217, column: 23, scope: !12178)
!12207 = !DILocation(line: 217, column: 2, scope: !12178)
!12208 = !DILocation(line: 217, column: 8, scope: !12178)
!12209 = !DILocation(line: 217, column: 14, scope: !12178)
!12210 = !DILocation(line: 217, column: 21, scope: !12178)
!12211 = !DILocation(line: 218, column: 21, scope: !12178)
!12212 = !DILocation(line: 218, column: 2, scope: !12178)
!12213 = !DILocation(line: 218, column: 8, scope: !12178)
!12214 = !DILocation(line: 218, column: 14, scope: !12178)
!12215 = !DILocation(line: 218, column: 19, scope: !12178)
!12216 = !DILocation(line: 219, column: 25, scope: !12178)
!12217 = !DILocation(line: 219, column: 29, scope: !12178)
!12218 = !DILocation(line: 219, column: 11, scope: !12178)
!12219 = !DILocation(line: 219, column: 9, scope: !12178)
!12220 = !DILocation(line: 220, column: 16, scope: !12178)
!12221 = !DILocation(line: 220, column: 20, scope: !12178)
!12222 = !DILocation(line: 220, column: 2, scope: !12178)
!12223 = !DILocation(line: 221, column: 9, scope: !12178)
!12224 = !DILocation(line: 221, column: 2, scope: !12178)
!12225 = distinct !DISubprogram(name: "rebuild_show", scope: !3, file: !3, line: 1924, type: !6142, scopeLine: 1926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12226 = !DILocalVariable(name: "dev", arg: 1, scope: !12225, file: !3, line: 1924, type: !1003)
!12227 = !DILocation(line: 1924, column: 44, scope: !12225)
!12228 = !DILocalVariable(name: "attr", arg: 2, scope: !12225, file: !3, line: 1925, type: !6136)
!12229 = !DILocation(line: 1925, column: 28, scope: !12225)
!12230 = !DILocalVariable(name: "buf", arg: 3, scope: !12225, file: !3, line: 1925, type: !1061)
!12231 = !DILocation(line: 1925, column: 40, scope: !12225)
!12232 = !DILocalVariable(name: "sdev", scope: !12225, file: !3, line: 1927, type: !5809)
!12233 = !DILocation(line: 1927, column: 22, scope: !12225)
!12234 = !DILocalVariable(name: "__mptr", scope: !12235, file: !3, line: 1927, type: !973)
!12235 = distinct !DILexicalBlock(scope: !12225, file: !3, line: 1927, column: 29)
!12236 = !DILocation(line: 1927, column: 29, scope: !12235)
!12237 = !DILocation(line: 1927, column: 29, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12235, file: !3, line: 1927, column: 29)
!12239 = !DILocalVariable(name: "cb", scope: !12225, file: !3, line: 1928, type: !5760)
!12240 = !DILocation(line: 1928, column: 19, scope: !12225)
!12241 = !DILocation(line: 1928, column: 35, scope: !12225)
!12242 = !DILocation(line: 1928, column: 41, scope: !12225)
!12243 = !DILocation(line: 1928, column: 24, scope: !12225)
!12244 = !DILocalVariable(name: "rbld_buf", scope: !12225, file: !3, line: 1929, type: !12245)
!12245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_rbld_progress", file: !164, line: 419, size: 96, elements: !12246)
!12246 = !{!12247, !12248, !12249}
!12247 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_num", scope: !12245, file: !164, line: 420, baseType: !7, size: 32)
!12248 = !DIDerivedType(tag: DW_TAG_member, name: "ldev_size", scope: !12245, file: !164, line: 421, baseType: !7, size: 32, offset: 32)
!12249 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_left", scope: !12245, file: !164, line: 422, baseType: !7, size: 32, offset: 64)
!12250 = !DILocation(line: 1929, column: 28, scope: !12225)
!12251 = !DILocalVariable(name: "status", scope: !12225, file: !3, line: 1930, type: !165)
!12252 = !DILocation(line: 1930, column: 16, scope: !12225)
!12253 = !DILocation(line: 1932, column: 6, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12225, file: !3, line: 1932, column: 6)
!12255 = !DILocation(line: 1932, column: 12, scope: !12254)
!12256 = !DILocation(line: 1932, column: 43, scope: !12254)
!12257 = !DILocation(line: 1932, column: 49, scope: !12254)
!12258 = !DILocation(line: 1932, column: 22, scope: !12254)
!12259 = !DILocation(line: 1932, column: 20, scope: !12254)
!12260 = !DILocation(line: 1932, column: 6, scope: !12225)
!12261 = !DILocation(line: 1933, column: 19, scope: !12254)
!12262 = !DILocation(line: 1933, column: 10, scope: !12254)
!12263 = !DILocation(line: 1933, column: 3, scope: !12254)
!12264 = !DILocation(line: 1935, column: 34, scope: !12225)
!12265 = !DILocation(line: 1935, column: 11, scope: !12225)
!12266 = !DILocation(line: 1935, column: 9, scope: !12225)
!12267 = !DILocation(line: 1937, column: 15, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12225, file: !3, line: 1937, column: 6)
!12269 = !DILocation(line: 1937, column: 27, scope: !12268)
!12270 = !DILocation(line: 1937, column: 33, scope: !12268)
!12271 = !DILocation(line: 1937, column: 24, scope: !12268)
!12272 = !DILocation(line: 1937, column: 36, scope: !12268)
!12273 = !DILocation(line: 1938, column: 6, scope: !12268)
!12274 = !DILocation(line: 1938, column: 13, scope: !12268)
!12275 = !DILocation(line: 1937, column: 6, scope: !12225)
!12276 = !DILocation(line: 1939, column: 19, scope: !12268)
!12277 = !DILocation(line: 1939, column: 10, scope: !12268)
!12278 = !DILocation(line: 1939, column: 3, scope: !12268)
!12279 = !DILocation(line: 1941, column: 18, scope: !12225)
!12280 = !DILocation(line: 1942, column: 13, scope: !12225)
!12281 = !DILocation(line: 1942, column: 34, scope: !12225)
!12282 = !DILocation(line: 1942, column: 23, scope: !12225)
!12283 = !DILocation(line: 1943, column: 13, scope: !12225)
!12284 = !DILocation(line: 1941, column: 9, scope: !12225)
!12285 = !DILocation(line: 1941, column: 2, scope: !12225)
!12286 = !DILocation(line: 1944, column: 1, scope: !12225)
!12287 = distinct !DISubprogram(name: "rebuild_store", scope: !3, file: !3, line: 1946, type: !6146, scopeLine: 1948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12288 = !DILocalVariable(name: "dev", arg: 1, scope: !12287, file: !3, line: 1946, type: !1003)
!12289 = !DILocation(line: 1946, column: 45, scope: !12287)
!12290 = !DILocalVariable(name: "attr", arg: 2, scope: !12287, file: !3, line: 1947, type: !6136)
!12291 = !DILocation(line: 1947, column: 28, scope: !12287)
!12292 = !DILocalVariable(name: "buf", arg: 3, scope: !12287, file: !3, line: 1947, type: !948)
!12293 = !DILocation(line: 1947, column: 46, scope: !12287)
!12294 = !DILocalVariable(name: "count", arg: 4, scope: !12287, file: !3, line: 1947, type: !1102)
!12295 = !DILocation(line: 1947, column: 58, scope: !12287)
!12296 = !DILocalVariable(name: "sdev", scope: !12287, file: !3, line: 1949, type: !5809)
!12297 = !DILocation(line: 1949, column: 22, scope: !12287)
!12298 = !DILocalVariable(name: "__mptr", scope: !12299, file: !3, line: 1949, type: !973)
!12299 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 1949, column: 29)
!12300 = !DILocation(line: 1949, column: 29, scope: !12299)
!12301 = !DILocation(line: 1949, column: 29, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 1949, column: 29)
!12303 = !DILocalVariable(name: "cb", scope: !12287, file: !3, line: 1950, type: !5760)
!12304 = !DILocation(line: 1950, column: 19, scope: !12287)
!12305 = !DILocation(line: 1950, column: 35, scope: !12287)
!12306 = !DILocation(line: 1950, column: 41, scope: !12287)
!12307 = !DILocation(line: 1950, column: 24, scope: !12287)
!12308 = !DILocalVariable(name: "cmd_blk", scope: !12287, file: !3, line: 1951, type: !6225)
!12309 = !DILocation(line: 1951, column: 22, scope: !12287)
!12310 = !DILocalVariable(name: "mbox", scope: !12287, file: !3, line: 1952, type: !6245)
!12311 = !DILocation(line: 1952, column: 23, scope: !12287)
!12312 = !DILocalVariable(name: "status", scope: !12287, file: !3, line: 1953, type: !320)
!12313 = !DILocation(line: 1953, column: 17, scope: !12287)
!12314 = !DILocalVariable(name: "rc", scope: !12287, file: !3, line: 1954, type: !913)
!12315 = !DILocation(line: 1954, column: 6, scope: !12287)
!12316 = !DILocalVariable(name: "start", scope: !12287, file: !3, line: 1954, type: !913)
!12317 = !DILocation(line: 1954, column: 10, scope: !12287)
!12318 = !DILocalVariable(name: "msg", scope: !12287, file: !3, line: 1955, type: !948)
!12319 = !DILocation(line: 1955, column: 14, scope: !12287)
!12320 = !DILocation(line: 1957, column: 17, scope: !12287)
!12321 = !DILocation(line: 1957, column: 7, scope: !12287)
!12322 = !DILocation(line: 1957, column: 5, scope: !12287)
!12323 = !DILocation(line: 1958, column: 6, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 1958, column: 6)
!12325 = !DILocation(line: 1958, column: 6, scope: !12287)
!12326 = !DILocation(line: 1959, column: 10, scope: !12324)
!12327 = !DILocation(line: 1959, column: 3, scope: !12324)
!12328 = !DILocation(line: 1961, column: 6, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 1961, column: 6)
!12330 = !DILocation(line: 1961, column: 12, scope: !12329)
!12331 = !DILocation(line: 1961, column: 44, scope: !12329)
!12332 = !DILocation(line: 1961, column: 50, scope: !12329)
!12333 = !DILocation(line: 1961, column: 23, scope: !12329)
!12334 = !DILocation(line: 1961, column: 20, scope: !12329)
!12335 = !DILocation(line: 1961, column: 6, scope: !12287)
!12336 = !DILocation(line: 1962, column: 3, scope: !12329)
!12337 = !DILocation(line: 1964, column: 34, scope: !12287)
!12338 = !DILocation(line: 1964, column: 11, scope: !12287)
!12339 = !DILocation(line: 1964, column: 9, scope: !12287)
!12340 = !DILocation(line: 1965, column: 6, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 1965, column: 6)
!12342 = !DILocation(line: 1965, column: 6, scope: !12287)
!12343 = !DILocation(line: 1966, column: 7, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12345, file: !3, line: 1966, column: 7)
!12345 = distinct !DILexicalBlock(scope: !12341, file: !3, line: 1965, column: 13)
!12346 = !DILocation(line: 1966, column: 14, scope: !12344)
!12347 = !DILocation(line: 1966, column: 7, scope: !12345)
!12348 = !DILocation(line: 1967, column: 4, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12344, file: !3, line: 1966, column: 38)
!12350 = !DILocation(line: 1969, column: 4, scope: !12349)
!12351 = !DILocation(line: 1971, column: 15, scope: !12345)
!12352 = !DILocation(line: 1971, column: 19, scope: !12345)
!12353 = !DILocation(line: 1971, column: 3, scope: !12345)
!12354 = !DILocation(line: 1972, column: 14, scope: !12345)
!12355 = !DILocation(line: 1972, column: 18, scope: !12345)
!12356 = !DILocation(line: 1972, column: 11, scope: !12345)
!12357 = !DILocation(line: 1973, column: 18, scope: !12345)
!12358 = !DILocation(line: 1973, column: 3, scope: !12345)
!12359 = !DILocation(line: 1974, column: 11, scope: !12345)
!12360 = !DILocation(line: 1974, column: 20, scope: !12345)
!12361 = !DILocation(line: 1974, column: 8, scope: !12345)
!12362 = !DILocation(line: 1975, column: 3, scope: !12345)
!12363 = !DILocation(line: 1975, column: 9, scope: !12345)
!12364 = !DILocation(line: 1975, column: 16, scope: !12345)
!12365 = !DILocation(line: 1975, column: 23, scope: !12345)
!12366 = !DILocation(line: 1976, column: 3, scope: !12345)
!12367 = !DILocation(line: 1976, column: 9, scope: !12345)
!12368 = !DILocation(line: 1976, column: 16, scope: !12345)
!12369 = !DILocation(line: 1976, column: 19, scope: !12345)
!12370 = !DILocation(line: 1977, column: 26, scope: !12345)
!12371 = !DILocation(line: 1977, column: 32, scope: !12345)
!12372 = !DILocation(line: 1977, column: 3, scope: !12345)
!12373 = !DILocation(line: 1977, column: 9, scope: !12345)
!12374 = !DILocation(line: 1977, column: 16, scope: !12345)
!12375 = !DILocation(line: 1977, column: 24, scope: !12345)
!12376 = !DILocation(line: 1978, column: 25, scope: !12345)
!12377 = !DILocation(line: 1978, column: 31, scope: !12345)
!12378 = !DILocation(line: 1978, column: 3, scope: !12345)
!12379 = !DILocation(line: 1978, column: 9, scope: !12345)
!12380 = !DILocation(line: 1978, column: 16, scope: !12345)
!12381 = !DILocation(line: 1978, column: 23, scope: !12345)
!12382 = !DILocation(line: 1979, column: 26, scope: !12345)
!12383 = !DILocation(line: 1979, column: 30, scope: !12345)
!12384 = !DILocation(line: 1979, column: 12, scope: !12345)
!12385 = !DILocation(line: 1979, column: 10, scope: !12345)
!12386 = !DILocation(line: 1980, column: 17, scope: !12345)
!12387 = !DILocation(line: 1980, column: 21, scope: !12345)
!12388 = !DILocation(line: 1980, column: 3, scope: !12345)
!12389 = !DILocation(line: 1981, column: 2, scope: !12345)
!12390 = !DILocalVariable(name: "pdev", scope: !12391, file: !3, line: 1982, type: !914)
!12391 = distinct !DILexicalBlock(scope: !12341, file: !3, line: 1981, column: 9)
!12392 = !DILocation(line: 1982, column: 19, scope: !12391)
!12393 = !DILocation(line: 1982, column: 26, scope: !12391)
!12394 = !DILocation(line: 1982, column: 30, scope: !12391)
!12395 = !DILocalVariable(name: "rate", scope: !12391, file: !3, line: 1983, type: !5840)
!12396 = !DILocation(line: 1983, column: 18, scope: !12391)
!12397 = !DILocalVariable(name: "rate_addr", scope: !12391, file: !3, line: 1984, type: !1761)
!12398 = !DILocation(line: 1984, column: 14, scope: !12391)
!12399 = !DILocation(line: 1986, column: 7, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 1986, column: 7)
!12401 = !DILocation(line: 1986, column: 14, scope: !12400)
!12402 = !DILocation(line: 1986, column: 7, scope: !12391)
!12403 = !DILocation(line: 1987, column: 4, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 1986, column: 38)
!12405 = !DILocation(line: 1989, column: 4, scope: !12404)
!12406 = !DILocation(line: 1992, column: 30, scope: !12391)
!12407 = !DILocation(line: 1992, column: 36, scope: !12391)
!12408 = !DILocation(line: 1992, column: 10, scope: !12391)
!12409 = !DILocation(line: 1992, column: 8, scope: !12391)
!12410 = !DILocation(line: 1994, column: 7, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 1994, column: 7)
!12412 = !DILocation(line: 1994, column: 12, scope: !12411)
!12413 = !DILocation(line: 1994, column: 7, scope: !12391)
!12414 = !DILocation(line: 1995, column: 4, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12411, file: !3, line: 1994, column: 21)
!12416 = !DILocation(line: 1997, column: 4, scope: !12415)
!12417 = !DILocation(line: 1999, column: 15, scope: !12391)
!12418 = !DILocation(line: 1999, column: 19, scope: !12391)
!12419 = !DILocation(line: 1999, column: 3, scope: !12391)
!12420 = !DILocation(line: 2000, column: 14, scope: !12391)
!12421 = !DILocation(line: 2000, column: 18, scope: !12391)
!12422 = !DILocation(line: 2000, column: 11, scope: !12391)
!12423 = !DILocation(line: 2001, column: 18, scope: !12391)
!12424 = !DILocation(line: 2001, column: 3, scope: !12391)
!12425 = !DILocation(line: 2002, column: 11, scope: !12391)
!12426 = !DILocation(line: 2002, column: 20, scope: !12391)
!12427 = !DILocation(line: 2002, column: 8, scope: !12391)
!12428 = !DILocation(line: 2003, column: 3, scope: !12391)
!12429 = !DILocation(line: 2003, column: 9, scope: !12391)
!12430 = !DILocation(line: 2003, column: 16, scope: !12391)
!12431 = !DILocation(line: 2003, column: 23, scope: !12391)
!12432 = !DILocation(line: 2004, column: 3, scope: !12391)
!12433 = !DILocation(line: 2004, column: 9, scope: !12391)
!12434 = !DILocation(line: 2004, column: 16, scope: !12391)
!12435 = !DILocation(line: 2004, column: 19, scope: !12391)
!12436 = !DILocation(line: 2005, column: 3, scope: !12391)
!12437 = !DILocation(line: 2005, column: 9, scope: !12391)
!12438 = !DILocation(line: 2005, column: 16, scope: !12391)
!12439 = !DILocation(line: 2005, column: 26, scope: !12391)
!12440 = !DILocation(line: 2006, column: 23, scope: !12391)
!12441 = !DILocation(line: 2006, column: 3, scope: !12391)
!12442 = !DILocation(line: 2006, column: 9, scope: !12391)
!12443 = !DILocation(line: 2006, column: 16, scope: !12391)
!12444 = !DILocation(line: 2006, column: 21, scope: !12391)
!12445 = !DILocation(line: 2007, column: 26, scope: !12391)
!12446 = !DILocation(line: 2007, column: 30, scope: !12391)
!12447 = !DILocation(line: 2007, column: 12, scope: !12391)
!12448 = !DILocation(line: 2007, column: 10, scope: !12391)
!12449 = !DILocation(line: 2008, column: 22, scope: !12391)
!12450 = !DILocation(line: 2008, column: 28, scope: !12391)
!12451 = !DILocation(line: 2008, column: 47, scope: !12391)
!12452 = !DILocation(line: 2008, column: 53, scope: !12391)
!12453 = !DILocation(line: 2008, column: 3, scope: !12391)
!12454 = !DILocation(line: 2009, column: 17, scope: !12391)
!12455 = !DILocation(line: 2009, column: 21, scope: !12391)
!12456 = !DILocation(line: 2009, column: 3, scope: !12391)
!12457 = !DILocation(line: 2011, column: 6, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 2011, column: 6)
!12459 = !DILocation(line: 2011, column: 13, scope: !12458)
!12460 = !DILocation(line: 2011, column: 6, scope: !12287)
!12461 = !DILocation(line: 2012, column: 3, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 2011, column: 37)
!12463 = !DILocation(line: 2014, column: 10, scope: !12462)
!12464 = !DILocation(line: 2014, column: 3, scope: !12462)
!12465 = !DILocation(line: 2016, column: 7, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 2016, column: 6)
!12467 = !DILocation(line: 2016, column: 6, scope: !12287)
!12468 = !DILocation(line: 2017, column: 3, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12466, file: !3, line: 2016, column: 14)
!12470 = !DILocation(line: 2020, column: 3, scope: !12469)
!12471 = !DILocation(line: 2023, column: 10, scope: !12287)
!12472 = !DILocation(line: 2023, column: 2, scope: !12287)
!12473 = !DILocation(line: 2025, column: 7, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 2023, column: 18)
!12475 = !DILocation(line: 2026, column: 3, scope: !12474)
!12476 = !DILocation(line: 2028, column: 7, scope: !12474)
!12477 = !DILocation(line: 2029, column: 3, scope: !12474)
!12478 = !DILocation(line: 2031, column: 7, scope: !12474)
!12479 = !DILocation(line: 2032, column: 3, scope: !12474)
!12480 = !DILocation(line: 2034, column: 7, scope: !12474)
!12481 = !DILocation(line: 2035, column: 3, scope: !12474)
!12482 = !DILocation(line: 2037, column: 7, scope: !12474)
!12483 = !DILocation(line: 2038, column: 3, scope: !12474)
!12484 = !DILocation(line: 2040, column: 6, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 2040, column: 6)
!12486 = !DILocation(line: 2040, column: 6, scope: !12287)
!12487 = !DILocation(line: 2041, column: 3, scope: !12485)
!12488 = !DILocation(line: 2044, column: 3, scope: !12485)
!12489 = !DILocation(line: 2047, column: 2, scope: !12287)
!12490 = !DILocation(line: 2048, column: 1, scope: !12287)
!12491 = distinct !DISubprogram(name: "myrb_get_rbld_progress", scope: !3, file: !3, line: 439, type: !12492, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12492 = !DISubroutineType(types: !12493)
!12493 = !{!320, !5760, !12494}
!12494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12245, size: 64)
!12495 = !DILocalVariable(name: "cb", arg: 1, scope: !12491, file: !3, line: 439, type: !5760)
!12496 = !DILocation(line: 439, column: 63, scope: !12491)
!12497 = !DILocalVariable(name: "rbld", arg: 2, scope: !12491, file: !3, line: 440, type: !12494)
!12498 = !DILocation(line: 440, column: 30, scope: !12491)
!12499 = !DILocalVariable(name: "cmd_blk", scope: !12491, file: !3, line: 442, type: !6225)
!12500 = !DILocation(line: 442, column: 22, scope: !12491)
!12501 = !DILocation(line: 442, column: 33, scope: !12491)
!12502 = !DILocation(line: 442, column: 37, scope: !12491)
!12503 = !DILocalVariable(name: "mbox", scope: !12491, file: !3, line: 443, type: !6245)
!12504 = !DILocation(line: 443, column: 23, scope: !12491)
!12505 = !DILocation(line: 443, column: 31, scope: !12491)
!12506 = !DILocation(line: 443, column: 40, scope: !12491)
!12507 = !DILocalVariable(name: "rbld_buf", scope: !12491, file: !3, line: 444, type: !12494)
!12508 = !DILocation(line: 444, column: 29, scope: !12491)
!12509 = !DILocalVariable(name: "rbld_addr", scope: !12491, file: !3, line: 445, type: !1761)
!12510 = !DILocation(line: 445, column: 13, scope: !12491)
!12511 = !DILocalVariable(name: "status", scope: !12491, file: !3, line: 446, type: !320)
!12512 = !DILocation(line: 446, column: 17, scope: !12491)
!12513 = !DILocation(line: 448, column: 33, scope: !12491)
!12514 = !DILocation(line: 448, column: 37, scope: !12491)
!12515 = !DILocation(line: 448, column: 43, scope: !12491)
!12516 = !DILocation(line: 448, column: 13, scope: !12491)
!12517 = !DILocation(line: 448, column: 11, scope: !12491)
!12518 = !DILocation(line: 451, column: 7, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 451, column: 6)
!12520 = !DILocation(line: 451, column: 6, scope: !12491)
!12521 = !DILocation(line: 452, column: 3, scope: !12519)
!12522 = !DILocation(line: 454, column: 17, scope: !12491)
!12523 = !DILocation(line: 454, column: 2, scope: !12491)
!12524 = !DILocation(line: 455, column: 2, scope: !12491)
!12525 = !DILocation(line: 455, column: 8, scope: !12491)
!12526 = !DILocation(line: 455, column: 14, scope: !12491)
!12527 = !DILocation(line: 455, column: 17, scope: !12491)
!12528 = !DILocation(line: 456, column: 2, scope: !12491)
!12529 = !DILocation(line: 456, column: 8, scope: !12491)
!12530 = !DILocation(line: 456, column: 14, scope: !12491)
!12531 = !DILocation(line: 456, column: 21, scope: !12491)
!12532 = !DILocation(line: 457, column: 21, scope: !12491)
!12533 = !DILocation(line: 457, column: 2, scope: !12491)
!12534 = !DILocation(line: 457, column: 8, scope: !12491)
!12535 = !DILocation(line: 457, column: 14, scope: !12491)
!12536 = !DILocation(line: 457, column: 19, scope: !12491)
!12537 = !DILocation(line: 458, column: 25, scope: !12491)
!12538 = !DILocation(line: 458, column: 29, scope: !12491)
!12539 = !DILocation(line: 458, column: 11, scope: !12491)
!12540 = !DILocation(line: 458, column: 9, scope: !12491)
!12541 = !DILocation(line: 459, column: 6, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 459, column: 6)
!12543 = !DILocation(line: 459, column: 6, scope: !12491)
!12544 = !DILocation(line: 460, column: 10, scope: !12542)
!12545 = !DILocation(line: 460, column: 3, scope: !12542)
!12546 = !DILocation(line: 460, column: 16, scope: !12542)
!12547 = !DILocation(line: 461, column: 21, scope: !12491)
!12548 = !DILocation(line: 461, column: 25, scope: !12491)
!12549 = !DILocation(line: 461, column: 31, scope: !12491)
!12550 = !DILocation(line: 462, column: 6, scope: !12491)
!12551 = !DILocation(line: 462, column: 16, scope: !12491)
!12552 = !DILocation(line: 461, column: 2, scope: !12491)
!12553 = !DILocation(line: 463, column: 9, scope: !12491)
!12554 = !DILocation(line: 463, column: 2, scope: !12491)
!12555 = !DILocation(line: 464, column: 1, scope: !12491)
!12556 = distinct !DISubprogram(name: "dma_free_coherent", scope: !6409, file: !6409, line: 400, type: !12557, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12557 = !DISubroutineType(types: !12558)
!12558 = !{null, !1003, !1102, !973, !1761}
!12559 = !DILocalVariable(name: "dev", arg: 1, scope: !12556, file: !6409, line: 400, type: !1003)
!12560 = !DILocation(line: 400, column: 53, scope: !12556)
!12561 = !DILocalVariable(name: "size", arg: 2, scope: !12556, file: !6409, line: 400, type: !1102)
!12562 = !DILocation(line: 400, column: 65, scope: !12556)
!12563 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !12556, file: !6409, line: 401, type: !973)
!12564 = !DILocation(line: 401, column: 9, scope: !12556)
!12565 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !12556, file: !6409, line: 401, type: !1761)
!12566 = !DILocation(line: 401, column: 30, scope: !12556)
!12567 = !DILocation(line: 403, column: 24, scope: !12556)
!12568 = !DILocation(line: 403, column: 29, scope: !12556)
!12569 = !DILocation(line: 403, column: 35, scope: !12556)
!12570 = !DILocation(line: 403, column: 45, scope: !12556)
!12571 = !DILocation(line: 403, column: 9, scope: !12556)
!12572 = !DILocation(line: 403, column: 2, scope: !12556)
!12573 = distinct !DISubprogram(name: "consistency_check_show", scope: !3, file: !3, line: 2157, type: !6142, scopeLine: 2159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12574 = !DILocalVariable(name: "dev", arg: 1, scope: !12573, file: !3, line: 2157, type: !1003)
!12575 = !DILocation(line: 2157, column: 54, scope: !12573)
!12576 = !DILocalVariable(name: "attr", arg: 2, scope: !12573, file: !3, line: 2158, type: !6136)
!12577 = !DILocation(line: 2158, column: 28, scope: !12573)
!12578 = !DILocalVariable(name: "buf", arg: 3, scope: !12573, file: !3, line: 2158, type: !1061)
!12579 = !DILocation(line: 2158, column: 40, scope: !12573)
!12580 = !DILocation(line: 2160, column: 22, scope: !12573)
!12581 = !DILocation(line: 2160, column: 27, scope: !12573)
!12582 = !DILocation(line: 2160, column: 33, scope: !12573)
!12583 = !DILocation(line: 2160, column: 9, scope: !12573)
!12584 = !DILocation(line: 2160, column: 2, scope: !12573)
!12585 = distinct !DISubprogram(name: "consistency_check_store", scope: !3, file: !3, line: 2051, type: !6146, scopeLine: 2053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12586 = !DILocalVariable(name: "dev", arg: 1, scope: !12585, file: !3, line: 2051, type: !1003)
!12587 = !DILocation(line: 2051, column: 55, scope: !12585)
!12588 = !DILocalVariable(name: "attr", arg: 2, scope: !12585, file: !3, line: 2052, type: !6136)
!12589 = !DILocation(line: 2052, column: 28, scope: !12585)
!12590 = !DILocalVariable(name: "buf", arg: 3, scope: !12585, file: !3, line: 2052, type: !948)
!12591 = !DILocation(line: 2052, column: 46, scope: !12585)
!12592 = !DILocalVariable(name: "count", arg: 4, scope: !12585, file: !3, line: 2052, type: !1102)
!12593 = !DILocation(line: 2052, column: 58, scope: !12585)
!12594 = !DILocalVariable(name: "sdev", scope: !12585, file: !3, line: 2054, type: !5809)
!12595 = !DILocation(line: 2054, column: 22, scope: !12585)
!12596 = !DILocalVariable(name: "__mptr", scope: !12597, file: !3, line: 2054, type: !973)
!12597 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2054, column: 29)
!12598 = !DILocation(line: 2054, column: 29, scope: !12597)
!12599 = !DILocation(line: 2054, column: 29, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 2054, column: 29)
!12601 = !DILocalVariable(name: "cb", scope: !12585, file: !3, line: 2055, type: !5760)
!12602 = !DILocation(line: 2055, column: 19, scope: !12585)
!12603 = !DILocation(line: 2055, column: 35, scope: !12585)
!12604 = !DILocation(line: 2055, column: 41, scope: !12585)
!12605 = !DILocation(line: 2055, column: 24, scope: !12585)
!12606 = !DILocalVariable(name: "rbld_buf", scope: !12585, file: !3, line: 2056, type: !12245)
!12607 = !DILocation(line: 2056, column: 28, scope: !12585)
!12608 = !DILocalVariable(name: "cmd_blk", scope: !12585, file: !3, line: 2057, type: !6225)
!12609 = !DILocation(line: 2057, column: 22, scope: !12585)
!12610 = !DILocalVariable(name: "mbox", scope: !12585, file: !3, line: 2058, type: !6245)
!12611 = !DILocation(line: 2058, column: 23, scope: !12585)
!12612 = !DILocalVariable(name: "ldev_num", scope: !12585, file: !3, line: 2059, type: !320)
!12613 = !DILocation(line: 2059, column: 17, scope: !12585)
!12614 = !DILocalVariable(name: "status", scope: !12585, file: !3, line: 2060, type: !320)
!12615 = !DILocation(line: 2060, column: 17, scope: !12585)
!12616 = !DILocalVariable(name: "rc", scope: !12585, file: !3, line: 2061, type: !913)
!12617 = !DILocation(line: 2061, column: 6, scope: !12585)
!12618 = !DILocalVariable(name: "start", scope: !12585, file: !3, line: 2061, type: !913)
!12619 = !DILocation(line: 2061, column: 10, scope: !12585)
!12620 = !DILocalVariable(name: "msg", scope: !12585, file: !3, line: 2062, type: !948)
!12621 = !DILocation(line: 2062, column: 14, scope: !12585)
!12622 = !DILocation(line: 2064, column: 17, scope: !12585)
!12623 = !DILocation(line: 2064, column: 7, scope: !12585)
!12624 = !DILocation(line: 2064, column: 5, scope: !12585)
!12625 = !DILocation(line: 2065, column: 6, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2065, column: 6)
!12627 = !DILocation(line: 2065, column: 6, scope: !12585)
!12628 = !DILocation(line: 2066, column: 10, scope: !12626)
!12629 = !DILocation(line: 2066, column: 3, scope: !12626)
!12630 = !DILocation(line: 2068, column: 6, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2068, column: 6)
!12632 = !DILocation(line: 2068, column: 12, scope: !12631)
!12633 = !DILocation(line: 2068, column: 43, scope: !12631)
!12634 = !DILocation(line: 2068, column: 49, scope: !12631)
!12635 = !DILocation(line: 2068, column: 22, scope: !12631)
!12636 = !DILocation(line: 2068, column: 20, scope: !12631)
!12637 = !DILocation(line: 2068, column: 6, scope: !12585)
!12638 = !DILocation(line: 2069, column: 3, scope: !12631)
!12639 = !DILocation(line: 2071, column: 34, scope: !12585)
!12640 = !DILocation(line: 2071, column: 11, scope: !12585)
!12641 = !DILocation(line: 2071, column: 9, scope: !12585)
!12642 = !DILocation(line: 2072, column: 6, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2072, column: 6)
!12644 = !DILocation(line: 2072, column: 6, scope: !12585)
!12645 = !DILocation(line: 2073, column: 7, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12647, file: !3, line: 2073, column: 7)
!12647 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 2072, column: 13)
!12648 = !DILocation(line: 2073, column: 14, scope: !12646)
!12649 = !DILocation(line: 2073, column: 7, scope: !12647)
!12650 = !DILocation(line: 2074, column: 4, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12646, file: !3, line: 2073, column: 38)
!12652 = !DILocation(line: 2076, column: 4, scope: !12651)
!12653 = !DILocation(line: 2078, column: 15, scope: !12647)
!12654 = !DILocation(line: 2078, column: 19, scope: !12647)
!12655 = !DILocation(line: 2078, column: 3, scope: !12647)
!12656 = !DILocation(line: 2079, column: 14, scope: !12647)
!12657 = !DILocation(line: 2079, column: 18, scope: !12647)
!12658 = !DILocation(line: 2079, column: 11, scope: !12647)
!12659 = !DILocation(line: 2080, column: 18, scope: !12647)
!12660 = !DILocation(line: 2080, column: 3, scope: !12647)
!12661 = !DILocation(line: 2081, column: 11, scope: !12647)
!12662 = !DILocation(line: 2081, column: 20, scope: !12647)
!12663 = !DILocation(line: 2081, column: 8, scope: !12647)
!12664 = !DILocation(line: 2082, column: 3, scope: !12647)
!12665 = !DILocation(line: 2082, column: 9, scope: !12647)
!12666 = !DILocation(line: 2082, column: 16, scope: !12647)
!12667 = !DILocation(line: 2082, column: 23, scope: !12647)
!12668 = !DILocation(line: 2083, column: 3, scope: !12647)
!12669 = !DILocation(line: 2083, column: 9, scope: !12647)
!12670 = !DILocation(line: 2083, column: 16, scope: !12647)
!12671 = !DILocation(line: 2083, column: 19, scope: !12647)
!12672 = !DILocation(line: 2084, column: 27, scope: !12647)
!12673 = !DILocation(line: 2084, column: 33, scope: !12647)
!12674 = !DILocation(line: 2084, column: 3, scope: !12647)
!12675 = !DILocation(line: 2084, column: 9, scope: !12647)
!12676 = !DILocation(line: 2084, column: 16, scope: !12647)
!12677 = !DILocation(line: 2084, column: 25, scope: !12647)
!12678 = !DILocation(line: 2085, column: 3, scope: !12647)
!12679 = !DILocation(line: 2085, column: 9, scope: !12647)
!12680 = !DILocation(line: 2085, column: 16, scope: !12647)
!12681 = !DILocation(line: 2085, column: 29, scope: !12647)
!12682 = !DILocation(line: 2087, column: 26, scope: !12647)
!12683 = !DILocation(line: 2087, column: 30, scope: !12647)
!12684 = !DILocation(line: 2087, column: 12, scope: !12647)
!12685 = !DILocation(line: 2087, column: 10, scope: !12647)
!12686 = !DILocation(line: 2088, column: 17, scope: !12647)
!12687 = !DILocation(line: 2088, column: 21, scope: !12647)
!12688 = !DILocation(line: 2088, column: 3, scope: !12647)
!12689 = !DILocation(line: 2089, column: 2, scope: !12647)
!12690 = !DILocalVariable(name: "pdev", scope: !12691, file: !3, line: 2090, type: !914)
!12691 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 2089, column: 9)
!12692 = !DILocation(line: 2090, column: 19, scope: !12691)
!12693 = !DILocation(line: 2090, column: 26, scope: !12691)
!12694 = !DILocation(line: 2090, column: 30, scope: !12691)
!12695 = !DILocalVariable(name: "rate", scope: !12691, file: !3, line: 2091, type: !5840)
!12696 = !DILocation(line: 2091, column: 18, scope: !12691)
!12697 = !DILocalVariable(name: "rate_addr", scope: !12691, file: !3, line: 2092, type: !1761)
!12698 = !DILocation(line: 2092, column: 14, scope: !12691)
!12699 = !DILocation(line: 2094, column: 7, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12691, file: !3, line: 2094, column: 7)
!12701 = !DILocation(line: 2094, column: 19, scope: !12700)
!12702 = !DILocation(line: 2094, column: 25, scope: !12700)
!12703 = !DILocation(line: 2094, column: 16, scope: !12700)
!12704 = !DILocation(line: 2094, column: 7, scope: !12691)
!12705 = !DILocation(line: 2095, column: 4, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 2094, column: 29)
!12707 = !DILocation(line: 2097, column: 4, scope: !12706)
!12708 = !DILocation(line: 2099, column: 30, scope: !12691)
!12709 = !DILocation(line: 2099, column: 36, scope: !12691)
!12710 = !DILocation(line: 2099, column: 10, scope: !12691)
!12711 = !DILocation(line: 2099, column: 8, scope: !12691)
!12712 = !DILocation(line: 2101, column: 7, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12691, file: !3, line: 2101, column: 7)
!12714 = !DILocation(line: 2101, column: 12, scope: !12713)
!12715 = !DILocation(line: 2101, column: 7, scope: !12691)
!12716 = !DILocation(line: 2102, column: 4, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 2101, column: 21)
!12718 = !DILocation(line: 2104, column: 4, scope: !12717)
!12719 = !DILocation(line: 2106, column: 15, scope: !12691)
!12720 = !DILocation(line: 2106, column: 19, scope: !12691)
!12721 = !DILocation(line: 2106, column: 3, scope: !12691)
!12722 = !DILocation(line: 2107, column: 14, scope: !12691)
!12723 = !DILocation(line: 2107, column: 18, scope: !12691)
!12724 = !DILocation(line: 2107, column: 11, scope: !12691)
!12725 = !DILocation(line: 2108, column: 18, scope: !12691)
!12726 = !DILocation(line: 2108, column: 3, scope: !12691)
!12727 = !DILocation(line: 2109, column: 11, scope: !12691)
!12728 = !DILocation(line: 2109, column: 20, scope: !12691)
!12729 = !DILocation(line: 2109, column: 8, scope: !12691)
!12730 = !DILocation(line: 2110, column: 3, scope: !12691)
!12731 = !DILocation(line: 2110, column: 9, scope: !12691)
!12732 = !DILocation(line: 2110, column: 16, scope: !12691)
!12733 = !DILocation(line: 2110, column: 23, scope: !12691)
!12734 = !DILocation(line: 2111, column: 3, scope: !12691)
!12735 = !DILocation(line: 2111, column: 9, scope: !12691)
!12736 = !DILocation(line: 2111, column: 16, scope: !12691)
!12737 = !DILocation(line: 2111, column: 19, scope: !12691)
!12738 = !DILocation(line: 2112, column: 3, scope: !12691)
!12739 = !DILocation(line: 2112, column: 9, scope: !12691)
!12740 = !DILocation(line: 2112, column: 16, scope: !12691)
!12741 = !DILocation(line: 2112, column: 26, scope: !12691)
!12742 = !DILocation(line: 2113, column: 23, scope: !12691)
!12743 = !DILocation(line: 2113, column: 3, scope: !12691)
!12744 = !DILocation(line: 2113, column: 9, scope: !12691)
!12745 = !DILocation(line: 2113, column: 16, scope: !12691)
!12746 = !DILocation(line: 2113, column: 21, scope: !12691)
!12747 = !DILocation(line: 2114, column: 26, scope: !12691)
!12748 = !DILocation(line: 2114, column: 30, scope: !12691)
!12749 = !DILocation(line: 2114, column: 12, scope: !12691)
!12750 = !DILocation(line: 2114, column: 10, scope: !12691)
!12751 = !DILocation(line: 2115, column: 22, scope: !12691)
!12752 = !DILocation(line: 2115, column: 28, scope: !12691)
!12753 = !DILocation(line: 2115, column: 47, scope: !12691)
!12754 = !DILocation(line: 2115, column: 53, scope: !12691)
!12755 = !DILocation(line: 2115, column: 3, scope: !12691)
!12756 = !DILocation(line: 2116, column: 17, scope: !12691)
!12757 = !DILocation(line: 2116, column: 21, scope: !12691)
!12758 = !DILocation(line: 2116, column: 3, scope: !12691)
!12759 = !DILocation(line: 2118, column: 6, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2118, column: 6)
!12761 = !DILocation(line: 2118, column: 13, scope: !12760)
!12762 = !DILocation(line: 2118, column: 6, scope: !12585)
!12763 = !DILocation(line: 2119, column: 3, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12760, file: !3, line: 2118, column: 37)
!12765 = !DILocation(line: 2121, column: 10, scope: !12764)
!12766 = !DILocation(line: 2121, column: 3, scope: !12764)
!12767 = !DILocation(line: 2123, column: 7, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2123, column: 6)
!12769 = !DILocation(line: 2123, column: 6, scope: !12585)
!12770 = !DILocation(line: 2124, column: 3, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 2123, column: 14)
!12772 = !DILocation(line: 2127, column: 3, scope: !12771)
!12773 = !DILocation(line: 2130, column: 10, scope: !12585)
!12774 = !DILocation(line: 2130, column: 2, scope: !12585)
!12775 = !DILocation(line: 2132, column: 7, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2130, column: 18)
!12777 = !DILocation(line: 2133, column: 3, scope: !12776)
!12778 = !DILocation(line: 2135, column: 7, scope: !12776)
!12779 = !DILocation(line: 2136, column: 3, scope: !12776)
!12780 = !DILocation(line: 2138, column: 7, scope: !12776)
!12781 = !DILocation(line: 2139, column: 3, scope: !12776)
!12782 = !DILocation(line: 2141, column: 7, scope: !12776)
!12783 = !DILocation(line: 2142, column: 3, scope: !12776)
!12784 = !DILocation(line: 2144, column: 7, scope: !12776)
!12785 = !DILocation(line: 2145, column: 3, scope: !12776)
!12786 = !DILocation(line: 2147, column: 6, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2147, column: 6)
!12788 = !DILocation(line: 2147, column: 6, scope: !12585)
!12789 = !DILocation(line: 2148, column: 3, scope: !12787)
!12790 = !DILocation(line: 2151, column: 3, scope: !12787)
!12791 = !DILocation(line: 2154, column: 2, scope: !12585)
!12792 = !DILocation(line: 2155, column: 1, scope: !12585)
!12793 = distinct !DISubprogram(name: "raid_state_show", scope: !3, file: !3, line: 1789, type: !6142, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12794 = !DILocalVariable(name: "dev", arg: 1, scope: !12793, file: !3, line: 1789, type: !1003)
!12795 = !DILocation(line: 1789, column: 47, scope: !12793)
!12796 = !DILocalVariable(name: "attr", arg: 2, scope: !12793, file: !3, line: 1790, type: !6136)
!12797 = !DILocation(line: 1790, column: 28, scope: !12793)
!12798 = !DILocalVariable(name: "buf", arg: 3, scope: !12793, file: !3, line: 1790, type: !1061)
!12799 = !DILocation(line: 1790, column: 40, scope: !12793)
!12800 = !DILocalVariable(name: "sdev", scope: !12793, file: !3, line: 1792, type: !5809)
!12801 = !DILocation(line: 1792, column: 22, scope: !12793)
!12802 = !DILocalVariable(name: "__mptr", scope: !12803, file: !3, line: 1792, type: !973)
!12803 = distinct !DILexicalBlock(scope: !12793, file: !3, line: 1792, column: 29)
!12804 = !DILocation(line: 1792, column: 29, scope: !12803)
!12805 = !DILocation(line: 1792, column: 29, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 1792, column: 29)
!12807 = !DILocalVariable(name: "cb", scope: !12793, file: !3, line: 1793, type: !5760)
!12808 = !DILocation(line: 1793, column: 19, scope: !12793)
!12809 = !DILocation(line: 1793, column: 35, scope: !12793)
!12810 = !DILocation(line: 1793, column: 41, scope: !12793)
!12811 = !DILocation(line: 1793, column: 24, scope: !12793)
!12812 = !DILocalVariable(name: "ret", scope: !12793, file: !3, line: 1794, type: !913)
!12813 = !DILocation(line: 1794, column: 6, scope: !12793)
!12814 = !DILocation(line: 1796, column: 7, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12793, file: !3, line: 1796, column: 6)
!12816 = !DILocation(line: 1796, column: 13, scope: !12815)
!12817 = !DILocation(line: 1796, column: 6, scope: !12793)
!12818 = !DILocation(line: 1797, column: 19, scope: !12815)
!12819 = !DILocation(line: 1797, column: 10, scope: !12815)
!12820 = !DILocation(line: 1797, column: 3, scope: !12815)
!12821 = !DILocation(line: 1799, column: 6, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12793, file: !3, line: 1799, column: 6)
!12823 = !DILocation(line: 1799, column: 12, scope: !12822)
!12824 = !DILocation(line: 1799, column: 44, scope: !12822)
!12825 = !DILocation(line: 1799, column: 50, scope: !12822)
!12826 = !DILocation(line: 1799, column: 23, scope: !12822)
!12827 = !DILocation(line: 1799, column: 20, scope: !12822)
!12828 = !DILocation(line: 1799, column: 6, scope: !12793)
!12829 = !DILocalVariable(name: "ldev_info", scope: !12830, file: !3, line: 1800, type: !6294)
!12830 = distinct !DILexicalBlock(scope: !12822, file: !3, line: 1799, column: 57)
!12831 = !DILocation(line: 1800, column: 26, scope: !12830)
!12832 = !DILocation(line: 1800, column: 38, scope: !12830)
!12833 = !DILocation(line: 1800, column: 44, scope: !12830)
!12834 = !DILocalVariable(name: "name", scope: !12830, file: !3, line: 1801, type: !948)
!12835 = !DILocation(line: 1801, column: 15, scope: !12830)
!12836 = !DILocation(line: 1803, column: 29, scope: !12830)
!12837 = !DILocation(line: 1803, column: 40, scope: !12830)
!12838 = !DILocation(line: 1803, column: 10, scope: !12830)
!12839 = !DILocation(line: 1803, column: 8, scope: !12830)
!12840 = !DILocation(line: 1804, column: 7, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 1804, column: 7)
!12842 = !DILocation(line: 1804, column: 7, scope: !12830)
!12843 = !DILocation(line: 1805, column: 19, scope: !12841)
!12844 = !DILocation(line: 1805, column: 36, scope: !12841)
!12845 = !DILocation(line: 1805, column: 10, scope: !12841)
!12846 = !DILocation(line: 1805, column: 8, scope: !12841)
!12847 = !DILocation(line: 1805, column: 4, scope: !12841)
!12848 = !DILocation(line: 1807, column: 19, scope: !12841)
!12849 = !DILocation(line: 1808, column: 12, scope: !12841)
!12850 = !DILocation(line: 1808, column: 23, scope: !12841)
!12851 = !DILocation(line: 1807, column: 10, scope: !12841)
!12852 = !DILocation(line: 1807, column: 8, scope: !12841)
!12853 = !DILocation(line: 1809, column: 2, scope: !12830)
!12854 = !DILocalVariable(name: "pdev_info", scope: !12855, file: !3, line: 1810, type: !11255)
!12855 = distinct !DILexicalBlock(scope: !12822, file: !3, line: 1809, column: 9)
!12856 = !DILocation(line: 1810, column: 27, scope: !12855)
!12857 = !DILocation(line: 1810, column: 39, scope: !12855)
!12858 = !DILocation(line: 1810, column: 45, scope: !12855)
!12859 = !DILocalVariable(name: "status", scope: !12855, file: !3, line: 1811, type: !320)
!12860 = !DILocation(line: 1811, column: 18, scope: !12855)
!12861 = !DILocalVariable(name: "name", scope: !12855, file: !3, line: 1812, type: !948)
!12862 = !DILocation(line: 1812, column: 15, scope: !12855)
!12863 = !DILocation(line: 1814, column: 29, scope: !12855)
!12864 = !DILocation(line: 1815, column: 8, scope: !12855)
!12865 = !DILocation(line: 1815, column: 14, scope: !12855)
!12866 = !DILocation(line: 1814, column: 12, scope: !12855)
!12867 = !DILocation(line: 1814, column: 10, scope: !12855)
!12868 = !DILocation(line: 1816, column: 7, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12855, file: !3, line: 1816, column: 7)
!12870 = !DILocation(line: 1816, column: 14, scope: !12869)
!12871 = !DILocation(line: 1816, column: 7, scope: !12855)
!12872 = !DILocation(line: 1817, column: 4, scope: !12869)
!12873 = !DILocation(line: 1821, column: 8, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12855, file: !3, line: 1821, column: 7)
!12875 = !DILocation(line: 1821, column: 19, scope: !12874)
!12876 = !DILocation(line: 1821, column: 7, scope: !12855)
!12877 = !DILocation(line: 1822, column: 9, scope: !12874)
!12878 = !DILocation(line: 1822, column: 4, scope: !12874)
!12879 = !DILocation(line: 1824, column: 30, scope: !12874)
!12880 = !DILocation(line: 1824, column: 41, scope: !12874)
!12881 = !DILocation(line: 1824, column: 11, scope: !12874)
!12882 = !DILocation(line: 1824, column: 9, scope: !12874)
!12883 = !DILocation(line: 1825, column: 7, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12855, file: !3, line: 1825, column: 7)
!12885 = !DILocation(line: 1825, column: 7, scope: !12855)
!12886 = !DILocation(line: 1826, column: 19, scope: !12884)
!12887 = !DILocation(line: 1826, column: 36, scope: !12884)
!12888 = !DILocation(line: 1826, column: 10, scope: !12884)
!12889 = !DILocation(line: 1826, column: 8, scope: !12884)
!12890 = !DILocation(line: 1826, column: 4, scope: !12884)
!12891 = !DILocation(line: 1828, column: 19, scope: !12884)
!12892 = !DILocation(line: 1829, column: 12, scope: !12884)
!12893 = !DILocation(line: 1829, column: 23, scope: !12884)
!12894 = !DILocation(line: 1828, column: 10, scope: !12884)
!12895 = !DILocation(line: 1828, column: 8, scope: !12884)
!12896 = !DILocation(line: 1831, column: 9, scope: !12793)
!12897 = !DILocation(line: 1831, column: 2, scope: !12793)
!12898 = !DILocation(line: 1832, column: 1, scope: !12793)
!12899 = distinct !DISubprogram(name: "raid_state_store", scope: !3, file: !3, line: 1834, type: !6146, scopeLine: 1836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!12900 = !DILocalVariable(name: "dev", arg: 1, scope: !12899, file: !3, line: 1834, type: !1003)
!12901 = !DILocation(line: 1834, column: 48, scope: !12899)
!12902 = !DILocalVariable(name: "attr", arg: 2, scope: !12899, file: !3, line: 1835, type: !6136)
!12903 = !DILocation(line: 1835, column: 28, scope: !12899)
!12904 = !DILocalVariable(name: "buf", arg: 3, scope: !12899, file: !3, line: 1835, type: !948)
!12905 = !DILocation(line: 1835, column: 46, scope: !12899)
!12906 = !DILocalVariable(name: "count", arg: 4, scope: !12899, file: !3, line: 1835, type: !1102)
!12907 = !DILocation(line: 1835, column: 58, scope: !12899)
!12908 = !DILocalVariable(name: "sdev", scope: !12899, file: !3, line: 1837, type: !5809)
!12909 = !DILocation(line: 1837, column: 22, scope: !12899)
!12910 = !DILocalVariable(name: "__mptr", scope: !12911, file: !3, line: 1837, type: !973)
!12911 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 1837, column: 29)
!12912 = !DILocation(line: 1837, column: 29, scope: !12911)
!12913 = !DILocation(line: 1837, column: 29, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12911, file: !3, line: 1837, column: 29)
!12915 = !DILocalVariable(name: "cb", scope: !12899, file: !3, line: 1838, type: !5760)
!12916 = !DILocation(line: 1838, column: 19, scope: !12899)
!12917 = !DILocation(line: 1838, column: 35, scope: !12899)
!12918 = !DILocation(line: 1838, column: 41, scope: !12899)
!12919 = !DILocation(line: 1838, column: 24, scope: !12899)
!12920 = !DILocalVariable(name: "pdev_info", scope: !12899, file: !3, line: 1839, type: !11255)
!12921 = !DILocation(line: 1839, column: 26, scope: !12899)
!12922 = !DILocalVariable(name: "new_state", scope: !12899, file: !3, line: 1840, type: !229)
!12923 = !DILocation(line: 1840, column: 21, scope: !12899)
!12924 = !DILocalVariable(name: "status", scope: !12899, file: !3, line: 1841, type: !320)
!12925 = !DILocation(line: 1841, column: 17, scope: !12899)
!12926 = !DILocation(line: 1843, column: 15, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 1843, column: 6)
!12928 = !DILocation(line: 1843, column: 7, scope: !12927)
!12929 = !DILocation(line: 1843, column: 31, scope: !12927)
!12930 = !DILocation(line: 1844, column: 15, scope: !12927)
!12931 = !DILocation(line: 1844, column: 7, scope: !12927)
!12932 = !DILocation(line: 1843, column: 6, scope: !12899)
!12933 = !DILocation(line: 1845, column: 13, scope: !12927)
!12934 = !DILocation(line: 1845, column: 3, scope: !12927)
!12935 = !DILocation(line: 1846, column: 20, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12927, file: !3, line: 1846, column: 11)
!12937 = !DILocation(line: 1846, column: 12, scope: !12936)
!12938 = !DILocation(line: 1846, column: 11, scope: !12927)
!12939 = !DILocation(line: 1847, column: 13, scope: !12936)
!12940 = !DILocation(line: 1847, column: 3, scope: !12936)
!12941 = !DILocation(line: 1848, column: 20, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12936, file: !3, line: 1848, column: 11)
!12943 = !DILocation(line: 1848, column: 12, scope: !12942)
!12944 = !DILocation(line: 1848, column: 11, scope: !12936)
!12945 = !DILocation(line: 1849, column: 13, scope: !12942)
!12946 = !DILocation(line: 1849, column: 3, scope: !12942)
!12947 = !DILocation(line: 1851, column: 3, scope: !12942)
!12948 = !DILocation(line: 1853, column: 14, scope: !12899)
!12949 = !DILocation(line: 1853, column: 20, scope: !12899)
!12950 = !DILocation(line: 1853, column: 12, scope: !12899)
!12951 = !DILocation(line: 1854, column: 7, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 1854, column: 6)
!12953 = !DILocation(line: 1854, column: 6, scope: !12899)
!12954 = !DILocation(line: 1855, column: 3, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1854, column: 18)
!12956 = !DILocation(line: 1857, column: 3, scope: !12955)
!12957 = !DILocation(line: 1859, column: 7, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 1859, column: 6)
!12959 = !DILocation(line: 1859, column: 18, scope: !12958)
!12960 = !DILocation(line: 1859, column: 6, scope: !12899)
!12961 = !DILocation(line: 1860, column: 3, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 1859, column: 27)
!12963 = !DILocation(line: 1862, column: 3, scope: !12962)
!12964 = !DILocation(line: 1865, column: 6, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 1865, column: 6)
!12966 = !DILocation(line: 1865, column: 17, scope: !12965)
!12967 = !DILocation(line: 1865, column: 26, scope: !12965)
!12968 = !DILocation(line: 1865, column: 23, scope: !12965)
!12969 = !DILocation(line: 1865, column: 6, scope: !12899)
!12970 = !DILocation(line: 1866, column: 10, scope: !12965)
!12971 = !DILocation(line: 1866, column: 3, scope: !12965)
!12972 = !DILocation(line: 1868, column: 31, scope: !12899)
!12973 = !DILocation(line: 1868, column: 35, scope: !12899)
!12974 = !DILocation(line: 1868, column: 41, scope: !12899)
!12975 = !DILocation(line: 1868, column: 11, scope: !12899)
!12976 = !DILocation(line: 1868, column: 9, scope: !12899)
!12977 = !DILocation(line: 1869, column: 10, scope: !12899)
!12978 = !DILocation(line: 1869, column: 2, scope: !12899)
!12979 = !DILocation(line: 1871, column: 3, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 1869, column: 18)
!12981 = !DILocation(line: 1873, column: 3, scope: !12980)
!12982 = !DILocation(line: 1875, column: 9, scope: !12980)
!12983 = !DILocation(line: 1876, column: 3, scope: !12980)
!12984 = !DILocation(line: 1878, column: 3, scope: !12980)
!12985 = !DILocation(line: 1880, column: 9, scope: !12980)
!12986 = !DILocation(line: 1881, column: 3, scope: !12980)
!12987 = !DILocation(line: 1883, column: 3, scope: !12980)
!12988 = !DILocation(line: 1885, column: 9, scope: !12980)
!12989 = !DILocation(line: 1886, column: 3, scope: !12980)
!12990 = !DILocation(line: 1888, column: 3, scope: !12980)
!12991 = !DILocation(line: 1890, column: 9, scope: !12980)
!12992 = !DILocation(line: 1891, column: 3, scope: !12980)
!12993 = !DILocation(line: 1893, column: 3, scope: !12980)
!12994 = !DILocation(line: 1895, column: 9, scope: !12980)
!12995 = !DILocation(line: 1896, column: 3, scope: !12980)
!12996 = !DILocation(line: 1898, column: 9, scope: !12899)
!12997 = !DILocation(line: 1898, column: 2, scope: !12899)
!12998 = !DILocation(line: 1899, column: 1, scope: !12899)
!12999 = distinct !DISubprogram(name: "myrb_set_pdev_state", scope: !3, file: !3, line: 781, type: !13000, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13000 = !DISubroutineType(types: !13001)
!13001 = !{!320, !5760, !5809, !229}
!13002 = !DILocalVariable(name: "cb", arg: 1, scope: !12999, file: !3, line: 781, type: !5760)
!13003 = !DILocation(line: 781, column: 60, scope: !12999)
!13004 = !DILocalVariable(name: "sdev", arg: 2, scope: !12999, file: !3, line: 782, type: !5809)
!13005 = !DILocation(line: 782, column: 23, scope: !12999)
!13006 = !DILocalVariable(name: "state", arg: 3, scope: !12999, file: !3, line: 782, type: !229)
!13007 = !DILocation(line: 782, column: 48, scope: !12999)
!13008 = !DILocalVariable(name: "cmd_blk", scope: !12999, file: !3, line: 784, type: !6225)
!13009 = !DILocation(line: 784, column: 22, scope: !12999)
!13010 = !DILocation(line: 784, column: 33, scope: !12999)
!13011 = !DILocation(line: 784, column: 37, scope: !12999)
!13012 = !DILocalVariable(name: "mbox", scope: !12999, file: !3, line: 785, type: !6245)
!13013 = !DILocation(line: 785, column: 23, scope: !12999)
!13014 = !DILocation(line: 785, column: 31, scope: !12999)
!13015 = !DILocation(line: 785, column: 40, scope: !12999)
!13016 = !DILocalVariable(name: "status", scope: !12999, file: !3, line: 786, type: !320)
!13017 = !DILocation(line: 786, column: 17, scope: !12999)
!13018 = !DILocation(line: 788, column: 14, scope: !12999)
!13019 = !DILocation(line: 788, column: 18, scope: !12999)
!13020 = !DILocation(line: 788, column: 2, scope: !12999)
!13021 = !DILocation(line: 789, column: 2, scope: !12999)
!13022 = !DILocation(line: 789, column: 8, scope: !12999)
!13023 = !DILocation(line: 789, column: 15, scope: !12999)
!13024 = !DILocation(line: 789, column: 22, scope: !12999)
!13025 = !DILocation(line: 790, column: 2, scope: !12999)
!13026 = !DILocation(line: 790, column: 8, scope: !12999)
!13027 = !DILocation(line: 790, column: 15, scope: !12999)
!13028 = !DILocation(line: 790, column: 18, scope: !12999)
!13029 = !DILocation(line: 791, column: 25, scope: !12999)
!13030 = !DILocation(line: 791, column: 31, scope: !12999)
!13031 = !DILocation(line: 791, column: 2, scope: !12999)
!13032 = !DILocation(line: 791, column: 8, scope: !12999)
!13033 = !DILocation(line: 791, column: 15, scope: !12999)
!13034 = !DILocation(line: 791, column: 23, scope: !12999)
!13035 = !DILocation(line: 792, column: 24, scope: !12999)
!13036 = !DILocation(line: 792, column: 30, scope: !12999)
!13037 = !DILocation(line: 792, column: 2, scope: !12999)
!13038 = !DILocation(line: 792, column: 8, scope: !12999)
!13039 = !DILocation(line: 792, column: 15, scope: !12999)
!13040 = !DILocation(line: 792, column: 22, scope: !12999)
!13041 = !DILocation(line: 793, column: 23, scope: !12999)
!13042 = !DILocation(line: 793, column: 29, scope: !12999)
!13043 = !DILocation(line: 793, column: 2, scope: !12999)
!13044 = !DILocation(line: 793, column: 8, scope: !12999)
!13045 = !DILocation(line: 793, column: 15, scope: !12999)
!13046 = !DILocation(line: 793, column: 21, scope: !12999)
!13047 = !DILocation(line: 794, column: 25, scope: !12999)
!13048 = !DILocation(line: 794, column: 29, scope: !12999)
!13049 = !DILocation(line: 794, column: 11, scope: !12999)
!13050 = !DILocation(line: 794, column: 9, scope: !12999)
!13051 = !DILocation(line: 795, column: 16, scope: !12999)
!13052 = !DILocation(line: 795, column: 20, scope: !12999)
!13053 = !DILocation(line: 795, column: 2, scope: !12999)
!13054 = !DILocation(line: 797, column: 9, scope: !12999)
!13055 = !DILocation(line: 797, column: 2, scope: !12999)
!13056 = distinct !DISubprogram(name: "raid_level_show", scope: !3, file: !3, line: 1902, type: !6142, scopeLine: 1904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13057 = !DILocalVariable(name: "dev", arg: 1, scope: !13056, file: !3, line: 1902, type: !1003)
!13058 = !DILocation(line: 1902, column: 47, scope: !13056)
!13059 = !DILocalVariable(name: "attr", arg: 2, scope: !13056, file: !3, line: 1903, type: !6136)
!13060 = !DILocation(line: 1903, column: 28, scope: !13056)
!13061 = !DILocalVariable(name: "buf", arg: 3, scope: !13056, file: !3, line: 1903, type: !1061)
!13062 = !DILocation(line: 1903, column: 40, scope: !13056)
!13063 = !DILocalVariable(name: "sdev", scope: !13056, file: !3, line: 1905, type: !5809)
!13064 = !DILocation(line: 1905, column: 22, scope: !13056)
!13065 = !DILocalVariable(name: "__mptr", scope: !13066, file: !3, line: 1905, type: !973)
!13066 = distinct !DILexicalBlock(scope: !13056, file: !3, line: 1905, column: 29)
!13067 = !DILocation(line: 1905, column: 29, scope: !13066)
!13068 = !DILocation(line: 1905, column: 29, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13066, file: !3, line: 1905, column: 29)
!13070 = !DILocation(line: 1907, column: 6, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13056, file: !3, line: 1907, column: 6)
!13072 = !DILocation(line: 1907, column: 12, scope: !13071)
!13073 = !DILocation(line: 1907, column: 44, scope: !13071)
!13074 = !DILocation(line: 1907, column: 50, scope: !13071)
!13075 = !DILocation(line: 1907, column: 23, scope: !13071)
!13076 = !DILocation(line: 1907, column: 20, scope: !13071)
!13077 = !DILocation(line: 1907, column: 6, scope: !13056)
!13078 = !DILocalVariable(name: "ldev_info", scope: !13079, file: !3, line: 1908, type: !6294)
!13079 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 1907, column: 57)
!13080 = !DILocation(line: 1908, column: 26, scope: !13079)
!13081 = !DILocation(line: 1908, column: 38, scope: !13079)
!13082 = !DILocation(line: 1908, column: 44, scope: !13079)
!13083 = !DILocalVariable(name: "name", scope: !13079, file: !3, line: 1909, type: !948)
!13084 = !DILocation(line: 1909, column: 15, scope: !13079)
!13085 = !DILocation(line: 1911, column: 8, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13079, file: !3, line: 1911, column: 7)
!13087 = !DILocation(line: 1911, column: 7, scope: !13079)
!13088 = !DILocation(line: 1912, column: 4, scope: !13086)
!13089 = !DILocation(line: 1914, column: 30, scope: !13079)
!13090 = !DILocation(line: 1914, column: 41, scope: !13079)
!13091 = !DILocation(line: 1914, column: 10, scope: !13079)
!13092 = !DILocation(line: 1914, column: 8, scope: !13079)
!13093 = !DILocation(line: 1915, column: 8, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13079, file: !3, line: 1915, column: 7)
!13095 = !DILocation(line: 1915, column: 7, scope: !13079)
!13096 = !DILocation(line: 1916, column: 20, scope: !13094)
!13097 = !DILocation(line: 1917, column: 6, scope: !13094)
!13098 = !DILocation(line: 1917, column: 17, scope: !13094)
!13099 = !DILocation(line: 1916, column: 11, scope: !13094)
!13100 = !DILocation(line: 1916, column: 4, scope: !13094)
!13101 = !DILocation(line: 1918, column: 19, scope: !13079)
!13102 = !DILocation(line: 1918, column: 36, scope: !13079)
!13103 = !DILocation(line: 1918, column: 10, scope: !13079)
!13104 = !DILocation(line: 1918, column: 3, scope: !13079)
!13105 = !DILocation(line: 1920, column: 18, scope: !13056)
!13106 = !DILocation(line: 1920, column: 9, scope: !13056)
!13107 = !DILocation(line: 1920, column: 2, scope: !13056)
!13108 = !DILocation(line: 1921, column: 1, scope: !13056)
!13109 = distinct !DISubprogram(name: "myrb_raidlevel_name", scope: !3, file: !3, line: 73, type: !13110, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13110 = !DISubroutineType(types: !13111)
!13111 = !{!948, !617}
!13112 = !DILocalVariable(name: "level", arg: 1, scope: !13109, file: !3, line: 73, type: !617)
!13113 = !DILocation(line: 73, column: 60, scope: !13109)
!13114 = !DILocalVariable(name: "entry", scope: !13109, file: !3, line: 75, type: !13115)
!13115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6443, size: 64)
!13116 = !DILocation(line: 75, column: 36, scope: !13109)
!13117 = !DILocalVariable(name: "i", scope: !13109, file: !3, line: 76, type: !913)
!13118 = !DILocation(line: 76, column: 6, scope: !13109)
!13119 = !DILocation(line: 78, column: 9, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13109, file: !3, line: 78, column: 2)
!13121 = !DILocation(line: 78, column: 7, scope: !13120)
!13122 = !DILocation(line: 78, column: 14, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 78, column: 2)
!13124 = !DILocation(line: 78, column: 16, scope: !13123)
!13125 = !DILocation(line: 78, column: 2, scope: !13120)
!13126 = !DILocation(line: 79, column: 7, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13128, file: !3, line: 79, column: 7)
!13128 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 78, column: 61)
!13129 = !DILocation(line: 79, column: 13, scope: !13127)
!13130 = !DILocation(line: 79, column: 16, scope: !13127)
!13131 = !DILocation(line: 79, column: 25, scope: !13127)
!13132 = !DILocation(line: 79, column: 22, scope: !13127)
!13133 = !DILocation(line: 79, column: 7, scope: !13128)
!13134 = !DILocation(line: 80, column: 11, scope: !13127)
!13135 = !DILocation(line: 80, column: 17, scope: !13127)
!13136 = !DILocation(line: 80, column: 20, scope: !13127)
!13137 = !DILocation(line: 80, column: 4, scope: !13127)
!13138 = !DILocation(line: 81, column: 2, scope: !13128)
!13139 = !DILocation(line: 78, column: 57, scope: !13123)
!13140 = !DILocation(line: 78, column: 2, scope: !13123)
!13141 = distinct !{!13141, !13125, !13142}
!13142 = !DILocation(line: 81, column: 2, scope: !13120)
!13143 = !DILocation(line: 82, column: 2, scope: !13109)
!13144 = !DILocation(line: 83, column: 1, scope: !13109)
!13145 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !114, file: !114, line: 660, type: !13146, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13146 = !DISubroutineType(types: !13147)
!13147 = !{null, !1003, !973}
!13148 = !DILocalVariable(name: "dev", arg: 1, scope: !13145, file: !114, line: 660, type: !1003)
!13149 = !DILocation(line: 660, column: 51, scope: !13145)
!13150 = !DILocalVariable(name: "data", arg: 2, scope: !13145, file: !114, line: 660, type: !973)
!13151 = !DILocation(line: 660, column: 62, scope: !13145)
!13152 = !DILocation(line: 662, column: 21, scope: !13145)
!13153 = !DILocation(line: 662, column: 2, scope: !13145)
!13154 = !DILocation(line: 662, column: 7, scope: !13145)
!13155 = !DILocation(line: 662, column: 19, scope: !13145)
!13156 = !DILocation(line: 663, column: 1, scope: !13145)
!13157 = distinct !DISubprogram(name: "myrb_hba_enquiry", scope: !3, file: !3, line: 671, type: !13158, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{!320, !5760}
!13160 = !DILocalVariable(name: "cb", arg: 1, scope: !13157, file: !3, line: 671, type: !5760)
!13161 = !DILocation(line: 671, column: 57, scope: !13157)
!13162 = !DILocalVariable(name: "old", scope: !13157, file: !3, line: 673, type: !414)
!13163 = !DILocation(line: 673, column: 22, scope: !13157)
!13164 = !DILocalVariable(name: "new", scope: !13157, file: !3, line: 673, type: !6281)
!13165 = !DILocation(line: 673, column: 28, scope: !13157)
!13166 = !DILocalVariable(name: "status", scope: !13157, file: !3, line: 674, type: !320)
!13167 = !DILocation(line: 674, column: 17, scope: !13157)
!13168 = !DILocation(line: 676, column: 2, scope: !13157)
!13169 = !DILocation(line: 676, column: 15, scope: !13157)
!13170 = !DILocation(line: 676, column: 19, scope: !13157)
!13171 = !DILocation(line: 678, column: 27, scope: !13157)
!13172 = !DILocation(line: 678, column: 49, scope: !13157)
!13173 = !DILocation(line: 678, column: 53, scope: !13157)
!13174 = !DILocation(line: 678, column: 11, scope: !13157)
!13175 = !DILocation(line: 678, column: 9, scope: !13157)
!13176 = !DILocation(line: 679, column: 6, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 679, column: 6)
!13178 = !DILocation(line: 679, column: 13, scope: !13177)
!13179 = !DILocation(line: 679, column: 6, scope: !13157)
!13180 = !DILocation(line: 680, column: 10, scope: !13177)
!13181 = !DILocation(line: 680, column: 3, scope: !13177)
!13182 = !DILocation(line: 682, column: 8, scope: !13157)
!13183 = !DILocation(line: 682, column: 12, scope: !13157)
!13184 = !DILocation(line: 682, column: 6, scope: !13157)
!13185 = !DILocation(line: 683, column: 6, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 683, column: 6)
!13187 = !DILocation(line: 683, column: 11, scope: !13186)
!13188 = !DILocation(line: 683, column: 28, scope: !13186)
!13189 = !DILocation(line: 683, column: 24, scope: !13186)
!13190 = !DILocation(line: 683, column: 22, scope: !13186)
!13191 = !DILocation(line: 683, column: 6, scope: !13157)
!13192 = !DILocalVariable(name: "ldev_num", scope: !13193, file: !3, line: 684, type: !913)
!13193 = distinct !DILexicalBlock(scope: !13186, file: !3, line: 683, column: 40)
!13194 = !DILocation(line: 684, column: 7, scope: !13193)
!13195 = !DILocation(line: 684, column: 22, scope: !13193)
!13196 = !DILocation(line: 684, column: 18, scope: !13193)
!13197 = !DILocation(line: 684, column: 33, scope: !13193)
!13198 = !DILocation(line: 686, column: 3, scope: !13193)
!13199 = !DILocation(line: 686, column: 10, scope: !13193)
!13200 = !DILocation(line: 686, column: 23, scope: !13193)
!13201 = !DILocation(line: 686, column: 28, scope: !13193)
!13202 = !DILocation(line: 686, column: 21, scope: !13193)
!13203 = !DILocation(line: 687, column: 4, scope: !13193)
!13204 = distinct !{!13204, !13198, !13203}
!13205 = !DILocation(line: 690, column: 2, scope: !13193)
!13206 = !DILocation(line: 691, column: 6, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 691, column: 6)
!13208 = !DILocation(line: 691, column: 11, scope: !13207)
!13209 = !DILocation(line: 691, column: 28, scope: !13207)
!13210 = !DILocation(line: 691, column: 24, scope: !13207)
!13211 = !DILocation(line: 691, column: 22, scope: !13207)
!13212 = !DILocation(line: 691, column: 6, scope: !13157)
!13213 = !DILocalVariable(name: "ldev_num", scope: !13214, file: !3, line: 692, type: !913)
!13214 = distinct !DILexicalBlock(scope: !13207, file: !3, line: 691, column: 40)
!13215 = !DILocation(line: 692, column: 7, scope: !13214)
!13216 = !DILocation(line: 692, column: 18, scope: !13214)
!13217 = !DILocation(line: 692, column: 23, scope: !13214)
!13218 = !DILocation(line: 692, column: 34, scope: !13214)
!13219 = !DILocation(line: 694, column: 3, scope: !13214)
!13220 = !DILocation(line: 694, column: 10, scope: !13214)
!13221 = !DILocation(line: 694, column: 27, scope: !13214)
!13222 = !DILocation(line: 694, column: 23, scope: !13214)
!13223 = !DILocation(line: 694, column: 21, scope: !13214)
!13224 = !DILocation(line: 695, column: 4, scope: !13214)
!13225 = distinct !{!13225, !13219, !13224}
!13226 = !DILocation(line: 698, column: 2, scope: !13214)
!13227 = !DILocation(line: 699, column: 6, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 699, column: 6)
!13229 = !DILocation(line: 699, column: 11, scope: !13228)
!13230 = !DILocation(line: 699, column: 18, scope: !13228)
!13231 = !DILocation(line: 699, column: 34, scope: !13228)
!13232 = !DILocation(line: 699, column: 41, scope: !13228)
!13233 = !DILocation(line: 699, column: 30, scope: !13228)
!13234 = !DILocation(line: 699, column: 27, scope: !13228)
!13235 = !DILocation(line: 699, column: 6, scope: !13157)
!13236 = !DILocation(line: 700, column: 3, scope: !13228)
!13237 = !DILocation(line: 703, column: 6, scope: !13238)
!13238 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 703, column: 6)
!13239 = !DILocation(line: 703, column: 11, scope: !13238)
!13240 = !DILocation(line: 703, column: 25, scope: !13238)
!13241 = !DILocation(line: 703, column: 21, scope: !13238)
!13242 = !DILocation(line: 703, column: 18, scope: !13238)
!13243 = !DILocation(line: 703, column: 6, scope: !13157)
!13244 = !DILocation(line: 704, column: 20, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13238, file: !3, line: 703, column: 33)
!13246 = !DILocation(line: 704, column: 25, scope: !13245)
!13247 = !DILocation(line: 704, column: 3, scope: !13245)
!13248 = !DILocation(line: 704, column: 7, scope: !13245)
!13249 = !DILocation(line: 704, column: 18, scope: !13245)
!13250 = !DILocation(line: 705, column: 3, scope: !13245)
!13251 = !DILocation(line: 705, column: 7, scope: !13245)
!13252 = !DILocation(line: 705, column: 21, scope: !13245)
!13253 = !DILocation(line: 706, column: 3, scope: !13245)
!13254 = !DILocation(line: 710, column: 2, scope: !13245)
!13255 = !DILocation(line: 711, column: 7, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 711, column: 6)
!13257 = !DILocation(line: 711, column: 12, scope: !13256)
!13258 = !DILocation(line: 711, column: 26, scope: !13256)
!13259 = !DILocation(line: 711, column: 30, scope: !13256)
!13260 = !DILocation(line: 712, column: 7, scope: !13256)
!13261 = !DILocation(line: 712, column: 12, scope: !13256)
!13262 = !DILocation(line: 712, column: 33, scope: !13256)
!13263 = !DILocation(line: 712, column: 29, scope: !13256)
!13264 = !DILocation(line: 712, column: 26, scope: !13256)
!13265 = !DILocation(line: 712, column: 48, scope: !13256)
!13266 = !DILocation(line: 713, column: 7, scope: !13256)
!13267 = !DILocation(line: 713, column: 12, scope: !13256)
!13268 = !DILocation(line: 713, column: 25, scope: !13256)
!13269 = !DILocation(line: 713, column: 29, scope: !13256)
!13270 = !DILocation(line: 714, column: 7, scope: !13256)
!13271 = !DILocation(line: 714, column: 12, scope: !13256)
!13272 = !DILocation(line: 714, column: 32, scope: !13256)
!13273 = !DILocation(line: 714, column: 28, scope: !13256)
!13274 = !DILocation(line: 714, column: 25, scope: !13256)
!13275 = !DILocation(line: 714, column: 46, scope: !13256)
!13276 = !DILocation(line: 715, column: 7, scope: !13256)
!13277 = !DILocation(line: 715, column: 12, scope: !13256)
!13278 = !DILocation(line: 715, column: 30, scope: !13256)
!13279 = !DILocation(line: 715, column: 26, scope: !13256)
!13280 = !DILocation(line: 715, column: 23, scope: !13256)
!13281 = !DILocation(line: 711, column: 6, scope: !13157)
!13282 = !DILocation(line: 716, column: 3, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13256, file: !3, line: 715, column: 43)
!13284 = !DILocation(line: 721, column: 3, scope: !13283)
!13285 = !DILocation(line: 721, column: 7, scope: !13283)
!13286 = !DILocation(line: 721, column: 22, scope: !13283)
!13287 = !DILocation(line: 722, column: 2, scope: !13283)
!13288 = !DILocation(line: 723, column: 6, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 723, column: 6)
!13290 = !DILocation(line: 723, column: 11, scope: !13289)
!13291 = !DILocation(line: 723, column: 21, scope: !13289)
!13292 = !DILocation(line: 723, column: 25, scope: !13289)
!13293 = !DILocation(line: 724, column: 6, scope: !13289)
!13294 = !DILocation(line: 724, column: 11, scope: !13289)
!13295 = !DILocation(line: 724, column: 28, scope: !13289)
!13296 = !DILocation(line: 724, column: 24, scope: !13289)
!13297 = !DILocation(line: 724, column: 21, scope: !13289)
!13298 = !DILocation(line: 724, column: 38, scope: !13289)
!13299 = !DILocation(line: 725, column: 6, scope: !13289)
!13300 = !DILocation(line: 723, column: 6, scope: !13157)
!13301 = !DILocation(line: 727, column: 25, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13289, file: !3, line: 726, column: 42)
!13303 = !DILocation(line: 727, column: 29, scope: !13302)
!13304 = !DILocation(line: 727, column: 3, scope: !13302)
!13305 = !DILocation(line: 727, column: 7, scope: !13302)
!13306 = !DILocation(line: 727, column: 23, scope: !13302)
!13307 = !DILocation(line: 728, column: 32, scope: !13302)
!13308 = !DILocation(line: 728, column: 3, scope: !13302)
!13309 = !DILocation(line: 728, column: 7, scope: !13302)
!13310 = !DILocation(line: 728, column: 30, scope: !13302)
!13311 = !DILocation(line: 729, column: 2, scope: !13302)
!13312 = !DILocation(line: 730, column: 6, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 730, column: 6)
!13314 = !DILocation(line: 730, column: 11, scope: !13313)
!13315 = !DILocation(line: 730, column: 16, scope: !13313)
!13316 = !DILocation(line: 730, column: 47, scope: !13313)
!13317 = !DILocation(line: 731, column: 6, scope: !13313)
!13318 = !DILocation(line: 731, column: 11, scope: !13313)
!13319 = !DILocation(line: 731, column: 16, scope: !13313)
!13320 = !DILocation(line: 731, column: 44, scope: !13313)
!13321 = !DILocation(line: 732, column: 10, scope: !13313)
!13322 = !DILocation(line: 732, column: 6, scope: !13313)
!13323 = !DILocation(line: 732, column: 15, scope: !13313)
!13324 = !DILocation(line: 732, column: 46, scope: !13313)
!13325 = !DILocation(line: 733, column: 10, scope: !13313)
!13326 = !DILocation(line: 733, column: 6, scope: !13313)
!13327 = !DILocation(line: 733, column: 15, scope: !13313)
!13328 = !DILocation(line: 730, column: 6, scope: !13157)
!13329 = !DILocation(line: 734, column: 3, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 733, column: 44)
!13331 = !DILocation(line: 734, column: 7, scope: !13330)
!13332 = !DILocation(line: 734, column: 17, scope: !13330)
!13333 = !DILocation(line: 735, column: 21, scope: !13330)
!13334 = !DILocation(line: 735, column: 26, scope: !13330)
!13335 = !DILocation(line: 735, column: 46, scope: !13330)
!13336 = !DILocation(line: 735, column: 42, scope: !13330)
!13337 = !DILocation(line: 735, column: 40, scope: !13330)
!13338 = !DILocation(line: 735, column: 3, scope: !13330)
!13339 = !DILocation(line: 735, column: 7, scope: !13330)
!13340 = !DILocation(line: 735, column: 18, scope: !13330)
!13341 = !DILocation(line: 736, column: 2, scope: !13330)
!13342 = !DILocation(line: 737, column: 10, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 737, column: 6)
!13344 = !DILocation(line: 737, column: 6, scope: !13343)
!13345 = !DILocation(line: 737, column: 15, scope: !13343)
!13346 = !DILocation(line: 737, column: 6, scope: !13157)
!13347 = !DILocation(line: 738, column: 11, scope: !13343)
!13348 = !DILocation(line: 738, column: 16, scope: !13343)
!13349 = !DILocation(line: 738, column: 3, scope: !13343)
!13350 = !DILocation(line: 740, column: 4, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13343, file: !3, line: 738, column: 22)
!13352 = !DILocation(line: 742, column: 4, scope: !13351)
!13353 = !DILocation(line: 745, column: 4, scope: !13351)
!13354 = !DILocation(line: 747, column: 4, scope: !13351)
!13355 = !DILocation(line: 747, column: 8, scope: !13351)
!13356 = !DILocation(line: 747, column: 23, scope: !13351)
!13357 = !DILocation(line: 748, column: 4, scope: !13351)
!13358 = !DILocation(line: 750, column: 4, scope: !13351)
!13359 = !DILocation(line: 752, column: 4, scope: !13351)
!13360 = !DILocation(line: 754, column: 4, scope: !13351)
!13361 = !DILocation(line: 756, column: 4, scope: !13351)
!13362 = !DILocation(line: 758, column: 4, scope: !13351)
!13363 = !DILocation(line: 760, column: 4, scope: !13351)
!13364 = !DILocation(line: 762, column: 4, scope: !13351)
!13365 = !DILocation(line: 764, column: 4, scope: !13351)
!13366 = !DILocation(line: 766, column: 4, scope: !13351)
!13367 = !DILocation(line: 768, column: 4, scope: !13351)
!13368 = !DILocation(line: 769, column: 3, scope: !13351)
!13369 = !DILocation(line: 770, column: 11, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13343, file: !3, line: 770, column: 11)
!13371 = !DILocation(line: 770, column: 16, scope: !13370)
!13372 = !DILocation(line: 770, column: 21, scope: !13370)
!13373 = !DILocation(line: 770, column: 11, scope: !13343)
!13374 = !DILocation(line: 771, column: 3, scope: !13370)
!13375 = !DILocation(line: 771, column: 7, scope: !13370)
!13376 = !DILocation(line: 771, column: 22, scope: !13370)
!13377 = !DILocation(line: 773, column: 2, scope: !13157)
!13378 = !DILocation(line: 774, column: 1, scope: !13157)
!13379 = distinct !DISubprogram(name: "myrb_get_ldev_info", scope: !3, file: !3, line: 388, type: !13158, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13380 = !DILocalVariable(name: "cb", arg: 1, scope: !13379, file: !3, line: 388, type: !5760)
!13381 = !DILocation(line: 388, column: 59, scope: !13379)
!13382 = !DILocalVariable(name: "status", scope: !13379, file: !3, line: 390, type: !320)
!13383 = !DILocation(line: 390, column: 17, scope: !13379)
!13384 = !DILocalVariable(name: "ldev_num", scope: !13379, file: !3, line: 391, type: !913)
!13385 = !DILocation(line: 391, column: 6, scope: !13379)
!13386 = !DILocalVariable(name: "ldev_cnt", scope: !13379, file: !3, line: 391, type: !913)
!13387 = !DILocation(line: 391, column: 16, scope: !13379)
!13388 = !DILocation(line: 391, column: 27, scope: !13379)
!13389 = !DILocation(line: 391, column: 31, scope: !13379)
!13390 = !DILocation(line: 391, column: 40, scope: !13379)
!13391 = !DILocalVariable(name: "shost", scope: !13379, file: !3, line: 392, type: !5782)
!13392 = !DILocation(line: 392, column: 20, scope: !13379)
!13393 = !DILocation(line: 392, column: 28, scope: !13379)
!13394 = !DILocation(line: 392, column: 32, scope: !13379)
!13395 = !DILocation(line: 394, column: 27, scope: !13379)
!13396 = !DILocation(line: 395, column: 6, scope: !13379)
!13397 = !DILocation(line: 395, column: 10, scope: !13379)
!13398 = !DILocation(line: 394, column: 11, scope: !13379)
!13399 = !DILocation(line: 394, column: 9, scope: !13379)
!13400 = !DILocation(line: 396, column: 6, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13379, file: !3, line: 396, column: 6)
!13402 = !DILocation(line: 396, column: 13, scope: !13401)
!13403 = !DILocation(line: 396, column: 6, scope: !13379)
!13404 = !DILocation(line: 397, column: 10, scope: !13401)
!13405 = !DILocation(line: 397, column: 3, scope: !13401)
!13406 = !DILocation(line: 399, column: 16, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13379, file: !3, line: 399, column: 2)
!13408 = !DILocation(line: 399, column: 7, scope: !13407)
!13409 = !DILocation(line: 399, column: 21, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13407, file: !3, line: 399, column: 2)
!13411 = !DILocation(line: 399, column: 32, scope: !13410)
!13412 = !DILocation(line: 399, column: 30, scope: !13410)
!13413 = !DILocation(line: 399, column: 2, scope: !13407)
!13414 = !DILocalVariable(name: "old", scope: !13415, file: !3, line: 400, type: !6294)
!13415 = distinct !DILexicalBlock(scope: !13410, file: !3, line: 399, column: 54)
!13416 = !DILocation(line: 400, column: 26, scope: !13415)
!13417 = !DILocalVariable(name: "new", scope: !13415, file: !3, line: 401, type: !6294)
!13418 = !DILocation(line: 401, column: 26, scope: !13415)
!13419 = !DILocation(line: 401, column: 32, scope: !13415)
!13420 = !DILocation(line: 401, column: 36, scope: !13415)
!13421 = !DILocation(line: 401, column: 52, scope: !13415)
!13422 = !DILocation(line: 401, column: 50, scope: !13415)
!13423 = !DILocalVariable(name: "sdev", scope: !13415, file: !3, line: 402, type: !5809)
!13424 = !DILocation(line: 402, column: 23, scope: !13415)
!13425 = !DILocation(line: 404, column: 29, scope: !13415)
!13426 = !DILocation(line: 404, column: 57, scope: !13415)
!13427 = !DILocation(line: 404, column: 36, scope: !13415)
!13428 = !DILocation(line: 405, column: 8, scope: !13415)
!13429 = !DILocation(line: 404, column: 10, scope: !13415)
!13430 = !DILocation(line: 404, column: 8, scope: !13415)
!13431 = !DILocation(line: 406, column: 8, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 406, column: 7)
!13433 = !DILocation(line: 406, column: 7, scope: !13415)
!13434 = !DILocation(line: 407, column: 8, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13436, file: !3, line: 407, column: 8)
!13436 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 406, column: 14)
!13437 = !DILocation(line: 407, column: 13, scope: !13435)
!13438 = !DILocation(line: 407, column: 19, scope: !13435)
!13439 = !DILocation(line: 407, column: 8, scope: !13436)
!13440 = !DILocation(line: 408, column: 5, scope: !13435)
!13441 = !DILocation(line: 409, column: 4, scope: !13436)
!13442 = !DILocation(line: 412, column: 20, scope: !13436)
!13443 = !DILocation(line: 412, column: 48, scope: !13436)
!13444 = !DILocation(line: 412, column: 27, scope: !13436)
!13445 = !DILocation(line: 413, column: 6, scope: !13436)
!13446 = !DILocation(line: 412, column: 4, scope: !13436)
!13447 = !DILocation(line: 414, column: 4, scope: !13436)
!13448 = !DILocation(line: 416, column: 9, scope: !13415)
!13449 = !DILocation(line: 416, column: 15, scope: !13415)
!13450 = !DILocation(line: 416, column: 7, scope: !13415)
!13451 = !DILocation(line: 417, column: 7, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 417, column: 7)
!13453 = !DILocation(line: 417, column: 12, scope: !13452)
!13454 = !DILocation(line: 417, column: 21, scope: !13452)
!13455 = !DILocation(line: 417, column: 26, scope: !13452)
!13456 = !DILocation(line: 417, column: 18, scope: !13452)
!13457 = !DILocation(line: 417, column: 7, scope: !13415)
!13458 = !DILocation(line: 418, column: 4, scope: !13452)
!13459 = !DILocation(line: 421, column: 7, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 421, column: 7)
!13461 = !DILocation(line: 421, column: 12, scope: !13460)
!13462 = !DILocation(line: 421, column: 26, scope: !13460)
!13463 = !DILocation(line: 421, column: 31, scope: !13460)
!13464 = !DILocation(line: 421, column: 23, scope: !13460)
!13465 = !DILocation(line: 421, column: 7, scope: !13415)
!13466 = !DILocation(line: 422, column: 4, scope: !13460)
!13467 = !DILocation(line: 425, column: 10, scope: !13415)
!13468 = !DILocation(line: 425, column: 3, scope: !13415)
!13469 = !DILocation(line: 425, column: 15, scope: !13415)
!13470 = !DILocation(line: 426, column: 19, scope: !13415)
!13471 = !DILocation(line: 426, column: 3, scope: !13415)
!13472 = !DILocation(line: 427, column: 2, scope: !13415)
!13473 = !DILocation(line: 399, column: 50, scope: !13410)
!13474 = !DILocation(line: 399, column: 2, scope: !13410)
!13475 = distinct !{!13475, !13413, !13476}
!13476 = !DILocation(line: 427, column: 2, scope: !13407)
!13477 = !DILocation(line: 428, column: 9, scope: !13379)
!13478 = !DILocation(line: 428, column: 2, scope: !13379)
!13479 = !DILocation(line: 429, column: 1, scope: !13379)
!13480 = distinct !DISubprogram(name: "myrb_bgi_control", scope: !3, file: !3, line: 580, type: !9700, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13481 = !DILocalVariable(name: "cb", arg: 1, scope: !13480, file: !3, line: 580, type: !5760)
!13482 = !DILocation(line: 580, column: 47, scope: !13480)
!13483 = !DILocalVariable(name: "cmd_blk", scope: !13480, file: !3, line: 582, type: !6225)
!13484 = !DILocation(line: 582, column: 22, scope: !13480)
!13485 = !DILocation(line: 582, column: 33, scope: !13480)
!13486 = !DILocation(line: 582, column: 37, scope: !13480)
!13487 = !DILocalVariable(name: "mbox", scope: !13480, file: !3, line: 583, type: !6245)
!13488 = !DILocation(line: 583, column: 23, scope: !13480)
!13489 = !DILocation(line: 583, column: 31, scope: !13480)
!13490 = !DILocation(line: 583, column: 40, scope: !13480)
!13491 = !DILocalVariable(name: "bgi", scope: !13480, file: !3, line: 584, type: !13492)
!13492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!13493 = !DILocation(line: 584, column: 26, scope: !13480)
!13494 = !DILocalVariable(name: "last_bgi", scope: !13480, file: !3, line: 584, type: !13492)
!13495 = !DILocation(line: 584, column: 32, scope: !13480)
!13496 = !DILocalVariable(name: "bgi_addr", scope: !13480, file: !3, line: 585, type: !1761)
!13497 = !DILocation(line: 585, column: 13, scope: !13480)
!13498 = !DILocalVariable(name: "sdev", scope: !13480, file: !3, line: 586, type: !5809)
!13499 = !DILocation(line: 586, column: 22, scope: !13480)
!13500 = !DILocalVariable(name: "status", scope: !13480, file: !3, line: 587, type: !320)
!13501 = !DILocation(line: 587, column: 17, scope: !13480)
!13502 = !DILocation(line: 589, column: 28, scope: !13480)
!13503 = !DILocation(line: 589, column: 32, scope: !13480)
!13504 = !DILocation(line: 589, column: 38, scope: !13480)
!13505 = !DILocation(line: 589, column: 8, scope: !13480)
!13506 = !DILocation(line: 589, column: 6, scope: !13480)
!13507 = !DILocation(line: 591, column: 7, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13480, file: !3, line: 591, column: 6)
!13509 = !DILocation(line: 591, column: 6, scope: !13480)
!13510 = !DILocation(line: 592, column: 3, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13508, file: !3, line: 591, column: 12)
!13512 = !DILocation(line: 594, column: 3, scope: !13511)
!13513 = !DILocation(line: 596, column: 17, scope: !13480)
!13514 = !DILocation(line: 596, column: 2, scope: !13480)
!13515 = !DILocation(line: 597, column: 2, scope: !13480)
!13516 = !DILocation(line: 597, column: 8, scope: !13480)
!13517 = !DILocation(line: 597, column: 15, scope: !13480)
!13518 = !DILocation(line: 597, column: 18, scope: !13480)
!13519 = !DILocation(line: 598, column: 2, scope: !13480)
!13520 = !DILocation(line: 598, column: 8, scope: !13480)
!13521 = !DILocation(line: 598, column: 15, scope: !13480)
!13522 = !DILocation(line: 598, column: 22, scope: !13480)
!13523 = !DILocation(line: 599, column: 2, scope: !13480)
!13524 = !DILocation(line: 599, column: 8, scope: !13480)
!13525 = !DILocation(line: 599, column: 15, scope: !13480)
!13526 = !DILocation(line: 599, column: 22, scope: !13480)
!13527 = !DILocation(line: 600, column: 22, scope: !13480)
!13528 = !DILocation(line: 600, column: 2, scope: !13480)
!13529 = !DILocation(line: 600, column: 8, scope: !13480)
!13530 = !DILocation(line: 600, column: 15, scope: !13480)
!13531 = !DILocation(line: 600, column: 20, scope: !13480)
!13532 = !DILocation(line: 601, column: 25, scope: !13480)
!13533 = !DILocation(line: 601, column: 29, scope: !13480)
!13534 = !DILocation(line: 601, column: 11, scope: !13480)
!13535 = !DILocation(line: 601, column: 9, scope: !13480)
!13536 = !DILocation(line: 602, column: 14, scope: !13480)
!13537 = !DILocation(line: 602, column: 18, scope: !13480)
!13538 = !DILocation(line: 602, column: 11, scope: !13480)
!13539 = !DILocation(line: 603, column: 28, scope: !13480)
!13540 = !DILocation(line: 603, column: 32, scope: !13480)
!13541 = !DILocation(line: 604, column: 28, scope: !13480)
!13542 = !DILocation(line: 604, column: 32, scope: !13480)
!13543 = !DILocation(line: 604, column: 7, scope: !13480)
!13544 = !DILocation(line: 605, column: 7, scope: !13480)
!13545 = !DILocation(line: 605, column: 12, scope: !13480)
!13546 = !DILocation(line: 603, column: 9, scope: !13480)
!13547 = !DILocation(line: 603, column: 7, scope: !13480)
!13548 = !DILocation(line: 606, column: 10, scope: !13480)
!13549 = !DILocation(line: 606, column: 2, scope: !13480)
!13550 = !DILocation(line: 608, column: 11, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13480, file: !3, line: 606, column: 18)
!13552 = !DILocation(line: 608, column: 16, scope: !13551)
!13553 = !DILocation(line: 608, column: 3, scope: !13551)
!13554 = !DILocation(line: 610, column: 4, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13551, file: !3, line: 608, column: 24)
!13556 = !DILocation(line: 612, column: 9, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13555, file: !3, line: 612, column: 8)
!13558 = !DILocation(line: 612, column: 8, scope: !13555)
!13559 = !DILocation(line: 613, column: 5, scope: !13557)
!13560 = !DILocation(line: 614, column: 4, scope: !13555)
!13561 = !DILocation(line: 616, column: 4, scope: !13555)
!13562 = !DILocation(line: 618, column: 9, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13555, file: !3, line: 618, column: 8)
!13564 = !DILocation(line: 618, column: 8, scope: !13555)
!13565 = !DILocation(line: 619, column: 5, scope: !13563)
!13566 = !DILocation(line: 620, column: 8, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13555, file: !3, line: 620, column: 8)
!13568 = !DILocation(line: 620, column: 13, scope: !13567)
!13569 = !DILocation(line: 620, column: 28, scope: !13567)
!13570 = !DILocation(line: 620, column: 38, scope: !13567)
!13571 = !DILocation(line: 620, column: 25, scope: !13567)
!13572 = !DILocation(line: 620, column: 50, scope: !13567)
!13573 = !DILocation(line: 621, column: 8, scope: !13567)
!13574 = !DILocation(line: 621, column: 13, scope: !13567)
!13575 = !DILocation(line: 621, column: 25, scope: !13567)
!13576 = !DILocation(line: 621, column: 35, scope: !13567)
!13577 = !DILocation(line: 621, column: 22, scope: !13567)
!13578 = !DILocation(line: 620, column: 8, scope: !13555)
!13579 = !DILocation(line: 622, column: 5, scope: !13567)
!13580 = !DILocation(line: 623, column: 4, scope: !13555)
!13581 = !DILocation(line: 627, column: 4, scope: !13555)
!13582 = !DILocation(line: 629, column: 9, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13555, file: !3, line: 629, column: 8)
!13584 = !DILocation(line: 629, column: 8, scope: !13555)
!13585 = !DILocation(line: 630, column: 5, scope: !13583)
!13586 = !DILocation(line: 631, column: 4, scope: !13555)
!13587 = !DILocation(line: 633, column: 4, scope: !13555)
!13588 = !DILocation(line: 635, column: 9, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13555, file: !3, line: 635, column: 8)
!13590 = !DILocation(line: 635, column: 8, scope: !13555)
!13591 = !DILocation(line: 636, column: 5, scope: !13589)
!13592 = !DILocation(line: 637, column: 4, scope: !13555)
!13593 = !DILocation(line: 639, column: 4, scope: !13555)
!13594 = !DILocation(line: 641, column: 11, scope: !13551)
!13595 = !DILocation(line: 641, column: 15, scope: !13551)
!13596 = !DILocation(line: 641, column: 3, scope: !13551)
!13597 = !DILocation(line: 641, column: 27, scope: !13551)
!13598 = !DILocation(line: 642, column: 3, scope: !13551)
!13599 = !DILocation(line: 644, column: 7, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13551, file: !3, line: 644, column: 7)
!13601 = !DILocation(line: 644, column: 12, scope: !13600)
!13602 = !DILocation(line: 644, column: 15, scope: !13600)
!13603 = !DILocation(line: 644, column: 19, scope: !13600)
!13604 = !DILocation(line: 644, column: 30, scope: !13600)
!13605 = !DILocation(line: 644, column: 37, scope: !13600)
!13606 = !DILocation(line: 644, column: 7, scope: !13551)
!13607 = !DILocation(line: 645, column: 4, scope: !13600)
!13608 = !DILocation(line: 647, column: 3, scope: !13551)
!13609 = !DILocation(line: 647, column: 7, scope: !13551)
!13610 = !DILocation(line: 647, column: 18, scope: !13551)
!13611 = !DILocation(line: 647, column: 25, scope: !13551)
!13612 = !DILocation(line: 648, column: 3, scope: !13551)
!13613 = !DILocation(line: 650, column: 7, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13551, file: !3, line: 650, column: 7)
!13615 = !DILocation(line: 650, column: 12, scope: !13614)
!13616 = !DILocation(line: 650, column: 15, scope: !13614)
!13617 = !DILocation(line: 650, column: 19, scope: !13614)
!13618 = !DILocation(line: 650, column: 30, scope: !13614)
!13619 = !DILocation(line: 650, column: 37, scope: !13614)
!13620 = !DILocation(line: 650, column: 7, scope: !13551)
!13621 = !DILocation(line: 651, column: 4, scope: !13614)
!13622 = !DILocation(line: 650, column: 40, scope: !13614)
!13623 = !DILocation(line: 655, column: 3, scope: !13551)
!13624 = !DILocation(line: 655, column: 7, scope: !13551)
!13625 = !DILocation(line: 655, column: 18, scope: !13551)
!13626 = !DILocation(line: 655, column: 25, scope: !13551)
!13627 = !DILocation(line: 656, column: 3, scope: !13551)
!13628 = !DILocation(line: 658, column: 6, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13480, file: !3, line: 658, column: 6)
!13630 = !DILocation(line: 658, column: 6, scope: !13480)
!13631 = !DILocation(line: 659, column: 19, scope: !13629)
!13632 = !DILocation(line: 659, column: 3, scope: !13629)
!13633 = !DILocation(line: 660, column: 21, scope: !13480)
!13634 = !DILocation(line: 660, column: 25, scope: !13480)
!13635 = !DILocation(line: 660, column: 31, scope: !13480)
!13636 = !DILocation(line: 661, column: 6, scope: !13480)
!13637 = !DILocation(line: 661, column: 11, scope: !13480)
!13638 = !DILocation(line: 660, column: 2, scope: !13480)
!13639 = !DILocation(line: 662, column: 1, scope: !13480)
!13640 = distinct !DISubprogram(name: "myrb_unmap", scope: !3, file: !3, line: 1200, type: !9700, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13641 = !DILocalVariable(name: "cb", arg: 1, scope: !13640, file: !3, line: 1200, type: !5760)
!13642 = !DILocation(line: 1200, column: 41, scope: !13640)
!13643 = !DILocation(line: 1202, column: 6, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13640, file: !3, line: 1202, column: 6)
!13645 = !DILocation(line: 1202, column: 10, scope: !13644)
!13646 = !DILocation(line: 1202, column: 6, scope: !13640)
!13647 = !DILocalVariable(name: "ldev_info_size", scope: !13648, file: !3, line: 1203, type: !1102)
!13648 = distinct !DILexicalBlock(scope: !13644, file: !3, line: 1202, column: 25)
!13649 = !DILocation(line: 1203, column: 10, scope: !13648)
!13650 = !DILocation(line: 1205, column: 22, scope: !13648)
!13651 = !DILocation(line: 1205, column: 26, scope: !13648)
!13652 = !DILocation(line: 1205, column: 32, scope: !13648)
!13653 = !DILocation(line: 1205, column: 37, scope: !13648)
!13654 = !DILocation(line: 1206, column: 7, scope: !13648)
!13655 = !DILocation(line: 1206, column: 11, scope: !13648)
!13656 = !DILocation(line: 1206, column: 26, scope: !13648)
!13657 = !DILocation(line: 1206, column: 30, scope: !13648)
!13658 = !DILocation(line: 1205, column: 3, scope: !13648)
!13659 = !DILocation(line: 1207, column: 3, scope: !13648)
!13660 = !DILocation(line: 1207, column: 7, scope: !13648)
!13661 = !DILocation(line: 1207, column: 21, scope: !13648)
!13662 = !DILocation(line: 1208, column: 2, scope: !13648)
!13663 = !DILocation(line: 1209, column: 6, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13640, file: !3, line: 1209, column: 6)
!13665 = !DILocation(line: 1209, column: 10, scope: !13664)
!13666 = !DILocation(line: 1209, column: 6, scope: !13640)
!13667 = !DILocalVariable(name: "err_table_size", scope: !13668, file: !3, line: 1210, type: !1102)
!13668 = distinct !DILexicalBlock(scope: !13664, file: !3, line: 1209, column: 21)
!13669 = !DILocation(line: 1210, column: 10, scope: !13668)
!13670 = !DILocation(line: 1212, column: 22, scope: !13668)
!13671 = !DILocation(line: 1212, column: 26, scope: !13668)
!13672 = !DILocation(line: 1212, column: 32, scope: !13668)
!13673 = !DILocation(line: 1212, column: 37, scope: !13668)
!13674 = !DILocation(line: 1213, column: 7, scope: !13668)
!13675 = !DILocation(line: 1213, column: 11, scope: !13668)
!13676 = !DILocation(line: 1213, column: 22, scope: !13668)
!13677 = !DILocation(line: 1213, column: 26, scope: !13668)
!13678 = !DILocation(line: 1212, column: 3, scope: !13668)
!13679 = !DILocation(line: 1214, column: 3, scope: !13668)
!13680 = !DILocation(line: 1214, column: 7, scope: !13668)
!13681 = !DILocation(line: 1214, column: 17, scope: !13668)
!13682 = !DILocation(line: 1215, column: 2, scope: !13668)
!13683 = !DILocation(line: 1216, column: 6, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13640, file: !3, line: 1216, column: 6)
!13685 = !DILocation(line: 1216, column: 10, scope: !13684)
!13686 = !DILocation(line: 1216, column: 6, scope: !13640)
!13687 = !DILocation(line: 1217, column: 22, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13684, file: !3, line: 1216, column: 19)
!13689 = !DILocation(line: 1217, column: 26, scope: !13688)
!13690 = !DILocation(line: 1217, column: 32, scope: !13688)
!13691 = !DILocation(line: 1218, column: 7, scope: !13688)
!13692 = !DILocation(line: 1218, column: 11, scope: !13688)
!13693 = !DILocation(line: 1218, column: 20, scope: !13688)
!13694 = !DILocation(line: 1218, column: 24, scope: !13688)
!13695 = !DILocation(line: 1217, column: 3, scope: !13688)
!13696 = !DILocation(line: 1219, column: 3, scope: !13688)
!13697 = !DILocation(line: 1219, column: 7, scope: !13688)
!13698 = !DILocation(line: 1219, column: 15, scope: !13688)
!13699 = !DILocation(line: 1220, column: 2, scope: !13688)
!13700 = !DILocation(line: 1221, column: 6, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13640, file: !3, line: 1221, column: 6)
!13702 = !DILocation(line: 1221, column: 10, scope: !13701)
!13703 = !DILocation(line: 1221, column: 6, scope: !13640)
!13704 = !DILocation(line: 1222, column: 22, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13701, file: !3, line: 1221, column: 27)
!13706 = !DILocation(line: 1222, column: 26, scope: !13705)
!13707 = !DILocation(line: 1222, column: 32, scope: !13705)
!13708 = !DILocation(line: 1222, column: 37, scope: !13705)
!13709 = !DILocation(line: 1222, column: 41, scope: !13705)
!13710 = !DILocation(line: 1223, column: 7, scope: !13705)
!13711 = !DILocation(line: 1223, column: 11, scope: !13705)
!13712 = !DILocation(line: 1223, column: 28, scope: !13705)
!13713 = !DILocation(line: 1223, column: 32, scope: !13705)
!13714 = !DILocation(line: 1222, column: 3, scope: !13705)
!13715 = !DILocation(line: 1224, column: 3, scope: !13705)
!13716 = !DILocation(line: 1224, column: 7, scope: !13705)
!13717 = !DILocation(line: 1224, column: 23, scope: !13705)
!13718 = !DILocation(line: 1225, column: 2, scope: !13705)
!13719 = !DILocation(line: 1226, column: 6, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13640, file: !3, line: 1226, column: 6)
!13721 = !DILocation(line: 1226, column: 10, scope: !13720)
!13722 = !DILocation(line: 1226, column: 6, scope: !13640)
!13723 = !DILocation(line: 1227, column: 22, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13720, file: !3, line: 1226, column: 26)
!13725 = !DILocation(line: 1227, column: 26, scope: !13724)
!13726 = !DILocation(line: 1227, column: 32, scope: !13724)
!13727 = !DILocation(line: 1227, column: 37, scope: !13724)
!13728 = !DILocation(line: 1227, column: 41, scope: !13724)
!13729 = !DILocation(line: 1228, column: 7, scope: !13724)
!13730 = !DILocation(line: 1228, column: 11, scope: !13724)
!13731 = !DILocation(line: 1228, column: 27, scope: !13724)
!13732 = !DILocation(line: 1228, column: 31, scope: !13724)
!13733 = !DILocation(line: 1227, column: 3, scope: !13724)
!13734 = !DILocation(line: 1229, column: 3, scope: !13724)
!13735 = !DILocation(line: 1229, column: 7, scope: !13724)
!13736 = !DILocation(line: 1229, column: 22, scope: !13724)
!13737 = !DILocation(line: 1230, column: 2, scope: !13724)
!13738 = !DILocation(line: 1231, column: 1, scope: !13640)
!13739 = distinct !DISubprogram(name: "__init_work", scope: !845, file: !845, line: 215, type: !13740, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13740 = !DISubroutineType(types: !13741)
!13741 = !{null, !2826, !913}
!13742 = !DILocalVariable(name: "work", arg: 1, scope: !13739, file: !845, line: 215, type: !2826)
!13743 = !DILocation(line: 215, column: 52, scope: !13739)
!13744 = !DILocalVariable(name: "onstack", arg: 2, scope: !13739, file: !845, line: 215, type: !913)
!13745 = !DILocation(line: 215, column: 62, scope: !13739)
!13746 = !DILocation(line: 215, column: 73, scope: !13739)
!13747 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !13748, file: !13748, line: 33, type: !13749, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13748 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!13749 = !DISubroutineType(types: !13750)
!13750 = !{null, !922}
!13751 = !DILocalVariable(name: "list", arg: 1, scope: !13747, file: !13748, line: 33, type: !922)
!13752 = !DILocation(line: 33, column: 53, scope: !13747)
!13753 = !DILocation(line: 35, column: 2, scope: !13747)
!13754 = !DILocation(line: 35, column: 2, scope: !13755)
!13755 = distinct !DILexicalBlock(scope: !13747, file: !13748, line: 35, column: 2)
!13756 = !DILocation(line: 35, column: 2, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13755, file: !13748, line: 35, column: 2)
!13758 = !DILocation(line: 35, column: 2, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13755, file: !13748, line: 35, column: 2)
!13760 = !DILocation(line: 36, column: 15, scope: !13747)
!13761 = !DILocation(line: 36, column: 2, scope: !13747)
!13762 = !DILocation(line: 36, column: 8, scope: !13747)
!13763 = !DILocation(line: 36, column: 13, scope: !13747)
!13764 = !DILocation(line: 37, column: 1, scope: !13747)
!13765 = distinct !DISubprogram(name: "myrb_monitor", scope: !3, file: !3, line: 2413, type: !2824, scopeLine: 2414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13766 = !DILocalVariable(name: "work", arg: 1, scope: !13765, file: !3, line: 2413, type: !2826)
!13767 = !DILocation(line: 2413, column: 46, scope: !13765)
!13768 = !DILocalVariable(name: "cb", scope: !13765, file: !3, line: 2415, type: !5760)
!13769 = !DILocation(line: 2415, column: 19, scope: !13765)
!13770 = !DILocalVariable(name: "__mptr", scope: !13771, file: !3, line: 2415, type: !973)
!13771 = distinct !DILexicalBlock(scope: !13765, file: !3, line: 2415, column: 24)
!13772 = !DILocation(line: 2415, column: 24, scope: !13771)
!13773 = !DILocation(line: 2415, column: 24, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13771, file: !3, line: 2415, column: 24)
!13775 = !DILocalVariable(name: "shost", scope: !13765, file: !3, line: 2417, type: !5782)
!13776 = !DILocation(line: 2417, column: 20, scope: !13765)
!13777 = !DILocation(line: 2417, column: 28, scope: !13765)
!13778 = !DILocation(line: 2417, column: 32, scope: !13765)
!13779 = !DILocalVariable(name: "interval", scope: !13765, file: !3, line: 2418, type: !902)
!13780 = !DILocation(line: 2418, column: 16, scope: !13765)
!13781 = !DILocation(line: 2422, column: 6, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13765, file: !3, line: 2422, column: 6)
!13783 = !DILocation(line: 2422, column: 10, scope: !13782)
!13784 = !DILocation(line: 2422, column: 23, scope: !13782)
!13785 = !DILocation(line: 2422, column: 27, scope: !13782)
!13786 = !DILocation(line: 2422, column: 21, scope: !13782)
!13787 = !DILocation(line: 2422, column: 6, scope: !13765)
!13788 = !DILocalVariable(name: "event", scope: !13789, file: !3, line: 2423, type: !913)
!13789 = distinct !DILexicalBlock(scope: !13782, file: !3, line: 2422, column: 39)
!13790 = !DILocation(line: 2423, column: 7, scope: !13789)
!13791 = !DILocation(line: 2423, column: 15, scope: !13789)
!13792 = !DILocation(line: 2423, column: 19, scope: !13789)
!13793 = !DILocation(line: 2428, column: 18, scope: !13789)
!13794 = !DILocation(line: 2428, column: 22, scope: !13789)
!13795 = !DILocation(line: 2428, column: 3, scope: !13789)
!13796 = !DILocation(line: 2429, column: 20, scope: !13789)
!13797 = !DILocation(line: 2429, column: 26, scope: !13789)
!13798 = !DILocation(line: 2429, column: 3, scope: !13789)
!13799 = !DILocation(line: 2429, column: 7, scope: !13789)
!13800 = !DILocation(line: 2429, column: 18, scope: !13789)
!13801 = !DILocation(line: 2430, column: 12, scope: !13789)
!13802 = !DILocation(line: 2431, column: 2, scope: !13789)
!13803 = !DILocation(line: 2431, column: 13, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13782, file: !3, line: 2431, column: 13)
!13805 = !DILocation(line: 2431, column: 17, scope: !13804)
!13806 = !DILocation(line: 2431, column: 13, scope: !13782)
!13807 = !DILocation(line: 2432, column: 3, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 2431, column: 32)
!13809 = !DILocation(line: 2432, column: 7, scope: !13808)
!13810 = !DILocation(line: 2432, column: 21, scope: !13808)
!13811 = !DILocation(line: 2434, column: 21, scope: !13808)
!13812 = !DILocation(line: 2434, column: 3, scope: !13808)
!13813 = !DILocation(line: 2435, column: 12, scope: !13808)
!13814 = !DILocation(line: 2436, column: 2, scope: !13808)
!13815 = !DILocation(line: 2436, column: 13, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 2436, column: 13)
!13817 = !DILocation(line: 2436, column: 17, scope: !13816)
!13818 = !DILocation(line: 2436, column: 27, scope: !13816)
!13819 = !DILocation(line: 2436, column: 30, scope: !13816)
!13820 = !DILocation(line: 2436, column: 34, scope: !13816)
!13821 = !DILocation(line: 2436, column: 13, scope: !13804)
!13822 = !DILocation(line: 2437, column: 3, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 2436, column: 46)
!13824 = !DILocation(line: 2437, column: 7, scope: !13823)
!13825 = !DILocation(line: 2437, column: 17, scope: !13823)
!13826 = !DILocation(line: 2440, column: 29, scope: !13823)
!13827 = !DILocation(line: 2440, column: 3, scope: !13823)
!13828 = !DILocation(line: 2441, column: 12, scope: !13823)
!13829 = !DILocation(line: 2442, column: 2, scope: !13823)
!13830 = !DILocation(line: 2442, column: 13, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 2442, column: 13)
!13832 = !DILocation(line: 2442, column: 17, scope: !13831)
!13833 = !DILocation(line: 2442, column: 13, scope: !13816)
!13834 = !DILocation(line: 2443, column: 3, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13831, file: !3, line: 2442, column: 33)
!13836 = !DILocation(line: 2443, column: 7, scope: !13835)
!13837 = !DILocation(line: 2443, column: 22, scope: !13835)
!13838 = !DILocation(line: 2446, column: 22, scope: !13835)
!13839 = !DILocation(line: 2446, column: 3, scope: !13835)
!13840 = !DILocation(line: 2447, column: 12, scope: !13835)
!13841 = !DILocation(line: 2448, column: 2, scope: !13835)
!13842 = !DILocation(line: 2448, column: 13, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13831, file: !3, line: 2448, column: 13)
!13844 = !DILocation(line: 2448, column: 17, scope: !13843)
!13845 = !DILocation(line: 2448, column: 13, scope: !13831)
!13846 = !DILocation(line: 2449, column: 3, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13843, file: !3, line: 2448, column: 28)
!13848 = !DILocation(line: 2449, column: 7, scope: !13847)
!13849 = !DILocation(line: 2449, column: 17, scope: !13847)
!13850 = !DILocation(line: 2452, column: 29, scope: !13847)
!13851 = !DILocation(line: 2452, column: 3, scope: !13847)
!13852 = !DILocation(line: 2453, column: 12, scope: !13847)
!13853 = !DILocation(line: 2454, column: 2, scope: !13847)
!13854 = !DILocation(line: 2454, column: 13, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13843, file: !3, line: 2454, column: 13)
!13856 = !DILocation(line: 2454, column: 17, scope: !13855)
!13857 = !DILocation(line: 2454, column: 13, scope: !13843)
!13858 = !DILocation(line: 2455, column: 3, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 2454, column: 33)
!13860 = !DILocation(line: 2455, column: 7, scope: !13859)
!13861 = !DILocation(line: 2455, column: 22, scope: !13859)
!13862 = !DILocation(line: 2458, column: 24, scope: !13859)
!13863 = !DILocation(line: 2458, column: 3, scope: !13859)
!13864 = !DILocation(line: 2459, column: 12, scope: !13859)
!13865 = !DILocation(line: 2460, column: 2, scope: !13859)
!13866 = !DILocation(line: 2460, column: 13, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 2460, column: 13)
!13868 = !DILocation(line: 2460, column: 17, scope: !13867)
!13869 = !DILocation(line: 2460, column: 13, scope: !13855)
!13870 = !DILocation(line: 2461, column: 3, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 2460, column: 34)
!13872 = !DILocation(line: 2461, column: 7, scope: !13871)
!13873 = !DILocation(line: 2461, column: 23, scope: !13871)
!13874 = !DILocation(line: 2463, column: 20, scope: !13871)
!13875 = !DILocation(line: 2463, column: 3, scope: !13871)
!13876 = !DILocation(line: 2464, column: 12, scope: !13871)
!13877 = !DILocation(line: 2465, column: 2, scope: !13871)
!13878 = !DILocation(line: 2467, column: 15, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 2465, column: 9)
!13880 = !DILocation(line: 2467, column: 19, scope: !13879)
!13881 = !DILocation(line: 2467, column: 3, scope: !13879)
!13882 = !DILocation(line: 2468, column: 20, scope: !13879)
!13883 = !DILocation(line: 2468, column: 3, scope: !13879)
!13884 = !DILocation(line: 2469, column: 17, scope: !13879)
!13885 = !DILocation(line: 2469, column: 21, scope: !13879)
!13886 = !DILocation(line: 2469, column: 3, scope: !13879)
!13887 = !DILocation(line: 2470, column: 8, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13879, file: !3, line: 2470, column: 7)
!13889 = !DILocation(line: 2470, column: 12, scope: !13888)
!13890 = !DILocation(line: 2470, column: 25, scope: !13888)
!13891 = !DILocation(line: 2470, column: 29, scope: !13888)
!13892 = !DILocation(line: 2470, column: 23, scope: !13888)
!13893 = !DILocation(line: 2470, column: 40, scope: !13888)
!13894 = !DILocation(line: 2470, column: 45, scope: !13888)
!13895 = !DILocation(line: 2471, column: 7, scope: !13888)
!13896 = !DILocation(line: 2471, column: 11, scope: !13888)
!13897 = !DILocation(line: 2471, column: 25, scope: !13888)
!13898 = !DILocation(line: 2471, column: 28, scope: !13888)
!13899 = !DILocation(line: 2471, column: 32, scope: !13888)
!13900 = !DILocation(line: 2471, column: 42, scope: !13888)
!13901 = !DILocation(line: 2472, column: 7, scope: !13888)
!13902 = !DILocation(line: 2472, column: 11, scope: !13888)
!13903 = !DILocation(line: 2472, column: 26, scope: !13888)
!13904 = !DILocation(line: 2472, column: 29, scope: !13888)
!13905 = !DILocation(line: 2472, column: 33, scope: !13888)
!13906 = !DILocation(line: 2472, column: 48, scope: !13888)
!13907 = !DILocation(line: 2473, column: 7, scope: !13888)
!13908 = !DILocation(line: 2473, column: 11, scope: !13888)
!13909 = !DILocation(line: 2470, column: 7, scope: !13879)
!13910 = !DILocation(line: 2476, column: 13, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13888, file: !3, line: 2473, column: 28)
!13912 = !DILocation(line: 2477, column: 3, scope: !13911)
!13913 = !DILocation(line: 2479, column: 6, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13765, file: !3, line: 2479, column: 6)
!13915 = !DILocation(line: 2479, column: 15, scope: !13914)
!13916 = !DILocation(line: 2479, column: 6, scope: !13765)
!13917 = !DILocation(line: 2480, column: 30, scope: !13914)
!13918 = !DILocation(line: 2480, column: 3, scope: !13914)
!13919 = !DILocation(line: 2480, column: 7, scope: !13914)
!13920 = !DILocation(line: 2480, column: 28, scope: !13914)
!13921 = !DILocation(line: 2481, column: 21, scope: !13765)
!13922 = !DILocation(line: 2481, column: 25, scope: !13765)
!13923 = !DILocation(line: 2481, column: 34, scope: !13765)
!13924 = !DILocation(line: 2481, column: 38, scope: !13765)
!13925 = !DILocation(line: 2481, column: 52, scope: !13765)
!13926 = !DILocation(line: 2481, column: 2, scope: !13765)
!13927 = !DILocation(line: 2482, column: 1, scope: !13765)
!13928 = distinct !DISubprogram(name: "queue_delayed_work", scope: !845, file: !845, line: 518, type: !13929, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13929 = !DISubroutineType(types: !13930)
!13930 = !{!1262, !2829, !13931, !902}
!13931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!13932 = !DILocalVariable(name: "wq", arg: 1, scope: !13928, file: !845, line: 518, type: !2829)
!13933 = !DILocation(line: 518, column: 64, scope: !13928)
!13934 = !DILocalVariable(name: "dwork", arg: 2, scope: !13928, file: !845, line: 519, type: !13931)
!13935 = !DILocation(line: 519, column: 32, scope: !13928)
!13936 = !DILocalVariable(name: "delay", arg: 3, scope: !13928, file: !845, line: 520, type: !902)
!13937 = !DILocation(line: 520, column: 25, scope: !13928)
!13938 = !DILocation(line: 522, column: 49, scope: !13928)
!13939 = !DILocation(line: 522, column: 53, scope: !13928)
!13940 = !DILocation(line: 522, column: 60, scope: !13928)
!13941 = !DILocation(line: 522, column: 9, scope: !13928)
!13942 = !DILocation(line: 522, column: 2, scope: !13928)
!13943 = distinct !DISubprogram(name: "myrb_get_event", scope: !3, file: !3, line: 285, type: !13944, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!13944 = !DISubroutineType(types: !13945)
!13945 = !{null, !5760, !7}
!13946 = !DILocalVariable(name: "cb", arg: 1, scope: !13943, file: !3, line: 285, type: !5760)
!13947 = !DILocation(line: 285, column: 45, scope: !13943)
!13948 = !DILocalVariable(name: "event", arg: 2, scope: !13943, file: !3, line: 285, type: !7)
!13949 = !DILocation(line: 285, column: 62, scope: !13943)
!13950 = !DILocalVariable(name: "cmd_blk", scope: !13943, file: !3, line: 287, type: !6225)
!13951 = !DILocation(line: 287, column: 22, scope: !13943)
!13952 = !DILocation(line: 287, column: 33, scope: !13943)
!13953 = !DILocation(line: 287, column: 37, scope: !13943)
!13954 = !DILocalVariable(name: "mbox", scope: !13943, file: !3, line: 288, type: !6245)
!13955 = !DILocation(line: 288, column: 23, scope: !13943)
!13956 = !DILocation(line: 288, column: 31, scope: !13943)
!13957 = !DILocation(line: 288, column: 40, scope: !13943)
!13958 = !DILocalVariable(name: "ev_buf", scope: !13943, file: !3, line: 289, type: !13959)
!13959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13960, size: 64)
!13960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "myrb_log_entry", file: !164, line: 376, size: 256, elements: !13961)
!13961 = !{!13962, !13963, !13964, !13965, !13966, !13967, !13968, !13969}
!13962 = !DIDerivedType(tag: DW_TAG_member, name: "msg_type", scope: !13960, file: !164, line: 377, baseType: !165, size: 8)
!13963 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !13960, file: !164, line: 378, baseType: !165, size: 8, offset: 8)
!13964 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !13960, file: !164, line: 379, baseType: !165, size: 5, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!13965 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !13960, file: !164, line: 380, baseType: !165, size: 3, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!13966 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !13960, file: !164, line: 381, baseType: !165, size: 6, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!13967 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !13960, file: !164, line: 382, baseType: !165, size: 2, offset: 30, flags: DIFlagBitField, extraData: i64 16)
!13968 = !DIDerivedType(tag: DW_TAG_member, name: "seq_num", scope: !13960, file: !164, line: 383, baseType: !320, size: 16, offset: 32)
!13969 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !13960, file: !164, line: 384, baseType: !13970, size: 208, offset: 48)
!13970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 208, elements: !13971)
!13971 = !{!13972}
!13972 = !DISubrange(count: 26)
!13973 = !DILocation(line: 289, column: 25, scope: !13943)
!13974 = !DILocalVariable(name: "ev_addr", scope: !13943, file: !3, line: 290, type: !1761)
!13975 = !DILocation(line: 290, column: 13, scope: !13943)
!13976 = !DILocalVariable(name: "status", scope: !13943, file: !3, line: 291, type: !320)
!13977 = !DILocation(line: 291, column: 17, scope: !13943)
!13978 = !DILocation(line: 293, column: 31, scope: !13943)
!13979 = !DILocation(line: 293, column: 35, scope: !13943)
!13980 = !DILocation(line: 293, column: 41, scope: !13943)
!13981 = !DILocation(line: 293, column: 11, scope: !13943)
!13982 = !DILocation(line: 293, column: 9, scope: !13943)
!13983 = !DILocation(line: 296, column: 7, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13943, file: !3, line: 296, column: 6)
!13985 = !DILocation(line: 296, column: 6, scope: !13943)
!13986 = !DILocation(line: 297, column: 3, scope: !13984)
!13987 = !DILocation(line: 299, column: 17, scope: !13943)
!13988 = !DILocation(line: 299, column: 2, scope: !13943)
!13989 = !DILocation(line: 300, column: 2, scope: !13943)
!13990 = !DILocation(line: 300, column: 8, scope: !13943)
!13991 = !DILocation(line: 300, column: 15, scope: !13943)
!13992 = !DILocation(line: 300, column: 18, scope: !13943)
!13993 = !DILocation(line: 301, column: 2, scope: !13943)
!13994 = !DILocation(line: 301, column: 8, scope: !13943)
!13995 = !DILocation(line: 301, column: 15, scope: !13943)
!13996 = !DILocation(line: 301, column: 22, scope: !13943)
!13997 = !DILocation(line: 302, column: 2, scope: !13943)
!13998 = !DILocation(line: 302, column: 8, scope: !13943)
!13999 = !DILocation(line: 302, column: 15, scope: !13943)
!14000 = !DILocation(line: 302, column: 22, scope: !13943)
!14001 = !DILocation(line: 303, column: 2, scope: !13943)
!14002 = !DILocation(line: 303, column: 8, scope: !13943)
!14003 = !DILocation(line: 303, column: 15, scope: !13943)
!14004 = !DILocation(line: 303, column: 22, scope: !13943)
!14005 = !DILocation(line: 304, column: 24, scope: !13943)
!14006 = !DILocation(line: 304, column: 2, scope: !13943)
!14007 = !DILocation(line: 304, column: 8, scope: !13943)
!14008 = !DILocation(line: 304, column: 15, scope: !13943)
!14009 = !DILocation(line: 304, column: 22, scope: !13943)
!14010 = !DILocation(line: 305, column: 22, scope: !13943)
!14011 = !DILocation(line: 305, column: 2, scope: !13943)
!14012 = !DILocation(line: 305, column: 8, scope: !13943)
!14013 = !DILocation(line: 305, column: 15, scope: !13943)
!14014 = !DILocation(line: 305, column: 20, scope: !13943)
!14015 = !DILocation(line: 306, column: 25, scope: !13943)
!14016 = !DILocation(line: 306, column: 29, scope: !13943)
!14017 = !DILocation(line: 306, column: 11, scope: !13943)
!14018 = !DILocation(line: 306, column: 9, scope: !13943)
!14019 = !DILocation(line: 307, column: 6, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !13943, file: !3, line: 307, column: 6)
!14021 = !DILocation(line: 307, column: 13, scope: !14020)
!14022 = !DILocation(line: 307, column: 6, scope: !13943)
!14023 = !DILocation(line: 308, column: 3, scope: !14020)
!14024 = !DILocation(line: 312, column: 11, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14020, file: !3, line: 312, column: 11)
!14026 = !DILocation(line: 312, column: 19, scope: !14025)
!14027 = !DILocation(line: 312, column: 30, scope: !14025)
!14028 = !DILocation(line: 312, column: 27, scope: !14025)
!14029 = !DILocation(line: 312, column: 11, scope: !14020)
!14030 = !DILocalVariable(name: "sshdr", scope: !14031, file: !3, line: 313, type: !14032)
!14031 = distinct !DILexicalBlock(scope: !14025, file: !3, line: 312, column: 37)
!14032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_sense_hdr", file: !14033, line: 50, size: 64, elements: !14034)
!14033 = !DIFile(filename: "./include/scsi/scsi_common.h", directory: "/home/lizy2001/genbc/linux")
!14034 = !{!14035, !14036, !14037, !14038, !14039, !14040, !14041, !14042}
!14035 = !DIDerivedType(tag: DW_TAG_member, name: "response_code", scope: !14032, file: !14033, line: 51, baseType: !2184, size: 8)
!14036 = !DIDerivedType(tag: DW_TAG_member, name: "sense_key", scope: !14032, file: !14033, line: 52, baseType: !2184, size: 8, offset: 8)
!14037 = !DIDerivedType(tag: DW_TAG_member, name: "asc", scope: !14032, file: !14033, line: 53, baseType: !2184, size: 8, offset: 16)
!14038 = !DIDerivedType(tag: DW_TAG_member, name: "ascq", scope: !14032, file: !14033, line: 54, baseType: !2184, size: 8, offset: 24)
!14039 = !DIDerivedType(tag: DW_TAG_member, name: "byte4", scope: !14032, file: !14033, line: 55, baseType: !2184, size: 8, offset: 32)
!14040 = !DIDerivedType(tag: DW_TAG_member, name: "byte5", scope: !14032, file: !14033, line: 56, baseType: !2184, size: 8, offset: 40)
!14041 = !DIDerivedType(tag: DW_TAG_member, name: "byte6", scope: !14032, file: !14033, line: 57, baseType: !2184, size: 8, offset: 48)
!14042 = !DIDerivedType(tag: DW_TAG_member, name: "additional_length", scope: !14032, file: !14033, line: 58, baseType: !2184, size: 8, offset: 56)
!14043 = !DILocation(line: 313, column: 25, scope: !14031)
!14044 = !DILocation(line: 315, column: 3, scope: !14031)
!14045 = !DILocation(line: 316, column: 24, scope: !14031)
!14046 = !DILocation(line: 316, column: 32, scope: !14031)
!14047 = !DILocation(line: 316, column: 3, scope: !14031)
!14048 = !DILocation(line: 318, column: 13, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14031, file: !3, line: 318, column: 7)
!14050 = !DILocation(line: 318, column: 7, scope: !14049)
!14051 = !DILocation(line: 318, column: 23, scope: !14049)
!14052 = !DILocation(line: 318, column: 42, scope: !14049)
!14053 = !DILocation(line: 319, column: 13, scope: !14049)
!14054 = !DILocation(line: 319, column: 7, scope: !14049)
!14055 = !DILocation(line: 319, column: 17, scope: !14049)
!14056 = !DILocation(line: 319, column: 25, scope: !14049)
!14057 = !DILocation(line: 320, column: 13, scope: !14049)
!14058 = !DILocation(line: 320, column: 7, scope: !14049)
!14059 = !DILocation(line: 320, column: 18, scope: !14049)
!14060 = !DILocation(line: 318, column: 7, scope: !14031)
!14061 = !DILocation(line: 321, column: 4, scope: !14049)
!14062 = !DILocation(line: 326, column: 4, scope: !14049)
!14063 = !DILocation(line: 330, column: 2, scope: !14031)
!14064 = !DILocation(line: 332, column: 21, scope: !13943)
!14065 = !DILocation(line: 332, column: 25, scope: !13943)
!14066 = !DILocation(line: 332, column: 31, scope: !13943)
!14067 = !DILocation(line: 333, column: 6, scope: !13943)
!14068 = !DILocation(line: 333, column: 14, scope: !13943)
!14069 = !DILocation(line: 332, column: 2, scope: !13943)
!14070 = !DILocation(line: 334, column: 1, scope: !13943)
!14071 = distinct !DISubprogram(name: "myrb_get_errtable", scope: !3, file: !3, line: 341, type: !9700, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!14072 = !DILocalVariable(name: "cb", arg: 1, scope: !14071, file: !3, line: 341, type: !5760)
!14073 = !DILocation(line: 341, column: 48, scope: !14071)
!14074 = !DILocalVariable(name: "cmd_blk", scope: !14071, file: !3, line: 343, type: !6225)
!14075 = !DILocation(line: 343, column: 22, scope: !14071)
!14076 = !DILocation(line: 343, column: 33, scope: !14071)
!14077 = !DILocation(line: 343, column: 37, scope: !14071)
!14078 = !DILocalVariable(name: "mbox", scope: !14071, file: !3, line: 344, type: !6245)
!14079 = !DILocation(line: 344, column: 23, scope: !14071)
!14080 = !DILocation(line: 344, column: 31, scope: !14071)
!14081 = !DILocation(line: 344, column: 40, scope: !14071)
!14082 = !DILocalVariable(name: "status", scope: !14071, file: !3, line: 345, type: !320)
!14083 = !DILocation(line: 345, column: 17, scope: !14071)
!14084 = !DILocalVariable(name: "old_table", scope: !14071, file: !3, line: 346, type: !14085)
!14085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6285, size: 1536, elements: !997)
!14086 = !DILocation(line: 346, column: 26, scope: !14071)
!14087 = !DILocation(line: 348, column: 2, scope: !14071)
!14088 = !DILocation(line: 348, column: 21, scope: !14071)
!14089 = !DILocation(line: 348, column: 25, scope: !14071)
!14090 = !DILocation(line: 350, column: 17, scope: !14071)
!14091 = !DILocation(line: 350, column: 2, scope: !14071)
!14092 = !DILocation(line: 351, column: 2, scope: !14071)
!14093 = !DILocation(line: 351, column: 8, scope: !14071)
!14094 = !DILocation(line: 351, column: 14, scope: !14071)
!14095 = !DILocation(line: 351, column: 17, scope: !14071)
!14096 = !DILocation(line: 352, column: 2, scope: !14071)
!14097 = !DILocation(line: 352, column: 8, scope: !14071)
!14098 = !DILocation(line: 352, column: 14, scope: !14071)
!14099 = !DILocation(line: 352, column: 21, scope: !14071)
!14100 = !DILocation(line: 353, column: 21, scope: !14071)
!14101 = !DILocation(line: 353, column: 25, scope: !14071)
!14102 = !DILocation(line: 353, column: 2, scope: !14071)
!14103 = !DILocation(line: 353, column: 8, scope: !14071)
!14104 = !DILocation(line: 353, column: 14, scope: !14071)
!14105 = !DILocation(line: 353, column: 19, scope: !14071)
!14106 = !DILocation(line: 354, column: 25, scope: !14071)
!14107 = !DILocation(line: 354, column: 29, scope: !14071)
!14108 = !DILocation(line: 354, column: 11, scope: !14071)
!14109 = !DILocation(line: 354, column: 9, scope: !14071)
!14110 = !DILocation(line: 355, column: 6, scope: !14111)
!14111 = distinct !DILexicalBlock(scope: !14071, file: !3, line: 355, column: 6)
!14112 = !DILocation(line: 355, column: 13, scope: !14111)
!14113 = !DILocation(line: 355, column: 6, scope: !14071)
!14114 = !DILocalVariable(name: "table", scope: !14115, file: !3, line: 356, type: !6284)
!14115 = distinct !DILexicalBlock(scope: !14111, file: !3, line: 355, column: 37)
!14116 = !DILocation(line: 356, column: 28, scope: !14115)
!14117 = !DILocation(line: 356, column: 36, scope: !14115)
!14118 = !DILocation(line: 356, column: 40, scope: !14115)
!14119 = !DILocalVariable(name: "new", scope: !14115, file: !3, line: 357, type: !6284)
!14120 = !DILocation(line: 357, column: 28, scope: !14115)
!14121 = !DILocalVariable(name: "old", scope: !14115, file: !3, line: 357, type: !6284)
!14122 = !DILocation(line: 357, column: 34, scope: !14115)
!14123 = !DILocalVariable(name: "err_table_offset", scope: !14115, file: !3, line: 358, type: !1102)
!14124 = !DILocation(line: 358, column: 10, scope: !14115)
!14125 = !DILocalVariable(name: "sdev", scope: !14115, file: !3, line: 359, type: !5809)
!14126 = !DILocation(line: 359, column: 23, scope: !14115)
!14127 = !DILocation(line: 361, column: 3, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14115, file: !3, line: 361, column: 3)
!14129 = !DILocation(line: 361, column: 3, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14128, file: !3, line: 361, column: 3)
!14131 = !DILocation(line: 362, column: 8, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14133, file: !3, line: 362, column: 8)
!14133 = distinct !DILexicalBlock(scope: !14130, file: !3, line: 361, column: 41)
!14134 = !DILocation(line: 362, column: 14, scope: !14132)
!14135 = !DILocation(line: 362, column: 46, scope: !14132)
!14136 = !DILocation(line: 362, column: 50, scope: !14132)
!14137 = !DILocation(line: 362, column: 25, scope: !14132)
!14138 = !DILocation(line: 362, column: 22, scope: !14132)
!14139 = !DILocation(line: 362, column: 8, scope: !14133)
!14140 = !DILocation(line: 363, column: 5, scope: !14132)
!14141 = !DILocation(line: 364, column: 23, scope: !14133)
!14142 = !DILocation(line: 364, column: 29, scope: !14133)
!14143 = !DILocation(line: 364, column: 37, scope: !14133)
!14144 = !DILocation(line: 365, column: 7, scope: !14133)
!14145 = !DILocation(line: 365, column: 13, scope: !14133)
!14146 = !DILocation(line: 365, column: 5, scope: !14133)
!14147 = !DILocation(line: 364, column: 21, scope: !14133)
!14148 = !DILocation(line: 366, column: 10, scope: !14133)
!14149 = !DILocation(line: 366, column: 18, scope: !14133)
!14150 = !DILocation(line: 366, column: 16, scope: !14133)
!14151 = !DILocation(line: 366, column: 8, scope: !14133)
!14152 = !DILocation(line: 367, column: 21, scope: !14133)
!14153 = !DILocation(line: 367, column: 11, scope: !14133)
!14154 = !DILocation(line: 367, column: 8, scope: !14133)
!14155 = !DILocation(line: 368, column: 8, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14133, file: !3, line: 368, column: 8)
!14157 = !DILocation(line: 368, column: 13, scope: !14156)
!14158 = !DILocation(line: 368, column: 27, scope: !14156)
!14159 = !DILocation(line: 368, column: 32, scope: !14156)
!14160 = !DILocation(line: 368, column: 24, scope: !14156)
!14161 = !DILocation(line: 368, column: 43, scope: !14156)
!14162 = !DILocation(line: 369, column: 8, scope: !14156)
!14163 = !DILocation(line: 369, column: 13, scope: !14156)
!14164 = !DILocation(line: 369, column: 25, scope: !14156)
!14165 = !DILocation(line: 369, column: 30, scope: !14156)
!14166 = !DILocation(line: 369, column: 22, scope: !14156)
!14167 = !DILocation(line: 369, column: 39, scope: !14156)
!14168 = !DILocation(line: 370, column: 8, scope: !14156)
!14169 = !DILocation(line: 370, column: 13, scope: !14156)
!14170 = !DILocation(line: 370, column: 25, scope: !14156)
!14171 = !DILocation(line: 370, column: 30, scope: !14156)
!14172 = !DILocation(line: 370, column: 22, scope: !14156)
!14173 = !DILocation(line: 370, column: 39, scope: !14156)
!14174 = !DILocation(line: 371, column: 8, scope: !14156)
!14175 = !DILocation(line: 371, column: 13, scope: !14156)
!14176 = !DILocation(line: 371, column: 25, scope: !14156)
!14177 = !DILocation(line: 371, column: 30, scope: !14156)
!14178 = !DILocation(line: 371, column: 22, scope: !14156)
!14179 = !DILocation(line: 368, column: 8, scope: !14133)
!14180 = !DILocation(line: 372, column: 5, scope: !14156)
!14181 = !DILocation(line: 373, column: 4, scope: !14133)
!14182 = !DILocation(line: 377, column: 3, scope: !14133)
!14183 = distinct !{!14183, !14127, !14184}
!14184 = !DILocation(line: 377, column: 3, scope: !14128)
!14185 = !DILocation(line: 378, column: 2, scope: !14115)
!14186 = !DILocation(line: 379, column: 1, scope: !14071)
!14187 = distinct !DISubprogram(name: "myrb_update_rbld_progress", scope: !3, file: !3, line: 472, type: !9700, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!14188 = !DILocalVariable(name: "cb", arg: 1, scope: !14187, file: !3, line: 472, type: !5760)
!14189 = !DILocation(line: 472, column: 56, scope: !14187)
!14190 = !DILocalVariable(name: "rbld_buf", scope: !14187, file: !3, line: 474, type: !12245)
!14191 = !DILocation(line: 474, column: 28, scope: !14187)
!14192 = !DILocalVariable(name: "status", scope: !14187, file: !3, line: 475, type: !320)
!14193 = !DILocation(line: 475, column: 17, scope: !14187)
!14194 = !DILocation(line: 477, column: 34, scope: !14187)
!14195 = !DILocation(line: 477, column: 11, scope: !14187)
!14196 = !DILocation(line: 477, column: 9, scope: !14187)
!14197 = !DILocation(line: 478, column: 6, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14187, file: !3, line: 478, column: 6)
!14199 = !DILocation(line: 478, column: 13, scope: !14198)
!14200 = !DILocation(line: 478, column: 56, scope: !14198)
!14201 = !DILocation(line: 479, column: 6, scope: !14198)
!14202 = !DILocation(line: 479, column: 10, scope: !14198)
!14203 = !DILocation(line: 479, column: 27, scope: !14198)
!14204 = !DILocation(line: 478, column: 6, scope: !14187)
!14205 = !DILocation(line: 480, column: 10, scope: !14198)
!14206 = !DILocation(line: 480, column: 3, scope: !14198)
!14207 = !DILocation(line: 481, column: 6, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14187, file: !3, line: 481, column: 6)
!14209 = !DILocation(line: 481, column: 13, scope: !14208)
!14210 = !DILocation(line: 481, column: 6, scope: !14187)
!14211 = !DILocalVariable(name: "blocks_done", scope: !14212, file: !3, line: 482, type: !7)
!14212 = distinct !DILexicalBlock(scope: !14208, file: !3, line: 481, column: 57)
!14213 = !DILocation(line: 482, column: 16, scope: !14212)
!14214 = !DILocation(line: 483, column: 13, scope: !14212)
!14215 = !DILocation(line: 483, column: 34, scope: !14212)
!14216 = !DILocation(line: 483, column: 23, scope: !14212)
!14217 = !DILocalVariable(name: "sdev", scope: !14212, file: !3, line: 484, type: !5809)
!14218 = !DILocation(line: 484, column: 23, scope: !14212)
!14219 = !DILocation(line: 486, column: 29, scope: !14212)
!14220 = !DILocation(line: 486, column: 33, scope: !14212)
!14221 = !DILocation(line: 487, column: 29, scope: !14212)
!14222 = !DILocation(line: 487, column: 33, scope: !14212)
!14223 = !DILocation(line: 487, column: 8, scope: !14212)
!14224 = !DILocation(line: 488, column: 17, scope: !14212)
!14225 = !DILocation(line: 486, column: 10, scope: !14212)
!14226 = !DILocation(line: 486, column: 8, scope: !14212)
!14227 = !DILocation(line: 489, column: 8, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14212, file: !3, line: 489, column: 7)
!14229 = !DILocation(line: 489, column: 7, scope: !14212)
!14230 = !DILocation(line: 490, column: 4, scope: !14228)
!14231 = !DILocation(line: 492, column: 11, scope: !14212)
!14232 = !DILocation(line: 492, column: 3, scope: !14212)
!14233 = !DILocation(line: 494, column: 4, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14212, file: !3, line: 492, column: 19)
!14235 = !DILocation(line: 498, column: 4, scope: !14234)
!14236 = !DILocation(line: 500, column: 4, scope: !14234)
!14237 = !DILocation(line: 502, column: 4, scope: !14234)
!14238 = !DILocation(line: 504, column: 4, scope: !14234)
!14239 = !DILocation(line: 506, column: 4, scope: !14234)
!14240 = !DILocation(line: 508, column: 4, scope: !14234)
!14241 = !DILocation(line: 510, column: 4, scope: !14234)
!14242 = !DILocation(line: 512, column: 4, scope: !14234)
!14243 = !DILocation(line: 514, column: 4, scope: !14234)
!14244 = !DILocation(line: 516, column: 4, scope: !14234)
!14245 = !DILocation(line: 518, column: 4, scope: !14234)
!14246 = !DILocation(line: 520, column: 4, scope: !14234)
!14247 = !DILocation(line: 522, column: 19, scope: !14212)
!14248 = !DILocation(line: 522, column: 3, scope: !14212)
!14249 = !DILocation(line: 523, column: 2, scope: !14212)
!14250 = !DILocation(line: 524, column: 25, scope: !14187)
!14251 = !DILocation(line: 524, column: 2, scope: !14187)
!14252 = !DILocation(line: 524, column: 6, scope: !14187)
!14253 = !DILocation(line: 524, column: 23, scope: !14187)
!14254 = !DILocation(line: 525, column: 1, scope: !14187)
!14255 = distinct !DISubprogram(name: "myrb_get_cc_progress", scope: !3, file: !3, line: 533, type: !9700, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!14256 = !DILocalVariable(name: "cb", arg: 1, scope: !14255, file: !3, line: 533, type: !5760)
!14257 = !DILocation(line: 533, column: 51, scope: !14255)
!14258 = !DILocalVariable(name: "cmd_blk", scope: !14255, file: !3, line: 535, type: !6225)
!14259 = !DILocation(line: 535, column: 22, scope: !14255)
!14260 = !DILocation(line: 535, column: 33, scope: !14255)
!14261 = !DILocation(line: 535, column: 37, scope: !14255)
!14262 = !DILocalVariable(name: "mbox", scope: !14255, file: !3, line: 536, type: !6245)
!14263 = !DILocation(line: 536, column: 23, scope: !14255)
!14264 = !DILocation(line: 536, column: 31, scope: !14255)
!14265 = !DILocation(line: 536, column: 40, scope: !14255)
!14266 = !DILocalVariable(name: "rbld_buf", scope: !14255, file: !3, line: 537, type: !12494)
!14267 = !DILocation(line: 537, column: 29, scope: !14255)
!14268 = !DILocalVariable(name: "rbld_addr", scope: !14255, file: !3, line: 538, type: !1761)
!14269 = !DILocation(line: 538, column: 13, scope: !14255)
!14270 = !DILocalVariable(name: "status", scope: !14255, file: !3, line: 539, type: !320)
!14271 = !DILocation(line: 539, column: 17, scope: !14255)
!14272 = !DILocation(line: 541, column: 33, scope: !14255)
!14273 = !DILocation(line: 541, column: 37, scope: !14255)
!14274 = !DILocation(line: 541, column: 43, scope: !14255)
!14275 = !DILocation(line: 541, column: 13, scope: !14255)
!14276 = !DILocation(line: 541, column: 11, scope: !14255)
!14277 = !DILocation(line: 544, column: 7, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14255, file: !3, line: 544, column: 6)
!14279 = !DILocation(line: 544, column: 6, scope: !14255)
!14280 = !DILocation(line: 545, column: 3, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14278, file: !3, line: 544, column: 17)
!14282 = !DILocation(line: 545, column: 7, scope: !14281)
!14283 = !DILocation(line: 545, column: 22, scope: !14281)
!14284 = !DILocation(line: 546, column: 3, scope: !14281)
!14285 = !DILocation(line: 548, column: 17, scope: !14255)
!14286 = !DILocation(line: 548, column: 2, scope: !14255)
!14287 = !DILocation(line: 549, column: 2, scope: !14255)
!14288 = !DILocation(line: 549, column: 8, scope: !14255)
!14289 = !DILocation(line: 549, column: 14, scope: !14255)
!14290 = !DILocation(line: 549, column: 17, scope: !14255)
!14291 = !DILocation(line: 550, column: 2, scope: !14255)
!14292 = !DILocation(line: 550, column: 8, scope: !14255)
!14293 = !DILocation(line: 550, column: 14, scope: !14255)
!14294 = !DILocation(line: 550, column: 21, scope: !14255)
!14295 = !DILocation(line: 551, column: 21, scope: !14255)
!14296 = !DILocation(line: 551, column: 2, scope: !14255)
!14297 = !DILocation(line: 551, column: 8, scope: !14255)
!14298 = !DILocation(line: 551, column: 14, scope: !14255)
!14299 = !DILocation(line: 551, column: 19, scope: !14255)
!14300 = !DILocation(line: 552, column: 25, scope: !14255)
!14301 = !DILocation(line: 552, column: 29, scope: !14255)
!14302 = !DILocation(line: 552, column: 11, scope: !14255)
!14303 = !DILocation(line: 552, column: 9, scope: !14255)
!14304 = !DILocation(line: 553, column: 6, scope: !14305)
!14305 = distinct !DILexicalBlock(scope: !14255, file: !3, line: 553, column: 6)
!14306 = !DILocation(line: 553, column: 13, scope: !14305)
!14307 = !DILocation(line: 553, column: 6, scope: !14255)
!14308 = !DILocalVariable(name: "ldev_num", scope: !14309, file: !3, line: 554, type: !7)
!14309 = distinct !DILexicalBlock(scope: !14305, file: !3, line: 553, column: 37)
!14310 = !DILocation(line: 554, column: 16, scope: !14309)
!14311 = !DILocation(line: 554, column: 27, scope: !14309)
!14312 = !DILocation(line: 554, column: 37, scope: !14309)
!14313 = !DILocalVariable(name: "ldev_size", scope: !14309, file: !3, line: 555, type: !7)
!14314 = !DILocation(line: 555, column: 16, scope: !14309)
!14315 = !DILocation(line: 555, column: 28, scope: !14309)
!14316 = !DILocation(line: 555, column: 38, scope: !14309)
!14317 = !DILocalVariable(name: "blocks_done", scope: !14309, file: !3, line: 556, type: !7)
!14318 = !DILocation(line: 556, column: 16, scope: !14309)
!14319 = !DILocation(line: 557, column: 4, scope: !14309)
!14320 = !DILocation(line: 557, column: 16, scope: !14309)
!14321 = !DILocation(line: 557, column: 26, scope: !14309)
!14322 = !DILocation(line: 557, column: 14, scope: !14309)
!14323 = !DILocalVariable(name: "sdev", scope: !14309, file: !3, line: 558, type: !5809)
!14324 = !DILocation(line: 558, column: 23, scope: !14309)
!14325 = !DILocation(line: 560, column: 29, scope: !14309)
!14326 = !DILocation(line: 560, column: 33, scope: !14309)
!14327 = !DILocation(line: 561, column: 29, scope: !14309)
!14328 = !DILocation(line: 561, column: 33, scope: !14309)
!14329 = !DILocation(line: 561, column: 8, scope: !14309)
!14330 = !DILocation(line: 562, column: 8, scope: !14309)
!14331 = !DILocation(line: 560, column: 10, scope: !14309)
!14332 = !DILocation(line: 560, column: 8, scope: !14309)
!14333 = !DILocation(line: 563, column: 7, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14309, file: !3, line: 563, column: 7)
!14335 = !DILocation(line: 563, column: 7, scope: !14309)
!14336 = !DILocation(line: 564, column: 4, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14334, file: !3, line: 563, column: 13)
!14338 = !DILocation(line: 568, column: 20, scope: !14337)
!14339 = !DILocation(line: 568, column: 4, scope: !14337)
!14340 = !DILocation(line: 569, column: 3, scope: !14337)
!14341 = !DILocation(line: 570, column: 2, scope: !14309)
!14342 = !DILocation(line: 571, column: 21, scope: !14255)
!14343 = !DILocation(line: 571, column: 25, scope: !14255)
!14344 = !DILocation(line: 571, column: 31, scope: !14255)
!14345 = !DILocation(line: 572, column: 6, scope: !14255)
!14346 = !DILocation(line: 572, column: 16, scope: !14255)
!14347 = !DILocation(line: 571, column: 2, scope: !14255)
!14348 = !DILocation(line: 573, column: 1, scope: !14255)
!14349 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !916, file: !916, line: 1865, type: !14350, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!14350 = !DISubroutineType(types: !14351)
!14351 = !{!973, !914}
!14352 = !DILocalVariable(name: "pdev", arg: 1, scope: !14349, file: !916, line: 1865, type: !914)
!14353 = !DILocation(line: 1865, column: 53, scope: !14349)
!14354 = !DILocation(line: 1867, column: 26, scope: !14349)
!14355 = !DILocation(line: 1867, column: 32, scope: !14349)
!14356 = !DILocation(line: 1867, column: 9, scope: !14349)
!14357 = !DILocation(line: 1867, column: 2, scope: !14349)
!14358 = distinct !DISubprogram(name: "myrb_is_raid", scope: !3, file: !3, line: 2249, type: !5156, scopeLine: 2250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!14359 = !DILocalVariable(name: "dev", arg: 1, scope: !14358, file: !3, line: 2249, type: !1003)
!14360 = !DILocation(line: 2249, column: 40, scope: !14358)
!14361 = !DILocalVariable(name: "sdev", scope: !14358, file: !3, line: 2251, type: !5809)
!14362 = !DILocation(line: 2251, column: 22, scope: !14358)
!14363 = !DILocalVariable(name: "__mptr", scope: !14364, file: !3, line: 2251, type: !973)
!14364 = distinct !DILexicalBlock(scope: !14358, file: !3, line: 2251, column: 29)
!14365 = !DILocation(line: 2251, column: 29, scope: !14364)
!14366 = !DILocation(line: 2251, column: 29, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14364, file: !3, line: 2251, column: 29)
!14368 = !DILocation(line: 2253, column: 9, scope: !14358)
!14369 = !DILocation(line: 2253, column: 15, scope: !14358)
!14370 = !DILocation(line: 2253, column: 47, scope: !14358)
!14371 = !DILocation(line: 2253, column: 53, scope: !14358)
!14372 = !DILocation(line: 2253, column: 26, scope: !14358)
!14373 = !DILocation(line: 2253, column: 23, scope: !14358)
!14374 = !DILocation(line: 2253, column: 2, scope: !14358)
!14375 = distinct !DISubprogram(name: "myrb_get_resync", scope: !3, file: !3, line: 2260, type: !5147, scopeLine: 2261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!14376 = !DILocalVariable(name: "dev", arg: 1, scope: !14375, file: !3, line: 2260, type: !1003)
!14377 = !DILocation(line: 2260, column: 44, scope: !14375)
!14378 = !DILocalVariable(name: "sdev", scope: !14375, file: !3, line: 2262, type: !5809)
!14379 = !DILocation(line: 2262, column: 22, scope: !14375)
!14380 = !DILocalVariable(name: "__mptr", scope: !14381, file: !3, line: 2262, type: !973)
!14381 = distinct !DILexicalBlock(scope: !14375, file: !3, line: 2262, column: 29)
!14382 = !DILocation(line: 2262, column: 29, scope: !14381)
!14383 = !DILocation(line: 2262, column: 29, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14381, file: !3, line: 2262, column: 29)
!14385 = !DILocalVariable(name: "cb", scope: !14375, file: !3, line: 2263, type: !5760)
!14386 = !DILocation(line: 2263, column: 19, scope: !14375)
!14387 = !DILocation(line: 2263, column: 35, scope: !14375)
!14388 = !DILocation(line: 2263, column: 41, scope: !14375)
!14389 = !DILocation(line: 2263, column: 24, scope: !14375)
!14390 = !DILocalVariable(name: "rbld_buf", scope: !14375, file: !3, line: 2264, type: !12245)
!14391 = !DILocation(line: 2264, column: 28, scope: !14375)
!14392 = !DILocalVariable(name: "percent_complete", scope: !14375, file: !3, line: 2265, type: !7)
!14393 = !DILocation(line: 2265, column: 15, scope: !14375)
!14394 = !DILocalVariable(name: "status", scope: !14375, file: !3, line: 2266, type: !320)
!14395 = !DILocation(line: 2266, column: 17, scope: !14375)
!14396 = !DILocalVariable(name: "ldev_size", scope: !14375, file: !3, line: 2267, type: !7)
!14397 = !DILocation(line: 2267, column: 15, scope: !14375)
!14398 = !DILocalVariable(name: "remaining", scope: !14375, file: !3, line: 2267, type: !7)
!14399 = !DILocation(line: 2267, column: 30, scope: !14375)
!14400 = !DILocation(line: 2269, column: 6, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14375, file: !3, line: 2269, column: 6)
!14402 = !DILocation(line: 2269, column: 12, scope: !14401)
!14403 = !DILocation(line: 2269, column: 43, scope: !14401)
!14404 = !DILocation(line: 2269, column: 49, scope: !14401)
!14405 = !DILocation(line: 2269, column: 22, scope: !14401)
!14406 = !DILocation(line: 2269, column: 20, scope: !14401)
!14407 = !DILocation(line: 2269, column: 6, scope: !14375)
!14408 = !DILocation(line: 2270, column: 3, scope: !14401)
!14409 = !DILocation(line: 2271, column: 34, scope: !14375)
!14410 = !DILocation(line: 2271, column: 11, scope: !14375)
!14411 = !DILocation(line: 2271, column: 9, scope: !14375)
!14412 = !DILocation(line: 2272, column: 6, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14375, file: !3, line: 2272, column: 6)
!14414 = !DILocation(line: 2272, column: 13, scope: !14413)
!14415 = !DILocation(line: 2272, column: 6, scope: !14375)
!14416 = !DILocation(line: 2273, column: 16, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14418, file: !3, line: 2273, column: 7)
!14418 = distinct !DILexicalBlock(scope: !14413, file: !3, line: 2272, column: 37)
!14419 = !DILocation(line: 2273, column: 28, scope: !14417)
!14420 = !DILocation(line: 2273, column: 34, scope: !14417)
!14421 = !DILocation(line: 2273, column: 25, scope: !14417)
!14422 = !DILocation(line: 2273, column: 7, scope: !14418)
!14423 = !DILocation(line: 2274, column: 25, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 2273, column: 38)
!14425 = !DILocation(line: 2274, column: 14, scope: !14424)
!14426 = !DILocation(line: 2275, column: 25, scope: !14424)
!14427 = !DILocation(line: 2275, column: 14, scope: !14424)
!14428 = !DILocation(line: 2276, column: 3, scope: !14424)
!14429 = !DILocation(line: 2277, column: 2, scope: !14418)
!14430 = !DILocation(line: 2278, column: 6, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14375, file: !3, line: 2278, column: 6)
!14432 = !DILocation(line: 2278, column: 16, scope: !14431)
!14433 = !DILocation(line: 2278, column: 19, scope: !14431)
!14434 = !DILocation(line: 2278, column: 6, scope: !14375)
!14435 = !DILocation(line: 2279, column: 23, scope: !14431)
!14436 = !DILocation(line: 2279, column: 35, scope: !14431)
!14437 = !DILocation(line: 2279, column: 33, scope: !14431)
!14438 = !DILocation(line: 2279, column: 46, scope: !14431)
!14439 = !DILocation(line: 2279, column: 54, scope: !14431)
!14440 = !DILocation(line: 2279, column: 52, scope: !14431)
!14441 = !DILocation(line: 2279, column: 20, scope: !14431)
!14442 = !DILocation(line: 2279, column: 3, scope: !14431)
!14443 = !DILocation(line: 2280, column: 18, scope: !14375)
!14444 = !DILocation(line: 2280, column: 38, scope: !14375)
!14445 = !DILocation(line: 2280, column: 43, scope: !14375)
!14446 = !DILocation(line: 2280, column: 2, scope: !14375)
!14447 = !DILocation(line: 2281, column: 1, scope: !14375)
!14448 = distinct !DISubprogram(name: "myrb_get_state", scope: !3, file: !3, line: 2287, type: !5147, scopeLine: 2288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!14449 = !DILocalVariable(name: "dev", arg: 1, scope: !14448, file: !3, line: 2287, type: !1003)
!14450 = !DILocation(line: 2287, column: 43, scope: !14448)
!14451 = !DILocalVariable(name: "sdev", scope: !14448, file: !3, line: 2289, type: !5809)
!14452 = !DILocation(line: 2289, column: 22, scope: !14448)
!14453 = !DILocalVariable(name: "__mptr", scope: !14454, file: !3, line: 2289, type: !973)
!14454 = distinct !DILexicalBlock(scope: !14448, file: !3, line: 2289, column: 29)
!14455 = !DILocation(line: 2289, column: 29, scope: !14454)
!14456 = !DILocation(line: 2289, column: 29, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14454, file: !3, line: 2289, column: 29)
!14458 = !DILocalVariable(name: "cb", scope: !14448, file: !3, line: 2290, type: !5760)
!14459 = !DILocation(line: 2290, column: 19, scope: !14448)
!14460 = !DILocation(line: 2290, column: 35, scope: !14448)
!14461 = !DILocation(line: 2290, column: 41, scope: !14448)
!14462 = !DILocation(line: 2290, column: 24, scope: !14448)
!14463 = !DILocalVariable(name: "ldev_info", scope: !14448, file: !3, line: 2291, type: !6294)
!14464 = !DILocation(line: 2291, column: 25, scope: !14448)
!14465 = !DILocation(line: 2291, column: 37, scope: !14448)
!14466 = !DILocation(line: 2291, column: 43, scope: !14448)
!14467 = !DILocalVariable(name: "state", scope: !14448, file: !3, line: 2292, type: !587)
!14468 = !DILocation(line: 2292, column: 18, scope: !14448)
!14469 = !DILocalVariable(name: "status", scope: !14448, file: !3, line: 2293, type: !320)
!14470 = !DILocation(line: 2293, column: 17, scope: !14448)
!14471 = !DILocation(line: 2295, column: 6, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14448, file: !3, line: 2295, column: 6)
!14473 = !DILocation(line: 2295, column: 12, scope: !14472)
!14474 = !DILocation(line: 2295, column: 43, scope: !14472)
!14475 = !DILocation(line: 2295, column: 49, scope: !14472)
!14476 = !DILocation(line: 2295, column: 22, scope: !14472)
!14477 = !DILocation(line: 2295, column: 20, scope: !14472)
!14478 = !DILocation(line: 2295, column: 55, scope: !14472)
!14479 = !DILocation(line: 2295, column: 59, scope: !14472)
!14480 = !DILocation(line: 2295, column: 6, scope: !14448)
!14481 = !DILocation(line: 2296, column: 9, scope: !14472)
!14482 = !DILocation(line: 2296, column: 3, scope: !14472)
!14483 = !DILocation(line: 2298, column: 35, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14472, file: !3, line: 2297, column: 7)
!14485 = !DILocation(line: 2298, column: 12, scope: !14484)
!14486 = !DILocation(line: 2298, column: 10, scope: !14484)
!14487 = !DILocation(line: 2299, column: 7, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14484, file: !3, line: 2299, column: 7)
!14489 = !DILocation(line: 2299, column: 14, scope: !14488)
!14490 = !DILocation(line: 2299, column: 7, scope: !14484)
!14491 = !DILocation(line: 2300, column: 10, scope: !14488)
!14492 = !DILocation(line: 2300, column: 4, scope: !14488)
!14493 = !DILocation(line: 2302, column: 12, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14488, file: !3, line: 2301, column: 8)
!14495 = !DILocation(line: 2302, column: 23, scope: !14494)
!14496 = !DILocation(line: 2302, column: 4, scope: !14494)
!14497 = !DILocation(line: 2304, column: 11, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14494, file: !3, line: 2302, column: 30)
!14499 = !DILocation(line: 2305, column: 5, scope: !14498)
!14500 = !DILocation(line: 2308, column: 11, scope: !14498)
!14501 = !DILocation(line: 2309, column: 5, scope: !14498)
!14502 = !DILocation(line: 2311, column: 11, scope: !14498)
!14503 = !DILocation(line: 2312, column: 4, scope: !14498)
!14504 = !DILocation(line: 2315, column: 17, scope: !14448)
!14505 = !DILocation(line: 2315, column: 37, scope: !14448)
!14506 = !DILocation(line: 2315, column: 42, scope: !14448)
!14507 = !DILocation(line: 2315, column: 2, scope: !14448)
!14508 = !DILocation(line: 2316, column: 1, scope: !14448)
!14509 = distinct !DISubprogram(name: "raid_set_resync", scope: !566, file: !566, line: 75, type: !14510, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!14510 = !DISubroutineType(types: !14511)
!14511 = !{null, !6353, !1003, !913}
!14512 = !DILocalVariable(name: "r", arg: 1, scope: !14509, file: !566, line: 75, type: !6353)
!14513 = !DILocation(line: 75, column: 1, scope: !14509)
!14514 = !DILocalVariable(name: "dev", arg: 2, scope: !14509, file: !566, line: 75, type: !1003)
!14515 = !DILocalVariable(name: "value", arg: 3, scope: !14509, file: !566, line: 75, type: !913)
!14516 = !DILocalVariable(name: "device", scope: !14509, file: !566, line: 75, type: !1003)
!14517 = !DILocalVariable(name: "rd", scope: !14509, file: !566, line: 75, type: !11579)
!14518 = !DILocation(line: 75, column: 1, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14520, file: !566, line: 75, column: 1)
!14520 = distinct !DILexicalBlock(scope: !14509, file: !566, line: 75, column: 1)
!14521 = !DILocation(line: 75, column: 1, scope: !14520)
!14522 = !DILocation(line: 75, column: 1, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14519, file: !566, line: 75, column: 1)
!14524 = !DILocation(line: 75, column: 1, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14523, file: !566, line: 75, column: 1)
!14526 = !DILocation(line: 75, column: 1, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14523, file: !566, line: 75, column: 1)
!14528 = !{i32 -2141639236, i32 -2141639207, i32 -2141639161, i32 -2141639103, i32 -2141639049, i32 -2141638995, i32 -2141638940, i32 -2141638909}
!14529 = !DILocation(line: 75, column: 1, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14531, file: !566, line: 75, column: 1)
!14531 = distinct !DILexicalBlock(scope: !14523, file: !566, line: 75, column: 1)
!14532 = !{i32 -2141638461, i32 -2141638454, i32 -2141638400, i32 -2141638369, i32 -2141638339}
!14533 = !DILocation(line: 75, column: 1, scope: !14531)
!14534 = distinct !DISubprogram(name: "raid_set_state", scope: !566, file: !566, line: 76, type: !14535, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1034)
!14535 = !DISubroutineType(types: !14536)
!14536 = !{null, !6353, !1003, !587}
!14537 = !DILocalVariable(name: "r", arg: 1, scope: !14534, file: !566, line: 76, type: !6353)
!14538 = !DILocation(line: 76, column: 1, scope: !14534)
!14539 = !DILocalVariable(name: "dev", arg: 2, scope: !14534, file: !566, line: 76, type: !1003)
!14540 = !DILocalVariable(name: "value", arg: 3, scope: !14534, file: !566, line: 76, type: !587)
!14541 = !DILocalVariable(name: "device", scope: !14534, file: !566, line: 76, type: !1003)
!14542 = !DILocalVariable(name: "rd", scope: !14534, file: !566, line: 76, type: !11579)
!14543 = !DILocation(line: 76, column: 1, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14545, file: !566, line: 76, column: 1)
!14545 = distinct !DILexicalBlock(scope: !14534, file: !566, line: 76, column: 1)
!14546 = !DILocation(line: 76, column: 1, scope: !14545)
!14547 = !DILocation(line: 76, column: 1, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14544, file: !566, line: 76, column: 1)
!14549 = !DILocation(line: 76, column: 1, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14548, file: !566, line: 76, column: 1)
!14551 = !DILocation(line: 76, column: 1, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14548, file: !566, line: 76, column: 1)
!14553 = !{i32 -2141635700, i32 -2141635671, i32 -2141635625, i32 -2141635567, i32 -2141635513, i32 -2141635459, i32 -2141635404, i32 -2141635373}
!14554 = !DILocation(line: 76, column: 1, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14556, file: !566, line: 76, column: 1)
!14556 = distinct !DILexicalBlock(scope: !14548, file: !566, line: 76, column: 1)
!14557 = !{i32 -2141634925, i32 -2141634918, i32 -2141634864, i32 -2141634833, i32 -2141634803}
!14558 = !DILocation(line: 76, column: 1, scope: !14556)
