; ModuleID = '../bcout/drivers/scsi/scsi_lib.llvm.bc'
source_filename = "drivers/scsi/scsi_lib.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kmem_cache = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_hw_ctx = type { %struct.anon.11, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.11 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.workqueue_struct = type opaque
%struct.cpumask = type { [1 x i64] }
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.12, %union.anon.13, %union.anon.14, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.19, void (%struct.request*, i8)*, i8* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.10, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.10 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.page = type { i64, %union.anon.1, %union.anon.49, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.72, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.73, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.74, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.75, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.file = type { %union.anon.3, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.3 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.module = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.25 }
%union.anon.25 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.0, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type opaque
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.67, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.50 }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.28, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.29, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.30, %union.anon.34, %struct.key_restriction* }
%union.anon.28 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.29 = type { i64 }
%union.anon.30 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.31, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.31 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.34 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.16, %union.anon.17, i32 }
%union.anon.16 = type { %struct.list_head }
%union.anon.17 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.55 }
%struct.anon.55 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.66, i32, [12 x i8] }
%union.anon.66 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.67 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.68, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.71 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i64, i64 }
%union.anon.71 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.pgprot = type { i64 }
%struct.anon.0 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.26 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.26 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.36 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.36 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.8, i32 }
%union.anon.8 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.qstr = type { %union.anon.4, i8* }
%union.anon.4 = type { i64 }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.72 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.73 = type { %struct.callback_head }
%union.anon.74 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.75 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type opaque
%union.anon.49 = type { %struct.atomic_t }
%union.anon.12 = type { %struct.hlist_node }
%union.anon.13 = type { %struct.rb_node }
%union.anon.14 = type { %struct.anon.18 }
%struct.anon.18 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.attribute = type { i8*, i16 }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.19 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.20, void (i8*)*, i8* }
%union.anon.20 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.21, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.21 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.kref = type { %struct.refcount_struct }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.23, %struct.list_head, %struct.list_head, %union.anon.24 }
%struct.lockref = type { %union.anon.6 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.spinlock, i32 }
%union.anon.23 = type { %struct.list_head }
%union.anon.24 = type { %struct.hlist_node }
%struct.blk_flush_queue = type opaque
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.blk_mq_ctx = type opaque
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.9, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.9 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, {}*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type { %struct.list_head, %struct.module*, i8*, i32 (%struct.scsi_device*, %struct.scsi_sense_hdr*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_device*, void (i8*, i32)*, i8*)*, i8 (%struct.scsi_device*, %struct.request*)*, i32 (%struct.scsi_device*, i8*)*, void (%struct.scsi_device*)* }
%struct.scsi_sense_hdr = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.scsi_transport_template = type { %struct.transport_container, %struct.transport_container, %struct.transport_container, i32 (%struct.Scsi_Host*, i32, i32, i64)*, i32, i32, i32, i32, i32, i8, void (%struct.Scsi_Host*)* }
%struct.transport_container = type { %struct.attribute_container, %struct.attribute_group* }
%struct.attribute_container = type { %struct.list_head, %struct.klist, %struct.class*, %struct.attribute_group*, %struct.device_attribute**, i32 (%struct.attribute_container*, %struct.device*)*, i64 }
%struct.klist = type { %struct.spinlock, %struct.list_head, void (%struct.klist_node*)*, void (%struct.klist_node*)* }
%struct.klist_node = type { i8*, %struct.list_head, %struct.kref }
%struct.scsi_mode_data = type { i32, i16, i8, i8, i8, i8 }
%struct.scsi_event = type { i32, %struct.list_head }
%struct.scsi_driver = type { %struct.device_driver, void (%struct.device*)*, i8 (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*, i32)*, void (%struct.scsi_cmnd*)* }
%struct.scsi_varlen_cdb_hdr = type { i8, i8, [5 x i8], i8, i16 }

@scsi_sense_cache_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @scsi_sense_cache_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @scsi_sense_cache_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !0
@.str = private unnamed_addr constant [22 x i8] c"scsi_sense_cache(DMA)\00", align 1
@scsi_sense_isadma_cache = internal global %struct.kmem_cache* null, align 8, !dbg !5509
@.str.1 = private unnamed_addr constant [17 x i8] c"scsi_sense_cache\00", align 1
@scsi_sense_cache = internal global %struct.kmem_cache* null, align 8, !dbg !5507
@scsi_command_size_tbl = external dso_local constant [8 x i8], align 1
@scsi_io_completion.__warned = internal global i8 0, section ".data.once", align 1, !dbg !5502
@.str.2 = private unnamed_addr constant [47 x i8] c"Bytes remaining after failed, no-retry command\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"drivers/scsi/scsi_lib.c\00", align 1
@scsi_mq_ops = internal constant %struct.blk_mq_ops { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)* @scsi_queue_rq, void (%struct.blk_mq_hw_ctx*)* @scsi_commit_rqs, i1 (%struct.request_queue*)* @scsi_mq_get_budget, void (%struct.request_queue*)* @scsi_mq_put_budget, i32 (%struct.request*, i1)* @scsi_timeout, i32 (%struct.blk_mq_hw_ctx*)* null, void (%struct.request*)* @scsi_softirq_done, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)* null, void (%struct.blk_mq_hw_ctx*, i32)* null, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)* @scsi_mq_init_request, void (%struct.blk_mq_tag_set*, %struct.request*, i32)* @scsi_mq_exit_request, void (%struct.request*)* @scsi_initialize_rq, void (%struct.request*)* @scsi_cleanup_rq, i1 (%struct.request_queue*)* @scsi_mq_lld_busy, i32 (%struct.blk_mq_tag_set*)* @scsi_map_queues }, align 8, !dbg !5513
@scsi_mq_ops_no_commit = internal constant %struct.blk_mq_ops { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)* @scsi_queue_rq, void (%struct.blk_mq_hw_ctx*)* null, i1 (%struct.request_queue*)* @scsi_mq_get_budget, void (%struct.request_queue*)* @scsi_mq_put_budget, i32 (%struct.request*, i1)* @scsi_timeout, i32 (%struct.blk_mq_hw_ctx*)* null, void (%struct.request*)* @scsi_softirq_done, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)* null, void (%struct.blk_mq_hw_ctx*, i32)* null, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)* @scsi_mq_init_request, void (%struct.blk_mq_tag_set*, %struct.request*, i32)* @scsi_mq_exit_request, void (%struct.request*)* @scsi_initialize_rq, void (%struct.request*)* @scsi_cleanup_rq, i1 (%struct.request_queue*)* @scsi_mq_lld_busy, i32 (%struct.blk_mq_tag_set*)* @scsi_map_queues }, align 8, !dbg !5515
@.str.4 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"event %d eaten due to OOM\0A\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"\013%s: Bytes in sg: %zu, requested offset %zu, elements %d\0A\00", align 1
@__func__.scsi_kmap_atomic_sg = private unnamed_addr constant [20 x i8] c"scsi_kmap_atomic_sg\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@.str.7 = private unnamed_addr constant [9 x i8] c"t10.%*pE\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"eui.%8phN\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"eui.%12phN\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"eui.%16phN\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"naa.%8phN\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"naa.%16phN\00", align 1
@scsi_io_completion_action._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !5511
@scsi_logging_level = external dso_local global i32, align 4
@__func__.scsi_io_completion_action = private unnamed_addr constant [26 x i8] c"scsi_io_completion_action\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.13 = private unnamed_addr constant [33 x i8] c"timing out command, waited %lus\0A\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"include/linux/scatterlist.h\00", align 1
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.15 = private unnamed_addr constant [33 x i8] c"rejecting I/O to offline device\0A\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"rejecting I/O to dead device\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.17 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"SDEV_MEDIA_CHANGE=1\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"SDEV_UA=INQUIRY_DATA_HAS_CHANGED\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"SDEV_UA=CAPACITY_DATA_HAS_CHANGED\00", align 1
@.str.21 = private unnamed_addr constant [49 x i8] c"SDEV_UA=THIN_PROVISIONING_SOFT_THRESHOLD_REACHED\00", align 1
@.str.22 = private unnamed_addr constant [32 x i8] c"SDEV_UA=MODE_PARAMETERS_CHANGED\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"SDEV_UA=REPORTED_LUNS_DATA_HAS_CHANGED\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"SDEV_UA=ASYMMETRIC_ACCESS_STATE_CHANGED\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"SDEV_UA=POWER_ON_RESET_OCCURRED\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@device_block.__warned = internal global i8 0, section ".data.once", align 1, !dbg !5517
@.str.26 = private unnamed_addr constant [49 x i8] c"scsi_internal_device_block(%s) failed: ret = %d\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_init_sense_cache(%struct.Scsi_Host* %shost) #0 !dbg !5528 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %cache = alloca %struct.kmem_cache*, align 8
  %ret = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !5529, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %cache, metadata !5531, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5533, metadata !DIExpression()), !dbg !5534
  store i32 0, i32* %ret, align 4, !dbg !5534
  call void @mutex_lock(%struct.mutex* @scsi_sense_cache_mutex) #10, !dbg !5535
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !5536
  %unchecked_isa_dma = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 34, !dbg !5537
  %bf.load = load i16, i16* %unchecked_isa_dma, align 4, !dbg !5537
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !5537
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5537
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5537
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5536
  %call = call %struct.kmem_cache* @scsi_select_sense_cache(i1 zeroext %tobool) #10, !dbg !5538
  store %struct.kmem_cache* %call, %struct.kmem_cache** %cache, align 8, !dbg !5539
  %1 = load %struct.kmem_cache*, %struct.kmem_cache** %cache, align 8, !dbg !5540
  %tobool1 = icmp ne %struct.kmem_cache* %1, null, !dbg !5540
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5542

if.then:                                          ; preds = %entry
  br label %exit, !dbg !5543

if.end:                                           ; preds = %entry
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !5544
  %unchecked_isa_dma2 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 34, !dbg !5546
  %bf.load3 = load i16, i16* %unchecked_isa_dma2, align 4, !dbg !5546
  %bf.lshr4 = lshr i16 %bf.load3, 2, !dbg !5546
  %bf.clear5 = and i16 %bf.lshr4, 1, !dbg !5546
  %bf.cast6 = zext i16 %bf.clear5 to i32, !dbg !5546
  %tobool7 = icmp ne i32 %bf.cast6, 0, !dbg !5544
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !5547

if.then8:                                         ; preds = %if.end
  %call9 = call %struct.kmem_cache* @kmem_cache_create(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i32 96, i32 0, i32 24576, void (i8*)* null) #10, !dbg !5548
  store %struct.kmem_cache* %call9, %struct.kmem_cache** @scsi_sense_isadma_cache, align 8, !dbg !5550
  %3 = load %struct.kmem_cache*, %struct.kmem_cache** @scsi_sense_isadma_cache, align 8, !dbg !5551
  %tobool10 = icmp ne %struct.kmem_cache* %3, null, !dbg !5551
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !5553

if.then11:                                        ; preds = %if.then8
  store i32 -12, i32* %ret, align 4, !dbg !5554
  br label %if.end12, !dbg !5555

if.end12:                                         ; preds = %if.then11, %if.then8
  br label %if.end17, !dbg !5556

if.else:                                          ; preds = %if.end
  %call13 = call %struct.kmem_cache* @kmem_cache_create_usercopy(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i32 96, i32 0, i32 8192, i32 0, i32 96, void (i8*)* null) #10, !dbg !5557
  store %struct.kmem_cache* %call13, %struct.kmem_cache** @scsi_sense_cache, align 8, !dbg !5559
  %4 = load %struct.kmem_cache*, %struct.kmem_cache** @scsi_sense_cache, align 8, !dbg !5560
  %tobool14 = icmp ne %struct.kmem_cache* %4, null, !dbg !5560
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !5562

if.then15:                                        ; preds = %if.else
  store i32 -12, i32* %ret, align 4, !dbg !5563
  br label %if.end16, !dbg !5564

if.end16:                                         ; preds = %if.then15, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end12
  br label %exit, !dbg !5546

exit:                                             ; preds = %if.end17, %if.then
  call void @llvm.dbg.label(metadata !5565), !dbg !5566
  call void @mutex_unlock(%struct.mutex* @scsi_sense_cache_mutex) #10, !dbg !5567
  %5 = load i32, i32* %ret, align 4, !dbg !5568
  ret i32 %5, !dbg !5569
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.kmem_cache* @scsi_select_sense_cache(i1 zeroext %unchecked_isa_dma) #0 !dbg !5570 {
entry:
  %unchecked_isa_dma.addr = alloca i8, align 1
  %frombool = zext i1 %unchecked_isa_dma to i8
  store i8 %frombool, i8* %unchecked_isa_dma.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unchecked_isa_dma.addr, metadata !5573, metadata !DIExpression()), !dbg !5574
  %0 = load i8, i8* %unchecked_isa_dma.addr, align 1, !dbg !5575
  %tobool = trunc i8 %0 to i1, !dbg !5575
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5575

cond.true:                                        ; preds = %entry
  %1 = load %struct.kmem_cache*, %struct.kmem_cache** @scsi_sense_isadma_cache, align 8, !dbg !5576
  br label %cond.end, !dbg !5575

cond.false:                                       ; preds = %entry
  %2 = load %struct.kmem_cache*, %struct.kmem_cache** @scsi_sense_cache, align 8, !dbg !5577
  br label %cond.end, !dbg !5575

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.kmem_cache* [ %1, %cond.true ], [ %2, %cond.false ], !dbg !5575
  ret %struct.kmem_cache* %cond, !dbg !5578
}

; Function Attrs: noredzone
declare dso_local %struct.kmem_cache* @kmem_cache_create(i8*, i32, i32, i32, void (i8*)*) #2

; Function Attrs: noredzone
declare dso_local %struct.kmem_cache* @kmem_cache_create_usercopy(i8*, i32, i32, i32, i32, i32, void (i8*)*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_queue_insert(%struct.scsi_cmnd* %cmd, i32 %reason) #0 !dbg !5579 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %reason.addr = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !5580, metadata !DIExpression()), !dbg !5581
  store i32 %reason, i32* %reason.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reason.addr, metadata !5582, metadata !DIExpression()), !dbg !5583
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !5584
  %1 = load i32, i32* %reason.addr, align 4, !dbg !5585
  call void @__scsi_queue_insert(%struct.scsi_cmnd* %0, i32 %1, i1 zeroext true) #10, !dbg !5586
  ret void, !dbg !5587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__scsi_queue_insert(%struct.scsi_cmnd* %cmd, i32 %reason, i1 zeroext %unbusy) #0 !dbg !5588 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %reason.addr = alloca i32, align 4
  %unbusy.addr = alloca i8, align 1
  %device = alloca %struct.scsi_device*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !5591, metadata !DIExpression()), !dbg !5592
  store i32 %reason, i32* %reason.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reason.addr, metadata !5593, metadata !DIExpression()), !dbg !5594
  %frombool = zext i1 %unbusy to i8
  store i8 %frombool, i8* %unbusy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unbusy.addr, metadata !5595, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %device, metadata !5597, metadata !DIExpression()), !dbg !5598
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !5599
  %device1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !5600
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device1, align 8, !dbg !5600
  store %struct.scsi_device* %1, %struct.scsi_device** %device, align 8, !dbg !5598
  br label %do.body, !dbg !5601

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5602

do.end:                                           ; preds = %do.body
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !5604
  %3 = load i32, i32* %reason.addr, align 4, !dbg !5605
  call void @scsi_set_blocked(%struct.scsi_cmnd* %2, i32 %3) #10, !dbg !5606
  %4 = load i8, i8* %unbusy.addr, align 1, !dbg !5607
  %tobool = trunc i8 %4 to i1, !dbg !5607
  br i1 %tobool, label %if.then, label %if.end, !dbg !5609

if.then:                                          ; preds = %do.end
  %5 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !5610
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !5611
  call void @scsi_device_unbusy(%struct.scsi_device* %5, %struct.scsi_cmnd* %6) #10, !dbg !5612
  br label %if.end, !dbg !5612

if.end:                                           ; preds = %if.then, %do.end
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !5613
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 24, !dbg !5614
  store i32 0, i32* %result, align 8, !dbg !5615
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !5616
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 19, !dbg !5617
  %9 = load %struct.request*, %struct.request** %request, align 8, !dbg !5617
  call void @blk_mq_requeue_request(%struct.request* %9, i1 zeroext true) #10, !dbg !5618
  ret void, !dbg !5619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__scsi_execute(%struct.scsi_device* %sdev, i8* %cmd, i32 %data_direction, i8* %buffer, i32 %bufflen, i8* %sense, %struct.scsi_sense_hdr* %sshdr, i32 %timeout, i32 %retries, i64 %flags, i32 %rq_flags, i32* %resid) #0 !dbg !5620 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %cmd.addr = alloca i8*, align 8
  %data_direction.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %bufflen.addr = alloca i32, align 4
  %sense.addr = alloca i8*, align 8
  %sshdr.addr = alloca %struct.scsi_sense_hdr*, align 8
  %timeout.addr = alloca i32, align 4
  %retries.addr = alloca i32, align 4
  %flags.addr = alloca i64, align 8
  %rq_flags.addr = alloca i32, align 4
  %resid.addr = alloca i32*, align 8
  %req = alloca %struct.request*, align 8
  %rq = alloca %struct.scsi_request*, align 8
  %ret = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !5623, metadata !DIExpression()), !dbg !5624
  store i8* %cmd, i8** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cmd.addr, metadata !5625, metadata !DIExpression()), !dbg !5626
  store i32 %data_direction, i32* %data_direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_direction.addr, metadata !5627, metadata !DIExpression()), !dbg !5628
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5629, metadata !DIExpression()), !dbg !5630
  store i32 %bufflen, i32* %bufflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bufflen.addr, metadata !5631, metadata !DIExpression()), !dbg !5632
  store i8* %sense, i8** %sense.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sense.addr, metadata !5633, metadata !DIExpression()), !dbg !5634
  store %struct.scsi_sense_hdr* %sshdr, %struct.scsi_sense_hdr** %sshdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr** %sshdr.addr, metadata !5635, metadata !DIExpression()), !dbg !5636
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !5637, metadata !DIExpression()), !dbg !5638
  store i32 %retries, i32* %retries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retries.addr, metadata !5639, metadata !DIExpression()), !dbg !5640
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !5641, metadata !DIExpression()), !dbg !5642
  store i32 %rq_flags, i32* %rq_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rq_flags.addr, metadata !5643, metadata !DIExpression()), !dbg !5644
  store i32* %resid, i32** %resid.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %resid.addr, metadata !5645, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !5647, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.declare(metadata %struct.scsi_request** %rq, metadata !5649, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5652, metadata !DIExpression()), !dbg !5653
  store i32 67108864, i32* %ret, align 4, !dbg !5653
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !5654
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 1, !dbg !5655
  %1 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !5655
  %2 = load i32, i32* %data_direction.addr, align 4, !dbg !5656
  %cmp = icmp eq i32 %2, 1, !dbg !5657
  %3 = zext i1 %cmp to i64, !dbg !5656
  %cond = select i1 %cmp, i32 33, i32 32, !dbg !5656
  %call = call %struct.request* @blk_get_request(%struct.request_queue* %1, i32 %cond, i32 8) #10, !dbg !5658
  store %struct.request* %call, %struct.request** %req, align 8, !dbg !5659
  %4 = load %struct.request*, %struct.request** %req, align 8, !dbg !5660
  %5 = bitcast %struct.request* %4 to i8*, !dbg !5660
  %call1 = call zeroext i1 @IS_ERR(i8* %5) #10, !dbg !5662
  br i1 %call1, label %if.then, label %if.end, !dbg !5663

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !5664
  store i32 %6, i32* %retval, align 4, !dbg !5665
  br label %return, !dbg !5665

if.end:                                           ; preds = %entry
  %7 = load %struct.request*, %struct.request** %req, align 8, !dbg !5666
  %call2 = call %struct.scsi_request* @scsi_req(%struct.request* %7) #10, !dbg !5667
  store %struct.scsi_request* %call2, %struct.scsi_request** %rq, align 8, !dbg !5668
  %8 = load i32, i32* %bufflen.addr, align 4, !dbg !5669
  %tobool = icmp ne i32 %8, 0, !dbg !5669
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !5671

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !5672
  %request_queue3 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 1, !dbg !5673
  %10 = load %struct.request_queue*, %struct.request_queue** %request_queue3, align 8, !dbg !5673
  %11 = load %struct.request*, %struct.request** %req, align 8, !dbg !5674
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !5675
  %13 = load i32, i32* %bufflen.addr, align 4, !dbg !5676
  %call4 = call i32 @blk_rq_map_kern(%struct.request_queue* %10, %struct.request* %11, i8* %12, i32 %13, i32 3072) #10, !dbg !5677
  %tobool5 = icmp ne i32 %call4, 0, !dbg !5677
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5678

if.then6:                                         ; preds = %land.lhs.true
  br label %out, !dbg !5679

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %14 = load i8*, i8** %cmd.addr, align 8, !dbg !5680
  %arrayidx = getelementptr i8, i8* %14, i64 0, !dbg !5680
  %15 = load i8, i8* %arrayidx, align 1, !dbg !5680
  %conv = zext i8 %15 to i32, !dbg !5680
  %shr = ashr i32 %conv, 5, !dbg !5680
  %and = and i32 %shr, 7, !dbg !5680
  %idxprom = sext i32 %and to i64, !dbg !5680
  %arrayidx8 = getelementptr [8 x i8], [8 x i8]* @scsi_command_size_tbl, i64 0, i64 %idxprom, !dbg !5680
  %16 = load i8, i8* %arrayidx8, align 1, !dbg !5680
  %conv9 = zext i8 %16 to i16, !dbg !5680
  %17 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5681
  %cmd_len = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %17, i32 0, i32 2, !dbg !5682
  store i16 %conv9, i16* %cmd_len, align 8, !dbg !5683
  %18 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5684
  %cmd10 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %18, i32 0, i32 1, !dbg !5685
  %19 = load i8*, i8** %cmd10, align 8, !dbg !5685
  %20 = load i8*, i8** %cmd.addr, align 8, !dbg !5686
  %21 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5687
  %cmd_len11 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %21, i32 0, i32 2, !dbg !5688
  %22 = load i16, i16* %cmd_len11, align 8, !dbg !5688
  %conv12 = zext i16 %22 to i64, !dbg !5687
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %20, i64 %conv12, i1 false), !dbg !5689
  %23 = load i32, i32* %retries.addr, align 4, !dbg !5690
  %24 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5691
  %retries13 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %24, i32 0, i32 6, !dbg !5692
  store i32 %23, i32* %retries13, align 8, !dbg !5693
  %25 = load i32, i32* %timeout.addr, align 4, !dbg !5694
  %26 = load %struct.request*, %struct.request** %req, align 8, !dbg !5695
  %timeout14 = getelementptr inbounds %struct.request, %struct.request* %26, i32 0, i32 26, !dbg !5696
  store i32 %25, i32* %timeout14, align 4, !dbg !5697
  %27 = load i64, i64* %flags.addr, align 8, !dbg !5698
  %28 = load %struct.request*, %struct.request** %req, align 8, !dbg !5699
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %28, i32 0, i32 3, !dbg !5700
  %29 = load i32, i32* %cmd_flags, align 8, !dbg !5701
  %conv15 = zext i32 %29 to i64, !dbg !5701
  %or = or i64 %conv15, %27, !dbg !5701
  %conv16 = trunc i64 %or to i32, !dbg !5701
  store i32 %conv16, i32* %cmd_flags, align 8, !dbg !5701
  %30 = load i32, i32* %rq_flags.addr, align 4, !dbg !5702
  %or17 = or i32 %30, 2048, !dbg !5703
  %31 = load %struct.request*, %struct.request** %req, align 8, !dbg !5704
  %rq_flags18 = getelementptr inbounds %struct.request, %struct.request* %31, i32 0, i32 4, !dbg !5705
  %32 = load i32, i32* %rq_flags18, align 4, !dbg !5706
  %or19 = or i32 %32, %or17, !dbg !5706
  store i32 %or19, i32* %rq_flags18, align 4, !dbg !5706
  %33 = load %struct.request*, %struct.request** %req, align 8, !dbg !5707
  %q = getelementptr inbounds %struct.request, %struct.request* %33, i32 0, i32 0, !dbg !5708
  %34 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !5708
  %35 = load %struct.request*, %struct.request** %req, align 8, !dbg !5709
  call void @blk_execute_rq(%struct.request_queue* %34, %struct.gendisk* null, %struct.request* %35, i32 1) #10, !dbg !5710
  %36 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5711
  %resid_len = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %36, i32 0, i32 5, !dbg !5711
  %37 = load i32, i32* %resid_len, align 4, !dbg !5711
  %cmp20 = icmp ugt i32 %37, 0, !dbg !5711
  br i1 %cmp20, label %land.rhs, label %land.end, !dbg !5711

land.rhs:                                         ; preds = %if.end7
  %38 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5711
  %resid_len22 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %38, i32 0, i32 5, !dbg !5711
  %39 = load i32, i32* %resid_len22, align 4, !dbg !5711
  %40 = load i32, i32* %bufflen.addr, align 4, !dbg !5711
  %cmp23 = icmp ule i32 %39, %40, !dbg !5711
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end7
  %41 = phi i1 [ false, %if.end7 ], [ %cmp23, %land.rhs ], !dbg !5713
  %lnot = xor i1 %41, true, !dbg !5711
  %lnot25 = xor i1 %lnot, true, !dbg !5711
  %lnot.ext = zext i1 %lnot25 to i32, !dbg !5711
  %conv26 = sext i32 %lnot.ext to i64, !dbg !5711
  %tobool27 = icmp ne i64 %conv26, 0, !dbg !5711
  br i1 %tobool27, label %if.then28, label %if.end32, !dbg !5714

if.then28:                                        ; preds = %land.end
  %42 = load i8*, i8** %buffer.addr, align 8, !dbg !5715
  %43 = load i32, i32* %bufflen.addr, align 4, !dbg !5716
  %44 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5717
  %resid_len29 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %44, i32 0, i32 5, !dbg !5718
  %45 = load i32, i32* %resid_len29, align 4, !dbg !5718
  %sub = sub i32 %43, %45, !dbg !5719
  %idx.ext = zext i32 %sub to i64, !dbg !5720
  %add.ptr = getelementptr i8, i8* %42, i64 %idx.ext, !dbg !5720
  %46 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5721
  %resid_len30 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %46, i32 0, i32 5, !dbg !5722
  %47 = load i32, i32* %resid_len30, align 4, !dbg !5722
  %conv31 = zext i32 %47 to i64, !dbg !5721
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 0, i64 %conv31, i1 false), !dbg !5723
  br label %if.end32, !dbg !5723

if.end32:                                         ; preds = %if.then28, %land.end
  %48 = load i32*, i32** %resid.addr, align 8, !dbg !5724
  %tobool33 = icmp ne i32* %48, null, !dbg !5724
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !5726

if.then34:                                        ; preds = %if.end32
  %49 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5727
  %resid_len35 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %49, i32 0, i32 5, !dbg !5728
  %50 = load i32, i32* %resid_len35, align 4, !dbg !5728
  %51 = load i32*, i32** %resid.addr, align 8, !dbg !5729
  store i32 %50, i32* %51, align 4, !dbg !5730
  br label %if.end36, !dbg !5731

if.end36:                                         ; preds = %if.then34, %if.end32
  %52 = load i8*, i8** %sense.addr, align 8, !dbg !5732
  %tobool37 = icmp ne i8* %52, null, !dbg !5732
  br i1 %tobool37, label %land.lhs.true38, label %if.end42, !dbg !5734

land.lhs.true38:                                  ; preds = %if.end36
  %53 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5735
  %sense_len = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %53, i32 0, i32 4, !dbg !5736
  %54 = load i32, i32* %sense_len, align 8, !dbg !5736
  %tobool39 = icmp ne i32 %54, 0, !dbg !5735
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !5737

if.then40:                                        ; preds = %land.lhs.true38
  %55 = load i8*, i8** %sense.addr, align 8, !dbg !5738
  %56 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5739
  %sense41 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %56, i32 0, i32 7, !dbg !5740
  %57 = load i8*, i8** %sense41, align 8, !dbg !5740
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %57, i64 96, i1 false), !dbg !5741
  br label %if.end42, !dbg !5741

if.end42:                                         ; preds = %if.then40, %land.lhs.true38, %if.end36
  %58 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !5742
  %tobool43 = icmp ne %struct.scsi_sense_hdr* %58, null, !dbg !5742
  br i1 %tobool43, label %if.then44, label %if.end48, !dbg !5744

if.then44:                                        ; preds = %if.end42
  %59 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5745
  %sense45 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %59, i32 0, i32 7, !dbg !5746
  %60 = load i8*, i8** %sense45, align 8, !dbg !5746
  %61 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5747
  %sense_len46 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %61, i32 0, i32 4, !dbg !5748
  %62 = load i32, i32* %sense_len46, align 8, !dbg !5748
  %63 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !5749
  %call47 = call zeroext i1 @scsi_normalize_sense(i8* %60, i32 %62, %struct.scsi_sense_hdr* %63) #10, !dbg !5750
  br label %if.end48, !dbg !5750

if.end48:                                         ; preds = %if.then44, %if.end42
  %64 = load %struct.scsi_request*, %struct.scsi_request** %rq, align 8, !dbg !5751
  %result = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %64, i32 0, i32 3, !dbg !5752
  %65 = load i32, i32* %result, align 4, !dbg !5752
  store i32 %65, i32* %ret, align 4, !dbg !5753
  br label %out, !dbg !5754

out:                                              ; preds = %if.end48, %if.then6
  call void @llvm.dbg.label(metadata !5755), !dbg !5756
  %66 = load %struct.request*, %struct.request** %req, align 8, !dbg !5757
  call void @blk_put_request(%struct.request* %66) #10, !dbg !5758
  %67 = load i32, i32* %ret, align 4, !dbg !5759
  store i32 %67, i32* %retval, align 4, !dbg !5760
  br label %return, !dbg !5760

return:                                           ; preds = %out, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !5761
  ret i32 %68, !dbg !5761
}

; Function Attrs: noredzone
declare dso_local %struct.request* @blk_get_request(%struct.request_queue*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5762 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5766, metadata !DIExpression()), !dbg !5767
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5768
  %1 = ptrtoint i8* %0 to i64, !dbg !5768
  %2 = inttoptr i64 %1 to i8*, !dbg !5768
  %3 = ptrtoint i8* %2 to i64, !dbg !5768
  %cmp = icmp uge i64 %3, -4095, !dbg !5768
  %lnot = xor i1 %cmp, true, !dbg !5768
  %lnot1 = xor i1 %lnot, true, !dbg !5768
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5768
  %conv = sext i32 %lnot.ext to i64, !dbg !5768
  %tobool = icmp ne i64 %conv, 0, !dbg !5768
  ret i1 %tobool, !dbg !5769
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scsi_request* @scsi_req(%struct.request* %rq) #0 !dbg !5770 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !5773, metadata !DIExpression()), !dbg !5774
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !5775
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #10, !dbg !5776
  %1 = bitcast i8* %call to %struct.scsi_request*, !dbg !5776
  ret %struct.scsi_request* %1, !dbg !5777
}

; Function Attrs: noredzone
declare dso_local i32 @blk_rq_map_kern(%struct.request_queue*, %struct.request*, i8*, i32, i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local void @blk_execute_rq(%struct.request_queue*, %struct.gendisk*, %struct.request*, i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @scsi_normalize_sense(i8*, i32, %struct.scsi_sense_hdr*) #2

; Function Attrs: noredzone
declare dso_local void @blk_put_request(%struct.request*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_device_unbusy(%struct.scsi_device* %sdev, %struct.scsi_cmnd* %cmd) #0 !dbg !5778 {
entry:
  %v.addr.i1.i1 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i1, metadata !5781, metadata !DIExpression()), !dbg !5787
  %v.addr.i.i2 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i2, metadata !5792, metadata !DIExpression()), !dbg !5800
  %size.addr.i.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i3, metadata !5802, metadata !DIExpression()), !dbg !5803
  %v.addr.i4 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i4, metadata !5804, metadata !DIExpression()), !dbg !5805
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5781, metadata !DIExpression()), !dbg !5806
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5792, metadata !DIExpression()), !dbg !5810
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5802, metadata !DIExpression()), !dbg !5812
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5804, metadata !DIExpression()), !dbg !5813
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %starget = alloca %struct.scsi_target*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !5814, metadata !DIExpression()), !dbg !5815
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !5816, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !5818, metadata !DIExpression()), !dbg !5819
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !5820
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !5821
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !5821
  store %struct.Scsi_Host* %1, %struct.Scsi_Host** %shost, align 8, !dbg !5819
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget, metadata !5822, metadata !DIExpression()), !dbg !5823
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !5824
  %call = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %2) #10, !dbg !5825
  store %struct.scsi_target* %call, %struct.scsi_target** %starget, align 8, !dbg !5823
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !5826
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !5827
  call void @scsi_dec_host_busy(%struct.Scsi_Host* %3, %struct.scsi_cmnd* %4) #10, !dbg !5828
  %5 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !5829
  %can_queue = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %5, i32 0, i32 10, !dbg !5830
  %6 = load i32, i32* %can_queue, align 8, !dbg !5830
  %cmp = icmp ugt i32 %6, 0, !dbg !5831
  br i1 %cmp, label %if.then, label %if.end, !dbg !5832

if.then:                                          ; preds = %entry
  %7 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !5833
  %target_busy = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %7, i32 0, i32 8, !dbg !5834
  store %struct.atomic_t* %target_busy, %struct.atomic_t** %v.addr.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5835
  %9 = bitcast %struct.atomic_t* %8 to i8*, !dbg !5835
  store i8* %9, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5836
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !5837
  %conv.i.i = trunc i64 %11 to i32, !dbg !5837
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %10, i32 %conv.i.i) #11, !dbg !5838
  %12 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5839
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !5839
  call void @kcsan_check_access(i8* %12, i64 %13, i32 7) #11, !dbg !5839
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5840
  store %struct.atomic_t* %14, %struct.atomic_t** %v.addr.i1.i, align 8
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5841
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %15, i32 0, i32 0, !dbg !5842
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !5843, !srcloc !5844
  br label %if.end, !dbg !5845

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !5846
  %device_busy = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %16, i32 0, i32 4, !dbg !5847
  store %struct.atomic_t* %device_busy, %struct.atomic_t** %v.addr.i4, align 8
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i4, align 8, !dbg !5848
  %18 = bitcast %struct.atomic_t* %17 to i8*, !dbg !5848
  store i8* %18, i8** %v.addr.i.i2, align 8
  store i64 4, i64* %size.addr.i.i3, align 8
  %19 = load i8*, i8** %v.addr.i.i2, align 8, !dbg !5849
  %20 = load i64, i64* %size.addr.i.i3, align 8, !dbg !5850
  %conv.i.i5 = trunc i64 %20 to i32, !dbg !5850
  %call.i.i6 = call zeroext i1 @kasan_check_write(i8* %19, i32 %conv.i.i5) #11, !dbg !5851
  %21 = load i8*, i8** %v.addr.i.i2, align 8, !dbg !5852
  %22 = load i64, i64* %size.addr.i.i3, align 8, !dbg !5852
  call void @kcsan_check_access(i8* %21, i64 %22, i32 7) #11, !dbg !5852
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i4, align 8, !dbg !5853
  store %struct.atomic_t* %23, %struct.atomic_t** %v.addr.i1.i1, align 8
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i1, align 8, !dbg !5854
  %counter.i.i7 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %24, i32 0, i32 0, !dbg !5855
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i7, i32* %counter.i.i7) #7, !dbg !5856, !srcloc !5844
  ret void, !dbg !5857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scsi_target* @scsi_target(%struct.scsi_device* %sdev) #0 !dbg !5858 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_target*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !5861, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5863, metadata !DIExpression()), !dbg !5865
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !5865
  %sdev_gendev = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 50, !dbg !5865
  %parent = getelementptr inbounds %struct.device, %struct.device* %sdev_gendev, i32 0, i32 1, !dbg !5865
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5865
  %2 = bitcast %struct.device* %1 to i8*, !dbg !5865
  store i8* %2, i8** %__mptr, align 8, !dbg !5865
  br label %do.body, !dbg !5865

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5866

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5865
  %add.ptr = getelementptr i8, i8* %3, i64 -40, !dbg !5865
  %4 = bitcast i8* %add.ptr to %struct.scsi_target*, !dbg !5865
  store %struct.scsi_target* %4, %struct.scsi_target** %tmp, align 8, !dbg !5866
  %5 = load %struct.scsi_target*, %struct.scsi_target** %tmp, align 8, !dbg !5865
  ret %struct.scsi_target* %5, !dbg !5868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_dec_host_busy(%struct.Scsi_Host* %shost, %struct.scsi_cmnd* %cmd) #0 !dbg !5869 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !5872, metadata !DIExpression()), !dbg !5877
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !5882
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5883, metadata !DIExpression()), !dbg !5888
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !5895, metadata !DIExpression()), !dbg !5896
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !5897, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5899, metadata !DIExpression()), !dbg !5900
  call void @__rcu_read_lock() #11, !dbg !5901
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !5905
  %state = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 26, !dbg !5906
  call void @__clear_bit(i64 1, i64* %state) #10, !dbg !5907
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !5908
  %call = call i32 @scsi_host_in_recovery(%struct.Scsi_Host* %1) #10, !dbg !5908
  %tobool = icmp ne i32 %call, 0, !dbg !5908
  %lnot = xor i1 %tobool, true, !dbg !5908
  %lnot1 = xor i1 %lnot, true, !dbg !5908
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5908
  %conv = sext i32 %lnot.ext to i64, !dbg !5908
  %tobool2 = icmp ne i64 %conv, 0, !dbg !5908
  br i1 %tobool2, label %if.then, label %if.end27, !dbg !5909

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5910

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !5911

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5912, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5915, metadata !DIExpression()), !dbg !5914
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5914
  %conv4 = zext i1 %cmp to i32, !dbg !5914
  store i32 1, i32* %tmp, align 4, !dbg !5914
  %2 = load i32, i32* %tmp, align 4, !dbg !5914
  br label %do.body5, !dbg !5916

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !5917

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !5918

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !5920, metadata !DIExpression()), !dbg !5923
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !5924, metadata !DIExpression()), !dbg !5923
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !5923
  %conv11 = zext i1 %cmp10 to i32, !dbg !5923
  store i32 1, i32* %tmp12, align 4, !dbg !5923
  %3 = load i32, i32* %tmp12, align 4, !dbg !5923
  %call13 = call i64 @arch_local_irq_save() #10, !dbg !5925
  store i64 %call13, i64* %flags, align 8, !dbg !5925
  br label %do.end, !dbg !5925

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !5918

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !5917

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5926, !srcloc !5927
  br label %do.body16, !dbg !5926

do.body16:                                        ; preds = %do.body15
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !5928
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 4, !dbg !5928
  %5 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !5928
  store %struct.spinlock* %5, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5929
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !5930
  %rlock.i = bitcast %union.anon* %7 to %struct.raw_spinlock*, !dbg !5930
  br label %do.end18, !dbg !5928

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !5926

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !5917

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5916

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !5911

do.end22:                                         ; preds = %do.end21
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !5931
  %host_failed = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 14, !dbg !5933
  %9 = load i32, i32* %host_failed, align 4, !dbg !5933
  %tobool23 = icmp ne i32 %9, 0, !dbg !5931
  br i1 %tobool23, label %if.then25, label %lor.lhs.false, !dbg !5934

lor.lhs.false:                                    ; preds = %do.end22
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !5935
  %host_eh_scheduled = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 15, !dbg !5936
  %11 = load i32, i32* %host_eh_scheduled, align 8, !dbg !5936
  %tobool24 = icmp ne i32 %11, 0, !dbg !5935
  br i1 %tobool24, label %if.then25, label %if.end, !dbg !5937

if.then25:                                        ; preds = %lor.lhs.false, %do.end22
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !5938
  call void @scsi_eh_wakeup(%struct.Scsi_Host* %12) #10, !dbg !5939
  br label %if.end, !dbg !5939

if.end:                                           ; preds = %if.then25, %lor.lhs.false
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !5940
  %host_lock26 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %13, i32 0, i32 4, !dbg !5941
  %14 = load %struct.spinlock*, %struct.spinlock** %host_lock26, align 8, !dbg !5941
  %15 = load i64, i64* %flags, align 8, !dbg !5942
  store %struct.spinlock* %14, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !324, metadata !5943, metadata !DIExpression()) #7, !dbg !5946
  call void @llvm.dbg.declare(metadata !324, metadata !5947, metadata !DIExpression()) #7, !dbg !5946
  store i32 1, i32* %tmp.i, align 4, !dbg !5946
  %16 = load i32, i32* %tmp.i, align 4, !dbg !5946
  call void @llvm.dbg.declare(metadata !324, metadata !5948, metadata !DIExpression()) #7, !dbg !5953
  call void @llvm.dbg.declare(metadata !324, metadata !5954, metadata !DIExpression()) #7, !dbg !5953
  store i32 1, i32* %tmp8.i, align 4, !dbg !5953
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !5953
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !5955
  call void @arch_local_irq_restore(i64 %18) #11, !dbg !5955
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5956, !srcloc !5958
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !5959
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !5959
  %rlock.i29 = bitcast %union.anon* %20 to %struct.raw_spinlock*, !dbg !5959
  br label %if.end27, !dbg !5961

if.end27:                                         ; preds = %if.end, %entry
  call void @rcu_read_unlock() #10, !dbg !5962
  ret void, !dbg !5963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_requeue_run_queue(%struct.work_struct* %work) #0 !dbg !5964 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %q = alloca %struct.request_queue*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5965, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !5969, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5971, metadata !DIExpression()), !dbg !5973
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !5973
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !5973
  store i8* %1, i8** %__mptr, align 8, !dbg !5973
  br label %do.body, !dbg !5973

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5974

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5973
  %add.ptr = getelementptr i8, i8* %2, i64 -1792, !dbg !5973
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !5973
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !5974
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !5973
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !5976
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !5977
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 1, !dbg !5978
  %6 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !5978
  store %struct.request_queue* %6, %struct.request_queue** %q, align 8, !dbg !5979
  %7 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !5980
  call void @scsi_run_queue(%struct.request_queue* %7) #10, !dbg !5981
  ret void, !dbg !5982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_run_queue(%struct.request_queue* %q) #0 !dbg !5983 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !5984, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !5986, metadata !DIExpression()), !dbg !5987
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !5988
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %0, i32 0, i32 11, !dbg !5989
  %1 = load i8*, i8** %queuedata, align 8, !dbg !5989
  %2 = bitcast i8* %1 to %struct.scsi_device*, !dbg !5988
  store %struct.scsi_device* %2, %struct.scsi_device** %sdev, align 8, !dbg !5987
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !5990
  %call = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %3) #10, !dbg !5992
  %single_lun = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %call, i32 0, i32 7, !dbg !5993
  %bf.load = load i8, i8* %single_lun, align 4, !dbg !5993
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !5993
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5993
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5993
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5992
  br i1 %tobool, label %if.then, label %if.end, !dbg !5994

if.then:                                          ; preds = %entry
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !5995
  call void @scsi_single_lun_run(%struct.scsi_device* %4) #10, !dbg !5996
  br label %if.end, !dbg !5996

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !5997
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !5999
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !5999
  %starved_list = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 2, !dbg !6000
  %call1 = call i32 @list_empty(%struct.list_head* %starved_list) #10, !dbg !6001
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6001
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6002

if.then3:                                         ; preds = %if.end
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !6003
  %host4 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %7, i32 0, i32 0, !dbg !6004
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host4, align 8, !dbg !6004
  call void @scsi_starved_list_run(%struct.Scsi_Host* %8) #10, !dbg !6005
  br label %if.end5, !dbg !6005

if.end5:                                          ; preds = %if.then3, %if.end
  %9 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !6006
  call void @blk_mq_run_hw_queues(%struct.request_queue* %9, i1 zeroext false) #10, !dbg !6007
  ret void, !dbg !6008
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_run_host_queues(%struct.Scsi_Host* %shost) #0 !dbg !6009 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !6010, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !6012, metadata !DIExpression()), !dbg !6013
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6014
  %call = call %struct.scsi_device* @__scsi_iterate_devices(%struct.Scsi_Host* %0, %struct.scsi_device* null) #10, !dbg !6014
  store %struct.scsi_device* %call, %struct.scsi_device** %sdev, align 8, !dbg !6014
  br label %for.cond, !dbg !6014

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !6016
  %tobool = icmp ne %struct.scsi_device* %1, null, !dbg !6014
  br i1 %tobool, label %for.body, label %for.end, !dbg !6014

for.body:                                         ; preds = %for.cond
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !6018
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 1, !dbg !6019
  %3 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !6019
  call void @scsi_run_queue(%struct.request_queue* %3) #10, !dbg !6020
  br label %for.inc, !dbg !6020

for.inc:                                          ; preds = %for.body
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6016
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !6016
  %call1 = call %struct.scsi_device* @__scsi_iterate_devices(%struct.Scsi_Host* %4, %struct.scsi_device* %5) #10, !dbg !6016
  store %struct.scsi_device* %call1, %struct.scsi_device** %sdev, align 8, !dbg !6016
  br label %for.cond, !dbg !6016, !llvm.loop !6021

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6023
}

; Function Attrs: noredzone
declare dso_local %struct.scsi_device* @__scsi_iterate_devices(%struct.Scsi_Host*, %struct.scsi_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_free_sgtables(%struct.scsi_cmnd* %cmd) #0 !dbg !6024 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6025, metadata !DIExpression()), !dbg !6026
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6027
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !6029
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !6030
  %nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 1, !dbg !6031
  %1 = load i32, i32* %nents, align 8, !dbg !6031
  %tobool = icmp ne i32 %1, 0, !dbg !6027
  br i1 %tobool, label %if.then, label %if.end, !dbg !6032

if.then:                                          ; preds = %entry
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6033
  %sdb1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 15, !dbg !6034
  %table2 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb1, i32 0, i32 0, !dbg !6035
  call void @sg_free_table_chained(%struct.sg_table* %table2, i32 2) #10, !dbg !6036
  br label %if.end, !dbg !6036

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6037
  %call = call i32 @scsi_prot_sg_count(%struct.scsi_cmnd* %3) #10, !dbg !6039
  %tobool3 = icmp ne i32 %call, 0, !dbg !6039
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !6040

if.then4:                                         ; preds = %if.end
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6041
  %prot_sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 16, !dbg !6042
  %5 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !6042
  %table5 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %5, i32 0, i32 0, !dbg !6043
  call void @sg_free_table_chained(%struct.sg_table* %table5, i32 1) #10, !dbg !6044
  br label %if.end6, !dbg !6044

if.end6:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !6045
}

; Function Attrs: noredzone
declare dso_local void @sg_free_table_chained(%struct.sg_table*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_prot_sg_count(%struct.scsi_cmnd* %cmd) #0 !dbg !6046 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6049, metadata !DIExpression()), !dbg !6050
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6051
  %prot_sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 16, !dbg !6052
  %1 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !6052
  %tobool = icmp ne %struct.scsi_data_buffer* %1, null, !dbg !6051
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6051

cond.true:                                        ; preds = %entry
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6053
  %prot_sdb1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 16, !dbg !6054
  %3 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb1, align 8, !dbg !6054
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %3, i32 0, i32 0, !dbg !6055
  %nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 1, !dbg !6056
  %4 = load i32, i32* %nents, align 8, !dbg !6056
  br label %cond.end, !dbg !6051

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6051

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 0, %cond.false ], !dbg !6051
  ret i32 %cond, !dbg !6057
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_io_completion(%struct.scsi_cmnd* %cmd, i32 %good_bytes) #0 !dbg !5504 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %good_bytes.addr = alloca i32, align 4
  %result = alloca i32, align 4
  %q = alloca %struct.request_queue*, align 8
  %req = alloca %struct.request*, align 8
  %blk_stat = alloca i8, align 1
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp97 = alloca i64, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6058, metadata !DIExpression()), !dbg !6059
  store i32 %good_bytes, i32* %good_bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %good_bytes.addr, metadata !6060, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6062, metadata !DIExpression()), !dbg !6063
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6064
  %result1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 24, !dbg !6065
  %1 = load i32, i32* %result1, align 8, !dbg !6065
  store i32 %1, i32* %result, align 4, !dbg !6063
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !6066, metadata !DIExpression()), !dbg !6067
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6068
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 1, !dbg !6069
  %3 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6069
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 1, !dbg !6070
  %4 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !6070
  store %struct.request_queue* %4, %struct.request_queue** %q, align 8, !dbg !6067
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !6071, metadata !DIExpression()), !dbg !6072
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6073
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 19, !dbg !6074
  %6 = load %struct.request*, %struct.request** %request, align 8, !dbg !6074
  store %struct.request* %6, %struct.request** %req, align 8, !dbg !6072
  call void @llvm.dbg.declare(metadata i8* %blk_stat, metadata !6075, metadata !DIExpression()), !dbg !6076
  store i8 0, i8* %blk_stat, align 1, !dbg !6076
  %7 = load i32, i32* %result, align 4, !dbg !6077
  %tobool = icmp ne i32 %7, 0, !dbg !6077
  %lnot = xor i1 %tobool, true, !dbg !6077
  %lnot2 = xor i1 %lnot, true, !dbg !6077
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6077
  %conv = sext i32 %lnot.ext to i64, !dbg !6077
  %tobool3 = icmp ne i64 %conv, 0, !dbg !6077
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6079

if.then:                                          ; preds = %entry
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6080
  %9 = load i32, i32* %result, align 4, !dbg !6081
  %call = call i32 @scsi_io_completion_nz_result(%struct.scsi_cmnd* %8, i32 %9, i8* %blk_stat) #10, !dbg !6082
  store i32 %call, i32* %result, align 4, !dbg !6083
  br label %if.end, !dbg !6084

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.request*, %struct.request** %req, align 8, !dbg !6085
  %call4 = call zeroext i1 @blk_rq_is_passthrough(%struct.request* %10) #10, !dbg !6085
  %lnot5 = xor i1 %call4, true, !dbg !6085
  %lnot7 = xor i1 %lnot5, true, !dbg !6085
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !6085
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !6085
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !6085
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !6087

if.then11:                                        ; preds = %if.end
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6088
  %result12 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 24, !dbg !6090
  %12 = load i32, i32* %result12, align 8, !dbg !6090
  %13 = load %struct.request*, %struct.request** %req, align 8, !dbg !6091
  %call13 = call %struct.scsi_request* @scsi_req(%struct.request* %13) #10, !dbg !6092
  %result14 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %call13, i32 0, i32 3, !dbg !6093
  store i32 %12, i32* %result14, align 4, !dbg !6094
  br label %if.end15, !dbg !6095

if.end15:                                         ; preds = %if.then11, %if.end
  br label %do.body, !dbg !6096

do.body:                                          ; preds = %if.end15
  br label %do.end, !dbg !6097

do.end:                                           ; preds = %do.body
  %14 = load %struct.request*, %struct.request** %req, align 8, !dbg !6099
  %call16 = call i32 @blk_rq_bytes(%struct.request* %14) #10, !dbg !6099
  %cmp = icmp ugt i32 %call16, 0, !dbg !6099
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6099

lor.rhs:                                          ; preds = %do.end
  %15 = load i8, i8* %blk_stat, align 1, !dbg !6099
  %conv18 = zext i8 %15 to i32, !dbg !6099
  %cmp19 = icmp eq i32 %conv18, 0, !dbg !6099
  br label %lor.end, !dbg !6099

lor.end:                                          ; preds = %lor.rhs, %do.end
  %16 = phi i1 [ true, %do.end ], [ %cmp19, %lor.rhs ]
  %lnot21 = xor i1 %16, true, !dbg !6099
  %lnot23 = xor i1 %lnot21, true, !dbg !6099
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !6099
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !6099
  %tobool26 = icmp ne i64 %conv25, 0, !dbg !6099
  br i1 %tobool26, label %if.then27, label %if.end39, !dbg !6101

if.then27:                                        ; preds = %lor.end
  %17 = load %struct.request*, %struct.request** %req, align 8, !dbg !6102
  %18 = load i8, i8* %blk_stat, align 1, !dbg !6102
  %19 = load i32, i32* %good_bytes.addr, align 4, !dbg !6102
  %call28 = call zeroext i1 @scsi_end_request(%struct.request* %17, i8 zeroext %18, i32 %19) #10, !dbg !6102
  %lnot29 = xor i1 %call28, true, !dbg !6102
  %lnot31 = xor i1 %lnot29, true, !dbg !6102
  %lnot33 = xor i1 %lnot31, true, !dbg !6102
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !6102
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !6102
  %tobool36 = icmp ne i64 %conv35, 0, !dbg !6102
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !6105

if.then37:                                        ; preds = %if.then27
  br label %if.end115, !dbg !6106

if.end38:                                         ; preds = %if.then27
  br label %if.end39, !dbg !6107

if.end39:                                         ; preds = %if.end38, %lor.end
  %20 = load i8, i8* %blk_stat, align 1, !dbg !6108
  %conv40 = zext i8 %20 to i32, !dbg !6108
  %tobool41 = icmp ne i32 %conv40, 0, !dbg !6108
  br i1 %tobool41, label %land.rhs, label %land.end, !dbg !6108

land.rhs:                                         ; preds = %if.end39
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6108
  %call42 = call i32 @scsi_noretry_cmd(%struct.scsi_cmnd* %21) #10, !dbg !6108
  %tobool43 = icmp ne i32 %call42, 0, !dbg !6108
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end39
  %22 = phi i1 [ false, %if.end39 ], [ %tobool43, %land.rhs ], !dbg !6110
  %lnot44 = xor i1 %22, true, !dbg !6108
  %lnot46 = xor i1 %lnot44, true, !dbg !6108
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !6108
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !6108
  %tobool49 = icmp ne i64 %conv48, 0, !dbg !6108
  br i1 %tobool49, label %if.then50, label %if.end105, !dbg !6111

if.then50:                                        ; preds = %land.end
  %23 = load %struct.request*, %struct.request** %req, align 8, !dbg !6112
  %24 = load i8, i8* %blk_stat, align 1, !dbg !6115
  %25 = load %struct.request*, %struct.request** %req, align 8, !dbg !6116
  %call51 = call i32 @blk_rq_bytes(%struct.request* %25) #10, !dbg !6117
  %call52 = call zeroext i1 @scsi_end_request(%struct.request* %23, i8 zeroext %24, i32 %call51) #10, !dbg !6118
  br i1 %call52, label %if.then53, label %if.end104, !dbg !6119

if.then53:                                        ; preds = %if.then50
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !6120, metadata !DIExpression()), !dbg !6122
  store i32 1, i32* %__ret_warn_once, align 4, !dbg !6122
  %26 = load i32, i32* %__ret_warn_once, align 4, !dbg !6123
  %tobool54 = icmp ne i32 %26, 0, !dbg !6123
  br i1 %tobool54, label %land.rhs55, label %land.end59, !dbg !6123

land.rhs55:                                       ; preds = %if.then53
  %27 = load i8, i8* @scsi_io_completion.__warned, align 1, !dbg !6123
  %tobool56 = trunc i8 %27 to i1, !dbg !6123
  %lnot57 = xor i1 %tobool56, true, !dbg !6123
  br label %land.end59

land.end59:                                       ; preds = %land.rhs55, %if.then53
  %28 = phi i1 [ false, %if.then53 ], [ %lnot57, %land.rhs55 ], !dbg !6125
  %lnot60 = xor i1 %28, true, !dbg !6123
  %lnot62 = xor i1 %lnot60, true, !dbg !6123
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !6123
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !6123
  %tobool65 = icmp ne i64 %conv64, 0, !dbg !6123
  br i1 %tobool65, label %if.then66, label %if.end96, !dbg !6122

if.then66:                                        ; preds = %land.end59
  store i8 1, i8* @scsi_io_completion.__warned, align 1, !dbg !6126
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6128, metadata !DIExpression()), !dbg !6130
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !6130
  %29 = load i32, i32* %__ret_warn_on, align 4, !dbg !6131
  %tobool67 = icmp ne i32 %29, 0, !dbg !6131
  %lnot68 = xor i1 %tobool67, true, !dbg !6131
  %lnot70 = xor i1 %lnot68, true, !dbg !6131
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !6131
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !6131
  %tobool73 = icmp ne i64 %conv72, 0, !dbg !6131
  br i1 %tobool73, label %if.then74, label %if.end89, !dbg !6130

if.then74:                                        ; preds = %if.then66
  br label %do.body75, !dbg !6131

do.body75:                                        ; preds = %if.then74
  br label %do.body76, !dbg !6133

do.body76:                                        ; preds = %do.body75
  br label %do.end77, !dbg !6135

do.end77:                                         ; preds = %do.body76
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !6133
  br label %do.body78, !dbg !6133

do.body78:                                        ; preds = %do.end77
  br label %do.body79, !dbg !6137

do.body79:                                        ; preds = %do.body78
  br label %do.end80, !dbg !6139

do.end80:                                         ; preds = %do.body79
  br label %do.body81, !dbg !6137

do.body81:                                        ; preds = %do.end80
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 973, i32 2313, i64 12) #7, !dbg !6141, !srcloc !6143
  br label %do.end82, !dbg !6141

do.end82:                                         ; preds = %do.body81
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 309) #7, !dbg !6144, !srcloc !6146
  br label %do.body83, !dbg !6137

do.body83:                                        ; preds = %do.end82
  br label %do.end84, !dbg !6147

do.end84:                                         ; preds = %do.body83
  br label %do.end85, !dbg !6137

do.end85:                                         ; preds = %do.end84
  br label %do.body86, !dbg !6133

do.body86:                                        ; preds = %do.end85
  br label %do.end87, !dbg !6149

do.end87:                                         ; preds = %do.body86
  br label %do.end88, !dbg !6133

do.end88:                                         ; preds = %do.end87
  br label %if.end89, !dbg !6133

if.end89:                                         ; preds = %do.end88, %if.then66
  %30 = load i32, i32* %__ret_warn_on, align 4, !dbg !6130
  %tobool90 = icmp ne i32 %30, 0, !dbg !6130
  %lnot91 = xor i1 %tobool90, true, !dbg !6130
  %lnot93 = xor i1 %lnot91, true, !dbg !6130
  %lnot.ext94 = zext i1 %lnot93 to i32, !dbg !6130
  %conv95 = sext i32 %lnot.ext94 to i64, !dbg !6130
  store i64 %conv95, i64* %tmp, align 8, !dbg !6131
  %31 = load i64, i64* %tmp, align 8, !dbg !6130
  br label %if.end96, !dbg !6126

if.end96:                                         ; preds = %if.end89, %land.end59
  %32 = load i32, i32* %__ret_warn_once, align 4, !dbg !6122
  %tobool98 = icmp ne i32 %32, 0, !dbg !6122
  %lnot99 = xor i1 %tobool98, true, !dbg !6122
  %lnot101 = xor i1 %lnot99, true, !dbg !6122
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !6122
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !6122
  store i64 %conv103, i64* %tmp97, align 8, !dbg !6123
  %33 = load i64, i64* %tmp97, align 8, !dbg !6122
  br label %if.end104, !dbg !6151

if.end104:                                        ; preds = %if.end96, %if.then50
  br label %if.end115, !dbg !6152

if.end105:                                        ; preds = %land.end
  %34 = load i32, i32* %result, align 4, !dbg !6153
  %cmp106 = icmp eq i32 %34, 0, !dbg !6153
  %lnot108 = xor i1 %cmp106, true, !dbg !6153
  %lnot110 = xor i1 %lnot108, true, !dbg !6153
  %lnot.ext111 = zext i1 %lnot110 to i32, !dbg !6153
  %conv112 = sext i32 %lnot.ext111 to i64, !dbg !6153
  %tobool113 = icmp ne i64 %conv112, 0, !dbg !6153
  br i1 %tobool113, label %if.then114, label %if.else, !dbg !6155

if.then114:                                       ; preds = %if.end105
  %35 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6156
  %36 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !6157
  call void @scsi_io_completion_reprep(%struct.scsi_cmnd* %35, %struct.request_queue* %36) #10, !dbg !6158
  br label %if.end115, !dbg !6158

if.else:                                          ; preds = %if.end105
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6159
  %38 = load i32, i32* %result, align 4, !dbg !6160
  call void @scsi_io_completion_action(%struct.scsi_cmnd* %37, i32 %38) #10, !dbg !6161
  br label %if.end115

if.end115:                                        ; preds = %if.then37, %if.end104, %if.else, %if.then114
  ret void, !dbg !6162
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_io_completion_nz_result(%struct.scsi_cmnd* %cmd, i32 %result, i8* %blk_statp) #0 !dbg !6163 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %result.addr = alloca i32, align 4
  %blk_statp.addr = alloca i8*, align 8
  %sense_valid = alloca i8, align 1
  %sense_current = alloca i8, align 1
  %req = alloca %struct.request*, align 8
  %sshdr = alloca %struct.scsi_sense_hdr, align 1
  %__UNIQUE_ID___x307 = alloca i32, align 4
  %__UNIQUE_ID___y308 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %do_print = alloca i8, align 1
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6167, metadata !DIExpression()), !dbg !6168
  store i32 %result, i32* %result.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !6169, metadata !DIExpression()), !dbg !6170
  store i8* %blk_statp, i8** %blk_statp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %blk_statp.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata i8* %sense_valid, metadata !6173, metadata !DIExpression()), !dbg !6174
  call void @llvm.dbg.declare(metadata i8* %sense_current, metadata !6175, metadata !DIExpression()), !dbg !6176
  store i8 1, i8* %sense_current, align 1, !dbg !6176
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !6177, metadata !DIExpression()), !dbg !6178
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6179
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 19, !dbg !6180
  %1 = load %struct.request*, %struct.request** %request, align 8, !dbg !6180
  store %struct.request* %1, %struct.request** %req, align 8, !dbg !6178
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr* %sshdr, metadata !6181, metadata !DIExpression()), !dbg !6182
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6183
  %call = call zeroext i1 @scsi_command_normalize_sense(%struct.scsi_cmnd* %2, %struct.scsi_sense_hdr* %sshdr) #10, !dbg !6184
  %frombool = zext i1 %call to i8, !dbg !6185
  store i8 %frombool, i8* %sense_valid, align 1, !dbg !6185
  %3 = load i8, i8* %sense_valid, align 1, !dbg !6186
  %tobool = trunc i8 %3 to i1, !dbg !6186
  br i1 %tobool, label %if.then, label %if.end, !dbg !6188

if.then:                                          ; preds = %entry
  %call1 = call zeroext i1 @scsi_sense_is_deferred(%struct.scsi_sense_hdr* %sshdr) #10, !dbg !6189
  %lnot = xor i1 %call1, true, !dbg !6190
  %frombool2 = zext i1 %lnot to i8, !dbg !6191
  store i8 %frombool2, i8* %sense_current, align 1, !dbg !6191
  br label %if.end, !dbg !6192

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.request*, %struct.request** %req, align 8, !dbg !6193
  %call3 = call zeroext i1 @blk_rq_is_passthrough(%struct.request* %4) #10, !dbg !6195
  br i1 %call3, label %if.then4, label %if.else, !dbg !6196

if.then4:                                         ; preds = %if.end
  %5 = load i8, i8* %sense_valid, align 1, !dbg !6197
  %tobool5 = trunc i8 %5 to i1, !dbg !6197
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !6200

if.then6:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x307, metadata !6201, metadata !DIExpression()), !dbg !6204
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6204
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %6, i32 0, i32 20, !dbg !6204
  %7 = load i8*, i8** %sense_buffer, align 8, !dbg !6204
  %arrayidx = getelementptr i8, i8* %7, i64 7, !dbg !6204
  %8 = load i8, i8* %arrayidx, align 1, !dbg !6204
  %conv = zext i8 %8 to i32, !dbg !6204
  %add = add i32 8, %conv, !dbg !6204
  store i32 %add, i32* %__UNIQUE_ID___x307, align 4, !dbg !6204
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y308, metadata !6205, metadata !DIExpression()), !dbg !6204
  store i32 96, i32* %__UNIQUE_ID___y308, align 4, !dbg !6204
  %9 = load i32, i32* %__UNIQUE_ID___x307, align 4, !dbg !6204
  %10 = load i32, i32* %__UNIQUE_ID___y308, align 4, !dbg !6204
  %cmp = icmp slt i32 %9, %10, !dbg !6204
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6204

cond.true:                                        ; preds = %if.then6
  %11 = load i32, i32* %__UNIQUE_ID___x307, align 4, !dbg !6204
  br label %cond.end, !dbg !6204

cond.false:                                       ; preds = %if.then6
  %12 = load i32, i32* %__UNIQUE_ID___y308, align 4, !dbg !6204
  br label %cond.end, !dbg !6204

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ %12, %cond.false ], !dbg !6204
  store i32 %cond, i32* %tmp, align 4, !dbg !6204
  %13 = load i32, i32* %tmp, align 4, !dbg !6204
  %14 = load %struct.request*, %struct.request** %req, align 8, !dbg !6206
  %call8 = call %struct.scsi_request* @scsi_req(%struct.request* %14) #10, !dbg !6207
  %sense_len = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %call8, i32 0, i32 4, !dbg !6208
  store i32 %13, i32* %sense_len, align 8, !dbg !6209
  br label %if.end9, !dbg !6210

if.end9:                                          ; preds = %cond.end, %if.then4
  %15 = load i8, i8* %sense_current, align 1, !dbg !6211
  %tobool10 = trunc i8 %15 to i1, !dbg !6211
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !6213

if.then11:                                        ; preds = %if.end9
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6214
  %17 = load i32, i32* %result.addr, align 4, !dbg !6215
  %call12 = call zeroext i8 @scsi_result_to_blk_status(%struct.scsi_cmnd* %16, i32 %17) #10, !dbg !6216
  %18 = load i8*, i8** %blk_statp.addr, align 8, !dbg !6217
  store i8 %call12, i8* %18, align 1, !dbg !6218
  br label %if.end13, !dbg !6219

if.end13:                                         ; preds = %if.then11, %if.end9
  br label %if.end22, !dbg !6220

if.else:                                          ; preds = %if.end
  %19 = load %struct.request*, %struct.request** %req, align 8, !dbg !6221
  %call14 = call i32 @blk_rq_bytes(%struct.request* %19) #10, !dbg !6223
  %cmp15 = icmp eq i32 %call14, 0, !dbg !6224
  br i1 %cmp15, label %land.lhs.true, label %if.end21, !dbg !6225

land.lhs.true:                                    ; preds = %if.else
  %20 = load i8, i8* %sense_current, align 1, !dbg !6226
  %tobool17 = trunc i8 %20 to i1, !dbg !6226
  br i1 %tobool17, label %if.then19, label %if.end21, !dbg !6227

if.then19:                                        ; preds = %land.lhs.true
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6228
  %22 = load i32, i32* %result.addr, align 4, !dbg !6230
  %call20 = call zeroext i8 @scsi_result_to_blk_status(%struct.scsi_cmnd* %21, i32 %22) #10, !dbg !6231
  %23 = load i8*, i8** %blk_statp.addr, align 8, !dbg !6232
  store i8 %call20, i8* %23, align 1, !dbg !6233
  br label %if.end21, !dbg !6234

if.end21:                                         ; preds = %if.then19, %land.lhs.true, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end13
  %24 = load i8, i8* %sense_valid, align 1, !dbg !6235
  %tobool23 = trunc i8 %24 to i1, !dbg !6235
  br i1 %tobool23, label %land.lhs.true25, label %if.end46, !dbg !6237

land.lhs.true25:                                  ; preds = %if.end22
  %sense_key = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 1, !dbg !6238
  %25 = load i8, i8* %sense_key, align 1, !dbg !6238
  %conv26 = zext i8 %25 to i32, !dbg !6239
  %cmp27 = icmp eq i32 %conv26, 1, !dbg !6240
  br i1 %cmp27, label %if.then29, label %if.end46, !dbg !6241

if.then29:                                        ; preds = %land.lhs.true25
  call void @llvm.dbg.declare(metadata i8* %do_print, metadata !6242, metadata !DIExpression()), !dbg !6244
  store i8 1, i8* %do_print, align 1, !dbg !6244
  %asc = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !6245
  %26 = load i8, i8* %asc, align 1, !dbg !6245
  %conv30 = zext i8 %26 to i32, !dbg !6247
  %cmp31 = icmp eq i32 %conv30, 0, !dbg !6248
  br i1 %cmp31, label %land.lhs.true33, label %if.else38, !dbg !6249

land.lhs.true33:                                  ; preds = %if.then29
  %ascq = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !6250
  %27 = load i8, i8* %ascq, align 1, !dbg !6250
  %conv34 = zext i8 %27 to i32, !dbg !6251
  %cmp35 = icmp eq i32 %conv34, 29, !dbg !6252
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !6253

if.then37:                                        ; preds = %land.lhs.true33
  store i8 0, i8* %do_print, align 1, !dbg !6254
  br label %if.end42, !dbg !6255

if.else38:                                        ; preds = %land.lhs.true33, %if.then29
  %28 = load %struct.request*, %struct.request** %req, align 8, !dbg !6256
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %28, i32 0, i32 4, !dbg !6258
  %29 = load i32, i32* %rq_flags, align 4, !dbg !6258
  %and = and i32 %29, 2048, !dbg !6259
  %tobool39 = icmp ne i32 %and, 0, !dbg !6259
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !6260

if.then40:                                        ; preds = %if.else38
  store i8 0, i8* %do_print, align 1, !dbg !6261
  br label %if.end41, !dbg !6262

if.end41:                                         ; preds = %if.then40, %if.else38
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then37
  %30 = load i8, i8* %do_print, align 1, !dbg !6263
  %tobool43 = trunc i8 %30 to i1, !dbg !6263
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !6265

if.then44:                                        ; preds = %if.end42
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6266
  call void @scsi_print_sense(%struct.scsi_cmnd* %31) #10, !dbg !6267
  br label %if.end45, !dbg !6267

if.end45:                                         ; preds = %if.then44, %if.end42
  store i32 0, i32* %result.addr, align 4, !dbg !6268
  %32 = load i8*, i8** %blk_statp.addr, align 8, !dbg !6269
  store i8 0, i8* %32, align 1, !dbg !6270
  br label %if.end46, !dbg !6271

if.end46:                                         ; preds = %if.end45, %land.lhs.true25, %if.end22
  %33 = load i32, i32* %result.addr, align 4, !dbg !6272
  %shr = ashr i32 %33, 1, !dbg !6272
  %and47 = and i32 %shr, 127, !dbg !6272
  %tobool48 = icmp ne i32 %and47, 0, !dbg !6272
  br i1 %tobool48, label %land.lhs.true49, label %if.end53, !dbg !6274

land.lhs.true49:                                  ; preds = %if.end46
  %34 = load i32, i32* %result.addr, align 4, !dbg !6275
  %call50 = call i32 @scsi_status_is_good(i32 %34) #10, !dbg !6276
  %tobool51 = icmp ne i32 %call50, 0, !dbg !6276
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !6277

if.then52:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %result.addr, align 4, !dbg !6278
  %35 = load i8*, i8** %blk_statp.addr, align 8, !dbg !6280
  store i8 0, i8* %35, align 1, !dbg !6281
  br label %if.end53, !dbg !6282

if.end53:                                         ; preds = %if.then52, %land.lhs.true49, %if.end46
  %36 = load i32, i32* %result.addr, align 4, !dbg !6283
  ret i32 %36, !dbg !6284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_rq_is_passthrough(%struct.request* %rq) #0 !dbg !6285 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !6286, metadata !DIExpression()), !dbg !6287
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6288
  %call = call zeroext i1 @blk_rq_is_scsi(%struct.request* %0) #10, !dbg !6289
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !6290

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6291
  %call1 = call zeroext i1 @blk_rq_is_private(%struct.request* %1) #10, !dbg !6292
  br label %lor.end, !dbg !6290

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call1, %lor.rhs ]
  ret i1 %2, !dbg !6293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_rq_bytes(%struct.request* %rq) #0 !dbg !6294 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !6299, metadata !DIExpression()), !dbg !6300
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6301
  %__data_len = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 7, !dbg !6302
  %1 = load i32, i32* %__data_len, align 8, !dbg !6302
  ret i32 %1, !dbg !6303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @scsi_end_request(%struct.request* %req, i8 zeroext %error, i32 %bytes) #0 !dbg !6304 {
entry:
  %retval = alloca i1, align 1
  %req.addr = alloca %struct.request*, align 8
  %error.addr = alloca i8, align 1
  %bytes.addr = alloca i32, align 4
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %q = alloca %struct.request_queue*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !6307, metadata !DIExpression()), !dbg !6308
  store i8 %error, i8* %error.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %error.addr, metadata !6309, metadata !DIExpression()), !dbg !6310
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !6313, metadata !DIExpression()), !dbg !6314
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6315
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #10, !dbg !6316
  %1 = bitcast i8* %call to %struct.scsi_cmnd*, !dbg !6316
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !6314
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !6317, metadata !DIExpression()), !dbg !6318
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !6319
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 1, !dbg !6320
  %3 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6320
  store %struct.scsi_device* %3, %struct.scsi_device** %sdev, align 8, !dbg !6318
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !6321, metadata !DIExpression()), !dbg !6322
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !6323
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 1, !dbg !6324
  %5 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !6324
  store %struct.request_queue* %5, %struct.request_queue** %q, align 8, !dbg !6322
  %6 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6325
  %7 = load i8, i8* %error.addr, align 1, !dbg !6327
  %8 = load i32, i32* %bytes.addr, align 4, !dbg !6328
  %call1 = call zeroext i1 @blk_update_request(%struct.request* %6, i8 zeroext %7, i32 %8) #10, !dbg !6329
  br i1 %call1, label %if.then, label %if.end, !dbg !6330

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !6331
  br label %return, !dbg !6331

if.end:                                           ; preds = %entry
  %9 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !6332
  %queue_flags = getelementptr inbounds %struct.request_queue, %struct.request_queue* %9, i32 0, i32 12, !dbg !6332
  %call2 = call zeroext i1 @test_bit(i64 10, i64* %queue_flags) #10, !dbg !6332
  br i1 %call2, label %if.then3, label %if.end4, !dbg !6334

if.then3:                                         ; preds = %if.end
  %10 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6335
  %rq_disk = getelementptr inbounds %struct.request, %struct.request* %10, i32 0, i32 15, !dbg !6336
  %11 = load %struct.gendisk*, %struct.gendisk** %rq_disk, align 8, !dbg !6336
  call void @add_disk_randomness(%struct.gendisk* %11) #10, !dbg !6337
  br label %if.end4, !dbg !6337

if.end4:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6338
  %call5 = call zeroext i1 @blk_rq_is_scsi(%struct.request* %12) #10, !dbg !6340
  br i1 %call5, label %if.end31, label %if.then6, !dbg !6341

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6342, metadata !DIExpression()), !dbg !6345
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !6345
  %flags = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 25, !dbg !6345
  %14 = load i32, i32* %flags, align 4, !dbg !6345
  %and = and i32 %14, 4, !dbg !6345
  %tobool = icmp ne i32 %and, 0, !dbg !6345
  %lnot = xor i1 %tobool, true, !dbg !6345
  %lnot7 = xor i1 %lnot, true, !dbg !6345
  %lnot8 = xor i1 %lnot7, true, !dbg !6345
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !6345
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6345
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !6346
  %tobool9 = icmp ne i32 %15, 0, !dbg !6346
  %lnot10 = xor i1 %tobool9, true, !dbg !6346
  %lnot12 = xor i1 %lnot10, true, !dbg !6346
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !6346
  %conv = sext i32 %lnot.ext13 to i64, !dbg !6346
  %tobool14 = icmp ne i64 %conv, 0, !dbg !6346
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !6345

if.then15:                                        ; preds = %if.then6
  br label %do.body, !dbg !6346

do.body:                                          ; preds = %if.then15
  br label %do.body16, !dbg !6348

do.body16:                                        ; preds = %do.body
  br label %do.end, !dbg !6350

do.end:                                           ; preds = %do.body16
  br label %do.body17, !dbg !6348

do.body17:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 576, i32 2307, i64 12) #7, !dbg !6352, !srcloc !6354
  br label %do.end18, !dbg !6352

do.end18:                                         ; preds = %do.body17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 306) #7, !dbg !6355, !srcloc !6357
  br label %do.body19, !dbg !6348

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !6358

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !6348

do.end21:                                         ; preds = %do.end20
  br label %if.end22, !dbg !6348

if.end22:                                         ; preds = %do.end21, %if.then6
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !6345
  %tobool23 = icmp ne i32 %16, 0, !dbg !6345
  %lnot24 = xor i1 %tobool23, true, !dbg !6345
  %lnot26 = xor i1 %lnot24, true, !dbg !6345
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !6345
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !6345
  store i64 %conv28, i64* %tmp, align 8, !dbg !6346
  %17 = load i64, i64* %tmp, align 8, !dbg !6345
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !6360
  %flags29 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %18, i32 0, i32 25, !dbg !6361
  %19 = load i32, i32* %flags29, align 4, !dbg !6362
  %and30 = and i32 %19, -5, !dbg !6362
  store i32 %and30, i32* %flags29, align 4, !dbg !6362
  br label %if.end31, !dbg !6363

if.end31:                                         ; preds = %if.end22, %if.end4
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !6364
  %rcu = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 4, !dbg !6365
  call void @destroy_rcu_head(%struct.callback_head* %rcu) #10, !dbg !6366
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !6367
  call void @scsi_mq_uninit_cmd(%struct.scsi_cmnd* %21) #10, !dbg !6368
  %22 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !6369
  %q_usage_counter = getelementptr inbounds %struct.request_queue, %struct.request_queue* %22, i32 0, i32 2, !dbg !6370
  call void @percpu_ref_get(%struct.percpu_ref* %q_usage_counter) #10, !dbg !6371
  %23 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6372
  %24 = load i8, i8* %error.addr, align 1, !dbg !6373
  call void @__blk_mq_end_request(%struct.request* %23, i8 zeroext %24) #10, !dbg !6374
  %25 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !6375
  call void @scsi_run_queue_async(%struct.scsi_device* %25) #10, !dbg !6376
  %26 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !6377
  %q_usage_counter32 = getelementptr inbounds %struct.request_queue, %struct.request_queue* %26, i32 0, i32 2, !dbg !6378
  call void @percpu_ref_put(%struct.percpu_ref* %q_usage_counter32) #10, !dbg !6379
  store i1 false, i1* %retval, align 1, !dbg !6380
  br label %return, !dbg !6380

return:                                           ; preds = %if.end31, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !6381
  ret i1 %27, !dbg !6381
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_noretry_cmd(%struct.scsi_cmnd*) #2

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_io_completion_reprep(%struct.scsi_cmnd* %cmd, %struct.request_queue* %q) #0 !dbg !6382 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %q.addr = alloca %struct.request_queue*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6385, metadata !DIExpression()), !dbg !6386
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !6387, metadata !DIExpression()), !dbg !6388
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6389
  call void @scsi_mq_requeue_cmd(%struct.scsi_cmnd* %0) #10, !dbg !6390
  ret void, !dbg !6391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_io_completion_action(%struct.scsi_cmnd* %cmd, i32 %result) #0 !dbg !265 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %result.addr = alloca i32, align 4
  %q = alloca %struct.request_queue*, align 8
  %req = alloca %struct.request*, align 8
  %level = alloca i32, align 4
  %action = alloca i32, align 4
  %sshdr = alloca %struct.scsi_sense_hdr, align 1
  %sense_valid = alloca i8, align 1
  %sense_current = alloca i8, align 1
  %blk_stat = alloca i8, align 1
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6392, metadata !DIExpression()), !dbg !6393
  store i32 %result, i32* %result.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !6394, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !6396, metadata !DIExpression()), !dbg !6397
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6398
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !6399
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6399
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 1, !dbg !6400
  %2 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !6400
  store %struct.request_queue* %2, %struct.request_queue** %q, align 8, !dbg !6397
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !6401, metadata !DIExpression()), !dbg !6402
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6403
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 19, !dbg !6404
  %4 = load %struct.request*, %struct.request** %request, align 8, !dbg !6404
  store %struct.request* %4, %struct.request** %req, align 8, !dbg !6402
  call void @llvm.dbg.declare(metadata i32* %level, metadata !6405, metadata !DIExpression()), !dbg !6406
  store i32 0, i32* %level, align 4, !dbg !6406
  call void @llvm.dbg.declare(metadata i32* %action, metadata !6407, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr* %sshdr, metadata !6409, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.declare(metadata i8* %sense_valid, metadata !6411, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.declare(metadata i8* %sense_current, metadata !6413, metadata !DIExpression()), !dbg !6414
  store i8 1, i8* %sense_current, align 1, !dbg !6414
  call void @llvm.dbg.declare(metadata i8* %blk_stat, metadata !6415, metadata !DIExpression()), !dbg !6416
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6417
  %call = call zeroext i1 @scsi_command_normalize_sense(%struct.scsi_cmnd* %5, %struct.scsi_sense_hdr* %sshdr) #10, !dbg !6418
  %frombool = zext i1 %call to i8, !dbg !6419
  store i8 %frombool, i8* %sense_valid, align 1, !dbg !6419
  %6 = load i8, i8* %sense_valid, align 1, !dbg !6420
  %tobool = trunc i8 %6 to i1, !dbg !6420
  br i1 %tobool, label %if.then, label %if.end, !dbg !6422

if.then:                                          ; preds = %entry
  %call1 = call zeroext i1 @scsi_sense_is_deferred(%struct.scsi_sense_hdr* %sshdr) #10, !dbg !6423
  %lnot = xor i1 %call1, true, !dbg !6424
  %frombool2 = zext i1 %lnot to i8, !dbg !6425
  store i8 %frombool2, i8* %sense_current, align 1, !dbg !6425
  br label %if.end, !dbg !6426

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6427
  %8 = load i32, i32* %result.addr, align 4, !dbg !6428
  %call3 = call zeroext i8 @scsi_result_to_blk_status(%struct.scsi_cmnd* %7, i32 %8) #10, !dbg !6429
  store i8 %call3, i8* %blk_stat, align 1, !dbg !6430
  %9 = load i32, i32* %result.addr, align 4, !dbg !6431
  %shr = ashr i32 %9, 16, !dbg !6431
  %and = and i32 %shr, 255, !dbg !6431
  %cmp = icmp eq i32 %and, 8, !dbg !6433
  br i1 %cmp, label %if.then4, label %if.else, !dbg !6434

if.then4:                                         ; preds = %if.end
  store i32 2, i32* %action, align 4, !dbg !6435
  br label %if.end115, !dbg !6437

if.else:                                          ; preds = %if.end
  %10 = load i8, i8* %sense_valid, align 1, !dbg !6438
  %tobool5 = trunc i8 %10 to i1, !dbg !6438
  br i1 %tobool5, label %land.lhs.true, label %if.else113, !dbg !6440

land.lhs.true:                                    ; preds = %if.else
  %11 = load i8, i8* %sense_current, align 1, !dbg !6441
  %tobool6 = trunc i8 %11 to i1, !dbg !6441
  br i1 %tobool6, label %if.then7, label %if.else113, !dbg !6442

if.then7:                                         ; preds = %land.lhs.true
  %sense_key = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 1, !dbg !6443
  %12 = load i8, i8* %sense_key, align 1, !dbg !6443
  %conv = zext i8 %12 to i32, !dbg !6445
  switch i32 %conv, label %sw.default111 [
    i32 6, label %sw.bb
    i32 5, label %sw.bb16
    i32 11, label %sw.bb65
    i32 2, label %sw.bb72
    i32 13, label %sw.bb83
    i32 7, label %sw.bb84
  ], !dbg !6446

sw.bb:                                            ; preds = %if.then7
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6447
  %device8 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 1, !dbg !6450
  %14 = load %struct.scsi_device*, %struct.scsi_device** %device8, align 8, !dbg !6450
  %removable = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %14, i32 0, i32 39, !dbg !6451
  %15 = bitcast [6 x i8]* %removable to i48*, !dbg !6451
  %bf.load = load i48, i48* %15, align 4, !dbg !6451
  %bf.clear = and i48 %bf.load, 1, !dbg !6451
  %bf.cast = trunc i48 %bf.clear to i32, !dbg !6451
  %tobool9 = icmp ne i32 %bf.cast, 0, !dbg !6447
  br i1 %tobool9, label %if.then10, label %if.else14, !dbg !6452

if.then10:                                        ; preds = %sw.bb
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6453
  %device11 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 1, !dbg !6455
  %17 = load %struct.scsi_device*, %struct.scsi_device** %device11, align 8, !dbg !6455
  %changed = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %17, i32 0, i32 39, !dbg !6456
  %18 = bitcast [6 x i8]* %changed to i48*, !dbg !6456
  %bf.load12 = load i48, i48* %18, align 4, !dbg !6457
  %bf.clear13 = and i48 %bf.load12, -3, !dbg !6457
  %bf.set = or i48 %bf.clear13, 2, !dbg !6457
  store i48 %bf.set, i48* %18, align 4, !dbg !6457
  store i32 0, i32* %action, align 4, !dbg !6458
  br label %if.end15, !dbg !6459

if.else14:                                        ; preds = %sw.bb
  store i32 2, i32* %action, align 4, !dbg !6460
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then10
  br label %sw.epilog112, !dbg !6462

sw.bb16:                                          ; preds = %if.then7
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6463
  %device17 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %19, i32 0, i32 1, !dbg !6465
  %20 = load %struct.scsi_device*, %struct.scsi_device** %device17, align 8, !dbg !6465
  %use_10_for_rw = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %20, i32 0, i32 39, !dbg !6466
  %21 = bitcast [6 x i8]* %use_10_for_rw to i48*, !dbg !6466
  %bf.load18 = load i48, i48* %21, align 4, !dbg !6466
  %bf.lshr = lshr i48 %bf.load18, 15, !dbg !6466
  %bf.clear19 = and i48 %bf.lshr, 1, !dbg !6466
  %bf.cast20 = trunc i48 %bf.clear19 to i32, !dbg !6466
  %tobool21 = icmp ne i32 %bf.cast20, 0, !dbg !6463
  br i1 %tobool21, label %land.lhs.true22, label %if.else44, !dbg !6467

land.lhs.true22:                                  ; preds = %sw.bb16
  %asc = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !6468
  %22 = load i8, i8* %asc, align 1, !dbg !6468
  %conv23 = zext i8 %22 to i32, !dbg !6469
  %cmp24 = icmp eq i32 %conv23, 32, !dbg !6470
  br i1 %cmp24, label %land.lhs.true26, label %if.else44, !dbg !6471

land.lhs.true26:                                  ; preds = %land.lhs.true22
  %ascq = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !6472
  %23 = load i8, i8* %ascq, align 1, !dbg !6472
  %conv27 = zext i8 %23 to i32, !dbg !6473
  %cmp28 = icmp eq i32 %conv27, 0, !dbg !6474
  br i1 %cmp28, label %land.lhs.true30, label %if.else44, !dbg !6475

land.lhs.true30:                                  ; preds = %land.lhs.true26
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6476
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 14, !dbg !6477
  %25 = load i8*, i8** %cmnd, align 8, !dbg !6477
  %arrayidx = getelementptr i8, i8* %25, i64 0, !dbg !6476
  %26 = load i8, i8* %arrayidx, align 1, !dbg !6476
  %conv31 = zext i8 %26 to i32, !dbg !6476
  %cmp32 = icmp eq i32 %conv31, 40, !dbg !6478
  br i1 %cmp32, label %if.then39, label %lor.lhs.false, !dbg !6479

lor.lhs.false:                                    ; preds = %land.lhs.true30
  %27 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6480
  %cmnd34 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %27, i32 0, i32 14, !dbg !6481
  %28 = load i8*, i8** %cmnd34, align 8, !dbg !6481
  %arrayidx35 = getelementptr i8, i8* %28, i64 0, !dbg !6480
  %29 = load i8, i8* %arrayidx35, align 1, !dbg !6480
  %conv36 = zext i8 %29 to i32, !dbg !6480
  %cmp37 = icmp eq i32 %conv36, 42, !dbg !6482
  br i1 %cmp37, label %if.then39, label %if.else44, !dbg !6483

if.then39:                                        ; preds = %lor.lhs.false, %land.lhs.true30
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6484
  %device40 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %30, i32 0, i32 1, !dbg !6486
  %31 = load %struct.scsi_device*, %struct.scsi_device** %device40, align 8, !dbg !6486
  %use_10_for_rw41 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %31, i32 0, i32 39, !dbg !6487
  %32 = bitcast [6 x i8]* %use_10_for_rw41 to i48*, !dbg !6487
  %bf.load42 = load i48, i48* %32, align 4, !dbg !6488
  %bf.clear43 = and i48 %bf.load42, -32769, !dbg !6488
  store i48 %bf.clear43, i48* %32, align 4, !dbg !6488
  store i32 1, i32* %action, align 4, !dbg !6489
  br label %if.end64, !dbg !6490

if.else44:                                        ; preds = %lor.lhs.false, %land.lhs.true26, %land.lhs.true22, %sw.bb16
  %asc45 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !6491
  %33 = load i8, i8* %asc45, align 1, !dbg !6491
  %conv46 = zext i8 %33 to i32, !dbg !6493
  %cmp47 = icmp eq i32 %conv46, 16, !dbg !6494
  br i1 %cmp47, label %if.then49, label %if.else50, !dbg !6495

if.then49:                                        ; preds = %if.else44
  store i32 0, i32* %action, align 4, !dbg !6496
  store i8 8, i8* %blk_stat, align 1, !dbg !6498
  br label %if.end63, !dbg !6499

if.else50:                                        ; preds = %if.else44
  %asc51 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !6500
  %34 = load i8, i8* %asc51, align 1, !dbg !6500
  %conv52 = zext i8 %34 to i32, !dbg !6502
  %cmp53 = icmp eq i32 %conv52, 32, !dbg !6503
  br i1 %cmp53, label %if.then60, label %lor.lhs.false55, !dbg !6504

lor.lhs.false55:                                  ; preds = %if.else50
  %asc56 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !6505
  %35 = load i8, i8* %asc56, align 1, !dbg !6505
  %conv57 = zext i8 %35 to i32, !dbg !6506
  %cmp58 = icmp eq i32 %conv57, 36, !dbg !6507
  br i1 %cmp58, label %if.then60, label %if.else61, !dbg !6508

if.then60:                                        ; preds = %lor.lhs.false55, %if.else50
  store i32 0, i32* %action, align 4, !dbg !6509
  store i8 5, i8* %blk_stat, align 1, !dbg !6511
  br label %if.end62, !dbg !6512

if.else61:                                        ; preds = %lor.lhs.false55
  store i32 0, i32* %action, align 4, !dbg !6513
  br label %if.end62

if.end62:                                         ; preds = %if.else61, %if.then60
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then49
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then39
  br label %sw.epilog112, !dbg !6514

sw.bb65:                                          ; preds = %if.then7
  store i32 0, i32* %action, align 4, !dbg !6515
  %asc66 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !6516
  %36 = load i8, i8* %asc66, align 1, !dbg !6516
  %conv67 = zext i8 %36 to i32, !dbg !6518
  %cmp68 = icmp eq i32 %conv67, 16, !dbg !6519
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !6520

if.then70:                                        ; preds = %sw.bb65
  store i8 8, i8* %blk_stat, align 1, !dbg !6521
  br label %if.end71, !dbg !6522

if.end71:                                         ; preds = %if.then70, %sw.bb65
  br label %sw.epilog112, !dbg !6523

sw.bb72:                                          ; preds = %if.then7
  %asc73 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !6524
  %37 = load i8, i8* %asc73, align 1, !dbg !6524
  %conv74 = zext i8 %37 to i32, !dbg !6526
  %cmp75 = icmp eq i32 %conv74, 4, !dbg !6527
  br i1 %cmp75, label %if.then77, label %if.else81, !dbg !6528

if.then77:                                        ; preds = %sw.bb72
  %ascq78 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !6529
  %38 = load i8, i8* %ascq78, align 1, !dbg !6529
  %conv79 = zext i8 %38 to i32, !dbg !6531
  switch i32 %conv79, label %sw.default [
    i32 1, label %sw.bb80
    i32 4, label %sw.bb80
    i32 5, label %sw.bb80
    i32 6, label %sw.bb80
    i32 7, label %sw.bb80
    i32 8, label %sw.bb80
    i32 9, label %sw.bb80
    i32 20, label %sw.bb80
    i32 26, label %sw.bb80
    i32 27, label %sw.bb80
    i32 29, label %sw.bb80
    i32 36, label %sw.bb80
  ], !dbg !6532

sw.bb80:                                          ; preds = %if.then77, %if.then77, %if.then77, %if.then77, %if.then77, %if.then77, %if.then77, %if.then77, %if.then77, %if.then77, %if.then77, %if.then77
  store i32 3, i32* %action, align 4, !dbg !6533
  br label %sw.epilog, !dbg !6535

sw.default:                                       ; preds = %if.then77
  store i32 0, i32* %action, align 4, !dbg !6536
  br label %sw.epilog, !dbg !6537

sw.epilog:                                        ; preds = %sw.default, %sw.bb80
  br label %if.end82, !dbg !6538

if.else81:                                        ; preds = %sw.bb72
  store i32 0, i32* %action, align 4, !dbg !6539
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %sw.epilog
  br label %sw.epilog112, !dbg !6540

sw.bb83:                                          ; preds = %if.then7
  store i32 0, i32* %action, align 4, !dbg !6541
  br label %sw.epilog112, !dbg !6542

sw.bb84:                                          ; preds = %if.then7
  store i32 0, i32* %action, align 4, !dbg !6543
  %asc85 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !6544
  %39 = load i8, i8* %asc85, align 1, !dbg !6544
  %conv86 = zext i8 %39 to i32, !dbg !6546
  %cmp87 = icmp eq i32 %conv86, 12, !dbg !6547
  br i1 %cmp87, label %land.lhs.true89, label %lor.lhs.false94, !dbg !6548

land.lhs.true89:                                  ; preds = %sw.bb84
  %ascq90 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !6549
  %40 = load i8, i8* %ascq90, align 1, !dbg !6549
  %conv91 = zext i8 %40 to i32, !dbg !6550
  %cmp92 = icmp eq i32 %conv91, 18, !dbg !6551
  br i1 %cmp92, label %if.then109, label %lor.lhs.false94, !dbg !6552

lor.lhs.false94:                                  ; preds = %land.lhs.true89, %sw.bb84
  %asc95 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !6553
  %41 = load i8, i8* %asc95, align 1, !dbg !6553
  %conv96 = zext i8 %41 to i32, !dbg !6554
  %cmp97 = icmp eq i32 %conv96, 85, !dbg !6555
  br i1 %cmp97, label %land.lhs.true99, label %if.end110, !dbg !6556

land.lhs.true99:                                  ; preds = %lor.lhs.false94
  %ascq100 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !6557
  %42 = load i8, i8* %ascq100, align 1, !dbg !6557
  %conv101 = zext i8 %42 to i32, !dbg !6558
  %cmp102 = icmp eq i32 %conv101, 14, !dbg !6559
  br i1 %cmp102, label %if.then109, label %lor.lhs.false104, !dbg !6560

lor.lhs.false104:                                 ; preds = %land.lhs.true99
  %ascq105 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !6561
  %43 = load i8, i8* %ascq105, align 1, !dbg !6561
  %conv106 = zext i8 %43 to i32, !dbg !6562
  %cmp107 = icmp eq i32 %conv106, 15, !dbg !6563
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !6564

if.then109:                                       ; preds = %lor.lhs.false104, %land.lhs.true99, %land.lhs.true89
  store i8 15, i8* %blk_stat, align 1, !dbg !6565
  br label %if.end110, !dbg !6567

if.end110:                                        ; preds = %if.then109, %lor.lhs.false104, %lor.lhs.false94
  br label %sw.epilog112, !dbg !6568

sw.default111:                                    ; preds = %if.then7
  store i32 0, i32* %action, align 4, !dbg !6569
  br label %sw.epilog112, !dbg !6570

sw.epilog112:                                     ; preds = %sw.default111, %if.end110, %sw.bb83, %if.end82, %if.end71, %if.end64, %if.end15
  br label %if.end114, !dbg !6571

if.else113:                                       ; preds = %land.lhs.true, %if.else
  store i32 0, i32* %action, align 4, !dbg !6572
  br label %if.end114

if.end114:                                        ; preds = %if.else113, %sw.epilog112
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then4
  %44 = load i32, i32* %action, align 4, !dbg !6573
  %cmp116 = icmp ne i32 %44, 0, !dbg !6575
  br i1 %cmp116, label %land.lhs.true118, label %if.end122, !dbg !6576

land.lhs.true118:                                 ; preds = %if.end115
  %45 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6577
  %call119 = call zeroext i1 @scsi_cmd_runtime_exceeced(%struct.scsi_cmnd* %45) #10, !dbg !6578
  br i1 %call119, label %if.then121, label %if.end122, !dbg !6579

if.then121:                                       ; preds = %land.lhs.true118
  store i32 0, i32* %action, align 4, !dbg !6580
  br label %if.end122, !dbg !6581

if.end122:                                        ; preds = %if.then121, %land.lhs.true118, %if.end115
  %46 = load i32, i32* %action, align 4, !dbg !6582
  switch i32 %46, label %sw.epilog154 [
    i32 0, label %sw.bb123
    i32 1, label %sw.bb151
    i32 2, label %sw.bb152
    i32 3, label %sw.bb153
  ], !dbg !6583

sw.bb123:                                         ; preds = %if.end122
  %47 = load %struct.request*, %struct.request** %req, align 8, !dbg !6584
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %47, i32 0, i32 4, !dbg !6587
  %48 = load i32, i32* %rq_flags, align 4, !dbg !6587
  %and124 = and i32 %48, 2048, !dbg !6588
  %tobool125 = icmp ne i32 %and124, 0, !dbg !6588
  br i1 %tobool125, label %if.end146, label %if.then126, !dbg !6589

if.then126:                                       ; preds = %sw.bb123
  %49 = load i32, i32* @scsi_logging_level, align 4, !dbg !6590
  %tobool127 = icmp ne i32 %49, 0, !dbg !6590
  %lnot128 = xor i1 %tobool127, true, !dbg !6590
  %lnot129 = xor i1 %lnot128, true, !dbg !6590
  %lnot.ext = zext i1 %lnot129 to i32, !dbg !6590
  %conv130 = sext i32 %lnot.ext to i64, !dbg !6590
  %tobool131 = icmp ne i64 %conv130, 0, !dbg !6590
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !6593

if.then132:                                       ; preds = %if.then126
  store i32 0, i32* %level, align 4, !dbg !6594
  br label %if.end133, !dbg !6595

if.end133:                                        ; preds = %if.then132, %if.then126
  %50 = load i32, i32* %level, align 4, !dbg !6596
  %tobool134 = icmp ne i32 %50, 0, !dbg !6596
  br i1 %tobool134, label %if.end145, label %land.lhs.true135, !dbg !6598

land.lhs.true135:                                 ; preds = %if.end133
  %call136 = call i32 @___ratelimit(%struct.ratelimit_state* @scsi_io_completion_action._rs, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.scsi_io_completion_action, i64 0, i64 0)) #10, !dbg !6599
  %tobool137 = icmp ne i32 %call136, 0, !dbg !6599
  br i1 %tobool137, label %if.then138, label %if.end145, !dbg !6600

if.then138:                                       ; preds = %land.lhs.true135
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6601
  call void @scsi_print_result(%struct.scsi_cmnd* %51, i8* null, i32 8195) #10, !dbg !6603
  %52 = load i32, i32* %result.addr, align 4, !dbg !6604
  %shr139 = ashr i32 %52, 24, !dbg !6604
  %and140 = and i32 %shr139, 255, !dbg !6604
  %cmp141 = icmp eq i32 %and140, 8, !dbg !6606
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !6607

if.then143:                                       ; preds = %if.then138
  %53 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6608
  call void @scsi_print_sense(%struct.scsi_cmnd* %53) #10, !dbg !6609
  br label %if.end144, !dbg !6609

if.end144:                                        ; preds = %if.then143, %if.then138
  %54 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6610
  call void @scsi_print_command(%struct.scsi_cmnd* %54) #10, !dbg !6611
  br label %if.end145, !dbg !6612

if.end145:                                        ; preds = %if.end144, %land.lhs.true135, %if.end133
  br label %if.end146, !dbg !6613

if.end146:                                        ; preds = %if.end145, %sw.bb123
  %55 = load %struct.request*, %struct.request** %req, align 8, !dbg !6614
  %56 = load i8, i8* %blk_stat, align 1, !dbg !6616
  %57 = load %struct.request*, %struct.request** %req, align 8, !dbg !6617
  %call147 = call i32 @blk_rq_err_bytes(%struct.request* %57) #10, !dbg !6618
  %call148 = call zeroext i1 @scsi_end_request(%struct.request* %55, i8 zeroext %56, i32 %call147) #10, !dbg !6619
  br i1 %call148, label %if.end150, label %if.then149, !dbg !6620

if.then149:                                       ; preds = %if.end146
  br label %sw.epilog154, !dbg !6621

if.end150:                                        ; preds = %if.end146
  br label %sw.bb151, !dbg !6622

sw.bb151:                                         ; preds = %if.end122, %if.end150
  %58 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6623
  %59 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !6624
  call void @scsi_io_completion_reprep(%struct.scsi_cmnd* %58, %struct.request_queue* %59) #10, !dbg !6625
  br label %sw.epilog154, !dbg !6626

sw.bb152:                                         ; preds = %if.end122
  %60 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6627
  call void @__scsi_queue_insert(%struct.scsi_cmnd* %60, i32 4183, i1 zeroext false) #10, !dbg !6628
  br label %sw.epilog154, !dbg !6629

sw.bb153:                                         ; preds = %if.end122
  %61 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6630
  call void @__scsi_queue_insert(%struct.scsi_cmnd* %61, i32 4182, i1 zeroext false) #10, !dbg !6631
  br label %sw.epilog154, !dbg !6632

sw.epilog154:                                     ; preds = %if.then149, %if.end122, %sw.bb153, %sw.bb152, %sw.bb151
  ret void, !dbg !6633
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @scsi_alloc_sgtables(%struct.scsi_cmnd* %cmd) #0 !dbg !6634 {
entry:
  %retval = alloca i8, align 1
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %rq = alloca %struct.request*, align 8
  %nr_segs = alloca i16, align 2
  %last_sg = alloca %struct.scatterlist*, align 8
  %ret = alloca i8, align 1
  %need_drain = alloca i8, align 1
  %count = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %pad_len = alloca i32, align 4
  %prot_sdb = alloca %struct.scsi_data_buffer*, align 8
  %ivecs = alloca i32, align 4
  %__ret_warn_on97 = alloca i32, align 4
  %tmp122 = alloca i64, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !6637, metadata !DIExpression()), !dbg !6638
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6639
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !6640
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6640
  store %struct.scsi_device* %1, %struct.scsi_device** %sdev, align 8, !dbg !6638
  call void @llvm.dbg.declare(metadata %struct.request** %rq, metadata !6641, metadata !DIExpression()), !dbg !6642
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6643
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 19, !dbg !6644
  %3 = load %struct.request*, %struct.request** %request, align 8, !dbg !6644
  store %struct.request* %3, %struct.request** %rq, align 8, !dbg !6642
  call void @llvm.dbg.declare(metadata i16* %nr_segs, metadata !6645, metadata !DIExpression()), !dbg !6646
  %4 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6647
  %call = call zeroext i16 @blk_rq_nr_phys_segments(%struct.request* %4) #10, !dbg !6648
  store i16 %call, i16* %nr_segs, align 2, !dbg !6646
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %last_sg, metadata !6649, metadata !DIExpression()), !dbg !6650
  store %struct.scatterlist* null, %struct.scatterlist** %last_sg, align 8, !dbg !6650
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !6651, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.declare(metadata i8* %need_drain, metadata !6653, metadata !DIExpression()), !dbg !6654
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !6655
  %6 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6656
  %call1 = call zeroext i1 @scsi_cmd_needs_dma_drain(%struct.scsi_device* %5, %struct.request* %6) #10, !dbg !6657
  %frombool = zext i1 %call1 to i8, !dbg !6654
  store i8 %frombool, i8* %need_drain, align 1, !dbg !6654
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6658, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6660, metadata !DIExpression()), !dbg !6663
  %7 = load i16, i16* %nr_segs, align 2, !dbg !6663
  %tobool = icmp ne i16 %7, 0, !dbg !6663
  %lnot = xor i1 %tobool, true, !dbg !6663
  %lnot2 = xor i1 %lnot, true, !dbg !6663
  %lnot3 = xor i1 %lnot2, true, !dbg !6663
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6663
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6663
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !6664
  %tobool4 = icmp ne i32 %8, 0, !dbg !6664
  %lnot5 = xor i1 %tobool4, true, !dbg !6664
  %lnot7 = xor i1 %lnot5, true, !dbg !6664
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !6664
  %conv = sext i32 %lnot.ext8 to i64, !dbg !6664
  %tobool9 = icmp ne i64 %conv, 0, !dbg !6664
  br i1 %tobool9, label %if.then, label %if.end, !dbg !6663

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6664

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !6666

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !6668

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !6666

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 1014, i32 2307, i64 12) #7, !dbg !6670, !srcloc !6672
  br label %do.end12, !dbg !6670

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 310) #7, !dbg !6673, !srcloc !6675
  br label %do.body13, !dbg !6666

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !6676

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !6666

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !6666

if.end:                                           ; preds = %do.end15, %entry
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !6663
  %tobool16 = icmp ne i32 %9, 0, !dbg !6663
  %lnot17 = xor i1 %tobool16, true, !dbg !6663
  %lnot19 = xor i1 %lnot17, true, !dbg !6663
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !6663
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !6663
  store i64 %conv21, i64* %tmp, align 8, !dbg !6664
  %10 = load i64, i64* %tmp, align 8, !dbg !6663
  %tobool22 = icmp ne i64 %10, 0, !dbg !6678
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !6679

if.then23:                                        ; preds = %if.end
  store i8 10, i8* %retval, align 1, !dbg !6680
  br label %return, !dbg !6680

if.end24:                                         ; preds = %if.end
  %11 = load i8, i8* %need_drain, align 1, !dbg !6681
  %tobool25 = trunc i8 %11 to i1, !dbg !6681
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !6683

if.then26:                                        ; preds = %if.end24
  %12 = load i16, i16* %nr_segs, align 2, !dbg !6684
  %inc = add i16 %12, 1, !dbg !6684
  store i16 %inc, i16* %nr_segs, align 2, !dbg !6684
  br label %if.end27, !dbg !6685

if.end27:                                         ; preds = %if.then26, %if.end24
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6686
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 15, !dbg !6686
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !6686
  %14 = load i16, i16* %nr_segs, align 2, !dbg !6686
  %conv28 = zext i16 %14 to i32, !dbg !6686
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6686
  %sdb29 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 15, !dbg !6686
  %table30 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb29, i32 0, i32 0, !dbg !6686
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table30, i32 0, i32 0, !dbg !6686
  %16 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !6686
  %call31 = call i32 @sg_alloc_table_chained(%struct.sg_table* %table, i32 %conv28, %struct.scatterlist* %16, i32 2) #10, !dbg !6686
  %tobool32 = icmp ne i32 %call31, 0, !dbg !6686
  %lnot33 = xor i1 %tobool32, true, !dbg !6686
  %lnot35 = xor i1 %lnot33, true, !dbg !6686
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !6686
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !6686
  %tobool38 = icmp ne i64 %conv37, 0, !dbg !6686
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6688

if.then39:                                        ; preds = %if.end27
  store i8 9, i8* %retval, align 1, !dbg !6689
  br label %return, !dbg !6689

if.end40:                                         ; preds = %if.end27
  %17 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6690
  %q = getelementptr inbounds %struct.request, %struct.request* %17, i32 0, i32 0, !dbg !6691
  %18 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !6691
  %19 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6692
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6693
  %sdb41 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 15, !dbg !6694
  %table42 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb41, i32 0, i32 0, !dbg !6695
  %sgl43 = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table42, i32 0, i32 0, !dbg !6696
  %21 = load %struct.scatterlist*, %struct.scatterlist** %sgl43, align 8, !dbg !6696
  %call44 = call i32 @__blk_rq_map_sg(%struct.request_queue* %18, %struct.request* %19, %struct.scatterlist* %21, %struct.scatterlist** %last_sg) #10, !dbg !6697
  store i32 %call44, i32* %count, align 4, !dbg !6698
  %22 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6699
  %call45 = call i32 @blk_rq_bytes(%struct.request* %22) #10, !dbg !6701
  %23 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6702
  %q46 = getelementptr inbounds %struct.request, %struct.request* %23, i32 0, i32 0, !dbg !6703
  %24 = load %struct.request_queue*, %struct.request_queue** %q46, align 8, !dbg !6703
  %dma_pad_mask = getelementptr inbounds %struct.request_queue, %struct.request_queue* %24, i32 0, i32 24, !dbg !6704
  %25 = load i32, i32* %dma_pad_mask, align 8, !dbg !6704
  %and = and i32 %call45, %25, !dbg !6705
  %tobool47 = icmp ne i32 %and, 0, !dbg !6705
  br i1 %tobool47, label %if.then48, label %if.end55, !dbg !6706

if.then48:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata i32* %pad_len, metadata !6707, metadata !DIExpression()), !dbg !6709
  %26 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6710
  %q49 = getelementptr inbounds %struct.request, %struct.request* %26, i32 0, i32 0, !dbg !6711
  %27 = load %struct.request_queue*, %struct.request_queue** %q49, align 8, !dbg !6711
  %dma_pad_mask50 = getelementptr inbounds %struct.request_queue, %struct.request_queue* %27, i32 0, i32 24, !dbg !6712
  %28 = load i32, i32* %dma_pad_mask50, align 8, !dbg !6712
  %29 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6713
  %call51 = call i32 @blk_rq_bytes(%struct.request* %29) #10, !dbg !6714
  %neg = xor i32 %call51, -1, !dbg !6715
  %and52 = and i32 %28, %neg, !dbg !6716
  %add = add i32 %and52, 1, !dbg !6717
  store i32 %add, i32* %pad_len, align 4, !dbg !6709
  %30 = load i32, i32* %pad_len, align 4, !dbg !6718
  %31 = load %struct.scatterlist*, %struct.scatterlist** %last_sg, align 8, !dbg !6719
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %31, i32 0, i32 2, !dbg !6720
  %32 = load i32, i32* %length, align 4, !dbg !6721
  %add53 = add i32 %32, %30, !dbg !6721
  store i32 %add53, i32* %length, align 4, !dbg !6721
  %33 = load i32, i32* %pad_len, align 4, !dbg !6722
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6723
  %extra_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %34, i32 0, i32 28, !dbg !6724
  %35 = load i32, i32* %extra_len, align 4, !dbg !6725
  %add54 = add i32 %35, %33, !dbg !6725
  store i32 %add54, i32* %extra_len, align 4, !dbg !6725
  br label %if.end55, !dbg !6726

if.end55:                                         ; preds = %if.then48, %if.end40
  %36 = load i8, i8* %need_drain, align 1, !dbg !6727
  %tobool56 = trunc i8 %36 to i1, !dbg !6727
  br i1 %tobool56, label %if.then57, label %if.end66, !dbg !6729

if.then57:                                        ; preds = %if.end55
  %37 = load %struct.scatterlist*, %struct.scatterlist** %last_sg, align 8, !dbg !6730
  call void @sg_unmark_end(%struct.scatterlist* %37) #10, !dbg !6732
  %38 = load %struct.scatterlist*, %struct.scatterlist** %last_sg, align 8, !dbg !6733
  %call58 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %38) #10, !dbg !6734
  store %struct.scatterlist* %call58, %struct.scatterlist** %last_sg, align 8, !dbg !6735
  %39 = load %struct.scatterlist*, %struct.scatterlist** %last_sg, align 8, !dbg !6736
  %40 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !6737
  %dma_drain_buf = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %40, i32 0, i32 57, !dbg !6738
  %41 = load i8*, i8** %dma_drain_buf, align 8, !dbg !6738
  %42 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !6739
  %dma_drain_len = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %42, i32 0, i32 56, !dbg !6740
  %43 = load i64, i64* %dma_drain_len, align 8, !dbg !6740
  %conv59 = trunc i64 %43 to i32, !dbg !6739
  call void @sg_set_buf(%struct.scatterlist* %39, i8* %41, i32 %conv59) #10, !dbg !6741
  %44 = load %struct.scatterlist*, %struct.scatterlist** %last_sg, align 8, !dbg !6742
  call void @sg_mark_end(%struct.scatterlist* %44) #10, !dbg !6743
  %45 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !6744
  %dma_drain_len60 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %45, i32 0, i32 56, !dbg !6745
  %46 = load i64, i64* %dma_drain_len60, align 8, !dbg !6745
  %47 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6746
  %extra_len61 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %47, i32 0, i32 28, !dbg !6747
  %48 = load i32, i32* %extra_len61, align 4, !dbg !6748
  %conv62 = zext i32 %48 to i64, !dbg !6748
  %add63 = add i64 %conv62, %46, !dbg !6748
  %conv64 = trunc i64 %add63 to i32, !dbg !6748
  store i32 %conv64, i32* %extra_len61, align 4, !dbg !6748
  %49 = load i32, i32* %count, align 4, !dbg !6749
  %inc65 = add i32 %49, 1, !dbg !6749
  store i32 %inc65, i32* %count, align 4, !dbg !6749
  br label %if.end66, !dbg !6750

if.end66:                                         ; preds = %if.then57, %if.end55
  br label %do.body67, !dbg !6751

do.body67:                                        ; preds = %if.end66
  %50 = load i32, i32* %count, align 4, !dbg !6752
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6752
  %sdb68 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 15, !dbg !6752
  %table69 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb68, i32 0, i32 0, !dbg !6752
  %nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table69, i32 0, i32 1, !dbg !6752
  %52 = load i32, i32* %nents, align 8, !dbg !6752
  %cmp = icmp ugt i32 %50, %52, !dbg !6752
  %lnot71 = xor i1 %cmp, true, !dbg !6752
  %lnot73 = xor i1 %lnot71, true, !dbg !6752
  %lnot.ext74 = zext i1 %lnot73 to i32, !dbg !6752
  %conv75 = sext i32 %lnot.ext74 to i64, !dbg !6752
  %tobool76 = icmp ne i64 %conv75, 0, !dbg !6752
  br i1 %tobool76, label %if.then77, label %if.end86, !dbg !6755

if.then77:                                        ; preds = %do.body67
  br label %do.body78, !dbg !6752

do.body78:                                        ; preds = %if.then77
  br label %do.body79, !dbg !6756

do.body79:                                        ; preds = %do.body78
  br label %do.end80, !dbg !6758

do.end80:                                         ; preds = %do.body79
  br label %do.body81, !dbg !6756

do.body81:                                        ; preds = %do.end80
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 1055, i32 0, i64 12) #7, !dbg !6760, !srcloc !6762
  br label %do.end82, !dbg !6760

do.end82:                                         ; preds = %do.body81
  br label %do.body83, !dbg !6756

do.body83:                                        ; preds = %do.end82
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 311) #7, !dbg !6763, !srcloc !6766
  unreachable, !dbg !6767

do.end84:                                         ; No predecessors!
  br label %do.end85, !dbg !6756

do.end85:                                         ; preds = %do.end84
  br label %if.end86, !dbg !6756

if.end86:                                         ; preds = %do.end85, %do.body67
  br label %do.end87, !dbg !6755

do.end87:                                         ; preds = %if.end86
  %53 = load i32, i32* %count, align 4, !dbg !6768
  %54 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6769
  %sdb88 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %54, i32 0, i32 15, !dbg !6770
  %table89 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb88, i32 0, i32 0, !dbg !6771
  %nents90 = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table89, i32 0, i32 1, !dbg !6772
  store i32 %53, i32* %nents90, align 8, !dbg !6773
  %55 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6774
  %call91 = call i32 @blk_rq_payload_bytes(%struct.request* %55) #10, !dbg !6775
  %56 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6776
  %sdb92 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %56, i32 0, i32 15, !dbg !6777
  %length93 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb92, i32 0, i32 1, !dbg !6778
  store i32 %call91, i32* %length93, align 8, !dbg !6779
  %57 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6780
  %call94 = call zeroext i1 @blk_integrity_rq(%struct.request* %57) #10, !dbg !6782
  br i1 %call94, label %if.then95, label %if.end193, !dbg !6783

if.then95:                                        ; preds = %do.end87
  call void @llvm.dbg.declare(metadata %struct.scsi_data_buffer** %prot_sdb, metadata !6784, metadata !DIExpression()), !dbg !6786
  %58 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6787
  %prot_sdb96 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %58, i32 0, i32 16, !dbg !6788
  %59 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb96, align 8, !dbg !6788
  store %struct.scsi_data_buffer* %59, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !6786
  call void @llvm.dbg.declare(metadata i32* %ivecs, metadata !6789, metadata !DIExpression()), !dbg !6790
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on97, metadata !6791, metadata !DIExpression()), !dbg !6794
  %60 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !6794
  %tobool98 = icmp ne %struct.scsi_data_buffer* %60, null, !dbg !6794
  %lnot99 = xor i1 %tobool98, true, !dbg !6794
  %lnot101 = xor i1 %lnot99, true, !dbg !6794
  %lnot103 = xor i1 %lnot101, true, !dbg !6794
  %lnot.ext104 = zext i1 %lnot103 to i32, !dbg !6794
  store i32 %lnot.ext104, i32* %__ret_warn_on97, align 4, !dbg !6794
  %61 = load i32, i32* %__ret_warn_on97, align 4, !dbg !6795
  %tobool105 = icmp ne i32 %61, 0, !dbg !6795
  %lnot106 = xor i1 %tobool105, true, !dbg !6795
  %lnot108 = xor i1 %lnot106, true, !dbg !6795
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !6795
  %conv110 = sext i32 %lnot.ext109 to i64, !dbg !6795
  %tobool111 = icmp ne i64 %conv110, 0, !dbg !6795
  br i1 %tobool111, label %if.then112, label %if.end121, !dbg !6794

if.then112:                                       ; preds = %if.then95
  br label %do.body113, !dbg !6795

do.body113:                                       ; preds = %if.then112
  br label %do.body114, !dbg !6797

do.body114:                                       ; preds = %do.body113
  br label %do.end115, !dbg !6799

do.end115:                                        ; preds = %do.body114
  br label %do.body116, !dbg !6797

do.body116:                                       ; preds = %do.end115
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 1063, i32 2307, i64 12) #7, !dbg !6801, !srcloc !6803
  br label %do.end117, !dbg !6801

do.end117:                                        ; preds = %do.body116
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 312) #7, !dbg !6804, !srcloc !6806
  br label %do.body118, !dbg !6797

do.body118:                                       ; preds = %do.end117
  br label %do.end119, !dbg !6807

do.end119:                                        ; preds = %do.body118
  br label %do.end120, !dbg !6797

do.end120:                                        ; preds = %do.end119
  br label %if.end121, !dbg !6797

if.end121:                                        ; preds = %do.end120, %if.then95
  %62 = load i32, i32* %__ret_warn_on97, align 4, !dbg !6794
  %tobool123 = icmp ne i32 %62, 0, !dbg !6794
  %lnot124 = xor i1 %tobool123, true, !dbg !6794
  %lnot126 = xor i1 %lnot124, true, !dbg !6794
  %lnot.ext127 = zext i1 %lnot126 to i32, !dbg !6794
  %conv128 = sext i32 %lnot.ext127 to i64, !dbg !6794
  store i64 %conv128, i64* %tmp122, align 8, !dbg !6795
  %63 = load i64, i64* %tmp122, align 8, !dbg !6794
  %tobool129 = icmp ne i64 %63, 0, !dbg !6809
  br i1 %tobool129, label %if.then130, label %if.end131, !dbg !6810

if.then130:                                       ; preds = %if.end121
  store i8 10, i8* %ret, align 1, !dbg !6811
  br label %out_free_sgtables, !dbg !6813

if.end131:                                        ; preds = %if.end121
  %64 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6814
  %q132 = getelementptr inbounds %struct.request, %struct.request* %64, i32 0, i32 0, !dbg !6815
  %65 = load %struct.request_queue*, %struct.request_queue** %q132, align 8, !dbg !6815
  %66 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6816
  %bio = getelementptr inbounds %struct.request, %struct.request* %66, i32 0, i32 9, !dbg !6817
  %67 = load %struct.bio*, %struct.bio** %bio, align 8, !dbg !6817
  %call133 = call i32 @blk_rq_count_integrity_sg(%struct.request_queue* %65, %struct.bio* %67) #10, !dbg !6818
  store i32 %call133, i32* %ivecs, align 4, !dbg !6819
  %68 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !6820
  %table134 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %68, i32 0, i32 0, !dbg !6822
  %69 = load i32, i32* %ivecs, align 4, !dbg !6823
  %70 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !6824
  %table135 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %70, i32 0, i32 0, !dbg !6825
  %sgl136 = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table135, i32 0, i32 0, !dbg !6826
  %71 = load %struct.scatterlist*, %struct.scatterlist** %sgl136, align 8, !dbg !6826
  %call137 = call i32 @sg_alloc_table_chained(%struct.sg_table* %table134, i32 %69, %struct.scatterlist* %71, i32 1) #10, !dbg !6827
  %tobool138 = icmp ne i32 %call137, 0, !dbg !6827
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !6828

if.then139:                                       ; preds = %if.end131
  store i8 9, i8* %ret, align 1, !dbg !6829
  br label %out_free_sgtables, !dbg !6831

if.end140:                                        ; preds = %if.end131
  %72 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6832
  %q141 = getelementptr inbounds %struct.request, %struct.request* %72, i32 0, i32 0, !dbg !6833
  %73 = load %struct.request_queue*, %struct.request_queue** %q141, align 8, !dbg !6833
  %74 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6834
  %bio142 = getelementptr inbounds %struct.request, %struct.request* %74, i32 0, i32 9, !dbg !6835
  %75 = load %struct.bio*, %struct.bio** %bio142, align 8, !dbg !6835
  %76 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !6836
  %table143 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %76, i32 0, i32 0, !dbg !6837
  %sgl144 = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table143, i32 0, i32 0, !dbg !6838
  %77 = load %struct.scatterlist*, %struct.scatterlist** %sgl144, align 8, !dbg !6838
  %call145 = call i32 @blk_rq_map_integrity_sg(%struct.request_queue* %73, %struct.bio* %75, %struct.scatterlist* %77) #10, !dbg !6839
  store i32 %call145, i32* %count, align 4, !dbg !6840
  br label %do.body146, !dbg !6841

do.body146:                                       ; preds = %if.end140
  %78 = load i32, i32* %count, align 4, !dbg !6842
  %79 = load i32, i32* %ivecs, align 4, !dbg !6842
  %cmp147 = icmp sgt i32 %78, %79, !dbg !6842
  %lnot149 = xor i1 %cmp147, true, !dbg !6842
  %lnot151 = xor i1 %lnot149, true, !dbg !6842
  %lnot.ext152 = zext i1 %lnot151 to i32, !dbg !6842
  %conv153 = sext i32 %lnot.ext152 to i64, !dbg !6842
  %tobool154 = icmp ne i64 %conv153, 0, !dbg !6842
  br i1 %tobool154, label %if.then155, label %if.end164, !dbg !6845

if.then155:                                       ; preds = %do.body146
  br label %do.body156, !dbg !6842

do.body156:                                       ; preds = %if.then155
  br label %do.body157, !dbg !6846

do.body157:                                       ; preds = %do.body156
  br label %do.end158, !dbg !6848

do.end158:                                        ; preds = %do.body157
  br label %do.body159, !dbg !6846

do.body159:                                       ; preds = %do.end158
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 1084, i32 0, i64 12) #7, !dbg !6850, !srcloc !6852
  br label %do.end160, !dbg !6850

do.end160:                                        ; preds = %do.body159
  br label %do.body161, !dbg !6846

do.body161:                                       ; preds = %do.end160
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 313) #7, !dbg !6853, !srcloc !6856
  unreachable, !dbg !6857

do.end162:                                        ; No predecessors!
  br label %do.end163, !dbg !6846

do.end163:                                        ; preds = %do.end162
  br label %if.end164, !dbg !6846

if.end164:                                        ; preds = %do.end163, %do.body146
  br label %do.end165, !dbg !6845

do.end165:                                        ; preds = %if.end164
  br label %do.body166, !dbg !6858

do.body166:                                       ; preds = %do.end165
  %80 = load i32, i32* %count, align 4, !dbg !6859
  %81 = load %struct.request*, %struct.request** %rq, align 8, !dbg !6859
  %q167 = getelementptr inbounds %struct.request, %struct.request* %81, i32 0, i32 0, !dbg !6859
  %82 = load %struct.request_queue*, %struct.request_queue** %q167, align 8, !dbg !6859
  %call168 = call zeroext i16 @queue_max_integrity_segments(%struct.request_queue* %82) #10, !dbg !6859
  %conv169 = zext i16 %call168 to i32, !dbg !6859
  %cmp170 = icmp sgt i32 %80, %conv169, !dbg !6859
  %lnot172 = xor i1 %cmp170, true, !dbg !6859
  %lnot174 = xor i1 %lnot172, true, !dbg !6859
  %lnot.ext175 = zext i1 %lnot174 to i32, !dbg !6859
  %conv176 = sext i32 %lnot.ext175 to i64, !dbg !6859
  %tobool177 = icmp ne i64 %conv176, 0, !dbg !6859
  br i1 %tobool177, label %if.then178, label %if.end187, !dbg !6862

if.then178:                                       ; preds = %do.body166
  br label %do.body179, !dbg !6859

do.body179:                                       ; preds = %if.then178
  br label %do.body180, !dbg !6863

do.body180:                                       ; preds = %do.body179
  br label %do.end181, !dbg !6865

do.end181:                                        ; preds = %do.body180
  br label %do.body182, !dbg !6863

do.body182:                                       ; preds = %do.end181
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 1085, i32 0, i64 12) #7, !dbg !6867, !srcloc !6869
  br label %do.end183, !dbg !6867

do.end183:                                        ; preds = %do.body182
  br label %do.body184, !dbg !6863

do.body184:                                       ; preds = %do.end183
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 314) #7, !dbg !6870, !srcloc !6873
  unreachable, !dbg !6874

do.end185:                                        ; No predecessors!
  br label %do.end186, !dbg !6863

do.end186:                                        ; preds = %do.end185
  br label %if.end187, !dbg !6863

if.end187:                                        ; preds = %do.end186, %do.body166
  br label %do.end188, !dbg !6862

do.end188:                                        ; preds = %if.end187
  %83 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !6875
  %84 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6876
  %prot_sdb189 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %84, i32 0, i32 16, !dbg !6877
  store %struct.scsi_data_buffer* %83, %struct.scsi_data_buffer** %prot_sdb189, align 8, !dbg !6878
  %85 = load i32, i32* %count, align 4, !dbg !6879
  %86 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6880
  %prot_sdb190 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %86, i32 0, i32 16, !dbg !6881
  %87 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb190, align 8, !dbg !6881
  %table191 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %87, i32 0, i32 0, !dbg !6882
  %nents192 = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table191, i32 0, i32 1, !dbg !6883
  store i32 %85, i32* %nents192, align 8, !dbg !6884
  br label %if.end193, !dbg !6885

if.end193:                                        ; preds = %do.end188, %do.end87
  store i8 0, i8* %retval, align 1, !dbg !6886
  br label %return, !dbg !6886

out_free_sgtables:                                ; preds = %if.then139, %if.then130
  call void @llvm.dbg.label(metadata !6887), !dbg !6888
  %88 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6889
  call void @scsi_free_sgtables(%struct.scsi_cmnd* %88) #10, !dbg !6890
  %89 = load i8, i8* %ret, align 1, !dbg !6891
  store i8 %89, i8* %retval, align 1, !dbg !6892
  br label %return, !dbg !6892

return:                                           ; preds = %out_free_sgtables, %if.end193, %if.then39, %if.then23
  %90 = load i8, i8* %retval, align 1, !dbg !6893
  ret i8 %90, !dbg !6893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @blk_rq_nr_phys_segments(%struct.request* %rq) #0 !dbg !6894 {
entry:
  %retval = alloca i16, align 2
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !6897, metadata !DIExpression()), !dbg !6898
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6899
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 4, !dbg !6901
  %1 = load i32, i32* %rq_flags, align 4, !dbg !6901
  %and = and i32 %1, 262144, !dbg !6902
  %tobool = icmp ne i32 %and, 0, !dbg !6902
  br i1 %tobool, label %if.then, label %if.end, !dbg !6903

if.then:                                          ; preds = %entry
  store i16 1, i16* %retval, align 2, !dbg !6904
  br label %return, !dbg !6904

if.end:                                           ; preds = %entry
  %2 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6905
  %nr_phys_segments = getelementptr inbounds %struct.request, %struct.request* %2, i32 0, i32 20, !dbg !6906
  %3 = load i16, i16* %nr_phys_segments, align 2, !dbg !6906
  store i16 %3, i16* %retval, align 2, !dbg !6907
  br label %return, !dbg !6907

return:                                           ; preds = %if.end, %if.then
  %4 = load i16, i16* %retval, align 2, !dbg !6908
  ret i16 %4, !dbg !6908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @scsi_cmd_needs_dma_drain(%struct.scsi_device* %sdev, %struct.request* %rq) #0 !dbg !6909 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %rq.addr = alloca %struct.request*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !6912, metadata !DIExpression()), !dbg !6913
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !6914, metadata !DIExpression()), !dbg !6915
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !6916
  %dma_drain_len = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 56, !dbg !6917
  %1 = load i64, i64* %dma_drain_len, align 8, !dbg !6917
  %tobool = icmp ne i64 %1, 0, !dbg !6916
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !6918

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6919
  %call = call zeroext i1 @blk_rq_is_passthrough(%struct.request* %2) #10, !dbg !6920
  br i1 %call, label %land.lhs.true1, label %land.end, !dbg !6921

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6922
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %3, i32 0, i32 3, !dbg !6922
  %4 = load i32, i32* %cmd_flags, align 8, !dbg !6922
  %and = and i32 %4, 255, !dbg !6922
  %call2 = call zeroext i1 @op_is_write(i32 %and) #10, !dbg !6923
  br i1 %call2, label %land.end, label %land.rhs, !dbg !6924

land.rhs:                                         ; preds = %land.lhs.true1
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !6925
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !6926
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6926
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 10, !dbg !6927
  %7 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !6927
  %dma_need_drain = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %7, i32 0, i32 22, !dbg !6928
  %8 = load i1 (%struct.request*)*, i1 (%struct.request*)** %dma_need_drain, align 8, !dbg !6928
  %9 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6929
  %call3 = call zeroext i1 %8(%struct.request* %9) #10, !dbg !6925
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true1, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true1 ], [ false, %land.lhs.true ], [ false, %entry ], [ %call3, %land.rhs ], !dbg !6930
  ret i1 %10, !dbg !6931
}

; Function Attrs: noredzone
declare dso_local i32 @sg_alloc_table_chained(%struct.sg_table*, i32, %struct.scatterlist*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @__blk_rq_map_sg(%struct.request_queue*, %struct.request*, %struct.scatterlist*, %struct.scatterlist**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_unmark_end(%struct.scatterlist* %sg) #0 !dbg !6932 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !6935, metadata !DIExpression()), !dbg !6936
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !6937
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !6938
  %1 = load i64, i64* %page_link, align 8, !dbg !6939
  %and = and i64 %1, -3, !dbg !6939
  store i64 %and, i64* %page_link, align 8, !dbg !6939
  ret void, !dbg !6940
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_set_buf(%struct.scatterlist* %sg, i8* %buf, i32 %buflen) #0 !dbg !6941 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !6944, metadata !DIExpression()), !dbg !6945
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6946, metadata !DIExpression()), !dbg !6947
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !6948, metadata !DIExpression()), !dbg !6949
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !6950
  %1 = load i64, i64* @vmemmap_base, align 8, !dbg !6951
  %2 = inttoptr i64 %1 to %struct.page*, !dbg !6951
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !6951
  %4 = ptrtoint i8* %3 to i64, !dbg !6951
  %call = call i64 @__phys_addr_nodebug(i64 %4) #10, !dbg !6951
  %shr = lshr i64 %call, 12, !dbg !6951
  %add.ptr = getelementptr %struct.page, %struct.page* %2, i64 %shr, !dbg !6951
  %5 = load i32, i32* %buflen.addr, align 4, !dbg !6952
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !6953
  %7 = ptrtoint i8* %6 to i64, !dbg !6953
  %and = and i64 %7, 4095, !dbg !6953
  %conv = trunc i64 %and to i32, !dbg !6953
  call void @sg_set_page(%struct.scatterlist* %0, %struct.page* %add.ptr, i32 %5, i32 %conv) #10, !dbg !6954
  ret void, !dbg !6955
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_mark_end(%struct.scatterlist* %sg) #0 !dbg !6956 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !6957, metadata !DIExpression()), !dbg !6958
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !6959
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !6960
  %1 = load i64, i64* %page_link, align 8, !dbg !6961
  %or = or i64 %1, 2, !dbg !6961
  store i64 %or, i64* %page_link, align 8, !dbg !6961
  %2 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !6962
  %page_link1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %2, i32 0, i32 0, !dbg !6963
  %3 = load i64, i64* %page_link1, align 8, !dbg !6964
  %and = and i64 %3, -2, !dbg !6964
  store i64 %and, i64* %page_link1, align 8, !dbg !6964
  ret void, !dbg !6965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_rq_payload_bytes(%struct.request* %rq) #0 !dbg !6966 {
entry:
  %retval = alloca i32, align 4
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !6969, metadata !DIExpression()), !dbg !6970
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6971
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 4, !dbg !6973
  %1 = load i32, i32* %rq_flags, align 4, !dbg !6973
  %and = and i32 %1, 262144, !dbg !6974
  %tobool = icmp ne i32 %and, 0, !dbg !6974
  br i1 %tobool, label %if.then, label %if.end, !dbg !6975

if.then:                                          ; preds = %entry
  %2 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6976
  %3 = getelementptr inbounds %struct.request, %struct.request* %2, i32 0, i32 13, !dbg !6977
  %special_vec = bitcast %union.anon.13* %3 to %struct.bio_vec*, !dbg !6977
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %special_vec, i32 0, i32 1, !dbg !6978
  %4 = load i32, i32* %bv_len, align 8, !dbg !6978
  store i32 %4, i32* %retval, align 4, !dbg !6979
  br label %return, !dbg !6979

if.end:                                           ; preds = %entry
  %5 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6980
  %call = call i32 @blk_rq_bytes(%struct.request* %5) #10, !dbg !6981
  store i32 %call, i32* %retval, align 4, !dbg !6982
  br label %return, !dbg !6982

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6983
  ret i32 %6, !dbg !6983
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_integrity_rq(%struct.request* %rq) #0 !dbg !6984 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !6985, metadata !DIExpression()), !dbg !6986
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6987
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 3, !dbg !6988
  %1 = load i32, i32* %cmd_flags, align 8, !dbg !6988
  %conv = zext i32 %1 to i64, !dbg !6987
  %and = and i64 %conv, 65536, !dbg !6989
  %tobool = icmp ne i64 %and, 0, !dbg !6987
  ret i1 %tobool, !dbg !6990
}

; Function Attrs: noredzone
declare dso_local i32 @blk_rq_count_integrity_sg(%struct.request_queue*, %struct.bio*) #2

; Function Attrs: noredzone
declare dso_local i32 @blk_rq_map_integrity_sg(%struct.request_queue*, %struct.bio*, %struct.scatterlist*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @queue_max_integrity_segments(%struct.request_queue* %q) #0 !dbg !6991 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !6996, metadata !DIExpression()), !dbg !6997
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !6998
  %limits = getelementptr inbounds %struct.request_queue, %struct.request_queue* %0, i32 0, i32 34, !dbg !6999
  %max_integrity_segments = getelementptr inbounds %struct.queue_limits, %struct.queue_limits* %limits, i32 0, i32 21, !dbg !7000
  %1 = load i16, i16* %max_integrity_segments, align 2, !dbg !7000
  ret i16 %1, !dbg !7001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_init_command(%struct.scsi_device* %dev, %struct.scsi_cmnd* %cmd) #0 !dbg !7002 {
entry:
  %dev.addr = alloca %struct.scsi_device*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %buf = alloca i8*, align 8
  %prot = alloca i8*, align 8
  %rq = alloca %struct.request*, align 8
  %flags = alloca i32, align 4
  %jiffies_at_alloc = alloca i64, align 8
  %retries = alloca i32, align 4
  %to_clear = alloca i32, align 4
  %in_flight = alloca i8, align 1
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.scsi_device* %dev, %struct.scsi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %dev.addr, metadata !7003, metadata !DIExpression()), !dbg !7004
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !7005, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !7007, metadata !DIExpression()), !dbg !7008
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7009
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 20, !dbg !7010
  %1 = load i8*, i8** %sense_buffer, align 8, !dbg !7010
  store i8* %1, i8** %buf, align 8, !dbg !7008
  call void @llvm.dbg.declare(metadata i8** %prot, metadata !7011, metadata !DIExpression()), !dbg !7012
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7013
  %prot_sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 16, !dbg !7014
  %3 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !7014
  %4 = bitcast %struct.scsi_data_buffer* %3 to i8*, !dbg !7013
  store i8* %4, i8** %prot, align 8, !dbg !7012
  call void @llvm.dbg.declare(metadata %struct.request** %rq, metadata !7015, metadata !DIExpression()), !dbg !7016
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7017
  %6 = bitcast %struct.scsi_cmnd* %5 to i8*, !dbg !7017
  %call = call %struct.request* @blk_mq_rq_from_pdu(i8* %6) #10, !dbg !7018
  store %struct.request* %call, %struct.request** %rq, align 8, !dbg !7016
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !7019, metadata !DIExpression()), !dbg !7020
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7021
  %flags1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 25, !dbg !7022
  %8 = load i32, i32* %flags1, align 4, !dbg !7022
  %and = and i32 %8, 6, !dbg !7023
  store i32 %and, i32* %flags, align 4, !dbg !7020
  call void @llvm.dbg.declare(metadata i64* %jiffies_at_alloc, metadata !7024, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.declare(metadata i32* %retries, metadata !7026, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.declare(metadata i32* %to_clear, metadata !7028, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.declare(metadata i8* %in_flight, metadata !7030, metadata !DIExpression()), !dbg !7031
  %9 = load %struct.request*, %struct.request** %rq, align 8, !dbg !7032
  %call2 = call zeroext i1 @blk_rq_is_scsi(%struct.request* %9) #10, !dbg !7034
  br i1 %call2, label %if.end, label %land.lhs.true, !dbg !7035

land.lhs.true:                                    ; preds = %entry
  %10 = load i32, i32* %flags, align 4, !dbg !7036
  %and3 = and i32 %10, 4, !dbg !7037
  %tobool = icmp ne i32 %and3, 0, !dbg !7037
  br i1 %tobool, label %if.end, label %if.then, !dbg !7038

if.then:                                          ; preds = %land.lhs.true
  %11 = load i32, i32* %flags, align 4, !dbg !7039
  %or = or i32 %11, 4, !dbg !7039
  store i32 %or, i32* %flags, align 4, !dbg !7039
  %12 = load %struct.request*, %struct.request** %rq, align 8, !dbg !7041
  call void @scsi_initialize_rq(%struct.request* %12) #10, !dbg !7042
  br label %if.end, !dbg !7043

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7044
  %jiffies_at_alloc4 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 6, !dbg !7045
  %14 = load i64, i64* %jiffies_at_alloc4, align 8, !dbg !7045
  store i64 %14, i64* %jiffies_at_alloc, align 8, !dbg !7046
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7047
  %retries5 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 7, !dbg !7048
  %16 = load i32, i32* %retries5, align 8, !dbg !7048
  store i32 %16, i32* %retries, align 4, !dbg !7049
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7050
  %state = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %17, i32 0, i32 26, !dbg !7051
  %call6 = call zeroext i1 @test_bit(i64 1, i64* %state) #10, !dbg !7052
  %frombool = zext i1 %call6 to i8, !dbg !7053
  store i8 %frombool, i8* %in_flight, align 1, !dbg !7053
  store i32 336, i32* %to_clear, align 4, !dbg !7054
  %18 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !7055
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %18, i32 0, i32 0, !dbg !7057
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7057
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %19, i32 0, i32 10, !dbg !7058
  %20 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !7058
  %init_cmd_priv = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %20, i32 0, i32 4, !dbg !7059
  %21 = load i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)** %init_cmd_priv, align 8, !dbg !7059
  %tobool7 = icmp ne i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* %21, null, !dbg !7055
  br i1 %tobool7, label %if.end11, label %if.then8, !dbg !7060

if.then8:                                         ; preds = %if.end
  %22 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !7061
  %host9 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %22, i32 0, i32 0, !dbg !7062
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host9, align 8, !dbg !7062
  %hostt10 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %23, i32 0, i32 10, !dbg !7063
  %24 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt10, align 8, !dbg !7063
  %cmd_size = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %24, i32 0, i32 48, !dbg !7064
  %25 = load i32, i32* %cmd_size, align 8, !dbg !7064
  %26 = load i32, i32* %to_clear, align 4, !dbg !7065
  %add = add i32 %26, %25, !dbg !7065
  store i32 %add, i32* %to_clear, align 4, !dbg !7065
  br label %if.end11, !dbg !7066

if.end11:                                         ; preds = %if.then8, %if.end
  %27 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7067
  %28 = bitcast %struct.scsi_cmnd* %27 to i8*, !dbg !7068
  %add.ptr = getelementptr i8, i8* %28, i64 56, !dbg !7069
  %29 = load i32, i32* %to_clear, align 4, !dbg !7070
  %conv = sext i32 %29 to i64, !dbg !7070
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 0, i64 %conv, i1 false), !dbg !7071
  %30 = load %struct.scsi_device*, %struct.scsi_device** %dev.addr, align 8, !dbg !7072
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7073
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %31, i32 0, i32 1, !dbg !7074
  store %struct.scsi_device* %30, %struct.scsi_device** %device, align 8, !dbg !7075
  %32 = load i8*, i8** %buf, align 8, !dbg !7076
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7077
  %sense_buffer12 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %33, i32 0, i32 20, !dbg !7078
  store i8* %32, i8** %sense_buffer12, align 8, !dbg !7079
  %34 = load i8*, i8** %prot, align 8, !dbg !7080
  %35 = bitcast i8* %34 to %struct.scsi_data_buffer*, !dbg !7080
  %36 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7081
  %prot_sdb13 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %36, i32 0, i32 16, !dbg !7082
  store %struct.scsi_data_buffer* %35, %struct.scsi_data_buffer** %prot_sdb13, align 8, !dbg !7083
  %37 = load i32, i32* %flags, align 4, !dbg !7084
  %38 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7085
  %flags14 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %38, i32 0, i32 25, !dbg !7086
  store i32 %37, i32* %flags14, align 4, !dbg !7087
  br label %do.body, !dbg !7088

do.body:                                          ; preds = %if.end11
  br label %do.body15, !dbg !7089

do.body15:                                        ; preds = %do.body
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7091
  %abort_work = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %39, i32 0, i32 3, !dbg !7091
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %abort_work, i32 0, i32 0, !dbg !7091
  call void @__init_work(%struct.work_struct* %work, i32 0) #10, !dbg !7091
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7091
  %abort_work16 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 3, !dbg !7091
  %work17 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %abort_work16, i32 0, i32 0, !dbg !7091
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work17, i32 0, i32 0, !dbg !7091
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !7091
  store i64 68719476704, i64* %counter, align 8, !dbg !7091
  %41 = bitcast %struct.atomic64_t* %data to i8*, !dbg !7091
  %42 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !7091
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 8, i1 false), !dbg !7091
  %43 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7091
  %abort_work18 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %43, i32 0, i32 3, !dbg !7091
  %work19 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %abort_work18, i32 0, i32 0, !dbg !7091
  %entry20 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work19, i32 0, i32 1, !dbg !7091
  call void @INIT_LIST_HEAD(%struct.list_head* %entry20) #10, !dbg !7091
  %44 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7091
  %abort_work21 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %44, i32 0, i32 3, !dbg !7091
  %work22 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %abort_work21, i32 0, i32 0, !dbg !7091
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work22, i32 0, i32 2, !dbg !7091
  store void (%struct.work_struct*)* @scmd_eh_abort_handler, void (%struct.work_struct*)** %func, align 8, !dbg !7091
  br label %do.end, !dbg !7091

do.end:                                           ; preds = %do.body15
  %45 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7089
  %abort_work23 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %45, i32 0, i32 3, !dbg !7089
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %abort_work23, i32 0, i32 1, !dbg !7089
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #10, !dbg !7089
  br label %do.end24, !dbg !7089

do.end24:                                         ; preds = %do.end
  %46 = load i64, i64* %jiffies_at_alloc, align 8, !dbg !7093
  %47 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7094
  %jiffies_at_alloc25 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %47, i32 0, i32 6, !dbg !7095
  store i64 %46, i64* %jiffies_at_alloc25, align 8, !dbg !7096
  %48 = load i32, i32* %retries, align 4, !dbg !7097
  %49 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7098
  %retries26 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %49, i32 0, i32 7, !dbg !7099
  store i32 %48, i32* %retries26, align 8, !dbg !7100
  %50 = load i8, i8* %in_flight, align 1, !dbg !7101
  %tobool27 = trunc i8 %50 to i1, !dbg !7101
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !7103

if.then28:                                        ; preds = %do.end24
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7104
  %state29 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 26, !dbg !7105
  call void @__set_bit(i64 1, i64* %state29) #10, !dbg !7106
  br label %if.end30, !dbg !7106

if.end30:                                         ; preds = %if.then28, %do.end24
  ret void, !dbg !7107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.request* @blk_mq_rq_from_pdu(i8* %pdu) #0 !dbg !7108 {
entry:
  %pdu.addr = alloca i8*, align 8
  store i8* %pdu, i8** %pdu.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pdu.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  %0 = load i8*, i8** %pdu.addr, align 8, !dbg !7113
  %add.ptr = getelementptr i8, i8* %0, i64 -272, !dbg !7114
  %1 = bitcast i8* %add.ptr to %struct.request*, !dbg !7113
  ret %struct.request* %1, !dbg !7115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_rq_is_scsi(%struct.request* %rq) #0 !dbg !7116 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !7117, metadata !DIExpression()), !dbg !7118
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !7119
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 3, !dbg !7119
  %1 = load i32, i32* %cmd_flags, align 8, !dbg !7119
  %and = and i32 %1, 255, !dbg !7119
  %call = call zeroext i1 @blk_op_is_scsi(i32 %and) #10, !dbg !7120
  ret i1 %call, !dbg !7121
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_initialize_rq(%struct.request* %rq) #0 !dbg !7122 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !7123, metadata !DIExpression()), !dbg !7124
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !7125, metadata !DIExpression()), !dbg !7126
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !7127
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #10, !dbg !7128
  %1 = bitcast i8* %call to %struct.scsi_cmnd*, !dbg !7128
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !7126
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7129
  %req = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 0, !dbg !7130
  call void @scsi_req_init(%struct.scsi_request* %req) #10, !dbg !7131
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7132
  %rcu = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 4, !dbg !7133
  call void @init_rcu_head(%struct.callback_head* %rcu) #10, !dbg !7134
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !7135
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7136
  %jiffies_at_alloc = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 6, !dbg !7137
  store i64 %4, i64* %jiffies_at_alloc, align 8, !dbg !7138
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7139
  %retries = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %6, i32 0, i32 7, !dbg !7140
  store i32 0, i32* %retries, align 8, !dbg !7141
  ret void, !dbg !7142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !7143 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !7147, metadata !DIExpression()), !dbg !7150
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !7152, metadata !DIExpression()), !dbg !7153
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !7154, metadata !DIExpression()), !dbg !7155
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7156, metadata !DIExpression()), !dbg !7158
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7160, metadata !DIExpression()), !dbg !7161
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7162, metadata !DIExpression()), !dbg !7164
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7166, metadata !DIExpression()), !dbg !7167
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7168, metadata !DIExpression()), !dbg !7169
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7170, metadata !DIExpression()), !dbg !7171
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7172
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7173
  %div = sdiv i64 %1, 64, !dbg !7173
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7174
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7172
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7175
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7176
  %conv.i = trunc i64 %4 to i32, !dbg !7176
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #11, !dbg !7177
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7178
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7178
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #11, !dbg !7178
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7179
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !7179
  br i1 %8, label %cond.true, label %cond.false, !dbg !7179

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !7179
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !7179
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !7180
  %and.i = and i64 %11, 63, !dbg !7181
  %shl.i = shl i64 1, %and.i, !dbg !7182
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !7183
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7184
  %shr.i = ashr i64 %13, 6, !dbg !7185
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !7183
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !7183
  %and1.i = and i64 %shl.i, %14, !dbg !7186
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !7187
  %conv = zext i1 %cmp.i to i32, !dbg !7179
  br label %cond.end, !dbg !7179

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !7179
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !7179
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !7188
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !7189
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !7190, !srcloc !7191
  store i8 %19, i8* %oldbit.i, align 1, !dbg !7190
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !7192
  %tobool.i = trunc i8 %20 to i1, !dbg !7192
  %conv2 = zext i1 %tobool.i to i32, !dbg !7179
  br label %cond.end, !dbg !7179

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !7179
  %tobool = icmp ne i32 %cond, 0, !dbg !7179
  ret i1 %tobool, !dbg !7193
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !7194 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7197, metadata !DIExpression()), !dbg !7198
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !7199, metadata !DIExpression()), !dbg !7200
  ret void, !dbg !7201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !7202 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7206, metadata !DIExpression()), !dbg !7207
  br label %do.body, !dbg !7208

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7209

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7211

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !7209

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7213
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7213
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7213
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !7213
  br label %do.end3, !dbg !7213

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !7209

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7215
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7216
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !7217
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !7218
  ret void, !dbg !7219
}

; Function Attrs: noredzone
declare dso_local void @scmd_eh_abort_handler(%struct.work_struct*) #2

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !7220 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7224, metadata !DIExpression()), !dbg !7226
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7228, metadata !DIExpression()), !dbg !7229
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7230, metadata !DIExpression()), !dbg !7232
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7234, metadata !DIExpression()), !dbg !7235
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7236, metadata !DIExpression()), !dbg !7237
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7238, metadata !DIExpression()), !dbg !7239
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7240
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7241
  %div = sdiv i64 %1, 64, !dbg !7241
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7242
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7240
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7243
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7244
  %conv.i = trunc i64 %4 to i32, !dbg !7244
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !7245
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7246
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7246
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #11, !dbg !7246
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7247
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7248
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !7249
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !7250
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !7251, !srcloc !7252
  ret void, !dbg !7253
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__scsi_init_queue(%struct.Scsi_Host* %shost, %struct.request_queue* %q) #0 !dbg !7254 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %q.addr = alloca %struct.request_queue*, align 8
  %dev = alloca %struct.device*, align 8
  %__UNIQUE_ID___x319 = alloca i16, align 2
  %__UNIQUE_ID___y320 = alloca i16, align 2
  %tmp = alloca i32, align 4
  %__x = alloca i16, align 2
  %__y = alloca i16, align 2
  %tmp6 = alloca i32, align 4
  %__UNIQUE_ID___x321 = alloca i16, align 2
  %__UNIQUE_ID___y322 = alloca i16, align 2
  %tmp19 = alloca i32, align 4
  %__UNIQUE_ID___x324 = alloca i32, align 4
  %__UNIQUE_ID___y325 = alloca i32, align 4
  %tmp61 = alloca i32, align 4
  %__UNIQUE_ID___x326 = alloca i32, align 4
  %__UNIQUE_ID___y327 = alloca i32, align 4
  %tmp79 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7257, metadata !DIExpression()), !dbg !7258
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !7259, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !7261, metadata !DIExpression()), !dbg !7262
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7263
  %dma_dev = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 50, !dbg !7264
  %1 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !7264
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !7262
  %2 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7265
  call void @llvm.dbg.declare(metadata i16* %__UNIQUE_ID___x319, metadata !7266, metadata !DIExpression()), !dbg !7268
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7268
  %sg_tablesize = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 27, !dbg !7268
  %4 = load i16, i16* %sg_tablesize, align 2, !dbg !7268
  store i16 %4, i16* %__UNIQUE_ID___x319, align 2, !dbg !7268
  call void @llvm.dbg.declare(metadata i16* %__UNIQUE_ID___y320, metadata !7269, metadata !DIExpression()), !dbg !7268
  store i16 2048, i16* %__UNIQUE_ID___y320, align 2, !dbg !7268
  %5 = load i16, i16* %__UNIQUE_ID___x319, align 2, !dbg !7268
  %conv = zext i16 %5 to i32, !dbg !7268
  %6 = load i16, i16* %__UNIQUE_ID___y320, align 2, !dbg !7268
  %conv1 = zext i16 %6 to i32, !dbg !7268
  %cmp = icmp slt i32 %conv, %conv1, !dbg !7268
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7268

cond.true:                                        ; preds = %entry
  %7 = load i16, i16* %__UNIQUE_ID___x319, align 2, !dbg !7268
  %conv3 = zext i16 %7 to i32, !dbg !7268
  br label %cond.end, !dbg !7268

cond.false:                                       ; preds = %entry
  %8 = load i16, i16* %__UNIQUE_ID___y320, align 2, !dbg !7268
  %conv4 = zext i16 %8 to i32, !dbg !7268
  br label %cond.end, !dbg !7268

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv3, %cond.true ], [ %conv4, %cond.false ], !dbg !7268
  store i32 %cond, i32* %tmp, align 4, !dbg !7268
  %9 = load i32, i32* %tmp, align 4, !dbg !7268
  %conv5 = trunc i32 %9 to i16, !dbg !7270
  call void @blk_queue_max_segments(%struct.request_queue* %2, i16 zeroext %conv5) #10, !dbg !7271
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7272
  %call = call i32 @scsi_host_prot_dma(%struct.Scsi_Host* %10) #10, !dbg !7274
  %tobool = icmp ne i32 %call, 0, !dbg !7274
  br i1 %tobool, label %if.then, label %if.end56, !dbg !7275

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i16* %__x, metadata !7276, metadata !DIExpression()), !dbg !7279
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7279
  %sg_prot_tablesize = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 28, !dbg !7279
  %12 = load i16, i16* %sg_prot_tablesize, align 4, !dbg !7279
  store i16 %12, i16* %__x, align 2, !dbg !7279
  call void @llvm.dbg.declare(metadata i16* %__y, metadata !7280, metadata !DIExpression()), !dbg !7279
  store i16 -1, i16* %__y, align 2, !dbg !7279
  %13 = load i16, i16* %__x, align 2, !dbg !7279
  %conv7 = zext i16 %13 to i32, !dbg !7279
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !7279
  br i1 %cmp8, label %cond.true10, label %cond.false12, !dbg !7279

cond.true10:                                      ; preds = %if.then
  %14 = load i16, i16* %__y, align 2, !dbg !7279
  %conv11 = zext i16 %14 to i32, !dbg !7279
  br label %cond.end32, !dbg !7279

cond.false12:                                     ; preds = %if.then
  %15 = load i16, i16* %__y, align 2, !dbg !7279
  %conv13 = zext i16 %15 to i32, !dbg !7279
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !7279
  br i1 %cmp14, label %cond.true16, label %cond.false18, !dbg !7279

cond.true16:                                      ; preds = %cond.false12
  %16 = load i16, i16* %__x, align 2, !dbg !7279
  %conv17 = zext i16 %16 to i32, !dbg !7279
  br label %cond.end30, !dbg !7279

cond.false18:                                     ; preds = %cond.false12
  call void @llvm.dbg.declare(metadata i16* %__UNIQUE_ID___x321, metadata !7281, metadata !DIExpression()), !dbg !7283
  %17 = load i16, i16* %__x, align 2, !dbg !7283
  store i16 %17, i16* %__UNIQUE_ID___x321, align 2, !dbg !7283
  call void @llvm.dbg.declare(metadata i16* %__UNIQUE_ID___y322, metadata !7284, metadata !DIExpression()), !dbg !7283
  %18 = load i16, i16* %__y, align 2, !dbg !7283
  store i16 %18, i16* %__UNIQUE_ID___y322, align 2, !dbg !7283
  %19 = load i16, i16* %__UNIQUE_ID___x321, align 2, !dbg !7283
  %conv20 = zext i16 %19 to i32, !dbg !7283
  %20 = load i16, i16* %__UNIQUE_ID___y322, align 2, !dbg !7283
  %conv21 = zext i16 %20 to i32, !dbg !7283
  %cmp22 = icmp slt i32 %conv20, %conv21, !dbg !7283
  br i1 %cmp22, label %cond.true24, label %cond.false26, !dbg !7283

cond.true24:                                      ; preds = %cond.false18
  %21 = load i16, i16* %__UNIQUE_ID___x321, align 2, !dbg !7283
  %conv25 = zext i16 %21 to i32, !dbg !7283
  br label %cond.end28, !dbg !7283

cond.false26:                                     ; preds = %cond.false18
  %22 = load i16, i16* %__UNIQUE_ID___y322, align 2, !dbg !7283
  %conv27 = zext i16 %22 to i32, !dbg !7283
  br label %cond.end28, !dbg !7283

cond.end28:                                       ; preds = %cond.false26, %cond.true24
  %cond29 = phi i32 [ %conv25, %cond.true24 ], [ %conv27, %cond.false26 ], !dbg !7283
  store i32 %cond29, i32* %tmp19, align 4, !dbg !7283
  %23 = load i32, i32* %tmp19, align 4, !dbg !7283
  br label %cond.end30, !dbg !7279

cond.end30:                                       ; preds = %cond.end28, %cond.true16
  %cond31 = phi i32 [ %conv17, %cond.true16 ], [ %23, %cond.end28 ], !dbg !7279
  br label %cond.end32, !dbg !7279

cond.end32:                                       ; preds = %cond.end30, %cond.true10
  %cond33 = phi i32 [ %conv11, %cond.true10 ], [ %cond31, %cond.end30 ], !dbg !7279
  store i32 %cond33, i32* %tmp6, align 4, !dbg !7279
  %24 = load i32, i32* %tmp6, align 4, !dbg !7279
  %conv34 = trunc i32 %24 to i16, !dbg !7285
  %25 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7286
  %sg_prot_tablesize35 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %25, i32 0, i32 28, !dbg !7287
  store i16 %conv34, i16* %sg_prot_tablesize35, align 4, !dbg !7288
  br label %do.body, !dbg !7289

do.body:                                          ; preds = %cond.end32
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7290
  %sg_prot_tablesize36 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %26, i32 0, i32 28, !dbg !7290
  %27 = load i16, i16* %sg_prot_tablesize36, align 4, !dbg !7290
  %conv37 = zext i16 %27 to i32, !dbg !7290
  %28 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7290
  %sg_tablesize38 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %28, i32 0, i32 27, !dbg !7290
  %29 = load i16, i16* %sg_tablesize38, align 2, !dbg !7290
  %conv39 = zext i16 %29 to i32, !dbg !7290
  %cmp40 = icmp slt i32 %conv37, %conv39, !dbg !7290
  %lnot = xor i1 %cmp40, true, !dbg !7290
  %lnot42 = xor i1 %lnot, true, !dbg !7290
  %lnot.ext = zext i1 %lnot42 to i32, !dbg !7290
  %conv43 = sext i32 %lnot.ext to i64, !dbg !7290
  %tobool44 = icmp ne i64 %conv43, 0, !dbg !7290
  br i1 %tobool44, label %if.then45, label %if.end, !dbg !7293

if.then45:                                        ; preds = %do.body
  br label %do.body46, !dbg !7290

do.body46:                                        ; preds = %if.then45
  br label %do.body47, !dbg !7294

do.body47:                                        ; preds = %do.body46
  br label %do.end, !dbg !7296

do.end:                                           ; preds = %do.body47
  br label %do.body48, !dbg !7294

do.body48:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 1803, i32 0, i64 12) #7, !dbg !7298, !srcloc !7300
  br label %do.end49, !dbg !7298

do.end49:                                         ; preds = %do.body48
  br label %do.body50, !dbg !7294

do.body50:                                        ; preds = %do.end49
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 323) #7, !dbg !7301, !srcloc !7304
  unreachable, !dbg !7305

do.end51:                                         ; No predecessors!
  br label %do.end52, !dbg !7294

do.end52:                                         ; preds = %do.end51
  br label %if.end, !dbg !7294

if.end:                                           ; preds = %do.end52, %do.body
  br label %do.end53, !dbg !7293

do.end53:                                         ; preds = %if.end
  %30 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7306
  %31 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7307
  %sg_prot_tablesize54 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %31, i32 0, i32 28, !dbg !7308
  %32 = load i16, i16* %sg_prot_tablesize54, align 4, !dbg !7308
  %conv55 = zext i16 %32 to i32, !dbg !7307
  call void @blk_queue_max_integrity_segments(%struct.request_queue* %30, i32 %conv55) #10, !dbg !7309
  br label %if.end56, !dbg !7310

if.end56:                                         ; preds = %do.end53, %cond.end
  %33 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7311
  %dma_mask = getelementptr inbounds %struct.device, %struct.device* %33, i32 0, i32 16, !dbg !7313
  %34 = load i64*, i64** %dma_mask, align 8, !dbg !7313
  %tobool57 = icmp ne i64* %34, null, !dbg !7311
  br i1 %tobool57, label %if.then58, label %if.end69, !dbg !7314

if.then58:                                        ; preds = %if.end56
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x324, metadata !7315, metadata !DIExpression()), !dbg !7318
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7318
  %max_sectors = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %35, i32 0, i32 29, !dbg !7318
  %36 = load i32, i32* %max_sectors, align 8, !dbg !7318
  store i32 %36, i32* %__UNIQUE_ID___x324, align 4, !dbg !7318
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y325, metadata !7319, metadata !DIExpression()), !dbg !7318
  %37 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7318
  %call59 = call i64 @dma_max_mapping_size(%struct.device* %37) #10, !dbg !7318
  %shr = lshr i64 %call59, 9, !dbg !7318
  %conv60 = trunc i64 %shr to i32, !dbg !7318
  store i32 %conv60, i32* %__UNIQUE_ID___y325, align 4, !dbg !7318
  %38 = load i32, i32* %__UNIQUE_ID___x324, align 4, !dbg !7318
  %39 = load i32, i32* %__UNIQUE_ID___y325, align 4, !dbg !7318
  %cmp62 = icmp ult i32 %38, %39, !dbg !7318
  br i1 %cmp62, label %cond.true64, label %cond.false65, !dbg !7318

cond.true64:                                      ; preds = %if.then58
  %40 = load i32, i32* %__UNIQUE_ID___x324, align 4, !dbg !7318
  br label %cond.end66, !dbg !7318

cond.false65:                                     ; preds = %if.then58
  %41 = load i32, i32* %__UNIQUE_ID___y325, align 4, !dbg !7318
  br label %cond.end66, !dbg !7318

cond.end66:                                       ; preds = %cond.false65, %cond.true64
  %cond67 = phi i32 [ %40, %cond.true64 ], [ %41, %cond.false65 ], !dbg !7318
  store i32 %cond67, i32* %tmp61, align 4, !dbg !7318
  %42 = load i32, i32* %tmp61, align 4, !dbg !7318
  %43 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7320
  %max_sectors68 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %43, i32 0, i32 29, !dbg !7321
  store i32 %42, i32* %max_sectors68, align 8, !dbg !7322
  br label %if.end69, !dbg !7323

if.end69:                                         ; preds = %cond.end66, %if.end56
  %44 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7324
  %45 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7325
  %max_sectors70 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %45, i32 0, i32 29, !dbg !7326
  %46 = load i32, i32* %max_sectors70, align 8, !dbg !7326
  call void @blk_queue_max_hw_sectors(%struct.request_queue* %44, i32 %46) #10, !dbg !7327
  %47 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7328
  %unchecked_isa_dma = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %47, i32 0, i32 34, !dbg !7330
  %bf.load = load i16, i16* %unchecked_isa_dma, align 4, !dbg !7330
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !7330
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7330
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7330
  %tobool71 = icmp ne i32 %bf.cast, 0, !dbg !7328
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !7331

if.then72:                                        ; preds = %if.end69
  %48 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7332
  call void @blk_queue_bounce_limit(%struct.request_queue* %48, i64 16777215) #10, !dbg !7333
  br label %if.end73, !dbg !7333

if.end73:                                         ; preds = %if.then72, %if.end69
  %49 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7334
  %50 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7335
  %dma_boundary = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %50, i32 0, i32 31, !dbg !7336
  %51 = load i64, i64* %dma_boundary, align 8, !dbg !7336
  call void @blk_queue_segment_boundary(%struct.request_queue* %49, i64 %51) #10, !dbg !7337
  %52 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7338
  %53 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7339
  %dma_boundary74 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %53, i32 0, i32 31, !dbg !7340
  %54 = load i64, i64* %dma_boundary74, align 8, !dbg !7340
  %call75 = call i32 @dma_set_seg_boundary(%struct.device* %52, i64 %54) #10, !dbg !7341
  %55 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7342
  %56 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7343
  %max_segment_size = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %56, i32 0, i32 30, !dbg !7344
  %57 = load i32, i32* %max_segment_size, align 4, !dbg !7344
  call void @blk_queue_max_segment_size(%struct.request_queue* %55, i32 %57) #10, !dbg !7345
  %58 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7346
  %59 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7347
  %virt_boundary_mask = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %59, i32 0, i32 32, !dbg !7348
  %60 = load i64, i64* %virt_boundary_mask, align 8, !dbg !7348
  call void @blk_queue_virt_boundary(%struct.request_queue* %58, i64 %60) #10, !dbg !7349
  %61 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7350
  %62 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7351
  %call76 = call i32 @queue_max_segment_size(%struct.request_queue* %62) #10, !dbg !7352
  %call77 = call i32 @dma_set_max_seg_size(%struct.device* %61, i32 %call76) #10, !dbg !7353
  %63 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7354
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x326, metadata !7355, metadata !DIExpression()), !dbg !7357
  store i32 4, i32* %__UNIQUE_ID___x326, align 4, !dbg !7357
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y327, metadata !7358, metadata !DIExpression()), !dbg !7357
  %call78 = call i32 @dma_get_cache_alignment() #10, !dbg !7357
  store i32 %call78, i32* %__UNIQUE_ID___y327, align 4, !dbg !7357
  %64 = load i32, i32* %__UNIQUE_ID___x326, align 4, !dbg !7357
  %65 = load i32, i32* %__UNIQUE_ID___y327, align 4, !dbg !7357
  %cmp80 = icmp sgt i32 %64, %65, !dbg !7357
  br i1 %cmp80, label %cond.true82, label %cond.false83, !dbg !7357

cond.true82:                                      ; preds = %if.end73
  %66 = load i32, i32* %__UNIQUE_ID___x326, align 4, !dbg !7357
  br label %cond.end84, !dbg !7357

cond.false83:                                     ; preds = %if.end73
  %67 = load i32, i32* %__UNIQUE_ID___y327, align 4, !dbg !7357
  br label %cond.end84, !dbg !7357

cond.end84:                                       ; preds = %cond.false83, %cond.true82
  %cond85 = phi i32 [ %66, %cond.true82 ], [ %67, %cond.false83 ], !dbg !7357
  store i32 %cond85, i32* %tmp79, align 4, !dbg !7357
  %68 = load i32, i32* %tmp79, align 4, !dbg !7357
  %sub = sub i32 %68, 1, !dbg !7359
  call void @blk_queue_dma_alignment(%struct.request_queue* %63, i32 %sub) #10, !dbg !7360
  ret void, !dbg !7361
}

; Function Attrs: noredzone
declare dso_local void @blk_queue_max_segments(%struct.request_queue*, i16 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_host_prot_dma(%struct.Scsi_Host* %shost) #0 !dbg !7362 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7363, metadata !DIExpression()), !dbg !7364
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7365
  %prot_capabilities = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 39, !dbg !7366
  %1 = load i32, i32* %prot_capabilities, align 4, !dbg !7366
  %cmp = icmp uge i32 %1, 8, !dbg !7367
  %conv = zext i1 %cmp to i32, !dbg !7367
  ret i32 %conv, !dbg !7368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @blk_queue_max_integrity_segments(%struct.request_queue* %q, i32 %segs) #0 !dbg !7369 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  %segs.addr = alloca i32, align 4
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !7372, metadata !DIExpression()), !dbg !7373
  store i32 %segs, i32* %segs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %segs.addr, metadata !7374, metadata !DIExpression()), !dbg !7375
  %0 = load i32, i32* %segs.addr, align 4, !dbg !7376
  %conv = trunc i32 %0 to i16, !dbg !7376
  %1 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7377
  %limits = getelementptr inbounds %struct.request_queue, %struct.request_queue* %1, i32 0, i32 34, !dbg !7378
  %max_integrity_segments = getelementptr inbounds %struct.queue_limits, %struct.queue_limits* %limits, i32 0, i32 21, !dbg !7379
  store i16 %conv, i16* %max_integrity_segments, align 2, !dbg !7380
  ret void, !dbg !7381
}

; Function Attrs: noredzone
declare dso_local i64 @dma_max_mapping_size(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @blk_queue_max_hw_sectors(%struct.request_queue*, i32) #2

; Function Attrs: noredzone
declare dso_local void @blk_queue_bounce_limit(%struct.request_queue*, i64) #2

; Function Attrs: noredzone
declare dso_local void @blk_queue_segment_boundary(%struct.request_queue*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_seg_boundary(%struct.device* %dev, i64 %mask) #0 !dbg !7382 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %mask.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7386, metadata !DIExpression()), !dbg !7387
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !7388, metadata !DIExpression()), !dbg !7389
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7390
  %dma_parms = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 20, !dbg !7392
  %1 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms, align 8, !dbg !7392
  %tobool = icmp ne %struct.device_dma_parameters* %1, null, !dbg !7390
  br i1 %tobool, label %if.then, label %if.end, !dbg !7393

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %mask.addr, align 8, !dbg !7394
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7396
  %dma_parms1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 20, !dbg !7397
  %4 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms1, align 8, !dbg !7397
  %segment_boundary_mask = getelementptr inbounds %struct.device_dma_parameters, %struct.device_dma_parameters* %4, i32 0, i32 1, !dbg !7398
  store i64 %2, i64* %segment_boundary_mask, align 8, !dbg !7399
  store i32 0, i32* %retval, align 4, !dbg !7400
  br label %return, !dbg !7400

if.end:                                           ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !7401
  br label %return, !dbg !7401

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7402
  ret i32 %5, !dbg !7402
}

; Function Attrs: noredzone
declare dso_local void @blk_queue_max_segment_size(%struct.request_queue*, i32) #2

; Function Attrs: noredzone
declare dso_local void @blk_queue_virt_boundary(%struct.request_queue*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_max_seg_size(%struct.device* %dev, i32 %size) #0 !dbg !7403 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7406, metadata !DIExpression()), !dbg !7407
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7408, metadata !DIExpression()), !dbg !7409
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7410
  %dma_parms = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 20, !dbg !7412
  %1 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms, align 8, !dbg !7412
  %tobool = icmp ne %struct.device_dma_parameters* %1, null, !dbg !7410
  br i1 %tobool, label %if.then, label %if.end, !dbg !7413

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %size.addr, align 4, !dbg !7414
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7416
  %dma_parms1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 20, !dbg !7417
  %4 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms1, align 8, !dbg !7417
  %max_segment_size = getelementptr inbounds %struct.device_dma_parameters, %struct.device_dma_parameters* %4, i32 0, i32 0, !dbg !7418
  store i32 %2, i32* %max_segment_size, align 8, !dbg !7419
  store i32 0, i32* %retval, align 4, !dbg !7420
  br label %return, !dbg !7420

if.end:                                           ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !7421
  br label %return, !dbg !7421

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7422
  ret i32 %5, !dbg !7422
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @queue_max_segment_size(%struct.request_queue* %q) #0 !dbg !7423 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !7426, metadata !DIExpression()), !dbg !7427
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7428
  %limits = getelementptr inbounds %struct.request_queue, %struct.request_queue* %0, i32 0, i32 34, !dbg !7429
  %max_segment_size = getelementptr inbounds %struct.queue_limits, %struct.queue_limits* %limits, i32 0, i32 7, !dbg !7430
  %1 = load i32, i32* %max_segment_size, align 8, !dbg !7430
  ret i32 %1, !dbg !7431
}

; Function Attrs: noredzone
declare dso_local void @blk_queue_dma_alignment(%struct.request_queue*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_get_cache_alignment() #0 !dbg !7432 {
entry:
  ret i32 1, !dbg !7435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.request_queue* @scsi_mq_alloc_queue(%struct.scsi_device* %sdev) #0 !dbg !7436 {
entry:
  %retval = alloca %struct.request_queue*, align 8
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !7439, metadata !DIExpression()), !dbg !7440
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7441
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !7442
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7442
  %tag_set = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 12, !dbg !7443
  %call = call %struct.request_queue* @blk_mq_init_queue(%struct.blk_mq_tag_set* %tag_set) #10, !dbg !7444
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7445
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 1, !dbg !7446
  store %struct.request_queue* %call, %struct.request_queue** %request_queue, align 8, !dbg !7447
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7448
  %request_queue1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 1, !dbg !7450
  %4 = load %struct.request_queue*, %struct.request_queue** %request_queue1, align 8, !dbg !7450
  %5 = bitcast %struct.request_queue* %4 to i8*, !dbg !7448
  %call2 = call zeroext i1 @IS_ERR(i8* %5) #10, !dbg !7451
  br i1 %call2, label %if.then, label %if.end, !dbg !7452

if.then:                                          ; preds = %entry
  store %struct.request_queue* null, %struct.request_queue** %retval, align 8, !dbg !7453
  br label %return, !dbg !7453

if.end:                                           ; preds = %entry
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7454
  %7 = bitcast %struct.scsi_device* %6 to i8*, !dbg !7454
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7455
  %request_queue3 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 1, !dbg !7456
  %9 = load %struct.request_queue*, %struct.request_queue** %request_queue3, align 8, !dbg !7456
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %9, i32 0, i32 11, !dbg !7457
  store i8* %7, i8** %queuedata, align 8, !dbg !7458
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7459
  %host4 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 0, !dbg !7460
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host4, align 8, !dbg !7460
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7461
  %request_queue5 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %12, i32 0, i32 1, !dbg !7462
  %13 = load %struct.request_queue*, %struct.request_queue** %request_queue5, align 8, !dbg !7462
  call void @__scsi_init_queue(%struct.Scsi_Host* %11, %struct.request_queue* %13) #10, !dbg !7463
  %14 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7464
  %request_queue6 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %14, i32 0, i32 1, !dbg !7465
  %15 = load %struct.request_queue*, %struct.request_queue** %request_queue6, align 8, !dbg !7465
  call void @blk_queue_flag_set(i32 23, %struct.request_queue* %15) #10, !dbg !7466
  %16 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7467
  %request_queue7 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %16, i32 0, i32 1, !dbg !7468
  %17 = load %struct.request_queue*, %struct.request_queue** %request_queue7, align 8, !dbg !7468
  store %struct.request_queue* %17, %struct.request_queue** %retval, align 8, !dbg !7469
  br label %return, !dbg !7469

return:                                           ; preds = %if.end, %if.then
  %18 = load %struct.request_queue*, %struct.request_queue** %retval, align 8, !dbg !7470
  ret %struct.request_queue* %18, !dbg !7470
}

; Function Attrs: noredzone
declare dso_local %struct.request_queue* @blk_mq_init_queue(%struct.blk_mq_tag_set*) #2

; Function Attrs: noredzone
declare dso_local void @blk_queue_flag_set(i32, %struct.request_queue*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_mq_setup_tags(%struct.Scsi_Host* %shost) #0 !dbg !7471 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %cmd_size = alloca i32, align 4
  %sgl_size = alloca i32, align 4
  %tag_set = alloca %struct.blk_mq_tag_set*, align 8
  %__UNIQUE_ID___x328 = alloca i32, align 4
  %__UNIQUE_ID___y329 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7472, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.declare(metadata i32* %cmd_size, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.declare(metadata i32* %sgl_size, metadata !7476, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.declare(metadata %struct.blk_mq_tag_set** %tag_set, metadata !7478, metadata !DIExpression()), !dbg !7479
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7480
  %tag_set1 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 12, !dbg !7481
  store %struct.blk_mq_tag_set* %tag_set1, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7479
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x328, metadata !7482, metadata !DIExpression()), !dbg !7484
  store i32 32, i32* %__UNIQUE_ID___x328, align 4, !dbg !7484
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y329, metadata !7485, metadata !DIExpression()), !dbg !7484
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7484
  %call = call i32 @scsi_mq_inline_sgl_size(%struct.Scsi_Host* %1) #10, !dbg !7484
  store i32 %call, i32* %__UNIQUE_ID___y329, align 4, !dbg !7484
  %2 = load i32, i32* %__UNIQUE_ID___x328, align 4, !dbg !7484
  %3 = load i32, i32* %__UNIQUE_ID___y329, align 4, !dbg !7484
  %cmp = icmp ugt i32 %2, %3, !dbg !7484
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7484

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x328, align 4, !dbg !7484
  br label %cond.end, !dbg !7484

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y329, align 4, !dbg !7484
  br label %cond.end, !dbg !7484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !7484
  store i32 %cond, i32* %tmp, align 4, !dbg !7484
  %6 = load i32, i32* %tmp, align 4, !dbg !7484
  store i32 %6, i32* %sgl_size, align 4, !dbg !7486
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7487
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 10, !dbg !7488
  %8 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !7488
  %cmd_size2 = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %8, i32 0, i32 48, !dbg !7489
  %9 = load i32, i32* %cmd_size2, align 8, !dbg !7489
  %conv = zext i32 %9 to i64, !dbg !7487
  %add = add i64 392, %conv, !dbg !7490
  %10 = load i32, i32* %sgl_size, align 4, !dbg !7491
  %conv3 = zext i32 %10 to i64, !dbg !7491
  %add4 = add i64 %add, %conv3, !dbg !7492
  %conv5 = trunc i64 %add4 to i32, !dbg !7493
  store i32 %conv5, i32* %cmd_size, align 4, !dbg !7494
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7495
  %call6 = call i32 @scsi_host_get_prot(%struct.Scsi_Host* %11) #10, !dbg !7497
  %tobool = icmp ne i32 %call6, 0, !dbg !7497
  br i1 %tobool, label %if.then, label %if.end, !dbg !7498

if.then:                                          ; preds = %cond.end
  %12 = load i32, i32* %cmd_size, align 4, !dbg !7499
  %conv7 = zext i32 %12 to i64, !dbg !7499
  %add8 = add i64 %conv7, 56, !dbg !7499
  %conv9 = trunc i64 %add8 to i32, !dbg !7499
  store i32 %conv9, i32* %cmd_size, align 4, !dbg !7499
  br label %if.end, !dbg !7500

if.end:                                           ; preds = %if.then, %cond.end
  %13 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7501
  %14 = bitcast %struct.blk_mq_tag_set* %13 to i8*, !dbg !7502
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 288, i1 false), !dbg !7502
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7503
  %hostt10 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %15, i32 0, i32 10, !dbg !7505
  %16 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt10, align 8, !dbg !7505
  %commit_rqs = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %16, i32 0, i32 7, !dbg !7506
  %17 = load void (%struct.Scsi_Host*, i16)*, void (%struct.Scsi_Host*, i16)** %commit_rqs, align 8, !dbg !7506
  %tobool11 = icmp ne void (%struct.Scsi_Host*, i16)* %17, null, !dbg !7503
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !7507

if.then12:                                        ; preds = %if.end
  %18 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7508
  %ops = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %18, i32 0, i32 2, !dbg !7509
  store %struct.blk_mq_ops* @scsi_mq_ops, %struct.blk_mq_ops** %ops, align 8, !dbg !7510
  br label %if.end14, !dbg !7508

if.else:                                          ; preds = %if.end
  %19 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7511
  %ops13 = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %19, i32 0, i32 2, !dbg !7512
  store %struct.blk_mq_ops* @scsi_mq_ops_no_commit, %struct.blk_mq_ops** %ops13, align 8, !dbg !7513
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then12
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7514
  %nr_hw_queues = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 33, !dbg !7515
  %21 = load i32, i32* %nr_hw_queues, align 8, !dbg !7515
  %tobool15 = icmp ne i32 %21, 0, !dbg !7514
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !7514

cond.true16:                                      ; preds = %if.end14
  br label %cond.end18, !dbg !7514

cond.false17:                                     ; preds = %if.end14
  br label %cond.end18, !dbg !7514

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i32 [ %21, %cond.true16 ], [ 1, %cond.false17 ], !dbg !7514
  %22 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7516
  %nr_hw_queues20 = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %22, i32 0, i32 3, !dbg !7517
  store i32 %cond19, i32* %nr_hw_queues20, align 8, !dbg !7518
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7519
  %can_queue = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %23, i32 0, i32 25, !dbg !7520
  %24 = load i32, i32* %can_queue, align 4, !dbg !7520
  %25 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7521
  %queue_depth = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %25, i32 0, i32 4, !dbg !7522
  store i32 %24, i32* %queue_depth, align 4, !dbg !7523
  %26 = load i32, i32* %cmd_size, align 4, !dbg !7524
  %27 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7525
  %cmd_size21 = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %27, i32 0, i32 6, !dbg !7526
  store i32 %26, i32* %cmd_size21, align 4, !dbg !7527
  %28 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7528
  %numa_node = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %28, i32 0, i32 7, !dbg !7529
  store i32 -1, i32* %numa_node, align 8, !dbg !7530
  %29 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7531
  %flags = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %29, i32 0, i32 9, !dbg !7532
  store i32 1, i32* %flags, align 8, !dbg !7533
  %30 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7534
  %hostt22 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %30, i32 0, i32 10, !dbg !7534
  %31 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt22, align 8, !dbg !7534
  %tag_alloc_policy = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %31, i32 0, i32 41, !dbg !7534
  %32 = load i32, i32* %tag_alloc_policy, align 4, !dbg !7534
  %and = and i32 %32, 1, !dbg !7534
  %shl = shl i32 %and, 8, !dbg !7534
  %33 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7535
  %flags23 = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %33, i32 0, i32 9, !dbg !7536
  %34 = load i32, i32* %flags23, align 8, !dbg !7537
  %or = or i32 %34, %shl, !dbg !7537
  store i32 %or, i32* %flags23, align 8, !dbg !7537
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7538
  %36 = bitcast %struct.Scsi_Host* %35 to i8*, !dbg !7538
  %37 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7539
  %driver_data = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %37, i32 0, i32 10, !dbg !7540
  store i8* %36, i8** %driver_data, align 8, !dbg !7541
  %38 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7542
  %host_tagset = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %38, i32 0, i32 34, !dbg !7544
  %bf.load = load i16, i16* %host_tagset, align 4, !dbg !7544
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !7544
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7544
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7544
  %tobool24 = icmp ne i32 %bf.cast, 0, !dbg !7542
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !7545

if.then25:                                        ; preds = %cond.end18
  %39 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7546
  %flags26 = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %39, i32 0, i32 9, !dbg !7547
  %40 = load i32, i32* %flags26, align 8, !dbg !7548
  %or27 = or i32 %40, 8, !dbg !7548
  store i32 %or27, i32* %flags26, align 8, !dbg !7548
  br label %if.end28, !dbg !7546

if.end28:                                         ; preds = %if.then25, %cond.end18
  %41 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %tag_set, align 8, !dbg !7549
  %call29 = call i32 @blk_mq_alloc_tag_set(%struct.blk_mq_tag_set* %41) #10, !dbg !7550
  ret i32 %call29, !dbg !7551
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_mq_inline_sgl_size(%struct.Scsi_Host* %shost) #0 !dbg !7552 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %__UNIQUE_ID___x316 = alloca i32, align 4
  %__UNIQUE_ID___y317 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7555, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x316, metadata !7557, metadata !DIExpression()), !dbg !7559
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7559
  %sg_tablesize = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 27, !dbg !7559
  %1 = load i16, i16* %sg_tablesize, align 2, !dbg !7559
  %conv = zext i16 %1 to i32, !dbg !7559
  store i32 %conv, i32* %__UNIQUE_ID___x316, align 4, !dbg !7559
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y317, metadata !7560, metadata !DIExpression()), !dbg !7559
  store i32 2, i32* %__UNIQUE_ID___y317, align 4, !dbg !7559
  %2 = load i32, i32* %__UNIQUE_ID___x316, align 4, !dbg !7559
  %3 = load i32, i32* %__UNIQUE_ID___y317, align 4, !dbg !7559
  %cmp = icmp ult i32 %2, %3, !dbg !7559
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7559

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x316, align 4, !dbg !7559
  br label %cond.end, !dbg !7559

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y317, align 4, !dbg !7559
  br label %cond.end, !dbg !7559

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !7559
  store i32 %cond, i32* %tmp, align 4, !dbg !7559
  %6 = load i32, i32* %tmp, align 4, !dbg !7559
  %conv2 = zext i32 %6 to i64, !dbg !7561
  %mul = mul i64 %conv2, 32, !dbg !7562
  %conv3 = trunc i64 %mul to i32, !dbg !7561
  ret i32 %conv3, !dbg !7563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_host_get_prot(%struct.Scsi_Host* %shost) #0 !dbg !7564 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7565, metadata !DIExpression()), !dbg !7566
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7567
  %prot_capabilities = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 39, !dbg !7568
  %1 = load i32, i32* %prot_capabilities, align 4, !dbg !7568
  ret i32 %1, !dbg !7569
}

; Function Attrs: noredzone
declare dso_local i32 @blk_mq_alloc_tag_set(%struct.blk_mq_tag_set*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_mq_destroy_tags(%struct.Scsi_Host* %shost) #0 !dbg !7570 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7571, metadata !DIExpression()), !dbg !7572
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7573
  %tag_set = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 12, !dbg !7574
  call void @blk_mq_free_tag_set(%struct.blk_mq_tag_set* %tag_set) #10, !dbg !7575
  ret void, !dbg !7576
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_free_tag_set(%struct.blk_mq_tag_set*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.scsi_device* @scsi_device_from_queue(%struct.request_queue* %q) #0 !dbg !7577 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !7580, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !7582, metadata !DIExpression()), !dbg !7583
  store %struct.scsi_device* null, %struct.scsi_device** %sdev, align 8, !dbg !7583
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7584
  %mq_ops = getelementptr inbounds %struct.request_queue, %struct.request_queue* %0, i32 0, i32 5, !dbg !7586
  %1 = load %struct.blk_mq_ops*, %struct.blk_mq_ops** %mq_ops, align 8, !dbg !7586
  %cmp = icmp eq %struct.blk_mq_ops* %1, @scsi_mq_ops_no_commit, !dbg !7587
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7588

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7589
  %mq_ops1 = getelementptr inbounds %struct.request_queue, %struct.request_queue* %2, i32 0, i32 5, !dbg !7590
  %3 = load %struct.blk_mq_ops*, %struct.blk_mq_ops** %mq_ops1, align 8, !dbg !7590
  %cmp2 = icmp eq %struct.blk_mq_ops* %3, @scsi_mq_ops, !dbg !7591
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7592

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !7593
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %4, i32 0, i32 11, !dbg !7594
  %5 = load i8*, i8** %queuedata, align 8, !dbg !7594
  %6 = bitcast i8* %5 to %struct.scsi_device*, !dbg !7593
  store %struct.scsi_device* %6, %struct.scsi_device** %sdev, align 8, !dbg !7595
  br label %if.end, !dbg !7596

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !7597
  %tobool = icmp ne %struct.scsi_device* %7, null, !dbg !7597
  br i1 %tobool, label %lor.lhs.false3, label %if.then5, !dbg !7599

lor.lhs.false3:                                   ; preds = %if.end
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !7600
  %sdev_gendev = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 50, !dbg !7601
  %call = call %struct.device* @get_device(%struct.device* %sdev_gendev) #10, !dbg !7602
  %tobool4 = icmp ne %struct.device* %call, null, !dbg !7602
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7603

if.then5:                                         ; preds = %lor.lhs.false3, %if.end
  store %struct.scsi_device* null, %struct.scsi_device** %sdev, align 8, !dbg !7604
  br label %if.end6, !dbg !7605

if.end6:                                          ; preds = %if.then5, %lor.lhs.false3
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !7606
  ret %struct.scsi_device* %9, !dbg !7607
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_block_requests(%struct.Scsi_Host* %shost) #0 !dbg !7608 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7609, metadata !DIExpression()), !dbg !7610
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7611
  %host_self_blocked = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 34, !dbg !7612
  %bf.load = load i16, i16* %host_self_blocked, align 4, !dbg !7613
  %bf.clear = and i16 %bf.load, -9, !dbg !7613
  %bf.set = or i16 %bf.clear, 8, !dbg !7613
  store i16 %bf.set, i16* %host_self_blocked, align 4, !dbg !7613
  ret void, !dbg !7614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_unblock_requests(%struct.Scsi_Host* %shost) #0 !dbg !7615 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !7616, metadata !DIExpression()), !dbg !7617
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7618
  %host_self_blocked = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 34, !dbg !7619
  %bf.load = load i16, i16* %host_self_blocked, align 4, !dbg !7620
  %bf.clear = and i16 %bf.load, -9, !dbg !7620
  store i16 %bf.clear, i16* %host_self_blocked, align 4, !dbg !7620
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !7621
  call void @scsi_run_host_queues(%struct.Scsi_Host* %1) #10, !dbg !7622
  ret void, !dbg !7623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_exit_queue() #0 !dbg !7624 {
entry:
  %0 = load %struct.kmem_cache*, %struct.kmem_cache** @scsi_sense_cache, align 8, !dbg !7625
  call void @kmem_cache_destroy(%struct.kmem_cache* %0) #10, !dbg !7626
  %1 = load %struct.kmem_cache*, %struct.kmem_cache** @scsi_sense_isadma_cache, align 8, !dbg !7627
  call void @kmem_cache_destroy(%struct.kmem_cache* %1) #10, !dbg !7628
  ret void, !dbg !7629
}

; Function Attrs: noredzone
declare dso_local void @kmem_cache_destroy(%struct.kmem_cache*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_mode_select(%struct.scsi_device* %sdev, i32 %pf, i32 %sp, i32 %modepage, i8* %buffer, i32 %len, i32 %timeout, i32 %retries, %struct.scsi_mode_data* %data, %struct.scsi_sense_hdr* %sshdr) #0 !dbg !7630 {
entry:
  %s.addr.i.i73 = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i73, metadata !7642, metadata !DIExpression()), !dbg !7646
  %flags.addr.i17.i74 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i74, metadata !7656, metadata !DIExpression()), !dbg !7657
  %size.addr.i18.i75 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i75, metadata !7658, metadata !DIExpression()), !dbg !7659
  %ret.i.i76 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i76, metadata !7660, metadata !DIExpression()), !dbg !7661
  %retval.i12.i77 = alloca i32, align 4
  %flags.addr.i13.i78 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i78, metadata !7662, metadata !DIExpression()), !dbg !7666
  %retval.i.i79 = alloca i32, align 4
  %size.addr.i11.i80 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i80, metadata !7668, metadata !DIExpression()), !dbg !7672
  %size.addr.i.i.i81 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i81, metadata !7674, metadata !DIExpression()), !dbg !7678
  %flags.addr.i.i.i82 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i82, metadata !7683, metadata !DIExpression()), !dbg !7684
  %order.addr.i.i.i83 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i83, metadata !7685, metadata !DIExpression()), !dbg !7686
  %size.addr.i.i84 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i84, metadata !7687, metadata !DIExpression()), !dbg !7688
  %flags.addr.i.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i85, metadata !7689, metadata !DIExpression()), !dbg !7690
  %order.i.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i86, metadata !7691, metadata !DIExpression()), !dbg !7692
  %retval.i87 = alloca i8*, align 8
  %size.addr.i88 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i88, metadata !7693, metadata !DIExpression()), !dbg !7694
  %flags.addr.i89 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i89, metadata !7695, metadata !DIExpression()), !dbg !7696
  %index.i90 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i90, metadata !7697, metadata !DIExpression()), !dbg !7698
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7642, metadata !DIExpression()), !dbg !7699
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7656, metadata !DIExpression()), !dbg !7703
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7658, metadata !DIExpression()), !dbg !7704
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7660, metadata !DIExpression()), !dbg !7705
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7662, metadata !DIExpression()), !dbg !7706
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7668, metadata !DIExpression()), !dbg !7708
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7674, metadata !DIExpression()), !dbg !7710
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7683, metadata !DIExpression()), !dbg !7713
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7685, metadata !DIExpression()), !dbg !7714
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7687, metadata !DIExpression()), !dbg !7715
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7689, metadata !DIExpression()), !dbg !7716
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7691, metadata !DIExpression()), !dbg !7717
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7693, metadata !DIExpression()), !dbg !7718
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7695, metadata !DIExpression()), !dbg !7719
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7697, metadata !DIExpression()), !dbg !7720
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %pf.addr = alloca i32, align 4
  %sp.addr = alloca i32, align 4
  %modepage.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %timeout.addr = alloca i32, align 4
  %retries.addr = alloca i32, align 4
  %data.addr = alloca %struct.scsi_mode_data*, align 8
  %sshdr.addr = alloca %struct.scsi_sense_hdr*, align 8
  %cmd = alloca [10 x i8], align 1
  %real_buffer = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !7721, metadata !DIExpression()), !dbg !7722
  store i32 %pf, i32* %pf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pf.addr, metadata !7723, metadata !DIExpression()), !dbg !7724
  store i32 %sp, i32* %sp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sp.addr, metadata !7725, metadata !DIExpression()), !dbg !7726
  store i32 %modepage, i32* %modepage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modepage.addr, metadata !7727, metadata !DIExpression()), !dbg !7728
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7729, metadata !DIExpression()), !dbg !7730
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !7731, metadata !DIExpression()), !dbg !7732
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !7733, metadata !DIExpression()), !dbg !7734
  store i32 %retries, i32* %retries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retries.addr, metadata !7735, metadata !DIExpression()), !dbg !7736
  store %struct.scsi_mode_data* %data, %struct.scsi_mode_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_mode_data** %data.addr, metadata !7737, metadata !DIExpression()), !dbg !7738
  store %struct.scsi_sense_hdr* %sshdr, %struct.scsi_sense_hdr** %sshdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr** %sshdr.addr, metadata !7739, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.declare(metadata [10 x i8]* %cmd, metadata !7741, metadata !DIExpression()), !dbg !7745
  call void @llvm.dbg.declare(metadata i8** %real_buffer, metadata !7746, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7748, metadata !DIExpression()), !dbg !7749
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %cmd, i64 0, i64 0, !dbg !7750
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 0, i64 10, i1 false), !dbg !7750
  %0 = load i32, i32* %pf.addr, align 4, !dbg !7751
  %tobool = icmp ne i32 %0, 0, !dbg !7751
  %1 = zext i1 %tobool to i64, !dbg !7751
  %cond = select i1 %tobool, i32 16, i32 0, !dbg !7751
  %2 = load i32, i32* %sp.addr, align 4, !dbg !7752
  %tobool1 = icmp ne i32 %2, 0, !dbg !7752
  %3 = zext i1 %tobool1 to i64, !dbg !7752
  %cond2 = select i1 %tobool1, i32 1, i32 0, !dbg !7752
  %or = or i32 %cond, %cond2, !dbg !7753
  %conv = trunc i32 %or to i8, !dbg !7754
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %cmd, i64 0, i64 1, !dbg !7755
  store i8 %conv, i8* %arrayidx, align 1, !dbg !7756
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7757
  %use_10_for_ms = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 39, !dbg !7758
  %5 = bitcast [6 x i8]* %use_10_for_ms to i48*, !dbg !7758
  %bf.load = load i48, i48* %5, align 4, !dbg !7758
  %bf.lshr = lshr i48 %bf.load, 16, !dbg !7758
  %bf.clear = and i48 %bf.lshr, 1, !dbg !7758
  %bf.cast = trunc i48 %bf.clear to i32, !dbg !7758
  %tobool3 = icmp ne i32 %bf.cast, 0, !dbg !7757
  br i1 %tobool3, label %if.then, label %if.else, !dbg !7759

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %len.addr, align 4, !dbg !7760
  %cmp = icmp sgt i32 %6, 65535, !dbg !7762
  br i1 %cmp, label %if.then5, label %if.end, !dbg !7763

if.then5:                                         ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !7764
  br label %return, !dbg !7764

if.end:                                           ; preds = %if.then
  %7 = load i32, i32* %len.addr, align 4, !dbg !7765
  %add = add i32 8, %7, !dbg !7766
  %conv6 = sext i32 %add to i64, !dbg !7767
  store i64 %conv6, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %8 = load i64, i64* %size.addr.i, align 8, !dbg !7768
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !7769
  br i1 %9, label %if.then.i, label %if.end9.i, !dbg !7770

if.then.i:                                        ; preds = %if.end
  %10 = load i64, i64* %size.addr.i, align 8, !dbg !7771
  %cmp.i = icmp ugt i64 %10, 8192, !dbg !7772
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7773

if.then1.i:                                       ; preds = %if.then.i
  %11 = load i64, i64* %size.addr.i, align 8, !dbg !7774
  %12 = load i32, i32* %flags.addr.i, align 4, !dbg !7775
  store i64 %11, i64* %size.addr.i.i, align 8
  store i32 %12, i32* %flags.addr.i.i, align 4
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !7776
  %call.i.i = call i32 @get_order(i64 %13) #12, !dbg !7777
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7717
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !7778
  %15 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7779
  %16 = load i32, i32* %order.i.i, align 4, !dbg !7780
  store i64 %14, i64* %size.addr.i.i.i, align 8
  store i32 %15, i32* %flags.addr.i.i.i, align 4
  store i32 %16, i32* %order.addr.i.i.i, align 4
  %17 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7781
  %18 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7782
  %19 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7783
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %17, i32 %18, i32 %19) #11, !dbg !7784
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7784
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7784
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7784
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !7784
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7785
  br label %kmalloc.exit, !dbg !7785

if.end.i:                                         ; preds = %if.then.i
  %20 = load i64, i64* %size.addr.i, align 8, !dbg !7786
  store i64 %20, i64* %size.addr.i11.i, align 8
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7787
  %tobool.i.i = icmp ne i64 %21, 0, !dbg !7787
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7789

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7790
  br label %kmalloc_index.exit.i, !dbg !7790

if.end.i.i:                                       ; preds = %if.end.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7791
  %cmp.i.i = icmp ule i64 %22, 8, !dbg !7793
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7794

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7795
  br label %kmalloc_index.exit.i, !dbg !7795

if.end2.i.i:                                      ; preds = %if.end.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7796
  %cmp3.i.i = icmp ugt i64 %23, 64, !dbg !7798
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7799

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7800
  %cmp4.i.i = icmp ule i64 %24, 96, !dbg !7801
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7802

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7803
  br label %kmalloc_index.exit.i, !dbg !7803

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7804
  %cmp7.i.i = icmp ugt i64 %25, 128, !dbg !7806
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7807

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7808
  %cmp9.i.i = icmp ule i64 %26, 192, !dbg !7809
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7810

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7811
  br label %kmalloc_index.exit.i, !dbg !7811

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7812
  %cmp12.i.i = icmp ule i64 %27, 8, !dbg !7814
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7815

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7816
  br label %kmalloc_index.exit.i, !dbg !7816

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7817
  %cmp15.i.i = icmp ule i64 %28, 16, !dbg !7819
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7820

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7821
  br label %kmalloc_index.exit.i, !dbg !7821

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7822
  %cmp18.i.i = icmp ule i64 %29, 32, !dbg !7824
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7825

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7826
  br label %kmalloc_index.exit.i, !dbg !7826

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7827
  %cmp21.i.i = icmp ule i64 %30, 64, !dbg !7829
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7830

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7831
  br label %kmalloc_index.exit.i, !dbg !7831

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7832
  %cmp24.i.i = icmp ule i64 %31, 128, !dbg !7834
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7835

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7836
  br label %kmalloc_index.exit.i, !dbg !7836

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7837
  %cmp27.i.i = icmp ule i64 %32, 256, !dbg !7839
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7840

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7841
  br label %kmalloc_index.exit.i, !dbg !7841

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7842
  %cmp30.i.i = icmp ule i64 %33, 512, !dbg !7844
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7845

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7846
  br label %kmalloc_index.exit.i, !dbg !7846

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7847
  %cmp33.i.i = icmp ule i64 %34, 1024, !dbg !7849
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7850

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7851
  br label %kmalloc_index.exit.i, !dbg !7851

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7852
  %cmp36.i.i = icmp ule i64 %35, 2048, !dbg !7854
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7855

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7856
  br label %kmalloc_index.exit.i, !dbg !7856

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7857
  %cmp39.i.i = icmp ule i64 %36, 4096, !dbg !7859
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7860

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7861
  br label %kmalloc_index.exit.i, !dbg !7861

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7862
  %cmp42.i.i = icmp ule i64 %37, 8192, !dbg !7864
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7865

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7866
  br label %kmalloc_index.exit.i, !dbg !7866

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7867
  %cmp45.i.i = icmp ule i64 %38, 16384, !dbg !7869
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7870

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7871
  br label %kmalloc_index.exit.i, !dbg !7871

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7872
  %cmp48.i.i = icmp ule i64 %39, 32768, !dbg !7874
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7875

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7876
  br label %kmalloc_index.exit.i, !dbg !7876

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7877
  %cmp51.i.i = icmp ule i64 %40, 65536, !dbg !7879
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7880

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7881
  br label %kmalloc_index.exit.i, !dbg !7881

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7882
  %cmp54.i.i = icmp ule i64 %41, 131072, !dbg !7884
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7885

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7886
  br label %kmalloc_index.exit.i, !dbg !7886

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7887
  %cmp57.i.i = icmp ule i64 %42, 262144, !dbg !7889
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7890

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7891
  br label %kmalloc_index.exit.i, !dbg !7891

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7892
  %cmp60.i.i = icmp ule i64 %43, 524288, !dbg !7894
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7895

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7896
  br label %kmalloc_index.exit.i, !dbg !7896

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7897
  %cmp63.i.i = icmp ule i64 %44, 1048576, !dbg !7899
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7900

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7901
  br label %kmalloc_index.exit.i, !dbg !7901

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7902
  %cmp66.i.i = icmp ule i64 %45, 2097152, !dbg !7904
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7905

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7906
  br label %kmalloc_index.exit.i, !dbg !7906

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7907
  %cmp69.i.i = icmp ule i64 %46, 4194304, !dbg !7909
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7910

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7911
  br label %kmalloc_index.exit.i, !dbg !7911

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7912
  %cmp72.i.i = icmp ule i64 %47, 8388608, !dbg !7914
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7915

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7916
  br label %kmalloc_index.exit.i, !dbg !7916

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7917
  %cmp75.i.i = icmp ule i64 %48, 16777216, !dbg !7919
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7920

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7921
  br label %kmalloc_index.exit.i, !dbg !7921

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7922
  %cmp78.i.i = icmp ule i64 %49, 33554432, !dbg !7924
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7925

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7926
  br label %kmalloc_index.exit.i, !dbg !7926

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7927
  %cmp81.i.i = icmp ule i64 %50, 67108864, !dbg !7929
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7930

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7931
  br label %kmalloc_index.exit.i, !dbg !7931

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !7932, !srcloc !7935
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 247) #7, !dbg !7936, !srcloc !7939
  unreachable, !dbg !7940

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %51 = load i32, i32* %retval.i.i, align 4, !dbg !7941
  store i32 %51, i32* %index.i, align 4, !dbg !7942
  %52 = load i32, i32* %index.i, align 4, !dbg !7943
  %tobool.i = icmp ne i32 %52, 0, !dbg !7943
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7945

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7946
  br label %kmalloc.exit, !dbg !7946

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %53 = load i32, i32* %flags.addr.i, align 4, !dbg !7947
  store i32 %53, i32* %flags.addr.i13.i, align 4
  %54 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7948
  %and.i.i = and i32 %54, 17, !dbg !7948
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7948
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7948
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7948
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7948
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7950

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7951
  br label %kmalloc_type.exit.i, !dbg !7951

if.end.i16.i:                                     ; preds = %if.end4.i
  %55 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7952
  %and2.i.i = and i32 %55, 1, !dbg !7953
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7952
  %56 = zext i1 %tobool3.i.i to i64, !dbg !7952
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7952
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7954
  br label %kmalloc_type.exit.i, !dbg !7954

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %57 = load i32, i32* %retval.i12.i, align 4, !dbg !7955
  %idxprom.i = zext i32 %57 to i64, !dbg !7956
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7956
  %58 = load i32, i32* %index.i, align 4, !dbg !7957
  %idxprom6.i = zext i32 %58 to i64, !dbg !7956
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7956
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7956
  %60 = load i32, i32* %flags.addr.i, align 4, !dbg !7958
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !7959
  store %struct.kmem_cache* %59, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %60, i32* %flags.addr.i17.i, align 4
  store i64 %61, i64* %size.addr.i18.i, align 8
  %62 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7960
  %63 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7961
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %62, i32 %63) #11, !dbg !7962
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7962
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7962
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7962
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !7962
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7705
  %64 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7963
  %65 = load i8*, i8** %ret.i.i, align 8, !dbg !7964
  %66 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7965
  %67 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7966
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %64, i8* %65, i64 %66, i32 %67) #11, !dbg !7967
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7968
  %68 = load i8*, i8** %ret.i.i, align 8, !dbg !7969
  store i8* %68, i8** %retval.i, align 8, !dbg !7970
  br label %kmalloc.exit, !dbg !7970

if.end9.i:                                        ; preds = %if.end
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !7971
  %70 = load i32, i32* %flags.addr.i, align 4, !dbg !7972
  %call10.i = call noalias i8* @__kmalloc(i64 %69, i32 %70) #11, !dbg !7973
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7973
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7973
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7973
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !7973
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7974
  br label %kmalloc.exit, !dbg !7974

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %71 = load i8*, i8** %retval.i, align 8, !dbg !7975
  store i8* %71, i8** %real_buffer, align 8, !dbg !7976
  %72 = load i8*, i8** %real_buffer, align 8, !dbg !7977
  %tobool7 = icmp ne i8* %72, null, !dbg !7977
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !7979

if.then8:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !7980
  br label %return, !dbg !7980

if.end9:                                          ; preds = %kmalloc.exit
  %73 = load i8*, i8** %real_buffer, align 8, !dbg !7981
  %add.ptr = getelementptr i8, i8* %73, i64 8, !dbg !7982
  %74 = load i8*, i8** %buffer.addr, align 8, !dbg !7983
  %75 = load i32, i32* %len.addr, align 4, !dbg !7984
  %conv10 = sext i32 %75 to i64, !dbg !7984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %74, i64 %conv10, i1 false), !dbg !7985
  %76 = load i32, i32* %len.addr, align 4, !dbg !7986
  %add11 = add i32 %76, 8, !dbg !7986
  store i32 %add11, i32* %len.addr, align 4, !dbg !7986
  %77 = load i8*, i8** %real_buffer, align 8, !dbg !7987
  %arrayidx12 = getelementptr i8, i8* %77, i64 0, !dbg !7987
  store i8 0, i8* %arrayidx12, align 1, !dbg !7988
  %78 = load i8*, i8** %real_buffer, align 8, !dbg !7989
  %arrayidx13 = getelementptr i8, i8* %78, i64 1, !dbg !7989
  store i8 0, i8* %arrayidx13, align 1, !dbg !7990
  %79 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !7991
  %medium_type = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %79, i32 0, i32 2, !dbg !7992
  %80 = load i8, i8* %medium_type, align 2, !dbg !7992
  %81 = load i8*, i8** %real_buffer, align 8, !dbg !7993
  %arrayidx14 = getelementptr i8, i8* %81, i64 2, !dbg !7993
  store i8 %80, i8* %arrayidx14, align 1, !dbg !7994
  %82 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !7995
  %device_specific = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %82, i32 0, i32 3, !dbg !7996
  %83 = load i8, i8* %device_specific, align 1, !dbg !7996
  %84 = load i8*, i8** %real_buffer, align 8, !dbg !7997
  %arrayidx15 = getelementptr i8, i8* %84, i64 3, !dbg !7997
  store i8 %83, i8* %arrayidx15, align 1, !dbg !7998
  %85 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !7999
  %longlba = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %85, i32 0, i32 5, !dbg !8000
  %bf.load16 = load i8, i8* %longlba, align 1, !dbg !8000
  %bf.clear17 = and i8 %bf.load16, 1, !dbg !8000
  %conv18 = zext i8 %bf.clear17 to i32, !dbg !7999
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !7999
  %86 = zext i1 %tobool19 to i64, !dbg !7999
  %cond20 = select i1 %tobool19, i32 1, i32 0, !dbg !7999
  %conv21 = trunc i32 %cond20 to i8, !dbg !7999
  %87 = load i8*, i8** %real_buffer, align 8, !dbg !8001
  %arrayidx22 = getelementptr i8, i8* %87, i64 4, !dbg !8001
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !8002
  %88 = load i8*, i8** %real_buffer, align 8, !dbg !8003
  %arrayidx23 = getelementptr i8, i8* %88, i64 5, !dbg !8003
  store i8 0, i8* %arrayidx23, align 1, !dbg !8004
  %89 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8005
  %block_descriptor_length = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %89, i32 0, i32 1, !dbg !8006
  %90 = load i16, i16* %block_descriptor_length, align 4, !dbg !8006
  %conv24 = zext i16 %90 to i32, !dbg !8005
  %shr = ashr i32 %conv24, 8, !dbg !8007
  %conv25 = trunc i32 %shr to i8, !dbg !8005
  %91 = load i8*, i8** %real_buffer, align 8, !dbg !8008
  %arrayidx26 = getelementptr i8, i8* %91, i64 6, !dbg !8008
  store i8 %conv25, i8* %arrayidx26, align 1, !dbg !8009
  %92 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8010
  %block_descriptor_length27 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %92, i32 0, i32 1, !dbg !8011
  %93 = load i16, i16* %block_descriptor_length27, align 4, !dbg !8011
  %conv28 = trunc i16 %93 to i8, !dbg !8010
  %94 = load i8*, i8** %real_buffer, align 8, !dbg !8012
  %arrayidx29 = getelementptr i8, i8* %94, i64 7, !dbg !8012
  store i8 %conv28, i8* %arrayidx29, align 1, !dbg !8013
  %arrayidx30 = getelementptr [10 x i8], [10 x i8]* %cmd, i64 0, i64 0, !dbg !8014
  store i8 85, i8* %arrayidx30, align 1, !dbg !8015
  %95 = load i32, i32* %len.addr, align 4, !dbg !8016
  %shr31 = ashr i32 %95, 8, !dbg !8017
  %conv32 = trunc i32 %shr31 to i8, !dbg !8016
  %arrayidx33 = getelementptr [10 x i8], [10 x i8]* %cmd, i64 0, i64 7, !dbg !8018
  store i8 %conv32, i8* %arrayidx33, align 1, !dbg !8019
  %96 = load i32, i32* %len.addr, align 4, !dbg !8020
  %conv34 = trunc i32 %96 to i8, !dbg !8020
  %arrayidx35 = getelementptr [10 x i8], [10 x i8]* %cmd, i64 0, i64 8, !dbg !8021
  store i8 %conv34, i8* %arrayidx35, align 1, !dbg !8022
  br label %if.end70, !dbg !8023

if.else:                                          ; preds = %entry
  %97 = load i32, i32* %len.addr, align 4, !dbg !8024
  %cmp36 = icmp sgt i32 %97, 255, !dbg !8026
  br i1 %cmp36, label %if.then48, label %lor.lhs.false, !dbg !8027

lor.lhs.false:                                    ; preds = %if.else
  %98 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8028
  %block_descriptor_length38 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %98, i32 0, i32 1, !dbg !8029
  %99 = load i16, i16* %block_descriptor_length38, align 4, !dbg !8029
  %conv39 = zext i16 %99 to i32, !dbg !8028
  %cmp40 = icmp sgt i32 %conv39, 255, !dbg !8030
  br i1 %cmp40, label %if.then48, label %lor.lhs.false42, !dbg !8031

lor.lhs.false42:                                  ; preds = %lor.lhs.false
  %100 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8032
  %longlba43 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %100, i32 0, i32 5, !dbg !8033
  %bf.load44 = load i8, i8* %longlba43, align 1, !dbg !8033
  %bf.clear45 = and i8 %bf.load44, 1, !dbg !8033
  %conv46 = zext i8 %bf.clear45 to i32, !dbg !8032
  %tobool47 = icmp ne i32 %conv46, 0, !dbg !8032
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !8034

if.then48:                                        ; preds = %lor.lhs.false42, %lor.lhs.false, %if.else
  store i32 -22, i32* %retval, align 4, !dbg !8035
  br label %return, !dbg !8035

if.end49:                                         ; preds = %lor.lhs.false42
  %101 = load i32, i32* %len.addr, align 4, !dbg !8036
  %add50 = add i32 4, %101, !dbg !8037
  %conv51 = sext i32 %add50 to i64, !dbg !8038
  store i64 %conv51, i64* %size.addr.i88, align 8
  store i32 3264, i32* %flags.addr.i89, align 4
  %102 = load i64, i64* %size.addr.i88, align 8, !dbg !8039
  %103 = call i1 @llvm.is.constant.i64(i64 %102) #7, !dbg !8040
  br i1 %103, label %if.then.i92, label %if.end9.i216, !dbg !8041

if.then.i92:                                      ; preds = %if.end49
  %104 = load i64, i64* %size.addr.i88, align 8, !dbg !8042
  %cmp.i91 = icmp ugt i64 %104, 8192, !dbg !8043
  br i1 %cmp.i91, label %if.then1.i98, label %if.end.i100, !dbg !8044

if.then1.i98:                                     ; preds = %if.then.i92
  %105 = load i64, i64* %size.addr.i88, align 8, !dbg !8045
  %106 = load i32, i32* %flags.addr.i89, align 4, !dbg !8046
  store i64 %105, i64* %size.addr.i.i84, align 8
  store i32 %106, i32* %flags.addr.i.i85, align 4
  %107 = load i64, i64* %size.addr.i.i84, align 8, !dbg !8047
  %call.i.i93 = call i32 @get_order(i64 %107) #12, !dbg !8048
  store i32 %call.i.i93, i32* %order.i.i86, align 4, !dbg !7692
  %108 = load i64, i64* %size.addr.i.i84, align 8, !dbg !8049
  %109 = load i32, i32* %flags.addr.i.i85, align 4, !dbg !8050
  %110 = load i32, i32* %order.i.i86, align 4, !dbg !8051
  store i64 %108, i64* %size.addr.i.i.i81, align 8
  store i32 %109, i32* %flags.addr.i.i.i82, align 4
  store i32 %110, i32* %order.addr.i.i.i83, align 4
  %111 = load i64, i64* %size.addr.i.i.i81, align 8, !dbg !8052
  %112 = load i32, i32* %flags.addr.i.i.i82, align 4, !dbg !8053
  %113 = load i32, i32* %order.addr.i.i.i83, align 4, !dbg !8054
  %call.i.i.i94 = call noalias i8* @kmalloc_order(i64 %111, i32 %112, i32 %113) #11, !dbg !8055
  %ptrint.i.i.i95 = ptrtoint i8* %call.i.i.i94 to i64, !dbg !8055
  %maskedptr.i.i.i96 = and i64 %ptrint.i.i.i95, 4095, !dbg !8055
  %maskcond.i.i.i97 = icmp eq i64 %maskedptr.i.i.i96, 0, !dbg !8055
  call void @llvm.assume(i1 %maskcond.i.i.i97) #7, !dbg !8055
  store i8* %call.i.i.i94, i8** %retval.i87, align 8, !dbg !8056
  br label %kmalloc.exit217, !dbg !8056

if.end.i100:                                      ; preds = %if.then.i92
  %114 = load i64, i64* %size.addr.i88, align 8, !dbg !8057
  store i64 %114, i64* %size.addr.i11.i80, align 8
  %115 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8058
  %tobool.i.i99 = icmp ne i64 %115, 0, !dbg !8058
  br i1 %tobool.i.i99, label %if.end.i.i103, label %if.then.i.i101, !dbg !8059

if.then.i.i101:                                   ; preds = %if.end.i100
  store i32 0, i32* %retval.i.i79, align 4, !dbg !8060
  br label %kmalloc_index.exit.i189, !dbg !8060

if.end.i.i103:                                    ; preds = %if.end.i100
  %116 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8061
  %cmp.i.i102 = icmp ule i64 %116, 8, !dbg !8062
  br i1 %cmp.i.i102, label %if.then1.i.i104, label %if.end2.i.i106, !dbg !8063

if.then1.i.i104:                                  ; preds = %if.end.i.i103
  store i32 3, i32* %retval.i.i79, align 4, !dbg !8064
  br label %kmalloc_index.exit.i189, !dbg !8064

if.end2.i.i106:                                   ; preds = %if.end.i.i103
  %117 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8065
  %cmp3.i.i105 = icmp ugt i64 %117, 64, !dbg !8066
  br i1 %cmp3.i.i105, label %land.lhs.true.i.i108, label %if.end6.i.i111, !dbg !8067

land.lhs.true.i.i108:                             ; preds = %if.end2.i.i106
  %118 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8068
  %cmp4.i.i107 = icmp ule i64 %118, 96, !dbg !8069
  br i1 %cmp4.i.i107, label %if.then5.i.i109, label %if.end6.i.i111, !dbg !8070

if.then5.i.i109:                                  ; preds = %land.lhs.true.i.i108
  store i32 1, i32* %retval.i.i79, align 4, !dbg !8071
  br label %kmalloc_index.exit.i189, !dbg !8071

if.end6.i.i111:                                   ; preds = %land.lhs.true.i.i108, %if.end2.i.i106
  %119 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8072
  %cmp7.i.i110 = icmp ugt i64 %119, 128, !dbg !8073
  br i1 %cmp7.i.i110, label %land.lhs.true8.i.i113, label %if.end11.i.i116, !dbg !8074

land.lhs.true8.i.i113:                            ; preds = %if.end6.i.i111
  %120 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8075
  %cmp9.i.i112 = icmp ule i64 %120, 192, !dbg !8076
  br i1 %cmp9.i.i112, label %if.then10.i.i114, label %if.end11.i.i116, !dbg !8077

if.then10.i.i114:                                 ; preds = %land.lhs.true8.i.i113
  store i32 2, i32* %retval.i.i79, align 4, !dbg !8078
  br label %kmalloc_index.exit.i189, !dbg !8078

if.end11.i.i116:                                  ; preds = %land.lhs.true8.i.i113, %if.end6.i.i111
  %121 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8079
  %cmp12.i.i115 = icmp ule i64 %121, 8, !dbg !8080
  br i1 %cmp12.i.i115, label %if.then13.i.i117, label %if.end14.i.i119, !dbg !8081

if.then13.i.i117:                                 ; preds = %if.end11.i.i116
  store i32 3, i32* %retval.i.i79, align 4, !dbg !8082
  br label %kmalloc_index.exit.i189, !dbg !8082

if.end14.i.i119:                                  ; preds = %if.end11.i.i116
  %122 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8083
  %cmp15.i.i118 = icmp ule i64 %122, 16, !dbg !8084
  br i1 %cmp15.i.i118, label %if.then16.i.i120, label %if.end17.i.i122, !dbg !8085

if.then16.i.i120:                                 ; preds = %if.end14.i.i119
  store i32 4, i32* %retval.i.i79, align 4, !dbg !8086
  br label %kmalloc_index.exit.i189, !dbg !8086

if.end17.i.i122:                                  ; preds = %if.end14.i.i119
  %123 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8087
  %cmp18.i.i121 = icmp ule i64 %123, 32, !dbg !8088
  br i1 %cmp18.i.i121, label %if.then19.i.i123, label %if.end20.i.i125, !dbg !8089

if.then19.i.i123:                                 ; preds = %if.end17.i.i122
  store i32 5, i32* %retval.i.i79, align 4, !dbg !8090
  br label %kmalloc_index.exit.i189, !dbg !8090

if.end20.i.i125:                                  ; preds = %if.end17.i.i122
  %124 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8091
  %cmp21.i.i124 = icmp ule i64 %124, 64, !dbg !8092
  br i1 %cmp21.i.i124, label %if.then22.i.i126, label %if.end23.i.i128, !dbg !8093

if.then22.i.i126:                                 ; preds = %if.end20.i.i125
  store i32 6, i32* %retval.i.i79, align 4, !dbg !8094
  br label %kmalloc_index.exit.i189, !dbg !8094

if.end23.i.i128:                                  ; preds = %if.end20.i.i125
  %125 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8095
  %cmp24.i.i127 = icmp ule i64 %125, 128, !dbg !8096
  br i1 %cmp24.i.i127, label %if.then25.i.i129, label %if.end26.i.i131, !dbg !8097

if.then25.i.i129:                                 ; preds = %if.end23.i.i128
  store i32 7, i32* %retval.i.i79, align 4, !dbg !8098
  br label %kmalloc_index.exit.i189, !dbg !8098

if.end26.i.i131:                                  ; preds = %if.end23.i.i128
  %126 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8099
  %cmp27.i.i130 = icmp ule i64 %126, 256, !dbg !8100
  br i1 %cmp27.i.i130, label %if.then28.i.i132, label %if.end29.i.i134, !dbg !8101

if.then28.i.i132:                                 ; preds = %if.end26.i.i131
  store i32 8, i32* %retval.i.i79, align 4, !dbg !8102
  br label %kmalloc_index.exit.i189, !dbg !8102

if.end29.i.i134:                                  ; preds = %if.end26.i.i131
  %127 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8103
  %cmp30.i.i133 = icmp ule i64 %127, 512, !dbg !8104
  br i1 %cmp30.i.i133, label %if.then31.i.i135, label %if.end32.i.i137, !dbg !8105

if.then31.i.i135:                                 ; preds = %if.end29.i.i134
  store i32 9, i32* %retval.i.i79, align 4, !dbg !8106
  br label %kmalloc_index.exit.i189, !dbg !8106

if.end32.i.i137:                                  ; preds = %if.end29.i.i134
  %128 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8107
  %cmp33.i.i136 = icmp ule i64 %128, 1024, !dbg !8108
  br i1 %cmp33.i.i136, label %if.then34.i.i138, label %if.end35.i.i140, !dbg !8109

if.then34.i.i138:                                 ; preds = %if.end32.i.i137
  store i32 10, i32* %retval.i.i79, align 4, !dbg !8110
  br label %kmalloc_index.exit.i189, !dbg !8110

if.end35.i.i140:                                  ; preds = %if.end32.i.i137
  %129 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8111
  %cmp36.i.i139 = icmp ule i64 %129, 2048, !dbg !8112
  br i1 %cmp36.i.i139, label %if.then37.i.i141, label %if.end38.i.i143, !dbg !8113

if.then37.i.i141:                                 ; preds = %if.end35.i.i140
  store i32 11, i32* %retval.i.i79, align 4, !dbg !8114
  br label %kmalloc_index.exit.i189, !dbg !8114

if.end38.i.i143:                                  ; preds = %if.end35.i.i140
  %130 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8115
  %cmp39.i.i142 = icmp ule i64 %130, 4096, !dbg !8116
  br i1 %cmp39.i.i142, label %if.then40.i.i144, label %if.end41.i.i146, !dbg !8117

if.then40.i.i144:                                 ; preds = %if.end38.i.i143
  store i32 12, i32* %retval.i.i79, align 4, !dbg !8118
  br label %kmalloc_index.exit.i189, !dbg !8118

if.end41.i.i146:                                  ; preds = %if.end38.i.i143
  %131 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8119
  %cmp42.i.i145 = icmp ule i64 %131, 8192, !dbg !8120
  br i1 %cmp42.i.i145, label %if.then43.i.i147, label %if.end44.i.i149, !dbg !8121

if.then43.i.i147:                                 ; preds = %if.end41.i.i146
  store i32 13, i32* %retval.i.i79, align 4, !dbg !8122
  br label %kmalloc_index.exit.i189, !dbg !8122

if.end44.i.i149:                                  ; preds = %if.end41.i.i146
  %132 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8123
  %cmp45.i.i148 = icmp ule i64 %132, 16384, !dbg !8124
  br i1 %cmp45.i.i148, label %if.then46.i.i150, label %if.end47.i.i152, !dbg !8125

if.then46.i.i150:                                 ; preds = %if.end44.i.i149
  store i32 14, i32* %retval.i.i79, align 4, !dbg !8126
  br label %kmalloc_index.exit.i189, !dbg !8126

if.end47.i.i152:                                  ; preds = %if.end44.i.i149
  %133 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8127
  %cmp48.i.i151 = icmp ule i64 %133, 32768, !dbg !8128
  br i1 %cmp48.i.i151, label %if.then49.i.i153, label %if.end50.i.i155, !dbg !8129

if.then49.i.i153:                                 ; preds = %if.end47.i.i152
  store i32 15, i32* %retval.i.i79, align 4, !dbg !8130
  br label %kmalloc_index.exit.i189, !dbg !8130

if.end50.i.i155:                                  ; preds = %if.end47.i.i152
  %134 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8131
  %cmp51.i.i154 = icmp ule i64 %134, 65536, !dbg !8132
  br i1 %cmp51.i.i154, label %if.then52.i.i156, label %if.end53.i.i158, !dbg !8133

if.then52.i.i156:                                 ; preds = %if.end50.i.i155
  store i32 16, i32* %retval.i.i79, align 4, !dbg !8134
  br label %kmalloc_index.exit.i189, !dbg !8134

if.end53.i.i158:                                  ; preds = %if.end50.i.i155
  %135 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8135
  %cmp54.i.i157 = icmp ule i64 %135, 131072, !dbg !8136
  br i1 %cmp54.i.i157, label %if.then55.i.i159, label %if.end56.i.i161, !dbg !8137

if.then55.i.i159:                                 ; preds = %if.end53.i.i158
  store i32 17, i32* %retval.i.i79, align 4, !dbg !8138
  br label %kmalloc_index.exit.i189, !dbg !8138

if.end56.i.i161:                                  ; preds = %if.end53.i.i158
  %136 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8139
  %cmp57.i.i160 = icmp ule i64 %136, 262144, !dbg !8140
  br i1 %cmp57.i.i160, label %if.then58.i.i162, label %if.end59.i.i164, !dbg !8141

if.then58.i.i162:                                 ; preds = %if.end56.i.i161
  store i32 18, i32* %retval.i.i79, align 4, !dbg !8142
  br label %kmalloc_index.exit.i189, !dbg !8142

if.end59.i.i164:                                  ; preds = %if.end56.i.i161
  %137 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8143
  %cmp60.i.i163 = icmp ule i64 %137, 524288, !dbg !8144
  br i1 %cmp60.i.i163, label %if.then61.i.i165, label %if.end62.i.i167, !dbg !8145

if.then61.i.i165:                                 ; preds = %if.end59.i.i164
  store i32 19, i32* %retval.i.i79, align 4, !dbg !8146
  br label %kmalloc_index.exit.i189, !dbg !8146

if.end62.i.i167:                                  ; preds = %if.end59.i.i164
  %138 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8147
  %cmp63.i.i166 = icmp ule i64 %138, 1048576, !dbg !8148
  br i1 %cmp63.i.i166, label %if.then64.i.i168, label %if.end65.i.i170, !dbg !8149

if.then64.i.i168:                                 ; preds = %if.end62.i.i167
  store i32 20, i32* %retval.i.i79, align 4, !dbg !8150
  br label %kmalloc_index.exit.i189, !dbg !8150

if.end65.i.i170:                                  ; preds = %if.end62.i.i167
  %139 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8151
  %cmp66.i.i169 = icmp ule i64 %139, 2097152, !dbg !8152
  br i1 %cmp66.i.i169, label %if.then67.i.i171, label %if.end68.i.i173, !dbg !8153

if.then67.i.i171:                                 ; preds = %if.end65.i.i170
  store i32 21, i32* %retval.i.i79, align 4, !dbg !8154
  br label %kmalloc_index.exit.i189, !dbg !8154

if.end68.i.i173:                                  ; preds = %if.end65.i.i170
  %140 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8155
  %cmp69.i.i172 = icmp ule i64 %140, 4194304, !dbg !8156
  br i1 %cmp69.i.i172, label %if.then70.i.i174, label %if.end71.i.i176, !dbg !8157

if.then70.i.i174:                                 ; preds = %if.end68.i.i173
  store i32 22, i32* %retval.i.i79, align 4, !dbg !8158
  br label %kmalloc_index.exit.i189, !dbg !8158

if.end71.i.i176:                                  ; preds = %if.end68.i.i173
  %141 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8159
  %cmp72.i.i175 = icmp ule i64 %141, 8388608, !dbg !8160
  br i1 %cmp72.i.i175, label %if.then73.i.i177, label %if.end74.i.i179, !dbg !8161

if.then73.i.i177:                                 ; preds = %if.end71.i.i176
  store i32 23, i32* %retval.i.i79, align 4, !dbg !8162
  br label %kmalloc_index.exit.i189, !dbg !8162

if.end74.i.i179:                                  ; preds = %if.end71.i.i176
  %142 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8163
  %cmp75.i.i178 = icmp ule i64 %142, 16777216, !dbg !8164
  br i1 %cmp75.i.i178, label %if.then76.i.i180, label %if.end77.i.i182, !dbg !8165

if.then76.i.i180:                                 ; preds = %if.end74.i.i179
  store i32 24, i32* %retval.i.i79, align 4, !dbg !8166
  br label %kmalloc_index.exit.i189, !dbg !8166

if.end77.i.i182:                                  ; preds = %if.end74.i.i179
  %143 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8167
  %cmp78.i.i181 = icmp ule i64 %143, 33554432, !dbg !8168
  br i1 %cmp78.i.i181, label %if.then79.i.i183, label %if.end80.i.i185, !dbg !8169

if.then79.i.i183:                                 ; preds = %if.end77.i.i182
  store i32 25, i32* %retval.i.i79, align 4, !dbg !8170
  br label %kmalloc_index.exit.i189, !dbg !8170

if.end80.i.i185:                                  ; preds = %if.end77.i.i182
  %144 = load i64, i64* %size.addr.i11.i80, align 8, !dbg !8171
  %cmp81.i.i184 = icmp ule i64 %144, 67108864, !dbg !8172
  br i1 %cmp81.i.i184, label %if.then82.i.i186, label %if.end83.i.i187, !dbg !8173

if.then82.i.i186:                                 ; preds = %if.end80.i.i185
  store i32 26, i32* %retval.i.i79, align 4, !dbg !8174
  br label %kmalloc_index.exit.i189, !dbg !8174

if.end83.i.i187:                                  ; preds = %if.end80.i.i185
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !8175, !srcloc !7935
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 247) #7, !dbg !8176, !srcloc !7939
  unreachable, !dbg !8177

kmalloc_index.exit.i189:                          ; preds = %if.then82.i.i186, %if.then79.i.i183, %if.then76.i.i180, %if.then73.i.i177, %if.then70.i.i174, %if.then67.i.i171, %if.then64.i.i168, %if.then61.i.i165, %if.then58.i.i162, %if.then55.i.i159, %if.then52.i.i156, %if.then49.i.i153, %if.then46.i.i150, %if.then43.i.i147, %if.then40.i.i144, %if.then37.i.i141, %if.then34.i.i138, %if.then31.i.i135, %if.then28.i.i132, %if.then25.i.i129, %if.then22.i.i126, %if.then19.i.i123, %if.then16.i.i120, %if.then13.i.i117, %if.then10.i.i114, %if.then5.i.i109, %if.then1.i.i104, %if.then.i.i101
  %145 = load i32, i32* %retval.i.i79, align 4, !dbg !8178
  store i32 %145, i32* %index.i90, align 4, !dbg !8179
  %146 = load i32, i32* %index.i90, align 4, !dbg !8180
  %tobool.i188 = icmp ne i32 %146, 0, !dbg !8180
  br i1 %tobool.i188, label %if.end4.i196, label %if.then3.i190, !dbg !8181

if.then3.i190:                                    ; preds = %kmalloc_index.exit.i189
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i87, align 8, !dbg !8182
  br label %kmalloc.exit217, !dbg !8182

if.end4.i196:                                     ; preds = %kmalloc_index.exit.i189
  %147 = load i32, i32* %flags.addr.i89, align 4, !dbg !8183
  store i32 %147, i32* %flags.addr.i13.i78, align 4
  %148 = load i32, i32* %flags.addr.i13.i78, align 4, !dbg !8184
  %and.i.i191 = and i32 %148, 17, !dbg !8184
  %cmp.i14.i192 = icmp eq i32 %and.i.i191, 0, !dbg !8184
  %lnot.i.i193 = xor i1 %cmp.i14.i192, true, !dbg !8184
  %lnot.ext.i.i194 = zext i1 %cmp.i14.i192 to i32, !dbg !8184
  %conv.i.i195 = sext i32 %lnot.ext.i.i194 to i64, !dbg !8184
  br i1 %cmp.i14.i192, label %if.then.i15.i197, label %if.end.i16.i201, !dbg !8185

if.then.i15.i197:                                 ; preds = %if.end4.i196
  store i32 0, i32* %retval.i12.i77, align 4, !dbg !8186
  br label %kmalloc_type.exit.i211, !dbg !8186

if.end.i16.i201:                                  ; preds = %if.end4.i196
  %149 = load i32, i32* %flags.addr.i13.i78, align 4, !dbg !8187
  %and2.i.i198 = and i32 %149, 1, !dbg !8188
  %tobool3.i.i199 = icmp ne i32 %and2.i.i198, 0, !dbg !8187
  %150 = zext i1 %tobool3.i.i199 to i64, !dbg !8187
  %cond.i.i200 = select i1 %tobool3.i.i199, i32 2, i32 1, !dbg !8187
  store i32 %cond.i.i200, i32* %retval.i12.i77, align 4, !dbg !8189
  br label %kmalloc_type.exit.i211, !dbg !8189

kmalloc_type.exit.i211:                           ; preds = %if.end.i16.i201, %if.then.i15.i197
  %151 = load i32, i32* %retval.i12.i77, align 4, !dbg !8190
  %idxprom.i202 = zext i32 %151 to i64, !dbg !8191
  %arrayidx.i203 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i202, !dbg !8191
  %152 = load i32, i32* %index.i90, align 4, !dbg !8192
  %idxprom6.i204 = zext i32 %152 to i64, !dbg !8191
  %arrayidx7.i205 = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i203, i64 0, i64 %idxprom6.i204, !dbg !8191
  %153 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i205, align 8, !dbg !8191
  %154 = load i32, i32* %flags.addr.i89, align 4, !dbg !8193
  %155 = load i64, i64* %size.addr.i88, align 8, !dbg !8194
  store %struct.kmem_cache* %153, %struct.kmem_cache** %s.addr.i.i73, align 8
  store i32 %154, i32* %flags.addr.i17.i74, align 4
  store i64 %155, i64* %size.addr.i18.i75, align 8
  %156 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i73, align 8, !dbg !8195
  %157 = load i32, i32* %flags.addr.i17.i74, align 4, !dbg !8196
  %call.i19.i206 = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %156, i32 %157) #11, !dbg !8197
  %ptrint.i.i207 = ptrtoint i8* %call.i19.i206 to i64, !dbg !8197
  %maskedptr.i.i208 = and i64 %ptrint.i.i207, 7, !dbg !8197
  %maskcond.i.i209 = icmp eq i64 %maskedptr.i.i208, 0, !dbg !8197
  call void @llvm.assume(i1 %maskcond.i.i209) #7, !dbg !8197
  store i8* %call.i19.i206, i8** %ret.i.i76, align 8, !dbg !7661
  %158 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i73, align 8, !dbg !8198
  %159 = load i8*, i8** %ret.i.i76, align 8, !dbg !8199
  %160 = load i64, i64* %size.addr.i18.i75, align 8, !dbg !8200
  %161 = load i32, i32* %flags.addr.i17.i74, align 4, !dbg !8201
  %call1.i.i210 = call i8* @kasan_kmalloc(%struct.kmem_cache* %158, i8* %159, i64 %160, i32 %161) #11, !dbg !8202
  store i8* %call1.i.i210, i8** %ret.i.i76, align 8, !dbg !8203
  %162 = load i8*, i8** %ret.i.i76, align 8, !dbg !8204
  store i8* %162, i8** %retval.i87, align 8, !dbg !8205
  br label %kmalloc.exit217, !dbg !8205

if.end9.i216:                                     ; preds = %if.end49
  %163 = load i64, i64* %size.addr.i88, align 8, !dbg !8206
  %164 = load i32, i32* %flags.addr.i89, align 4, !dbg !8207
  %call10.i212 = call noalias i8* @__kmalloc(i64 %163, i32 %164) #11, !dbg !8208
  %ptrint.i213 = ptrtoint i8* %call10.i212 to i64, !dbg !8208
  %maskedptr.i214 = and i64 %ptrint.i213, 7, !dbg !8208
  %maskcond.i215 = icmp eq i64 %maskedptr.i214, 0, !dbg !8208
  call void @llvm.assume(i1 %maskcond.i215) #7, !dbg !8208
  store i8* %call10.i212, i8** %retval.i87, align 8, !dbg !8209
  br label %kmalloc.exit217, !dbg !8209

kmalloc.exit217:                                  ; preds = %if.then1.i98, %if.then3.i190, %kmalloc_type.exit.i211, %if.end9.i216
  %165 = load i8*, i8** %retval.i87, align 8, !dbg !8210
  store i8* %165, i8** %real_buffer, align 8, !dbg !8211
  %166 = load i8*, i8** %real_buffer, align 8, !dbg !8212
  %tobool53 = icmp ne i8* %166, null, !dbg !8212
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !8214

if.then54:                                        ; preds = %kmalloc.exit217
  store i32 -12, i32* %retval, align 4, !dbg !8215
  br label %return, !dbg !8215

if.end55:                                         ; preds = %kmalloc.exit217
  %167 = load i8*, i8** %real_buffer, align 8, !dbg !8216
  %add.ptr56 = getelementptr i8, i8* %167, i64 4, !dbg !8217
  %168 = load i8*, i8** %buffer.addr, align 8, !dbg !8218
  %169 = load i32, i32* %len.addr, align 4, !dbg !8219
  %conv57 = sext i32 %169 to i64, !dbg !8219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr56, i8* align 1 %168, i64 %conv57, i1 false), !dbg !8220
  %170 = load i32, i32* %len.addr, align 4, !dbg !8221
  %add58 = add i32 %170, 4, !dbg !8221
  store i32 %add58, i32* %len.addr, align 4, !dbg !8221
  %171 = load i8*, i8** %real_buffer, align 8, !dbg !8222
  %arrayidx59 = getelementptr i8, i8* %171, i64 0, !dbg !8222
  store i8 0, i8* %arrayidx59, align 1, !dbg !8223
  %172 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8224
  %medium_type60 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %172, i32 0, i32 2, !dbg !8225
  %173 = load i8, i8* %medium_type60, align 2, !dbg !8225
  %174 = load i8*, i8** %real_buffer, align 8, !dbg !8226
  %arrayidx61 = getelementptr i8, i8* %174, i64 1, !dbg !8226
  store i8 %173, i8* %arrayidx61, align 1, !dbg !8227
  %175 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8228
  %device_specific62 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %175, i32 0, i32 3, !dbg !8229
  %176 = load i8, i8* %device_specific62, align 1, !dbg !8229
  %177 = load i8*, i8** %real_buffer, align 8, !dbg !8230
  %arrayidx63 = getelementptr i8, i8* %177, i64 2, !dbg !8230
  store i8 %176, i8* %arrayidx63, align 1, !dbg !8231
  %178 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8232
  %block_descriptor_length64 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %178, i32 0, i32 1, !dbg !8233
  %179 = load i16, i16* %block_descriptor_length64, align 4, !dbg !8233
  %conv65 = trunc i16 %179 to i8, !dbg !8232
  %180 = load i8*, i8** %real_buffer, align 8, !dbg !8234
  %arrayidx66 = getelementptr i8, i8* %180, i64 3, !dbg !8234
  store i8 %conv65, i8* %arrayidx66, align 1, !dbg !8235
  %arrayidx67 = getelementptr [10 x i8], [10 x i8]* %cmd, i64 0, i64 0, !dbg !8236
  store i8 21, i8* %arrayidx67, align 1, !dbg !8237
  %181 = load i32, i32* %len.addr, align 4, !dbg !8238
  %conv68 = trunc i32 %181 to i8, !dbg !8238
  %arrayidx69 = getelementptr [10 x i8], [10 x i8]* %cmd, i64 0, i64 4, !dbg !8239
  store i8 %conv68, i8* %arrayidx69, align 1, !dbg !8240
  br label %if.end70

if.end70:                                         ; preds = %if.end55, %if.end9
  %182 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8241
  %arraydecay71 = getelementptr inbounds [10 x i8], [10 x i8]* %cmd, i64 0, i64 0, !dbg !8242
  %183 = load i8*, i8** %real_buffer, align 8, !dbg !8243
  %184 = load i32, i32* %len.addr, align 4, !dbg !8244
  %185 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8245
  %186 = load i32, i32* %timeout.addr, align 4, !dbg !8246
  %187 = load i32, i32* %retries.addr, align 4, !dbg !8247
  %call72 = call i32 @scsi_execute_req(%struct.scsi_device* %182, i8* %arraydecay71, i32 1, i8* %183, i32 %184, %struct.scsi_sense_hdr* %185, i32 %186, i32 %187, i32* null) #10, !dbg !8248
  store i32 %call72, i32* %ret, align 4, !dbg !8249
  %188 = load i8*, i8** %real_buffer, align 8, !dbg !8250
  call void @kfree(i8* %188) #10, !dbg !8251
  %189 = load i32, i32* %ret, align 4, !dbg !8252
  store i32 %189, i32* %retval, align 4, !dbg !8253
  br label %return, !dbg !8253

return:                                           ; preds = %if.end70, %if.then54, %if.then48, %if.then8, %if.then5
  %190 = load i32, i32* %retval, align 4, !dbg !8254
  ret i32 %190, !dbg !8254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_execute_req(%struct.scsi_device* %sdev, i8* %cmd, i32 %data_direction, i8* %buffer, i32 %bufflen, %struct.scsi_sense_hdr* %sshdr, i32 %timeout, i32 %retries, i32* %resid) #0 !dbg !8255 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %cmd.addr = alloca i8*, align 8
  %data_direction.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %bufflen.addr = alloca i32, align 4
  %sshdr.addr = alloca %struct.scsi_sense_hdr*, align 8
  %timeout.addr = alloca i32, align 4
  %retries.addr = alloca i32, align 4
  %resid.addr = alloca i32*, align 8
  %tmp = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8258, metadata !DIExpression()), !dbg !8259
  store i8* %cmd, i8** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cmd.addr, metadata !8260, metadata !DIExpression()), !dbg !8261
  store i32 %data_direction, i32* %data_direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_direction.addr, metadata !8262, metadata !DIExpression()), !dbg !8263
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8264, metadata !DIExpression()), !dbg !8265
  store i32 %bufflen, i32* %bufflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bufflen.addr, metadata !8266, metadata !DIExpression()), !dbg !8267
  store %struct.scsi_sense_hdr* %sshdr, %struct.scsi_sense_hdr** %sshdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr** %sshdr.addr, metadata !8268, metadata !DIExpression()), !dbg !8269
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !8270, metadata !DIExpression()), !dbg !8271
  store i32 %retries, i32* %retries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retries.addr, metadata !8272, metadata !DIExpression()), !dbg !8273
  store i32* %resid, i32** %resid.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %resid.addr, metadata !8274, metadata !DIExpression()), !dbg !8275
  br label %do.body, !dbg !8276

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8278

do.end:                                           ; preds = %do.body
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8276
  %1 = load i8*, i8** %cmd.addr, align 8, !dbg !8276
  %2 = load i32, i32* %data_direction.addr, align 4, !dbg !8276
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !8276
  %4 = load i32, i32* %bufflen.addr, align 4, !dbg !8276
  %5 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8276
  %6 = load i32, i32* %timeout.addr, align 4, !dbg !8276
  %7 = load i32, i32* %retries.addr, align 4, !dbg !8276
  %8 = load i32*, i32** %resid.addr, align 8, !dbg !8276
  %call = call i32 @__scsi_execute(%struct.scsi_device* %0, i8* %1, i32 %2, i8* %3, i32 %4, i8* null, %struct.scsi_sense_hdr* %5, i32 %6, i32 %7, i64 0, i32 0, i32* %8) #10, !dbg !8276
  store i32 %call, i32* %tmp, align 4, !dbg !8278
  %9 = load i32, i32* %tmp, align 4, !dbg !8276
  ret i32 %9, !dbg !8280
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_mode_sense(%struct.scsi_device* %sdev, i32 %dbd, i32 %modepage, i8* %buffer, i32 %len, i32 %timeout, i32 %retries, %struct.scsi_mode_data* %data, %struct.scsi_sense_hdr* %sshdr) #0 !dbg !8281 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %dbd.addr = alloca i32, align 4
  %modepage.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %timeout.addr = alloca i32, align 4
  %retries.addr = alloca i32, align 4
  %data.addr = alloca %struct.scsi_mode_data*, align 8
  %sshdr.addr = alloca %struct.scsi_sense_hdr*, align 8
  %cmd = alloca [12 x i8], align 1
  %use_10_for_ms = alloca i32, align 4
  %header_length = alloca i32, align 4
  %result = alloca i32, align 4
  %retry_count = alloca i32, align 4
  %my_sshdr = alloca %struct.scsi_sense_hdr, align 1
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8284, metadata !DIExpression()), !dbg !8285
  store i32 %dbd, i32* %dbd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dbd.addr, metadata !8286, metadata !DIExpression()), !dbg !8287
  store i32 %modepage, i32* %modepage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modepage.addr, metadata !8288, metadata !DIExpression()), !dbg !8289
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8290, metadata !DIExpression()), !dbg !8291
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !8292, metadata !DIExpression()), !dbg !8293
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !8294, metadata !DIExpression()), !dbg !8295
  store i32 %retries, i32* %retries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retries.addr, metadata !8296, metadata !DIExpression()), !dbg !8297
  store %struct.scsi_mode_data* %data, %struct.scsi_mode_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_mode_data** %data.addr, metadata !8298, metadata !DIExpression()), !dbg !8299
  store %struct.scsi_sense_hdr* %sshdr, %struct.scsi_sense_hdr** %sshdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr** %sshdr.addr, metadata !8300, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.declare(metadata [12 x i8]* %cmd, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.declare(metadata i32* %use_10_for_ms, metadata !8305, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.declare(metadata i32* %header_length, metadata !8307, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8309, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata i32* %retry_count, metadata !8311, metadata !DIExpression()), !dbg !8312
  %0 = load i32, i32* %retries.addr, align 4, !dbg !8313
  store i32 %0, i32* %retry_count, align 4, !dbg !8312
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr* %my_sshdr, metadata !8314, metadata !DIExpression()), !dbg !8315
  %1 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8316
  %2 = bitcast %struct.scsi_mode_data* %1 to i8*, !dbg !8317
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false), !dbg !8317
  %arrayidx = getelementptr [12 x i8], [12 x i8]* %cmd, i64 0, i64 0, !dbg !8318
  call void @llvm.memset.p0i8.i64(i8* align 1 %arrayidx, i8 0, i64 12, i1 false), !dbg !8319
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8320
  %set_dbd_for_ms = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 39, !dbg !8321
  %4 = bitcast [6 x i8]* %set_dbd_for_ms to i48*, !dbg !8321
  %bf.load = load i48, i48* %4, align 4, !dbg !8321
  %bf.lshr = lshr i48 %bf.load, 17, !dbg !8321
  %bf.clear = and i48 %bf.lshr, 1, !dbg !8321
  %bf.cast = trunc i48 %bf.clear to i32, !dbg !8321
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8320
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8320

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8320

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %dbd.addr, align 4, !dbg !8322
  br label %cond.end, !dbg !8320

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %5, %cond.false ], !dbg !8320
  store i32 %cond, i32* %dbd.addr, align 4, !dbg !8323
  %6 = load i32, i32* %dbd.addr, align 4, !dbg !8324
  %and = and i32 %6, 24, !dbg !8325
  %conv = trunc i32 %and to i8, !dbg !8324
  %arrayidx1 = getelementptr [12 x i8], [12 x i8]* %cmd, i64 0, i64 1, !dbg !8326
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !8327
  %7 = load i32, i32* %modepage.addr, align 4, !dbg !8328
  %conv2 = trunc i32 %7 to i8, !dbg !8328
  %arrayidx3 = getelementptr [12 x i8], [12 x i8]* %cmd, i64 0, i64 2, !dbg !8329
  store i8 %conv2, i8* %arrayidx3, align 1, !dbg !8330
  %8 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8331
  %tobool4 = icmp ne %struct.scsi_sense_hdr* %8, null, !dbg !8331
  br i1 %tobool4, label %if.end, label %if.then, !dbg !8333

if.then:                                          ; preds = %cond.end
  store %struct.scsi_sense_hdr* %my_sshdr, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8334
  br label %if.end, !dbg !8335

if.end:                                           ; preds = %if.then, %cond.end
  br label %retry, !dbg !8331

retry:                                            ; preds = %if.then136, %if.then48, %if.end
  call void @llvm.dbg.label(metadata !8336), !dbg !8337
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8338
  %use_10_for_ms5 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 39, !dbg !8339
  %10 = bitcast [6 x i8]* %use_10_for_ms5 to i48*, !dbg !8339
  %bf.load6 = load i48, i48* %10, align 4, !dbg !8339
  %bf.lshr7 = lshr i48 %bf.load6, 16, !dbg !8339
  %bf.clear8 = and i48 %bf.lshr7, 1, !dbg !8339
  %bf.cast9 = trunc i48 %bf.clear8 to i32, !dbg !8339
  store i32 %bf.cast9, i32* %use_10_for_ms, align 4, !dbg !8340
  %11 = load i32, i32* %use_10_for_ms, align 4, !dbg !8341
  %tobool10 = icmp ne i32 %11, 0, !dbg !8341
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !8343

if.then11:                                        ; preds = %retry
  %12 = load i32, i32* %len.addr, align 4, !dbg !8344
  %cmp = icmp slt i32 %12, 8, !dbg !8347
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !8348

if.then13:                                        ; preds = %if.then11
  store i32 8, i32* %len.addr, align 4, !dbg !8349
  br label %if.end14, !dbg !8350

if.end14:                                         ; preds = %if.then13, %if.then11
  %arrayidx15 = getelementptr [12 x i8], [12 x i8]* %cmd, i64 0, i64 0, !dbg !8351
  store i8 90, i8* %arrayidx15, align 1, !dbg !8352
  %13 = load i32, i32* %len.addr, align 4, !dbg !8353
  %conv16 = trunc i32 %13 to i8, !dbg !8353
  %arrayidx17 = getelementptr [12 x i8], [12 x i8]* %cmd, i64 0, i64 8, !dbg !8354
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !8355
  store i32 8, i32* %header_length, align 4, !dbg !8356
  br label %if.end25, !dbg !8357

if.else:                                          ; preds = %retry
  %14 = load i32, i32* %len.addr, align 4, !dbg !8358
  %cmp18 = icmp slt i32 %14, 4, !dbg !8361
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !8362

if.then20:                                        ; preds = %if.else
  store i32 4, i32* %len.addr, align 4, !dbg !8363
  br label %if.end21, !dbg !8364

if.end21:                                         ; preds = %if.then20, %if.else
  %arrayidx22 = getelementptr [12 x i8], [12 x i8]* %cmd, i64 0, i64 0, !dbg !8365
  store i8 26, i8* %arrayidx22, align 1, !dbg !8366
  %15 = load i32, i32* %len.addr, align 4, !dbg !8367
  %conv23 = trunc i32 %15 to i8, !dbg !8367
  %arrayidx24 = getelementptr [12 x i8], [12 x i8]* %cmd, i64 0, i64 4, !dbg !8368
  store i8 %conv23, i8* %arrayidx24, align 1, !dbg !8369
  store i32 4, i32* %header_length, align 4, !dbg !8370
  br label %if.end25

if.end25:                                         ; preds = %if.end21, %if.end14
  %16 = load i8*, i8** %buffer.addr, align 8, !dbg !8371
  %17 = load i32, i32* %len.addr, align 4, !dbg !8372
  %conv26 = sext i32 %17 to i64, !dbg !8372
  call void @llvm.memset.p0i8.i64(i8* align 1 %16, i8 0, i64 %conv26, i1 false), !dbg !8373
  %18 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8374
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %cmd, i64 0, i64 0, !dbg !8375
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !8376
  %20 = load i32, i32* %len.addr, align 4, !dbg !8377
  %21 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8378
  %22 = load i32, i32* %timeout.addr, align 4, !dbg !8379
  %23 = load i32, i32* %retries.addr, align 4, !dbg !8380
  %call = call i32 @scsi_execute_req(%struct.scsi_device* %18, i8* %arraydecay, i32 2, i8* %19, i32 %20, %struct.scsi_sense_hdr* %21, i32 %22, i32 %23, i32* null) #10, !dbg !8381
  store i32 %call, i32* %result, align 4, !dbg !8382
  %24 = load i32, i32* %use_10_for_ms, align 4, !dbg !8383
  %tobool27 = icmp ne i32 %24, 0, !dbg !8383
  br i1 %tobool27, label %land.lhs.true, label %if.end54, !dbg !8385

land.lhs.true:                                    ; preds = %if.end25
  %25 = load i32, i32* %result, align 4, !dbg !8386
  %call28 = call i32 @scsi_status_is_good(i32 %25) #10, !dbg !8387
  %tobool29 = icmp ne i32 %call28, 0, !dbg !8387
  br i1 %tobool29, label %if.end54, label %land.lhs.true30, !dbg !8388

land.lhs.true30:                                  ; preds = %land.lhs.true
  %26 = load i32, i32* %result, align 4, !dbg !8389
  %shr = ashr i32 %26, 24, !dbg !8389
  %and31 = and i32 %shr, 255, !dbg !8389
  %cmp32 = icmp eq i32 %and31, 8, !dbg !8390
  br i1 %cmp32, label %if.then34, label %if.end54, !dbg !8391

if.then34:                                        ; preds = %land.lhs.true30
  %27 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8392
  %call35 = call zeroext i1 @scsi_sense_valid(%struct.scsi_sense_hdr* %27) #10, !dbg !8395
  br i1 %call35, label %if.then36, label %if.end53, !dbg !8396

if.then36:                                        ; preds = %if.then34
  %28 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8397
  %sense_key = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %28, i32 0, i32 1, !dbg !8400
  %29 = load i8, i8* %sense_key, align 1, !dbg !8400
  %conv37 = zext i8 %29 to i32, !dbg !8397
  %cmp38 = icmp eq i32 %conv37, 5, !dbg !8401
  br i1 %cmp38, label %land.lhs.true40, label %if.end52, !dbg !8402

land.lhs.true40:                                  ; preds = %if.then36
  %30 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8403
  %asc = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %30, i32 0, i32 2, !dbg !8404
  %31 = load i8, i8* %asc, align 1, !dbg !8404
  %conv41 = zext i8 %31 to i32, !dbg !8403
  %cmp42 = icmp eq i32 %conv41, 32, !dbg !8405
  br i1 %cmp42, label %land.lhs.true44, label %if.end52, !dbg !8406

land.lhs.true44:                                  ; preds = %land.lhs.true40
  %32 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8407
  %ascq = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %32, i32 0, i32 3, !dbg !8408
  %33 = load i8, i8* %ascq, align 1, !dbg !8408
  %conv45 = zext i8 %33 to i32, !dbg !8407
  %cmp46 = icmp eq i32 %conv45, 0, !dbg !8409
  br i1 %cmp46, label %if.then48, label %if.end52, !dbg !8410

if.then48:                                        ; preds = %land.lhs.true44
  %34 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8411
  %use_10_for_ms49 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %34, i32 0, i32 39, !dbg !8413
  %35 = bitcast [6 x i8]* %use_10_for_ms49 to i48*, !dbg !8413
  %bf.load50 = load i48, i48* %35, align 4, !dbg !8414
  %bf.clear51 = and i48 %bf.load50, -65537, !dbg !8414
  store i48 %bf.clear51, i48* %35, align 4, !dbg !8414
  br label %retry, !dbg !8415

if.end52:                                         ; preds = %land.lhs.true44, %land.lhs.true40, %if.then36
  br label %if.end53, !dbg !8416

if.end53:                                         ; preds = %if.end52, %if.then34
  br label %if.end54, !dbg !8417

if.end54:                                         ; preds = %if.end53, %land.lhs.true30, %land.lhs.true, %if.end25
  %36 = load i32, i32* %result, align 4, !dbg !8418
  %call55 = call i32 @scsi_status_is_good(i32 %36) #10, !dbg !8420
  %tobool56 = icmp ne i32 %call55, 0, !dbg !8420
  br i1 %tobool56, label %if.then57, label %if.else121, !dbg !8421

if.then57:                                        ; preds = %if.end54
  %37 = load i8*, i8** %buffer.addr, align 8, !dbg !8422
  %arrayidx58 = getelementptr i8, i8* %37, i64 0, !dbg !8422
  %38 = load i8, i8* %arrayidx58, align 1, !dbg !8422
  %conv59 = zext i8 %38 to i32, !dbg !8422
  %cmp60 = icmp eq i32 %conv59, 134, !dbg !8422
  br i1 %cmp60, label %land.lhs.true62, label %land.end, !dbg !8422

land.lhs.true62:                                  ; preds = %if.then57
  %39 = load i8*, i8** %buffer.addr, align 8, !dbg !8422
  %arrayidx63 = getelementptr i8, i8* %39, i64 1, !dbg !8422
  %40 = load i8, i8* %arrayidx63, align 1, !dbg !8422
  %conv64 = zext i8 %40 to i32, !dbg !8422
  %cmp65 = icmp eq i32 %conv64, 11, !dbg !8422
  br i1 %cmp65, label %land.rhs, label %land.end, !dbg !8422

land.rhs:                                         ; preds = %land.lhs.true62
  %41 = load i32, i32* %modepage.addr, align 4, !dbg !8422
  %cmp67 = icmp eq i32 %41, 6, !dbg !8422
  br i1 %cmp67, label %lor.end, label %lor.rhs, !dbg !8422

lor.rhs:                                          ; preds = %land.rhs
  %42 = load i32, i32* %modepage.addr, align 4, !dbg !8422
  %cmp69 = icmp eq i32 %42, 8, !dbg !8422
  br label %lor.end, !dbg !8422

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %43 = phi i1 [ true, %land.rhs ], [ %cmp69, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true62, %if.then57
  %44 = phi i1 [ false, %land.lhs.true62 ], [ false, %if.then57 ], [ %43, %lor.end ], !dbg !8425
  %lnot = xor i1 %44, true, !dbg !8422
  %lnot71 = xor i1 %lnot, true, !dbg !8422
  %lnot.ext = zext i1 %lnot71 to i32, !dbg !8422
  %conv72 = sext i32 %lnot.ext to i64, !dbg !8422
  %tobool73 = icmp ne i64 %conv72, 0, !dbg !8422
  br i1 %tobool73, label %if.then74, label %if.else77, !dbg !8426

if.then74:                                        ; preds = %land.end
  store i32 0, i32* %header_length, align 4, !dbg !8427
  %45 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8429
  %length = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %45, i32 0, i32 0, !dbg !8430
  store i32 13, i32* %length, align 4, !dbg !8431
  %46 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8432
  %medium_type = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %46, i32 0, i32 2, !dbg !8433
  store i8 0, i8* %medium_type, align 2, !dbg !8434
  %47 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8435
  %device_specific = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %47, i32 0, i32 3, !dbg !8436
  store i8 0, i8* %device_specific, align 1, !dbg !8437
  %48 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8438
  %longlba = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %48, i32 0, i32 5, !dbg !8439
  %bf.load75 = load i8, i8* %longlba, align 1, !dbg !8440
  %bf.clear76 = and i8 %bf.load75, -2, !dbg !8440
  store i8 %bf.clear76, i8* %longlba, align 1, !dbg !8440
  %49 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8441
  %block_descriptor_length = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %49, i32 0, i32 1, !dbg !8442
  store i16 0, i16* %block_descriptor_length, align 4, !dbg !8443
  br label %if.end118, !dbg !8444

if.else77:                                        ; preds = %land.end
  %50 = load i32, i32* %use_10_for_ms, align 4, !dbg !8445
  %tobool78 = icmp ne i32 %50, 0, !dbg !8445
  br i1 %tobool78, label %if.then79, label %if.else105, !dbg !8447

if.then79:                                        ; preds = %if.else77
  %51 = load i8*, i8** %buffer.addr, align 8, !dbg !8448
  %arrayidx80 = getelementptr i8, i8* %51, i64 0, !dbg !8448
  %52 = load i8, i8* %arrayidx80, align 1, !dbg !8448
  %conv81 = zext i8 %52 to i32, !dbg !8448
  %mul = mul i32 %conv81, 256, !dbg !8450
  %53 = load i8*, i8** %buffer.addr, align 8, !dbg !8451
  %arrayidx82 = getelementptr i8, i8* %53, i64 1, !dbg !8451
  %54 = load i8, i8* %arrayidx82, align 1, !dbg !8451
  %conv83 = zext i8 %54 to i32, !dbg !8451
  %add = add i32 %mul, %conv83, !dbg !8452
  %add84 = add i32 %add, 2, !dbg !8453
  %55 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8454
  %length85 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %55, i32 0, i32 0, !dbg !8455
  store i32 %add84, i32* %length85, align 4, !dbg !8456
  %56 = load i8*, i8** %buffer.addr, align 8, !dbg !8457
  %arrayidx86 = getelementptr i8, i8* %56, i64 2, !dbg !8457
  %57 = load i8, i8* %arrayidx86, align 1, !dbg !8457
  %58 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8458
  %medium_type87 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %58, i32 0, i32 2, !dbg !8459
  store i8 %57, i8* %medium_type87, align 2, !dbg !8460
  %59 = load i8*, i8** %buffer.addr, align 8, !dbg !8461
  %arrayidx88 = getelementptr i8, i8* %59, i64 3, !dbg !8461
  %60 = load i8, i8* %arrayidx88, align 1, !dbg !8461
  %61 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8462
  %device_specific89 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %61, i32 0, i32 3, !dbg !8463
  store i8 %60, i8* %device_specific89, align 1, !dbg !8464
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !8465
  %arrayidx90 = getelementptr i8, i8* %62, i64 4, !dbg !8465
  %63 = load i8, i8* %arrayidx90, align 1, !dbg !8465
  %conv91 = zext i8 %63 to i32, !dbg !8465
  %and92 = and i32 %conv91, 1, !dbg !8466
  %conv93 = trunc i32 %and92 to i8, !dbg !8465
  %64 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8467
  %longlba94 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %64, i32 0, i32 5, !dbg !8468
  %bf.load95 = load i8, i8* %longlba94, align 1, !dbg !8469
  %bf.value = and i8 %conv93, 1, !dbg !8469
  %bf.clear96 = and i8 %bf.load95, -2, !dbg !8469
  %bf.set = or i8 %bf.clear96, %bf.value, !dbg !8469
  store i8 %bf.set, i8* %longlba94, align 1, !dbg !8469
  %65 = load i8*, i8** %buffer.addr, align 8, !dbg !8470
  %arrayidx97 = getelementptr i8, i8* %65, i64 6, !dbg !8470
  %66 = load i8, i8* %arrayidx97, align 1, !dbg !8470
  %conv98 = zext i8 %66 to i32, !dbg !8470
  %mul99 = mul i32 %conv98, 256, !dbg !8471
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !8472
  %arrayidx100 = getelementptr i8, i8* %67, i64 7, !dbg !8472
  %68 = load i8, i8* %arrayidx100, align 1, !dbg !8472
  %conv101 = zext i8 %68 to i32, !dbg !8472
  %add102 = add i32 %mul99, %conv101, !dbg !8473
  %conv103 = trunc i32 %add102 to i16, !dbg !8470
  %69 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8474
  %block_descriptor_length104 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %69, i32 0, i32 1, !dbg !8475
  store i16 %conv103, i16* %block_descriptor_length104, align 4, !dbg !8476
  br label %if.end117, !dbg !8477

if.else105:                                       ; preds = %if.else77
  %70 = load i8*, i8** %buffer.addr, align 8, !dbg !8478
  %arrayidx106 = getelementptr i8, i8* %70, i64 0, !dbg !8478
  %71 = load i8, i8* %arrayidx106, align 1, !dbg !8478
  %conv107 = zext i8 %71 to i32, !dbg !8478
  %add108 = add i32 %conv107, 1, !dbg !8480
  %72 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8481
  %length109 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %72, i32 0, i32 0, !dbg !8482
  store i32 %add108, i32* %length109, align 4, !dbg !8483
  %73 = load i8*, i8** %buffer.addr, align 8, !dbg !8484
  %arrayidx110 = getelementptr i8, i8* %73, i64 1, !dbg !8484
  %74 = load i8, i8* %arrayidx110, align 1, !dbg !8484
  %75 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8485
  %medium_type111 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %75, i32 0, i32 2, !dbg !8486
  store i8 %74, i8* %medium_type111, align 2, !dbg !8487
  %76 = load i8*, i8** %buffer.addr, align 8, !dbg !8488
  %arrayidx112 = getelementptr i8, i8* %76, i64 2, !dbg !8488
  %77 = load i8, i8* %arrayidx112, align 1, !dbg !8488
  %78 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8489
  %device_specific113 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %78, i32 0, i32 3, !dbg !8490
  store i8 %77, i8* %device_specific113, align 1, !dbg !8491
  %79 = load i8*, i8** %buffer.addr, align 8, !dbg !8492
  %arrayidx114 = getelementptr i8, i8* %79, i64 3, !dbg !8492
  %80 = load i8, i8* %arrayidx114, align 1, !dbg !8492
  %conv115 = zext i8 %80 to i16, !dbg !8492
  %81 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8493
  %block_descriptor_length116 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %81, i32 0, i32 1, !dbg !8494
  store i16 %conv115, i16* %block_descriptor_length116, align 4, !dbg !8495
  br label %if.end117

if.end117:                                        ; preds = %if.else105, %if.then79
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then74
  %82 = load i32, i32* %header_length, align 4, !dbg !8496
  %conv119 = trunc i32 %82 to i8, !dbg !8496
  %83 = load %struct.scsi_mode_data*, %struct.scsi_mode_data** %data.addr, align 8, !dbg !8497
  %header_length120 = getelementptr inbounds %struct.scsi_mode_data, %struct.scsi_mode_data* %83, i32 0, i32 4, !dbg !8498
  store i8 %conv119, i8* %header_length120, align 4, !dbg !8499
  br label %if.end138, !dbg !8500

if.else121:                                       ; preds = %if.end54
  %84 = load i32, i32* %result, align 4, !dbg !8501
  %shr122 = ashr i32 %84, 1, !dbg !8501
  %and123 = and i32 %shr122, 127, !dbg !8501
  %cmp124 = icmp eq i32 %and123, 1, !dbg !8503
  br i1 %cmp124, label %land.lhs.true126, label %if.end137, !dbg !8504

land.lhs.true126:                                 ; preds = %if.else121
  %85 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8505
  %call127 = call zeroext i1 @scsi_sense_valid(%struct.scsi_sense_hdr* %85) #10, !dbg !8506
  br i1 %call127, label %land.lhs.true129, label %if.end137, !dbg !8507

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %86 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8508
  %sense_key130 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %86, i32 0, i32 1, !dbg !8509
  %87 = load i8, i8* %sense_key130, align 1, !dbg !8509
  %conv131 = zext i8 %87 to i32, !dbg !8508
  %cmp132 = icmp eq i32 %conv131, 6, !dbg !8510
  br i1 %cmp132, label %land.lhs.true134, label %if.end137, !dbg !8511

land.lhs.true134:                                 ; preds = %land.lhs.true129
  %88 = load i32, i32* %retry_count, align 4, !dbg !8512
  %tobool135 = icmp ne i32 %88, 0, !dbg !8512
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !8513

if.then136:                                       ; preds = %land.lhs.true134
  %89 = load i32, i32* %retry_count, align 4, !dbg !8514
  %dec = add i32 %89, -1, !dbg !8514
  store i32 %dec, i32* %retry_count, align 4, !dbg !8514
  br label %retry, !dbg !8516

if.end137:                                        ; preds = %land.lhs.true134, %land.lhs.true129, %land.lhs.true126, %if.else121
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end118
  %90 = load i32, i32* %result, align 4, !dbg !8517
  ret i32 %90, !dbg !8518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_status_is_good(i32 %status) #0 !dbg !8519 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !8521, metadata !DIExpression()), !dbg !8522
  %0 = load i32, i32* %status.addr, align 4, !dbg !8523
  %and = and i32 %0, 254, !dbg !8523
  store i32 %and, i32* %status.addr, align 4, !dbg !8523
  %1 = load i32, i32* %status.addr, align 4, !dbg !8524
  %cmp = icmp eq i32 %1, 0, !dbg !8525
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8526

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %status.addr, align 4, !dbg !8527
  %cmp1 = icmp eq i32 %2, 4, !dbg !8528
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2, !dbg !8529

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* %status.addr, align 4, !dbg !8530
  %cmp3 = icmp eq i32 %3, 16, !dbg !8531
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !8532

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %4 = load i32, i32* %status.addr, align 4, !dbg !8533
  %cmp5 = icmp eq i32 %4, 20, !dbg !8534
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !8535

lor.rhs:                                          ; preds = %lor.lhs.false4
  %5 = load i32, i32* %status.addr, align 4, !dbg !8536
  %cmp6 = icmp eq i32 %5, 34, !dbg !8537
  br label %lor.end, !dbg !8535

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !8535
  ret i32 %lor.ext, !dbg !8538
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @scsi_sense_valid(%struct.scsi_sense_hdr* %sshdr) #0 !dbg !8539 {
entry:
  %retval = alloca i1, align 1
  %sshdr.addr = alloca %struct.scsi_sense_hdr*, align 8
  store %struct.scsi_sense_hdr* %sshdr, %struct.scsi_sense_hdr** %sshdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr** %sshdr.addr, metadata !8544, metadata !DIExpression()), !dbg !8545
  %0 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8546
  %tobool = icmp ne %struct.scsi_sense_hdr* %0, null, !dbg !8546
  br i1 %tobool, label %if.end, label %if.then, !dbg !8548

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8549
  br label %return, !dbg !8549

if.end:                                           ; preds = %entry
  %1 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8550
  %response_code = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %1, i32 0, i32 0, !dbg !8551
  %2 = load i8, i8* %response_code, align 1, !dbg !8551
  %conv = zext i8 %2 to i32, !dbg !8550
  %and = and i32 %conv, 112, !dbg !8552
  %cmp = icmp eq i32 %and, 112, !dbg !8553
  store i1 %cmp, i1* %retval, align 1, !dbg !8554
  br label %return, !dbg !8554

return:                                           ; preds = %if.end, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !8555
  ret i1 %3, !dbg !8555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_test_unit_ready(%struct.scsi_device* %sdev, i32 %timeout, i32 %retries, %struct.scsi_sense_hdr* %sshdr) #0 !dbg !8556 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %timeout.addr = alloca i32, align 4
  %retries.addr = alloca i32, align 4
  %sshdr.addr = alloca %struct.scsi_sense_hdr*, align 8
  %cmd = alloca [6 x i8], align 1
  %result = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8559, metadata !DIExpression()), !dbg !8560
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !8561, metadata !DIExpression()), !dbg !8562
  store i32 %retries, i32* %retries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retries.addr, metadata !8563, metadata !DIExpression()), !dbg !8564
  store %struct.scsi_sense_hdr* %sshdr, %struct.scsi_sense_hdr** %sshdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr** %sshdr.addr, metadata !8565, metadata !DIExpression()), !dbg !8566
  call void @llvm.dbg.declare(metadata [6 x i8]* %cmd, metadata !8567, metadata !DIExpression()), !dbg !8568
  %0 = bitcast [6 x i8]* %cmd to i8*, !dbg !8568
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 6, i1 false), !dbg !8568
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8569, metadata !DIExpression()), !dbg !8570
  br label %do.body, !dbg !8571

do.body:                                          ; preds = %land.end, %entry
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8572
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %cmd, i64 0, i64 0, !dbg !8574
  %2 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8575
  %3 = load i32, i32* %timeout.addr, align 4, !dbg !8576
  %call = call i32 @scsi_execute_req(%struct.scsi_device* %1, i8* %arraydecay, i32 3, i8* null, i32 0, %struct.scsi_sense_hdr* %2, i32 %3, i32 1, i32* null) #10, !dbg !8577
  store i32 %call, i32* %result, align 4, !dbg !8578
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8579
  %removable = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 39, !dbg !8581
  %5 = bitcast [6 x i8]* %removable to i48*, !dbg !8581
  %bf.load = load i48, i48* %5, align 4, !dbg !8581
  %bf.clear = and i48 %bf.load, 1, !dbg !8581
  %bf.cast = trunc i48 %bf.clear to i32, !dbg !8581
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8579
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8582

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8583
  %call1 = call zeroext i1 @scsi_sense_valid(%struct.scsi_sense_hdr* %6) #10, !dbg !8584
  br i1 %call1, label %land.lhs.true2, label %if.end, !dbg !8585

land.lhs.true2:                                   ; preds = %land.lhs.true
  %7 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8586
  %sense_key = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %7, i32 0, i32 1, !dbg !8587
  %8 = load i8, i8* %sense_key, align 1, !dbg !8587
  %conv = zext i8 %8 to i32, !dbg !8586
  %cmp = icmp eq i32 %conv, 6, !dbg !8588
  br i1 %cmp, label %if.then, label %if.end, !dbg !8589

if.then:                                          ; preds = %land.lhs.true2
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8590
  %changed = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 39, !dbg !8591
  %10 = bitcast [6 x i8]* %changed to i48*, !dbg !8591
  %bf.load4 = load i48, i48* %10, align 4, !dbg !8592
  %bf.clear5 = and i48 %bf.load4, -3, !dbg !8592
  %bf.set = or i48 %bf.clear5, 2, !dbg !8592
  store i48 %bf.set, i48* %10, align 4, !dbg !8592
  br label %if.end, !dbg !8590

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %do.body
  br label %do.cond, !dbg !8593

do.cond:                                          ; preds = %if.end
  %11 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8594
  %call6 = call zeroext i1 @scsi_sense_valid(%struct.scsi_sense_hdr* %11) #10, !dbg !8595
  br i1 %call6, label %land.lhs.true8, label %land.end, !dbg !8596

land.lhs.true8:                                   ; preds = %do.cond
  %12 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !8597
  %sense_key9 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %12, i32 0, i32 1, !dbg !8598
  %13 = load i8, i8* %sense_key9, align 1, !dbg !8598
  %conv10 = zext i8 %13 to i32, !dbg !8597
  %cmp11 = icmp eq i32 %conv10, 6, !dbg !8599
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !8600

land.rhs:                                         ; preds = %land.lhs.true8
  %14 = load i32, i32* %retries.addr, align 4, !dbg !8601
  %dec = add i32 %14, -1, !dbg !8601
  store i32 %dec, i32* %retries.addr, align 4, !dbg !8601
  %tobool13 = icmp ne i32 %dec, 0, !dbg !8600
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true8, %do.cond
  %15 = phi i1 [ false, %land.lhs.true8 ], [ false, %do.cond ], [ %tobool13, %land.rhs ], !dbg !8602
  br i1 %15, label %do.body, label %do.end, !dbg !8593, !llvm.loop !8603

do.end:                                           ; preds = %land.end
  %16 = load i32, i32* %result, align 4, !dbg !8605
  ret i32 %16, !dbg !8606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_device_set_state(%struct.scsi_device* %sdev, i32 %state) #0 !dbg !8607 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %state.addr = alloca i32, align 4
  %oldstate = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8610, metadata !DIExpression()), !dbg !8611
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !8612, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.declare(metadata i32* %oldstate, metadata !8614, metadata !DIExpression()), !dbg !8615
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8616
  %sdev_state = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 60, !dbg !8617
  %1 = load i32, i32* %sdev_state, align 8, !dbg !8617
  store i32 %1, i32* %oldstate, align 4, !dbg !8615
  %2 = load i32, i32* %state.addr, align 4, !dbg !8618
  %3 = load i32, i32* %oldstate, align 4, !dbg !8620
  %cmp = icmp eq i32 %2, %3, !dbg !8621
  br i1 %cmp, label %if.then, label %if.end, !dbg !8622

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8623
  br label %return, !dbg !8623

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %state.addr, align 4, !dbg !8624
  switch i32 %4, label %sw.epilog30 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 5, label %sw.bb6
    i32 6, label %sw.bb10
    i32 7, label %sw.bb10
    i32 8, label %sw.bb14
    i32 9, label %sw.bb18
    i32 3, label %sw.bb22
    i32 4, label %sw.bb26
  ], !dbg !8625

sw.bb:                                            ; preds = %if.end
  %5 = load i32, i32* %oldstate, align 4, !dbg !8626
  switch i32 %5, label %sw.default [
    i32 9, label %sw.bb1
  ], !dbg !8628

sw.bb1:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !8629

sw.default:                                       ; preds = %sw.bb
  br label %illegal, !dbg !8631

sw.epilog:                                        ; preds = %sw.bb1
  br label %sw.epilog30, !dbg !8632

sw.bb2:                                           ; preds = %if.end
  %6 = load i32, i32* %oldstate, align 4, !dbg !8633
  switch i32 %6, label %sw.default4 [
    i32 1, label %sw.bb3
    i32 6, label %sw.bb3
    i32 7, label %sw.bb3
    i32 5, label %sw.bb3
    i32 8, label %sw.bb3
  ], !dbg !8634

sw.bb3:                                           ; preds = %sw.bb2, %sw.bb2, %sw.bb2, %sw.bb2, %sw.bb2
  br label %sw.epilog5, !dbg !8635

sw.default4:                                      ; preds = %sw.bb2
  br label %illegal, !dbg !8637

sw.epilog5:                                       ; preds = %sw.bb3
  br label %sw.epilog30, !dbg !8638

sw.bb6:                                           ; preds = %if.end
  %7 = load i32, i32* %oldstate, align 4, !dbg !8639
  switch i32 %7, label %sw.default8 [
    i32 2, label %sw.bb7
    i32 6, label %sw.bb7
    i32 7, label %sw.bb7
  ], !dbg !8640

sw.bb7:                                           ; preds = %sw.bb6, %sw.bb6, %sw.bb6
  br label %sw.epilog9, !dbg !8641

sw.default8:                                      ; preds = %sw.bb6
  br label %illegal, !dbg !8643

sw.epilog9:                                       ; preds = %sw.bb7
  br label %sw.epilog30, !dbg !8644

sw.bb10:                                          ; preds = %if.end, %if.end
  %8 = load i32, i32* %oldstate, align 4, !dbg !8645
  switch i32 %8, label %sw.default12 [
    i32 1, label %sw.bb11
    i32 2, label %sw.bb11
    i32 5, label %sw.bb11
    i32 8, label %sw.bb11
  ], !dbg !8646

sw.bb11:                                          ; preds = %sw.bb10, %sw.bb10, %sw.bb10, %sw.bb10
  br label %sw.epilog13, !dbg !8647

sw.default12:                                     ; preds = %sw.bb10
  br label %illegal, !dbg !8649

sw.epilog13:                                      ; preds = %sw.bb11
  br label %sw.epilog30, !dbg !8650

sw.bb14:                                          ; preds = %if.end
  %9 = load i32, i32* %oldstate, align 4, !dbg !8651
  switch i32 %9, label %sw.default16 [
    i32 2, label %sw.bb15
    i32 9, label %sw.bb15
    i32 5, label %sw.bb15
    i32 6, label %sw.bb15
  ], !dbg !8652

sw.bb15:                                          ; preds = %sw.bb14, %sw.bb14, %sw.bb14, %sw.bb14
  br label %sw.epilog17, !dbg !8653

sw.default16:                                     ; preds = %sw.bb14
  br label %illegal, !dbg !8655

sw.epilog17:                                      ; preds = %sw.bb15
  br label %sw.epilog30, !dbg !8656

sw.bb18:                                          ; preds = %if.end
  %10 = load i32, i32* %oldstate, align 4, !dbg !8657
  switch i32 %10, label %sw.default20 [
    i32 1, label %sw.bb19
  ], !dbg !8658

sw.bb19:                                          ; preds = %sw.bb18
  br label %sw.epilog21, !dbg !8659

sw.default20:                                     ; preds = %sw.bb18
  br label %illegal, !dbg !8661

sw.epilog21:                                      ; preds = %sw.bb19
  br label %sw.epilog30, !dbg !8662

sw.bb22:                                          ; preds = %if.end
  %11 = load i32, i32* %oldstate, align 4, !dbg !8663
  switch i32 %11, label %sw.default24 [
    i32 1, label %sw.bb23
    i32 2, label %sw.bb23
    i32 5, label %sw.bb23
    i32 6, label %sw.bb23
    i32 7, label %sw.bb23
  ], !dbg !8664

sw.bb23:                                          ; preds = %sw.bb22, %sw.bb22, %sw.bb22, %sw.bb22, %sw.bb22
  br label %sw.epilog25, !dbg !8665

sw.default24:                                     ; preds = %sw.bb22
  br label %illegal, !dbg !8667

sw.epilog25:                                      ; preds = %sw.bb23
  br label %sw.epilog30, !dbg !8668

sw.bb26:                                          ; preds = %if.end
  %12 = load i32, i32* %oldstate, align 4, !dbg !8669
  switch i32 %12, label %sw.default28 [
    i32 1, label %sw.bb27
    i32 2, label %sw.bb27
    i32 6, label %sw.bb27
    i32 7, label %sw.bb27
    i32 3, label %sw.bb27
    i32 8, label %sw.bb27
    i32 9, label %sw.bb27
  ], !dbg !8670

sw.bb27:                                          ; preds = %sw.bb26, %sw.bb26, %sw.bb26, %sw.bb26, %sw.bb26, %sw.bb26, %sw.bb26
  br label %sw.epilog29, !dbg !8671

sw.default28:                                     ; preds = %sw.bb26
  br label %illegal, !dbg !8673

sw.epilog29:                                      ; preds = %sw.bb27
  br label %sw.epilog30, !dbg !8674

sw.epilog30:                                      ; preds = %if.end, %sw.epilog29, %sw.epilog25, %sw.epilog21, %sw.epilog17, %sw.epilog13, %sw.epilog9, %sw.epilog5, %sw.epilog
  %13 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8675
  %offline_already = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %13, i32 0, i32 40, !dbg !8676
  store i8 0, i8* %offline_already, align 2, !dbg !8677
  %14 = load i32, i32* %state.addr, align 4, !dbg !8678
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8679
  %sdev_state31 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %15, i32 0, i32 60, !dbg !8680
  store i32 %14, i32* %sdev_state31, align 8, !dbg !8681
  store i32 0, i32* %retval, align 4, !dbg !8682
  br label %return, !dbg !8682

illegal:                                          ; preds = %sw.default28, %sw.default24, %sw.default20, %sw.default16, %sw.default12, %sw.default8, %sw.default4, %sw.default
  call void @llvm.dbg.label(metadata !8683), !dbg !8684
  br label %do.body, !dbg !8685

do.body:                                          ; preds = %illegal
  br label %do.end, !dbg !8686

do.end:                                           ; preds = %do.body
  store i32 -22, i32* %retval, align 4, !dbg !8688
  br label %return, !dbg !8688

return:                                           ; preds = %do.end, %sw.epilog30, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !8689
  ret i32 %16, !dbg !8689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_evt_thread(%struct.work_struct* %work) #0 !dbg !8690 {
entry:
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !5872, metadata !DIExpression()), !dbg !8691
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !8694
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5883, metadata !DIExpression()), !dbg !8695
  %work.addr = alloca %struct.work_struct*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %evt_type = alloca i32, align 4
  %event_list = alloca %struct.list_head, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %evt = alloca %struct.scsi_event*, align 8
  %this = alloca %struct.list_head*, align 8
  %tmp1 = alloca %struct.list_head*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp6 = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  %__mptr37 = alloca i8*, align 8
  %tmp40 = alloca %struct.scsi_event*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !8702, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !8704, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.declare(metadata i32* %evt_type, metadata !8706, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.declare(metadata %struct.list_head* %event_list, metadata !8708, metadata !DIExpression()), !dbg !8709
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %event_list, i32 0, i32 0, !dbg !8709
  store %struct.list_head* %event_list, %struct.list_head** %next, align 8, !dbg !8709
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %event_list, i32 0, i32 1, !dbg !8709
  store %struct.list_head* %event_list, %struct.list_head** %prev, align 8, !dbg !8709
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8710, metadata !DIExpression()), !dbg !8712
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !8712
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !8712
  store i8* %1, i8** %__mptr, align 8, !dbg !8712
  br label %do.body, !dbg !8712

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8713

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8712
  %add.ptr = getelementptr i8, i8* %2, i64 -320, !dbg !8712
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !8712
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !8713
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !8712
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !8715
  store i32 1, i32* %evt_type, align 4, !dbg !8716
  br label %for.cond, !dbg !8718

for.cond:                                         ; preds = %for.inc, %do.end
  %5 = load i32, i32* %evt_type, align 4, !dbg !8719
  %cmp = icmp ule i32 %5, 8, !dbg !8721
  br i1 %cmp, label %for.body, label %for.end, !dbg !8722

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %evt_type, align 4, !dbg !8723
  %conv = zext i32 %6 to i64, !dbg !8723
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !8725
  %pending_events = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %7, i32 0, i32 43, !dbg !8726
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %pending_events, i64 0, i64 0, !dbg !8725
  %call = call zeroext i1 @test_and_clear_bit(i64 %conv, i64* %arraydecay) #10, !dbg !8727
  br i1 %call, label %if.then, label %if.end, !dbg !8728

if.then:                                          ; preds = %for.body
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !8729
  %9 = load i32, i32* %evt_type, align 4, !dbg !8730
  call void @sdev_evt_send_simple(%struct.scsi_device* %8, i32 %9, i32 3264) #10, !dbg !8731
  br label %if.end, !dbg !8731

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8732

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %evt_type, align 4, !dbg !8733
  %inc = add i32 %10, 1, !dbg !8733
  store i32 %inc, i32* %evt_type, align 4, !dbg !8733
  br label %for.cond, !dbg !8734, !llvm.loop !8735

for.end:                                          ; preds = %for.cond
  br label %while.body, !dbg !8737

while.body:                                       ; preds = %for.end, %for.end44
  call void @llvm.dbg.declare(metadata %struct.scsi_event** %evt, metadata !8738, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.declare(metadata %struct.list_head** %this, metadata !8740, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.declare(metadata %struct.list_head** %tmp1, metadata !8742, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8744, metadata !DIExpression()), !dbg !8745
  br label %do.body2, !dbg !8746

do.body2:                                         ; preds = %while.body
  br label %do.body3, !dbg !8747

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8748, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8751, metadata !DIExpression()), !dbg !8750
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !8750
  %conv5 = zext i1 %cmp4 to i32, !dbg !8750
  store i32 1, i32* %tmp6, align 4, !dbg !8750
  %11 = load i32, i32* %tmp6, align 4, !dbg !8750
  br label %do.body7, !dbg !8752

do.body7:                                         ; preds = %do.body3
  br label %do.body8, !dbg !8753

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !8754

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !8756, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !8760, metadata !DIExpression()), !dbg !8759
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !8759
  %conv13 = zext i1 %cmp12 to i32, !dbg !8759
  store i32 1, i32* %tmp14, align 4, !dbg !8759
  %12 = load i32, i32* %tmp14, align 4, !dbg !8759
  %call15 = call i64 @arch_local_irq_save() #10, !dbg !8761
  store i64 %call15, i64* %flags, align 8, !dbg !8761
  br label %do.end16, !dbg !8761

do.end16:                                         ; preds = %do.body9
  br label %do.end17, !dbg !8754

do.end17:                                         ; preds = %do.end16
  br label %do.body18, !dbg !8753

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8762, !srcloc !8763
  br label %do.body19, !dbg !8762

do.body19:                                        ; preds = %do.body18
  %13 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !8764
  %list_lock = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %13, i32 0, i32 7, !dbg !8764
  store %struct.spinlock* %list_lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8765
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !8766
  %rlock.i = bitcast %union.anon* %15 to %struct.raw_spinlock*, !dbg !8766
  br label %do.end21, !dbg !8764

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !8762

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !8753

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !8752

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !8747

do.end25:                                         ; preds = %do.end24
  %16 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !8767
  %event_list26 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %16, i32 0, i32 44, !dbg !8768
  call void @list_splice_init(%struct.list_head* %event_list26, %struct.list_head* %event_list) #10, !dbg !8769
  %17 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !8770
  %list_lock27 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %17, i32 0, i32 7, !dbg !8771
  %18 = load i64, i64* %flags, align 8, !dbg !8772
  store %struct.spinlock* %list_lock27, %struct.spinlock** %lock.addr.i45, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !324, metadata !5943, metadata !DIExpression()) #7, !dbg !8773
  call void @llvm.dbg.declare(metadata !324, metadata !5947, metadata !DIExpression()) #7, !dbg !8773
  store i32 1, i32* %tmp.i, align 4, !dbg !8773
  %19 = load i32, i32* %tmp.i, align 4, !dbg !8773
  call void @llvm.dbg.declare(metadata !324, metadata !5948, metadata !DIExpression()) #7, !dbg !8774
  call void @llvm.dbg.declare(metadata !324, metadata !5954, metadata !DIExpression()) #7, !dbg !8774
  store i32 1, i32* %tmp8.i, align 4, !dbg !8774
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !8774
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !8775
  call void @arch_local_irq_restore(i64 %21) #11, !dbg !8775
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8776, !srcloc !5958
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !8777
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !8777
  %rlock.i46 = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !8777
  %call28 = call i32 @list_empty(%struct.list_head* %event_list) #10, !dbg !8778
  %tobool = icmp ne i32 %call28, 0, !dbg !8778
  br i1 %tobool, label %if.then29, label %if.end30, !dbg !8780

if.then29:                                        ; preds = %do.end25
  br label %while.end, !dbg !8781

if.end30:                                         ; preds = %do.end25
  %next31 = getelementptr inbounds %struct.list_head, %struct.list_head* %event_list, i32 0, i32 0, !dbg !8782
  %24 = load %struct.list_head*, %struct.list_head** %next31, align 8, !dbg !8782
  store %struct.list_head* %24, %struct.list_head** %this, align 8, !dbg !8782
  %25 = load %struct.list_head*, %struct.list_head** %this, align 8, !dbg !8782
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %25, i32 0, i32 0, !dbg !8782
  %26 = load %struct.list_head*, %struct.list_head** %next32, align 8, !dbg !8782
  store %struct.list_head* %26, %struct.list_head** %tmp1, align 8, !dbg !8782
  br label %for.cond33, !dbg !8782

for.cond33:                                       ; preds = %for.inc42, %if.end30
  %27 = load %struct.list_head*, %struct.list_head** %this, align 8, !dbg !8784
  %cmp34 = icmp ne %struct.list_head* %27, %event_list, !dbg !8784
  br i1 %cmp34, label %for.body36, label %for.end44, !dbg !8782

for.body36:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata i8** %__mptr37, metadata !8786, metadata !DIExpression()), !dbg !8789
  %28 = load %struct.list_head*, %struct.list_head** %this, align 8, !dbg !8789
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !8789
  store i8* %29, i8** %__mptr37, align 8, !dbg !8789
  br label %do.body38, !dbg !8789

do.body38:                                        ; preds = %for.body36
  br label %do.end39, !dbg !8790

do.end39:                                         ; preds = %do.body38
  %30 = load i8*, i8** %__mptr37, align 8, !dbg !8789
  %add.ptr41 = getelementptr i8, i8* %30, i64 -8, !dbg !8789
  %31 = bitcast i8* %add.ptr41 to %struct.scsi_event*, !dbg !8789
  store %struct.scsi_event* %31, %struct.scsi_event** %tmp40, align 8, !dbg !8790
  %32 = load %struct.scsi_event*, %struct.scsi_event** %tmp40, align 8, !dbg !8789
  store %struct.scsi_event* %32, %struct.scsi_event** %evt, align 8, !dbg !8792
  %33 = load %struct.scsi_event*, %struct.scsi_event** %evt, align 8, !dbg !8793
  %node = getelementptr inbounds %struct.scsi_event, %struct.scsi_event* %33, i32 0, i32 1, !dbg !8794
  call void @list_del(%struct.list_head* %node) #10, !dbg !8795
  %34 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !8796
  %35 = load %struct.scsi_event*, %struct.scsi_event** %evt, align 8, !dbg !8797
  call void @scsi_evt_emit(%struct.scsi_device* %34, %struct.scsi_event* %35) #10, !dbg !8798
  %36 = load %struct.scsi_event*, %struct.scsi_event** %evt, align 8, !dbg !8799
  %37 = bitcast %struct.scsi_event* %36 to i8*, !dbg !8799
  call void @kfree(i8* %37) #10, !dbg !8800
  br label %for.inc42, !dbg !8801

for.inc42:                                        ; preds = %do.end39
  %38 = load %struct.list_head*, %struct.list_head** %tmp1, align 8, !dbg !8784
  store %struct.list_head* %38, %struct.list_head** %this, align 8, !dbg !8784
  %39 = load %struct.list_head*, %struct.list_head** %this, align 8, !dbg !8784
  %next43 = getelementptr inbounds %struct.list_head, %struct.list_head* %39, i32 0, i32 0, !dbg !8784
  %40 = load %struct.list_head*, %struct.list_head** %next43, align 8, !dbg !8784
  store %struct.list_head* %40, %struct.list_head** %tmp1, align 8, !dbg !8784
  br label %for.cond33, !dbg !8784, !llvm.loop !8802

for.end44:                                        ; preds = %for.cond33
  br label %while.body, !dbg !8737, !llvm.loop !8804

while.end:                                        ; preds = %if.then29
  ret void, !dbg !8806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #0 !dbg !8807 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8811, metadata !DIExpression()), !dbg !8813
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8815, metadata !DIExpression()), !dbg !8816
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !8817, metadata !DIExpression()), !dbg !8819
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5792, metadata !DIExpression()), !dbg !8820
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5802, metadata !DIExpression()), !dbg !8822
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8823, metadata !DIExpression()), !dbg !8824
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8825, metadata !DIExpression()), !dbg !8826
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8827
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8828
  %div = sdiv i64 %1, 64, !dbg !8828
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8829
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8827
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8830
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8831
  %conv.i = trunc i64 %4 to i32, !dbg !8831
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !8832
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8833
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8833
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !8833
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8834
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8835
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !8819
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !8819
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #7, !dbg !8819, !srcloc !8836
  store i8 %11, i8* %c.i, align 1, !dbg !8819
  %12 = load i8, i8* %c.i, align 1, !dbg !8819
  %tobool.i = trunc i8 %12 to i1, !dbg !8819
  %frombool.i = zext i1 %tobool.i to i8, !dbg !8819
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !8819
  %13 = load i8, i8* %tmp.i, align 1, !dbg !8819
  %tobool1.i = trunc i8 %13 to i1, !dbg !8819
  ret i1 %tobool1.i, !dbg !8837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @sdev_evt_send_simple(%struct.scsi_device* %sdev, i32 %evt_type, i32 %gfpflags) #0 !dbg !8838 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %evt_type.addr = alloca i32, align 4
  %gfpflags.addr = alloca i32, align 4
  %evt = alloca %struct.scsi_event*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8841, metadata !DIExpression()), !dbg !8842
  store i32 %evt_type, i32* %evt_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evt_type.addr, metadata !8843, metadata !DIExpression()), !dbg !8844
  store i32 %gfpflags, i32* %gfpflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfpflags.addr, metadata !8845, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.declare(metadata %struct.scsi_event** %evt, metadata !8847, metadata !DIExpression()), !dbg !8848
  %0 = load i32, i32* %evt_type.addr, align 4, !dbg !8849
  %1 = load i32, i32* %gfpflags.addr, align 4, !dbg !8850
  %call = call %struct.scsi_event* @sdev_evt_alloc(i32 %0, i32 %1) #10, !dbg !8851
  store %struct.scsi_event* %call, %struct.scsi_event** %evt, align 8, !dbg !8848
  %2 = load %struct.scsi_event*, %struct.scsi_event** %evt, align 8, !dbg !8852
  %tobool = icmp ne %struct.scsi_event* %2, null, !dbg !8852
  br i1 %tobool, label %if.end, label %if.then, !dbg !8854

if.then:                                          ; preds = %entry
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8855
  %4 = load i32, i32* %evt_type.addr, align 4, !dbg !8855
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), %struct.scsi_device* %3, i8* null, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i32 %4) #10, !dbg !8855
  br label %return, !dbg !8857

if.end:                                           ; preds = %entry
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8858
  %6 = load %struct.scsi_event*, %struct.scsi_event** %evt, align 8, !dbg !8859
  call void @sdev_evt_send(%struct.scsi_device* %5, %struct.scsi_event* %6) #10, !dbg !8860
  br label %return, !dbg !8861

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !8862 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !8866, metadata !DIExpression()), !dbg !8867
  %call = call i64 @arch_local_save_flags() #10, !dbg !8868
  store i64 %call, i64* %f, align 8, !dbg !8869
  call void @arch_local_irq_disable() #10, !dbg !8870
  %0 = load i64, i64* %f, align 8, !dbg !8871
  ret i64 %0, !dbg !8872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_init(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !8873 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8876, metadata !DIExpression()), !dbg !8877
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8880
  %call = call i32 @list_empty(%struct.list_head* %0) #10, !dbg !8882
  %tobool = icmp ne i32 %call, 0, !dbg !8882
  br i1 %tobool, label %if.end, label %if.then, !dbg !8883

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8884
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8886
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8887
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8888
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8888
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %2, %struct.list_head* %4) #10, !dbg !8889
  %5 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8890
  call void @INIT_LIST_HEAD(%struct.list_head* %5) #10, !dbg !8891
  br label %if.end, !dbg !8892

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !8894 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8899, metadata !DIExpression()), !dbg !8900
  br label %do.body, !dbg !8901

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8903

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8901
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8901
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8901
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !8903
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !8901
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8905
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !8906
  %conv = zext i1 %cmp to i32, !dbg !8906
  ret i32 %conv, !dbg !8907
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !8908 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8909, metadata !DIExpression()), !dbg !8910
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8911
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !8912
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8913
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8914
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !8915
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8916
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8917
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !8918
  ret void, !dbg !8919
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_evt_emit(%struct.scsi_device* %sdev, %struct.scsi_event* %evt) #0 !dbg !8920 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %evt.addr = alloca %struct.scsi_event*, align 8
  %idx = alloca i32, align 4
  %envp = alloca [3 x i8*], align 16
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8923, metadata !DIExpression()), !dbg !8924
  store %struct.scsi_event* %evt, %struct.scsi_event** %evt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_event** %evt.addr, metadata !8925, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8927, metadata !DIExpression()), !dbg !8928
  store i32 0, i32* %idx, align 4, !dbg !8928
  call void @llvm.dbg.declare(metadata [3 x i8*]* %envp, metadata !8929, metadata !DIExpression()), !dbg !8930
  %0 = load %struct.scsi_event*, %struct.scsi_event** %evt.addr, align 8, !dbg !8931
  %evt_type = getelementptr inbounds %struct.scsi_event, %struct.scsi_event* %0, i32 0, i32 0, !dbg !8932
  %1 = load i32, i32* %evt_type, align 8, !dbg !8932
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb5
    i32 4, label %sw.bb9
    i32 5, label %sw.bb13
    i32 6, label %sw.bb17
    i32 7, label %sw.bb21
    i32 8, label %sw.bb25
  ], !dbg !8933

sw.bb:                                            ; preds = %entry
  %2 = load i32, i32* %idx, align 4, !dbg !8934
  %inc = add i32 %2, 1, !dbg !8934
  store i32 %inc, i32* %idx, align 4, !dbg !8934
  %idxprom = sext i32 %2 to i64, !dbg !8936
  %arrayidx = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom, !dbg !8936
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0), i8** %arrayidx, align 8, !dbg !8937
  br label %sw.epilog, !dbg !8938

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8939
  %sdev_gendev = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 50, !dbg !8940
  call void @scsi_rescan_device(%struct.device* %sdev_gendev) #10, !dbg !8941
  %4 = load i32, i32* %idx, align 4, !dbg !8942
  %inc2 = add i32 %4, 1, !dbg !8942
  store i32 %inc2, i32* %idx, align 4, !dbg !8942
  %idxprom3 = sext i32 %4 to i64, !dbg !8943
  %arrayidx4 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom3, !dbg !8943
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8** %arrayidx4, align 8, !dbg !8944
  br label %sw.epilog, !dbg !8945

sw.bb5:                                           ; preds = %entry
  %5 = load i32, i32* %idx, align 4, !dbg !8946
  %inc6 = add i32 %5, 1, !dbg !8946
  store i32 %inc6, i32* %idx, align 4, !dbg !8946
  %idxprom7 = sext i32 %5 to i64, !dbg !8947
  %arrayidx8 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom7, !dbg !8947
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0), i8** %arrayidx8, align 8, !dbg !8948
  br label %sw.epilog, !dbg !8949

sw.bb9:                                           ; preds = %entry
  %6 = load i32, i32* %idx, align 4, !dbg !8950
  %inc10 = add i32 %6, 1, !dbg !8950
  store i32 %inc10, i32* %idx, align 4, !dbg !8950
  %idxprom11 = sext i32 %6 to i64, !dbg !8951
  %arrayidx12 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom11, !dbg !8951
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.21, i64 0, i64 0), i8** %arrayidx12, align 8, !dbg !8952
  br label %sw.epilog, !dbg !8953

sw.bb13:                                          ; preds = %entry
  %7 = load i32, i32* %idx, align 4, !dbg !8954
  %inc14 = add i32 %7, 1, !dbg !8954
  store i32 %inc14, i32* %idx, align 4, !dbg !8954
  %idxprom15 = sext i32 %7 to i64, !dbg !8955
  %arrayidx16 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom15, !dbg !8955
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.22, i64 0, i64 0), i8** %arrayidx16, align 8, !dbg !8956
  br label %sw.epilog, !dbg !8957

sw.bb17:                                          ; preds = %entry
  %8 = load i32, i32* %idx, align 4, !dbg !8958
  %inc18 = add i32 %8, 1, !dbg !8958
  store i32 %inc18, i32* %idx, align 4, !dbg !8958
  %idxprom19 = sext i32 %8 to i64, !dbg !8959
  %arrayidx20 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom19, !dbg !8959
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0), i8** %arrayidx20, align 8, !dbg !8960
  br label %sw.epilog, !dbg !8961

sw.bb21:                                          ; preds = %entry
  %9 = load i32, i32* %idx, align 4, !dbg !8962
  %inc22 = add i32 %9, 1, !dbg !8962
  store i32 %inc22, i32* %idx, align 4, !dbg !8962
  %idxprom23 = sext i32 %9 to i64, !dbg !8963
  %arrayidx24 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom23, !dbg !8963
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i64 0, i64 0), i8** %arrayidx24, align 8, !dbg !8964
  br label %sw.epilog, !dbg !8965

sw.bb25:                                          ; preds = %entry
  %10 = load i32, i32* %idx, align 4, !dbg !8966
  %inc26 = add i32 %10, 1, !dbg !8966
  store i32 %inc26, i32* %idx, align 4, !dbg !8966
  %idxprom27 = sext i32 %10 to i64, !dbg !8967
  %arrayidx28 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom27, !dbg !8967
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0), i8** %arrayidx28, align 8, !dbg !8968
  br label %sw.epilog, !dbg !8969

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !8970

sw.epilog:                                        ; preds = %sw.default, %sw.bb25, %sw.bb21, %sw.bb17, %sw.bb13, %sw.bb9, %sw.bb5, %sw.bb1, %sw.bb
  %11 = load i32, i32* %idx, align 4, !dbg !8971
  %inc29 = add i32 %11, 1, !dbg !8971
  store i32 %inc29, i32* %idx, align 4, !dbg !8971
  %idxprom30 = sext i32 %11 to i64, !dbg !8972
  %arrayidx31 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom30, !dbg !8972
  store i8* null, i8** %arrayidx31, align 8, !dbg !8973
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8974
  %sdev_gendev32 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %12, i32 0, i32 50, !dbg !8975
  %kobj = getelementptr inbounds %struct.device, %struct.device* %sdev_gendev32, i32 0, i32 0, !dbg !8976
  %arraydecay = getelementptr inbounds [3 x i8*], [3 x i8*]* %envp, i64 0, i64 0, !dbg !8977
  %call = call i32 @kobject_uevent_env(%struct.kobject* %kobj, i32 2, i8** %arraydecay) #10, !dbg !8978
  ret void, !dbg !8979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @sdev_evt_send(%struct.scsi_device* %sdev, %struct.scsi_event* %evt) #0 !dbg !8980 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5872, metadata !DIExpression()), !dbg !8981
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !8983
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5883, metadata !DIExpression()), !dbg !8984
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %evt.addr = alloca %struct.scsi_event*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8991, metadata !DIExpression()), !dbg !8992
  store %struct.scsi_event* %evt, %struct.scsi_event** %evt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_event** %evt.addr, metadata !8993, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8995, metadata !DIExpression()), !dbg !8996
  br label %do.body, !dbg !8997

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8998

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8999, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9002, metadata !DIExpression()), !dbg !9001
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9001
  %conv = zext i1 %cmp to i32, !dbg !9001
  store i32 1, i32* %tmp, align 4, !dbg !9001
  %0 = load i32, i32* %tmp, align 4, !dbg !9001
  br label %do.body2, !dbg !9003

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9004

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9005

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9007, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9011, metadata !DIExpression()), !dbg !9010
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9010
  %conv8 = zext i1 %cmp7 to i32, !dbg !9010
  store i32 1, i32* %tmp9, align 4, !dbg !9010
  %1 = load i32, i32* %tmp9, align 4, !dbg !9010
  %call = call i64 @arch_local_irq_save() #10, !dbg !9012
  store i64 %call, i64* %flags, align 8, !dbg !9012
  br label %do.end, !dbg !9012

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9005

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9004

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9013, !srcloc !9014
  br label %do.body12, !dbg !9013

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9015
  %list_lock = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 7, !dbg !9015
  store %struct.spinlock* %list_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9016
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !9017
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !9017
  br label %do.end14, !dbg !9015

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9013

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9004

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9003

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8998

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.scsi_event*, %struct.scsi_event** %evt.addr, align 8, !dbg !9018
  %node = getelementptr inbounds %struct.scsi_event, %struct.scsi_event* %5, i32 0, i32 1, !dbg !9019
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9020
  %event_list = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 44, !dbg !9021
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %event_list) #10, !dbg !9022
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9023
  %event_work = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %7, i32 0, i32 45, !dbg !9024
  %call19 = call zeroext i1 @schedule_work(%struct.work_struct* %event_work) #10, !dbg !9025
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9026
  %list_lock20 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 7, !dbg !9027
  %9 = load i64, i64* %flags, align 8, !dbg !9028
  store %struct.spinlock* %list_lock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !324, metadata !5943, metadata !DIExpression()) #7, !dbg !9029
  call void @llvm.dbg.declare(metadata !324, metadata !5947, metadata !DIExpression()) #7, !dbg !9029
  store i32 1, i32* %tmp.i, align 4, !dbg !9029
  %10 = load i32, i32* %tmp.i, align 4, !dbg !9029
  call void @llvm.dbg.declare(metadata !324, metadata !5948, metadata !DIExpression()) #7, !dbg !9030
  call void @llvm.dbg.declare(metadata !324, metadata !5954, metadata !DIExpression()) #7, !dbg !9030
  store i32 1, i32* %tmp8.i, align 4, !dbg !9030
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !9030
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !9031
  call void @arch_local_irq_restore(i64 %12) #11, !dbg !9031
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9032, !srcloc !5958
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !9033
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !9033
  %rlock.i22 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !9033
  ret void, !dbg !9034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !9035 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9036, metadata !DIExpression()), !dbg !9037
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9038, metadata !DIExpression()), !dbg !9039
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9040
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9041
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9042
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9042
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9043
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #10, !dbg !9044
  ret void, !dbg !9045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #0 !dbg !9046 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !9051
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !9052
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #10, !dbg !9053
  ret i1 %call, !dbg !9054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.scsi_event* @sdev_evt_alloc(i32 %evt_type, i32 %gfpflags) #0 !dbg !9055 {
entry:
  %retval = alloca %struct.scsi_event*, align 8
  %evt_type.addr = alloca i32, align 4
  %gfpflags.addr = alloca i32, align 4
  %evt = alloca %struct.scsi_event*, align 8
  store i32 %evt_type, i32* %evt_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evt_type.addr, metadata !9058, metadata !DIExpression()), !dbg !9059
  store i32 %gfpflags, i32* %gfpflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfpflags.addr, metadata !9060, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.declare(metadata %struct.scsi_event** %evt, metadata !9062, metadata !DIExpression()), !dbg !9063
  %0 = load i32, i32* %gfpflags.addr, align 4, !dbg !9064
  %call = call i8* @kzalloc(i64 24, i32 %0) #10, !dbg !9065
  %1 = bitcast i8* %call to %struct.scsi_event*, !dbg !9065
  store %struct.scsi_event* %1, %struct.scsi_event** %evt, align 8, !dbg !9063
  %2 = load %struct.scsi_event*, %struct.scsi_event** %evt, align 8, !dbg !9066
  %tobool = icmp ne %struct.scsi_event* %2, null, !dbg !9066
  br i1 %tobool, label %if.end, label %if.then, !dbg !9068

if.then:                                          ; preds = %entry
  store %struct.scsi_event* null, %struct.scsi_event** %retval, align 8, !dbg !9069
  br label %return, !dbg !9069

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %evt_type.addr, align 4, !dbg !9070
  %4 = load %struct.scsi_event*, %struct.scsi_event** %evt, align 8, !dbg !9071
  %evt_type1 = getelementptr inbounds %struct.scsi_event, %struct.scsi_event* %4, i32 0, i32 0, !dbg !9072
  store i32 %3, i32* %evt_type1, align 8, !dbg !9073
  %5 = load %struct.scsi_event*, %struct.scsi_event** %evt, align 8, !dbg !9074
  %node = getelementptr inbounds %struct.scsi_event, %struct.scsi_event* %5, i32 0, i32 1, !dbg !9075
  call void @INIT_LIST_HEAD(%struct.list_head* %node) #10, !dbg !9076
  %6 = load i32, i32* %evt_type.addr, align 4, !dbg !9077
  switch i32 %6, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
  ], !dbg !9078

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  br label %sw.default, !dbg !9079

sw.default:                                       ; preds = %if.end, %sw.bb
  br label %sw.epilog, !dbg !9080

sw.epilog:                                        ; preds = %sw.default
  %7 = load %struct.scsi_event*, %struct.scsi_event** %evt, align 8, !dbg !9082
  store %struct.scsi_event* %7, %struct.scsi_event** %retval, align 8, !dbg !9083
  br label %return, !dbg !9083

return:                                           ; preds = %sw.epilog, %if.then
  %8 = load %struct.scsi_event*, %struct.scsi_event** %retval, align 8, !dbg !9084
  ret %struct.scsi_event* %8, !dbg !9084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !9085 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7642, metadata !DIExpression()), !dbg !9086
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7656, metadata !DIExpression()), !dbg !9089
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7658, metadata !DIExpression()), !dbg !9090
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7660, metadata !DIExpression()), !dbg !9091
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7662, metadata !DIExpression()), !dbg !9092
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7668, metadata !DIExpression()), !dbg !9094
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7674, metadata !DIExpression()), !dbg !9096
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7683, metadata !DIExpression()), !dbg !9099
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7685, metadata !DIExpression()), !dbg !9100
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7687, metadata !DIExpression()), !dbg !9101
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7689, metadata !DIExpression()), !dbg !9102
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7691, metadata !DIExpression()), !dbg !9103
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7693, metadata !DIExpression()), !dbg !9104
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7695, metadata !DIExpression()), !dbg !9105
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7697, metadata !DIExpression()), !dbg !9106
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9107, metadata !DIExpression()), !dbg !9108
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9109, metadata !DIExpression()), !dbg !9110
  %0 = load i64, i64* %size.addr, align 8, !dbg !9111
  %1 = load i32, i32* %flags.addr, align 4, !dbg !9112
  %or = or i32 %1, 256, !dbg !9113
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !9114
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !9115
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !9116

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9117
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !9118
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9119

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9120
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !9121
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9122
  %call.i.i = call i32 @get_order(i64 %7) #12, !dbg !9123
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9103
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !9124
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9125
  %10 = load i32, i32* %order.i.i, align 4, !dbg !9126
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9127
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9128
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9129
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #11, !dbg !9130
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9130
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9130
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9130
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !9130
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9131
  br label %kmalloc.exit, !dbg !9131

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !9132
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9133
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !9133
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9134

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9135
  br label %kmalloc_index.exit.i, !dbg !9135

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9136
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !9137
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9138

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9139
  br label %kmalloc_index.exit.i, !dbg !9139

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9140
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !9141
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9142

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9143
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !9144
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9145

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9146
  br label %kmalloc_index.exit.i, !dbg !9146

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9147
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !9148
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9149

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9150
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !9151
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9152

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9153
  br label %kmalloc_index.exit.i, !dbg !9153

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9154
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !9155
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9156

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9157
  br label %kmalloc_index.exit.i, !dbg !9157

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9158
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !9159
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9160

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9161
  br label %kmalloc_index.exit.i, !dbg !9161

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9162
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !9163
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9164

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9165
  br label %kmalloc_index.exit.i, !dbg !9165

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9166
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !9167
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9168

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9169
  br label %kmalloc_index.exit.i, !dbg !9169

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9170
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !9171
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9172

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9173
  br label %kmalloc_index.exit.i, !dbg !9173

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9174
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !9175
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9176

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9177
  br label %kmalloc_index.exit.i, !dbg !9177

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9178
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !9179
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9180

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9181
  br label %kmalloc_index.exit.i, !dbg !9181

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9182
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !9183
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9184

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9185
  br label %kmalloc_index.exit.i, !dbg !9185

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9186
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !9187
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9188

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9189
  br label %kmalloc_index.exit.i, !dbg !9189

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9190
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !9191
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9192

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9193
  br label %kmalloc_index.exit.i, !dbg !9193

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9194
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !9195
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9196

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9197
  br label %kmalloc_index.exit.i, !dbg !9197

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9198
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !9199
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9200

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9201
  br label %kmalloc_index.exit.i, !dbg !9201

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9202
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !9203
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9204

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9205
  br label %kmalloc_index.exit.i, !dbg !9205

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9206
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !9207
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9208

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9209
  br label %kmalloc_index.exit.i, !dbg !9209

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9210
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !9211
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9212

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9213
  br label %kmalloc_index.exit.i, !dbg !9213

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9214
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !9215
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9216

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9217
  br label %kmalloc_index.exit.i, !dbg !9217

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9218
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !9219
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9220

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9221
  br label %kmalloc_index.exit.i, !dbg !9221

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9222
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !9223
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9224

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9225
  br label %kmalloc_index.exit.i, !dbg !9225

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9226
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !9227
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9228

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9229
  br label %kmalloc_index.exit.i, !dbg !9229

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9230
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !9231
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9232

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9233
  br label %kmalloc_index.exit.i, !dbg !9233

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9234
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !9235
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9236

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9237
  br label %kmalloc_index.exit.i, !dbg !9237

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9238
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !9239
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9240

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9241
  br label %kmalloc_index.exit.i, !dbg !9241

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9242
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !9243
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9244

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9245
  br label %kmalloc_index.exit.i, !dbg !9245

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9246
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !9247
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9248

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9249
  br label %kmalloc_index.exit.i, !dbg !9249

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !9250, !srcloc !7935
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 247) #7, !dbg !9251, !srcloc !7939
  unreachable, !dbg !9252

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !9253
  store i32 %45, i32* %index.i, align 4, !dbg !9254
  %46 = load i32, i32* %index.i, align 4, !dbg !9255
  %tobool.i = icmp ne i32 %46, 0, !dbg !9255
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9256

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9257
  br label %kmalloc.exit, !dbg !9257

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !9258
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9259
  %and.i.i = and i32 %48, 17, !dbg !9259
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9259
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9259
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9259
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9259
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9260

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9261
  br label %kmalloc_type.exit.i, !dbg !9261

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9262
  %and2.i.i = and i32 %49, 1, !dbg !9263
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9262
  %50 = zext i1 %tobool3.i.i to i64, !dbg !9262
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9262
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9264
  br label %kmalloc_type.exit.i, !dbg !9264

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !9265
  %idxprom.i = zext i32 %51 to i64, !dbg !9266
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9266
  %52 = load i32, i32* %index.i, align 4, !dbg !9267
  %idxprom6.i = zext i32 %52 to i64, !dbg !9266
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9266
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9266
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !9268
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !9269
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9270
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9271
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #11, !dbg !9272
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9272
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9272
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9272
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !9272
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9091
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9273
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !9274
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9275
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9276
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #11, !dbg !9277
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9278
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !9279
  store i8* %62, i8** %retval.i, align 8, !dbg !9280
  br label %kmalloc.exit, !dbg !9280

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !9281
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !9282
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #11, !dbg !9283
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9283
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9283
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9283
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !9283
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9284
  br label %kmalloc.exit, !dbg !9284

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !9285
  ret i8* %65, !dbg !9286
}

; Function Attrs: noredzone
declare dso_local void @sdev_prefix_printk(i8*, %struct.scsi_device*, i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_device_quiesce(%struct.scsi_device* %sdev) #0 !dbg !9287 {
entry:
  %pscr_ret__.i40 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i40, metadata !9288, metadata !DIExpression()), !dbg !9294
  %__vpp_verify.i41 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i41, metadata !9297, metadata !DIExpression()), !dbg !9299
  %pfo_val__.i42 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i42, metadata !9300, metadata !DIExpression()), !dbg !9302
  %tmp.i43 = alloca %struct.task_struct*, align 8
  %tmp1.i44 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i35 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i35, metadata !9288, metadata !DIExpression()), !dbg !9303
  %__vpp_verify.i36 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i36, metadata !9297, metadata !DIExpression()), !dbg !9306
  %pfo_val__.i37 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i37, metadata !9300, metadata !DIExpression()), !dbg !9307
  %tmp.i38 = alloca %struct.task_struct*, align 8
  %tmp1.i39 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !9288, metadata !DIExpression()), !dbg !9308
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !9297, metadata !DIExpression()), !dbg !9311
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !9300, metadata !DIExpression()), !dbg !9312
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %q = alloca %struct.request_queue*, align 8
  %err = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9313, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !9315, metadata !DIExpression()), !dbg !9316
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9317
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 1, !dbg !9318
  %1 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !9318
  store %struct.request_queue* %1, %struct.request_queue** %q, align 8, !dbg !9316
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9319, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9321, metadata !DIExpression()), !dbg !9322
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9322
  %quiesced_by = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 61, !dbg !9322
  %3 = load %struct.task_struct*, %struct.task_struct** %quiesced_by, align 8, !dbg !9322
  %tobool = icmp ne %struct.task_struct* %3, null, !dbg !9322
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9322

land.rhs:                                         ; preds = %entry
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9322
  %quiesced_by1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 61, !dbg !9322
  %5 = load %struct.task_struct*, %struct.task_struct** %quiesced_by1, align 8, !dbg !9322
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !9311
  %6 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !9311
  %7 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !9312, !srcloc !9323
  store i64 %7, i64* %pfo_val__.i, align 8, !dbg !9312
  %8 = load i64, i64* %pfo_val__.i, align 8, !dbg !9312
  %9 = inttoptr i64 %8 to %struct.task_struct*, !dbg !9312
  store %struct.task_struct* %9, %struct.task_struct** %tmp.i, align 8, !dbg !9312
  %10 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !9312
  store %struct.task_struct* %10, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9308
  %11 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9308
  store %struct.task_struct* %11, %struct.task_struct** %tmp1.i, align 8, !dbg !9308
  %12 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !9308
  %cmp = icmp ne %struct.task_struct* %5, %12, !dbg !9322
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %13 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !9324
  %lnot = xor i1 %13, true, !dbg !9322
  %lnot2 = xor i1 %lnot, true, !dbg !9322
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9322
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9322
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !9325
  %tobool3 = icmp ne i32 %14, 0, !dbg !9325
  %lnot4 = xor i1 %tobool3, true, !dbg !9325
  %lnot6 = xor i1 %lnot4, true, !dbg !9325
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !9325
  %conv = sext i32 %lnot.ext7 to i64, !dbg !9325
  %tobool8 = icmp ne i64 %conv, 0, !dbg !9325
  br i1 %tobool8, label %if.then, label %if.end, !dbg !9322

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !9325

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !9327

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !9329

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !9327

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 2536, i32 2307, i64 12) #7, !dbg !9331, !srcloc !9333
  br label %do.end11, !dbg !9331

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 332) #7, !dbg !9334, !srcloc !9336
  br label %do.body12, !dbg !9327

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !9337

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !9327

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !9327

if.end:                                           ; preds = %do.end14, %land.end
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !9322
  %tobool15 = icmp ne i32 %15, 0, !dbg !9322
  %lnot16 = xor i1 %tobool15, true, !dbg !9322
  %lnot18 = xor i1 %lnot16, true, !dbg !9322
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !9322
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !9322
  store i64 %conv20, i64* %tmp, align 8, !dbg !9325
  %16 = load i64, i64* %tmp, align 8, !dbg !9322
  %17 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9339
  %quiesced_by21 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %17, i32 0, i32 61, !dbg !9340
  %18 = load %struct.task_struct*, %struct.task_struct** %quiesced_by21, align 8, !dbg !9340
  store i8* null, i8** %__vpp_verify.i36, align 8, !dbg !9306
  %19 = load i8*, i8** %__vpp_verify.i36, align 8, !dbg !9306
  %20 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !9307, !srcloc !9323
  store i64 %20, i64* %pfo_val__.i37, align 8, !dbg !9307
  %21 = load i64, i64* %pfo_val__.i37, align 8, !dbg !9307
  %22 = inttoptr i64 %21 to %struct.task_struct*, !dbg !9307
  store %struct.task_struct* %22, %struct.task_struct** %tmp.i38, align 8, !dbg !9307
  %23 = load %struct.task_struct*, %struct.task_struct** %tmp.i38, align 8, !dbg !9307
  store %struct.task_struct* %23, %struct.task_struct** %pscr_ret__.i35, align 8, !dbg !9303
  %24 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i35, align 8, !dbg !9303
  store %struct.task_struct* %24, %struct.task_struct** %tmp1.i39, align 8, !dbg !9303
  %25 = load %struct.task_struct*, %struct.task_struct** %tmp1.i39, align 8, !dbg !9303
  %cmp23 = icmp eq %struct.task_struct* %18, %25, !dbg !9341
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !9342

if.then25:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9343
  br label %return, !dbg !9343

if.end26:                                         ; preds = %if.end
  %26 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !9344
  call void @blk_set_pm_only(%struct.request_queue* %26) #10, !dbg !9345
  %27 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !9346
  call void @blk_mq_freeze_queue(%struct.request_queue* %27) #10, !dbg !9347
  call void @synchronize_rcu() #10, !dbg !9348
  %28 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !9349
  call void @blk_mq_unfreeze_queue(%struct.request_queue* %28) #10, !dbg !9350
  %29 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9351
  %state_mutex = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %29, i32 0, i32 59, !dbg !9352
  call void @mutex_lock(%struct.mutex* %state_mutex) #10, !dbg !9353
  %30 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9354
  %call27 = call i32 @scsi_device_set_state(%struct.scsi_device* %30, i32 5) #10, !dbg !9355
  store i32 %call27, i32* %err, align 4, !dbg !9356
  %31 = load i32, i32* %err, align 4, !dbg !9357
  %cmp28 = icmp eq i32 %31, 0, !dbg !9358
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !9359

if.then30:                                        ; preds = %if.end26
  store i8* null, i8** %__vpp_verify.i41, align 8, !dbg !9299
  %32 = load i8*, i8** %__vpp_verify.i41, align 8, !dbg !9299
  %33 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !9302, !srcloc !9323
  store i64 %33, i64* %pfo_val__.i42, align 8, !dbg !9302
  %34 = load i64, i64* %pfo_val__.i42, align 8, !dbg !9302
  %35 = inttoptr i64 %34 to %struct.task_struct*, !dbg !9302
  store %struct.task_struct* %35, %struct.task_struct** %tmp.i43, align 8, !dbg !9302
  %36 = load %struct.task_struct*, %struct.task_struct** %tmp.i43, align 8, !dbg !9302
  store %struct.task_struct* %36, %struct.task_struct** %pscr_ret__.i40, align 8, !dbg !9294
  %37 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i40, align 8, !dbg !9294
  store %struct.task_struct* %37, %struct.task_struct** %tmp1.i44, align 8, !dbg !9294
  %38 = load %struct.task_struct*, %struct.task_struct** %tmp1.i44, align 8, !dbg !9294
  %39 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9360
  %quiesced_by32 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %39, i32 0, i32 61, !dbg !9361
  store %struct.task_struct* %38, %struct.task_struct** %quiesced_by32, align 8, !dbg !9362
  br label %if.end33, !dbg !9360

if.else:                                          ; preds = %if.end26
  %40 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !9363
  call void @blk_clear_pm_only(%struct.request_queue* %40) #10, !dbg !9364
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then30
  %41 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9365
  %state_mutex34 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %41, i32 0, i32 59, !dbg !9366
  call void @mutex_unlock(%struct.mutex* %state_mutex34) #10, !dbg !9367
  %42 = load i32, i32* %err, align 4, !dbg !9368
  store i32 %42, i32* %retval, align 4, !dbg !9369
  br label %return, !dbg !9369

return:                                           ; preds = %if.end33, %if.then25
  %43 = load i32, i32* %retval, align 4, !dbg !9370
  ret i32 %43, !dbg !9370
}

; Function Attrs: noredzone
declare dso_local void @blk_set_pm_only(%struct.request_queue*) #2

; Function Attrs: noredzone
declare dso_local void @blk_mq_freeze_queue(%struct.request_queue*) #2

; Function Attrs: noredzone
declare dso_local void @synchronize_rcu() #2

; Function Attrs: noredzone
declare dso_local void @blk_mq_unfreeze_queue(%struct.request_queue*) #2

; Function Attrs: noredzone
declare dso_local void @blk_clear_pm_only(%struct.request_queue*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_device_resume(%struct.scsi_device* %sdev) #0 !dbg !9371 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9372, metadata !DIExpression()), !dbg !9373
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9374
  %state_mutex = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 59, !dbg !9375
  call void @mutex_lock(%struct.mutex* %state_mutex) #10, !dbg !9376
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9377
  %quiesced_by = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 61, !dbg !9379
  %2 = load %struct.task_struct*, %struct.task_struct** %quiesced_by, align 8, !dbg !9379
  %tobool = icmp ne %struct.task_struct* %2, null, !dbg !9377
  br i1 %tobool, label %if.then, label %if.end, !dbg !9380

if.then:                                          ; preds = %entry
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9381
  %quiesced_by1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 61, !dbg !9383
  store %struct.task_struct* null, %struct.task_struct** %quiesced_by1, align 8, !dbg !9384
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9385
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 1, !dbg !9386
  %5 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !9386
  call void @blk_clear_pm_only(%struct.request_queue* %5) #10, !dbg !9387
  br label %if.end, !dbg !9388

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9389
  %sdev_state = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 60, !dbg !9391
  %7 = load i32, i32* %sdev_state, align 8, !dbg !9391
  %cmp = icmp eq i32 %7, 5, !dbg !9392
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9393

if.then2:                                         ; preds = %if.end
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9394
  %call = call i32 @scsi_device_set_state(%struct.scsi_device* %8, i32 2) #10, !dbg !9395
  br label %if.end3, !dbg !9395

if.end3:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9396
  %state_mutex4 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 59, !dbg !9397
  call void @mutex_unlock(%struct.mutex* %state_mutex4) #10, !dbg !9398
  ret void, !dbg !9399
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_target_quiesce(%struct.scsi_target* %starget) #0 !dbg !9400 {
entry:
  %starget.addr = alloca %struct.scsi_target*, align 8
  store %struct.scsi_target* %starget, %struct.scsi_target** %starget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget.addr, metadata !9401, metadata !DIExpression()), !dbg !9402
  %0 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !9403
  call void @starget_for_each_device(%struct.scsi_target* %0, i8* null, void (%struct.scsi_device*, i8*)* @device_quiesce_fn) #10, !dbg !9404
  ret void, !dbg !9405
}

; Function Attrs: noredzone
declare dso_local void @starget_for_each_device(%struct.scsi_target*, i8*, void (%struct.scsi_device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_quiesce_fn(%struct.scsi_device* %sdev, i8* %data) #0 !dbg !9406 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9407, metadata !DIExpression()), !dbg !9408
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9409, metadata !DIExpression()), !dbg !9410
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9411
  %call = call i32 @scsi_device_quiesce(%struct.scsi_device* %0) #10, !dbg !9412
  ret void, !dbg !9413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_target_resume(%struct.scsi_target* %starget) #0 !dbg !9414 {
entry:
  %starget.addr = alloca %struct.scsi_target*, align 8
  store %struct.scsi_target* %starget, %struct.scsi_target** %starget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget.addr, metadata !9415, metadata !DIExpression()), !dbg !9416
  %0 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !9417
  call void @starget_for_each_device(%struct.scsi_target* %0, i8* null, void (%struct.scsi_device*, i8*)* @device_resume_fn) #10, !dbg !9418
  ret void, !dbg !9419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_resume_fn(%struct.scsi_device* %sdev, i8* %data) #0 !dbg !9420 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9421, metadata !DIExpression()), !dbg !9422
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9423, metadata !DIExpression()), !dbg !9424
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9425
  call void @scsi_device_resume(%struct.scsi_device* %0) #10, !dbg !9426
  ret void, !dbg !9427
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_internal_device_block_nowait(%struct.scsi_device* %sdev) #0 !dbg !9428 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %q = alloca %struct.request_queue*, align 8
  %err = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9429, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !9431, metadata !DIExpression()), !dbg !9432
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9433
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 1, !dbg !9434
  %1 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !9434
  store %struct.request_queue* %1, %struct.request_queue** %q, align 8, !dbg !9432
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9435, metadata !DIExpression()), !dbg !9436
  store i32 0, i32* %err, align 4, !dbg !9436
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9437
  %call = call i32 @scsi_device_set_state(%struct.scsi_device* %2, i32 8) #10, !dbg !9438
  store i32 %call, i32* %err, align 4, !dbg !9439
  %3 = load i32, i32* %err, align 4, !dbg !9440
  %tobool = icmp ne i32 %3, 0, !dbg !9440
  br i1 %tobool, label %if.then, label %if.end4, !dbg !9442

if.then:                                          ; preds = %entry
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9443
  %call1 = call i32 @scsi_device_set_state(%struct.scsi_device* %4, i32 9) #10, !dbg !9445
  store i32 %call1, i32* %err, align 4, !dbg !9446
  %5 = load i32, i32* %err, align 4, !dbg !9447
  %tobool2 = icmp ne i32 %5, 0, !dbg !9447
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !9449

if.then3:                                         ; preds = %if.then
  %6 = load i32, i32* %err, align 4, !dbg !9450
  store i32 %6, i32* %retval, align 4, !dbg !9451
  br label %return, !dbg !9451

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !9452

if.end4:                                          ; preds = %if.end, %entry
  %7 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !9453
  call void @blk_mq_quiesce_queue_nowait(%struct.request_queue* %7) #10, !dbg !9454
  store i32 0, i32* %retval, align 4, !dbg !9455
  br label %return, !dbg !9455

return:                                           ; preds = %if.end4, %if.then3
  %8 = load i32, i32* %retval, align 4, !dbg !9456
  ret i32 %8, !dbg !9456
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_quiesce_queue_nowait(%struct.request_queue*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_start_queue(%struct.scsi_device* %sdev) #0 !dbg !9457 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %q = alloca %struct.request_queue*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9458, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !9460, metadata !DIExpression()), !dbg !9461
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9462
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 1, !dbg !9463
  %1 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !9463
  store %struct.request_queue* %1, %struct.request_queue** %q, align 8, !dbg !9461
  %2 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !9464
  call void @blk_mq_unquiesce_queue(%struct.request_queue* %2) #10, !dbg !9465
  ret void, !dbg !9466
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_unquiesce_queue(%struct.request_queue*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_internal_device_unblock_nowait(%struct.scsi_device* %sdev, i32 %new_state) #0 !dbg !9467 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %new_state.addr = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9468, metadata !DIExpression()), !dbg !9469
  store i32 %new_state, i32* %new_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_state.addr, metadata !9470, metadata !DIExpression()), !dbg !9471
  %0 = load i32, i32* %new_state.addr, align 4, !dbg !9472
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
    i32 7, label %sw.bb
  ], !dbg !9473

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !9474

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9476
  br label %return, !dbg !9476

sw.epilog:                                        ; preds = %sw.bb
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9477
  %sdev_state = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 60, !dbg !9478
  %2 = load i32, i32* %sdev_state, align 8, !dbg !9478
  switch i32 %2, label %sw.default8 [
    i32 8, label %sw.bb1
    i32 7, label %sw.bb1
    i32 9, label %sw.bb3
    i32 3, label %sw.bb7
    i32 6, label %sw.bb7
  ], !dbg !9479

sw.bb1:                                           ; preds = %sw.epilog, %sw.epilog
  %3 = load i32, i32* %new_state.addr, align 4, !dbg !9480
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9482
  %sdev_state2 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 60, !dbg !9483
  store i32 %3, i32* %sdev_state2, align 8, !dbg !9484
  br label %sw.epilog9, !dbg !9485

sw.bb3:                                           ; preds = %sw.epilog
  %5 = load i32, i32* %new_state.addr, align 4, !dbg !9486
  %cmp = icmp eq i32 %5, 7, !dbg !9488
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9489

lor.lhs.false:                                    ; preds = %sw.bb3
  %6 = load i32, i32* %new_state.addr, align 4, !dbg !9490
  %cmp4 = icmp eq i32 %6, 6, !dbg !9491
  br i1 %cmp4, label %if.then, label %if.else, !dbg !9492

if.then:                                          ; preds = %lor.lhs.false, %sw.bb3
  %7 = load i32, i32* %new_state.addr, align 4, !dbg !9493
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9494
  %sdev_state5 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 60, !dbg !9495
  store i32 %7, i32* %sdev_state5, align 8, !dbg !9496
  br label %if.end, !dbg !9494

if.else:                                          ; preds = %lor.lhs.false
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9497
  %sdev_state6 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 60, !dbg !9498
  store i32 1, i32* %sdev_state6, align 8, !dbg !9499
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog9, !dbg !9500

sw.bb7:                                           ; preds = %sw.epilog, %sw.epilog
  br label %sw.epilog9, !dbg !9501

sw.default8:                                      ; preds = %sw.epilog
  store i32 -22, i32* %retval, align 4, !dbg !9502
  br label %return, !dbg !9502

sw.epilog9:                                       ; preds = %sw.bb7, %if.end, %sw.bb1
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9503
  call void @scsi_start_queue(%struct.scsi_device* %10) #10, !dbg !9504
  store i32 0, i32* %retval, align 4, !dbg !9505
  br label %return, !dbg !9505

return:                                           ; preds = %sw.epilog9, %sw.default8, %sw.default
  %11 = load i32, i32* %retval, align 4, !dbg !9506
  ret i32 %11, !dbg !9506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_target_block(%struct.device* %dev) #0 !dbg !9507 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_target*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9508, metadata !DIExpression()), !dbg !9509
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9510
  %call = call i32 @scsi_is_target_device(%struct.device* %0) #10, !dbg !9512
  %tobool = icmp ne i32 %call, 0, !dbg !9512
  br i1 %tobool, label %if.then, label %if.else, !dbg !9513

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9514, metadata !DIExpression()), !dbg !9516
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9516
  %2 = bitcast %struct.device* %1 to i8*, !dbg !9516
  store i8* %2, i8** %__mptr, align 8, !dbg !9516
  br label %do.body, !dbg !9516

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !9517

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9516
  %add.ptr = getelementptr i8, i8* %3, i64 -40, !dbg !9516
  %4 = bitcast i8* %add.ptr to %struct.scsi_target*, !dbg !9516
  store %struct.scsi_target* %4, %struct.scsi_target** %tmp, align 8, !dbg !9517
  %5 = load %struct.scsi_target*, %struct.scsi_target** %tmp, align 8, !dbg !9516
  call void @starget_for_each_device(%struct.scsi_target* %5, i8* null, void (%struct.scsi_device*, i8*)* @device_block) #10, !dbg !9519
  br label %if.end, !dbg !9519

if.else:                                          ; preds = %entry
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9520
  %call1 = call i32 @device_for_each_child(%struct.device* %6, i8* null, i32 (%struct.device*, i8*)* @target_block) #10, !dbg !9521
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  ret void, !dbg !9522
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_is_target_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_block(%struct.scsi_device* %sdev, i8* %data) #0 !dbg !5519 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %data.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9523, metadata !DIExpression()), !dbg !9524
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9525, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9527, metadata !DIExpression()), !dbg !9528
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9529
  %call = call i32 @scsi_internal_device_block(%struct.scsi_device* %0) #10, !dbg !9530
  store i32 %call, i32* %ret, align 4, !dbg !9531
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !9532, metadata !DIExpression()), !dbg !9534
  %1 = load i32, i32* %ret, align 4, !dbg !9534
  %tobool = icmp ne i32 %1, 0, !dbg !9534
  %lnot = xor i1 %tobool, true, !dbg !9534
  %lnot1 = xor i1 %lnot, true, !dbg !9534
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9534
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !9534
  %2 = load i32, i32* %__ret_warn_once, align 4, !dbg !9535
  %tobool2 = icmp ne i32 %2, 0, !dbg !9535
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !9535

land.rhs:                                         ; preds = %entry
  %3 = load i8, i8* @device_block.__warned, align 1, !dbg !9535
  %tobool3 = trunc i8 %3 to i1, !dbg !9535
  %lnot4 = xor i1 %tobool3, true, !dbg !9535
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %lnot4, %land.rhs ], !dbg !9537
  %lnot6 = xor i1 %4, true, !dbg !9535
  %lnot8 = xor i1 %lnot6, true, !dbg !9535
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !9535
  %conv = sext i32 %lnot.ext9 to i64, !dbg !9535
  %tobool10 = icmp ne i64 %conv, 0, !dbg !9535
  br i1 %tobool10, label %if.then, label %if.end38, !dbg !9534

if.then:                                          ; preds = %land.end
  store i8 1, i8* @device_block.__warned, align 1, !dbg !9538
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9540, metadata !DIExpression()), !dbg !9542
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !9542
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !9543
  %tobool11 = icmp ne i32 %5, 0, !dbg !9543
  %lnot12 = xor i1 %tobool11, true, !dbg !9543
  %lnot14 = xor i1 %lnot12, true, !dbg !9543
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !9543
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !9543
  %tobool17 = icmp ne i64 %conv16, 0, !dbg !9543
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !9542

if.then18:                                        ; preds = %if.then
  br label %do.body, !dbg !9543

do.body:                                          ; preds = %if.then18
  br label %do.body19, !dbg !9545

do.body19:                                        ; preds = %do.body
  br label %do.end, !dbg !9547

do.end:                                           ; preds = %do.body19
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9545
  %sdev_gendev = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 50, !dbg !9545
  %call20 = call i8* @dev_name(%struct.device* %sdev_gendev) #10, !dbg !9545
  %7 = load i32, i32* %ret, align 4, !dbg !9545
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26, i64 0, i64 0), i8* %call20, i32 %7) #10, !dbg !9545
  br label %do.body21, !dbg !9545

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !9549

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !9551

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !9549

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 2778, i32 2313, i64 12) #7, !dbg !9553, !srcloc !9555
  br label %do.end25, !dbg !9553

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 333) #7, !dbg !9556, !srcloc !9558
  br label %do.body26, !dbg !9549

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !9559

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !9549

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !9545

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !9561

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !9545

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !9545

if.end:                                           ; preds = %do.end31, %if.then
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !9542
  %tobool32 = icmp ne i32 %8, 0, !dbg !9542
  %lnot33 = xor i1 %tobool32, true, !dbg !9542
  %lnot35 = xor i1 %lnot33, true, !dbg !9542
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !9542
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !9542
  store i64 %conv37, i64* %tmp, align 8, !dbg !9543
  %9 = load i64, i64* %tmp, align 8, !dbg !9542
  br label %if.end38, !dbg !9538

if.end38:                                         ; preds = %if.end, %land.end
  %10 = load i32, i32* %__ret_warn_once, align 4, !dbg !9534
  %tobool40 = icmp ne i32 %10, 0, !dbg !9534
  %lnot41 = xor i1 %tobool40, true, !dbg !9534
  %lnot43 = xor i1 %lnot41, true, !dbg !9534
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !9534
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !9534
  store i64 %conv45, i64* %tmp39, align 8, !dbg !9535
  %11 = load i64, i64* %tmp39, align 8, !dbg !9534
  ret void, !dbg !9563
}

; Function Attrs: noredzone
declare dso_local i32 @device_for_each_child(%struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @target_block(%struct.device* %dev, i8* %data) #0 !dbg !9564 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_target*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9567, metadata !DIExpression()), !dbg !9568
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9569, metadata !DIExpression()), !dbg !9570
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9571
  %call = call i32 @scsi_is_target_device(%struct.device* %0) #10, !dbg !9573
  %tobool = icmp ne i32 %call, 0, !dbg !9573
  br i1 %tobool, label %if.then, label %if.end, !dbg !9574

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9575, metadata !DIExpression()), !dbg !9577
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9577
  %2 = bitcast %struct.device* %1 to i8*, !dbg !9577
  store i8* %2, i8** %__mptr, align 8, !dbg !9577
  br label %do.body, !dbg !9577

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !9578

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9577
  %add.ptr = getelementptr i8, i8* %3, i64 -40, !dbg !9577
  %4 = bitcast i8* %add.ptr to %struct.scsi_target*, !dbg !9577
  store %struct.scsi_target* %4, %struct.scsi_target** %tmp, align 8, !dbg !9578
  %5 = load %struct.scsi_target*, %struct.scsi_target** %tmp, align 8, !dbg !9577
  call void @starget_for_each_device(%struct.scsi_target* %5, i8* null, void (%struct.scsi_device*, i8*)* @device_block) #10, !dbg !9580
  br label %if.end, !dbg !9580

if.end:                                           ; preds = %do.end, %entry
  ret i32 0, !dbg !9581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_target_unblock(%struct.device* %dev, i32 %new_state) #0 !dbg !9582 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %new_state.addr = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_target*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9585, metadata !DIExpression()), !dbg !9586
  store i32 %new_state, i32* %new_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_state.addr, metadata !9587, metadata !DIExpression()), !dbg !9588
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9589
  %call = call i32 @scsi_is_target_device(%struct.device* %0) #10, !dbg !9591
  %tobool = icmp ne i32 %call, 0, !dbg !9591
  br i1 %tobool, label %if.then, label %if.else, !dbg !9592

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9593, metadata !DIExpression()), !dbg !9595
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9595
  %2 = bitcast %struct.device* %1 to i8*, !dbg !9595
  store i8* %2, i8** %__mptr, align 8, !dbg !9595
  br label %do.body, !dbg !9595

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !9596

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9595
  %add.ptr = getelementptr i8, i8* %3, i64 -40, !dbg !9595
  %4 = bitcast i8* %add.ptr to %struct.scsi_target*, !dbg !9595
  store %struct.scsi_target* %4, %struct.scsi_target** %tmp, align 8, !dbg !9596
  %5 = load %struct.scsi_target*, %struct.scsi_target** %tmp, align 8, !dbg !9595
  %6 = bitcast i32* %new_state.addr to i8*, !dbg !9598
  call void @starget_for_each_device(%struct.scsi_target* %5, i8* %6, void (%struct.scsi_device*, i8*)* @device_unblock) #10, !dbg !9599
  br label %if.end, !dbg !9599

if.else:                                          ; preds = %entry
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9600
  %8 = bitcast i32* %new_state.addr to i8*, !dbg !9601
  %call1 = call i32 @device_for_each_child(%struct.device* %7, i8* %8, i32 (%struct.device*, i8*)* @target_unblock) #10, !dbg !9602
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  ret void, !dbg !9603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_unblock(%struct.scsi_device* %sdev, i8* %data) #0 !dbg !9604 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9605, metadata !DIExpression()), !dbg !9606
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9607, metadata !DIExpression()), !dbg !9608
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9609
  %1 = load i8*, i8** %data.addr, align 8, !dbg !9610
  %2 = bitcast i8* %1 to i32*, !dbg !9611
  %3 = load i32, i32* %2, align 4, !dbg !9612
  %call = call i32 @scsi_internal_device_unblock(%struct.scsi_device* %0, i32 %3) #10, !dbg !9613
  ret void, !dbg !9614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @target_unblock(%struct.device* %dev, i8* %data) #0 !dbg !9615 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_target*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9616, metadata !DIExpression()), !dbg !9617
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9618, metadata !DIExpression()), !dbg !9619
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9620
  %call = call i32 @scsi_is_target_device(%struct.device* %0) #10, !dbg !9622
  %tobool = icmp ne i32 %call, 0, !dbg !9622
  br i1 %tobool, label %if.then, label %if.end, !dbg !9623

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9624, metadata !DIExpression()), !dbg !9626
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9626
  %2 = bitcast %struct.device* %1 to i8*, !dbg !9626
  store i8* %2, i8** %__mptr, align 8, !dbg !9626
  br label %do.body, !dbg !9626

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !9627

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9626
  %add.ptr = getelementptr i8, i8* %3, i64 -40, !dbg !9626
  %4 = bitcast i8* %add.ptr to %struct.scsi_target*, !dbg !9626
  store %struct.scsi_target* %4, %struct.scsi_target** %tmp, align 8, !dbg !9627
  %5 = load %struct.scsi_target*, %struct.scsi_target** %tmp, align 8, !dbg !9626
  %6 = load i8*, i8** %data.addr, align 8, !dbg !9629
  call void @starget_for_each_device(%struct.scsi_target* %5, i8* %6, void (%struct.scsi_device*, i8*)* @device_unblock) #10, !dbg !9630
  br label %if.end, !dbg !9630

if.end:                                           ; preds = %do.end, %entry
  ret i32 0, !dbg !9631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_host_block(%struct.Scsi_Host* %shost) #0 !dbg !9632 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !9633, metadata !DIExpression()), !dbg !9634
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !9635, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9637, metadata !DIExpression()), !dbg !9638
  store i32 0, i32* %ret, align 4, !dbg !9638
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9639
  %call = call %struct.scsi_device* @__scsi_iterate_devices(%struct.Scsi_Host* %0, %struct.scsi_device* null) #10, !dbg !9639
  store %struct.scsi_device* %call, %struct.scsi_device** %sdev, align 8, !dbg !9639
  br label %for.cond, !dbg !9639

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9641
  %tobool = icmp ne %struct.scsi_device* %1, null, !dbg !9639
  br i1 %tobool, label %for.body, label %for.end, !dbg !9639

for.body:                                         ; preds = %for.cond
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9643
  %state_mutex = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 59, !dbg !9645
  call void @mutex_lock(%struct.mutex* %state_mutex) #10, !dbg !9646
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9647
  %call1 = call i32 @scsi_internal_device_block_nowait(%struct.scsi_device* %3) #10, !dbg !9648
  store i32 %call1, i32* %ret, align 4, !dbg !9649
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9650
  %state_mutex2 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 59, !dbg !9651
  call void @mutex_unlock(%struct.mutex* %state_mutex2) #10, !dbg !9652
  %5 = load i32, i32* %ret, align 4, !dbg !9653
  %tobool3 = icmp ne i32 %5, 0, !dbg !9653
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9655

if.then:                                          ; preds = %for.body
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9656
  call void @scsi_device_put(%struct.scsi_device* %6) #10, !dbg !9658
  br label %for.end, !dbg !9659

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9660

for.inc:                                          ; preds = %if.end
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9641
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9641
  %call4 = call %struct.scsi_device* @__scsi_iterate_devices(%struct.Scsi_Host* %7, %struct.scsi_device* %8) #10, !dbg !9641
  store %struct.scsi_device* %call4, %struct.scsi_device** %sdev, align 8, !dbg !9641
  br label %for.cond, !dbg !9641, !llvm.loop !9661

for.end:                                          ; preds = %if.then, %for.cond
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9663, metadata !DIExpression()), !dbg !9665
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9665
  %tag_set = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 12, !dbg !9665
  %flags = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tag_set, i32 0, i32 9, !dbg !9665
  %10 = load i32, i32* %flags, align 8, !dbg !9665
  %and = and i32 %10, 32, !dbg !9665
  %tobool5 = icmp ne i32 %and, 0, !dbg !9665
  %lnot = xor i1 %tobool5, true, !dbg !9665
  %lnot6 = xor i1 %lnot, true, !dbg !9665
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !9665
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9665
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !9666
  %tobool7 = icmp ne i32 %11, 0, !dbg !9666
  %lnot8 = xor i1 %tobool7, true, !dbg !9666
  %lnot10 = xor i1 %lnot8, true, !dbg !9666
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !9666
  %conv = sext i32 %lnot.ext11 to i64, !dbg !9666
  %tobool12 = icmp ne i64 %conv, 0, !dbg !9666
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !9665

if.then13:                                        ; preds = %for.end
  br label %do.body, !dbg !9666

do.body:                                          ; preds = %if.then13
  br label %do.body14, !dbg !9668

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !9670

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !9668

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 2851, i32 2307, i64 12) #7, !dbg !9672, !srcloc !9674
  br label %do.end16, !dbg !9672

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 338) #7, !dbg !9675, !srcloc !9677
  br label %do.body17, !dbg !9668

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !9678

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !9668

do.end19:                                         ; preds = %do.end18
  br label %if.end20, !dbg !9668

if.end20:                                         ; preds = %do.end19, %for.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !9665
  %tobool21 = icmp ne i32 %12, 0, !dbg !9665
  %lnot22 = xor i1 %tobool21, true, !dbg !9665
  %lnot24 = xor i1 %lnot22, true, !dbg !9665
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !9665
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !9665
  store i64 %conv26, i64* %tmp, align 8, !dbg !9666
  %13 = load i64, i64* %tmp, align 8, !dbg !9665
  %14 = load i32, i32* %ret, align 4, !dbg !9680
  %tobool27 = icmp ne i32 %14, 0, !dbg !9680
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !9682

if.then28:                                        ; preds = %if.end20
  call void @synchronize_rcu() #10, !dbg !9683
  br label %if.end29, !dbg !9683

if.end29:                                         ; preds = %if.then28, %if.end20
  %15 = load i32, i32* %ret, align 4, !dbg !9684
  ret i32 %15, !dbg !9685
}

; Function Attrs: noredzone
declare dso_local void @scsi_device_put(%struct.scsi_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_host_unblock(%struct.Scsi_Host* %shost, i32 %new_state) #0 !dbg !9686 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %new_state.addr = alloca i32, align 4
  %sdev = alloca %struct.scsi_device*, align 8
  %ret = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !9687, metadata !DIExpression()), !dbg !9688
  store i32 %new_state, i32* %new_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_state.addr, metadata !9689, metadata !DIExpression()), !dbg !9690
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !9691, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9693, metadata !DIExpression()), !dbg !9694
  store i32 0, i32* %ret, align 4, !dbg !9694
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9695
  %call = call %struct.scsi_device* @__scsi_iterate_devices(%struct.Scsi_Host* %0, %struct.scsi_device* null) #10, !dbg !9695
  store %struct.scsi_device* %call, %struct.scsi_device** %sdev, align 8, !dbg !9695
  br label %for.cond, !dbg !9695

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9697
  %tobool = icmp ne %struct.scsi_device* %1, null, !dbg !9695
  br i1 %tobool, label %for.body, label %for.end, !dbg !9695

for.body:                                         ; preds = %for.cond
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9699
  %3 = load i32, i32* %new_state.addr, align 4, !dbg !9701
  %call1 = call i32 @scsi_internal_device_unblock(%struct.scsi_device* %2, i32 %3) #10, !dbg !9702
  store i32 %call1, i32* %ret, align 4, !dbg !9703
  %4 = load i32, i32* %ret, align 4, !dbg !9704
  %tobool2 = icmp ne i32 %4, 0, !dbg !9704
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9706

if.then:                                          ; preds = %for.body
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9707
  call void @scsi_device_put(%struct.scsi_device* %5) #10, !dbg !9709
  br label %for.end, !dbg !9710

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9711

for.inc:                                          ; preds = %if.end
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9697
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !9697
  %call3 = call %struct.scsi_device* @__scsi_iterate_devices(%struct.Scsi_Host* %6, %struct.scsi_device* %7) #10, !dbg !9697
  store %struct.scsi_device* %call3, %struct.scsi_device** %sdev, align 8, !dbg !9697
  br label %for.cond, !dbg !9697, !llvm.loop !9712

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load i32, i32* %ret, align 4, !dbg !9714
  ret i32 %8, !dbg !9715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_internal_device_unblock(%struct.scsi_device* %sdev, i32 %new_state) #0 !dbg !9716 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %new_state.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9717, metadata !DIExpression()), !dbg !9718
  store i32 %new_state, i32* %new_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_state.addr, metadata !9719, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9721, metadata !DIExpression()), !dbg !9722
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9723
  %state_mutex = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 59, !dbg !9724
  call void @mutex_lock(%struct.mutex* %state_mutex) #10, !dbg !9725
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9726
  %2 = load i32, i32* %new_state.addr, align 4, !dbg !9727
  %call = call i32 @scsi_internal_device_unblock_nowait(%struct.scsi_device* %1, i32 %2) #10, !dbg !9728
  store i32 %call, i32* %ret, align 4, !dbg !9729
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9730
  %state_mutex1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 59, !dbg !9731
  call void @mutex_unlock(%struct.mutex* %state_mutex1) #10, !dbg !9732
  %4 = load i32, i32* %ret, align 4, !dbg !9733
  ret i32 %4, !dbg !9734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @scsi_kmap_atomic_sg(%struct.scatterlist* %sgl, i32 %sg_count, i64* %offset, i64* %len) #0 !dbg !9735 {
entry:
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9739, metadata !DIExpression()), !dbg !9744
  %retval = alloca i8*, align 8
  %sgl.addr = alloca %struct.scatterlist*, align 8
  %sg_count.addr = alloca i32, align 4
  %offset.addr = alloca i64*, align 8
  %len.addr = alloca i64*, align 8
  %i = alloca i32, align 4
  %sg_len = alloca i64, align 8
  %len_complete = alloca i64, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %page = alloca %struct.page*, align 8
  %__ret_warn_on = alloca i32, align 4
  %_flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  %__dummy3 = alloca i64, align 8
  %__dummy24 = alloca i64, align 8
  %tmp7 = alloca i32, align 4
  %tmp8 = alloca i32, align 4
  %tmp27 = alloca i64, align 8
  %__ret_warn_on52 = alloca i32, align 4
  %tmp70 = alloca i64, align 8
  store %struct.scatterlist* %sgl, %struct.scatterlist** %sgl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgl.addr, metadata !9749, metadata !DIExpression()), !dbg !9750
  store i32 %sg_count, i32* %sg_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sg_count.addr, metadata !9751, metadata !DIExpression()), !dbg !9752
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !9753, metadata !DIExpression()), !dbg !9754
  store i64* %len, i64** %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %len.addr, metadata !9755, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9757, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.declare(metadata i64* %sg_len, metadata !9759, metadata !DIExpression()), !dbg !9760
  store i64 0, i64* %sg_len, align 8, !dbg !9760
  call void @llvm.dbg.declare(metadata i64* %len_complete, metadata !9761, metadata !DIExpression()), !dbg !9762
  store i64 0, i64* %len_complete, align 8, !dbg !9762
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !9763, metadata !DIExpression()), !dbg !9764
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !9765, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9767, metadata !DIExpression()), !dbg !9768
  call void @llvm.dbg.declare(metadata i64* %_flags, metadata !9769, metadata !DIExpression()), !dbg !9770
  br label %do.body, !dbg !9770

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9771, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9775, metadata !DIExpression()), !dbg !9774
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9774
  %conv = zext i1 %cmp to i32, !dbg !9774
  store i32 1, i32* %tmp, align 4, !dbg !9774
  %0 = load i32, i32* %tmp, align 4, !dbg !9774
  %call = call i64 @arch_local_save_flags() #10, !dbg !9776
  store i64 %call, i64* %_flags, align 8, !dbg !9776
  br label %do.end, !dbg !9776

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy3, metadata !9777, metadata !DIExpression()), !dbg !9779
  call void @llvm.dbg.declare(metadata i64* %__dummy24, metadata !9780, metadata !DIExpression()), !dbg !9779
  %cmp5 = icmp eq i64* %__dummy3, %__dummy24, !dbg !9779
  %conv6 = zext i1 %cmp5 to i32, !dbg !9779
  store i32 1, i32* %tmp7, align 4, !dbg !9779
  %1 = load i32, i32* %tmp7, align 4, !dbg !9779
  %2 = load i64, i64* %_flags, align 8, !dbg !9781
  store i64 %2, i64* %flags.addr.i, align 8
  %3 = load i64, i64* %flags.addr.i, align 8, !dbg !9782
  %and.i = and i64 %3, 512, !dbg !9783
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !9784
  %lnot.i = xor i1 %tobool.i, true, !dbg !9784
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !9784
  store i32 %lnot.ext.i, i32* %tmp8, align 4, !dbg !9781
  %4 = load i32, i32* %tmp8, align 4, !dbg !9781
  store i32 %4, i32* %tmp1, align 4, !dbg !9776
  %5 = load i32, i32* %tmp1, align 4, !dbg !9770
  %tobool = icmp ne i32 %5, 0, !dbg !9768
  %lnot = xor i1 %tobool, true, !dbg !9768
  %lnot10 = xor i1 %lnot, true, !dbg !9768
  %lnot11 = xor i1 %lnot10, true, !dbg !9768
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !9768
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9768
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !9785
  %tobool12 = icmp ne i32 %6, 0, !dbg !9785
  %lnot13 = xor i1 %tobool12, true, !dbg !9785
  %lnot15 = xor i1 %lnot13, true, !dbg !9785
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !9785
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !9785
  %tobool18 = icmp ne i64 %conv17, 0, !dbg !9785
  br i1 %tobool18, label %if.then, label %if.end, !dbg !9768

if.then:                                          ; preds = %do.end
  br label %do.body19, !dbg !9785

do.body19:                                        ; preds = %if.then
  br label %do.body20, !dbg !9787

do.body20:                                        ; preds = %do.body19
  br label %do.end21, !dbg !9789

do.end21:                                         ; preds = %do.body20
  br label %do.body22, !dbg !9787

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 2894, i32 2305, i64 12) #7, !dbg !9791, !srcloc !9793
  br label %do.end23, !dbg !9791

do.end23:                                         ; preds = %do.body22
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 339) #7, !dbg !9794, !srcloc !9796
  br label %do.body24, !dbg !9787

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !9797

do.end25:                                         ; preds = %do.body24
  br label %do.end26, !dbg !9787

do.end26:                                         ; preds = %do.end25
  br label %if.end, !dbg !9787

if.end:                                           ; preds = %do.end26, %do.end
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !9768
  %tobool28 = icmp ne i32 %7, 0, !dbg !9768
  %lnot29 = xor i1 %tobool28, true, !dbg !9768
  %lnot31 = xor i1 %lnot29, true, !dbg !9768
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !9768
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !9768
  store i64 %conv33, i64* %tmp27, align 8, !dbg !9785
  %8 = load i64, i64* %tmp27, align 8, !dbg !9768
  store i32 0, i32* %i, align 4, !dbg !9799
  %9 = load %struct.scatterlist*, %struct.scatterlist** %sgl.addr, align 8, !dbg !9799
  store %struct.scatterlist* %9, %struct.scatterlist** %sg, align 8, !dbg !9799
  br label %for.cond, !dbg !9799

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !9801
  %11 = load i32, i32* %sg_count.addr, align 4, !dbg !9801
  %cmp34 = icmp slt i32 %10, %11, !dbg !9801
  br i1 %cmp34, label %for.body, label %for.end, !dbg !9799

for.body:                                         ; preds = %for.cond
  %12 = load i64, i64* %sg_len, align 8, !dbg !9803
  store i64 %12, i64* %len_complete, align 8, !dbg !9805
  %13 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9806
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %13, i32 0, i32 2, !dbg !9807
  %14 = load i32, i32* %length, align 4, !dbg !9807
  %conv36 = zext i32 %14 to i64, !dbg !9806
  %15 = load i64, i64* %sg_len, align 8, !dbg !9808
  %add = add i64 %15, %conv36, !dbg !9808
  store i64 %add, i64* %sg_len, align 8, !dbg !9808
  %16 = load i64, i64* %sg_len, align 8, !dbg !9809
  %17 = load i64*, i64** %offset.addr, align 8, !dbg !9811
  %18 = load i64, i64* %17, align 8, !dbg !9812
  %cmp37 = icmp ugt i64 %16, %18, !dbg !9813
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !9814

if.then39:                                        ; preds = %for.body
  br label %for.end, !dbg !9815

if.end40:                                         ; preds = %for.body
  br label %for.inc, !dbg !9816

for.inc:                                          ; preds = %if.end40
  %19 = load i32, i32* %i, align 4, !dbg !9801
  %inc = add i32 %19, 1, !dbg !9801
  store i32 %inc, i32* %i, align 4, !dbg !9801
  %20 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9801
  %call41 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %20) #10, !dbg !9801
  store %struct.scatterlist* %call41, %struct.scatterlist** %sg, align 8, !dbg !9801
  br label %for.cond, !dbg !9801, !llvm.loop !9817

for.end:                                          ; preds = %if.then39, %for.cond
  %21 = load i32, i32* %i, align 4, !dbg !9819
  %22 = load i32, i32* %sg_count.addr, align 4, !dbg !9819
  %cmp42 = icmp eq i32 %21, %22, !dbg !9819
  %lnot44 = xor i1 %cmp42, true, !dbg !9819
  %lnot46 = xor i1 %lnot44, true, !dbg !9819
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !9819
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !9819
  %tobool49 = icmp ne i64 %conv48, 0, !dbg !9819
  br i1 %tobool49, label %if.then50, label %if.end77, !dbg !9821

if.then50:                                        ; preds = %for.end
  %23 = load i64, i64* %sg_len, align 8, !dbg !9822
  %24 = load i64*, i64** %offset.addr, align 8, !dbg !9824
  %25 = load i64, i64* %24, align 8, !dbg !9825
  %26 = load i32, i32* %sg_count.addr, align 4, !dbg !9826
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.scsi_kmap_atomic_sg, i64 0, i64 0), i64 %23, i64 %25, i32 %26) #14, !dbg !9827
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on52, metadata !9828, metadata !DIExpression()), !dbg !9830
  store i32 1, i32* %__ret_warn_on52, align 4, !dbg !9830
  %27 = load i32, i32* %__ret_warn_on52, align 4, !dbg !9831
  %tobool53 = icmp ne i32 %27, 0, !dbg !9831
  %lnot54 = xor i1 %tobool53, true, !dbg !9831
  %lnot56 = xor i1 %lnot54, true, !dbg !9831
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !9831
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !9831
  %tobool59 = icmp ne i64 %conv58, 0, !dbg !9831
  br i1 %tobool59, label %if.then60, label %if.end69, !dbg !9830

if.then60:                                        ; preds = %if.then50
  br label %do.body61, !dbg !9831

do.body61:                                        ; preds = %if.then60
  br label %do.body62, !dbg !9833

do.body62:                                        ; preds = %do.body61
  br label %do.end63, !dbg !9835

do.end63:                                         ; preds = %do.body62
  br label %do.body64, !dbg !9833

do.body64:                                        ; preds = %do.end63
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 2907, i32 2305, i64 12) #7, !dbg !9837, !srcloc !9839
  br label %do.end65, !dbg !9837

do.end65:                                         ; preds = %do.body64
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 340) #7, !dbg !9840, !srcloc !9842
  br label %do.body66, !dbg !9833

do.body66:                                        ; preds = %do.end65
  br label %do.end67, !dbg !9843

do.end67:                                         ; preds = %do.body66
  br label %do.end68, !dbg !9833

do.end68:                                         ; preds = %do.end67
  br label %if.end69, !dbg !9833

if.end69:                                         ; preds = %do.end68, %if.then50
  %28 = load i32, i32* %__ret_warn_on52, align 4, !dbg !9830
  %tobool71 = icmp ne i32 %28, 0, !dbg !9830
  %lnot72 = xor i1 %tobool71, true, !dbg !9830
  %lnot74 = xor i1 %lnot72, true, !dbg !9830
  %lnot.ext75 = zext i1 %lnot74 to i32, !dbg !9830
  %conv76 = sext i32 %lnot.ext75 to i64, !dbg !9830
  store i64 %conv76, i64* %tmp70, align 8, !dbg !9831
  %29 = load i64, i64* %tmp70, align 8, !dbg !9830
  store i8* null, i8** %retval, align 8, !dbg !9845
  br label %return, !dbg !9845

if.end77:                                         ; preds = %for.end
  %30 = load i64*, i64** %offset.addr, align 8, !dbg !9846
  %31 = load i64, i64* %30, align 8, !dbg !9847
  %32 = load i64, i64* %len_complete, align 8, !dbg !9848
  %sub = sub i64 %31, %32, !dbg !9849
  %33 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9850
  %offset78 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %33, i32 0, i32 1, !dbg !9851
  %34 = load i32, i32* %offset78, align 8, !dbg !9851
  %conv79 = zext i32 %34 to i64, !dbg !9850
  %add80 = add i64 %sub, %conv79, !dbg !9852
  %35 = load i64*, i64** %offset.addr, align 8, !dbg !9853
  store i64 %add80, i64* %35, align 8, !dbg !9854
  %36 = load i64, i64* @vmemmap_base, align 8, !dbg !9855
  %37 = inttoptr i64 %36 to %struct.page*, !dbg !9855
  %38 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9855
  %call81 = call %struct.page* @sg_page(%struct.scatterlist* %38) #10, !dbg !9855
  %39 = load i64, i64* @vmemmap_base, align 8, !dbg !9855
  %40 = inttoptr i64 %39 to %struct.page*, !dbg !9855
  %sub.ptr.lhs.cast = ptrtoint %struct.page* %call81 to i64, !dbg !9855
  %sub.ptr.rhs.cast = ptrtoint %struct.page* %40 to i64, !dbg !9855
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9855
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !9855
  %41 = load i64*, i64** %offset.addr, align 8, !dbg !9855
  %42 = load i64, i64* %41, align 8, !dbg !9855
  %shr = lshr i64 %42, 12, !dbg !9855
  %add82 = add i64 %sub.ptr.div, %shr, !dbg !9855
  %add.ptr = getelementptr %struct.page, %struct.page* %37, i64 %add82, !dbg !9855
  store %struct.page* %add.ptr, %struct.page** %page, align 8, !dbg !9856
  %43 = load i64*, i64** %offset.addr, align 8, !dbg !9857
  %44 = load i64, i64* %43, align 8, !dbg !9858
  %and = and i64 %44, 4095, !dbg !9858
  store i64 %and, i64* %43, align 8, !dbg !9858
  %45 = load i64*, i64** %offset.addr, align 8, !dbg !9859
  %46 = load i64, i64* %45, align 8, !dbg !9860
  %sub83 = sub i64 4096, %46, !dbg !9861
  store i64 %sub83, i64* %sg_len, align 8, !dbg !9862
  %47 = load i64*, i64** %len.addr, align 8, !dbg !9863
  %48 = load i64, i64* %47, align 8, !dbg !9865
  %49 = load i64, i64* %sg_len, align 8, !dbg !9866
  %cmp84 = icmp ugt i64 %48, %49, !dbg !9867
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !9868

if.then86:                                        ; preds = %if.end77
  %50 = load i64, i64* %sg_len, align 8, !dbg !9869
  %51 = load i64*, i64** %len.addr, align 8, !dbg !9870
  store i64 %50, i64* %51, align 8, !dbg !9871
  br label %if.end87, !dbg !9872

if.end87:                                         ; preds = %if.then86, %if.end77
  %52 = load %struct.page*, %struct.page** %page, align 8, !dbg !9873
  %call88 = call i8* @kmap_atomic(%struct.page* %52) #10, !dbg !9874
  store i8* %call88, i8** %retval, align 8, !dbg !9875
  br label %return, !dbg !9875

return:                                           ; preds = %if.end87, %if.end69
  %53 = load i8*, i8** %retval, align 8, !dbg !9876
  ret i8* %53, !dbg !9876
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !9877 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !9878, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9881, metadata !DIExpression()), !dbg !9880
  %0 = load i64, i64* %__edi, align 8, !dbg !9880
  store i64 %0, i64* %__edi, align 8, !dbg !9880
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9882, metadata !DIExpression()), !dbg !9880
  %1 = load i64, i64* %__esi, align 8, !dbg !9880
  store i64 %1, i64* %__esi, align 8, !dbg !9880
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9883, metadata !DIExpression()), !dbg !9880
  %2 = load i64, i64* %__edx, align 8, !dbg !9880
  store i64 %2, i64* %__edx, align 8, !dbg !9880
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9884, metadata !DIExpression()), !dbg !9880
  %3 = load i64, i64* %__ecx, align 8, !dbg !9880
  store i64 %3, i64* %__ecx, align 8, !dbg !9880
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9885, metadata !DIExpression()), !dbg !9880
  %4 = load i64, i64* %__eax, align 8, !dbg !9880
  store i64 %4, i64* %__eax, align 8, !dbg !9880
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !9880
  %6 = call i64 @llvm.read_register.i64(metadata !5522), !dbg !9886
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !9886, !srcloc !9889
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9886
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9886
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9886
  call void @llvm.write_register.i64(metadata !5522, i64 %asmresult1), !dbg !9886
  %8 = load i64, i64* %__eax, align 8, !dbg !9886
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !9890, metadata !DIExpression()), !dbg !9892
  store i64 -1, i64* %__mask, align 8, !dbg !9892
  %9 = load i64, i64* %__mask, align 8, !dbg !9892
  store i64 %9, i64* %tmp, align 8, !dbg !9892
  %10 = load i64, i64* %tmp, align 8, !dbg !9892
  %and = and i64 %8, %10, !dbg !9886
  store i64 %and, i64* %__ret, align 8, !dbg !9886
  %11 = load i64, i64* %__ret, align 8, !dbg !9880
  store i64 %11, i64* %tmp2, align 8, !dbg !9893
  %12 = load i64, i64* %tmp2, align 8, !dbg !9880
  ret i64 %12, !dbg !9894
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @sg_page(%struct.scatterlist* %sg) #0 !dbg !9895 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !9898, metadata !DIExpression()), !dbg !9899
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !9900
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !9901
  %1 = load i64, i64* %page_link, align 8, !dbg !9901
  %and = and i64 %1, -4, !dbg !9902
  %2 = inttoptr i64 %and to %struct.page*, !dbg !9903
  ret %struct.page* %2, !dbg !9904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmap_atomic(%struct.page* %page) #0 !dbg !9905 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !9909, metadata !DIExpression()), !dbg !9915
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !9917, metadata !DIExpression()), !dbg !9918
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9919, !srcloc !9920
  call void @pagefault_disable() #10, !dbg !9921
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !9922
  store %struct.page* %0, %struct.page** %page.addr.i, align 8
  %1 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !9923
  %2 = load i64, i64* @vmemmap_base, align 8, !dbg !9923
  %3 = inttoptr i64 %2 to %struct.page*, !dbg !9923
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %1 to i64, !dbg !9923
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %2, !dbg !9923
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !9923
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !9923
  %4 = load i64, i64* @page_offset_base, align 8, !dbg !9923
  %add.i = add i64 %shl.i, %4, !dbg !9923
  %5 = inttoptr i64 %add.i to i8*, !dbg !9923
  ret i8* %5, !dbg !9924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scsi_kunmap_atomic_sg(i8* %virt) #0 !dbg !9925 {
entry:
  %virt.addr = alloca i8*, align 8
  store i8* %virt, i8** %virt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %virt.addr, metadata !9926, metadata !DIExpression()), !dbg !9927
  br label %do.body, !dbg !9928

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9929

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !9931

do.end:                                           ; preds = %do.body1
  %0 = load i8*, i8** %virt.addr, align 8, !dbg !9929
  call void @kunmap_atomic_high(i8* %0) #10, !dbg !9929
  call void @pagefault_enable() #10, !dbg !9929
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9929, !srcloc !9933
  br label %do.end2, !dbg !9929

do.end2:                                          ; preds = %do.end
  ret void, !dbg !9934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kunmap_atomic_high(i8* %addr) #0 !dbg !9935 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  ret void, !dbg !9938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pagefault_enable() #0 !dbg !9939 {
entry:
  %pscr_ret__.i.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i.i, metadata !9288, metadata !DIExpression()), !dbg !9941
  %__vpp_verify.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i.i, metadata !9297, metadata !DIExpression()), !dbg !9945
  %pfo_val__.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i.i, metadata !9300, metadata !DIExpression()), !dbg !9946
  %tmp.i.i = alloca %struct.task_struct*, align 8
  %tmp1.i.i = alloca %struct.task_struct*, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9947, !srcloc !9948
  store i8* null, i8** %__vpp_verify.i.i, align 8, !dbg !9945
  %0 = load i8*, i8** %__vpp_verify.i.i, align 8, !dbg !9945
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !9946, !srcloc !9323
  store i64 %1, i64* %pfo_val__.i.i, align 8, !dbg !9946
  %2 = load i64, i64* %pfo_val__.i.i, align 8, !dbg !9946
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !9946
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i.i, align 8, !dbg !9946
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i.i, align 8, !dbg !9946
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !9941
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !9941
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i.i, align 8, !dbg !9941
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i.i, align 8, !dbg !9941
  %pagefault_disabled.i = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 123, !dbg !9949
  %7 = load i32, i32* %pagefault_disabled.i, align 8, !dbg !9950
  %dec.i = add i32 %7, -1, !dbg !9950
  store i32 %dec.i, i32* %pagefault_disabled.i, align 8, !dbg !9950
  ret void, !dbg !9951
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @sdev_disable_disk_events(%struct.scsi_device* %sdev) #0 !dbg !9952 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9953, metadata !DIExpression()), !dbg !9955
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5792, metadata !DIExpression()), !dbg !9959
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5802, metadata !DIExpression()), !dbg !9961
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9962, metadata !DIExpression()), !dbg !9963
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9964, metadata !DIExpression()), !dbg !9965
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9966
  %disk_events_disable_depth = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 41, !dbg !9967
  store %struct.atomic_t* %disk_events_disable_depth, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9968
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !9968
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9969
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !9970
  %conv.i.i = trunc i64 %4 to i32, !dbg !9970
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #11, !dbg !9971
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9972
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !9972
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !9972
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9973
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9974
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !9975
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !9976, !srcloc !9977
  ret void, !dbg !9978
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @sdev_enable_disk_events(%struct.scsi_device* %sdev) #0 !dbg !9979 {
entry:
  %v.addr.i1.i23 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i23, metadata !5781, metadata !DIExpression()), !dbg !9980
  %v.addr.i.i24 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i24, metadata !5792, metadata !DIExpression()), !dbg !9983
  %size.addr.i.i25 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i25, metadata !5802, metadata !DIExpression()), !dbg !9985
  %v.addr.i26 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i26, metadata !5804, metadata !DIExpression()), !dbg !9986
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9987, metadata !DIExpression()), !dbg !9993
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7162, metadata !DIExpression()), !dbg !9999
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7166, metadata !DIExpression()), !dbg !10001
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10002, metadata !DIExpression()), !dbg !10003
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !10004, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10006, metadata !DIExpression()), !dbg !10007
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10007
  %disk_events_disable_depth = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 41, !dbg !10007
  store %struct.atomic_t* %disk_events_disable_depth, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10008
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !10008
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10009
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !10010
  %conv.i.i = trunc i64 %4 to i32, !dbg !10010
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #11, !dbg !10011
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10012
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !10012
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #11, !dbg !10012
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10013
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10014
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !10014
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !10014
  %cmp = icmp sle i32 %9, 0, !dbg !10007
  %lnot = xor i1 %cmp, true, !dbg !10007
  %lnot1 = xor i1 %lnot, true, !dbg !10007
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10007
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10007
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !10015
  %tobool = icmp ne i32 %10, 0, !dbg !10015
  %lnot2 = xor i1 %tobool, true, !dbg !10015
  %lnot4 = xor i1 %lnot2, true, !dbg !10015
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !10015
  %conv = sext i32 %lnot.ext5 to i64, !dbg !10015
  %tobool6 = icmp ne i64 %conv, 0, !dbg !10015
  br i1 %tobool6, label %if.then, label %if.end, !dbg !10007

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10015

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !10017

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !10019

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !10017

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 2945, i32 2307, i64 12) #7, !dbg !10021, !srcloc !10023
  br label %do.end9, !dbg !10021

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 342) #7, !dbg !10024, !srcloc !10026
  br label %do.body10, !dbg !10017

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !10027

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !10017

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !10017

if.end:                                           ; preds = %do.end12, %entry
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !10007
  %tobool13 = icmp ne i32 %11, 0, !dbg !10007
  %lnot14 = xor i1 %tobool13, true, !dbg !10007
  %lnot16 = xor i1 %lnot14, true, !dbg !10007
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !10007
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !10007
  store i64 %conv18, i64* %tmp, align 8, !dbg !10015
  %12 = load i64, i64* %tmp, align 8, !dbg !10007
  %tobool19 = icmp ne i64 %12, 0, !dbg !10029
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !10030

if.then20:                                        ; preds = %if.end
  br label %return, !dbg !10031

if.end21:                                         ; preds = %if.end
  %13 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10032
  %disk_events_disable_depth22 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %13, i32 0, i32 41, !dbg !10033
  store %struct.atomic_t* %disk_events_disable_depth22, %struct.atomic_t** %v.addr.i26, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i26, align 8, !dbg !10034
  %15 = bitcast %struct.atomic_t* %14 to i8*, !dbg !10034
  store i8* %15, i8** %v.addr.i.i24, align 8
  store i64 4, i64* %size.addr.i.i25, align 8
  %16 = load i8*, i8** %v.addr.i.i24, align 8, !dbg !10035
  %17 = load i64, i64* %size.addr.i.i25, align 8, !dbg !10036
  %conv.i.i27 = trunc i64 %17 to i32, !dbg !10036
  %call.i.i28 = call zeroext i1 @kasan_check_write(i8* %16, i32 %conv.i.i27) #11, !dbg !10037
  %18 = load i8*, i8** %v.addr.i.i24, align 8, !dbg !10038
  %19 = load i64, i64* %size.addr.i.i25, align 8, !dbg !10038
  call void @kcsan_check_access(i8* %18, i64 %19, i32 7) #11, !dbg !10038
  %20 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i26, align 8, !dbg !10039
  store %struct.atomic_t* %20, %struct.atomic_t** %v.addr.i1.i23, align 8
  %21 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i23, align 8, !dbg !10040
  %counter.i.i29 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %21, i32 0, i32 0, !dbg !10041
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i29, i32* %counter.i.i29) #7, !dbg !10042, !srcloc !5844
  br label %return, !dbg !10043

return:                                           ; preds = %if.end21, %if.then20
  ret void, !dbg !10043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_vpd_lun_id(%struct.scsi_device* %sdev, i8* %id, i64 %id_len) #0 !dbg !10044 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %id.addr = alloca i8*, align 8
  %id_len.addr = alloca i64, align 8
  %cur_id_type = alloca i8, align 1
  %cur_id_size = alloca i8, align 1
  %d = alloca i8*, align 8
  %cur_id_str = alloca i8*, align 8
  %vpd_pg83 = alloca %struct.scsi_vpd*, align 8
  %id_size = alloca i32, align 4
  %________p1 = alloca %struct.scsi_vpd*, align 8
  %tmp = alloca %struct.scsi_vpd*, align 8
  %tmp4 = alloca %struct.scsi_vpd*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !10047, metadata !DIExpression()), !dbg !10048
  store i8* %id, i8** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %id.addr, metadata !10049, metadata !DIExpression()), !dbg !10050
  store i64 %id_len, i64* %id_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %id_len.addr, metadata !10051, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.declare(metadata i8* %cur_id_type, metadata !10053, metadata !DIExpression()), !dbg !10054
  store i8 -1, i8* %cur_id_type, align 1, !dbg !10054
  call void @llvm.dbg.declare(metadata i8* %cur_id_size, metadata !10055, metadata !DIExpression()), !dbg !10056
  store i8 0, i8* %cur_id_size, align 1, !dbg !10056
  call void @llvm.dbg.declare(metadata i8** %d, metadata !10057, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.declare(metadata i8** %cur_id_str, metadata !10059, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.declare(metadata %struct.scsi_vpd** %vpd_pg83, metadata !10061, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.declare(metadata i32* %id_size, metadata !10065, metadata !DIExpression()), !dbg !10066
  store i32 -22, i32* %id_size, align 4, !dbg !10066
  call void @__rcu_read_lock() #11, !dbg !10067
  call void @llvm.dbg.declare(metadata %struct.scsi_vpd** %________p1, metadata !10069, metadata !DIExpression()), !dbg !10071
  br label %do.body, !dbg !10072

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10074

do.end:                                           ; preds = %do.body
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10072
  %vpd_pg831 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 32, !dbg !10072
  %1 = load volatile %struct.scsi_vpd*, %struct.scsi_vpd** %vpd_pg831, align 8, !dbg !10072
  store %struct.scsi_vpd* %1, %struct.scsi_vpd** %tmp, align 8, !dbg !10074
  %2 = load %struct.scsi_vpd*, %struct.scsi_vpd** %tmp, align 8, !dbg !10072
  store %struct.scsi_vpd* %2, %struct.scsi_vpd** %________p1, align 8, !dbg !10071
  br label %do.body2, !dbg !10071

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !10076

do.end3:                                          ; preds = %do.body2
  %3 = load %struct.scsi_vpd*, %struct.scsi_vpd** %________p1, align 8, !dbg !10071
  store %struct.scsi_vpd* %3, %struct.scsi_vpd** %tmp4, align 8, !dbg !10076
  %4 = load %struct.scsi_vpd*, %struct.scsi_vpd** %tmp4, align 8, !dbg !10071
  store %struct.scsi_vpd* %4, %struct.scsi_vpd** %vpd_pg83, align 8, !dbg !10078
  %5 = load %struct.scsi_vpd*, %struct.scsi_vpd** %vpd_pg83, align 8, !dbg !10079
  %tobool = icmp ne %struct.scsi_vpd* %5, null, !dbg !10079
  br i1 %tobool, label %if.end, label %if.then, !dbg !10081

if.then:                                          ; preds = %do.end3
  call void @rcu_read_unlock() #10, !dbg !10082
  store i32 -6, i32* %retval, align 4, !dbg !10084
  br label %return, !dbg !10084

if.end:                                           ; preds = %do.end3
  %6 = load i64, i64* %id_len.addr, align 8, !dbg !10085
  %cmp = icmp ult i64 %6, 21, !dbg !10087
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !10088

if.then5:                                         ; preds = %if.end
  call void @rcu_read_unlock() #10, !dbg !10089
  store i32 -22, i32* %retval, align 4, !dbg !10091
  br label %return, !dbg !10091

if.end6:                                          ; preds = %if.end
  %7 = load i8*, i8** %id.addr, align 8, !dbg !10092
  %8 = load i64, i64* %id_len.addr, align 8, !dbg !10093
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 %8, i1 false), !dbg !10094
  %9 = load %struct.scsi_vpd*, %struct.scsi_vpd** %vpd_pg83, align 8, !dbg !10095
  %data = getelementptr inbounds %struct.scsi_vpd, %struct.scsi_vpd* %9, i32 0, i32 2, !dbg !10096
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %data, i64 0, i64 0, !dbg !10095
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 4, !dbg !10097
  store i8* %add.ptr, i8** %d, align 8, !dbg !10098
  br label %while.cond, !dbg !10099

while.cond:                                       ; preds = %next_desig, %if.end6
  %10 = load i8*, i8** %d, align 8, !dbg !10100
  %11 = load %struct.scsi_vpd*, %struct.scsi_vpd** %vpd_pg83, align 8, !dbg !10101
  %data7 = getelementptr inbounds %struct.scsi_vpd, %struct.scsi_vpd* %11, i32 0, i32 2, !dbg !10102
  %arraydecay8 = getelementptr inbounds [0 x i8], [0 x i8]* %data7, i64 0, i64 0, !dbg !10101
  %12 = load %struct.scsi_vpd*, %struct.scsi_vpd** %vpd_pg83, align 8, !dbg !10103
  %len = getelementptr inbounds %struct.scsi_vpd, %struct.scsi_vpd* %12, i32 0, i32 1, !dbg !10104
  %13 = load i32, i32* %len, align 8, !dbg !10104
  %idx.ext = sext i32 %13 to i64, !dbg !10105
  %add.ptr9 = getelementptr i8, i8* %arraydecay8, i64 %idx.ext, !dbg !10105
  %cmp10 = icmp ult i8* %10, %add.ptr9, !dbg !10106
  br i1 %cmp10, label %while.body, label %while.end, !dbg !10099

while.body:                                       ; preds = %while.cond
  %14 = load i8*, i8** %d, align 8, !dbg !10107
  %arrayidx = getelementptr i8, i8* %14, i64 1, !dbg !10107
  %15 = load i8, i8* %arrayidx, align 1, !dbg !10107
  %conv = zext i8 %15 to i32, !dbg !10107
  %and = and i32 %conv, 48, !dbg !10110
  %cmp11 = icmp ne i32 %and, 0, !dbg !10111
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !10112

if.then13:                                        ; preds = %while.body
  br label %next_desig, !dbg !10113

if.end14:                                         ; preds = %while.body
  %16 = load i8*, i8** %d, align 8, !dbg !10114
  %arrayidx15 = getelementptr i8, i8* %16, i64 1, !dbg !10114
  %17 = load i8, i8* %arrayidx15, align 1, !dbg !10114
  %conv16 = zext i8 %17 to i32, !dbg !10114
  %and17 = and i32 %conv16, 15, !dbg !10115
  switch i32 %and17, label %sw.default139 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb47
    i32 3, label %sw.bb79
    i32 8, label %sw.bb100
  ], !dbg !10116

sw.bb:                                            ; preds = %if.end14
  %18 = load i8, i8* %cur_id_size, align 1, !dbg !10117
  %conv18 = zext i8 %18 to i32, !dbg !10117
  %19 = load i8*, i8** %d, align 8, !dbg !10120
  %arrayidx19 = getelementptr i8, i8* %19, i64 3, !dbg !10120
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !10120
  %conv20 = zext i8 %20 to i32, !dbg !10120
  %cmp21 = icmp sgt i32 %conv18, %conv20, !dbg !10121
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !10122

if.then23:                                        ; preds = %sw.bb
  br label %sw.epilog140, !dbg !10123

if.end24:                                         ; preds = %sw.bb
  %21 = load i8, i8* %cur_id_type, align 1, !dbg !10124
  %conv25 = zext i8 %21 to i32, !dbg !10124
  %cmp26 = icmp sgt i32 %conv25, 1, !dbg !10126
  br i1 %cmp26, label %land.lhs.true, label %if.end32, !dbg !10127

land.lhs.true:                                    ; preds = %if.end24
  %22 = load i8, i8* %cur_id_type, align 1, !dbg !10128
  %conv28 = zext i8 %22 to i32, !dbg !10128
  %cmp29 = icmp ne i32 %conv28, 255, !dbg !10129
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !10130

if.then31:                                        ; preds = %land.lhs.true
  br label %sw.epilog140, !dbg !10131

if.end32:                                         ; preds = %land.lhs.true, %if.end24
  %23 = load i8*, i8** %d, align 8, !dbg !10132
  %arrayidx33 = getelementptr i8, i8* %23, i64 3, !dbg !10132
  %24 = load i8, i8* %arrayidx33, align 1, !dbg !10132
  store i8 %24, i8* %cur_id_size, align 1, !dbg !10133
  %25 = load i8, i8* %cur_id_size, align 1, !dbg !10134
  %conv34 = zext i8 %25 to i32, !dbg !10134
  %add = add i32 %conv34, 4, !dbg !10136
  %conv35 = sext i32 %add to i64, !dbg !10134
  %26 = load i64, i64* %id_len.addr, align 8, !dbg !10137
  %cmp36 = icmp ugt i64 %conv35, %26, !dbg !10138
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !10139

if.then38:                                        ; preds = %if.end32
  %27 = load i64, i64* %id_len.addr, align 8, !dbg !10140
  %sub = sub i64 %27, 4, !dbg !10141
  %conv39 = trunc i64 %sub to i8, !dbg !10140
  store i8 %conv39, i8* %cur_id_size, align 1, !dbg !10142
  br label %if.end40, !dbg !10143

if.end40:                                         ; preds = %if.then38, %if.end32
  %28 = load i8*, i8** %d, align 8, !dbg !10144
  %add.ptr41 = getelementptr i8, i8* %28, i64 4, !dbg !10145
  store i8* %add.ptr41, i8** %cur_id_str, align 8, !dbg !10146
  %29 = load i8*, i8** %d, align 8, !dbg !10147
  %arrayidx42 = getelementptr i8, i8* %29, i64 1, !dbg !10147
  %30 = load i8, i8* %arrayidx42, align 1, !dbg !10147
  %conv43 = zext i8 %30 to i32, !dbg !10147
  %and44 = and i32 %conv43, 15, !dbg !10148
  %conv45 = trunc i32 %and44 to i8, !dbg !10147
  store i8 %conv45, i8* %cur_id_type, align 1, !dbg !10149
  %31 = load i8*, i8** %id.addr, align 8, !dbg !10150
  %32 = load i64, i64* %id_len.addr, align 8, !dbg !10151
  %33 = load i8, i8* %cur_id_size, align 1, !dbg !10152
  %conv46 = zext i8 %33 to i32, !dbg !10152
  %34 = load i8*, i8** %cur_id_str, align 8, !dbg !10153
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %31, i64 %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 %conv46, i8* %34) #10, !dbg !10154
  store i32 %call, i32* %id_size, align 4, !dbg !10155
  br label %sw.epilog140, !dbg !10156

sw.bb47:                                          ; preds = %if.end14
  %35 = load i8, i8* %cur_id_size, align 1, !dbg !10157
  %conv48 = zext i8 %35 to i32, !dbg !10157
  %36 = load i8*, i8** %d, align 8, !dbg !10159
  %arrayidx49 = getelementptr i8, i8* %36, i64 3, !dbg !10159
  %37 = load i8, i8* %arrayidx49, align 1, !dbg !10159
  %conv50 = zext i8 %37 to i32, !dbg !10159
  %cmp51 = icmp sgt i32 %conv48, %conv50, !dbg !10160
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !10161

if.then53:                                        ; preds = %sw.bb47
  br label %sw.epilog140, !dbg !10162

if.end54:                                         ; preds = %sw.bb47
  %38 = load i8, i8* %cur_id_type, align 1, !dbg !10163
  %conv55 = zext i8 %38 to i32, !dbg !10163
  %cmp56 = icmp eq i32 %conv55, 3, !dbg !10165
  br i1 %cmp56, label %land.lhs.true58, label %if.end65, !dbg !10166

land.lhs.true58:                                  ; preds = %if.end54
  %39 = load i8, i8* %cur_id_size, align 1, !dbg !10167
  %conv59 = zext i8 %39 to i32, !dbg !10167
  %40 = load i8*, i8** %d, align 8, !dbg !10168
  %arrayidx60 = getelementptr i8, i8* %40, i64 3, !dbg !10168
  %41 = load i8, i8* %arrayidx60, align 1, !dbg !10168
  %conv61 = zext i8 %41 to i32, !dbg !10168
  %cmp62 = icmp eq i32 %conv59, %conv61, !dbg !10169
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !10170

if.then64:                                        ; preds = %land.lhs.true58
  br label %sw.epilog140, !dbg !10171

if.end65:                                         ; preds = %land.lhs.true58, %if.end54
  %42 = load i8*, i8** %d, align 8, !dbg !10172
  %arrayidx66 = getelementptr i8, i8* %42, i64 3, !dbg !10172
  %43 = load i8, i8* %arrayidx66, align 1, !dbg !10172
  store i8 %43, i8* %cur_id_size, align 1, !dbg !10173
  %44 = load i8*, i8** %d, align 8, !dbg !10174
  %add.ptr67 = getelementptr i8, i8* %44, i64 4, !dbg !10175
  store i8* %add.ptr67, i8** %cur_id_str, align 8, !dbg !10176
  %45 = load i8*, i8** %d, align 8, !dbg !10177
  %arrayidx68 = getelementptr i8, i8* %45, i64 1, !dbg !10177
  %46 = load i8, i8* %arrayidx68, align 1, !dbg !10177
  %conv69 = zext i8 %46 to i32, !dbg !10177
  %and70 = and i32 %conv69, 15, !dbg !10178
  %conv71 = trunc i32 %and70 to i8, !dbg !10177
  store i8 %conv71, i8* %cur_id_type, align 1, !dbg !10179
  %47 = load i8, i8* %cur_id_size, align 1, !dbg !10180
  %conv72 = zext i8 %47 to i32, !dbg !10180
  switch i32 %conv72, label %sw.default [
    i32 8, label %sw.bb73
    i32 12, label %sw.bb75
    i32 16, label %sw.bb77
  ], !dbg !10181

sw.bb73:                                          ; preds = %if.end65
  %48 = load i8*, i8** %id.addr, align 8, !dbg !10182
  %49 = load i64, i64* %id_len.addr, align 8, !dbg !10184
  %50 = load i8*, i8** %cur_id_str, align 8, !dbg !10185
  %call74 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %48, i64 %49, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8* %50) #10, !dbg !10186
  store i32 %call74, i32* %id_size, align 4, !dbg !10187
  br label %sw.epilog, !dbg !10188

sw.bb75:                                          ; preds = %if.end65
  %51 = load i8*, i8** %id.addr, align 8, !dbg !10189
  %52 = load i64, i64* %id_len.addr, align 8, !dbg !10190
  %53 = load i8*, i8** %cur_id_str, align 8, !dbg !10191
  %call76 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %51, i64 %52, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %53) #10, !dbg !10192
  store i32 %call76, i32* %id_size, align 4, !dbg !10193
  br label %sw.epilog, !dbg !10194

sw.bb77:                                          ; preds = %if.end65
  %54 = load i8*, i8** %id.addr, align 8, !dbg !10195
  %55 = load i64, i64* %id_len.addr, align 8, !dbg !10196
  %56 = load i8*, i8** %cur_id_str, align 8, !dbg !10197
  %call78 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %54, i64 %55, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* %56) #10, !dbg !10198
  store i32 %call78, i32* %id_size, align 4, !dbg !10199
  br label %sw.epilog, !dbg !10200

sw.default:                                       ; preds = %if.end65
  store i8 0, i8* %cur_id_size, align 1, !dbg !10201
  br label %sw.epilog, !dbg !10202

sw.epilog:                                        ; preds = %sw.default, %sw.bb77, %sw.bb75, %sw.bb73
  br label %sw.epilog140, !dbg !10203

sw.bb79:                                          ; preds = %if.end14
  %57 = load i8, i8* %cur_id_size, align 1, !dbg !10204
  %conv80 = zext i8 %57 to i32, !dbg !10204
  %58 = load i8*, i8** %d, align 8, !dbg !10206
  %arrayidx81 = getelementptr i8, i8* %58, i64 3, !dbg !10206
  %59 = load i8, i8* %arrayidx81, align 1, !dbg !10206
  %conv82 = zext i8 %59 to i32, !dbg !10206
  %cmp83 = icmp sgt i32 %conv80, %conv82, !dbg !10207
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !10208

if.then85:                                        ; preds = %sw.bb79
  br label %sw.epilog140, !dbg !10209

if.end86:                                         ; preds = %sw.bb79
  %60 = load i8*, i8** %d, align 8, !dbg !10210
  %arrayidx87 = getelementptr i8, i8* %60, i64 3, !dbg !10210
  %61 = load i8, i8* %arrayidx87, align 1, !dbg !10210
  store i8 %61, i8* %cur_id_size, align 1, !dbg !10211
  %62 = load i8*, i8** %d, align 8, !dbg !10212
  %add.ptr88 = getelementptr i8, i8* %62, i64 4, !dbg !10213
  store i8* %add.ptr88, i8** %cur_id_str, align 8, !dbg !10214
  %63 = load i8*, i8** %d, align 8, !dbg !10215
  %arrayidx89 = getelementptr i8, i8* %63, i64 1, !dbg !10215
  %64 = load i8, i8* %arrayidx89, align 1, !dbg !10215
  %conv90 = zext i8 %64 to i32, !dbg !10215
  %and91 = and i32 %conv90, 15, !dbg !10216
  %conv92 = trunc i32 %and91 to i8, !dbg !10215
  store i8 %conv92, i8* %cur_id_type, align 1, !dbg !10217
  %65 = load i8, i8* %cur_id_size, align 1, !dbg !10218
  %conv93 = zext i8 %65 to i32, !dbg !10218
  switch i32 %conv93, label %sw.default98 [
    i32 8, label %sw.bb94
    i32 16, label %sw.bb96
  ], !dbg !10219

sw.bb94:                                          ; preds = %if.end86
  %66 = load i8*, i8** %id.addr, align 8, !dbg !10220
  %67 = load i64, i64* %id_len.addr, align 8, !dbg !10222
  %68 = load i8*, i8** %cur_id_str, align 8, !dbg !10223
  %call95 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %66, i64 %67, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* %68) #10, !dbg !10224
  store i32 %call95, i32* %id_size, align 4, !dbg !10225
  br label %sw.epilog99, !dbg !10226

sw.bb96:                                          ; preds = %if.end86
  %69 = load i8*, i8** %id.addr, align 8, !dbg !10227
  %70 = load i64, i64* %id_len.addr, align 8, !dbg !10228
  %71 = load i8*, i8** %cur_id_str, align 8, !dbg !10229
  %call97 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %69, i64 %70, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %71) #10, !dbg !10230
  store i32 %call97, i32* %id_size, align 4, !dbg !10231
  br label %sw.epilog99, !dbg !10232

sw.default98:                                     ; preds = %if.end86
  store i8 0, i8* %cur_id_size, align 1, !dbg !10233
  br label %sw.epilog99, !dbg !10234

sw.epilog99:                                      ; preds = %sw.default98, %sw.bb96, %sw.bb94
  br label %sw.epilog140, !dbg !10235

sw.bb100:                                         ; preds = %if.end14
  %72 = load i8, i8* %cur_id_size, align 1, !dbg !10236
  %conv101 = zext i8 %72 to i32, !dbg !10236
  %add102 = add i32 %conv101, 4, !dbg !10238
  %73 = load i8*, i8** %d, align 8, !dbg !10239
  %arrayidx103 = getelementptr i8, i8* %73, i64 3, !dbg !10239
  %74 = load i8, i8* %arrayidx103, align 1, !dbg !10239
  %conv104 = zext i8 %74 to i32, !dbg !10239
  %cmp105 = icmp sgt i32 %add102, %conv104, !dbg !10240
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !10241

if.then107:                                       ; preds = %sw.bb100
  br label %sw.epilog140, !dbg !10242

if.end108:                                        ; preds = %sw.bb100
  %75 = load i8, i8* %cur_id_size, align 1, !dbg !10243
  %conv109 = zext i8 %75 to i32, !dbg !10243
  %tobool110 = icmp ne i32 %conv109, 0, !dbg !10243
  br i1 %tobool110, label %land.lhs.true111, label %if.end117, !dbg !10245

land.lhs.true111:                                 ; preds = %if.end108
  %76 = load i8*, i8** %d, align 8, !dbg !10246
  %arrayidx112 = getelementptr i8, i8* %76, i64 3, !dbg !10246
  %77 = load i8, i8* %arrayidx112, align 1, !dbg !10246
  %conv113 = zext i8 %77 to i64, !dbg !10246
  %78 = load i64, i64* %id_len.addr, align 8, !dbg !10247
  %cmp114 = icmp ugt i64 %conv113, %78, !dbg !10248
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !10249

if.then116:                                       ; preds = %land.lhs.true111
  br label %sw.epilog140, !dbg !10250

if.end117:                                        ; preds = %land.lhs.true111, %if.end108
  %79 = load i8*, i8** %d, align 8, !dbg !10251
  %arrayidx118 = getelementptr i8, i8* %79, i64 3, !dbg !10251
  %80 = load i8, i8* %arrayidx118, align 1, !dbg !10251
  %conv119 = zext i8 %80 to i32, !dbg !10251
  store i32 %conv119, i32* %id_size, align 4, !dbg !10252
  %conv120 = trunc i32 %conv119 to i8, !dbg !10253
  store i8 %conv120, i8* %cur_id_size, align 1, !dbg !10254
  %81 = load i8*, i8** %d, align 8, !dbg !10255
  %add.ptr121 = getelementptr i8, i8* %81, i64 4, !dbg !10256
  store i8* %add.ptr121, i8** %cur_id_str, align 8, !dbg !10257
  %82 = load i8*, i8** %d, align 8, !dbg !10258
  %arrayidx122 = getelementptr i8, i8* %82, i64 1, !dbg !10258
  %83 = load i8, i8* %arrayidx122, align 1, !dbg !10258
  %conv123 = zext i8 %83 to i32, !dbg !10258
  %and124 = and i32 %conv123, 15, !dbg !10259
  %conv125 = trunc i32 %and124 to i8, !dbg !10258
  store i8 %conv125, i8* %cur_id_type, align 1, !dbg !10260
  %84 = load i8, i8* %cur_id_size, align 1, !dbg !10261
  %conv126 = zext i8 %84 to i64, !dbg !10261
  %85 = load i64, i64* %id_len.addr, align 8, !dbg !10263
  %cmp127 = icmp uge i64 %conv126, %85, !dbg !10264
  br i1 %cmp127, label %if.then129, label %if.end132, !dbg !10265

if.then129:                                       ; preds = %if.end117
  %86 = load i64, i64* %id_len.addr, align 8, !dbg !10266
  %sub130 = sub i64 %86, 1, !dbg !10267
  %conv131 = trunc i64 %sub130 to i8, !dbg !10266
  store i8 %conv131, i8* %cur_id_size, align 1, !dbg !10268
  br label %if.end132, !dbg !10269

if.end132:                                        ; preds = %if.then129, %if.end117
  %87 = load i8*, i8** %id.addr, align 8, !dbg !10270
  %88 = load i8*, i8** %cur_id_str, align 8, !dbg !10271
  %89 = load i8, i8* %cur_id_size, align 1, !dbg !10272
  %conv133 = zext i8 %89 to i64, !dbg !10272
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %88, i64 %conv133, i1 false), !dbg !10273
  %90 = load i8, i8* %cur_id_size, align 1, !dbg !10274
  %conv134 = zext i8 %90 to i32, !dbg !10274
  %91 = load i32, i32* %id_size, align 4, !dbg !10276
  %cmp135 = icmp ne i32 %conv134, %91, !dbg !10277
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !10278

if.then137:                                       ; preds = %if.end132
  store i8 6, i8* %cur_id_size, align 1, !dbg !10279
  br label %if.end138, !dbg !10280

if.end138:                                        ; preds = %if.then137, %if.end132
  br label %sw.epilog140, !dbg !10281

sw.default139:                                    ; preds = %if.end14
  br label %sw.epilog140, !dbg !10282

sw.epilog140:                                     ; preds = %sw.default139, %if.end138, %if.then116, %if.then107, %sw.epilog99, %if.then85, %sw.epilog, %if.then64, %if.then53, %if.end40, %if.then31, %if.then23
  br label %next_desig, !dbg !10283

next_desig:                                       ; preds = %sw.epilog140, %if.then13
  call void @llvm.dbg.label(metadata !10284), !dbg !10285
  %92 = load i8*, i8** %d, align 8, !dbg !10286
  %arrayidx141 = getelementptr i8, i8* %92, i64 3, !dbg !10286
  %93 = load i8, i8* %arrayidx141, align 1, !dbg !10286
  %conv142 = zext i8 %93 to i32, !dbg !10286
  %add143 = add i32 %conv142, 4, !dbg !10287
  %94 = load i8*, i8** %d, align 8, !dbg !10288
  %idx.ext144 = sext i32 %add143 to i64, !dbg !10288
  %add.ptr145 = getelementptr i8, i8* %94, i64 %idx.ext144, !dbg !10288
  store i8* %add.ptr145, i8** %d, align 8, !dbg !10288
  br label %while.cond, !dbg !10099, !llvm.loop !10289

while.end:                                        ; preds = %while.cond
  call void @rcu_read_unlock() #10, !dbg !10291
  %95 = load i32, i32* %id_size, align 4, !dbg !10292
  store i32 %95, i32* %retval, align 4, !dbg !10293
  br label %return, !dbg !10293

return:                                           ; preds = %while.end, %if.then5, %if.then
  %96 = load i32, i32* %retval, align 4, !dbg !10294
  ret i32 %96, !dbg !10294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rcu_read_unlock() #0 !dbg !10295 {
entry:
  br label %do.body, !dbg !10296

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10297

do.end:                                           ; preds = %do.body
  call void @__rcu_read_unlock() #10, !dbg !10299
  br label %do.body1, !dbg !10300

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !10301

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !10303
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @scsi_vpd_tpg_id(%struct.scsi_device* %sdev, i32* %rel_id) #0 !dbg !10304 {
entry:
  %p.addr.i.i.i26 = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i.i26, metadata !10307, metadata !DIExpression()), !dbg !10314
  %p.addr.i.i27 = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i27, metadata !10330, metadata !DIExpression()), !dbg !10331
  %p.addr.i28 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i28, metadata !10332, metadata !DIExpression()), !dbg !10333
  %p.addr.i.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i.i, metadata !10307, metadata !DIExpression()), !dbg !10334
  %p.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i, metadata !10330, metadata !DIExpression()), !dbg !10338
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !10332, metadata !DIExpression()), !dbg !10339
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %rel_id.addr = alloca i32*, align 8
  %d = alloca i8*, align 8
  %vpd_pg83 = alloca %struct.scsi_vpd*, align 8
  %group_id = alloca i32, align 4
  %rel_port = alloca i32, align 4
  %________p1 = alloca %struct.scsi_vpd*, align 8
  %tmp = alloca %struct.scsi_vpd*, align 8
  %tmp4 = alloca %struct.scsi_vpd*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !10340, metadata !DIExpression()), !dbg !10341
  store i32* %rel_id, i32** %rel_id.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rel_id.addr, metadata !10342, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.declare(metadata i8** %d, metadata !10344, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.declare(metadata %struct.scsi_vpd** %vpd_pg83, metadata !10346, metadata !DIExpression()), !dbg !10347
  call void @llvm.dbg.declare(metadata i32* %group_id, metadata !10348, metadata !DIExpression()), !dbg !10349
  store i32 -11, i32* %group_id, align 4, !dbg !10349
  call void @llvm.dbg.declare(metadata i32* %rel_port, metadata !10350, metadata !DIExpression()), !dbg !10351
  store i32 -1, i32* %rel_port, align 4, !dbg !10351
  call void @__rcu_read_lock() #11, !dbg !10352
  call void @llvm.dbg.declare(metadata %struct.scsi_vpd** %________p1, metadata !10354, metadata !DIExpression()), !dbg !10356
  br label %do.body, !dbg !10357

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10359

do.end:                                           ; preds = %do.body
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !10357
  %vpd_pg831 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 32, !dbg !10357
  %1 = load volatile %struct.scsi_vpd*, %struct.scsi_vpd** %vpd_pg831, align 8, !dbg !10357
  store %struct.scsi_vpd* %1, %struct.scsi_vpd** %tmp, align 8, !dbg !10359
  %2 = load %struct.scsi_vpd*, %struct.scsi_vpd** %tmp, align 8, !dbg !10357
  store %struct.scsi_vpd* %2, %struct.scsi_vpd** %________p1, align 8, !dbg !10356
  br label %do.body2, !dbg !10356

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !10361

do.end3:                                          ; preds = %do.body2
  %3 = load %struct.scsi_vpd*, %struct.scsi_vpd** %________p1, align 8, !dbg !10356
  store %struct.scsi_vpd* %3, %struct.scsi_vpd** %tmp4, align 8, !dbg !10361
  %4 = load %struct.scsi_vpd*, %struct.scsi_vpd** %tmp4, align 8, !dbg !10356
  store %struct.scsi_vpd* %4, %struct.scsi_vpd** %vpd_pg83, align 8, !dbg !10363
  %5 = load %struct.scsi_vpd*, %struct.scsi_vpd** %vpd_pg83, align 8, !dbg !10364
  %tobool = icmp ne %struct.scsi_vpd* %5, null, !dbg !10364
  br i1 %tobool, label %if.end, label %if.then, !dbg !10366

if.then:                                          ; preds = %do.end3
  call void @rcu_read_unlock() #10, !dbg !10367
  store i32 -6, i32* %retval, align 4, !dbg !10369
  br label %return, !dbg !10369

if.end:                                           ; preds = %do.end3
  %6 = load %struct.scsi_vpd*, %struct.scsi_vpd** %vpd_pg83, align 8, !dbg !10370
  %data = getelementptr inbounds %struct.scsi_vpd, %struct.scsi_vpd* %6, i32 0, i32 2, !dbg !10371
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %data, i64 0, i64 0, !dbg !10370
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 4, !dbg !10372
  store i8* %add.ptr, i8** %d, align 8, !dbg !10373
  br label %while.cond, !dbg !10374

while.cond:                                       ; preds = %sw.epilog, %if.end
  %7 = load i8*, i8** %d, align 8, !dbg !10375
  %8 = load %struct.scsi_vpd*, %struct.scsi_vpd** %vpd_pg83, align 8, !dbg !10376
  %data5 = getelementptr inbounds %struct.scsi_vpd, %struct.scsi_vpd* %8, i32 0, i32 2, !dbg !10377
  %arraydecay6 = getelementptr inbounds [0 x i8], [0 x i8]* %data5, i64 0, i64 0, !dbg !10376
  %9 = load %struct.scsi_vpd*, %struct.scsi_vpd** %vpd_pg83, align 8, !dbg !10378
  %len = getelementptr inbounds %struct.scsi_vpd, %struct.scsi_vpd* %9, i32 0, i32 1, !dbg !10379
  %10 = load i32, i32* %len, align 8, !dbg !10379
  %idx.ext = sext i32 %10 to i64, !dbg !10380
  %add.ptr7 = getelementptr i8, i8* %arraydecay6, i64 %idx.ext, !dbg !10380
  %cmp = icmp ult i8* %7, %add.ptr7, !dbg !10381
  br i1 %cmp, label %while.body, label %while.end, !dbg !10374

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %d, align 8, !dbg !10382
  %arrayidx = getelementptr i8, i8* %11, i64 1, !dbg !10382
  %12 = load i8, i8* %arrayidx, align 1, !dbg !10382
  %conv = zext i8 %12 to i32, !dbg !10382
  %and = and i32 %conv, 15, !dbg !10383
  switch i32 %and, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb10
  ], !dbg !10384

sw.bb:                                            ; preds = %while.body
  %13 = load i8*, i8** %d, align 8, !dbg !10385
  %arrayidx8 = getelementptr i8, i8* %13, i64 6, !dbg !10385
  store i8* %arrayidx8, i8** %p.addr.i, align 8
  %14 = load i8*, i8** %p.addr.i, align 8, !dbg !10386
  %15 = bitcast i8* %14 to i16*, !dbg !10387
  store i16* %15, i16** %p.addr.i.i, align 8
  %16 = load i16*, i16** %p.addr.i.i, align 8, !dbg !10388
  store i16* %16, i16** %p.addr.i.i.i, align 8
  %17 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !10389
  %18 = load i16, i16* %17, align 2, !dbg !10389
  %19 = call i1 @llvm.is.constant.i16(i16 %18) #7, !dbg !10389
  br i1 %19, label %cond.true.i.i.i, label %cond.false.i.i.i, !dbg !10389

cond.true.i.i.i:                                  ; preds = %sw.bb
  %20 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !10389
  %21 = load i16, i16* %20, align 2, !dbg !10389
  %conv.i.i.i = zext i16 %21 to i32, !dbg !10389
  %and.i.i.i = and i32 %conv.i.i.i, 255, !dbg !10389
  %shl.i.i.i = shl i32 %and.i.i.i, 8, !dbg !10389
  %22 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !10389
  %23 = load i16, i16* %22, align 2, !dbg !10389
  %conv1.i.i.i = zext i16 %23 to i32, !dbg !10389
  %and2.i.i.i = and i32 %conv1.i.i.i, 65280, !dbg !10389
  %shr.i.i.i = ashr i32 %and2.i.i.i, 8, !dbg !10389
  %or.i.i.i = or i32 %shl.i.i.i, %shr.i.i.i, !dbg !10389
  %conv3.i.i.i = trunc i32 %or.i.i.i to i16, !dbg !10389
  %conv4.i.i.i = zext i16 %conv3.i.i.i to i32, !dbg !10389
  br label %get_unaligned_be16.exit, !dbg !10389

cond.false.i.i.i:                                 ; preds = %sw.bb
  %24 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !10389
  %25 = load i16, i16* %24, align 2, !dbg !10389
  %call.i.i.i = call zeroext i16 @__fswab16(i16 zeroext %25) #12, !dbg !10389
  %conv5.i.i.i = zext i16 %call.i.i.i to i32, !dbg !10389
  br label %get_unaligned_be16.exit, !dbg !10389

get_unaligned_be16.exit:                          ; preds = %cond.true.i.i.i, %cond.false.i.i.i
  %cond.i.i.i = phi i32 [ %conv4.i.i.i, %cond.true.i.i.i ], [ %conv5.i.i.i, %cond.false.i.i.i ], !dbg !10389
  %conv6.i.i.i = trunc i32 %cond.i.i.i to i16, !dbg !10389
  %conv9 = zext i16 %conv6.i.i.i to i32, !dbg !10390
  store i32 %conv9, i32* %rel_port, align 4, !dbg !10391
  br label %sw.epilog, !dbg !10392

sw.bb10:                                          ; preds = %while.body
  %26 = load i8*, i8** %d, align 8, !dbg !10393
  %arrayidx11 = getelementptr i8, i8* %26, i64 6, !dbg !10393
  store i8* %arrayidx11, i8** %p.addr.i28, align 8
  %27 = load i8*, i8** %p.addr.i28, align 8, !dbg !10394
  %28 = bitcast i8* %27 to i16*, !dbg !10395
  store i16* %28, i16** %p.addr.i.i27, align 8
  %29 = load i16*, i16** %p.addr.i.i27, align 8, !dbg !10396
  store i16* %29, i16** %p.addr.i.i.i26, align 8
  %30 = load i16*, i16** %p.addr.i.i.i26, align 8, !dbg !10397
  %31 = load i16, i16* %30, align 2, !dbg !10397
  %32 = call i1 @llvm.is.constant.i16(i16 %31) #7, !dbg !10397
  br i1 %32, label %cond.true.i.i.i38, label %cond.false.i.i.i41, !dbg !10397

cond.true.i.i.i38:                                ; preds = %sw.bb10
  %33 = load i16*, i16** %p.addr.i.i.i26, align 8, !dbg !10397
  %34 = load i16, i16* %33, align 2, !dbg !10397
  %conv.i.i.i29 = zext i16 %34 to i32, !dbg !10397
  %and.i.i.i30 = and i32 %conv.i.i.i29, 255, !dbg !10397
  %shl.i.i.i31 = shl i32 %and.i.i.i30, 8, !dbg !10397
  %35 = load i16*, i16** %p.addr.i.i.i26, align 8, !dbg !10397
  %36 = load i16, i16* %35, align 2, !dbg !10397
  %conv1.i.i.i32 = zext i16 %36 to i32, !dbg !10397
  %and2.i.i.i33 = and i32 %conv1.i.i.i32, 65280, !dbg !10397
  %shr.i.i.i34 = ashr i32 %and2.i.i.i33, 8, !dbg !10397
  %or.i.i.i35 = or i32 %shl.i.i.i31, %shr.i.i.i34, !dbg !10397
  %conv3.i.i.i36 = trunc i32 %or.i.i.i35 to i16, !dbg !10397
  %conv4.i.i.i37 = zext i16 %conv3.i.i.i36 to i32, !dbg !10397
  br label %get_unaligned_be16.exit44, !dbg !10397

cond.false.i.i.i41:                               ; preds = %sw.bb10
  %37 = load i16*, i16** %p.addr.i.i.i26, align 8, !dbg !10397
  %38 = load i16, i16* %37, align 2, !dbg !10397
  %call.i.i.i39 = call zeroext i16 @__fswab16(i16 zeroext %38) #12, !dbg !10397
  %conv5.i.i.i40 = zext i16 %call.i.i.i39 to i32, !dbg !10397
  br label %get_unaligned_be16.exit44, !dbg !10397

get_unaligned_be16.exit44:                        ; preds = %cond.true.i.i.i38, %cond.false.i.i.i41
  %cond.i.i.i42 = phi i32 [ %conv4.i.i.i37, %cond.true.i.i.i38 ], [ %conv5.i.i.i40, %cond.false.i.i.i41 ], !dbg !10397
  %conv6.i.i.i43 = trunc i32 %cond.i.i.i42 to i16, !dbg !10397
  %conv13 = zext i16 %conv6.i.i.i43 to i32, !dbg !10398
  store i32 %conv13, i32* %group_id, align 4, !dbg !10399
  br label %sw.epilog, !dbg !10400

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !10401

sw.epilog:                                        ; preds = %sw.default, %get_unaligned_be16.exit44, %get_unaligned_be16.exit
  %39 = load i8*, i8** %d, align 8, !dbg !10402
  %arrayidx14 = getelementptr i8, i8* %39, i64 3, !dbg !10402
  %40 = load i8, i8* %arrayidx14, align 1, !dbg !10402
  %conv15 = zext i8 %40 to i32, !dbg !10402
  %add = add i32 %conv15, 4, !dbg !10403
  %41 = load i8*, i8** %d, align 8, !dbg !10404
  %idx.ext16 = sext i32 %add to i64, !dbg !10404
  %add.ptr17 = getelementptr i8, i8* %41, i64 %idx.ext16, !dbg !10404
  store i8* %add.ptr17, i8** %d, align 8, !dbg !10404
  br label %while.cond, !dbg !10374, !llvm.loop !10405

while.end:                                        ; preds = %while.cond
  call void @rcu_read_unlock() #10, !dbg !10407
  %42 = load i32, i32* %group_id, align 4, !dbg !10408
  %cmp18 = icmp sge i32 %42, 0, !dbg !10410
  br i1 %cmp18, label %land.lhs.true, label %if.end25, !dbg !10411

land.lhs.true:                                    ; preds = %while.end
  %43 = load i32*, i32** %rel_id.addr, align 8, !dbg !10412
  %tobool20 = icmp ne i32* %43, null, !dbg !10412
  br i1 %tobool20, label %land.lhs.true21, label %if.end25, !dbg !10413

land.lhs.true21:                                  ; preds = %land.lhs.true
  %44 = load i32, i32* %rel_port, align 4, !dbg !10414
  %cmp22 = icmp ne i32 %44, -1, !dbg !10415
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10416

if.then24:                                        ; preds = %land.lhs.true21
  %45 = load i32, i32* %rel_port, align 4, !dbg !10417
  %46 = load i32*, i32** %rel_id.addr, align 8, !dbg !10418
  store i32 %45, i32* %46, align 4, !dbg !10419
  br label %if.end25, !dbg !10420

if.end25:                                         ; preds = %if.then24, %land.lhs.true21, %land.lhs.true, %while.end
  %47 = load i32, i32* %group_id, align 4, !dbg !10421
  store i32 %47, i32* %retval, align 4, !dbg !10422
  br label %return, !dbg !10422

return:                                           ; preds = %if.end25, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !10423
  ret i32 %48, !dbg !10423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_set_blocked(%struct.scsi_cmnd* %cmd, i32 %reason) #0 !dbg !10424 {
entry:
  %v.addr.i1.i15 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i15, metadata !10425, metadata !DIExpression()), !dbg !10429
  %i.addr.i.i16 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i16, metadata !10434, metadata !DIExpression()), !dbg !10435
  %v.addr.i.i17 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i17, metadata !10436, metadata !DIExpression()), !dbg !10438
  %size.addr.i.i18 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i18, metadata !10440, metadata !DIExpression()), !dbg !10441
  %v.addr.i19 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i19, metadata !10442, metadata !DIExpression()), !dbg !10443
  %i.addr.i20 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i20, metadata !10444, metadata !DIExpression()), !dbg !10445
  %v.addr.i1.i6 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i6, metadata !10425, metadata !DIExpression()), !dbg !10446
  %i.addr.i.i7 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i7, metadata !10434, metadata !DIExpression()), !dbg !10449
  %v.addr.i.i8 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i8, metadata !10436, metadata !DIExpression()), !dbg !10450
  %size.addr.i.i9 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i9, metadata !10440, metadata !DIExpression()), !dbg !10452
  %v.addr.i10 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i10, metadata !10442, metadata !DIExpression()), !dbg !10453
  %i.addr.i11 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i11, metadata !10444, metadata !DIExpression()), !dbg !10454
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !10425, metadata !DIExpression()), !dbg !10455
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !10434, metadata !DIExpression()), !dbg !10458
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !10436, metadata !DIExpression()), !dbg !10459
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10440, metadata !DIExpression()), !dbg !10461
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10442, metadata !DIExpression()), !dbg !10462
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !10444, metadata !DIExpression()), !dbg !10463
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %reason.addr = alloca i32, align 4
  %host = alloca %struct.Scsi_Host*, align 8
  %device2 = alloca %struct.scsi_device*, align 8
  %starget = alloca %struct.scsi_target*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10464, metadata !DIExpression()), !dbg !10465
  store i32 %reason, i32* %reason.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reason.addr, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !10468, metadata !DIExpression()), !dbg !10469
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10470
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !10471
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !10471
  %host1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !10472
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host1, align 8, !dbg !10472
  store %struct.Scsi_Host* %2, %struct.Scsi_Host** %host, align 8, !dbg !10469
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %device2, metadata !10473, metadata !DIExpression()), !dbg !10474
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10475
  %device3 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 1, !dbg !10476
  %4 = load %struct.scsi_device*, %struct.scsi_device** %device3, align 8, !dbg !10476
  store %struct.scsi_device* %4, %struct.scsi_device** %device2, align 8, !dbg !10474
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget, metadata !10477, metadata !DIExpression()), !dbg !10478
  %5 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !10479
  %call = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %5) #10, !dbg !10480
  store %struct.scsi_target* %call, %struct.scsi_target** %starget, align 8, !dbg !10478
  %6 = load i32, i32* %reason.addr, align 4, !dbg !10481
  switch i32 %6, label %sw.epilog [
    i32 4181, label %sw.bb
    i32 4182, label %sw.bb4
    i32 4183, label %sw.bb4
    i32 4184, label %sw.bb5
  ], !dbg !10482

sw.bb:                                            ; preds = %entry
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10483
  %host_blocked = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 13, !dbg !10484
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10485
  %max_host_blocked = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 38, !dbg !10486
  %9 = load i32, i32* %max_host_blocked, align 8, !dbg !10486
  store %struct.atomic_t* %host_blocked, %struct.atomic_t** %v.addr.i, align 8
  store i32 %9, i32* %i.addr.i, align 4
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10487
  %11 = bitcast %struct.atomic_t* %10 to i8*, !dbg !10487
  store i8* %11, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %12 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10488
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !10489
  %conv.i.i = trunc i64 %13 to i32, !dbg !10489
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %12, i32 %conv.i.i) #11, !dbg !10490
  %14 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10491
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !10491
  call void @kcsan_check_access(i8* %14, i64 %15, i32 5) #11, !dbg !10491
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10492
  %17 = load i32, i32* %i.addr.i, align 4, !dbg !10493
  store %struct.atomic_t* %16, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %17, i32* %i.addr.i.i, align 4
  %18 = load i32, i32* %i.addr.i.i, align 4, !dbg !10494
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10494
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %19, i32 0, i32 0, !dbg !10494
  store volatile i32 %18, i32* %counter.i.i, align 4, !dbg !10494
  br label %sw.epilog, !dbg !10496

sw.bb4:                                           ; preds = %entry, %entry
  %20 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !10497
  %device_blocked = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %20, i32 0, i32 5, !dbg !10498
  %21 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !10499
  %max_device_blocked = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %21, i32 0, i32 46, !dbg !10500
  %22 = load i32, i32* %max_device_blocked, align 8, !dbg !10500
  store %struct.atomic_t* %device_blocked, %struct.atomic_t** %v.addr.i10, align 8
  store i32 %22, i32* %i.addr.i11, align 4
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i10, align 8, !dbg !10501
  %24 = bitcast %struct.atomic_t* %23 to i8*, !dbg !10501
  store i8* %24, i8** %v.addr.i.i8, align 8
  store i64 4, i64* %size.addr.i.i9, align 8
  %25 = load i8*, i8** %v.addr.i.i8, align 8, !dbg !10502
  %26 = load i64, i64* %size.addr.i.i9, align 8, !dbg !10503
  %conv.i.i12 = trunc i64 %26 to i32, !dbg !10503
  %call.i.i13 = call zeroext i1 @kasan_check_write(i8* %25, i32 %conv.i.i12) #11, !dbg !10504
  %27 = load i8*, i8** %v.addr.i.i8, align 8, !dbg !10505
  %28 = load i64, i64* %size.addr.i.i9, align 8, !dbg !10505
  call void @kcsan_check_access(i8* %27, i64 %28, i32 5) #11, !dbg !10505
  %29 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i10, align 8, !dbg !10506
  %30 = load i32, i32* %i.addr.i11, align 4, !dbg !10507
  store %struct.atomic_t* %29, %struct.atomic_t** %v.addr.i1.i6, align 8
  store i32 %30, i32* %i.addr.i.i7, align 4
  %31 = load i32, i32* %i.addr.i.i7, align 4, !dbg !10508
  %32 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i6, align 8, !dbg !10508
  %counter.i.i14 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %32, i32 0, i32 0, !dbg !10508
  store volatile i32 %31, i32* %counter.i.i14, align 4, !dbg !10508
  br label %sw.epilog, !dbg !10509

sw.bb5:                                           ; preds = %entry
  %33 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !10510
  %target_blocked = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %33, i32 0, i32 9, !dbg !10511
  %34 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !10512
  %max_target_blocked = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %34, i32 0, i32 11, !dbg !10513
  %35 = load i32, i32* %max_target_blocked, align 4, !dbg !10513
  store %struct.atomic_t* %target_blocked, %struct.atomic_t** %v.addr.i19, align 8
  store i32 %35, i32* %i.addr.i20, align 4
  %36 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i19, align 8, !dbg !10514
  %37 = bitcast %struct.atomic_t* %36 to i8*, !dbg !10514
  store i8* %37, i8** %v.addr.i.i17, align 8
  store i64 4, i64* %size.addr.i.i18, align 8
  %38 = load i8*, i8** %v.addr.i.i17, align 8, !dbg !10515
  %39 = load i64, i64* %size.addr.i.i18, align 8, !dbg !10516
  %conv.i.i21 = trunc i64 %39 to i32, !dbg !10516
  %call.i.i22 = call zeroext i1 @kasan_check_write(i8* %38, i32 %conv.i.i21) #11, !dbg !10517
  %40 = load i8*, i8** %v.addr.i.i17, align 8, !dbg !10518
  %41 = load i64, i64* %size.addr.i.i18, align 8, !dbg !10518
  call void @kcsan_check_access(i8* %40, i64 %41, i32 5) #11, !dbg !10518
  %42 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i19, align 8, !dbg !10519
  %43 = load i32, i32* %i.addr.i20, align 4, !dbg !10520
  store %struct.atomic_t* %42, %struct.atomic_t** %v.addr.i1.i15, align 8
  store i32 %43, i32* %i.addr.i.i16, align 4
  %44 = load i32, i32* %i.addr.i.i16, align 4, !dbg !10521
  %45 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i15, align 8, !dbg !10521
  %counter.i.i23 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %45, i32 0, i32 0, !dbg !10521
  store volatile i32 %44, i32* %counter.i.i23, align 4, !dbg !10521
  br label %sw.epilog, !dbg !10522

sw.epilog:                                        ; preds = %entry, %sw.bb5, %sw.bb4, %sw.bb
  ret void, !dbg !10523
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_requeue_request(%struct.request*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !10524 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10528, metadata !DIExpression()), !dbg !10529
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10530, metadata !DIExpression()), !dbg !10531
  ret i1 true, !dbg !10532
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !10533 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10537, metadata !DIExpression()), !dbg !10538
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10539, metadata !DIExpression()), !dbg !10540
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10541, metadata !DIExpression()), !dbg !10542
  ret void, !dbg !10543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @blk_mq_rq_to_pdu(%struct.request* %rq) #0 !dbg !10544 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !10547, metadata !DIExpression()), !dbg !10548
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !10549
  %add.ptr = getelementptr %struct.request, %struct.request* %0, i64 1, !dbg !10550
  %1 = bitcast %struct.request* %add.ptr to i8*, !dbg !10549
  ret i8* %1, !dbg !10551
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clear_bit(i64 %nr, i64* %addr) #0 !dbg !10552 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !10553, metadata !DIExpression()), !dbg !10555
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !10557, metadata !DIExpression()), !dbg !10558
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7230, metadata !DIExpression()), !dbg !10559
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7234, metadata !DIExpression()), !dbg !10561
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !10562, metadata !DIExpression()), !dbg !10563
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !10564, metadata !DIExpression()), !dbg !10565
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !10566
  %1 = load i64, i64* %nr.addr, align 8, !dbg !10567
  %div = sdiv i64 %1, 64, !dbg !10567
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !10568
  %2 = bitcast i64* %add.ptr to i8*, !dbg !10566
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !10569
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10570
  %conv.i = trunc i64 %4 to i32, !dbg !10570
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !10571
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !10572
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !10572
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #11, !dbg !10572
  %7 = load i64, i64* %nr.addr, align 8, !dbg !10573
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !10574
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !10575
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !10576
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !10577, !srcloc !10578
  ret void, !dbg !10579
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_host_in_recovery(%struct.Scsi_Host* %shost) #0 !dbg !10580 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !10581, metadata !DIExpression()), !dbg !10582
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10583
  %shost_state = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 46, !dbg !10584
  %1 = load i32, i32* %shost_state, align 8, !dbg !10584
  %cmp = icmp eq i32 %1, 5, !dbg !10585
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !10586

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10587
  %shost_state1 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 46, !dbg !10588
  %3 = load i32, i32* %shost_state1, align 8, !dbg !10588
  %cmp2 = icmp eq i32 %3, 6, !dbg !10589
  br i1 %cmp2, label %lor.end, label %lor.lhs.false3, !dbg !10590

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10591
  %shost_state4 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 46, !dbg !10592
  %5 = load i32, i32* %shost_state4, align 8, !dbg !10592
  %cmp5 = icmp eq i32 %5, 7, !dbg !10593
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !10594

lor.rhs:                                          ; preds = %lor.lhs.false3
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10595
  %tmf_in_progress = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 34, !dbg !10596
  %bf.load = load i16, i16* %tmf_in_progress, align 4, !dbg !10596
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !10596
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10596
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10596
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10594
  br label %lor.end, !dbg !10594

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false3, %lor.lhs.false, %entry
  %7 = phi i1 [ true, %lor.lhs.false3 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32, !dbg !10594
  ret i32 %lor.ext, !dbg !10597
}

; Function Attrs: noredzone
declare dso_local void @scsi_eh_wakeup(%struct.Scsi_Host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_single_lun_run(%struct.scsi_device* %current_sdev) #0 !dbg !10598 {
entry:
  %lock.addr.i122 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i122, metadata !5883, metadata !DIExpression()), !dbg !10599
  %lock.addr.i117 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i117, metadata !5872, metadata !DIExpression()), !dbg !10609
  %flags.addr.i118 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i118, metadata !5881, metadata !DIExpression()), !dbg !10611
  %tmp.i119 = alloca i32, align 4
  %tmp8.i120 = alloca i32, align 4
  %lock.addr.i115 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i115, metadata !5883, metadata !DIExpression()), !dbg !10612
  %lock.addr.i110 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i110, metadata !5872, metadata !DIExpression()), !dbg !10619
  %flags.addr.i111 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i111, metadata !5881, metadata !DIExpression()), !dbg !10621
  %tmp.i112 = alloca i32, align 4
  %tmp8.i113 = alloca i32, align 4
  %lock.addr.i108 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i108, metadata !5872, metadata !DIExpression()), !dbg !10622
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !10624
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5883, metadata !DIExpression()), !dbg !10625
  %current_sdev.addr = alloca %struct.scsi_device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %starget = alloca %struct.scsi_target*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp2 = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__dummy24 = alloca i64, align 8
  %__dummy225 = alloca i64, align 8
  %tmp28 = alloca i32, align 4
  %__dummy32 = alloca i64, align 8
  %__dummy233 = alloca i64, align 8
  %tmp36 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp52 = alloca %struct.scsi_device*, align 8
  %__mptr53 = alloca i8*, align 8
  %tmp57 = alloca %struct.scsi_device*, align 8
  %__dummy75 = alloca i64, align 8
  %__dummy276 = alloca i64, align 8
  %tmp79 = alloca i32, align 4
  %__dummy83 = alloca i64, align 8
  %__dummy284 = alloca i64, align 8
  %tmp87 = alloca i32, align 4
  %__mptr100 = alloca i8*, align 8
  %tmp105 = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %current_sdev, %struct.scsi_device** %current_sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %current_sdev.addr, metadata !10632, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !10634, metadata !DIExpression()), !dbg !10635
  %0 = load %struct.scsi_device*, %struct.scsi_device** %current_sdev.addr, align 8, !dbg !10636
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !10637
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10637
  store %struct.Scsi_Host* %1, %struct.Scsi_Host** %shost, align 8, !dbg !10635
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !10638, metadata !DIExpression()), !dbg !10639
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %tmp, metadata !10640, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget, metadata !10642, metadata !DIExpression()), !dbg !10643
  %2 = load %struct.scsi_device*, %struct.scsi_device** %current_sdev.addr, align 8, !dbg !10644
  %call = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %2) #10, !dbg !10645
  store %struct.scsi_target* %call, %struct.scsi_target** %starget, align 8, !dbg !10643
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10646, metadata !DIExpression()), !dbg !10647
  br label %do.body, !dbg !10648

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10649

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10650, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10653, metadata !DIExpression()), !dbg !10652
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10652
  %conv = zext i1 %cmp to i32, !dbg !10652
  store i32 1, i32* %tmp2, align 4, !dbg !10652
  %3 = load i32, i32* %tmp2, align 4, !dbg !10652
  br label %do.body3, !dbg !10654

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !10655

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !10656

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !10658, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !10662, metadata !DIExpression()), !dbg !10661
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !10661
  %conv9 = zext i1 %cmp8 to i32, !dbg !10661
  store i32 1, i32* %tmp10, align 4, !dbg !10661
  %4 = load i32, i32* %tmp10, align 4, !dbg !10661
  %call11 = call i64 @arch_local_irq_save() #10, !dbg !10663
  store i64 %call11, i64* %flags, align 8, !dbg !10663
  br label %do.end, !dbg !10663

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !10656

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !10655

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10664, !srcloc !10665
  br label %do.body14, !dbg !10664

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10666
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 4, !dbg !10666
  %6 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !10666
  store %struct.spinlock* %6, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10667
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !10668
  %rlock.i = bitcast %union.anon* %8 to %struct.raw_spinlock*, !dbg !10668
  br label %do.end16, !dbg !10666

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !10664

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10655

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10654

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10649

do.end20:                                         ; preds = %do.end19
  %9 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !10669
  %starget_sdev_user = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %9, i32 0, i32 0, !dbg !10670
  store %struct.scsi_device* null, %struct.scsi_device** %starget_sdev_user, align 8, !dbg !10671
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10672
  %host_lock21 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 4, !dbg !10673
  %11 = load %struct.spinlock*, %struct.spinlock** %host_lock21, align 8, !dbg !10673
  %12 = load i64, i64* %flags, align 8, !dbg !10674
  store %struct.spinlock* %11, %struct.spinlock** %lock.addr.i110, align 8
  store i64 %12, i64* %flags.addr.i111, align 8
  call void @llvm.dbg.declare(metadata !324, metadata !5943, metadata !DIExpression()) #7, !dbg !10675
  call void @llvm.dbg.declare(metadata !324, metadata !5947, metadata !DIExpression()) #7, !dbg !10675
  store i32 1, i32* %tmp.i112, align 4, !dbg !10675
  %13 = load i32, i32* %tmp.i112, align 4, !dbg !10675
  call void @llvm.dbg.declare(metadata !324, metadata !5948, metadata !DIExpression()) #7, !dbg !10676
  call void @llvm.dbg.declare(metadata !324, metadata !5954, metadata !DIExpression()) #7, !dbg !10676
  store i32 1, i32* %tmp8.i113, align 4, !dbg !10676
  %14 = load i32, i32* %tmp8.i113, align 4, !dbg !10676
  %15 = load i64, i64* %flags.addr.i111, align 8, !dbg !10677
  call void @arch_local_irq_restore(i64 %15) #11, !dbg !10677
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10678, !srcloc !5958
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i110, align 8, !dbg !10679
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !10679
  %rlock.i114 = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !10679
  %18 = load %struct.scsi_device*, %struct.scsi_device** %current_sdev.addr, align 8, !dbg !10680
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %18, i32 0, i32 1, !dbg !10681
  %19 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !10681
  call void @scsi_kick_queue(%struct.request_queue* %19) #10, !dbg !10682
  br label %do.body22, !dbg !10683

do.body22:                                        ; preds = %do.end20
  br label %do.body23, !dbg !10684

do.body23:                                        ; preds = %do.body22
  call void @llvm.dbg.declare(metadata i64* %__dummy24, metadata !10685, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.declare(metadata i64* %__dummy225, metadata !10688, metadata !DIExpression()), !dbg !10687
  %cmp26 = icmp eq i64* %__dummy24, %__dummy225, !dbg !10687
  %conv27 = zext i1 %cmp26 to i32, !dbg !10687
  store i32 1, i32* %tmp28, align 4, !dbg !10687
  %20 = load i32, i32* %tmp28, align 4, !dbg !10687
  br label %do.body29, !dbg !10689

do.body29:                                        ; preds = %do.body23
  br label %do.body30, !dbg !10690

do.body30:                                        ; preds = %do.body29
  br label %do.body31, !dbg !10691

do.body31:                                        ; preds = %do.body30
  call void @llvm.dbg.declare(metadata i64* %__dummy32, metadata !10693, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.declare(metadata i64* %__dummy233, metadata !10697, metadata !DIExpression()), !dbg !10696
  %cmp34 = icmp eq i64* %__dummy32, %__dummy233, !dbg !10696
  %conv35 = zext i1 %cmp34 to i32, !dbg !10696
  store i32 1, i32* %tmp36, align 4, !dbg !10696
  %21 = load i32, i32* %tmp36, align 4, !dbg !10696
  %call37 = call i64 @arch_local_irq_save() #10, !dbg !10698
  store i64 %call37, i64* %flags, align 8, !dbg !10698
  br label %do.end38, !dbg !10698

do.end38:                                         ; preds = %do.body31
  br label %do.end39, !dbg !10691

do.end39:                                         ; preds = %do.end38
  br label %do.body40, !dbg !10690

do.body40:                                        ; preds = %do.end39
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10699, !srcloc !10700
  br label %do.body41, !dbg !10699

do.body41:                                        ; preds = %do.body40
  %22 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10701
  %host_lock42 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %22, i32 0, i32 4, !dbg !10701
  %23 = load %struct.spinlock*, %struct.spinlock** %host_lock42, align 8, !dbg !10701
  store %struct.spinlock* %23, %struct.spinlock** %lock.addr.i115, align 8
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i115, align 8, !dbg !10702
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !10703
  %rlock.i116 = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !10703
  br label %do.end44, !dbg !10701

do.end44:                                         ; preds = %do.body41
  br label %do.end45, !dbg !10699

do.end45:                                         ; preds = %do.end44
  br label %do.end46, !dbg !10690

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !10689

do.end47:                                         ; preds = %do.end46
  br label %do.end48, !dbg !10684

do.end48:                                         ; preds = %do.end47
  %26 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !10704
  %starget_sdev_user49 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %26, i32 0, i32 0, !dbg !10706
  %27 = load %struct.scsi_device*, %struct.scsi_device** %starget_sdev_user49, align 8, !dbg !10706
  %tobool = icmp ne %struct.scsi_device* %27, null, !dbg !10704
  br i1 %tobool, label %if.then, label %if.end, !dbg !10707

if.then:                                          ; preds = %do.end48
  br label %out, !dbg !10708

if.end:                                           ; preds = %do.end48
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10709, metadata !DIExpression()), !dbg !10711
  %28 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !10711
  %devices = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %28, i32 0, i32 2, !dbg !10711
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !10711
  %29 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10711
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !10711
  store i8* %30, i8** %__mptr, align 8, !dbg !10711
  br label %do.body50, !dbg !10711

do.body50:                                        ; preds = %if.end
  br label %do.end51, !dbg !10712

do.end51:                                         ; preds = %do.body50
  %31 = load i8*, i8** %__mptr, align 8, !dbg !10711
  %add.ptr = getelementptr i8, i8* %31, i64 -32, !dbg !10711
  %32 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !10711
  store %struct.scsi_device* %32, %struct.scsi_device** %tmp52, align 8, !dbg !10712
  %33 = load %struct.scsi_device*, %struct.scsi_device** %tmp52, align 8, !dbg !10711
  store %struct.scsi_device* %33, %struct.scsi_device** %sdev, align 8, !dbg !10714
  call void @llvm.dbg.declare(metadata i8** %__mptr53, metadata !10715, metadata !DIExpression()), !dbg !10717
  %34 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10717
  %same_target_siblings = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %34, i32 0, i32 3, !dbg !10717
  %next54 = getelementptr inbounds %struct.list_head, %struct.list_head* %same_target_siblings, i32 0, i32 0, !dbg !10717
  %35 = load %struct.list_head*, %struct.list_head** %next54, align 8, !dbg !10717
  %36 = bitcast %struct.list_head* %35 to i8*, !dbg !10717
  store i8* %36, i8** %__mptr53, align 8, !dbg !10717
  br label %do.body55, !dbg !10717

do.body55:                                        ; preds = %do.end51
  br label %do.end56, !dbg !10718

do.end56:                                         ; preds = %do.body55
  %37 = load i8*, i8** %__mptr53, align 8, !dbg !10717
  %add.ptr58 = getelementptr i8, i8* %37, i64 -32, !dbg !10717
  %38 = bitcast i8* %add.ptr58 to %struct.scsi_device*, !dbg !10717
  store %struct.scsi_device* %38, %struct.scsi_device** %tmp57, align 8, !dbg !10718
  %39 = load %struct.scsi_device*, %struct.scsi_device** %tmp57, align 8, !dbg !10717
  store %struct.scsi_device* %39, %struct.scsi_device** %tmp, align 8, !dbg !10714
  br label %for.cond, !dbg !10714

for.cond:                                         ; preds = %do.end104, %do.end56
  %40 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10720
  %same_target_siblings59 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %40, i32 0, i32 3, !dbg !10720
  %41 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !10720
  %devices60 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %41, i32 0, i32 2, !dbg !10720
  %cmp61 = icmp eq %struct.list_head* %same_target_siblings59, %devices60, !dbg !10720
  %lnot = xor i1 %cmp61, true, !dbg !10720
  br i1 %lnot, label %for.body, label %for.end, !dbg !10714

for.body:                                         ; preds = %for.cond
  %42 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10721
  %43 = load %struct.scsi_device*, %struct.scsi_device** %current_sdev.addr, align 8, !dbg !10723
  %cmp63 = icmp eq %struct.scsi_device* %42, %43, !dbg !10724
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !10725

if.then65:                                        ; preds = %for.body
  br label %for.inc, !dbg !10726

if.end66:                                         ; preds = %for.body
  %44 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10727
  %call67 = call i32 @scsi_device_get(%struct.scsi_device* %44) #10, !dbg !10729
  %tobool68 = icmp ne i32 %call67, 0, !dbg !10729
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !10730

if.then69:                                        ; preds = %if.end66
  br label %for.inc, !dbg !10731

if.end70:                                         ; preds = %if.end66
  %45 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10732
  %host_lock71 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %45, i32 0, i32 4, !dbg !10733
  %46 = load %struct.spinlock*, %struct.spinlock** %host_lock71, align 8, !dbg !10733
  %47 = load i64, i64* %flags, align 8, !dbg !10734
  store %struct.spinlock* %46, %struct.spinlock** %lock.addr.i117, align 8
  store i64 %47, i64* %flags.addr.i118, align 8
  call void @llvm.dbg.declare(metadata !324, metadata !5943, metadata !DIExpression()) #7, !dbg !10735
  call void @llvm.dbg.declare(metadata !324, metadata !5947, metadata !DIExpression()) #7, !dbg !10735
  store i32 1, i32* %tmp.i119, align 4, !dbg !10735
  %48 = load i32, i32* %tmp.i119, align 4, !dbg !10735
  call void @llvm.dbg.declare(metadata !324, metadata !5948, metadata !DIExpression()) #7, !dbg !10736
  call void @llvm.dbg.declare(metadata !324, metadata !5954, metadata !DIExpression()) #7, !dbg !10736
  store i32 1, i32* %tmp8.i120, align 4, !dbg !10736
  %49 = load i32, i32* %tmp8.i120, align 4, !dbg !10736
  %50 = load i64, i64* %flags.addr.i118, align 8, !dbg !10737
  call void @arch_local_irq_restore(i64 %50) #11, !dbg !10737
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10738, !srcloc !5958
  %51 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i117, align 8, !dbg !10739
  %52 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %51, i32 0, i32 0, !dbg !10739
  %rlock.i121 = bitcast %union.anon* %52 to %struct.raw_spinlock*, !dbg !10739
  %53 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10740
  %request_queue72 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %53, i32 0, i32 1, !dbg !10741
  %54 = load %struct.request_queue*, %struct.request_queue** %request_queue72, align 8, !dbg !10741
  call void @scsi_kick_queue(%struct.request_queue* %54) #10, !dbg !10742
  br label %do.body73, !dbg !10743

do.body73:                                        ; preds = %if.end70
  br label %do.body74, !dbg !10744

do.body74:                                        ; preds = %do.body73
  call void @llvm.dbg.declare(metadata i64* %__dummy75, metadata !10745, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.declare(metadata i64* %__dummy276, metadata !10748, metadata !DIExpression()), !dbg !10747
  %cmp77 = icmp eq i64* %__dummy75, %__dummy276, !dbg !10747
  %conv78 = zext i1 %cmp77 to i32, !dbg !10747
  store i32 1, i32* %tmp79, align 4, !dbg !10747
  %55 = load i32, i32* %tmp79, align 4, !dbg !10747
  br label %do.body80, !dbg !10749

do.body80:                                        ; preds = %do.body74
  br label %do.body81, !dbg !10750

do.body81:                                        ; preds = %do.body80
  br label %do.body82, !dbg !10751

do.body82:                                        ; preds = %do.body81
  call void @llvm.dbg.declare(metadata i64* %__dummy83, metadata !10753, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.declare(metadata i64* %__dummy284, metadata !10757, metadata !DIExpression()), !dbg !10756
  %cmp85 = icmp eq i64* %__dummy83, %__dummy284, !dbg !10756
  %conv86 = zext i1 %cmp85 to i32, !dbg !10756
  store i32 1, i32* %tmp87, align 4, !dbg !10756
  %56 = load i32, i32* %tmp87, align 4, !dbg !10756
  %call88 = call i64 @arch_local_irq_save() #10, !dbg !10758
  store i64 %call88, i64* %flags, align 8, !dbg !10758
  br label %do.end89, !dbg !10758

do.end89:                                         ; preds = %do.body82
  br label %do.end90, !dbg !10751

do.end90:                                         ; preds = %do.end89
  br label %do.body91, !dbg !10750

do.body91:                                        ; preds = %do.end90
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10759, !srcloc !10760
  br label %do.body92, !dbg !10759

do.body92:                                        ; preds = %do.body91
  %57 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10761
  %host_lock93 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %57, i32 0, i32 4, !dbg !10761
  %58 = load %struct.spinlock*, %struct.spinlock** %host_lock93, align 8, !dbg !10761
  store %struct.spinlock* %58, %struct.spinlock** %lock.addr.i122, align 8
  %59 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i122, align 8, !dbg !10762
  %60 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %59, i32 0, i32 0, !dbg !10763
  %rlock.i123 = bitcast %union.anon* %60 to %struct.raw_spinlock*, !dbg !10763
  br label %do.end95, !dbg !10761

do.end95:                                         ; preds = %do.body92
  br label %do.end96, !dbg !10759

do.end96:                                         ; preds = %do.end95
  br label %do.end97, !dbg !10750

do.end97:                                         ; preds = %do.end96
  br label %do.end98, !dbg !10749

do.end98:                                         ; preds = %do.end97
  br label %do.end99, !dbg !10744

do.end99:                                         ; preds = %do.end98
  %61 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10764
  call void @scsi_device_put(%struct.scsi_device* %61) #10, !dbg !10765
  br label %for.inc, !dbg !10766

for.inc:                                          ; preds = %do.end99, %if.then69, %if.then65
  %62 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !10720
  store %struct.scsi_device* %62, %struct.scsi_device** %sdev, align 8, !dbg !10720
  call void @llvm.dbg.declare(metadata i8** %__mptr100, metadata !10767, metadata !DIExpression()), !dbg !10769
  %63 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !10769
  %same_target_siblings101 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %63, i32 0, i32 3, !dbg !10769
  %next102 = getelementptr inbounds %struct.list_head, %struct.list_head* %same_target_siblings101, i32 0, i32 0, !dbg !10769
  %64 = load %struct.list_head*, %struct.list_head** %next102, align 8, !dbg !10769
  %65 = bitcast %struct.list_head* %64 to i8*, !dbg !10769
  store i8* %65, i8** %__mptr100, align 8, !dbg !10769
  br label %do.body103, !dbg !10769

do.body103:                                       ; preds = %for.inc
  br label %do.end104, !dbg !10770

do.end104:                                        ; preds = %do.body103
  %66 = load i8*, i8** %__mptr100, align 8, !dbg !10769
  %add.ptr106 = getelementptr i8, i8* %66, i64 -32, !dbg !10769
  %67 = bitcast i8* %add.ptr106 to %struct.scsi_device*, !dbg !10769
  store %struct.scsi_device* %67, %struct.scsi_device** %tmp105, align 8, !dbg !10770
  %68 = load %struct.scsi_device*, %struct.scsi_device** %tmp105, align 8, !dbg !10769
  store %struct.scsi_device* %68, %struct.scsi_device** %tmp, align 8, !dbg !10720
  br label %for.cond, !dbg !10720, !llvm.loop !10772

for.end:                                          ; preds = %for.cond
  br label %out, !dbg !10773

out:                                              ; preds = %for.end, %if.then
  call void @llvm.dbg.label(metadata !10774), !dbg !10775
  %69 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !10776
  %host_lock107 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %69, i32 0, i32 4, !dbg !10777
  %70 = load %struct.spinlock*, %struct.spinlock** %host_lock107, align 8, !dbg !10777
  %71 = load i64, i64* %flags, align 8, !dbg !10778
  store %struct.spinlock* %70, %struct.spinlock** %lock.addr.i108, align 8
  store i64 %71, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !324, metadata !5943, metadata !DIExpression()) #7, !dbg !10779
  call void @llvm.dbg.declare(metadata !324, metadata !5947, metadata !DIExpression()) #7, !dbg !10779
  store i32 1, i32* %tmp.i, align 4, !dbg !10779
  %72 = load i32, i32* %tmp.i, align 4, !dbg !10779
  call void @llvm.dbg.declare(metadata !324, metadata !5948, metadata !DIExpression()) #7, !dbg !10780
  call void @llvm.dbg.declare(metadata !324, metadata !5954, metadata !DIExpression()) #7, !dbg !10780
  store i32 1, i32* %tmp8.i, align 4, !dbg !10780
  %73 = load i32, i32* %tmp8.i, align 4, !dbg !10780
  %74 = load i64, i64* %flags.addr.i, align 8, !dbg !10781
  call void @arch_local_irq_restore(i64 %74) #11, !dbg !10781
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10782, !srcloc !5958
  %75 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i108, align 8, !dbg !10783
  %76 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %75, i32 0, i32 0, !dbg !10783
  %rlock.i109 = bitcast %union.anon* %76 to %struct.raw_spinlock*, !dbg !10783
  ret void, !dbg !10784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_starved_list_run(%struct.Scsi_Host* %shost) #0 !dbg !10785 {
entry:
  %lock.addr.i72 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i72, metadata !5883, metadata !DIExpression()), !dbg !10786
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !5872, metadata !DIExpression()), !dbg !10794
  %flags.addr.i68 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i68, metadata !5881, metadata !DIExpression()), !dbg !10796
  %tmp.i69 = alloca i32, align 4
  %tmp8.i70 = alloca i32, align 4
  %lock.addr.i65 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i65, metadata !5872, metadata !DIExpression()), !dbg !10797
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !10799
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5883, metadata !DIExpression()), !dbg !10800
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %starved_list = alloca %struct.list_head, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %slq = alloca %struct.request_queue*, align 8
  %__mptr = alloca i8*, align 8
  %tmp25 = alloca %struct.scsi_device*, align 8
  %__dummy38 = alloca i64, align 8
  %__dummy239 = alloca i64, align 8
  %tmp42 = alloca i32, align 4
  %__dummy46 = alloca i64, align 8
  %__dummy247 = alloca i64, align 8
  %tmp50 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !10807, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.declare(metadata %struct.list_head* %starved_list, metadata !10809, metadata !DIExpression()), !dbg !10810
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %starved_list, i32 0, i32 0, !dbg !10810
  store %struct.list_head* %starved_list, %struct.list_head** %next, align 8, !dbg !10810
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %starved_list, i32 0, i32 1, !dbg !10810
  store %struct.list_head* %starved_list, %struct.list_head** %prev, align 8, !dbg !10810
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !10811, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10813, metadata !DIExpression()), !dbg !10814
  br label %do.body, !dbg !10815

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10816

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10817, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10820, metadata !DIExpression()), !dbg !10819
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10819
  %conv = zext i1 %cmp to i32, !dbg !10819
  store i32 1, i32* %tmp, align 4, !dbg !10819
  %0 = load i32, i32* %tmp, align 4, !dbg !10819
  br label %do.body2, !dbg !10821

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10822

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10823

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10825, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10829, metadata !DIExpression()), !dbg !10828
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10828
  %conv8 = zext i1 %cmp7 to i32, !dbg !10828
  store i32 1, i32* %tmp9, align 4, !dbg !10828
  %1 = load i32, i32* %tmp9, align 4, !dbg !10828
  %call = call i64 @arch_local_irq_save() #10, !dbg !10830
  store i64 %call, i64* %flags, align 8, !dbg !10830
  br label %do.end, !dbg !10830

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10823

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10822

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10831, !srcloc !10832
  br label %do.body12, !dbg !10831

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10833
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 4, !dbg !10833
  %3 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !10833
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10834
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !10835
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !10835
  br label %do.end14, !dbg !10833

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10831

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10822

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10821

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10816

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10836
  %starved_list19 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 2, !dbg !10837
  call void @list_splice_init(%struct.list_head* %starved_list19, %struct.list_head* %starved_list) #10, !dbg !10838
  br label %while.cond, !dbg !10839

while.cond:                                       ; preds = %do.end62, %if.then33, %if.then28, %do.end18
  %call20 = call i32 @list_empty(%struct.list_head* %starved_list) #10, !dbg !10840
  %tobool = icmp ne i32 %call20, 0, !dbg !10841
  %lnot = xor i1 %tobool, true, !dbg !10841
  br i1 %lnot, label %while.body, label %while.end, !dbg !10839

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.request_queue** %slq, metadata !10842, metadata !DIExpression()), !dbg !10843
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10844
  %call21 = call zeroext i1 @scsi_host_is_busy(%struct.Scsi_Host* %7) #10, !dbg !10846
  br i1 %call21, label %if.then, label %if.end, !dbg !10847

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !10848

if.end:                                           ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10849, metadata !DIExpression()), !dbg !10851
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %starved_list, i32 0, i32 0, !dbg !10851
  %8 = load %struct.list_head*, %struct.list_head** %next22, align 8, !dbg !10851
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !10851
  store i8* %9, i8** %__mptr, align 8, !dbg !10851
  br label %do.body23, !dbg !10851

do.body23:                                        ; preds = %if.end
  br label %do.end24, !dbg !10852

do.end24:                                         ; preds = %do.body23
  %10 = load i8*, i8** %__mptr, align 8, !dbg !10851
  %add.ptr = getelementptr i8, i8* %10, i64 -64, !dbg !10851
  %11 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !10851
  store %struct.scsi_device* %11, %struct.scsi_device** %tmp25, align 8, !dbg !10852
  %12 = load %struct.scsi_device*, %struct.scsi_device** %tmp25, align 8, !dbg !10851
  store %struct.scsi_device* %12, %struct.scsi_device** %sdev, align 8, !dbg !10854
  %13 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10855
  %starved_entry = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %13, i32 0, i32 8, !dbg !10856
  call void @list_del_init(%struct.list_head* %starved_entry) #10, !dbg !10857
  %14 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10858
  %call26 = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %14) #10, !dbg !10860
  %call27 = call zeroext i1 @scsi_target_is_busy(%struct.scsi_target* %call26) #10, !dbg !10861
  br i1 %call27, label %if.then28, label %if.end31, !dbg !10862

if.then28:                                        ; preds = %do.end24
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10863
  %starved_entry29 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %15, i32 0, i32 8, !dbg !10865
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10866
  %starved_list30 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 2, !dbg !10867
  call void @list_move_tail(%struct.list_head* %starved_entry29, %struct.list_head* %starved_list30) #10, !dbg !10868
  br label %while.cond, !dbg !10869, !llvm.loop !10870

if.end31:                                         ; preds = %do.end24
  %17 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !10872
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %17, i32 0, i32 1, !dbg !10873
  %18 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !10873
  store %struct.request_queue* %18, %struct.request_queue** %slq, align 8, !dbg !10874
  %19 = load %struct.request_queue*, %struct.request_queue** %slq, align 8, !dbg !10875
  %call32 = call zeroext i1 @blk_get_queue(%struct.request_queue* %19) #10, !dbg !10877
  br i1 %call32, label %if.end34, label %if.then33, !dbg !10878

if.then33:                                        ; preds = %if.end31
  br label %while.cond, !dbg !10879, !llvm.loop !10870

if.end34:                                         ; preds = %if.end31
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10880
  %host_lock35 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 4, !dbg !10881
  %21 = load %struct.spinlock*, %struct.spinlock** %host_lock35, align 8, !dbg !10881
  %22 = load i64, i64* %flags, align 8, !dbg !10882
  store %struct.spinlock* %21, %struct.spinlock** %lock.addr.i67, align 8
  store i64 %22, i64* %flags.addr.i68, align 8
  call void @llvm.dbg.declare(metadata !324, metadata !5943, metadata !DIExpression()) #7, !dbg !10883
  call void @llvm.dbg.declare(metadata !324, metadata !5947, metadata !DIExpression()) #7, !dbg !10883
  store i32 1, i32* %tmp.i69, align 4, !dbg !10883
  %23 = load i32, i32* %tmp.i69, align 4, !dbg !10883
  call void @llvm.dbg.declare(metadata !324, metadata !5948, metadata !DIExpression()) #7, !dbg !10884
  call void @llvm.dbg.declare(metadata !324, metadata !5954, metadata !DIExpression()) #7, !dbg !10884
  store i32 1, i32* %tmp8.i70, align 4, !dbg !10884
  %24 = load i32, i32* %tmp8.i70, align 4, !dbg !10884
  %25 = load i64, i64* %flags.addr.i68, align 8, !dbg !10885
  call void @arch_local_irq_restore(i64 %25) #11, !dbg !10885
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10886, !srcloc !5958
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !10887
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !10887
  %rlock.i71 = bitcast %union.anon* %27 to %struct.raw_spinlock*, !dbg !10887
  %28 = load %struct.request_queue*, %struct.request_queue** %slq, align 8, !dbg !10888
  call void @scsi_kick_queue(%struct.request_queue* %28) #10, !dbg !10889
  %29 = load %struct.request_queue*, %struct.request_queue** %slq, align 8, !dbg !10890
  call void @blk_put_queue(%struct.request_queue* %29) #10, !dbg !10891
  br label %do.body36, !dbg !10892

do.body36:                                        ; preds = %if.end34
  br label %do.body37, !dbg !10893

do.body37:                                        ; preds = %do.body36
  call void @llvm.dbg.declare(metadata i64* %__dummy38, metadata !10894, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.declare(metadata i64* %__dummy239, metadata !10897, metadata !DIExpression()), !dbg !10896
  %cmp40 = icmp eq i64* %__dummy38, %__dummy239, !dbg !10896
  %conv41 = zext i1 %cmp40 to i32, !dbg !10896
  store i32 1, i32* %tmp42, align 4, !dbg !10896
  %30 = load i32, i32* %tmp42, align 4, !dbg !10896
  br label %do.body43, !dbg !10898

do.body43:                                        ; preds = %do.body37
  br label %do.body44, !dbg !10899

do.body44:                                        ; preds = %do.body43
  br label %do.body45, !dbg !10900

do.body45:                                        ; preds = %do.body44
  call void @llvm.dbg.declare(metadata i64* %__dummy46, metadata !10902, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.declare(metadata i64* %__dummy247, metadata !10906, metadata !DIExpression()), !dbg !10905
  %cmp48 = icmp eq i64* %__dummy46, %__dummy247, !dbg !10905
  %conv49 = zext i1 %cmp48 to i32, !dbg !10905
  store i32 1, i32* %tmp50, align 4, !dbg !10905
  %31 = load i32, i32* %tmp50, align 4, !dbg !10905
  %call51 = call i64 @arch_local_irq_save() #10, !dbg !10907
  store i64 %call51, i64* %flags, align 8, !dbg !10907
  br label %do.end52, !dbg !10907

do.end52:                                         ; preds = %do.body45
  br label %do.end53, !dbg !10900

do.end53:                                         ; preds = %do.end52
  br label %do.body54, !dbg !10899

do.body54:                                        ; preds = %do.end53
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10908, !srcloc !10909
  br label %do.body55, !dbg !10908

do.body55:                                        ; preds = %do.body54
  %32 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10910
  %host_lock56 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %32, i32 0, i32 4, !dbg !10910
  %33 = load %struct.spinlock*, %struct.spinlock** %host_lock56, align 8, !dbg !10910
  store %struct.spinlock* %33, %struct.spinlock** %lock.addr.i72, align 8
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i72, align 8, !dbg !10911
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !10912
  %rlock.i73 = bitcast %union.anon* %35 to %struct.raw_spinlock*, !dbg !10912
  br label %do.end58, !dbg !10910

do.end58:                                         ; preds = %do.body55
  br label %do.end59, !dbg !10908

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !10899

do.end60:                                         ; preds = %do.end59
  br label %do.end61, !dbg !10898

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !10893

do.end62:                                         ; preds = %do.end61
  br label %while.cond, !dbg !10839, !llvm.loop !10870

while.end:                                        ; preds = %if.then, %while.cond
  %36 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10913
  %starved_list63 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %36, i32 0, i32 2, !dbg !10914
  call void @list_splice(%struct.list_head* %starved_list, %struct.list_head* %starved_list63) #10, !dbg !10915
  %37 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10916
  %host_lock64 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %37, i32 0, i32 4, !dbg !10917
  %38 = load %struct.spinlock*, %struct.spinlock** %host_lock64, align 8, !dbg !10917
  %39 = load i64, i64* %flags, align 8, !dbg !10918
  store %struct.spinlock* %38, %struct.spinlock** %lock.addr.i65, align 8
  store i64 %39, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !324, metadata !5943, metadata !DIExpression()) #7, !dbg !10919
  call void @llvm.dbg.declare(metadata !324, metadata !5947, metadata !DIExpression()) #7, !dbg !10919
  store i32 1, i32* %tmp.i, align 4, !dbg !10919
  %40 = load i32, i32* %tmp.i, align 4, !dbg !10919
  call void @llvm.dbg.declare(metadata !324, metadata !5948, metadata !DIExpression()) #7, !dbg !10920
  call void @llvm.dbg.declare(metadata !324, metadata !5954, metadata !DIExpression()) #7, !dbg !10920
  store i32 1, i32* %tmp8.i, align 4, !dbg !10920
  %41 = load i32, i32* %tmp8.i, align 4, !dbg !10920
  %42 = load i64, i64* %flags.addr.i, align 8, !dbg !10921
  call void @arch_local_irq_restore(i64 %42) #11, !dbg !10921
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10922, !srcloc !5958
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i65, align 8, !dbg !10923
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !10923
  %rlock.i66 = bitcast %union.anon* %44 to %struct.raw_spinlock*, !dbg !10923
  ret void, !dbg !10924
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_run_hw_queues(%struct.request_queue*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_kick_queue(%struct.request_queue* %q) #0 !dbg !10925 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !10926, metadata !DIExpression()), !dbg !10927
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !10928
  call void @blk_mq_run_hw_queues(%struct.request_queue* %0, i1 zeroext false) #10, !dbg !10929
  ret void, !dbg !10930
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_device_get(%struct.scsi_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @scsi_host_is_busy(%struct.Scsi_Host* %shost) #0 !dbg !10931 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9987, metadata !DIExpression()), !dbg !10934
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7162, metadata !DIExpression()), !dbg !10938
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7166, metadata !DIExpression()), !dbg !10940
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10002, metadata !DIExpression()), !dbg !10941
  %retval = alloca i1, align 1
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !10942, metadata !DIExpression()), !dbg !10943
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10944
  %host_blocked = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 13, !dbg !10945
  store %struct.atomic_t* %host_blocked, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10946
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !10946
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10947
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !10948
  %conv.i.i = trunc i64 %4 to i32, !dbg !10948
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #11, !dbg !10949
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10950
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !10950
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #11, !dbg !10950
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10951
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10952
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !10952
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !10952
  %cmp = icmp sgt i32 %9, 0, !dbg !10953
  br i1 %cmp, label %if.then, label %if.end, !dbg !10954

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !10955
  br label %return, !dbg !10955

if.end:                                           ; preds = %entry
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !10956
  %host_self_blocked = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 34, !dbg !10958
  %bf.load = load i16, i16* %host_self_blocked, align 4, !dbg !10958
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !10958
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10958
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10958
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10956
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !10959

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !10960
  br label %return, !dbg !10960

if.end2:                                          ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !10961
  br label %return, !dbg !10961

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !10962
  ret i1 %11, !dbg !10962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !10963 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10964, metadata !DIExpression()), !dbg !10965
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10966
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !10967
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10968
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #10, !dbg !10969
  ret void, !dbg !10970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @scsi_target_is_busy(%struct.scsi_target* %starget) #0 !dbg !10971 {
entry:
  %v.addr.i1.i9 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i9, metadata !9987, metadata !DIExpression()), !dbg !10974
  %v.addr.i.i10 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i10, metadata !7162, metadata !DIExpression()), !dbg !10980
  %size.addr.i.i11 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i11, metadata !7166, metadata !DIExpression()), !dbg !10982
  %v.addr.i12 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i12, metadata !10002, metadata !DIExpression()), !dbg !10983
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9987, metadata !DIExpression()), !dbg !10984
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7162, metadata !DIExpression()), !dbg !10988
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7166, metadata !DIExpression()), !dbg !10990
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10002, metadata !DIExpression()), !dbg !10991
  %retval = alloca i1, align 1
  %starget.addr = alloca %struct.scsi_target*, align 8
  store %struct.scsi_target* %starget, %struct.scsi_target** %starget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget.addr, metadata !10992, metadata !DIExpression()), !dbg !10993
  %0 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !10994
  %can_queue = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %0, i32 0, i32 10, !dbg !10995
  %1 = load i32, i32* %can_queue, align 8, !dbg !10995
  %cmp = icmp ugt i32 %1, 0, !dbg !10996
  br i1 %cmp, label %if.then, label %if.end8, !dbg !10997

if.then:                                          ; preds = %entry
  %2 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !10998
  %target_busy = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %2, i32 0, i32 8, !dbg !10999
  store %struct.atomic_t* %target_busy, %struct.atomic_t** %v.addr.i, align 8
  %3 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11000
  %4 = bitcast %struct.atomic_t* %3 to i8*, !dbg !11000
  store i8* %4, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11001
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !11002
  %conv.i.i = trunc i64 %6 to i32, !dbg !11002
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %5, i32 %conv.i.i) #11, !dbg !11003
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11004
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !11004
  call void @kcsan_check_access(i8* %7, i64 %8, i32 4) #11, !dbg !11004
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11005
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11006
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %10, i32 0, i32 0, !dbg !11006
  %11 = load volatile i32, i32* %counter.i.i, align 4, !dbg !11006
  %12 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !11007
  %can_queue1 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %12, i32 0, i32 10, !dbg !11008
  %13 = load i32, i32* %can_queue1, align 8, !dbg !11008
  %cmp2 = icmp uge i32 %11, %13, !dbg !11009
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !11010

if.then3:                                         ; preds = %if.then
  store i1 true, i1* %retval, align 1, !dbg !11011
  br label %return, !dbg !11011

if.end:                                           ; preds = %if.then
  %14 = load %struct.scsi_target*, %struct.scsi_target** %starget.addr, align 8, !dbg !11012
  %target_blocked = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %14, i32 0, i32 9, !dbg !11013
  store %struct.atomic_t* %target_blocked, %struct.atomic_t** %v.addr.i12, align 8
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i12, align 8, !dbg !11014
  %16 = bitcast %struct.atomic_t* %15 to i8*, !dbg !11014
  store i8* %16, i8** %v.addr.i.i10, align 8
  store i64 4, i64* %size.addr.i.i11, align 8
  %17 = load i8*, i8** %v.addr.i.i10, align 8, !dbg !11015
  %18 = load i64, i64* %size.addr.i.i11, align 8, !dbg !11016
  %conv.i.i13 = trunc i64 %18 to i32, !dbg !11016
  %call.i.i14 = call zeroext i1 @kasan_check_read(i8* %17, i32 %conv.i.i13) #11, !dbg !11017
  %19 = load i8*, i8** %v.addr.i.i10, align 8, !dbg !11018
  %20 = load i64, i64* %size.addr.i.i11, align 8, !dbg !11018
  call void @kcsan_check_access(i8* %19, i64 %20, i32 4) #11, !dbg !11018
  %21 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i12, align 8, !dbg !11019
  store %struct.atomic_t* %21, %struct.atomic_t** %v.addr.i1.i9, align 8
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i9, align 8, !dbg !11020
  %counter.i.i15 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %22, i32 0, i32 0, !dbg !11020
  %23 = load volatile i32, i32* %counter.i.i15, align 4, !dbg !11020
  %cmp5 = icmp sgt i32 %23, 0, !dbg !11021
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11022

if.then6:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !11023
  br label %return, !dbg !11023

if.end7:                                          ; preds = %if.end
  br label %if.end8, !dbg !11024

if.end8:                                          ; preds = %if.end7, %entry
  store i1 false, i1* %retval, align 1, !dbg !11025
  br label %return, !dbg !11025

return:                                           ; preds = %if.end8, %if.then6, %if.then3
  %24 = load i1, i1* %retval, align 1, !dbg !11026
  ret i1 %24, !dbg !11026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !11027 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11028, metadata !DIExpression()), !dbg !11029
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11030, metadata !DIExpression()), !dbg !11031
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11032
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !11033
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11034
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11035
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #10, !dbg !11036
  ret void, !dbg !11037
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @blk_get_queue(%struct.request_queue*) #2

; Function Attrs: noredzone
declare dso_local void @blk_put_queue(%struct.request_queue*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !11038 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11041, metadata !DIExpression()), !dbg !11042
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11043, metadata !DIExpression()), !dbg !11044
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11045
  %call = call i32 @list_empty(%struct.list_head* %0) #10, !dbg !11047
  %tobool = icmp ne i32 %call, 0, !dbg !11047
  br i1 %tobool, label %if.end, label %if.then, !dbg !11048

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11049
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11050
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11051
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11052
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11052
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %2, %struct.list_head* %4) #10, !dbg !11053
  br label %if.end, !dbg !11053

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !11055 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11058
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #10, !dbg !11060
  br i1 %call, label %if.end, label %if.then, !dbg !11061

if.then:                                          ; preds = %entry
  br label %return, !dbg !11062

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11063
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11064
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !11064
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11065
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11066
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11066
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #10, !dbg !11067
  br label %return, !dbg !11068

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !11069 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11072, metadata !DIExpression()), !dbg !11073
  ret i1 true, !dbg !11074
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11075 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11076, metadata !DIExpression()), !dbg !11077
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11078, metadata !DIExpression()), !dbg !11079
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11080
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11081
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11082
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !11083
  br label %do.body, !dbg !11084

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !11085

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !11087

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !11085

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11089
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11089
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11089
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !11089
  br label %do.end5, !dbg !11089

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !11085

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !11091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11092 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11095, metadata !DIExpression()), !dbg !11096
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11097, metadata !DIExpression()), !dbg !11098
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11099, metadata !DIExpression()), !dbg !11100
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !11101, metadata !DIExpression()), !dbg !11102
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11103
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !11104
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !11104
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !11102
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !11105, metadata !DIExpression()), !dbg !11106
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11107
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !11108
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !11108
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !11106
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11109
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !11110
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !11111
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !11112
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !11113
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11114
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !11115
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !11116
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11117
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !11118
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !11119
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !11120
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !11121
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11122
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !11123
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !11124
  ret void, !dbg !11125
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @scsi_command_normalize_sense(%struct.scsi_cmnd*, %struct.scsi_sense_hdr*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @scsi_sense_is_deferred(%struct.scsi_sense_hdr* %sshdr) #0 !dbg !11126 {
entry:
  %sshdr.addr = alloca %struct.scsi_sense_hdr*, align 8
  store %struct.scsi_sense_hdr* %sshdr, %struct.scsi_sense_hdr** %sshdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr** %sshdr.addr, metadata !11128, metadata !DIExpression()), !dbg !11129
  %0 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !11130
  %response_code = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %0, i32 0, i32 0, !dbg !11131
  %1 = load i8, i8* %response_code, align 1, !dbg !11131
  %conv = zext i8 %1 to i32, !dbg !11130
  %cmp = icmp sge i32 %conv, 112, !dbg !11132
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11133

land.rhs:                                         ; preds = %entry
  %2 = load %struct.scsi_sense_hdr*, %struct.scsi_sense_hdr** %sshdr.addr, align 8, !dbg !11134
  %response_code2 = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %2, i32 0, i32 0, !dbg !11135
  %3 = load i8, i8* %response_code2, align 1, !dbg !11135
  %conv3 = zext i8 %3 to i32, !dbg !11134
  %and = and i32 %conv3, 1, !dbg !11136
  %tobool = icmp ne i32 %and, 0, !dbg !11133
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !11137
  ret i1 %4, !dbg !11138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @scsi_result_to_blk_status(%struct.scsi_cmnd* %cmd, i32 %result) #0 !dbg !11139 {
entry:
  %retval = alloca i8, align 1
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %result.addr = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11142, metadata !DIExpression()), !dbg !11143
  store i32 %result, i32* %result.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !11144, metadata !DIExpression()), !dbg !11145
  %0 = load i32, i32* %result.addr, align 4, !dbg !11146
  %shr = ashr i32 %0, 16, !dbg !11146
  %and = and i32 %shr, 255, !dbg !11146
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 15, label %sw.bb2
    i32 16, label %sw.bb3
    i32 17, label %sw.bb4
    i32 18, label %sw.bb5
    i32 19, label %sw.bb6
  ], !dbg !11147

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %result.addr, align 4, !dbg !11148
  %call = call i32 @scsi_status_is_good(i32 %1) #10, !dbg !11151
  %tobool = icmp ne i32 %call, 0, !dbg !11151
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11152

land.lhs.true:                                    ; preds = %sw.bb
  %2 = load i32, i32* %result.addr, align 4, !dbg !11153
  %and1 = and i32 %2, -256, !dbg !11154
  %cmp = icmp eq i32 %and1, 0, !dbg !11155
  br i1 %cmp, label %if.then, label %if.end, !dbg !11156

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !11157
  br label %return, !dbg !11157

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  store i8 10, i8* %retval, align 1, !dbg !11158
  br label %return, !dbg !11158

sw.bb2:                                           ; preds = %entry
  store i8 4, i8* %retval, align 1, !dbg !11159
  br label %return, !dbg !11159

sw.bb3:                                           ; preds = %entry
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11160
  call void @set_host_byte(%struct.scsi_cmnd* %3, i8 signext 0) #10, !dbg !11161
  store i8 5, i8* %retval, align 1, !dbg !11162
  br label %return, !dbg !11162

sw.bb4:                                           ; preds = %entry
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11163
  call void @set_host_byte(%struct.scsi_cmnd* %4, i8 signext 0) #10, !dbg !11164
  store i8 6, i8* %retval, align 1, !dbg !11165
  br label %return, !dbg !11165

sw.bb5:                                           ; preds = %entry
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11166
  call void @set_host_byte(%struct.scsi_cmnd* %5, i8 signext 0) #10, !dbg !11167
  store i8 3, i8* %retval, align 1, !dbg !11168
  br label %return, !dbg !11168

sw.bb6:                                           ; preds = %entry
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11169
  call void @set_host_byte(%struct.scsi_cmnd* %6, i8 signext 0) #10, !dbg !11170
  store i8 7, i8* %retval, align 1, !dbg !11171
  br label %return, !dbg !11171

sw.default:                                       ; preds = %entry
  store i8 10, i8* %retval, align 1, !dbg !11172
  br label %return, !dbg !11172

return:                                           ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %if.end, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !11173
  ret i8 %7, !dbg !11173
}

; Function Attrs: noredzone
declare dso_local void @scsi_print_sense(%struct.scsi_cmnd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_host_byte(%struct.scsi_cmnd* %cmd, i8 signext %status) #0 !dbg !11174 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %status.addr = alloca i8, align 1
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11177, metadata !DIExpression()), !dbg !11178
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !11179, metadata !DIExpression()), !dbg !11180
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11181
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 24, !dbg !11182
  %1 = load i32, i32* %result, align 8, !dbg !11182
  %and = and i32 %1, -16711681, !dbg !11183
  %2 = load i8, i8* %status.addr, align 1, !dbg !11184
  %conv = sext i8 %2 to i32, !dbg !11184
  %shl = shl i32 %conv, 16, !dbg !11185
  %or = or i32 %and, %shl, !dbg !11186
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11187
  %result1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 24, !dbg !11188
  store i32 %or, i32* %result1, align 8, !dbg !11189
  ret void, !dbg !11190
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_rq_is_private(%struct.request* %rq) #0 !dbg !11191 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !11192, metadata !DIExpression()), !dbg !11193
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !11194
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 3, !dbg !11194
  %1 = load i32, i32* %cmd_flags, align 8, !dbg !11194
  %and = and i32 %1, 255, !dbg !11194
  %call = call zeroext i1 @blk_op_is_private(i32 %and) #10, !dbg !11195
  ret i1 %call, !dbg !11196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_op_is_private(i32 %op) #0 !dbg !11197 {
entry:
  %op.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !11200, metadata !DIExpression()), !dbg !11201
  %0 = load i32, i32* %op.addr, align 4, !dbg !11202
  %cmp = icmp eq i32 %0, 34, !dbg !11203
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11204

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %op.addr, align 4, !dbg !11205
  %cmp1 = icmp eq i32 %1, 35, !dbg !11206
  br label %lor.end, !dbg !11204

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !11207
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @blk_update_request(%struct.request*, i8 zeroext, i32) #2

; Function Attrs: noredzone
declare dso_local void @add_disk_randomness(%struct.gendisk*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @destroy_rcu_head(%struct.callback_head* %head) #0 !dbg !11208 {
entry:
  %head.addr = alloca %struct.callback_head*, align 8
  store %struct.callback_head* %head, %struct.callback_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.callback_head** %head.addr, metadata !11209, metadata !DIExpression()), !dbg !11210
  ret void, !dbg !11211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_mq_uninit_cmd(%struct.scsi_cmnd* %cmd) #0 !dbg !11212 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11213, metadata !DIExpression()), !dbg !11214
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11215
  call void @scsi_free_sgtables(%struct.scsi_cmnd* %0) #10, !dbg !11216
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11217
  call void @scsi_uninit_cmd(%struct.scsi_cmnd* %1) #10, !dbg !11218
  ret void, !dbg !11219
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @percpu_ref_get(%struct.percpu_ref* %ref) #0 !dbg !11220 {
entry:
  %ref.addr = alloca %struct.percpu_ref*, align 8
  store %struct.percpu_ref* %ref, %struct.percpu_ref** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.percpu_ref** %ref.addr, metadata !11221, metadata !DIExpression()), !dbg !11222
  %0 = load %struct.percpu_ref*, %struct.percpu_ref** %ref.addr, align 8, !dbg !11223
  call void @percpu_ref_get_many(%struct.percpu_ref* %0, i64 1) #10, !dbg !11224
  ret void, !dbg !11225
}

; Function Attrs: noredzone
declare dso_local void @__blk_mq_end_request(%struct.request*, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_run_queue_async(%struct.scsi_device* %sdev) #0 !dbg !11226 {
entry:
  %v.addr.i1.i10 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i10, metadata !11227, metadata !DIExpression()), !dbg !11231
  %old.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old.addr.i.i, metadata !11238, metadata !DIExpression()), !dbg !11239
  %new.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i, metadata !11240, metadata !DIExpression()), !dbg !11241
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !11242, metadata !DIExpression()), !dbg !11244
  %__old.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i, metadata !11245, metadata !DIExpression()), !dbg !11244
  %__new.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i, metadata !11246, metadata !DIExpression()), !dbg !11244
  %__ptr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i, metadata !11247, metadata !DIExpression()), !dbg !11244
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i11 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i11, metadata !5792, metadata !DIExpression()), !dbg !11248
  %size.addr.i.i12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i12, metadata !5802, metadata !DIExpression()), !dbg !11250
  %v.addr.i13 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i13, metadata !11251, metadata !DIExpression()), !dbg !11252
  %old.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old.addr.i, metadata !11253, metadata !DIExpression()), !dbg !11254
  %new.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i, metadata !11255, metadata !DIExpression()), !dbg !11256
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9987, metadata !DIExpression()), !dbg !11257
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7162, metadata !DIExpression()), !dbg !11260
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7166, metadata !DIExpression()), !dbg !11262
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10002, metadata !DIExpression()), !dbg !11263
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %old = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !11264, metadata !DIExpression()), !dbg !11265
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11266
  %call = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %0) #10, !dbg !11267
  %single_lun = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %call, i32 0, i32 7, !dbg !11268
  %bf.load = load i8, i8* %single_lun, align 4, !dbg !11268
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !11268
  %bf.clear = and i8 %bf.lshr, 1, !dbg !11268
  %bf.cast = zext i8 %bf.clear to i32, !dbg !11268
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11267
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11269

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11270
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !11271
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !11271
  %starved_list = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 2, !dbg !11272
  %call1 = call i32 @list_empty(%struct.list_head* %starved_list) #10, !dbg !11273
  %tobool2 = icmp ne i32 %call1, 0, !dbg !11273
  br i1 %tobool2, label %if.else, label %if.then, !dbg !11274

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11275
  %requeue_work = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 53, !dbg !11277
  %call3 = call i32 @kblockd_schedule_work(%struct.work_struct* %requeue_work) #10, !dbg !11278
  br label %if.end9, !dbg !11279

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %old, metadata !11280, metadata !DIExpression()), !dbg !11281
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11282
  %restarts = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 6, !dbg !11283
  store %struct.atomic_t* %restarts, %struct.atomic_t** %v.addr.i, align 8
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11284
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !11284
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11285
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !11286
  %conv.i.i = trunc i64 %8 to i32, !dbg !11286
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %7, i32 %conv.i.i) #11, !dbg !11287
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11288
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !11288
  call void @kcsan_check_access(i8* %9, i64 %10, i32 4) #11, !dbg !11288
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11289
  store %struct.atomic_t* %11, %struct.atomic_t** %v.addr.i1.i, align 8
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11290
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !11290
  %13 = load volatile i32, i32* %counter.i.i, align 4, !dbg !11290
  store i32 %13, i32* %old, align 4, !dbg !11281
  %14 = load i32, i32* %old, align 4, !dbg !11291
  %tobool5 = icmp ne i32 %14, 0, !dbg !11291
  br i1 %tobool5, label %land.lhs.true, label %if.end, !dbg !11292

land.lhs.true:                                    ; preds = %if.else
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11293
  %restarts6 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %15, i32 0, i32 6, !dbg !11294
  %16 = load i32, i32* %old, align 4, !dbg !11295
  store %struct.atomic_t* %restarts6, %struct.atomic_t** %v.addr.i13, align 8
  store i32 %16, i32* %old.addr.i, align 4
  store i32 0, i32* %new.addr.i, align 4
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i13, align 8, !dbg !11296
  %18 = bitcast %struct.atomic_t* %17 to i8*, !dbg !11296
  store i8* %18, i8** %v.addr.i.i11, align 8
  store i64 4, i64* %size.addr.i.i12, align 8
  %19 = load i8*, i8** %v.addr.i.i11, align 8, !dbg !11297
  %20 = load i64, i64* %size.addr.i.i12, align 8, !dbg !11298
  %conv.i.i14 = trunc i64 %20 to i32, !dbg !11298
  %call.i.i15 = call zeroext i1 @kasan_check_write(i8* %19, i32 %conv.i.i14) #11, !dbg !11299
  %21 = load i8*, i8** %v.addr.i.i11, align 8, !dbg !11300
  %22 = load i64, i64* %size.addr.i.i12, align 8, !dbg !11300
  call void @kcsan_check_access(i8* %21, i64 %22, i32 7) #11, !dbg !11300
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i13, align 8, !dbg !11301
  %24 = load i32, i32* %old.addr.i, align 4, !dbg !11302
  %25 = load i32, i32* %new.addr.i, align 4, !dbg !11303
  store %struct.atomic_t* %23, %struct.atomic_t** %v.addr.i1.i10, align 8
  store i32 %24, i32* %old.addr.i.i, align 4
  store i32 %25, i32* %new.addr.i.i, align 4
  %26 = load i32, i32* %old.addr.i.i, align 4, !dbg !11244
  store i32 %26, i32* %__old.i.i, align 4, !dbg !11244
  %27 = load i32, i32* %new.addr.i.i, align 4, !dbg !11244
  store i32 %27, i32* %__new.i.i, align 4, !dbg !11244
  %28 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i10, align 8, !dbg !11244
  %counter.i.i16 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %28, i32 0, i32 0, !dbg !11244
  store i32* %counter.i.i16, i32** %__ptr.i.i, align 8, !dbg !11244
  %29 = load i32*, i32** %__ptr.i.i, align 8, !dbg !11244
  %30 = load i32, i32* %__new.i.i, align 4, !dbg !11244
  %31 = load i32, i32* %__old.i.i, align 4, !dbg !11244
  %32 = call i32 asm sideeffect "cmpxchgl $2,$1", "={ax},=*m,r,0,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %29, i32 %30, i32 %31, i32* %29) #7, !dbg !11244, !srcloc !11304
  store i32 %32, i32* %__ret.i.i, align 4, !dbg !11244
  %33 = load i32, i32* %__ret.i.i, align 4, !dbg !11244
  store i32 %33, i32* %tmp.i.i, align 4, !dbg !11244
  %34 = load i32, i32* %tmp.i.i, align 4, !dbg !11244
  %35 = load i32, i32* %old, align 4, !dbg !11305
  %cmp = icmp eq i32 %34, %35, !dbg !11306
  br i1 %cmp, label %if.then8, label %if.end, !dbg !11307

if.then8:                                         ; preds = %land.lhs.true
  %36 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !11308
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %36, i32 0, i32 1, !dbg !11309
  %37 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !11309
  call void @blk_mq_run_hw_queues(%struct.request_queue* %37, i1 zeroext true) #10, !dbg !11310
  br label %if.end, !dbg !11310

if.end:                                           ; preds = %if.then8, %land.lhs.true, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  ret void, !dbg !11311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @percpu_ref_put(%struct.percpu_ref* %ref) #0 !dbg !11312 {
entry:
  %ref.addr = alloca %struct.percpu_ref*, align 8
  store %struct.percpu_ref* %ref, %struct.percpu_ref** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.percpu_ref** %ref.addr, metadata !11313, metadata !DIExpression()), !dbg !11314
  %0 = load %struct.percpu_ref*, %struct.percpu_ref** %ref.addr, align 8, !dbg !11315
  call void @percpu_ref_put_many(%struct.percpu_ref* %0, i64 1) #10, !dbg !11316
  ret void, !dbg !11317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_uninit_cmd(%struct.scsi_cmnd* %cmd) #0 !dbg !11318 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %drv = alloca %struct.scsi_driver*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11319, metadata !DIExpression()), !dbg !11320
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11321
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 19, !dbg !11323
  %1 = load %struct.request*, %struct.request** %request, align 8, !dbg !11323
  %call = call zeroext i1 @blk_rq_is_passthrough(%struct.request* %1) #10, !dbg !11324
  br i1 %call, label %if.end4, label %if.then, !dbg !11325

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.scsi_driver** %drv, metadata !11326, metadata !DIExpression()), !dbg !11328
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11329
  %call1 = call %struct.scsi_driver* @scsi_cmd_to_driver(%struct.scsi_cmnd* %2) #10, !dbg !11330
  store %struct.scsi_driver* %call1, %struct.scsi_driver** %drv, align 8, !dbg !11328
  %3 = load %struct.scsi_driver*, %struct.scsi_driver** %drv, align 8, !dbg !11331
  %uninit_command = getelementptr inbounds %struct.scsi_driver, %struct.scsi_driver* %3, i32 0, i32 3, !dbg !11333
  %4 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %uninit_command, align 8, !dbg !11333
  %tobool = icmp ne void (%struct.scsi_cmnd*)* %4, null, !dbg !11331
  br i1 %tobool, label %if.then2, label %if.end, !dbg !11334

if.then2:                                         ; preds = %if.then
  %5 = load %struct.scsi_driver*, %struct.scsi_driver** %drv, align 8, !dbg !11335
  %uninit_command3 = getelementptr inbounds %struct.scsi_driver, %struct.scsi_driver* %5, i32 0, i32 3, !dbg !11336
  %6 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %uninit_command3, align 8, !dbg !11336
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11337
  call void %6(%struct.scsi_cmnd* %7) #10, !dbg !11335
  br label %if.end, !dbg !11335

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end4, !dbg !11338

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !11339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scsi_driver* @scsi_cmd_to_driver(%struct.scsi_cmnd* %cmd) #0 !dbg !11340 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11343, metadata !DIExpression()), !dbg !11344
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11345
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 19, !dbg !11346
  %1 = load %struct.request*, %struct.request** %request, align 8, !dbg !11346
  %rq_disk = getelementptr inbounds %struct.request, %struct.request* %1, i32 0, i32 15, !dbg !11347
  %2 = load %struct.gendisk*, %struct.gendisk** %rq_disk, align 8, !dbg !11347
  %private_data = getelementptr inbounds %struct.gendisk, %struct.gendisk* %2, i32 0, i32 10, !dbg !11348
  %3 = load i8*, i8** %private_data, align 8, !dbg !11348
  %4 = bitcast i8* %3 to %struct.scsi_driver**, !dbg !11349
  %5 = load %struct.scsi_driver*, %struct.scsi_driver** %4, align 8, !dbg !11350
  ret %struct.scsi_driver* %5, !dbg !11351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @percpu_ref_get_many(%struct.percpu_ref* %ref, i64 %nr) #0 !dbg !11352 {
entry:
  %i.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i.i.i, metadata !11355, metadata !DIExpression()), !dbg !11361
  %v.addr.i1.i.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i1.i.i, metadata !11370, metadata !DIExpression()), !dbg !11371
  %v.addr.i.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i.i, metadata !5792, metadata !DIExpression()), !dbg !11372
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5802, metadata !DIExpression()), !dbg !11374
  %i.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i.i, metadata !11375, metadata !DIExpression()), !dbg !11376
  %v.addr.i.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i.i, metadata !11377, metadata !DIExpression()), !dbg !11378
  %i.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i, metadata !11379, metadata !DIExpression()), !dbg !11380
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !11381, metadata !DIExpression()), !dbg !11382
  %ref.addr = alloca %struct.percpu_ref*, align 8
  %nr.addr = alloca i64, align 8
  %percpu_count = alloca i64*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  %pto_val__ = alloca i64, align 8
  store %struct.percpu_ref* %ref, %struct.percpu_ref** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.percpu_ref** %ref.addr, metadata !11383, metadata !DIExpression()), !dbg !11384
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.declare(metadata i64** %percpu_count, metadata !11387, metadata !DIExpression()), !dbg !11388
  call void @__rcu_read_lock() #11, !dbg !11389
  %0 = load %struct.percpu_ref*, %struct.percpu_ref** %ref.addr, align 8, !dbg !11391
  %call = call zeroext i1 @__ref_is_percpu(%struct.percpu_ref* %0, i64** %percpu_count) #10, !dbg !11392
  br i1 %call, label %if.then, label %if.else, !dbg !11393

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11394

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !11395

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !11397, metadata !DIExpression()), !dbg !11399
  store i8* null, i8** %__vpp_verify, align 8, !dbg !11399
  %1 = load i8*, i8** %__vpp_verify, align 8, !dbg !11399
  br label %do.end, !dbg !11399

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !11395

do.body2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !11400, metadata !DIExpression()), !dbg !11403
  %2 = load i64, i64* %nr.addr, align 8, !dbg !11403
  %3 = call i1 @llvm.is.constant.i64(i64 %2), !dbg !11403
  br i1 %3, label %land.lhs.true, label %cond.false, !dbg !11403

land.lhs.true:                                    ; preds = %do.body2
  %4 = load i64, i64* %nr.addr, align 8, !dbg !11403
  %cmp = icmp eq i64 %4, 1, !dbg !11403
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !11403

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load i64, i64* %nr.addr, align 8, !dbg !11403
  %cmp3 = icmp eq i64 %5, -1, !dbg !11403
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !11403

cond.true:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %6 = load i64, i64* %nr.addr, align 8, !dbg !11403
  %conv = trunc i64 %6 to i32, !dbg !11403
  br label %cond.end, !dbg !11403

cond.false:                                       ; preds = %lor.lhs.false, %do.body2
  br label %cond.end, !dbg !11403

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !11403
  store i32 %cond, i32* %pao_ID__, align 4, !dbg !11403
  br label %do.body4, !dbg !11404

do.body4:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %pto_val__, metadata !11407, metadata !DIExpression()), !dbg !11409
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11409
  store i64 %7, i64* %pto_val__, align 8, !dbg !11409
  %8 = load i64*, i64** %percpu_count, align 8, !dbg !11409
  %9 = load i64, i64* %pto_val__, align 8, !dbg !11409
  call void asm sideeffect "addq $1, $0", "=*m,re,*m,~{dirflag},~{fpsr},~{flags}"(i64* %8, i64 %9, i64* %8) #7, !dbg !11409, !srcloc !11410
  br label %do.end5, !dbg !11409

do.end5:                                          ; preds = %do.body4
  br label %do.end6, !dbg !11403

do.end6:                                          ; preds = %do.end5
  br label %do.end7, !dbg !11395

do.end7:                                          ; preds = %do.end6
  br label %if.end, !dbg !11395

if.else:                                          ; preds = %entry
  %10 = load i64, i64* %nr.addr, align 8, !dbg !11411
  %11 = load %struct.percpu_ref*, %struct.percpu_ref** %ref.addr, align 8, !dbg !11412
  %data = getelementptr inbounds %struct.percpu_ref, %struct.percpu_ref* %11, i32 0, i32 1, !dbg !11413
  %12 = load %struct.percpu_ref_data*, %struct.percpu_ref_data** %data, align 8, !dbg !11413
  %count = getelementptr inbounds %struct.percpu_ref_data, %struct.percpu_ref_data* %12, i32 0, i32 0, !dbg !11414
  store i64 %10, i64* %i.addr.i, align 8
  store %struct.atomic64_t* %count, %struct.atomic64_t** %v.addr.i, align 8
  %13 = load i64, i64* %i.addr.i, align 8, !dbg !11415
  %14 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !11416
  store i64 %13, i64* %i.addr.i.i, align 8
  store %struct.atomic64_t* %14, %struct.atomic64_t** %v.addr.i.i, align 8
  %15 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i.i, align 8, !dbg !11417
  %16 = bitcast %struct.atomic64_t* %15 to i8*, !dbg !11417
  store i8* %16, i8** %v.addr.i.i.i, align 8
  store i64 8, i64* %size.addr.i.i.i, align 8
  %17 = load i8*, i8** %v.addr.i.i.i, align 8, !dbg !11418
  %18 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11419
  %conv.i.i.i = trunc i64 %18 to i32, !dbg !11419
  %call.i.i.i = call zeroext i1 @kasan_check_write(i8* %17, i32 %conv.i.i.i) #11, !dbg !11420
  %19 = load i8*, i8** %v.addr.i.i.i, align 8, !dbg !11421
  %20 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11421
  call void @kcsan_check_access(i8* %19, i64 %20, i32 7) #11, !dbg !11421
  %21 = load i64, i64* %i.addr.i.i, align 8, !dbg !11422
  %22 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i.i, align 8, !dbg !11423
  store i64 %21, i64* %i.addr.i.i.i, align 8
  store %struct.atomic64_t* %22, %struct.atomic64_t** %v.addr.i1.i.i, align 8
  %23 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i.i, align 8, !dbg !11424
  %counter.i.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %23, i32 0, i32 0, !dbg !11425
  %24 = load i64, i64* %i.addr.i.i.i, align 8, !dbg !11426
  %25 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i.i, align 8, !dbg !11427
  %counter1.i.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %25, i32 0, i32 0, !dbg !11428
  call void asm sideeffect "addq $1,$0", "=*m,er,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %counter.i.i.i, i64 %24, i64* %counter1.i.i.i) #7, !dbg !11429, !srcloc !11430
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end7
  call void @rcu_read_unlock() #10, !dbg !11431
  ret void, !dbg !11432
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__ref_is_percpu(%struct.percpu_ref* %ref, i64** %percpu_countp) #0 !dbg !11433 {
entry:
  %retval = alloca i1, align 1
  %ref.addr = alloca %struct.percpu_ref*, align 8
  %percpu_countp.addr = alloca i64**, align 8
  %percpu_ptr = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.percpu_ref* %ref, %struct.percpu_ref** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.percpu_ref** %ref.addr, metadata !11437, metadata !DIExpression()), !dbg !11438
  store i64** %percpu_countp, i64*** %percpu_countp.addr, align 8
  call void @llvm.dbg.declare(metadata i64*** %percpu_countp.addr, metadata !11439, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.declare(metadata i64* %percpu_ptr, metadata !11441, metadata !DIExpression()), !dbg !11442
  br label %do.body, !dbg !11443

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11445

do.end:                                           ; preds = %do.body
  %0 = load %struct.percpu_ref*, %struct.percpu_ref** %ref.addr, align 8, !dbg !11443
  %percpu_count_ptr = getelementptr inbounds %struct.percpu_ref, %struct.percpu_ref* %0, i32 0, i32 0, !dbg !11443
  %1 = load volatile i64, i64* %percpu_count_ptr, align 8, !dbg !11443
  store i64 %1, i64* %tmp, align 8, !dbg !11445
  %2 = load i64, i64* %tmp, align 8, !dbg !11443
  store i64 %2, i64* %percpu_ptr, align 8, !dbg !11447
  %3 = load i64, i64* %percpu_ptr, align 8, !dbg !11448
  %and = and i64 %3, 3, !dbg !11448
  %tobool = icmp ne i64 %and, 0, !dbg !11448
  %lnot = xor i1 %tobool, true, !dbg !11448
  %lnot1 = xor i1 %lnot, true, !dbg !11448
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11448
  %conv = sext i32 %lnot.ext to i64, !dbg !11448
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11448
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11450

if.then:                                          ; preds = %do.end
  store i1 false, i1* %retval, align 1, !dbg !11451
  br label %return, !dbg !11451

if.end:                                           ; preds = %do.end
  %4 = load i64, i64* %percpu_ptr, align 8, !dbg !11452
  %5 = inttoptr i64 %4 to i64*, !dbg !11453
  %6 = load i64**, i64*** %percpu_countp.addr, align 8, !dbg !11454
  store i64* %5, i64** %6, align 8, !dbg !11455
  store i1 true, i1* %retval, align 1, !dbg !11456
  br label %return, !dbg !11456

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !11457
  ret i1 %7, !dbg !11457
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local i32 @kblockd_schedule_work(%struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @percpu_ref_put_many(%struct.percpu_ref* %ref, i64 %nr) #0 !dbg !11458 {
entry:
  %v.addr.i.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i.i, metadata !5792, metadata !DIExpression()), !dbg !11459
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5802, metadata !DIExpression()), !dbg !11471
  %i.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i.i, metadata !11472, metadata !DIExpression()), !dbg !11473
  %v.addr.i.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i.i, metadata !11474, metadata !DIExpression()), !dbg !11475
  %i.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i, metadata !11476, metadata !DIExpression()), !dbg !11477
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !11478, metadata !DIExpression()), !dbg !11479
  %ref.addr = alloca %struct.percpu_ref*, align 8
  %nr.addr = alloca i64, align 8
  %percpu_count = alloca i64*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  %pto_val__ = alloca i64, align 8
  store %struct.percpu_ref* %ref, %struct.percpu_ref** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.percpu_ref** %ref.addr, metadata !11480, metadata !DIExpression()), !dbg !11481
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11482, metadata !DIExpression()), !dbg !11483
  call void @llvm.dbg.declare(metadata i64** %percpu_count, metadata !11484, metadata !DIExpression()), !dbg !11485
  call void @__rcu_read_lock() #11, !dbg !11486
  %0 = load %struct.percpu_ref*, %struct.percpu_ref** %ref.addr, align 8, !dbg !11488
  %call = call zeroext i1 @__ref_is_percpu(%struct.percpu_ref* %0, i64** %percpu_count) #10, !dbg !11489
  br i1 %call, label %if.then, label %if.else, !dbg !11490

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11491

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !11492

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !11494, metadata !DIExpression()), !dbg !11496
  store i8* null, i8** %__vpp_verify, align 8, !dbg !11496
  %1 = load i8*, i8** %__vpp_verify, align 8, !dbg !11496
  br label %do.end, !dbg !11496

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !11492

do.body2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !11497, metadata !DIExpression()), !dbg !11499
  %2 = load i64, i64* %nr.addr, align 8, !dbg !11499
  %sub = sub i64 0, %2, !dbg !11499
  %3 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11499
  br i1 %3, label %land.lhs.true, label %cond.false, !dbg !11499

land.lhs.true:                                    ; preds = %do.body2
  %4 = load i64, i64* %nr.addr, align 8, !dbg !11499
  %sub3 = sub i64 0, %4, !dbg !11499
  %cmp = icmp eq i64 %sub3, 1, !dbg !11499
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !11499

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load i64, i64* %nr.addr, align 8, !dbg !11499
  %sub4 = sub i64 0, %5, !dbg !11499
  %cmp5 = icmp eq i64 %sub4, -1, !dbg !11499
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !11499

cond.true:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %6 = load i64, i64* %nr.addr, align 8, !dbg !11499
  %sub6 = sub i64 0, %6, !dbg !11499
  %conv = trunc i64 %sub6 to i32, !dbg !11499
  br label %cond.end, !dbg !11499

cond.false:                                       ; preds = %lor.lhs.false, %do.body2
  br label %cond.end, !dbg !11499

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !11499
  store i32 %cond, i32* %pao_ID__, align 4, !dbg !11499
  br label %do.body7, !dbg !11500

do.body7:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %pto_val__, metadata !11503, metadata !DIExpression()), !dbg !11505
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11505
  %sub8 = sub i64 0, %7, !dbg !11505
  store i64 %sub8, i64* %pto_val__, align 8, !dbg !11505
  %8 = load i64*, i64** %percpu_count, align 8, !dbg !11505
  %9 = load i64, i64* %pto_val__, align 8, !dbg !11505
  call void asm sideeffect "addq $1, $0", "=*m,re,*m,~{dirflag},~{fpsr},~{flags}"(i64* %8, i64 %9, i64* %8) #7, !dbg !11505, !srcloc !11506
  br label %do.end9, !dbg !11505

do.end9:                                          ; preds = %do.body7
  br label %do.end10, !dbg !11499

do.end10:                                         ; preds = %do.end9
  br label %do.end11, !dbg !11492

do.end11:                                         ; preds = %do.end10
  br label %if.end17, !dbg !11492

if.else:                                          ; preds = %entry
  %10 = load i64, i64* %nr.addr, align 8, !dbg !11507
  %11 = load %struct.percpu_ref*, %struct.percpu_ref** %ref.addr, align 8, !dbg !11507
  %data = getelementptr inbounds %struct.percpu_ref, %struct.percpu_ref* %11, i32 0, i32 1, !dbg !11507
  %12 = load %struct.percpu_ref_data*, %struct.percpu_ref_data** %data, align 8, !dbg !11507
  %count = getelementptr inbounds %struct.percpu_ref_data, %struct.percpu_ref_data* %12, i32 0, i32 0, !dbg !11507
  store i64 %10, i64* %i.addr.i, align 8
  store %struct.atomic64_t* %count, %struct.atomic64_t** %v.addr.i, align 8
  %13 = load i64, i64* %i.addr.i, align 8, !dbg !11508
  %14 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !11509
  store i64 %13, i64* %i.addr.i.i, align 8
  store %struct.atomic64_t* %14, %struct.atomic64_t** %v.addr.i.i, align 8
  %15 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i.i, align 8, !dbg !11510
  %16 = bitcast %struct.atomic64_t* %15 to i8*, !dbg !11510
  store i8* %16, i8** %v.addr.i.i.i, align 8
  store i64 8, i64* %size.addr.i.i.i, align 8
  %17 = load i8*, i8** %v.addr.i.i.i, align 8, !dbg !11511
  %18 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11512
  %conv.i.i.i = trunc i64 %18 to i32, !dbg !11512
  %call.i.i.i = call zeroext i1 @kasan_check_write(i8* %17, i32 %conv.i.i.i) #11, !dbg !11513
  %19 = load i8*, i8** %v.addr.i.i.i, align 8, !dbg !11514
  %20 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11514
  call void @kcsan_check_access(i8* %19, i64 %20, i32 7) #11, !dbg !11514
  %21 = load i64, i64* %i.addr.i.i, align 8, !dbg !11515
  %22 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i.i, align 8, !dbg !11516
  %call.i.i = call zeroext i1 @arch_atomic64_sub_and_test(i64 %21, %struct.atomic64_t* %22) #11, !dbg !11517
  %lnot = xor i1 %call.i.i, true, !dbg !11507
  %lnot13 = xor i1 %lnot, true, !dbg !11507
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !11507
  %conv14 = sext i32 %lnot.ext to i64, !dbg !11507
  %tobool = icmp ne i64 %conv14, 0, !dbg !11507
  br i1 %tobool, label %if.then15, label %if.end, !dbg !11518

if.then15:                                        ; preds = %if.else
  %23 = load %struct.percpu_ref*, %struct.percpu_ref** %ref.addr, align 8, !dbg !11519
  %data16 = getelementptr inbounds %struct.percpu_ref, %struct.percpu_ref* %23, i32 0, i32 1, !dbg !11520
  %24 = load %struct.percpu_ref_data*, %struct.percpu_ref_data** %data16, align 8, !dbg !11520
  %release = getelementptr inbounds %struct.percpu_ref_data, %struct.percpu_ref_data* %24, i32 0, i32 1, !dbg !11521
  %25 = load void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)** %release, align 8, !dbg !11521
  %26 = load %struct.percpu_ref*, %struct.percpu_ref** %ref.addr, align 8, !dbg !11522
  call void %25(%struct.percpu_ref* %26) #10, !dbg !11519
  br label %if.end, !dbg !11519

if.end:                                           ; preds = %if.then15, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %do.end11
  call void @rcu_read_unlock() #10, !dbg !11523
  ret void, !dbg !11524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @arch_atomic64_sub_and_test(i64 %i, %struct.atomic64_t* %v) #0 !dbg !11525 {
entry:
  %i.addr = alloca i64, align 8
  %v.addr = alloca %struct.atomic64_t*, align 8
  %c = alloca i8, align 1
  %tmp = alloca i8, align 1
  store i64 %i, i64* %i.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !11526, metadata !DIExpression()), !dbg !11527
  store %struct.atomic64_t* %v, %struct.atomic64_t** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr, metadata !11528, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.declare(metadata i8* %c, metadata !11530, metadata !DIExpression()), !dbg !11532
  %0 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr, align 8, !dbg !11532
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %0, i32 0, i32 0, !dbg !11532
  %1 = load i64, i64* %i.addr, align 8, !dbg !11532
  %2 = call i8 asm sideeffect "subq $2, $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},er,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %counter, i64 %1, i64* %counter) #7, !dbg !11532, !srcloc !11533
  store i8 %2, i8* %c, align 1, !dbg !11532
  %3 = load i8, i8* %c, align 1, !dbg !11532
  %tobool = trunc i8 %3 to i1, !dbg !11532
  %frombool = zext i1 %tobool to i8, !dbg !11532
  store i8 %frombool, i8* %tmp, align 1, !dbg !11532
  %4 = load i8, i8* %tmp, align 1, !dbg !11532
  %tobool1 = trunc i8 %4 to i1, !dbg !11532
  ret i1 %tobool1, !dbg !11534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_mq_requeue_cmd(%struct.scsi_cmnd* %cmd) #0 !dbg !11535 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11536, metadata !DIExpression()), !dbg !11537
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11538
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 19, !dbg !11540
  %1 = load %struct.request*, %struct.request** %request, align 8, !dbg !11540
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %1, i32 0, i32 4, !dbg !11541
  %2 = load i32, i32* %rq_flags, align 4, !dbg !11541
  %and = and i32 %2, 128, !dbg !11542
  %tobool = icmp ne i32 %and, 0, !dbg !11542
  br i1 %tobool, label %if.then, label %if.else, !dbg !11543

if.then:                                          ; preds = %entry
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11544
  %request1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 19, !dbg !11546
  %4 = load %struct.request*, %struct.request** %request1, align 8, !dbg !11546
  %rq_flags2 = getelementptr inbounds %struct.request, %struct.request* %4, i32 0, i32 4, !dbg !11547
  %5 = load i32, i32* %rq_flags2, align 4, !dbg !11548
  %and3 = and i32 %5, -129, !dbg !11548
  store i32 %and3, i32* %rq_flags2, align 4, !dbg !11548
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11549
  call void @scsi_mq_uninit_cmd(%struct.scsi_cmnd* %6) #10, !dbg !11550
  br label %if.end20, !dbg !11551

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11552, metadata !DIExpression()), !dbg !11555
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !11555
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !11556
  %tobool4 = icmp ne i32 %7, 0, !dbg !11556
  %lnot = xor i1 %tobool4, true, !dbg !11556
  %lnot5 = xor i1 %lnot, true, !dbg !11556
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !11556
  %conv = sext i32 %lnot.ext to i64, !dbg !11556
  %tobool6 = icmp ne i64 %conv, 0, !dbg !11556
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !11555

if.then7:                                         ; preds = %if.else
  br label %do.body, !dbg !11556

do.body:                                          ; preds = %if.then7
  br label %do.body8, !dbg !11558

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !11560

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !11558

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 160, i32 2307, i64 12) #7, !dbg !11562, !srcloc !11564
  br label %do.end10, !dbg !11562

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 300) #7, !dbg !11565, !srcloc !11567
  br label %do.body11, !dbg !11558

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !11568

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !11558

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !11558

if.end:                                           ; preds = %do.end13, %if.else
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !11555
  %tobool14 = icmp ne i32 %8, 0, !dbg !11555
  %lnot15 = xor i1 %tobool14, true, !dbg !11555
  %lnot17 = xor i1 %lnot15, true, !dbg !11555
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !11555
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !11555
  store i64 %conv19, i64* %tmp, align 8, !dbg !11556
  %9 = load i64, i64* %tmp, align 8, !dbg !11555
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11570
  %request21 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %10, i32 0, i32 19, !dbg !11571
  %11 = load %struct.request*, %struct.request** %request21, align 8, !dbg !11571
  call void @blk_mq_requeue_request(%struct.request* %11, i1 zeroext true) #10, !dbg !11572
  ret void, !dbg !11573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @scsi_cmd_runtime_exceeced(%struct.scsi_cmnd* %cmd) #0 !dbg !11574 {
entry:
  %retval = alloca i1, align 1
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %req = alloca %struct.request*, align 8
  %wait_for = alloca i64, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11577, metadata !DIExpression()), !dbg !11578
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !11579, metadata !DIExpression()), !dbg !11580
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11581
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 19, !dbg !11582
  %1 = load %struct.request*, %struct.request** %request, align 8, !dbg !11582
  store %struct.request* %1, %struct.request** %req, align 8, !dbg !11580
  call void @llvm.dbg.declare(metadata i64* %wait_for, metadata !11583, metadata !DIExpression()), !dbg !11584
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11585
  %allowed = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 8, !dbg !11587
  %3 = load i32, i32* %allowed, align 4, !dbg !11587
  %cmp = icmp eq i32 %3, -1, !dbg !11588
  br i1 %cmp, label %if.then, label %if.end, !dbg !11589

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11590
  br label %return, !dbg !11590

if.end:                                           ; preds = %entry
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11591
  %allowed1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 8, !dbg !11592
  %5 = load i32, i32* %allowed1, align 4, !dbg !11592
  %add = add i32 %5, 1, !dbg !11593
  %6 = load %struct.request*, %struct.request** %req, align 8, !dbg !11594
  %timeout = getelementptr inbounds %struct.request, %struct.request* %6, i32 0, i32 26, !dbg !11595
  %7 = load i32, i32* %timeout, align 4, !dbg !11595
  %mul = mul i32 %add, %7, !dbg !11596
  %conv = zext i32 %mul to i64, !dbg !11597
  store i64 %conv, i64* %wait_for, align 8, !dbg !11598
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11599
  %jiffies_at_alloc = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 6, !dbg !11599
  %9 = load i64, i64* %jiffies_at_alloc, align 8, !dbg !11599
  %10 = load i64, i64* %wait_for, align 8, !dbg !11599
  %add2 = add i64 %9, %10, !dbg !11599
  %11 = load volatile i64, i64* @jiffies, align 8, !dbg !11599
  %sub = sub i64 %add2, %11, !dbg !11599
  %cmp3 = icmp slt i64 %sub, 0, !dbg !11599
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !11601

if.then5:                                         ; preds = %if.end
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11602
  %13 = load i64, i64* %wait_for, align 8, !dbg !11604
  %div = udiv i64 %13, 250, !dbg !11605
  call void (i8*, %struct.scsi_cmnd*, i8*, ...) @scmd_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), %struct.scsi_cmnd* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i64 %div) #10, !dbg !11606
  store i1 true, i1* %retval, align 1, !dbg !11607
  br label %return, !dbg !11607

if.end6:                                          ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !11608
  br label %return, !dbg !11608

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %14 = load i1, i1* %retval, align 1, !dbg !11609
  ret i1 %14, !dbg !11609
}

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @scsi_print_result(%struct.scsi_cmnd*, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local void @scsi_print_command(%struct.scsi_cmnd*) #2

; Function Attrs: noredzone
declare dso_local i32 @blk_rq_err_bytes(%struct.request*) #2

; Function Attrs: noredzone
declare dso_local void @scmd_printk(i8*, %struct.scsi_cmnd*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @op_is_write(i32 %op) #0 !dbg !11610 {
entry:
  %op.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !11611, metadata !DIExpression()), !dbg !11612
  %0 = load i32, i32* %op.addr, align 4, !dbg !11613
  %and = and i32 %0, 1, !dbg !11614
  %tobool = icmp ne i32 %and, 0, !dbg !11615
  ret i1 %tobool, !dbg !11616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_set_page(%struct.scatterlist* %sg, %struct.page* %page, i32 %len, i32 %offset) #0 !dbg !11617 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %page.addr = alloca %struct.page*, align 8
  %len.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !11620, metadata !DIExpression()), !dbg !11621
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !11622, metadata !DIExpression()), !dbg !11623
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !11624, metadata !DIExpression()), !dbg !11625
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11626, metadata !DIExpression()), !dbg !11627
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !11628
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !11629
  call void @sg_assign_page(%struct.scatterlist* %0, %struct.page* %1) #10, !dbg !11630
  %2 = load i32, i32* %offset.addr, align 4, !dbg !11631
  %3 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !11632
  %offset1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %3, i32 0, i32 1, !dbg !11633
  store i32 %2, i32* %offset1, align 8, !dbg !11634
  %4 = load i32, i32* %len.addr, align 4, !dbg !11635
  %5 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !11636
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %5, i32 0, i32 2, !dbg !11637
  store i32 %4, i32* %length, align 4, !dbg !11638
  ret void, !dbg !11639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !11640 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !11644, metadata !DIExpression()), !dbg !11645
  call void @llvm.dbg.declare(metadata i64* %y, metadata !11646, metadata !DIExpression()), !dbg !11647
  %0 = load i64, i64* %x.addr, align 8, !dbg !11648
  %sub = sub i64 %0, -2147483648, !dbg !11649
  store i64 %sub, i64* %y, align 8, !dbg !11647
  %1 = load i64, i64* %y, align 8, !dbg !11650
  %2 = load i64, i64* %x.addr, align 8, !dbg !11651
  %3 = load i64, i64* %y, align 8, !dbg !11652
  %cmp = icmp ugt i64 %2, %3, !dbg !11653
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11654

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !11655
  br label %cond.end, !dbg !11654

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !11656
  %sub1 = sub i64 -2147483648, %5, !dbg !11657
  br label %cond.end, !dbg !11654

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !11654
  %add = add i64 %1, %cond, !dbg !11658
  store i64 %add, i64* %x.addr, align 8, !dbg !11659
  %6 = load i64, i64* %x.addr, align 8, !dbg !11660
  ret i64 %6, !dbg !11661
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_assign_page(%struct.scatterlist* %sg, %struct.page* %page) #0 !dbg !11662 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %page.addr = alloca %struct.page*, align 8
  %page_link = alloca i64, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !11665, metadata !DIExpression()), !dbg !11666
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !11667, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.declare(metadata i64* %page_link, metadata !11669, metadata !DIExpression()), !dbg !11670
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !11671
  %page_link1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !11672
  %1 = load i64, i64* %page_link1, align 8, !dbg !11672
  %and = and i64 %1, 3, !dbg !11673
  store i64 %and, i64* %page_link, align 8, !dbg !11670
  br label %do.body, !dbg !11674

do.body:                                          ; preds = %entry
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !11675
  %3 = ptrtoint %struct.page* %2 to i64, !dbg !11675
  %and2 = and i64 %3, 3, !dbg !11675
  %tobool = icmp ne i64 %and2, 0, !dbg !11675
  %lnot = xor i1 %tobool, true, !dbg !11675
  %lnot3 = xor i1 %lnot, true, !dbg !11675
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11675
  %conv = sext i32 %lnot.ext to i64, !dbg !11675
  %tobool4 = icmp ne i64 %conv, 0, !dbg !11675
  br i1 %tobool4, label %if.then, label %if.end, !dbg !11678

if.then:                                          ; preds = %do.body
  br label %do.body5, !dbg !11675

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !11679

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !11681

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !11679

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0), i32 95, i32 0, i64 12) #7, !dbg !11683, !srcloc !11685
  br label %do.end8, !dbg !11683

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !11679

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 262) #7, !dbg !11686, !srcloc !11689
  unreachable, !dbg !11690

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !11679

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !11679

if.end:                                           ; preds = %do.end11, %do.body
  br label %do.end12, !dbg !11678

do.end12:                                         ; preds = %if.end
  %4 = load i64, i64* %page_link, align 8, !dbg !11691
  %5 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !11692
  %6 = ptrtoint %struct.page* %5 to i64, !dbg !11693
  %or = or i64 %4, %6, !dbg !11694
  %7 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !11695
  %page_link13 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %7, i32 0, i32 0, !dbg !11696
  store i64 %or, i64* %page_link13, align 8, !dbg !11697
  ret void, !dbg !11698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_op_is_scsi(i32 %op) #0 !dbg !11699 {
entry:
  %op.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !11700, metadata !DIExpression()), !dbg !11701
  %0 = load i32, i32* %op.addr, align 4, !dbg !11702
  %cmp = icmp eq i32 %0, 32, !dbg !11703
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11704

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %op.addr, align 4, !dbg !11705
  %cmp1 = icmp eq i32 %1, 33, !dbg !11706
  br label %lor.end, !dbg !11704

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !11707
}

; Function Attrs: noredzone
declare dso_local void @scsi_req_init(%struct.scsi_request*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_rcu_head(%struct.callback_head* %head) #0 !dbg !11708 {
entry:
  %head.addr = alloca %struct.callback_head*, align 8
  store %struct.callback_head* %head, %struct.callback_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.callback_head** %head.addr, metadata !11709, metadata !DIExpression()), !dbg !11710
  ret void, !dbg !11711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !11712 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11713, metadata !DIExpression()), !dbg !11714
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11715, metadata !DIExpression()), !dbg !11716
  ret i1 true, !dbg !11717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @scsi_queue_rq(%struct.blk_mq_hw_ctx* %hctx, %struct.blk_mq_queue_data* %bd) #0 !dbg !11718 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5781, metadata !DIExpression()), !dbg !11719
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5792, metadata !DIExpression()), !dbg !11723
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5802, metadata !DIExpression()), !dbg !11725
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5804, metadata !DIExpression()), !dbg !11726
  %retval = alloca i8, align 1
  %hctx.addr = alloca %struct.blk_mq_hw_ctx*, align 8
  %bd.addr = alloca %struct.blk_mq_queue_data*, align 8
  %req = alloca %struct.request*, align 8
  %q = alloca %struct.request_queue*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %ret = alloca i8, align 1
  %reason = alloca i32, align 4
  store %struct.blk_mq_hw_ctx* %hctx, %struct.blk_mq_hw_ctx** %hctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_hw_ctx** %hctx.addr, metadata !11727, metadata !DIExpression()), !dbg !11728
  store %struct.blk_mq_queue_data* %bd, %struct.blk_mq_queue_data** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_queue_data** %bd.addr, metadata !11729, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !11731, metadata !DIExpression()), !dbg !11732
  %0 = load %struct.blk_mq_queue_data*, %struct.blk_mq_queue_data** %bd.addr, align 8, !dbg !11733
  %rq = getelementptr inbounds %struct.blk_mq_queue_data, %struct.blk_mq_queue_data* %0, i32 0, i32 0, !dbg !11734
  %1 = load %struct.request*, %struct.request** %rq, align 8, !dbg !11734
  store %struct.request* %1, %struct.request** %req, align 8, !dbg !11732
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !11735, metadata !DIExpression()), !dbg !11736
  %2 = load %struct.request*, %struct.request** %req, align 8, !dbg !11737
  %q1 = getelementptr inbounds %struct.request, %struct.request* %2, i32 0, i32 0, !dbg !11738
  %3 = load %struct.request_queue*, %struct.request_queue** %q1, align 8, !dbg !11738
  store %struct.request_queue* %3, %struct.request_queue** %q, align 8, !dbg !11736
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !11739, metadata !DIExpression()), !dbg !11740
  %4 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !11741
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %4, i32 0, i32 11, !dbg !11742
  %5 = load i8*, i8** %queuedata, align 8, !dbg !11742
  %6 = bitcast i8* %5 to %struct.scsi_device*, !dbg !11741
  store %struct.scsi_device* %6, %struct.scsi_device** %sdev, align 8, !dbg !11740
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11743, metadata !DIExpression()), !dbg !11744
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11745
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %7, i32 0, i32 0, !dbg !11746
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !11746
  store %struct.Scsi_Host* %8, %struct.Scsi_Host** %shost, align 8, !dbg !11744
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !11747, metadata !DIExpression()), !dbg !11748
  %9 = load %struct.request*, %struct.request** %req, align 8, !dbg !11749
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %9) #10, !dbg !11750
  %10 = bitcast i8* %call to %struct.scsi_cmnd*, !dbg !11750
  store %struct.scsi_cmnd* %10, %struct.scsi_cmnd** %cmd, align 8, !dbg !11748
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !11751, metadata !DIExpression()), !dbg !11752
  call void @llvm.dbg.declare(metadata i32* %reason, metadata !11753, metadata !DIExpression()), !dbg !11754
  %11 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11755
  %sdev_state = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %11, i32 0, i32 60, !dbg !11755
  %12 = load i32, i32* %sdev_state, align 8, !dbg !11755
  %cmp = icmp ne i32 %12, 2, !dbg !11755
  %lnot = xor i1 %cmp, true, !dbg !11755
  %lnot2 = xor i1 %lnot, true, !dbg !11755
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11755
  %conv = sext i32 %lnot.ext to i64, !dbg !11755
  %tobool = icmp ne i64 %conv, 0, !dbg !11755
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11757

if.then:                                          ; preds = %entry
  %13 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11758
  %14 = load %struct.request*, %struct.request** %req, align 8, !dbg !11760
  %call3 = call zeroext i8 @scsi_device_state_check(%struct.scsi_device* %13, %struct.request* %14) #10, !dbg !11761
  store i8 %call3, i8* %ret, align 1, !dbg !11762
  %15 = load i8, i8* %ret, align 1, !dbg !11763
  %conv4 = zext i8 %15 to i32, !dbg !11763
  %cmp5 = icmp ne i32 %conv4, 0, !dbg !11765
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !11766

if.then7:                                         ; preds = %if.then
  br label %out_put_budget, !dbg !11767

if.end:                                           ; preds = %if.then
  br label %if.end8, !dbg !11768

if.end8:                                          ; preds = %if.end, %entry
  store i8 9, i8* %ret, align 1, !dbg !11769
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11770
  %17 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11772
  %call9 = call i32 @scsi_target_queue_ready(%struct.Scsi_Host* %16, %struct.scsi_device* %17) #10, !dbg !11773
  %tobool10 = icmp ne i32 %call9, 0, !dbg !11773
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !11774

if.then11:                                        ; preds = %if.end8
  br label %out_put_budget, !dbg !11775

if.end12:                                         ; preds = %if.end8
  %18 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !11776
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11778
  %20 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11779
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11780
  %call13 = call i32 @scsi_host_queue_ready(%struct.request_queue* %18, %struct.Scsi_Host* %19, %struct.scsi_device* %20, %struct.scsi_cmnd* %21) #10, !dbg !11781
  %tobool14 = icmp ne i32 %call13, 0, !dbg !11781
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !11782

if.then15:                                        ; preds = %if.end12
  br label %out_dec_target_busy, !dbg !11783

if.end16:                                         ; preds = %if.end12
  %22 = load %struct.request*, %struct.request** %req, align 8, !dbg !11784
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %22, i32 0, i32 4, !dbg !11786
  %23 = load i32, i32* %rq_flags, align 4, !dbg !11786
  %and = and i32 %23, 128, !dbg !11787
  %tobool17 = icmp ne i32 %and, 0, !dbg !11787
  br i1 %tobool17, label %if.else, label %if.then18, !dbg !11788

if.then18:                                        ; preds = %if.end16
  %24 = load %struct.request*, %struct.request** %req, align 8, !dbg !11789
  %call19 = call zeroext i8 @scsi_prepare_cmd(%struct.request* %24) #10, !dbg !11791
  store i8 %call19, i8* %ret, align 1, !dbg !11792
  %25 = load i8, i8* %ret, align 1, !dbg !11793
  %conv20 = zext i8 %25 to i32, !dbg !11793
  %cmp21 = icmp ne i32 %conv20, 0, !dbg !11795
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !11796

if.then23:                                        ; preds = %if.then18
  br label %out_dec_host_busy, !dbg !11797

if.end24:                                         ; preds = %if.then18
  %26 = load %struct.request*, %struct.request** %req, align 8, !dbg !11798
  %rq_flags25 = getelementptr inbounds %struct.request, %struct.request* %26, i32 0, i32 4, !dbg !11799
  %27 = load i32, i32* %rq_flags25, align 4, !dbg !11800
  %or = or i32 %27, 128, !dbg !11800
  store i32 %or, i32* %rq_flags25, align 4, !dbg !11800
  br label %if.end26, !dbg !11801

if.else:                                          ; preds = %if.end16
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11802
  %state = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %28, i32 0, i32 26, !dbg !11804
  call void @clear_bit(i64 0, i64* %state) #10, !dbg !11805
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.end24
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11806
  %flags = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %29, i32 0, i32 25, !dbg !11807
  %30 = load i32, i32* %flags, align 4, !dbg !11808
  %and27 = and i32 %30, 6, !dbg !11808
  store i32 %and27, i32* %flags, align 4, !dbg !11808
  %31 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11809
  %simple_tags = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %31, i32 0, i32 39, !dbg !11811
  %32 = bitcast [6 x i8]* %simple_tags to i48*, !dbg !11811
  %bf.load = load i48, i48* %32, align 4, !dbg !11811
  %bf.lshr = lshr i48 %bf.load, 12, !dbg !11811
  %bf.clear = and i48 %bf.lshr, 1, !dbg !11811
  %bf.cast = trunc i48 %bf.clear to i32, !dbg !11811
  %tobool28 = icmp ne i32 %bf.cast, 0, !dbg !11809
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !11812

if.then29:                                        ; preds = %if.end26
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11813
  %flags30 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %33, i32 0, i32 25, !dbg !11814
  %34 = load i32, i32* %flags30, align 4, !dbg !11815
  %or31 = or i32 %34, 1, !dbg !11815
  store i32 %or31, i32* %flags30, align 4, !dbg !11815
  br label %if.end32, !dbg !11813

if.end32:                                         ; preds = %if.then29, %if.end26
  %35 = load %struct.blk_mq_queue_data*, %struct.blk_mq_queue_data** %bd.addr, align 8, !dbg !11816
  %last = getelementptr inbounds %struct.blk_mq_queue_data, %struct.blk_mq_queue_data* %35, i32 0, i32 1, !dbg !11818
  %36 = load i8, i8* %last, align 8, !dbg !11818
  %tobool33 = trunc i8 %36 to i1, !dbg !11818
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !11819

if.then34:                                        ; preds = %if.end32
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11820
  %flags35 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %37, i32 0, i32 25, !dbg !11821
  %38 = load i32, i32* %flags35, align 4, !dbg !11822
  %or36 = or i32 %38, 8, !dbg !11822
  store i32 %or36, i32* %flags35, align 4, !dbg !11822
  br label %if.end37, !dbg !11820

if.end37:                                         ; preds = %if.then34, %if.end32
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11823
  call void @scsi_set_resid(%struct.scsi_cmnd* %39, i32 0) #10, !dbg !11824
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11825
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 20, !dbg !11826
  %41 = load i8*, i8** %sense_buffer, align 8, !dbg !11826
  call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 96, i1 false), !dbg !11827
  %42 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11828
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %42, i32 0, i32 21, !dbg !11829
  store void (%struct.scsi_cmnd*)* @scsi_mq_done, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !11830
  %43 = load %struct.request*, %struct.request** %req, align 8, !dbg !11831
  call void @blk_mq_start_request(%struct.request* %43) #10, !dbg !11832
  %44 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11833
  %call38 = call i32 @scsi_dispatch_cmd(%struct.scsi_cmnd* %44) #10, !dbg !11834
  store i32 %call38, i32* %reason, align 4, !dbg !11835
  %45 = load i32, i32* %reason, align 4, !dbg !11836
  %tobool39 = icmp ne i32 %45, 0, !dbg !11836
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !11838

if.then40:                                        ; preds = %if.end37
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11839
  %47 = load i32, i32* %reason, align 4, !dbg !11841
  call void @scsi_set_blocked(%struct.scsi_cmnd* %46, i32 %47) #10, !dbg !11842
  store i8 9, i8* %ret, align 1, !dbg !11843
  br label %out_dec_host_busy, !dbg !11844

if.end41:                                         ; preds = %if.end37
  store i8 0, i8* %retval, align 1, !dbg !11845
  br label %return, !dbg !11845

out_dec_host_busy:                                ; preds = %if.then40, %if.then23
  call void @llvm.dbg.label(metadata !11846), !dbg !11847
  %48 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11848
  %49 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11849
  call void @scsi_dec_host_busy(%struct.Scsi_Host* %48, %struct.scsi_cmnd* %49) #10, !dbg !11850
  br label %out_dec_target_busy, !dbg !11850

out_dec_target_busy:                              ; preds = %out_dec_host_busy, %if.then15
  call void @llvm.dbg.label(metadata !11851), !dbg !11852
  %50 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11853
  %call42 = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %50) #10, !dbg !11854
  %can_queue = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %call42, i32 0, i32 10, !dbg !11855
  %51 = load i32, i32* %can_queue, align 8, !dbg !11855
  %cmp43 = icmp ugt i32 %51, 0, !dbg !11856
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !11857

if.then45:                                        ; preds = %out_dec_target_busy
  %52 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11858
  %call46 = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %52) #10, !dbg !11859
  %target_busy = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %call46, i32 0, i32 8, !dbg !11860
  store %struct.atomic_t* %target_busy, %struct.atomic_t** %v.addr.i, align 8
  %53 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11861
  %54 = bitcast %struct.atomic_t* %53 to i8*, !dbg !11861
  store i8* %54, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %55 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11862
  %56 = load i64, i64* %size.addr.i.i, align 8, !dbg !11863
  %conv.i.i = trunc i64 %56 to i32, !dbg !11863
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %55, i32 %conv.i.i) #11, !dbg !11864
  %57 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11865
  %58 = load i64, i64* %size.addr.i.i, align 8, !dbg !11865
  call void @kcsan_check_access(i8* %57, i64 %58, i32 7) #11, !dbg !11865
  %59 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11866
  store %struct.atomic_t* %59, %struct.atomic_t** %v.addr.i1.i, align 8
  %60 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11867
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %60, i32 0, i32 0, !dbg !11868
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !11869, !srcloc !5844
  br label %if.end47, !dbg !11870

if.end47:                                         ; preds = %if.then45, %out_dec_target_busy
  br label %out_put_budget, !dbg !11871

out_put_budget:                                   ; preds = %if.end47, %if.then11, %if.then7
  call void @llvm.dbg.label(metadata !11872), !dbg !11873
  %61 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !11874
  call void @scsi_mq_put_budget(%struct.request_queue* %61) #10, !dbg !11875
  %62 = load i8, i8* %ret, align 1, !dbg !11876
  %conv48 = zext i8 %62 to i32, !dbg !11876
  switch i32 %conv48, label %sw.default [
    i32 0, label %sw.bb
    i32 9, label %sw.bb49
    i32 14, label %sw.bb49
  ], !dbg !11877

sw.bb:                                            ; preds = %out_put_budget
  br label %sw.epilog, !dbg !11878

sw.bb49:                                          ; preds = %out_put_budget, %out_put_budget
  %63 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11880
  %call50 = call i32 @scsi_device_blocked(%struct.scsi_device* %63) #10, !dbg !11882
  %tobool51 = icmp ne i32 %call50, 0, !dbg !11882
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !11883

if.then52:                                        ; preds = %sw.bb49
  store i8 13, i8* %ret, align 1, !dbg !11884
  br label %if.end53, !dbg !11885

if.end53:                                         ; preds = %if.then52, %sw.bb49
  br label %sw.epilog, !dbg !11886

sw.default:                                       ; preds = %out_put_budget
  %64 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11887
  %call54 = call i32 @scsi_device_online(%struct.scsi_device* %64) #10, !dbg !11887
  %tobool55 = icmp ne i32 %call54, 0, !dbg !11887
  %lnot56 = xor i1 %tobool55, true, !dbg !11887
  %lnot58 = xor i1 %lnot56, true, !dbg !11887
  %lnot60 = xor i1 %lnot58, true, !dbg !11887
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !11887
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !11887
  %tobool63 = icmp ne i64 %conv62, 0, !dbg !11887
  br i1 %tobool63, label %if.then64, label %if.else66, !dbg !11889

if.then64:                                        ; preds = %sw.default
  %65 = load %struct.request*, %struct.request** %req, align 8, !dbg !11890
  %call65 = call %struct.scsi_request* @scsi_req(%struct.request* %65) #10, !dbg !11891
  %result = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %call65, i32 0, i32 3, !dbg !11892
  store i32 65536, i32* %result, align 4, !dbg !11893
  br label %if.end69, !dbg !11891

if.else66:                                        ; preds = %sw.default
  %66 = load %struct.request*, %struct.request** %req, align 8, !dbg !11894
  %call67 = call %struct.scsi_request* @scsi_req(%struct.request* %66) #10, !dbg !11895
  %result68 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %call67, i32 0, i32 3, !dbg !11896
  store i32 458752, i32* %result68, align 4, !dbg !11897
  br label %if.end69

if.end69:                                         ; preds = %if.else66, %if.then64
  %67 = load %struct.request*, %struct.request** %req, align 8, !dbg !11898
  %rq_flags70 = getelementptr inbounds %struct.request, %struct.request* %67, i32 0, i32 4, !dbg !11900
  %68 = load i32, i32* %rq_flags70, align 4, !dbg !11900
  %and71 = and i32 %68, 128, !dbg !11901
  %tobool72 = icmp ne i32 %and71, 0, !dbg !11901
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !11902

if.then73:                                        ; preds = %if.end69
  %69 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11903
  call void @scsi_mq_uninit_cmd(%struct.scsi_cmnd* %69) #10, !dbg !11904
  br label %if.end74, !dbg !11904

if.end74:                                         ; preds = %if.then73, %if.end69
  %70 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11905
  call void @scsi_run_queue_async(%struct.scsi_device* %70) #10, !dbg !11906
  br label %sw.epilog, !dbg !11907

sw.epilog:                                        ; preds = %if.end74, %if.end53, %sw.bb
  %71 = load i8, i8* %ret, align 1, !dbg !11908
  store i8 %71, i8* %retval, align 1, !dbg !11909
  br label %return, !dbg !11909

return:                                           ; preds = %sw.epilog, %if.end41
  %72 = load i8, i8* %retval, align 1, !dbg !11910
  ret i8 %72, !dbg !11910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_commit_rqs(%struct.blk_mq_hw_ctx* %hctx) #0 !dbg !11911 {
entry:
  %hctx.addr = alloca %struct.blk_mq_hw_ctx*, align 8
  %q = alloca %struct.request_queue*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.blk_mq_hw_ctx* %hctx, %struct.blk_mq_hw_ctx** %hctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_hw_ctx** %hctx.addr, metadata !11912, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !11914, metadata !DIExpression()), !dbg !11915
  %0 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %hctx.addr, align 8, !dbg !11916
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, %struct.blk_mq_hw_ctx* %0, i32 0, i32 7, !dbg !11917
  %1 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !11917
  store %struct.request_queue* %1, %struct.request_queue** %q, align 8, !dbg !11915
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !11918, metadata !DIExpression()), !dbg !11919
  %2 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !11920
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %2, i32 0, i32 11, !dbg !11921
  %3 = load i8*, i8** %queuedata, align 8, !dbg !11921
  %4 = bitcast i8* %3 to %struct.scsi_device*, !dbg !11920
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !11919
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11922, metadata !DIExpression()), !dbg !11923
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11924
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !11925
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !11925
  store %struct.Scsi_Host* %6, %struct.Scsi_Host** %shost, align 8, !dbg !11923
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11926
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 10, !dbg !11927
  %8 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !11927
  %commit_rqs = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %8, i32 0, i32 7, !dbg !11928
  %9 = load void (%struct.Scsi_Host*, i16)*, void (%struct.Scsi_Host*, i16)** %commit_rqs, align 8, !dbg !11928
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11929
  %11 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %hctx.addr, align 8, !dbg !11930
  %queue_num = getelementptr inbounds %struct.blk_mq_hw_ctx, %struct.blk_mq_hw_ctx* %11, i32 0, i32 25, !dbg !11931
  %12 = load i32, i32* %queue_num, align 4, !dbg !11931
  %conv = trunc i32 %12 to i16, !dbg !11930
  call void %9(%struct.Scsi_Host* %10, i16 zeroext %conv) #10, !dbg !11926
  ret void, !dbg !11932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @scsi_mq_get_budget(%struct.request_queue* %q) #0 !dbg !11933 {
entry:
  %v.addr.i1.i9 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i9, metadata !9987, metadata !DIExpression()), !dbg !11934
  %v.addr.i.i10 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i10, metadata !7162, metadata !DIExpression()), !dbg !11938
  %size.addr.i.i11 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i11, metadata !7166, metadata !DIExpression()), !dbg !11940
  %v.addr.i12 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i12, metadata !10002, metadata !DIExpression()), !dbg !11941
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9953, metadata !DIExpression()), !dbg !11942
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5792, metadata !DIExpression()), !dbg !11945
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5802, metadata !DIExpression()), !dbg !11947
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9962, metadata !DIExpression()), !dbg !11948
  %retval = alloca i1, align 1
  %q.addr = alloca %struct.request_queue*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !11949, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !11951, metadata !DIExpression()), !dbg !11952
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !11953
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %0, i32 0, i32 11, !dbg !11954
  %1 = load i8*, i8** %queuedata, align 8, !dbg !11954
  %2 = bitcast i8* %1 to %struct.scsi_device*, !dbg !11953
  store %struct.scsi_device* %2, %struct.scsi_device** %sdev, align 8, !dbg !11952
  %3 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !11955
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11957
  %call = call i32 @scsi_dev_queue_ready(%struct.request_queue* %3, %struct.scsi_device* %4) #10, !dbg !11958
  %tobool = icmp ne i32 %call, 0, !dbg !11958
  br i1 %tobool, label %if.then, label %if.end, !dbg !11959

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !11960
  br label %return, !dbg !11960

if.end:                                           ; preds = %entry
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11961
  %restarts = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 6, !dbg !11962
  store %struct.atomic_t* %restarts, %struct.atomic_t** %v.addr.i, align 8
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11963
  %7 = bitcast %struct.atomic_t* %6 to i8*, !dbg !11963
  store i8* %7, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11964
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !11965
  %conv.i.i = trunc i64 %9 to i32, !dbg !11965
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %8, i32 %conv.i.i) #11, !dbg !11966
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11967
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !11967
  call void @kcsan_check_access(i8* %10, i64 %11, i32 7) #11, !dbg !11967
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11968
  store %struct.atomic_t* %12, %struct.atomic_t** %v.addr.i1.i, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11969
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !11970
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !11971, !srcloc !9977
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11972, !srcloc !11973
  %14 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11974
  %device_busy = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %14, i32 0, i32 4, !dbg !11974
  store %struct.atomic_t* %device_busy, %struct.atomic_t** %v.addr.i12, align 8
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i12, align 8, !dbg !11975
  %16 = bitcast %struct.atomic_t* %15 to i8*, !dbg !11975
  store i8* %16, i8** %v.addr.i.i10, align 8
  store i64 4, i64* %size.addr.i.i11, align 8
  %17 = load i8*, i8** %v.addr.i.i10, align 8, !dbg !11976
  %18 = load i64, i64* %size.addr.i.i11, align 8, !dbg !11977
  %conv.i.i13 = trunc i64 %18 to i32, !dbg !11977
  %call.i.i14 = call zeroext i1 @kasan_check_read(i8* %17, i32 %conv.i.i13) #11, !dbg !11978
  %19 = load i8*, i8** %v.addr.i.i10, align 8, !dbg !11979
  %20 = load i64, i64* %size.addr.i.i11, align 8, !dbg !11979
  call void @kcsan_check_access(i8* %19, i64 %20, i32 4) #11, !dbg !11979
  %21 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i12, align 8, !dbg !11980
  store %struct.atomic_t* %21, %struct.atomic_t** %v.addr.i1.i9, align 8
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i9, align 8, !dbg !11981
  %counter.i.i15 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %22, i32 0, i32 0, !dbg !11981
  %23 = load volatile i32, i32* %counter.i.i15, align 4, !dbg !11981
  %cmp = icmp eq i32 %23, 0, !dbg !11974
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11974

land.rhs:                                         ; preds = %if.end
  %24 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11974
  %call2 = call i32 @scsi_device_blocked(%struct.scsi_device* %24) #10, !dbg !11974
  %tobool3 = icmp ne i32 %call2, 0, !dbg !11974
  %lnot = xor i1 %tobool3, true, !dbg !11974
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %25 = phi i1 [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !11982
  %lnot4 = xor i1 %25, true, !dbg !11974
  %lnot5 = xor i1 %lnot4, true, !dbg !11974
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !11974
  %conv = sext i32 %lnot.ext to i64, !dbg !11974
  %tobool6 = icmp ne i64 %conv, 0, !dbg !11974
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !11983

if.then7:                                         ; preds = %land.end
  %26 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11984
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %26, i32 0, i32 1, !dbg !11985
  %27 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !11985
  call void @blk_mq_delay_run_hw_queues(%struct.request_queue* %27, i64 3) #10, !dbg !11986
  br label %if.end8, !dbg !11986

if.end8:                                          ; preds = %if.then7, %land.end
  store i1 false, i1* %retval, align 1, !dbg !11987
  br label %return, !dbg !11987

return:                                           ; preds = %if.end8, %if.then
  %28 = load i1, i1* %retval, align 1, !dbg !11988
  ret i1 %28, !dbg !11988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_mq_put_budget(%struct.request_queue* %q) #0 !dbg !11989 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5781, metadata !DIExpression()), !dbg !11990
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5792, metadata !DIExpression()), !dbg !11993
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5802, metadata !DIExpression()), !dbg !11995
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5804, metadata !DIExpression()), !dbg !11996
  %q.addr = alloca %struct.request_queue*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !11997, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !11999, metadata !DIExpression()), !dbg !12000
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !12001
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %0, i32 0, i32 11, !dbg !12002
  %1 = load i8*, i8** %queuedata, align 8, !dbg !12002
  %2 = bitcast i8* %1 to %struct.scsi_device*, !dbg !12001
  store %struct.scsi_device* %2, %struct.scsi_device** %sdev, align 8, !dbg !12000
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12003
  %device_busy = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 4, !dbg !12004
  store %struct.atomic_t* %device_busy, %struct.atomic_t** %v.addr.i, align 8
  %4 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12005
  %5 = bitcast %struct.atomic_t* %4 to i8*, !dbg !12005
  store i8* %5, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12006
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !12007
  %conv.i.i = trunc i64 %7 to i32, !dbg !12007
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %6, i32 %conv.i.i) #11, !dbg !12008
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12009
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !12009
  call void @kcsan_check_access(i8* %8, i64 %9, i32 7) #11, !dbg !12009
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12010
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i1.i, align 8
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12011
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !12012
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !12013, !srcloc !5844
  ret void, !dbg !12014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_timeout(%struct.request* %req, i1 zeroext %reserved) #0 !dbg !12015 {
entry:
  %retval = alloca i32, align 4
  %req.addr = alloca %struct.request*, align 8
  %reserved.addr = alloca i8, align 1
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !12016, metadata !DIExpression()), !dbg !12017
  %frombool = zext i1 %reserved to i8
  store i8 %frombool, i8* %reserved.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reserved.addr, metadata !12018, metadata !DIExpression()), !dbg !12019
  %0 = load i8, i8* %reserved.addr, align 1, !dbg !12020
  %tobool = trunc i8 %0 to i1, !dbg !12020
  br i1 %tobool, label %if.then, label %if.end, !dbg !12022

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !12023
  br label %return, !dbg !12023

if.end:                                           ; preds = %entry
  %1 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12024
  %call = call i32 @scsi_times_out(%struct.request* %1) #10, !dbg !12025
  store i32 %call, i32* %retval, align 4, !dbg !12026
  br label %return, !dbg !12026

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !12027
  ret i32 %2, !dbg !12027
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_softirq_done(%struct.request* %rq) #0 !dbg !12028 {
entry:
  %v.addr.i1.i8 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i8, metadata !9953, metadata !DIExpression()), !dbg !12029
  %v.addr.i.i9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i9, metadata !5792, metadata !DIExpression()), !dbg !12033
  %size.addr.i.i10 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i10, metadata !5802, metadata !DIExpression()), !dbg !12035
  %v.addr.i11 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i11, metadata !9962, metadata !DIExpression()), !dbg !12036
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9953, metadata !DIExpression()), !dbg !12037
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5792, metadata !DIExpression()), !dbg !12040
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5802, metadata !DIExpression()), !dbg !12042
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9962, metadata !DIExpression()), !dbg !12043
  %rq.addr = alloca %struct.request*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %disposition = alloca i32, align 4
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !12044, metadata !DIExpression()), !dbg !12045
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !12046, metadata !DIExpression()), !dbg !12047
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !12048
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #10, !dbg !12049
  %1 = bitcast i8* %call to %struct.scsi_cmnd*, !dbg !12049
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !12047
  call void @llvm.dbg.declare(metadata i32* %disposition, metadata !12050, metadata !DIExpression()), !dbg !12051
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12052
  %eh_entry = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 2, !dbg !12053
  call void @INIT_LIST_HEAD(%struct.list_head* %eh_entry) #10, !dbg !12054
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12055
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 1, !dbg !12056
  %4 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !12056
  %iodone_cnt = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 48, !dbg !12057
  store %struct.atomic_t* %iodone_cnt, %struct.atomic_t** %v.addr.i, align 8
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12058
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !12058
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12059
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !12060
  %conv.i.i = trunc i64 %8 to i32, !dbg !12060
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %7, i32 %conv.i.i) #11, !dbg !12061
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12062
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !12062
  call void @kcsan_check_access(i8* %9, i64 %10, i32 7) #11, !dbg !12062
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12063
  store %struct.atomic_t* %11, %struct.atomic_t** %v.addr.i1.i, align 8
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12064
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !12065
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !12066, !srcloc !9977
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12067
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 24, !dbg !12068
  %14 = load i32, i32* %result, align 8, !dbg !12068
  %tobool = icmp ne i32 %14, 0, !dbg !12067
  br i1 %tobool, label %if.then, label %if.end, !dbg !12069

if.then:                                          ; preds = %entry
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12070
  %device1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 1, !dbg !12071
  %16 = load %struct.scsi_device*, %struct.scsi_device** %device1, align 8, !dbg !12071
  %ioerr_cnt = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %16, i32 0, i32 49, !dbg !12072
  store %struct.atomic_t* %ioerr_cnt, %struct.atomic_t** %v.addr.i11, align 8
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i11, align 8, !dbg !12073
  %18 = bitcast %struct.atomic_t* %17 to i8*, !dbg !12073
  store i8* %18, i8** %v.addr.i.i9, align 8
  store i64 4, i64* %size.addr.i.i10, align 8
  %19 = load i8*, i8** %v.addr.i.i9, align 8, !dbg !12074
  %20 = load i64, i64* %size.addr.i.i10, align 8, !dbg !12075
  %conv.i.i12 = trunc i64 %20 to i32, !dbg !12075
  %call.i.i13 = call zeroext i1 @kasan_check_write(i8* %19, i32 %conv.i.i12) #11, !dbg !12076
  %21 = load i8*, i8** %v.addr.i.i9, align 8, !dbg !12077
  %22 = load i64, i64* %size.addr.i.i10, align 8, !dbg !12077
  call void @kcsan_check_access(i8* %21, i64 %22, i32 7) #11, !dbg !12077
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i11, align 8, !dbg !12078
  store %struct.atomic_t* %23, %struct.atomic_t** %v.addr.i1.i8, align 8
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i8, align 8, !dbg !12079
  %counter.i.i14 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %24, i32 0, i32 0, !dbg !12080
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i14, i32* %counter.i.i14) #7, !dbg !12081, !srcloc !9977
  br label %if.end, !dbg !12082

if.end:                                           ; preds = %if.then, %entry
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12083
  %call2 = call i32 @scsi_decide_disposition(%struct.scsi_cmnd* %25) #10, !dbg !12084
  store i32 %call2, i32* %disposition, align 4, !dbg !12085
  %26 = load i32, i32* %disposition, align 4, !dbg !12086
  %cmp = icmp ne i32 %26, 8194, !dbg !12088
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !12089

land.lhs.true:                                    ; preds = %if.end
  %27 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12090
  %call3 = call zeroext i1 @scsi_cmd_runtime_exceeced(%struct.scsi_cmnd* %27) #10, !dbg !12091
  br i1 %call3, label %if.then4, label %if.end5, !dbg !12092

if.then4:                                         ; preds = %land.lhs.true
  store i32 8194, i32* %disposition, align 4, !dbg !12093
  br label %if.end5, !dbg !12094

if.end5:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12095
  %29 = load i32, i32* %disposition, align 4, !dbg !12096
  call void @scsi_log_completion(%struct.scsi_cmnd* %28, i32 %29) #10, !dbg !12097
  %30 = load i32, i32* %disposition, align 4, !dbg !12098
  switch i32 %30, label %sw.default [
    i32 8194, label %sw.bb
    i32 8193, label %sw.bb6
    i32 8198, label %sw.bb7
  ], !dbg !12099

sw.bb:                                            ; preds = %if.end5
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12100
  call void @scsi_finish_command(%struct.scsi_cmnd* %31) #10, !dbg !12102
  br label %sw.epilog, !dbg !12103

sw.bb6:                                           ; preds = %if.end5
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12104
  call void @scsi_queue_insert(%struct.scsi_cmnd* %32, i32 4183) #10, !dbg !12105
  br label %sw.epilog, !dbg !12106

sw.bb7:                                           ; preds = %if.end5
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12107
  call void @scsi_queue_insert(%struct.scsi_cmnd* %33, i32 4182) #10, !dbg !12108
  br label %sw.epilog, !dbg !12109

sw.default:                                       ; preds = %if.end5
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12110
  call void @scsi_eh_scmd_add(%struct.scsi_cmnd* %34) #10, !dbg !12111
  br label %sw.epilog, !dbg !12112

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb6, %sw.bb
  ret void, !dbg !12113
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_mq_init_request(%struct.blk_mq_tag_set* %set, %struct.request* %rq, i32 %hctx_idx, i32 %numa_node) #0 !dbg !12114 {
entry:
  %retval = alloca i32, align 4
  %set.addr = alloca %struct.blk_mq_tag_set*, align 8
  %rq.addr = alloca %struct.request*, align 8
  %hctx_idx.addr = alloca i32, align 4
  %numa_node.addr = alloca i32, align 4
  %shost = alloca %struct.Scsi_Host*, align 8
  %unchecked_isa_dma = alloca i8, align 1
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %ret = alloca i32, align 4
  store %struct.blk_mq_tag_set* %set, %struct.blk_mq_tag_set** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_tag_set** %set.addr, metadata !12115, metadata !DIExpression()), !dbg !12116
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !12117, metadata !DIExpression()), !dbg !12118
  store i32 %hctx_idx, i32* %hctx_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hctx_idx.addr, metadata !12119, metadata !DIExpression()), !dbg !12120
  store i32 %numa_node, i32* %numa_node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numa_node.addr, metadata !12121, metadata !DIExpression()), !dbg !12122
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12123, metadata !DIExpression()), !dbg !12124
  %0 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %set.addr, align 8, !dbg !12125
  %driver_data = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %0, i32 0, i32 10, !dbg !12126
  %1 = load i8*, i8** %driver_data, align 8, !dbg !12126
  %2 = bitcast i8* %1 to %struct.Scsi_Host*, !dbg !12125
  store %struct.Scsi_Host* %2, %struct.Scsi_Host** %shost, align 8, !dbg !12124
  call void @llvm.dbg.declare(metadata i8* %unchecked_isa_dma, metadata !12127, metadata !DIExpression()), !dbg !12129
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12130
  %unchecked_isa_dma1 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 34, !dbg !12131
  %bf.load = load i16, i16* %unchecked_isa_dma1, align 4, !dbg !12131
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !12131
  %bf.clear = and i16 %bf.lshr, 1, !dbg !12131
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12131
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12130
  %frombool = zext i1 %tobool to i8, !dbg !12129
  store i8 %frombool, i8* %unchecked_isa_dma, align 1, !dbg !12129
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !12132, metadata !DIExpression()), !dbg !12133
  %4 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !12134
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %4) #10, !dbg !12135
  %5 = bitcast i8* %call to %struct.scsi_cmnd*, !dbg !12135
  store %struct.scsi_cmnd* %5, %struct.scsi_cmnd** %cmd, align 8, !dbg !12133
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !12136, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12138, metadata !DIExpression()), !dbg !12139
  store i32 0, i32* %ret, align 4, !dbg !12139
  %6 = load i8, i8* %unchecked_isa_dma, align 1, !dbg !12140
  %tobool2 = trunc i8 %6 to i1, !dbg !12140
  br i1 %tobool2, label %if.then, label %if.end, !dbg !12142

if.then:                                          ; preds = %entry
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12143
  %flags = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 25, !dbg !12144
  %8 = load i32, i32* %flags, align 4, !dbg !12145
  %or = or i32 %8, 2, !dbg !12145
  store i32 %or, i32* %flags, align 4, !dbg !12145
  br label %if.end, !dbg !12143

if.end:                                           ; preds = %if.then, %entry
  %9 = load i8, i8* %unchecked_isa_dma, align 1, !dbg !12146
  %tobool3 = trunc i8 %9 to i1, !dbg !12146
  %10 = load i32, i32* %numa_node.addr, align 4, !dbg !12147
  %call4 = call i8* @scsi_alloc_sense_buffer(i1 zeroext %tobool3, i32 3264, i32 %10) #10, !dbg !12148
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12149
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 20, !dbg !12150
  store i8* %call4, i8** %sense_buffer, align 8, !dbg !12151
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12152
  %sense_buffer5 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %12, i32 0, i32 20, !dbg !12154
  %13 = load i8*, i8** %sense_buffer5, align 8, !dbg !12154
  %tobool6 = icmp ne i8* %13, null, !dbg !12152
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !12155

if.then7:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !12156
  br label %return, !dbg !12156

if.end8:                                          ; preds = %if.end
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12157
  %sense_buffer9 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 20, !dbg !12158
  %15 = load i8*, i8** %sense_buffer9, align 8, !dbg !12158
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12159
  %req = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 0, !dbg !12160
  %sense = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %req, i32 0, i32 7, !dbg !12161
  store i8* %15, i8** %sense, align 8, !dbg !12162
  %17 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12163
  %call10 = call i32 @scsi_host_get_prot(%struct.Scsi_Host* %17) #10, !dbg !12165
  %tobool11 = icmp ne i32 %call10, 0, !dbg !12165
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !12166

if.then12:                                        ; preds = %if.end8
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12167
  %19 = bitcast %struct.scsi_cmnd* %18 to i8*, !dbg !12169
  %add.ptr = getelementptr i8, i8* %19, i64 392, !dbg !12170
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12171
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 10, !dbg !12172
  %21 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !12172
  %cmd_size = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %21, i32 0, i32 48, !dbg !12173
  %22 = load i32, i32* %cmd_size, align 8, !dbg !12173
  %idx.ext = zext i32 %22 to i64, !dbg !12174
  %add.ptr13 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !12174
  %23 = bitcast i8* %add.ptr13 to %struct.scatterlist*, !dbg !12169
  store %struct.scatterlist* %23, %struct.scatterlist** %sg, align 8, !dbg !12175
  %24 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12176
  %25 = bitcast %struct.scatterlist* %24 to i8*, !dbg !12177
  %26 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12178
  %call14 = call i32 @scsi_mq_inline_sgl_size(%struct.Scsi_Host* %26) #10, !dbg !12179
  %idx.ext15 = zext i32 %call14 to i64, !dbg !12180
  %add.ptr16 = getelementptr i8, i8* %25, i64 %idx.ext15, !dbg !12180
  %27 = bitcast i8* %add.ptr16 to %struct.scsi_data_buffer*, !dbg !12177
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12181
  %prot_sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %28, i32 0, i32 16, !dbg !12182
  store %struct.scsi_data_buffer* %27, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !12183
  br label %if.end17, !dbg !12184

if.end17:                                         ; preds = %if.then12, %if.end8
  %29 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12185
  %hostt18 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %29, i32 0, i32 10, !dbg !12187
  %30 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt18, align 8, !dbg !12187
  %init_cmd_priv = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %30, i32 0, i32 4, !dbg !12188
  %31 = load i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)** %init_cmd_priv, align 8, !dbg !12188
  %tobool19 = icmp ne i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* %31, null, !dbg !12185
  br i1 %tobool19, label %if.then20, label %if.end28, !dbg !12189

if.then20:                                        ; preds = %if.end17
  %32 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12190
  %hostt21 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %32, i32 0, i32 10, !dbg !12192
  %33 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt21, align 8, !dbg !12192
  %init_cmd_priv22 = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %33, i32 0, i32 4, !dbg !12193
  %34 = load i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)** %init_cmd_priv22, align 8, !dbg !12193
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12194
  %36 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12195
  %call23 = call i32 %34(%struct.Scsi_Host* %35, %struct.scsi_cmnd* %36) #10, !dbg !12190
  store i32 %call23, i32* %ret, align 4, !dbg !12196
  %37 = load i32, i32* %ret, align 4, !dbg !12197
  %cmp = icmp slt i32 %37, 0, !dbg !12199
  br i1 %cmp, label %if.then24, label %if.end27, !dbg !12200

if.then24:                                        ; preds = %if.then20
  %38 = load i8, i8* %unchecked_isa_dma, align 1, !dbg !12201
  %tobool25 = trunc i8 %38 to i1, !dbg !12201
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12202
  %sense_buffer26 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %39, i32 0, i32 20, !dbg !12203
  %40 = load i8*, i8** %sense_buffer26, align 8, !dbg !12203
  call void @scsi_free_sense_buffer(i1 zeroext %tobool25, i8* %40) #10, !dbg !12204
  br label %if.end27, !dbg !12204

if.end27:                                         ; preds = %if.then24, %if.then20
  br label %if.end28, !dbg !12205

if.end28:                                         ; preds = %if.end27, %if.end17
  %41 = load i32, i32* %ret, align 4, !dbg !12206
  store i32 %41, i32* %retval, align 4, !dbg !12207
  br label %return, !dbg !12207

return:                                           ; preds = %if.end28, %if.then7
  %42 = load i32, i32* %retval, align 4, !dbg !12208
  ret i32 %42, !dbg !12208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_mq_exit_request(%struct.blk_mq_tag_set* %set, %struct.request* %rq, i32 %hctx_idx) #0 !dbg !12209 {
entry:
  %set.addr = alloca %struct.blk_mq_tag_set*, align 8
  %rq.addr = alloca %struct.request*, align 8
  %hctx_idx.addr = alloca i32, align 4
  %shost = alloca %struct.Scsi_Host*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  store %struct.blk_mq_tag_set* %set, %struct.blk_mq_tag_set** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_tag_set** %set.addr, metadata !12210, metadata !DIExpression()), !dbg !12211
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !12212, metadata !DIExpression()), !dbg !12213
  store i32 %hctx_idx, i32* %hctx_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hctx_idx.addr, metadata !12214, metadata !DIExpression()), !dbg !12215
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12216, metadata !DIExpression()), !dbg !12217
  %0 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %set.addr, align 8, !dbg !12218
  %driver_data = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %0, i32 0, i32 10, !dbg !12219
  %1 = load i8*, i8** %driver_data, align 8, !dbg !12219
  %2 = bitcast i8* %1 to %struct.Scsi_Host*, !dbg !12218
  store %struct.Scsi_Host* %2, %struct.Scsi_Host** %shost, align 8, !dbg !12217
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !12220, metadata !DIExpression()), !dbg !12221
  %3 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !12222
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %3) #10, !dbg !12223
  %4 = bitcast i8* %call to %struct.scsi_cmnd*, !dbg !12223
  store %struct.scsi_cmnd* %4, %struct.scsi_cmnd** %cmd, align 8, !dbg !12221
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12224
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 10, !dbg !12226
  %6 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !12226
  %exit_cmd_priv = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %6, i32 0, i32 5, !dbg !12227
  %7 = load i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)** %exit_cmd_priv, align 8, !dbg !12227
  %tobool = icmp ne i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* %7, null, !dbg !12224
  br i1 %tobool, label %if.then, label %if.end, !dbg !12228

if.then:                                          ; preds = %entry
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12229
  %hostt1 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 10, !dbg !12230
  %9 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt1, align 8, !dbg !12230
  %exit_cmd_priv2 = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %9, i32 0, i32 5, !dbg !12231
  %10 = load i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)** %exit_cmd_priv2, align 8, !dbg !12231
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12232
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12233
  %call3 = call i32 %10(%struct.Scsi_Host* %11, %struct.scsi_cmnd* %12) #10, !dbg !12229
  br label %if.end, !dbg !12229

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12234
  %flags = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 25, !dbg !12235
  %14 = load i32, i32* %flags, align 4, !dbg !12235
  %and = and i32 %14, 2, !dbg !12236
  %tobool4 = icmp ne i32 %and, 0, !dbg !12234
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12237
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 20, !dbg !12238
  %16 = load i8*, i8** %sense_buffer, align 8, !dbg !12238
  call void @scsi_free_sense_buffer(i1 zeroext %tobool4, i8* %16) #10, !dbg !12239
  ret void, !dbg !12240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_cleanup_rq(%struct.request* %rq) #0 !dbg !12241 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !12242, metadata !DIExpression()), !dbg !12243
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !12244
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 4, !dbg !12246
  %1 = load i32, i32* %rq_flags, align 4, !dbg !12246
  %and = and i32 %1, 128, !dbg !12247
  %tobool = icmp ne i32 %and, 0, !dbg !12247
  br i1 %tobool, label %if.then, label %if.end, !dbg !12248

if.then:                                          ; preds = %entry
  %2 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !12249
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %2) #10, !dbg !12251
  %3 = bitcast i8* %call to %struct.scsi_cmnd*, !dbg !12251
  call void @scsi_mq_uninit_cmd(%struct.scsi_cmnd* %3) #10, !dbg !12252
  %4 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !12253
  %rq_flags1 = getelementptr inbounds %struct.request, %struct.request* %4, i32 0, i32 4, !dbg !12254
  %5 = load i32, i32* %rq_flags1, align 4, !dbg !12255
  %and2 = and i32 %5, -129, !dbg !12255
  store i32 %and2, i32* %rq_flags1, align 4, !dbg !12255
  br label %if.end, !dbg !12256

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @scsi_mq_lld_busy(%struct.request_queue* %q) #0 !dbg !12258 {
entry:
  %retval = alloca i1, align 1
  %q.addr = alloca %struct.request_queue*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !12259, metadata !DIExpression()), !dbg !12260
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !12261, metadata !DIExpression()), !dbg !12262
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !12263
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %0, i32 0, i32 11, !dbg !12264
  %1 = load i8*, i8** %queuedata, align 8, !dbg !12264
  %2 = bitcast i8* %1 to %struct.scsi_device*, !dbg !12263
  store %struct.scsi_device* %2, %struct.scsi_device** %sdev, align 8, !dbg !12262
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12265, metadata !DIExpression()), !dbg !12266
  %3 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !12267
  %queue_flags = getelementptr inbounds %struct.request_queue, %struct.request_queue* %3, i32 0, i32 12, !dbg !12267
  %call = call zeroext i1 @test_bit(i64 1, i64* %queue_flags) #10, !dbg !12267
  br i1 %call, label %if.then, label %if.end, !dbg !12269

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12270
  br label %return, !dbg !12270

if.end:                                           ; preds = %entry
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12271
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 0, !dbg !12272
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12272
  store %struct.Scsi_Host* %5, %struct.Scsi_Host** %shost, align 8, !dbg !12273
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12274
  %call1 = call i32 @scsi_host_in_recovery(%struct.Scsi_Host* %6) #10, !dbg !12276
  %tobool = icmp ne i32 %call1, 0, !dbg !12276
  br i1 %tobool, label %if.then3, label %lor.lhs.false, !dbg !12277

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12278
  %call2 = call zeroext i1 @scsi_device_is_busy(%struct.scsi_device* %7) #10, !dbg !12279
  br i1 %call2, label %if.then3, label %if.end4, !dbg !12280

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i1 true, i1* %retval, align 1, !dbg !12281
  br label %return, !dbg !12281

if.end4:                                          ; preds = %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !12282
  br label %return, !dbg !12282

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !12283
  ret i1 %8, !dbg !12283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_map_queues(%struct.blk_mq_tag_set* %set) #0 !dbg !12284 {
entry:
  %retval = alloca i32, align 4
  %set.addr = alloca %struct.blk_mq_tag_set*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.Scsi_Host*, align 8
  store %struct.blk_mq_tag_set* %set, %struct.blk_mq_tag_set** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_tag_set** %set.addr, metadata !12285, metadata !DIExpression()), !dbg !12286
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12287, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12289, metadata !DIExpression()), !dbg !12291
  %0 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %set.addr, align 8, !dbg !12291
  %1 = bitcast %struct.blk_mq_tag_set* %0 to i8*, !dbg !12291
  store i8* %1, i8** %__mptr, align 8, !dbg !12291
  br label %do.body, !dbg !12291

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12292

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12291
  %add.ptr = getelementptr i8, i8* %2, i64 -144, !dbg !12291
  %3 = bitcast i8* %add.ptr to %struct.Scsi_Host*, !dbg !12291
  store %struct.Scsi_Host* %3, %struct.Scsi_Host** %tmp, align 8, !dbg !12292
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %tmp, align 8, !dbg !12291
  store %struct.Scsi_Host* %4, %struct.Scsi_Host** %shost, align 8, !dbg !12288
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12294
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 10, !dbg !12296
  %6 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !12296
  %map_queues = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %6, i32 0, i32 21, !dbg !12297
  %map_queues1 = bitcast {}** %map_queues to i32 (%struct.Scsi_Host*)**, !dbg !12297
  %7 = load i32 (%struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*)** %map_queues1, align 8, !dbg !12297
  %tobool = icmp ne i32 (%struct.Scsi_Host*)* %7, null, !dbg !12294
  br i1 %tobool, label %if.then, label %if.end, !dbg !12298

if.then:                                          ; preds = %do.end
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12299
  %hostt2 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 10, !dbg !12300
  %9 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt2, align 8, !dbg !12300
  %map_queues3 = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %9, i32 0, i32 21, !dbg !12301
  %map_queues4 = bitcast {}** %map_queues3 to i32 (%struct.Scsi_Host*)**, !dbg !12301
  %10 = load i32 (%struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*)** %map_queues4, align 8, !dbg !12301
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12302
  %call = call i32 %10(%struct.Scsi_Host* %11) #10, !dbg !12299
  store i32 %call, i32* %retval, align 4, !dbg !12303
  br label %return, !dbg !12303

if.end:                                           ; preds = %do.end
  %12 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %set.addr, align 8, !dbg !12304
  %map = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %12, i32 0, i32 0, !dbg !12305
  %arrayidx = getelementptr [3 x %struct.blk_mq_queue_map], [3 x %struct.blk_mq_queue_map]* %map, i64 0, i64 0, !dbg !12304
  %call5 = call i32 @blk_mq_map_queues(%struct.blk_mq_queue_map* %arrayidx) #10, !dbg !12306
  store i32 %call5, i32* %retval, align 4, !dbg !12307
  br label %return, !dbg !12307

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !12308
  ret i32 %13, !dbg !12308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @scsi_device_state_check(%struct.scsi_device* %sdev, %struct.request* %req) #0 !dbg !12309 {
entry:
  %retval = alloca i8, align 1
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %req.addr = alloca %struct.request*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !12310, metadata !DIExpression()), !dbg !12311
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !12312, metadata !DIExpression()), !dbg !12313
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12314
  %sdev_state = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 60, !dbg !12315
  %1 = load i32, i32* %sdev_state, align 8, !dbg !12315
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
    i32 9, label %sw.bb3
    i32 5, label %sw.bb4
  ], !dbg !12316

sw.bb:                                            ; preds = %entry, %entry
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12317
  %offline_already = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 40, !dbg !12320
  %3 = load i8, i8* %offline_already, align 2, !dbg !12320
  %tobool = trunc i8 %3 to i1, !dbg !12320
  br i1 %tobool, label %if.end, label %if.then, !dbg !12321

if.then:                                          ; preds = %sw.bb
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12322
  %offline_already1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 40, !dbg !12324
  store i8 1, i8* %offline_already1, align 2, !dbg !12325
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12326
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), %struct.scsi_device* %5, i8* null, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !12326
  br label %if.end, !dbg !12327

if.end:                                           ; preds = %if.then, %sw.bb
  store i8 10, i8* %retval, align 1, !dbg !12328
  br label %return, !dbg !12328

sw.bb2:                                           ; preds = %entry
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12329
  call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), %struct.scsi_device* %6, i8* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !12329
  store i8 10, i8* %retval, align 1, !dbg !12330
  br label %return, !dbg !12330

sw.bb3:                                           ; preds = %entry, %entry
  store i8 9, i8* %retval, align 1, !dbg !12331
  br label %return, !dbg !12331

sw.bb4:                                           ; preds = %entry
  %7 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12332
  %tobool5 = icmp ne %struct.request* %7, null, !dbg !12332
  br i1 %tobool5, label %land.lhs.true, label %if.end8, !dbg !12334

land.lhs.true:                                    ; preds = %sw.bb4
  %8 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12335
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %8, i32 0, i32 4, !dbg !12336
  %9 = load i32, i32* %rq_flags, align 4, !dbg !12336
  %and = and i32 %9, 256, !dbg !12337
  %tobool6 = icmp ne i32 %and, 0, !dbg !12337
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !12338

if.then7:                                         ; preds = %land.lhs.true
  store i8 9, i8* %retval, align 1, !dbg !12339
  br label %return, !dbg !12339

if.end8:                                          ; preds = %land.lhs.true, %sw.bb4
  store i8 0, i8* %retval, align 1, !dbg !12340
  br label %return, !dbg !12340

sw.default:                                       ; preds = %entry
  %10 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12341
  %tobool9 = icmp ne %struct.request* %10, null, !dbg !12341
  br i1 %tobool9, label %land.lhs.true10, label %if.end15, !dbg !12343

land.lhs.true10:                                  ; preds = %sw.default
  %11 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12344
  %rq_flags11 = getelementptr inbounds %struct.request, %struct.request* %11, i32 0, i32 4, !dbg !12345
  %12 = load i32, i32* %rq_flags11, align 4, !dbg !12345
  %and12 = and i32 %12, 256, !dbg !12346
  %tobool13 = icmp ne i32 %and12, 0, !dbg !12346
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !12347

if.then14:                                        ; preds = %land.lhs.true10
  store i8 10, i8* %retval, align 1, !dbg !12348
  br label %return, !dbg !12348

if.end15:                                         ; preds = %land.lhs.true10, %sw.default
  store i8 0, i8* %retval, align 1, !dbg !12349
  br label %return, !dbg !12349

return:                                           ; preds = %if.end15, %if.then14, %if.end8, %if.then7, %sw.bb3, %sw.bb2, %if.end
  %13 = load i8, i8* %retval, align 1, !dbg !12350
  ret i8 %13, !dbg !12350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_target_queue_ready(%struct.Scsi_Host* %shost, %struct.scsi_device* %sdev) #0 !dbg !12351 {
entry:
  %v.addr.i1.i57 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i57, metadata !5781, metadata !DIExpression()), !dbg !12354
  %v.addr.i.i58 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i58, metadata !5792, metadata !DIExpression()), !dbg !12358
  %size.addr.i.i59 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i59, metadata !5802, metadata !DIExpression()), !dbg !12360
  %v.addr.i60 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i60, metadata !5804, metadata !DIExpression()), !dbg !12361
  %lock.addr.i55 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i55, metadata !12362, metadata !DIExpression()), !dbg !12366
  %lock.addr.i53 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i53, metadata !12368, metadata !DIExpression()), !dbg !12370
  %i.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i.i, metadata !12372, metadata !DIExpression()), !dbg !12376
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !12390, metadata !DIExpression()), !dbg !12391
  %__ret.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i.i, metadata !12392, metadata !DIExpression()), !dbg !12394
  %tmp.i.i.i.i = alloca i32, align 4
  %i.addr.i.i.i45 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i45, metadata !12395, metadata !DIExpression()), !dbg !12396
  %v.addr.i.i.i46 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i46, metadata !12397, metadata !DIExpression()), !dbg !12398
  %v.addr.i1.i47 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i47, metadata !12399, metadata !DIExpression()), !dbg !12400
  %v.addr.i.i48 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i48, metadata !5792, metadata !DIExpression()), !dbg !12401
  %size.addr.i.i49 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i49, metadata !5802, metadata !DIExpression()), !dbg !12403
  %v.addr.i50 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i50, metadata !12404, metadata !DIExpression()), !dbg !12405
  %v.addr.i1.i39 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i39, metadata !9987, metadata !DIExpression()), !dbg !12406
  %v.addr.i.i40 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i40, metadata !7162, metadata !DIExpression()), !dbg !12409
  %size.addr.i.i41 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i41, metadata !7166, metadata !DIExpression()), !dbg !12411
  %v.addr.i42 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i42, metadata !10002, metadata !DIExpression()), !dbg !12412
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !12372, metadata !DIExpression()), !dbg !12413
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !12390, metadata !DIExpression()), !dbg !12419
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !12392, metadata !DIExpression()), !dbg !12420
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !12421, metadata !DIExpression()), !dbg !12422
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5792, metadata !DIExpression()), !dbg !12423
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5802, metadata !DIExpression()), !dbg !12425
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !12426, metadata !DIExpression()), !dbg !12427
  %lock.addr.i37 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i37, metadata !12362, metadata !DIExpression()), !dbg !12428
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !12362, metadata !DIExpression()), !dbg !12432
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !12368, metadata !DIExpression()), !dbg !12436
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %starget = alloca %struct.scsi_target*, align 8
  %busy = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !12438, metadata !DIExpression()), !dbg !12439
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !12440, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.declare(metadata %struct.scsi_target** %starget, metadata !12442, metadata !DIExpression()), !dbg !12443
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12444
  %call = call %struct.scsi_target* @scsi_target(%struct.scsi_device* %0) #10, !dbg !12445
  store %struct.scsi_target* %call, %struct.scsi_target** %starget, align 8, !dbg !12443
  call void @llvm.dbg.declare(metadata i32* %busy, metadata !12446, metadata !DIExpression()), !dbg !12447
  %1 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12448
  %single_lun = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %1, i32 0, i32 7, !dbg !12449
  %bf.load = load i8, i8* %single_lun, align 4, !dbg !12449
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !12449
  %bf.clear = and i8 %bf.lshr, 1, !dbg !12449
  %bf.cast = zext i8 %bf.clear to i32, !dbg !12449
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12448
  br i1 %tobool, label %if.then, label %if.end7, !dbg !12450

if.then:                                          ; preds = %entry
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12451
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 4, !dbg !12452
  %3 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !12452
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !12453
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12456, !srcloc !12458
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12459
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !12459
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !12459
  %6 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12461
  %starget_sdev_user = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %6, i32 0, i32 0, !dbg !12462
  %7 = load %struct.scsi_device*, %struct.scsi_device** %starget_sdev_user, align 8, !dbg !12462
  %tobool1 = icmp ne %struct.scsi_device* %7, null, !dbg !12461
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !12463

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12464
  %starget_sdev_user2 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %8, i32 0, i32 0, !dbg !12465
  %9 = load %struct.scsi_device*, %struct.scsi_device** %starget_sdev_user2, align 8, !dbg !12465
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12466
  %cmp = icmp ne %struct.scsi_device* %9, %10, !dbg !12467
  br i1 %cmp, label %if.then3, label %if.end, !dbg !12468

if.then3:                                         ; preds = %land.lhs.true
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12469
  %host_lock4 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 4, !dbg !12470
  %12 = load %struct.spinlock*, %struct.spinlock** %host_lock4, align 8, !dbg !12470
  store %struct.spinlock* %12, %struct.spinlock** %lock.addr.i35, align 8
  call void @arch_local_irq_enable() #11, !dbg !12471
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12474, !srcloc !12476
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !12477
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !12477
  %rlock.i36 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !12477
  store i32 0, i32* %retval, align 4, !dbg !12479
  br label %return, !dbg !12479

if.end:                                           ; preds = %land.lhs.true, %if.then
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12480
  %16 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12481
  %starget_sdev_user5 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %16, i32 0, i32 0, !dbg !12482
  store %struct.scsi_device* %15, %struct.scsi_device** %starget_sdev_user5, align 8, !dbg !12483
  %17 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12484
  %host_lock6 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %17, i32 0, i32 4, !dbg !12485
  %18 = load %struct.spinlock*, %struct.spinlock** %host_lock6, align 8, !dbg !12485
  store %struct.spinlock* %18, %struct.spinlock** %lock.addr.i37, align 8
  call void @arch_local_irq_enable() #11, !dbg !12486
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12487, !srcloc !12476
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i37, align 8, !dbg !12488
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !12488
  %rlock.i38 = bitcast %union.anon* %20 to %struct.raw_spinlock*, !dbg !12488
  br label %if.end7, !dbg !12489

if.end7:                                          ; preds = %if.end, %entry
  %21 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12490
  %can_queue = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %21, i32 0, i32 10, !dbg !12492
  %22 = load i32, i32* %can_queue, align 8, !dbg !12492
  %cmp8 = icmp ule i32 %22, 0, !dbg !12493
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !12494

if.then9:                                         ; preds = %if.end7
  store i32 1, i32* %retval, align 4, !dbg !12495
  br label %return, !dbg !12495

if.end10:                                         ; preds = %if.end7
  %23 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12496
  %target_busy = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %23, i32 0, i32 8, !dbg !12497
  store %struct.atomic_t* %target_busy, %struct.atomic_t** %v.addr.i, align 8
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12498
  %25 = bitcast %struct.atomic_t* %24 to i8*, !dbg !12498
  store i8* %25, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %26 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12499
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !12500
  %conv.i.i = trunc i64 %27 to i32, !dbg !12500
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %26, i32 %conv.i.i) #11, !dbg !12501
  %28 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12502
  %29 = load i64, i64* %size.addr.i.i, align 8, !dbg !12502
  call void @kcsan_check_access(i8* %28, i64 %29, i32 7) #11, !dbg !12502
  %30 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12503
  store %struct.atomic_t* %30, %struct.atomic_t** %v.addr.i1.i, align 8
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12504
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %31, %struct.atomic_t** %v.addr.i.i.i, align 8
  %32 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !12505
  %33 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !12420
  store i32 %33, i32* %__ret.i.i.i, align 4, !dbg !12420
  %34 = load i32, i32* %__ret.i.i.i, align 4, !dbg !12420
  %35 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !12420
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %35, i32 0, i32 0, !dbg !12420
  %36 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %34, i32* %counter.i.i.i) #7, !dbg !12420, !srcloc !12506
  store i32 %36, i32* %__ret.i.i.i, align 4, !dbg !12420
  %37 = load i32, i32* %__ret.i.i.i, align 4, !dbg !12420
  store i32 %37, i32* %tmp.i.i.i, align 4, !dbg !12420
  %38 = load i32, i32* %tmp.i.i.i, align 4, !dbg !12420
  %add.i.i.i = add i32 %32, %38, !dbg !12507
  %sub = sub i32 %add.i.i.i, 1, !dbg !12508
  store i32 %sub, i32* %busy, align 4, !dbg !12509
  %39 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12510
  %target_blocked = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %39, i32 0, i32 9, !dbg !12511
  store %struct.atomic_t* %target_blocked, %struct.atomic_t** %v.addr.i42, align 8
  %40 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i42, align 8, !dbg !12512
  %41 = bitcast %struct.atomic_t* %40 to i8*, !dbg !12512
  store i8* %41, i8** %v.addr.i.i40, align 8
  store i64 4, i64* %size.addr.i.i41, align 8
  %42 = load i8*, i8** %v.addr.i.i40, align 8, !dbg !12513
  %43 = load i64, i64* %size.addr.i.i41, align 8, !dbg !12514
  %conv.i.i43 = trunc i64 %43 to i32, !dbg !12514
  %call.i.i44 = call zeroext i1 @kasan_check_read(i8* %42, i32 %conv.i.i43) #11, !dbg !12515
  %44 = load i8*, i8** %v.addr.i.i40, align 8, !dbg !12516
  %45 = load i64, i64* %size.addr.i.i41, align 8, !dbg !12516
  call void @kcsan_check_access(i8* %44, i64 %45, i32 4) #11, !dbg !12516
  %46 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i42, align 8, !dbg !12517
  store %struct.atomic_t* %46, %struct.atomic_t** %v.addr.i1.i39, align 8
  %47 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i39, align 8, !dbg !12518
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %47, i32 0, i32 0, !dbg !12518
  %48 = load volatile i32, i32* %counter.i.i, align 4, !dbg !12518
  %cmp13 = icmp sgt i32 %48, 0, !dbg !12519
  br i1 %cmp13, label %if.then14, label %if.end23, !dbg !12520

if.then14:                                        ; preds = %if.end10
  %49 = load i32, i32* %busy, align 4, !dbg !12521
  %tobool15 = icmp ne i32 %49, 0, !dbg !12521
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !12523

if.then16:                                        ; preds = %if.then14
  br label %starved, !dbg !12524

if.end17:                                         ; preds = %if.then14
  %50 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12525
  %target_blocked18 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %50, i32 0, i32 9, !dbg !12526
  store %struct.atomic_t* %target_blocked18, %struct.atomic_t** %v.addr.i50, align 8
  %51 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i50, align 8, !dbg !12527
  %52 = bitcast %struct.atomic_t* %51 to i8*, !dbg !12527
  store i8* %52, i8** %v.addr.i.i48, align 8
  store i64 4, i64* %size.addr.i.i49, align 8
  %53 = load i8*, i8** %v.addr.i.i48, align 8, !dbg !12528
  %54 = load i64, i64* %size.addr.i.i49, align 8, !dbg !12529
  %conv.i.i51 = trunc i64 %54 to i32, !dbg !12529
  %call.i.i52 = call zeroext i1 @kasan_check_write(i8* %53, i32 %conv.i.i51) #11, !dbg !12530
  %55 = load i8*, i8** %v.addr.i.i48, align 8, !dbg !12531
  %56 = load i64, i64* %size.addr.i.i49, align 8, !dbg !12531
  call void @kcsan_check_access(i8* %55, i64 %56, i32 7) #11, !dbg !12531
  %57 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i50, align 8, !dbg !12532
  store %struct.atomic_t* %57, %struct.atomic_t** %v.addr.i1.i47, align 8
  %58 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i47, align 8, !dbg !12533
  store i32 1, i32* %i.addr.i.i.i45, align 4
  store %struct.atomic_t* %58, %struct.atomic_t** %v.addr.i.i.i46, align 8
  %59 = load i32, i32* %i.addr.i.i.i45, align 4, !dbg !12534
  %sub.i.i.i = sub i32 0, %59, !dbg !12535
  %60 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i46, align 8, !dbg !12536
  store i32 %sub.i.i.i, i32* %i.addr.i.i.i.i, align 4
  store %struct.atomic_t* %60, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %61 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !12537
  %62 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !12394
  store i32 %62, i32* %__ret.i.i.i.i, align 4, !dbg !12394
  %63 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !12394
  %64 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !12394
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %64, i32 0, i32 0, !dbg !12394
  %65 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i.i, i32 %63, i32* %counter.i.i.i.i) #7, !dbg !12394, !srcloc !12506
  store i32 %65, i32* %__ret.i.i.i.i, align 4, !dbg !12394
  %66 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !12394
  store i32 %66, i32* %tmp.i.i.i.i, align 4, !dbg !12394
  %67 = load i32, i32* %tmp.i.i.i.i, align 4, !dbg !12394
  %add.i.i.i.i = add i32 %61, %67, !dbg !12538
  %cmp20 = icmp sgt i32 %add.i.i.i.i, 0, !dbg !12539
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !12540

if.then21:                                        ; preds = %if.end17
  br label %out_dec, !dbg !12541

if.end22:                                         ; preds = %if.end17
  br label %do.body, !dbg !12542

do.body:                                          ; preds = %if.end22
  br label %do.end, !dbg !12543

do.end:                                           ; preds = %do.body
  br label %if.end23, !dbg !12545

if.end23:                                         ; preds = %do.end, %if.end10
  %68 = load i32, i32* %busy, align 4, !dbg !12546
  %69 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12548
  %can_queue24 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %69, i32 0, i32 10, !dbg !12549
  %70 = load i32, i32* %can_queue24, align 8, !dbg !12549
  %cmp25 = icmp uge i32 %68, %70, !dbg !12550
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !12551

if.then26:                                        ; preds = %if.end23
  br label %starved, !dbg !12552

if.end27:                                         ; preds = %if.end23
  store i32 1, i32* %retval, align 4, !dbg !12553
  br label %return, !dbg !12553

starved:                                          ; preds = %if.then26, %if.then16
  call void @llvm.dbg.label(metadata !12554), !dbg !12555
  %71 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12556
  %host_lock28 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %71, i32 0, i32 4, !dbg !12557
  %72 = load %struct.spinlock*, %struct.spinlock** %host_lock28, align 8, !dbg !12557
  store %struct.spinlock* %72, %struct.spinlock** %lock.addr.i53, align 8
  call void @arch_local_irq_disable() #11, !dbg !12558
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12559, !srcloc !12458
  %73 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i53, align 8, !dbg !12560
  %74 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %73, i32 0, i32 0, !dbg !12560
  %rlock.i54 = bitcast %union.anon* %74 to %struct.raw_spinlock*, !dbg !12560
  %75 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12561
  %starved_entry = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %75, i32 0, i32 8, !dbg !12562
  %76 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12563
  %starved_list = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %76, i32 0, i32 2, !dbg !12564
  call void @list_move_tail(%struct.list_head* %starved_entry, %struct.list_head* %starved_list) #10, !dbg !12565
  %77 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12566
  %host_lock29 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %77, i32 0, i32 4, !dbg !12567
  %78 = load %struct.spinlock*, %struct.spinlock** %host_lock29, align 8, !dbg !12567
  store %struct.spinlock* %78, %struct.spinlock** %lock.addr.i55, align 8
  call void @arch_local_irq_enable() #11, !dbg !12568
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12569, !srcloc !12476
  %79 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i55, align 8, !dbg !12570
  %80 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %79, i32 0, i32 0, !dbg !12570
  %rlock.i56 = bitcast %union.anon* %80 to %struct.raw_spinlock*, !dbg !12570
  br label %out_dec, !dbg !12571

out_dec:                                          ; preds = %starved, %if.then21
  call void @llvm.dbg.label(metadata !12572), !dbg !12573
  %81 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12574
  %can_queue30 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %81, i32 0, i32 10, !dbg !12575
  %82 = load i32, i32* %can_queue30, align 8, !dbg !12575
  %cmp31 = icmp ugt i32 %82, 0, !dbg !12576
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !12577

if.then32:                                        ; preds = %out_dec
  %83 = load %struct.scsi_target*, %struct.scsi_target** %starget, align 8, !dbg !12578
  %target_busy33 = getelementptr inbounds %struct.scsi_target, %struct.scsi_target* %83, i32 0, i32 8, !dbg !12579
  store %struct.atomic_t* %target_busy33, %struct.atomic_t** %v.addr.i60, align 8
  %84 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i60, align 8, !dbg !12580
  %85 = bitcast %struct.atomic_t* %84 to i8*, !dbg !12580
  store i8* %85, i8** %v.addr.i.i58, align 8
  store i64 4, i64* %size.addr.i.i59, align 8
  %86 = load i8*, i8** %v.addr.i.i58, align 8, !dbg !12581
  %87 = load i64, i64* %size.addr.i.i59, align 8, !dbg !12582
  %conv.i.i61 = trunc i64 %87 to i32, !dbg !12582
  %call.i.i62 = call zeroext i1 @kasan_check_write(i8* %86, i32 %conv.i.i61) #11, !dbg !12583
  %88 = load i8*, i8** %v.addr.i.i58, align 8, !dbg !12584
  %89 = load i64, i64* %size.addr.i.i59, align 8, !dbg !12584
  call void @kcsan_check_access(i8* %88, i64 %89, i32 7) #11, !dbg !12584
  %90 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i60, align 8, !dbg !12585
  store %struct.atomic_t* %90, %struct.atomic_t** %v.addr.i1.i57, align 8
  %91 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i57, align 8, !dbg !12586
  %counter.i.i63 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %91, i32 0, i32 0, !dbg !12587
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i63, i32* %counter.i.i63) #7, !dbg !12588, !srcloc !5844
  br label %if.end34, !dbg !12589

if.end34:                                         ; preds = %if.then32, %out_dec
  store i32 0, i32* %retval, align 4, !dbg !12590
  br label %return, !dbg !12590

return:                                           ; preds = %if.end34, %if.end27, %if.then9, %if.then3
  %92 = load i32, i32* %retval, align 4, !dbg !12591
  ret i32 %92, !dbg !12591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_host_queue_ready(%struct.request_queue* %q, %struct.Scsi_Host* %shost, %struct.scsi_device* %sdev, %struct.scsi_cmnd* %cmd) #0 !dbg !12592 {
entry:
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !12362, metadata !DIExpression()), !dbg !12595
  %lock.addr.i43 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i43, metadata !12368, metadata !DIExpression()), !dbg !12597
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !12362, metadata !DIExpression()), !dbg !12599
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !12368, metadata !DIExpression()), !dbg !12603
  %i.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i.i, metadata !12372, metadata !DIExpression()), !dbg !12605
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !12390, metadata !DIExpression()), !dbg !12613
  %__ret.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i.i, metadata !12392, metadata !DIExpression()), !dbg !12614
  %tmp.i.i.i.i = alloca i32, align 4
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !12395, metadata !DIExpression()), !dbg !12615
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !12397, metadata !DIExpression()), !dbg !12616
  %v.addr.i1.i35 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i35, metadata !12399, metadata !DIExpression()), !dbg !12617
  %v.addr.i.i36 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i36, metadata !5792, metadata !DIExpression()), !dbg !12618
  %size.addr.i.i37 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i37, metadata !5802, metadata !DIExpression()), !dbg !12620
  %v.addr.i38 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i38, metadata !12404, metadata !DIExpression()), !dbg !12621
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9987, metadata !DIExpression()), !dbg !12622
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7162, metadata !DIExpression()), !dbg !12625
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7166, metadata !DIExpression()), !dbg !12627
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10002, metadata !DIExpression()), !dbg !12628
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.request_queue*, align 8
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !12629, metadata !DIExpression()), !dbg !12630
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !12631, metadata !DIExpression()), !dbg !12632
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !12633, metadata !DIExpression()), !dbg !12634
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !12635, metadata !DIExpression()), !dbg !12636
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12637
  %call = call i32 @scsi_host_in_recovery(%struct.Scsi_Host* %0) #10, !dbg !12639
  %tobool = icmp ne i32 %call, 0, !dbg !12639
  br i1 %tobool, label %if.then, label %if.end, !dbg !12640

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12641
  br label %return, !dbg !12641

if.end:                                           ; preds = %entry
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12642
  %host_blocked = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 13, !dbg !12643
  store %struct.atomic_t* %host_blocked, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12644
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !12644
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12645
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !12646
  %conv.i.i = trunc i64 %5 to i32, !dbg !12646
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %4, i32 %conv.i.i) #11, !dbg !12647
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12648
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !12648
  call void @kcsan_check_access(i8* %6, i64 %7, i32 4) #11, !dbg !12648
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12649
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12650
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %9, i32 0, i32 0, !dbg !12650
  %10 = load volatile i32, i32* %counter.i.i, align 4, !dbg !12650
  %cmp = icmp sgt i32 %10, 0, !dbg !12651
  br i1 %cmp, label %if.then2, label %if.end12, !dbg !12652

if.then2:                                         ; preds = %if.end
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12653
  %call3 = call i32 @scsi_host_busy(%struct.Scsi_Host* %11) #10, !dbg !12655
  %cmp4 = icmp sgt i32 %call3, 0, !dbg !12656
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12657

if.then5:                                         ; preds = %if.then2
  br label %starved, !dbg !12658

if.end6:                                          ; preds = %if.then2
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12659
  %host_blocked7 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %12, i32 0, i32 13, !dbg !12660
  store %struct.atomic_t* %host_blocked7, %struct.atomic_t** %v.addr.i38, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i38, align 8, !dbg !12661
  %14 = bitcast %struct.atomic_t* %13 to i8*, !dbg !12661
  store i8* %14, i8** %v.addr.i.i36, align 8
  store i64 4, i64* %size.addr.i.i37, align 8
  %15 = load i8*, i8** %v.addr.i.i36, align 8, !dbg !12662
  %16 = load i64, i64* %size.addr.i.i37, align 8, !dbg !12663
  %conv.i.i39 = trunc i64 %16 to i32, !dbg !12663
  %call.i.i40 = call zeroext i1 @kasan_check_write(i8* %15, i32 %conv.i.i39) #11, !dbg !12664
  %17 = load i8*, i8** %v.addr.i.i36, align 8, !dbg !12665
  %18 = load i64, i64* %size.addr.i.i37, align 8, !dbg !12665
  call void @kcsan_check_access(i8* %17, i64 %18, i32 7) #11, !dbg !12665
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i38, align 8, !dbg !12666
  store %struct.atomic_t* %19, %struct.atomic_t** %v.addr.i1.i35, align 8
  %20 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i35, align 8, !dbg !12667
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %20, %struct.atomic_t** %v.addr.i.i.i, align 8
  %21 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !12668
  %sub.i.i.i = sub i32 0, %21, !dbg !12669
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !12670
  store i32 %sub.i.i.i, i32* %i.addr.i.i.i.i, align 4
  store %struct.atomic_t* %22, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %23 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !12671
  %24 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !12614
  store i32 %24, i32* %__ret.i.i.i.i, align 4, !dbg !12614
  %25 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !12614
  %26 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !12614
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %26, i32 0, i32 0, !dbg !12614
  %27 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i.i, i32 %25, i32* %counter.i.i.i.i) #7, !dbg !12614, !srcloc !12506
  store i32 %27, i32* %__ret.i.i.i.i, align 4, !dbg !12614
  %28 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !12614
  store i32 %28, i32* %tmp.i.i.i.i, align 4, !dbg !12614
  %29 = load i32, i32* %tmp.i.i.i.i, align 4, !dbg !12614
  %add.i.i.i.i = add i32 %23, %29, !dbg !12672
  %cmp9 = icmp sgt i32 %add.i.i.i.i, 0, !dbg !12673
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !12674

if.then10:                                        ; preds = %if.end6
  br label %out_dec, !dbg !12675

if.end11:                                         ; preds = %if.end6
  br label %do.body, !dbg !12676

do.body:                                          ; preds = %if.end11
  br label %do.end, !dbg !12677

do.end:                                           ; preds = %do.body
  br label %if.end12, !dbg !12679

if.end12:                                         ; preds = %do.end, %if.end
  %30 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12680
  %host_self_blocked = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %30, i32 0, i32 34, !dbg !12682
  %bf.load = load i16, i16* %host_self_blocked, align 4, !dbg !12682
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !12682
  %bf.clear = and i16 %bf.lshr, 1, !dbg !12682
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12682
  %tobool13 = icmp ne i32 %bf.cast, 0, !dbg !12680
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !12683

if.then14:                                        ; preds = %if.end12
  br label %starved, !dbg !12684

if.end15:                                         ; preds = %if.end12
  %31 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12685
  %starved_entry = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %31, i32 0, i32 8, !dbg !12686
  %call16 = call i32 @list_empty(%struct.list_head* %starved_entry) #10, !dbg !12687
  %tobool17 = icmp ne i32 %call16, 0, !dbg !12687
  br i1 %tobool17, label %if.end26, label %if.then18, !dbg !12688

if.then18:                                        ; preds = %if.end15
  %32 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12689
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %32, i32 0, i32 4, !dbg !12690
  %33 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !12690
  store %struct.spinlock* %33, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !12691
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12692, !srcloc !12458
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12693
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !12693
  %rlock.i = bitcast %union.anon* %35 to %struct.raw_spinlock*, !dbg !12693
  %36 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12694
  %starved_entry19 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %36, i32 0, i32 8, !dbg !12696
  %call20 = call i32 @list_empty(%struct.list_head* %starved_entry19) #10, !dbg !12697
  %tobool21 = icmp ne i32 %call20, 0, !dbg !12697
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !12698

if.then22:                                        ; preds = %if.then18
  %37 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12699
  %starved_entry23 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %37, i32 0, i32 8, !dbg !12700
  call void @list_del_init(%struct.list_head* %starved_entry23) #10, !dbg !12701
  br label %if.end24, !dbg !12701

if.end24:                                         ; preds = %if.then22, %if.then18
  %38 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12702
  %host_lock25 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %38, i32 0, i32 4, !dbg !12703
  %39 = load %struct.spinlock*, %struct.spinlock** %host_lock25, align 8, !dbg !12703
  store %struct.spinlock* %39, %struct.spinlock** %lock.addr.i41, align 8
  call void @arch_local_irq_enable() #11, !dbg !12704
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12705, !srcloc !12476
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !12706
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !12706
  %rlock.i42 = bitcast %union.anon* %41 to %struct.raw_spinlock*, !dbg !12706
  br label %if.end26, !dbg !12707

if.end26:                                         ; preds = %if.end24, %if.end15
  %42 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12708
  %state = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %42, i32 0, i32 26, !dbg !12709
  call void @__set_bit(i64 1, i64* %state) #10, !dbg !12710
  store i32 1, i32* %retval, align 4, !dbg !12711
  br label %return, !dbg !12711

starved:                                          ; preds = %if.then14, %if.then5
  call void @llvm.dbg.label(metadata !12712), !dbg !12713
  %43 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12714
  %host_lock27 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %43, i32 0, i32 4, !dbg !12715
  %44 = load %struct.spinlock*, %struct.spinlock** %host_lock27, align 8, !dbg !12715
  store %struct.spinlock* %44, %struct.spinlock** %lock.addr.i43, align 8
  call void @arch_local_irq_disable() #11, !dbg !12716
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12717, !srcloc !12458
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i43, align 8, !dbg !12718
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !12718
  %rlock.i44 = bitcast %union.anon* %46 to %struct.raw_spinlock*, !dbg !12718
  %47 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12719
  %starved_entry28 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %47, i32 0, i32 8, !dbg !12721
  %call29 = call i32 @list_empty(%struct.list_head* %starved_entry28) #10, !dbg !12722
  %tobool30 = icmp ne i32 %call29, 0, !dbg !12722
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !12723

if.then31:                                        ; preds = %starved
  %48 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !12724
  %starved_entry32 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %48, i32 0, i32 8, !dbg !12725
  %49 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12726
  %starved_list = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %49, i32 0, i32 2, !dbg !12727
  call void @list_add_tail(%struct.list_head* %starved_entry32, %struct.list_head* %starved_list) #10, !dbg !12728
  br label %if.end33, !dbg !12728

if.end33:                                         ; preds = %if.then31, %starved
  %50 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12729
  %host_lock34 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %50, i32 0, i32 4, !dbg !12730
  %51 = load %struct.spinlock*, %struct.spinlock** %host_lock34, align 8, !dbg !12730
  store %struct.spinlock* %51, %struct.spinlock** %lock.addr.i45, align 8
  call void @arch_local_irq_enable() #11, !dbg !12731
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12732, !srcloc !12476
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !12733
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !12733
  %rlock.i46 = bitcast %union.anon* %53 to %struct.raw_spinlock*, !dbg !12733
  br label %out_dec, !dbg !12734

out_dec:                                          ; preds = %if.end33, %if.then10
  call void @llvm.dbg.label(metadata !12735), !dbg !12736
  %54 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !12737
  %55 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12738
  call void @scsi_dec_host_busy(%struct.Scsi_Host* %54, %struct.scsi_cmnd* %55) #10, !dbg !12739
  store i32 0, i32* %retval, align 4, !dbg !12740
  br label %return, !dbg !12740

return:                                           ; preds = %out_dec, %if.end26, %if.then
  %56 = load i32, i32* %retval, align 4, !dbg !12741
  ret i32 %56, !dbg !12741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @scsi_prepare_cmd(%struct.request* %req) #0 !dbg !12742 {
entry:
  %retval = alloca i8, align 1
  %req.addr = alloca %struct.request*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %ret = alloca i8, align 1
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !12745, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !12747, metadata !DIExpression()), !dbg !12748
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12749
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #10, !dbg !12750
  %1 = bitcast i8* %call to %struct.scsi_cmnd*, !dbg !12750
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !12748
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !12751, metadata !DIExpression()), !dbg !12752
  %2 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12753
  %q = getelementptr inbounds %struct.request, %struct.request* %2, i32 0, i32 0, !dbg !12754
  %3 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !12754
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %3, i32 0, i32 11, !dbg !12755
  %4 = load i8*, i8** %queuedata, align 8, !dbg !12755
  %5 = bitcast i8* %4 to %struct.scsi_device*, !dbg !12753
  store %struct.scsi_device* %5, %struct.scsi_device** %sdev, align 8, !dbg !12752
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !12756, metadata !DIExpression()), !dbg !12757
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12758
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 0, !dbg !12759
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12759
  store %struct.Scsi_Host* %7, %struct.Scsi_Host** %shost, align 8, !dbg !12757
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !12760, metadata !DIExpression()), !dbg !12761
  %8 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12762
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12763
  call void @scsi_init_command(%struct.scsi_device* %8, %struct.scsi_cmnd* %9) #10, !dbg !12764
  %10 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12765
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12766
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 19, !dbg !12767
  store %struct.request* %10, %struct.request** %request, align 8, !dbg !12768
  %12 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12769
  %tag = getelementptr inbounds %struct.request, %struct.request* %12, i32 0, i32 5, !dbg !12770
  %13 = load i32, i32* %tag, align 8, !dbg !12770
  %conv = trunc i32 %13 to i8, !dbg !12769
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12771
  %tag1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 27, !dbg !12772
  store i8 %conv, i8* %tag1, align 8, !dbg !12773
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12774
  %prot_op = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 9, !dbg !12775
  store i8 0, i8* %prot_op, align 8, !dbg !12776
  %16 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12777
  %call2 = call i32 @blk_rq_bytes(%struct.request* %16) #10, !dbg !12779
  %tobool = icmp ne i32 %call2, 0, !dbg !12779
  br i1 %tobool, label %if.then, label %if.else, !dbg !12780

if.then:                                          ; preds = %entry
  %17 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12781
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %17, i32 0, i32 3, !dbg !12781
  %18 = load i32, i32* %cmd_flags, align 8, !dbg !12781
  %and = and i32 %18, 255, !dbg !12781
  %call3 = call zeroext i1 @op_is_write(i32 %and) #10, !dbg !12781
  %19 = zext i1 %call3 to i64, !dbg !12781
  %cond = select i1 %call3, i32 1, i32 2, !dbg !12781
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12782
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 13, !dbg !12783
  store i32 %cond, i32* %sc_data_direction, align 8, !dbg !12784
  br label %if.end, !dbg !12782

if.else:                                          ; preds = %entry
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12785
  %sc_data_direction5 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %21, i32 0, i32 13, !dbg !12786
  store i32 3, i32* %sc_data_direction5, align 8, !dbg !12787
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12788
  %23 = bitcast %struct.scsi_cmnd* %22 to i8*, !dbg !12789
  %add.ptr = getelementptr i8, i8* %23, i64 392, !dbg !12790
  %24 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12791
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %24, i32 0, i32 10, !dbg !12792
  %25 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !12792
  %cmd_size = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %25, i32 0, i32 48, !dbg !12793
  %26 = load i32, i32* %cmd_size, align 8, !dbg !12793
  %idx.ext = zext i32 %26 to i64, !dbg !12794
  %add.ptr6 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !12794
  %27 = bitcast i8* %add.ptr6 to %struct.scatterlist*, !dbg !12789
  store %struct.scatterlist* %27, %struct.scatterlist** %sg, align 8, !dbg !12795
  %28 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12796
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12797
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %29, i32 0, i32 15, !dbg !12798
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !12799
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 0, !dbg !12800
  store %struct.scatterlist* %28, %struct.scatterlist** %sgl, align 8, !dbg !12801
  %30 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !12802
  %call7 = call i32 @scsi_host_get_prot(%struct.Scsi_Host* %30) #10, !dbg !12804
  %tobool8 = icmp ne i32 %call7, 0, !dbg !12804
  br i1 %tobool8, label %if.then9, label %if.end15, !dbg !12805

if.then9:                                         ; preds = %if.end
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12806
  %prot_sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %31, i32 0, i32 16, !dbg !12808
  %32 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb, align 8, !dbg !12808
  %33 = bitcast %struct.scsi_data_buffer* %32 to i8*, !dbg !12809
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false), !dbg !12809
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12810
  %prot_sdb10 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %34, i32 0, i32 16, !dbg !12811
  %35 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb10, align 8, !dbg !12811
  %add.ptr11 = getelementptr %struct.scsi_data_buffer, %struct.scsi_data_buffer* %35, i64 1, !dbg !12812
  %36 = bitcast %struct.scsi_data_buffer* %add.ptr11 to %struct.scatterlist*, !dbg !12813
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12814
  %prot_sdb12 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %37, i32 0, i32 16, !dbg !12815
  %38 = load %struct.scsi_data_buffer*, %struct.scsi_data_buffer** %prot_sdb12, align 8, !dbg !12815
  %table13 = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %38, i32 0, i32 0, !dbg !12816
  %sgl14 = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table13, i32 0, i32 0, !dbg !12817
  store %struct.scatterlist* %36, %struct.scatterlist** %sgl14, align 8, !dbg !12818
  br label %if.end15, !dbg !12819

if.end15:                                         ; preds = %if.then9, %if.end
  %39 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12820
  %call16 = call zeroext i1 @blk_rq_is_scsi(%struct.request* %39) #10, !dbg !12822
  br i1 %call16, label %if.then17, label %if.end19, !dbg !12823

if.then17:                                        ; preds = %if.end15
  %40 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12824
  %41 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12825
  %call18 = call zeroext i8 @scsi_setup_scsi_cmnd(%struct.scsi_device* %40, %struct.request* %41) #10, !dbg !12826
  store i8 %call18, i8* %retval, align 1, !dbg !12827
  br label %return, !dbg !12827

if.end19:                                         ; preds = %if.end15
  %42 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12828
  %handler = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %42, i32 0, i32 54, !dbg !12830
  %43 = load %struct.scsi_device_handler*, %struct.scsi_device_handler** %handler, align 8, !dbg !12830
  %tobool20 = icmp ne %struct.scsi_device_handler* %43, null, !dbg !12828
  br i1 %tobool20, label %land.lhs.true, label %if.end31, !dbg !12831

land.lhs.true:                                    ; preds = %if.end19
  %44 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12832
  %handler21 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %44, i32 0, i32 54, !dbg !12833
  %45 = load %struct.scsi_device_handler*, %struct.scsi_device_handler** %handler21, align 8, !dbg !12833
  %prep_fn = getelementptr inbounds %struct.scsi_device_handler, %struct.scsi_device_handler* %45, i32 0, i32 7, !dbg !12834
  %46 = load i8 (%struct.scsi_device*, %struct.request*)*, i8 (%struct.scsi_device*, %struct.request*)** %prep_fn, align 8, !dbg !12834
  %tobool22 = icmp ne i8 (%struct.scsi_device*, %struct.request*)* %46, null, !dbg !12832
  br i1 %tobool22, label %if.then23, label %if.end31, !dbg !12835

if.then23:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !12836, metadata !DIExpression()), !dbg !12838
  %47 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12839
  %handler24 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %47, i32 0, i32 54, !dbg !12840
  %48 = load %struct.scsi_device_handler*, %struct.scsi_device_handler** %handler24, align 8, !dbg !12840
  %prep_fn25 = getelementptr inbounds %struct.scsi_device_handler, %struct.scsi_device_handler* %48, i32 0, i32 7, !dbg !12841
  %49 = load i8 (%struct.scsi_device*, %struct.request*)*, i8 (%struct.scsi_device*, %struct.request*)** %prep_fn25, align 8, !dbg !12841
  %50 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !12842
  %51 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12843
  %call26 = call zeroext i8 %49(%struct.scsi_device* %50, %struct.request* %51) #10, !dbg !12839
  store i8 %call26, i8* %ret, align 1, !dbg !12838
  %52 = load i8, i8* %ret, align 1, !dbg !12844
  %conv27 = zext i8 %52 to i32, !dbg !12844
  %cmp = icmp ne i32 %conv27, 0, !dbg !12846
  br i1 %cmp, label %if.then29, label %if.end30, !dbg !12847

if.then29:                                        ; preds = %if.then23
  %53 = load i8, i8* %ret, align 1, !dbg !12848
  store i8 %53, i8* %retval, align 1, !dbg !12849
  br label %return, !dbg !12849

if.end30:                                         ; preds = %if.then23
  br label %if.end31, !dbg !12850

if.end31:                                         ; preds = %if.end30, %land.lhs.true, %if.end19
  %54 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12851
  %call32 = call %struct.scsi_request* @scsi_req(%struct.request* %54) #10, !dbg !12852
  %__cmd = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %call32, i32 0, i32 0, !dbg !12853
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %__cmd, i64 0, i64 0, !dbg !12852
  %55 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !12854
  %call33 = call %struct.scsi_request* @scsi_req(%struct.request* %55) #10, !dbg !12855
  %cmd34 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %call33, i32 0, i32 1, !dbg !12856
  store i8* %arraydecay, i8** %cmd34, align 8, !dbg !12857
  %56 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12858
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %56, i32 0, i32 14, !dbg !12859
  store i8* %arraydecay, i8** %cmnd, align 8, !dbg !12860
  %57 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12861
  %cmnd35 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %57, i32 0, i32 14, !dbg !12862
  %58 = load i8*, i8** %cmnd35, align 8, !dbg !12862
  call void @llvm.memset.p0i8.i64(i8* align 1 %58, i8 0, i64 16, i1 false), !dbg !12863
  %59 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12864
  %call36 = call %struct.scsi_driver* @scsi_cmd_to_driver(%struct.scsi_cmnd* %59) #10, !dbg !12865
  %init_command = getelementptr inbounds %struct.scsi_driver, %struct.scsi_driver* %call36, i32 0, i32 2, !dbg !12866
  %60 = load i8 (%struct.scsi_cmnd*)*, i8 (%struct.scsi_cmnd*)** %init_command, align 8, !dbg !12866
  %61 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12867
  %call37 = call zeroext i8 %60(%struct.scsi_cmnd* %61) #10, !dbg !12865
  store i8 %call37, i8* %retval, align 1, !dbg !12868
  br label %return, !dbg !12868

return:                                           ; preds = %if.end31, %if.then29, %if.then17
  %62 = load i8, i8* %retval, align 1, !dbg !12869
  ret i8 %62, !dbg !12869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !12870 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12871, metadata !DIExpression()), !dbg !12873
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12875, metadata !DIExpression()), !dbg !12876
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10436, metadata !DIExpression()), !dbg !12877
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10440, metadata !DIExpression()), !dbg !12879
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12880, metadata !DIExpression()), !dbg !12881
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12882, metadata !DIExpression()), !dbg !12883
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12884
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12885
  %div = sdiv i64 %1, 64, !dbg !12885
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12886
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12884
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12887
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12888
  %conv.i = trunc i64 %4 to i32, !dbg !12888
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !12889
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12890
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12890
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !12890
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12891
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12892
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !12893
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !12895
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !12896

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !12897
  %12 = bitcast i64* %11 to i8*, !dbg !12897
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12897
  %shr.i = ashr i64 %13, 3, !dbg !12897
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !12897
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !12899
  %and.i = and i64 %14, 7, !dbg !12899
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !12899
  %shl.i = shl i32 1, %sh_prom.i, !dbg !12899
  %neg.i = xor i32 %shl.i, -1, !dbg !12900
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !12901, !srcloc !12902
  br label %arch_clear_bit.exit, !dbg !12903

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !12904
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !12906
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !12907, !srcloc !12908
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !12909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_set_resid(%struct.scsi_cmnd* %cmd, i32 %resid) #0 !dbg !12910 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %resid.addr = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !12911, metadata !DIExpression()), !dbg !12912
  store i32 %resid, i32* %resid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resid.addr, metadata !12913, metadata !DIExpression()), !dbg !12914
  %0 = load i32, i32* %resid.addr, align 4, !dbg !12915
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12916
  %req = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 0, !dbg !12917
  %resid_len = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %req, i32 0, i32 5, !dbg !12918
  store i32 %0, i32* %resid_len, align 4, !dbg !12919
  ret void, !dbg !12920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_mq_done(%struct.scsi_cmnd* %cmd) #0 !dbg !12921 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !12922, metadata !DIExpression()), !dbg !12923
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12924
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 19, !dbg !12924
  %1 = load %struct.request*, %struct.request** %request, align 8, !dbg !12924
  %q = getelementptr inbounds %struct.request, %struct.request* %1, i32 0, i32 0, !dbg !12924
  %2 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !12924
  %call = call zeroext i1 @blk_should_fake_timeout(%struct.request_queue* %2) #10, !dbg !12924
  %lnot = xor i1 %call, true, !dbg !12924
  %lnot1 = xor i1 %lnot, true, !dbg !12924
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12924
  %conv = sext i32 %lnot.ext to i64, !dbg !12924
  %tobool = icmp ne i64 %conv, 0, !dbg !12924
  br i1 %tobool, label %if.then, label %if.end, !dbg !12926

if.then:                                          ; preds = %entry
  br label %return, !dbg !12927

if.end:                                           ; preds = %entry
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12928
  %state = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 26, !dbg !12928
  %call2 = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #10, !dbg !12928
  %lnot3 = xor i1 %call2, true, !dbg !12928
  %lnot5 = xor i1 %lnot3, true, !dbg !12928
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !12928
  %conv7 = sext i32 %lnot.ext6 to i64, !dbg !12928
  %tobool8 = icmp ne i64 %conv7, 0, !dbg !12928
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !12930

if.then9:                                         ; preds = %if.end
  br label %return, !dbg !12931

if.end10:                                         ; preds = %if.end
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12932
  call void @trace_scsi_dispatch_cmd_done(%struct.scsi_cmnd* %4) #10, !dbg !12933
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12934
  %request11 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 19, !dbg !12935
  %6 = load %struct.request*, %struct.request** %request11, align 8, !dbg !12935
  call void @blk_mq_complete_request(%struct.request* %6) #10, !dbg !12936
  br label %return, !dbg !12937

return:                                           ; preds = %if.end10, %if.then9, %if.then
  ret void, !dbg !12937
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_start_request(%struct.request*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_dispatch_cmd(%struct.scsi_cmnd* %cmd) #0 !dbg !12938 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9953, metadata !DIExpression()), !dbg !12939
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5792, metadata !DIExpression()), !dbg !12942
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5802, metadata !DIExpression()), !dbg !12944
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9962, metadata !DIExpression()), !dbg !12945
  %retval = alloca i32, align 4
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %host = alloca %struct.Scsi_Host*, align 8
  %rtn = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !12946, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !12948, metadata !DIExpression()), !dbg !12949
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12950
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !12951
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !12951
  %host1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !12952
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host1, align 8, !dbg !12952
  store %struct.Scsi_Host* %2, %struct.Scsi_Host** %host, align 8, !dbg !12949
  call void @llvm.dbg.declare(metadata i32* %rtn, metadata !12953, metadata !DIExpression()), !dbg !12954
  store i32 0, i32* %rtn, align 4, !dbg !12954
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12955
  %device2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 1, !dbg !12956
  %4 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !12956
  %iorequest_cnt = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 47, !dbg !12957
  store %struct.atomic_t* %iorequest_cnt, %struct.atomic_t** %v.addr.i, align 8
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12958
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !12958
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12959
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !12960
  %conv.i.i = trunc i64 %8 to i32, !dbg !12960
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %7, i32 %conv.i.i) #11, !dbg !12961
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12962
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !12962
  call void @kcsan_check_access(i8* %9, i64 %10, i32 7) #11, !dbg !12962
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12963
  store %struct.atomic_t* %11, %struct.atomic_t** %v.addr.i1.i, align 8
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12964
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !12965
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !12966, !srcloc !9977
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12967
  %device3 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 1, !dbg !12967
  %14 = load %struct.scsi_device*, %struct.scsi_device** %device3, align 8, !dbg !12967
  %sdev_state = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %14, i32 0, i32 60, !dbg !12967
  %15 = load i32, i32* %sdev_state, align 8, !dbg !12967
  %cmp = icmp eq i32 %15, 4, !dbg !12967
  %lnot = xor i1 %cmp, true, !dbg !12967
  %lnot4 = xor i1 %lnot, true, !dbg !12967
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !12967
  %conv = sext i32 %lnot.ext to i64, !dbg !12967
  %tobool = icmp ne i64 %conv, 0, !dbg !12967
  br i1 %tobool, label %if.then, label %if.end, !dbg !12969

if.then:                                          ; preds = %entry
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12970
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 24, !dbg !12972
  store i32 65536, i32* %result, align 8, !dbg !12973
  br label %done, !dbg !12974

if.end:                                           ; preds = %entry
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12975
  %device5 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %17, i32 0, i32 1, !dbg !12975
  %18 = load %struct.scsi_device*, %struct.scsi_device** %device5, align 8, !dbg !12975
  %call = call i32 @scsi_device_blocked(%struct.scsi_device* %18) #10, !dbg !12975
  %tobool6 = icmp ne i32 %call, 0, !dbg !12975
  %lnot7 = xor i1 %tobool6, true, !dbg !12975
  %lnot9 = xor i1 %lnot7, true, !dbg !12975
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !12975
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !12975
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !12975
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !12977

if.then13:                                        ; preds = %if.end
  br label %do.body, !dbg !12978

do.body:                                          ; preds = %if.then13
  br label %do.end, !dbg !12980

do.end:                                           ; preds = %do.body
  store i32 4182, i32* %retval, align 4, !dbg !12982
  br label %return, !dbg !12982

if.end14:                                         ; preds = %if.end
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12983
  %device15 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %19, i32 0, i32 1, !dbg !12985
  %20 = load %struct.scsi_device*, %struct.scsi_device** %device15, align 8, !dbg !12985
  %lun_in_cdb = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %20, i32 0, i32 39, !dbg !12986
  %21 = bitcast [6 x i8]* %lun_in_cdb to i48*, !dbg !12986
  %bf.load = load i48, i48* %21, align 4, !dbg !12986
  %bf.lshr = lshr i48 %bf.load, 44, !dbg !12986
  %bf.clear = and i48 %bf.lshr, 1, !dbg !12986
  %bf.cast = trunc i48 %bf.clear to i32, !dbg !12986
  %tobool16 = icmp ne i32 %bf.cast, 0, !dbg !12983
  br i1 %tobool16, label %if.then17, label %if.end25, !dbg !12987

if.then17:                                        ; preds = %if.end14
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12988
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %22, i32 0, i32 14, !dbg !12989
  %23 = load i8*, i8** %cmnd, align 8, !dbg !12989
  %arrayidx = getelementptr i8, i8* %23, i64 1, !dbg !12988
  %24 = load i8, i8* %arrayidx, align 1, !dbg !12988
  %conv18 = zext i8 %24 to i32, !dbg !12988
  %and = and i32 %conv18, 31, !dbg !12990
  %conv19 = sext i32 %and to i64, !dbg !12991
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12992
  %device20 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %25, i32 0, i32 1, !dbg !12993
  %26 = load %struct.scsi_device*, %struct.scsi_device** %device20, align 8, !dbg !12993
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %26, i32 0, i32 18, !dbg !12994
  %27 = load i64, i64* %lun, align 8, !dbg !12994
  %shl = shl i64 %27, 5, !dbg !12995
  %and21 = and i64 %shl, 224, !dbg !12996
  %or = or i64 %conv19, %and21, !dbg !12997
  %conv22 = trunc i64 %or to i8, !dbg !12991
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !12998
  %cmnd23 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %28, i32 0, i32 14, !dbg !12999
  %29 = load i8*, i8** %cmnd23, align 8, !dbg !12999
  %arrayidx24 = getelementptr i8, i8* %29, i64 1, !dbg !12998
  store i8 %conv22, i8* %arrayidx24, align 1, !dbg !13000
  br label %if.end25, !dbg !12998

if.end25:                                         ; preds = %if.then17, %if.end14
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13001
  call void @scsi_log_send(%struct.scsi_cmnd* %30) #10, !dbg !13002
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13003
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %31, i32 0, i32 12, !dbg !13005
  %32 = load i16, i16* %cmd_len, align 4, !dbg !13005
  %conv26 = zext i16 %32 to i32, !dbg !13003
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13006
  %device27 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %33, i32 0, i32 1, !dbg !13007
  %34 = load %struct.scsi_device*, %struct.scsi_device** %device27, align 8, !dbg !13007
  %host28 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %34, i32 0, i32 0, !dbg !13008
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host28, align 8, !dbg !13008
  %max_cmd_len = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %35, i32 0, i32 23, !dbg !13009
  %36 = load i16, i16* %max_cmd_len, align 4, !dbg !13009
  %conv29 = zext i16 %36 to i32, !dbg !13006
  %cmp30 = icmp sgt i32 %conv26, %conv29, !dbg !13010
  br i1 %cmp30, label %if.then32, label %if.end36, !dbg !13011

if.then32:                                        ; preds = %if.end25
  br label %do.body33, !dbg !13012

do.body33:                                        ; preds = %if.then32
  br label %do.end34, !dbg !13014

do.end34:                                         ; preds = %do.body33
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13016
  %result35 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %37, i32 0, i32 24, !dbg !13017
  store i32 327680, i32* %result35, align 8, !dbg !13018
  br label %done, !dbg !13019

if.end36:                                         ; preds = %if.end25
  %38 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13020
  %shost_state = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %38, i32 0, i32 46, !dbg !13020
  %39 = load i32, i32* %shost_state, align 8, !dbg !13020
  %cmp37 = icmp eq i32 %39, 4, !dbg !13020
  %lnot39 = xor i1 %cmp37, true, !dbg !13020
  %lnot41 = xor i1 %lnot39, true, !dbg !13020
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !13020
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !13020
  %tobool44 = icmp ne i64 %conv43, 0, !dbg !13020
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !13022

if.then45:                                        ; preds = %if.end36
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13023
  %result46 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 24, !dbg !13025
  store i32 65536, i32* %result46, align 8, !dbg !13026
  br label %done, !dbg !13027

if.end47:                                         ; preds = %if.end36
  %41 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13028
  call void @trace_scsi_dispatch_cmd_start(%struct.scsi_cmnd* %41) #10, !dbg !13029
  %42 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13030
  %hostt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %42, i32 0, i32 10, !dbg !13031
  %43 = load %struct.scsi_host_template*, %struct.scsi_host_template** %hostt, align 8, !dbg !13031
  %queuecommand = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %43, i32 0, i32 6, !dbg !13032
  %44 = load i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)** %queuecommand, align 8, !dbg !13032
  %45 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13033
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13034
  %call48 = call i32 %44(%struct.Scsi_Host* %45, %struct.scsi_cmnd* %46) #10, !dbg !13030
  store i32 %call48, i32* %rtn, align 4, !dbg !13035
  %47 = load i32, i32* %rtn, align 4, !dbg !13036
  %tobool49 = icmp ne i32 %47, 0, !dbg !13036
  br i1 %tobool49, label %if.then50, label %if.end59, !dbg !13038

if.then50:                                        ; preds = %if.end47
  %48 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13039
  %49 = load i32, i32* %rtn, align 4, !dbg !13041
  call void @trace_scsi_dispatch_cmd_error(%struct.scsi_cmnd* %48, i32 %49) #10, !dbg !13042
  %50 = load i32, i32* %rtn, align 4, !dbg !13043
  %cmp51 = icmp ne i32 %50, 4182, !dbg !13045
  br i1 %cmp51, label %land.lhs.true, label %if.end56, !dbg !13046

land.lhs.true:                                    ; preds = %if.then50
  %51 = load i32, i32* %rtn, align 4, !dbg !13047
  %cmp53 = icmp ne i32 %51, 4184, !dbg !13048
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !13049

if.then55:                                        ; preds = %land.lhs.true
  store i32 4181, i32* %rtn, align 4, !dbg !13050
  br label %if.end56, !dbg !13051

if.end56:                                         ; preds = %if.then55, %land.lhs.true, %if.then50
  br label %do.body57, !dbg !13052

do.body57:                                        ; preds = %if.end56
  br label %do.end58, !dbg !13053

do.end58:                                         ; preds = %do.body57
  br label %if.end59, !dbg !13055

if.end59:                                         ; preds = %do.end58, %if.end47
  %52 = load i32, i32* %rtn, align 4, !dbg !13056
  store i32 %52, i32* %retval, align 4, !dbg !13057
  br label %return, !dbg !13057

done:                                             ; preds = %if.then45, %do.end34, %if.then
  call void @llvm.dbg.label(metadata !13058), !dbg !13059
  %53 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13060
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %53, i32 0, i32 21, !dbg !13061
  %54 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !13061
  %55 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !13062
  call void %54(%struct.scsi_cmnd* %55) #10, !dbg !13060
  store i32 0, i32* %retval, align 4, !dbg !13063
  br label %return, !dbg !13063

return:                                           ; preds = %done, %if.end59, %do.end
  %56 = load i32, i32* %retval, align 4, !dbg !13064
  ret i32 %56, !dbg !13064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_device_blocked(%struct.scsi_device* %sdev) #0 !dbg !13065 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !13066, metadata !DIExpression()), !dbg !13067
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13068
  %sdev_state = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 60, !dbg !13069
  %1 = load i32, i32* %sdev_state, align 8, !dbg !13069
  %cmp = icmp eq i32 %1, 8, !dbg !13070
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !13071

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13072
  %sdev_state1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 60, !dbg !13073
  %3 = load i32, i32* %sdev_state1, align 8, !dbg !13073
  %cmp2 = icmp eq i32 %3, 9, !dbg !13074
  br label %lor.end, !dbg !13071

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !13071
  ret i32 %lor.ext, !dbg !13075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_device_online(%struct.scsi_device* %sdev) #0 !dbg !13076 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !13077, metadata !DIExpression()), !dbg !13078
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13079
  %sdev_state = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 60, !dbg !13080
  %1 = load i32, i32* %sdev_state, align 8, !dbg !13080
  %cmp = icmp ne i32 %1, 6, !dbg !13081
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13082

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13083
  %sdev_state1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 60, !dbg !13084
  %3 = load i32, i32* %sdev_state1, align 8, !dbg !13084
  %cmp2 = icmp ne i32 %3, 7, !dbg !13085
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !13086

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13087
  %sdev_state3 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 60, !dbg !13088
  %5 = load i32, i32* %sdev_state3, align 8, !dbg !13088
  %cmp4 = icmp ne i32 %5, 4, !dbg !13089
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %6 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !13090
  %land.ext = zext i1 %6 to i32, !dbg !13086
  ret i32 %land.ext, !dbg !13091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !13092 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13093, metadata !DIExpression()), !dbg !13095
  %0 = load i64, i64* %__edi, align 8, !dbg !13095
  store i64 %0, i64* %__edi, align 8, !dbg !13095
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13096, metadata !DIExpression()), !dbg !13095
  %1 = load i64, i64* %__esi, align 8, !dbg !13095
  store i64 %1, i64* %__esi, align 8, !dbg !13095
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13097, metadata !DIExpression()), !dbg !13095
  %2 = load i64, i64* %__edx, align 8, !dbg !13095
  store i64 %2, i64* %__edx, align 8, !dbg !13095
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13098, metadata !DIExpression()), !dbg !13095
  %3 = load i64, i64* %__ecx, align 8, !dbg !13095
  store i64 %3, i64* %__ecx, align 8, !dbg !13095
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13099, metadata !DIExpression()), !dbg !13095
  %4 = load i64, i64* %__eax, align 8, !dbg !13095
  store i64 %4, i64* %__eax, align 8, !dbg !13095
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !13095
  %6 = call i64 @llvm.read_register.i64(metadata !5522), !dbg !13095
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !13095, !srcloc !13100
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !13095
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !13095
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13095
  call void @llvm.write_register.i64(metadata !5522, i64 %asmresult1), !dbg !13095
  ret void, !dbg !13101
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !13102 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13103, metadata !DIExpression()), !dbg !13105
  %0 = load i64, i64* %__edi, align 8, !dbg !13105
  store i64 %0, i64* %__edi, align 8, !dbg !13105
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13106, metadata !DIExpression()), !dbg !13105
  %1 = load i64, i64* %__esi, align 8, !dbg !13105
  store i64 %1, i64* %__esi, align 8, !dbg !13105
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13107, metadata !DIExpression()), !dbg !13105
  %2 = load i64, i64* %__edx, align 8, !dbg !13105
  store i64 %2, i64* %__edx, align 8, !dbg !13105
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13108, metadata !DIExpression()), !dbg !13105
  %3 = load i64, i64* %__ecx, align 8, !dbg !13105
  store i64 %3, i64* %__ecx, align 8, !dbg !13105
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13109, metadata !DIExpression()), !dbg !13105
  %4 = load i64, i64* %__eax, align 8, !dbg !13105
  store i64 %4, i64* %__eax, align 8, !dbg !13105
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !13105
  %6 = call i64 @llvm.read_register.i64(metadata !5522), !dbg !13105
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #7, !dbg !13105, !srcloc !13110
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !13105
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !13105
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13105
  call void @llvm.write_register.i64(metadata !5522, i64 %asmresult1), !dbg !13105
  ret void, !dbg !13111
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_host_busy(%struct.Scsi_Host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @scsi_setup_scsi_cmnd(%struct.scsi_device* %sdev, %struct.request* %req) #0 !dbg !13112 {
entry:
  %retval = alloca i8, align 1
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %req.addr = alloca %struct.request*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %ret = alloca i8, align 1
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !13115, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !13117, metadata !DIExpression()), !dbg !13118
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13119
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #10, !dbg !13120
  %1 = bitcast i8* %call to %struct.scsi_cmnd*, !dbg !13120
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !13118
  %2 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13121
  %bio = getelementptr inbounds %struct.request, %struct.request* %2, i32 0, i32 9, !dbg !13123
  %3 = load %struct.bio*, %struct.bio** %bio, align 8, !dbg !13123
  %tobool = icmp ne %struct.bio* %3, null, !dbg !13121
  br i1 %tobool, label %if.then, label %if.else, !dbg !13124

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !13125, metadata !DIExpression()), !dbg !13127
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13128
  %call1 = call zeroext i8 @scsi_alloc_sgtables(%struct.scsi_cmnd* %4) #10, !dbg !13129
  store i8 %call1, i8* %ret, align 1, !dbg !13127
  %5 = load i8, i8* %ret, align 1, !dbg !13130
  %conv = zext i8 %5 to i32, !dbg !13130
  %cmp = icmp ne i32 %conv, 0, !dbg !13130
  %lnot = xor i1 %cmp, true, !dbg !13130
  %lnot3 = xor i1 %lnot, true, !dbg !13130
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13130
  %conv4 = sext i32 %lnot.ext to i64, !dbg !13130
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !13130
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !13132

if.then6:                                         ; preds = %if.then
  %6 = load i8, i8* %ret, align 1, !dbg !13133
  store i8 %6, i8* %retval, align 1, !dbg !13134
  br label %return, !dbg !13134

if.end:                                           ; preds = %if.then
  br label %if.end25, !dbg !13135

if.else:                                          ; preds = %entry
  br label %do.body, !dbg !13136

do.body:                                          ; preds = %if.else
  %7 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13138
  %call7 = call i32 @blk_rq_bytes(%struct.request* %7) #10, !dbg !13138
  %tobool8 = icmp ne i32 %call7, 0, !dbg !13138
  %lnot9 = xor i1 %tobool8, true, !dbg !13138
  %lnot11 = xor i1 %lnot9, true, !dbg !13138
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !13138
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !13138
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !13138
  br i1 %tobool14, label %if.then15, label %if.end23, !dbg !13141

if.then15:                                        ; preds = %do.body
  br label %do.body16, !dbg !13138

do.body16:                                        ; preds = %if.then15
  br label %do.body17, !dbg !13142

do.body17:                                        ; preds = %do.body16
  br label %do.end, !dbg !13144

do.end:                                           ; preds = %do.body17
  br label %do.body18, !dbg !13142

do.body18:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 1188, i32 0, i64 12) #7, !dbg !13146, !srcloc !13148
  br label %do.end19, !dbg !13146

do.end19:                                         ; preds = %do.body18
  br label %do.body20, !dbg !13142

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 315) #7, !dbg !13149, !srcloc !13152
  unreachable, !dbg !13153

do.end21:                                         ; No predecessors!
  br label %do.end22, !dbg !13142

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !13142

if.end23:                                         ; preds = %do.end22, %do.body
  br label %do.end24, !dbg !13141

do.end24:                                         ; preds = %if.end23
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13154
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 15, !dbg !13155
  %9 = bitcast %struct.scsi_data_buffer* %sdb to i8*, !dbg !13156
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false), !dbg !13156
  br label %if.end25

if.end25:                                         ; preds = %do.end24, %if.end
  %10 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13157
  %call26 = call %struct.scsi_request* @scsi_req(%struct.request* %10) #10, !dbg !13158
  %cmd_len = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %call26, i32 0, i32 2, !dbg !13159
  %11 = load i16, i16* %cmd_len, align 8, !dbg !13159
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13160
  %cmd_len27 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %12, i32 0, i32 12, !dbg !13161
  store i16 %11, i16* %cmd_len27, align 4, !dbg !13162
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13163
  %cmd_len28 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 12, !dbg !13165
  %14 = load i16, i16* %cmd_len28, align 4, !dbg !13165
  %conv29 = zext i16 %14 to i32, !dbg !13163
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !13166
  br i1 %cmp30, label %if.then32, label %if.end36, !dbg !13167

if.then32:                                        ; preds = %if.end25
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13168
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 14, !dbg !13169
  %16 = load i8*, i8** %cmnd, align 8, !dbg !13169
  %call33 = call i32 @scsi_command_size(i8* %16) #10, !dbg !13170
  %conv34 = trunc i32 %call33 to i16, !dbg !13170
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13171
  %cmd_len35 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %17, i32 0, i32 12, !dbg !13172
  store i16 %conv34, i16* %cmd_len35, align 4, !dbg !13173
  br label %if.end36, !dbg !13171

if.end36:                                         ; preds = %if.then32, %if.end25
  %18 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13174
  %call37 = call %struct.scsi_request* @scsi_req(%struct.request* %18) #10, !dbg !13175
  %cmd38 = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %call37, i32 0, i32 1, !dbg !13176
  %19 = load i8*, i8** %cmd38, align 8, !dbg !13176
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13177
  %cmnd39 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 14, !dbg !13178
  store i8* %19, i8** %cmnd39, align 8, !dbg !13179
  %21 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13180
  %call40 = call i32 @blk_rq_bytes(%struct.request* %21) #10, !dbg !13181
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13182
  %transfersize = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %22, i32 0, i32 18, !dbg !13183
  store i32 %call40, i32* %transfersize, align 4, !dbg !13184
  %23 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13185
  %call41 = call %struct.scsi_request* @scsi_req(%struct.request* %23) #10, !dbg !13186
  %retries = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %call41, i32 0, i32 6, !dbg !13187
  %24 = load i32, i32* %retries, align 8, !dbg !13187
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13188
  %allowed = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %25, i32 0, i32 8, !dbg !13189
  store i32 %24, i32* %allowed, align 4, !dbg !13190
  store i8 0, i8* %retval, align 1, !dbg !13191
  br label %return, !dbg !13191

return:                                           ; preds = %if.end36, %if.then6
  %26 = load i8, i8* %retval, align 1, !dbg !13192
  ret i8 %26, !dbg !13192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_command_size(i8* %cmnd) #0 !dbg !13193 {
entry:
  %cmnd.addr = alloca i8*, align 8
  store i8* %cmnd, i8** %cmnd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cmnd.addr, metadata !13196, metadata !DIExpression()), !dbg !13197
  %0 = load i8*, i8** %cmnd.addr, align 8, !dbg !13198
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !13198
  %1 = load i8, i8* %arrayidx, align 1, !dbg !13198
  %conv = zext i8 %1 to i32, !dbg !13198
  %cmp = icmp eq i32 %conv, 127, !dbg !13199
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13200

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %cmnd.addr, align 8, !dbg !13201
  %call = call i32 @scsi_varlen_cdb_length(i8* %2) #10, !dbg !13202
  br label %cond.end, !dbg !13200

cond.false:                                       ; preds = %entry
  %3 = load i8*, i8** %cmnd.addr, align 8, !dbg !13203
  %arrayidx2 = getelementptr i8, i8* %3, i64 0, !dbg !13203
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !13203
  %conv3 = zext i8 %4 to i32, !dbg !13203
  %shr = ashr i32 %conv3, 5, !dbg !13203
  %and = and i32 %shr, 7, !dbg !13203
  %idxprom = sext i32 %and to i64, !dbg !13203
  %arrayidx4 = getelementptr [8 x i8], [8 x i8]* @scsi_command_size_tbl, i64 0, i64 %idxprom, !dbg !13203
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !13203
  %conv5 = zext i8 %5 to i32, !dbg !13203
  br label %cond.end, !dbg !13200

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv5, %cond.false ], !dbg !13200
  ret i32 %cond, !dbg !13204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_varlen_cdb_length(i8* %hdr) #0 !dbg !13205 {
entry:
  %hdr.addr = alloca i8*, align 8
  store i8* %hdr, i8** %hdr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hdr.addr, metadata !13208, metadata !DIExpression()), !dbg !13209
  %0 = load i8*, i8** %hdr.addr, align 8, !dbg !13210
  %1 = bitcast i8* %0 to %struct.scsi_varlen_cdb_hdr*, !dbg !13211
  %additional_cdb_length = getelementptr inbounds %struct.scsi_varlen_cdb_hdr, %struct.scsi_varlen_cdb_hdr* %1, i32 0, i32 3, !dbg !13212
  %2 = load i8, i8* %additional_cdb_length, align 1, !dbg !13212
  %conv = zext i8 %2 to i32, !dbg !13213
  %add = add i32 %conv, 8, !dbg !13214
  ret i32 %add, !dbg !13215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_should_fake_timeout(%struct.request_queue* %q) #0 !dbg !13216 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !13217, metadata !DIExpression()), !dbg !13218
  ret i1 false, !dbg !13219
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !13220 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13221, metadata !DIExpression()), !dbg !13223
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13225, metadata !DIExpression()), !dbg !13226
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !13227, metadata !DIExpression()), !dbg !13229
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5792, metadata !DIExpression()), !dbg !13230
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5802, metadata !DIExpression()), !dbg !13232
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13233, metadata !DIExpression()), !dbg !13234
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13235, metadata !DIExpression()), !dbg !13236
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13237
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13238
  %div = sdiv i64 %1, 64, !dbg !13238
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13239
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13237
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13240
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13241
  %conv.i = trunc i64 %4 to i32, !dbg !13241
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !13242
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13243
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13243
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !13243
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13244
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13245
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !13229
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !13229
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #7, !dbg !13229, !srcloc !13246
  store i8 %11, i8* %c.i, align 1, !dbg !13229
  %12 = load i8, i8* %c.i, align 1, !dbg !13229
  %tobool.i = trunc i8 %12 to i1, !dbg !13229
  %frombool.i = zext i1 %tobool.i to i8, !dbg !13229
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !13229
  %13 = load i8, i8* %tmp.i, align 1, !dbg !13229
  %tobool1.i = trunc i8 %13 to i1, !dbg !13229
  ret i1 %tobool1.i, !dbg !13247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_scsi_dispatch_cmd_done(%struct.scsi_cmnd* %cmd) #0 !dbg !13248 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !13250, metadata !DIExpression()), !dbg !13251
  ret void, !dbg !13251
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_complete_request(%struct.request*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_log_send(%struct.scsi_cmnd* %cmd) #0 !dbg !13252 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !13254, metadata !DIExpression()), !dbg !13255
  ret void, !dbg !13256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_scsi_dispatch_cmd_start(%struct.scsi_cmnd* %cmd) #0 !dbg !13257 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !13258, metadata !DIExpression()), !dbg !13259
  ret void, !dbg !13259
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_scsi_dispatch_cmd_error(%struct.scsi_cmnd* %cmd, i32 %rtn) #0 !dbg !13260 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %rtn.addr = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !13261, metadata !DIExpression()), !dbg !13262
  store i32 %rtn, i32* %rtn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rtn.addr, metadata !13263, metadata !DIExpression()), !dbg !13262
  ret void, !dbg !13262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_dev_queue_ready(%struct.request_queue* %q, %struct.scsi_device* %sdev) #0 !dbg !13264 {
entry:
  %v.addr.i1.i28 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i28, metadata !5781, metadata !DIExpression()), !dbg !13267
  %v.addr.i.i29 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i29, metadata !5792, metadata !DIExpression()), !dbg !13270
  %size.addr.i.i30 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i30, metadata !5802, metadata !DIExpression()), !dbg !13272
  %v.addr.i31 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i31, metadata !5804, metadata !DIExpression()), !dbg !13273
  %i.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i.i, metadata !12372, metadata !DIExpression()), !dbg !13274
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !12390, metadata !DIExpression()), !dbg !13282
  %__ret.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i.i, metadata !12392, metadata !DIExpression()), !dbg !13283
  %tmp.i.i.i.i = alloca i32, align 4
  %i.addr.i.i.i20 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i20, metadata !12395, metadata !DIExpression()), !dbg !13284
  %v.addr.i.i.i21 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i21, metadata !12397, metadata !DIExpression()), !dbg !13285
  %v.addr.i1.i22 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i22, metadata !12399, metadata !DIExpression()), !dbg !13286
  %v.addr.i.i23 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i23, metadata !5792, metadata !DIExpression()), !dbg !13287
  %size.addr.i.i24 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i24, metadata !5802, metadata !DIExpression()), !dbg !13289
  %v.addr.i25 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i25, metadata !12404, metadata !DIExpression()), !dbg !13290
  %v.addr.i1.i14 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i14, metadata !9987, metadata !DIExpression()), !dbg !13291
  %v.addr.i.i15 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i15, metadata !7162, metadata !DIExpression()), !dbg !13294
  %size.addr.i.i16 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i16, metadata !7166, metadata !DIExpression()), !dbg !13296
  %v.addr.i17 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i17, metadata !10002, metadata !DIExpression()), !dbg !13297
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !12372, metadata !DIExpression()), !dbg !13298
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !12390, metadata !DIExpression()), !dbg !13302
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !12392, metadata !DIExpression()), !dbg !13303
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !12421, metadata !DIExpression()), !dbg !13304
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5792, metadata !DIExpression()), !dbg !13305
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5802, metadata !DIExpression()), !dbg !13307
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !12426, metadata !DIExpression()), !dbg !13308
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.request_queue*, align 8
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %busy = alloca i32, align 4
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !13309, metadata !DIExpression()), !dbg !13310
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !13311, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.declare(metadata i32* %busy, metadata !13313, metadata !DIExpression()), !dbg !13314
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13315
  %device_busy = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 4, !dbg !13316
  store %struct.atomic_t* %device_busy, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13317
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !13317
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13318
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !13319
  %conv.i.i = trunc i64 %4 to i32, !dbg !13319
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #11, !dbg !13320
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13321
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !13321
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !13321
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13322
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13323
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i.i.i, align 8
  %9 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !13324
  %10 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !13303
  store i32 %10, i32* %__ret.i.i.i, align 4, !dbg !13303
  %11 = load i32, i32* %__ret.i.i.i, align 4, !dbg !13303
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !13303
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !13303
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %11, i32* %counter.i.i.i) #7, !dbg !13303, !srcloc !12506
  store i32 %13, i32* %__ret.i.i.i, align 4, !dbg !13303
  %14 = load i32, i32* %__ret.i.i.i, align 4, !dbg !13303
  store i32 %14, i32* %tmp.i.i.i, align 4, !dbg !13303
  %15 = load i32, i32* %tmp.i.i.i, align 4, !dbg !13303
  %add.i.i.i = add i32 %9, %15, !dbg !13325
  %sub = sub i32 %add.i.i.i, 1, !dbg !13326
  store i32 %sub, i32* %busy, align 4, !dbg !13327
  %16 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13328
  %device_blocked = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %16, i32 0, i32 5, !dbg !13329
  store %struct.atomic_t* %device_blocked, %struct.atomic_t** %v.addr.i17, align 8
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i17, align 8, !dbg !13330
  %18 = bitcast %struct.atomic_t* %17 to i8*, !dbg !13330
  store i8* %18, i8** %v.addr.i.i15, align 8
  store i64 4, i64* %size.addr.i.i16, align 8
  %19 = load i8*, i8** %v.addr.i.i15, align 8, !dbg !13331
  %20 = load i64, i64* %size.addr.i.i16, align 8, !dbg !13332
  %conv.i.i18 = trunc i64 %20 to i32, !dbg !13332
  %call.i.i19 = call zeroext i1 @kasan_check_read(i8* %19, i32 %conv.i.i18) #11, !dbg !13333
  %21 = load i8*, i8** %v.addr.i.i15, align 8, !dbg !13334
  %22 = load i64, i64* %size.addr.i.i16, align 8, !dbg !13334
  call void @kcsan_check_access(i8* %21, i64 %22, i32 4) #11, !dbg !13334
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i17, align 8, !dbg !13335
  store %struct.atomic_t* %23, %struct.atomic_t** %v.addr.i1.i14, align 8
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i14, align 8, !dbg !13336
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %24, i32 0, i32 0, !dbg !13336
  %25 = load volatile i32, i32* %counter.i.i, align 4, !dbg !13336
  %tobool = icmp ne i32 %25, 0, !dbg !13337
  br i1 %tobool, label %if.then, label %if.end8, !dbg !13338

if.then:                                          ; preds = %entry
  %26 = load i32, i32* %busy, align 4, !dbg !13339
  %tobool2 = icmp ne i32 %26, 0, !dbg !13339
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !13341

if.then3:                                         ; preds = %if.then
  br label %out_dec, !dbg !13342

if.end:                                           ; preds = %if.then
  %27 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13343
  %device_blocked4 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %27, i32 0, i32 5, !dbg !13344
  store %struct.atomic_t* %device_blocked4, %struct.atomic_t** %v.addr.i25, align 8
  %28 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i25, align 8, !dbg !13345
  %29 = bitcast %struct.atomic_t* %28 to i8*, !dbg !13345
  store i8* %29, i8** %v.addr.i.i23, align 8
  store i64 4, i64* %size.addr.i.i24, align 8
  %30 = load i8*, i8** %v.addr.i.i23, align 8, !dbg !13346
  %31 = load i64, i64* %size.addr.i.i24, align 8, !dbg !13347
  %conv.i.i26 = trunc i64 %31 to i32, !dbg !13347
  %call.i.i27 = call zeroext i1 @kasan_check_write(i8* %30, i32 %conv.i.i26) #11, !dbg !13348
  %32 = load i8*, i8** %v.addr.i.i23, align 8, !dbg !13349
  %33 = load i64, i64* %size.addr.i.i24, align 8, !dbg !13349
  call void @kcsan_check_access(i8* %32, i64 %33, i32 7) #11, !dbg !13349
  %34 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i25, align 8, !dbg !13350
  store %struct.atomic_t* %34, %struct.atomic_t** %v.addr.i1.i22, align 8
  %35 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i22, align 8, !dbg !13351
  store i32 1, i32* %i.addr.i.i.i20, align 4
  store %struct.atomic_t* %35, %struct.atomic_t** %v.addr.i.i.i21, align 8
  %36 = load i32, i32* %i.addr.i.i.i20, align 4, !dbg !13352
  %sub.i.i.i = sub i32 0, %36, !dbg !13353
  %37 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i21, align 8, !dbg !13354
  store i32 %sub.i.i.i, i32* %i.addr.i.i.i.i, align 4
  store %struct.atomic_t* %37, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %38 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !13355
  %39 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !13283
  store i32 %39, i32* %__ret.i.i.i.i, align 4, !dbg !13283
  %40 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !13283
  %41 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !13283
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %41, i32 0, i32 0, !dbg !13283
  %42 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i.i, i32 %40, i32* %counter.i.i.i.i) #7, !dbg !13283, !srcloc !12506
  store i32 %42, i32* %__ret.i.i.i.i, align 4, !dbg !13283
  %43 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !13283
  store i32 %43, i32* %tmp.i.i.i.i, align 4, !dbg !13283
  %44 = load i32, i32* %tmp.i.i.i.i, align 4, !dbg !13283
  %add.i.i.i.i = add i32 %38, %44, !dbg !13356
  %cmp = icmp sgt i32 %add.i.i.i.i, 0, !dbg !13357
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !13358

if.then6:                                         ; preds = %if.end
  br label %out_dec, !dbg !13359

if.end7:                                          ; preds = %if.end
  br label %do.body, !dbg !13360

do.body:                                          ; preds = %if.end7
  br label %do.end, !dbg !13361

do.end:                                           ; preds = %do.body
  br label %if.end8, !dbg !13363

if.end8:                                          ; preds = %do.end, %entry
  %45 = load i32, i32* %busy, align 4, !dbg !13364
  %46 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13366
  %queue_depth = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %46, i32 0, i32 9, !dbg !13367
  %47 = load i16, i16* %queue_depth, align 8, !dbg !13367
  %conv = zext i16 %47 to i32, !dbg !13366
  %cmp9 = icmp uge i32 %45, %conv, !dbg !13368
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !13369

if.then11:                                        ; preds = %if.end8
  br label %out_dec, !dbg !13370

if.end12:                                         ; preds = %if.end8
  store i32 1, i32* %retval, align 4, !dbg !13371
  br label %return, !dbg !13371

out_dec:                                          ; preds = %if.then11, %if.then6, %if.then3
  call void @llvm.dbg.label(metadata !13372), !dbg !13373
  %48 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13374
  %device_busy13 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %48, i32 0, i32 4, !dbg !13375
  store %struct.atomic_t* %device_busy13, %struct.atomic_t** %v.addr.i31, align 8
  %49 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i31, align 8, !dbg !13376
  %50 = bitcast %struct.atomic_t* %49 to i8*, !dbg !13376
  store i8* %50, i8** %v.addr.i.i29, align 8
  store i64 4, i64* %size.addr.i.i30, align 8
  %51 = load i8*, i8** %v.addr.i.i29, align 8, !dbg !13377
  %52 = load i64, i64* %size.addr.i.i30, align 8, !dbg !13378
  %conv.i.i32 = trunc i64 %52 to i32, !dbg !13378
  %call.i.i33 = call zeroext i1 @kasan_check_write(i8* %51, i32 %conv.i.i32) #11, !dbg !13379
  %53 = load i8*, i8** %v.addr.i.i29, align 8, !dbg !13380
  %54 = load i64, i64* %size.addr.i.i30, align 8, !dbg !13380
  call void @kcsan_check_access(i8* %53, i64 %54, i32 7) #11, !dbg !13380
  %55 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i31, align 8, !dbg !13381
  store %struct.atomic_t* %55, %struct.atomic_t** %v.addr.i1.i28, align 8
  %56 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i28, align 8, !dbg !13382
  %counter.i.i34 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %56, i32 0, i32 0, !dbg !13383
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i34, i32* %counter.i.i34) #7, !dbg !13384, !srcloc !5844
  store i32 0, i32* %retval, align 4, !dbg !13385
  br label %return, !dbg !13385

return:                                           ; preds = %out_dec, %if.end12
  %57 = load i32, i32* %retval, align 4, !dbg !13386
  ret i32 %57, !dbg !13386
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_delay_run_hw_queues(%struct.request_queue*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @scsi_times_out(%struct.request*) #2

; Function Attrs: noredzone
declare dso_local i32 @scsi_decide_disposition(%struct.scsi_cmnd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_log_completion(%struct.scsi_cmnd* %cmd, i32 %disposition) #0 !dbg !13387 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %disposition.addr = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !13388, metadata !DIExpression()), !dbg !13389
  store i32 %disposition, i32* %disposition.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %disposition.addr, metadata !13390, metadata !DIExpression()), !dbg !13391
  ret void, !dbg !13392
}

; Function Attrs: noredzone
declare dso_local void @scsi_finish_command(%struct.scsi_cmnd*) #2

; Function Attrs: noredzone
declare dso_local void @scsi_eh_scmd_add(%struct.scsi_cmnd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @scsi_alloc_sense_buffer(i1 zeroext %unchecked_isa_dma, i32 %gfp_mask, i32 %numa_node) #0 !dbg !13393 {
entry:
  %s.addr.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i, metadata !13396, metadata !DIExpression()), !dbg !13400
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !13402, metadata !DIExpression()), !dbg !13403
  %node.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i, metadata !13404, metadata !DIExpression()), !dbg !13405
  %unchecked_isa_dma.addr = alloca i8, align 1
  %gfp_mask.addr = alloca i32, align 4
  %numa_node.addr = alloca i32, align 4
  %frombool = zext i1 %unchecked_isa_dma to i8
  store i8 %frombool, i8* %unchecked_isa_dma.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unchecked_isa_dma.addr, metadata !13406, metadata !DIExpression()), !dbg !13407
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !13408, metadata !DIExpression()), !dbg !13409
  store i32 %numa_node, i32* %numa_node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numa_node.addr, metadata !13410, metadata !DIExpression()), !dbg !13411
  %0 = load i8, i8* %unchecked_isa_dma.addr, align 1, !dbg !13412
  %tobool = trunc i8 %0 to i1, !dbg !13412
  %call = call %struct.kmem_cache* @scsi_select_sense_cache(i1 zeroext %tobool) #10, !dbg !13413
  %1 = load i32, i32* %gfp_mask.addr, align 4, !dbg !13414
  %2 = load i32, i32* %numa_node.addr, align 4, !dbg !13415
  store %struct.kmem_cache* %call, %struct.kmem_cache** %s.addr.i, align 8
  store i32 %1, i32* %flags.addr.i, align 4
  store i32 %2, i32* %node.addr.i, align 4
  %3 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i, align 8, !dbg !13416
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !13417
  %call.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %3, i32 %4) #11, !dbg !13418
  %ptrint.i = ptrtoint i8* %call.i to i64, !dbg !13418
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13418
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13418
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !13418
  ret i8* %call.i, !dbg !13419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_free_sense_buffer(i1 zeroext %unchecked_isa_dma, i8* %sense_buffer) #0 !dbg !13420 {
entry:
  %unchecked_isa_dma.addr = alloca i8, align 1
  %sense_buffer.addr = alloca i8*, align 8
  %frombool = zext i1 %unchecked_isa_dma to i8
  store i8 %frombool, i8* %unchecked_isa_dma.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unchecked_isa_dma.addr, metadata !13423, metadata !DIExpression()), !dbg !13424
  store i8* %sense_buffer, i8** %sense_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sense_buffer.addr, metadata !13425, metadata !DIExpression()), !dbg !13426
  %0 = load i8, i8* %unchecked_isa_dma.addr, align 1, !dbg !13427
  %tobool = trunc i8 %0 to i1, !dbg !13427
  %call = call %struct.kmem_cache* @scsi_select_sense_cache(i1 zeroext %tobool) #10, !dbg !13428
  %1 = load i8*, i8** %sense_buffer.addr, align 8, !dbg !13429
  call void @kmem_cache_free(%struct.kmem_cache* %call, i8* %1) #10, !dbg !13430
  ret void, !dbg !13431
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noredzone
declare dso_local void @kmem_cache_free(%struct.kmem_cache*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @scsi_device_is_busy(%struct.scsi_device* %sdev) #0 !dbg !13432 {
entry:
  %v.addr.i1.i7 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i7, metadata !9987, metadata !DIExpression()), !dbg !13435
  %v.addr.i.i8 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i8, metadata !7162, metadata !DIExpression()), !dbg !13439
  %size.addr.i.i9 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i9, metadata !7166, metadata !DIExpression()), !dbg !13441
  %v.addr.i10 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i10, metadata !10002, metadata !DIExpression()), !dbg !13442
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9987, metadata !DIExpression()), !dbg !13443
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7162, metadata !DIExpression()), !dbg !13447
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7166, metadata !DIExpression()), !dbg !13449
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10002, metadata !DIExpression()), !dbg !13450
  %retval = alloca i1, align 1
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !13451, metadata !DIExpression()), !dbg !13452
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13453
  %device_busy = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 4, !dbg !13454
  store %struct.atomic_t* %device_busy, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13455
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !13455
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13456
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !13457
  %conv.i.i = trunc i64 %4 to i32, !dbg !13457
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #11, !dbg !13458
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13459
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !13459
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #11, !dbg !13459
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13460
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13461
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !13461
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !13461
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13462
  %queue_depth = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 9, !dbg !13463
  %11 = load i16, i16* %queue_depth, align 8, !dbg !13463
  %conv = zext i16 %11 to i32, !dbg !13462
  %cmp = icmp sge i32 %9, %conv, !dbg !13464
  br i1 %cmp, label %if.then, label %if.end, !dbg !13465

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !13466
  br label %return, !dbg !13466

if.end:                                           ; preds = %entry
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13467
  %device_blocked = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %12, i32 0, i32 5, !dbg !13468
  store %struct.atomic_t* %device_blocked, %struct.atomic_t** %v.addr.i10, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i10, align 8, !dbg !13469
  %14 = bitcast %struct.atomic_t* %13 to i8*, !dbg !13469
  store i8* %14, i8** %v.addr.i.i8, align 8
  store i64 4, i64* %size.addr.i.i9, align 8
  %15 = load i8*, i8** %v.addr.i.i8, align 8, !dbg !13470
  %16 = load i64, i64* %size.addr.i.i9, align 8, !dbg !13471
  %conv.i.i11 = trunc i64 %16 to i32, !dbg !13471
  %call.i.i12 = call zeroext i1 @kasan_check_read(i8* %15, i32 %conv.i.i11) #11, !dbg !13472
  %17 = load i8*, i8** %v.addr.i.i8, align 8, !dbg !13473
  %18 = load i64, i64* %size.addr.i.i9, align 8, !dbg !13473
  call void @kcsan_check_access(i8* %17, i64 %18, i32 4) #11, !dbg !13473
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i10, align 8, !dbg !13474
  store %struct.atomic_t* %19, %struct.atomic_t** %v.addr.i1.i7, align 8
  %20 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i7, align 8, !dbg !13475
  %counter.i.i13 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %20, i32 0, i32 0, !dbg !13475
  %21 = load volatile i32, i32* %counter.i.i13, align 4, !dbg !13475
  %cmp3 = icmp sgt i32 %21, 0, !dbg !13476
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !13477

if.then5:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !13478
  br label %return, !dbg !13478

if.end6:                                          ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !13479
  br label %return, !dbg !13479

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %22 = load i1, i1* %retval, align 1, !dbg !13480
  ret i1 %22, !dbg !13480
}

; Function Attrs: noredzone
declare dso_local i32 @blk_mq_map_queues(%struct.blk_mq_queue_map*) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #9 !dbg !13481 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13483, metadata !DIExpression()), !dbg !13487
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13489, metadata !DIExpression()), !dbg !13490
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13491, metadata !DIExpression()), !dbg !13492
  %0 = load i64, i64* %size.addr, align 8, !dbg !13493
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !13495
  br i1 %1, label %if.then, label %if.end447, !dbg !13496

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !13497
  %tobool = icmp ne i64 %2, 0, !dbg !13497
  br i1 %tobool, label %if.end, label %if.then1, !dbg !13500

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !13501
  br label %return, !dbg !13501

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !13502
  %cmp = icmp ult i64 %3, 4096, !dbg !13504
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13505

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13506
  br label %return, !dbg !13506

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub = sub i64 %4, 1, !dbg !13507
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !13507
  br i1 %5, label %cond.true, label %cond.false442, !dbg !13507

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub4 = sub i64 %6, 1, !dbg !13507
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !13507
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !13507

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub6 = sub i64 %8, 1, !dbg !13507
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !13507
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !13507

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !13507

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub9 = sub i64 %9, 1, !dbg !13507
  %and = and i64 %sub9, -9223372036854775808, !dbg !13507
  %tobool10 = icmp ne i64 %and, 0, !dbg !13507
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !13507

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !13507

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub13 = sub i64 %10, 1, !dbg !13507
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !13507
  %tobool15 = icmp ne i64 %and14, 0, !dbg !13507
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !13507

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !13507

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub18 = sub i64 %11, 1, !dbg !13507
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !13507
  %tobool20 = icmp ne i64 %and19, 0, !dbg !13507
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !13507

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !13507

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub23 = sub i64 %12, 1, !dbg !13507
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !13507
  %tobool25 = icmp ne i64 %and24, 0, !dbg !13507
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !13507

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !13507

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub28 = sub i64 %13, 1, !dbg !13507
  %and29 = and i64 %sub28, 576460752303423488, !dbg !13507
  %tobool30 = icmp ne i64 %and29, 0, !dbg !13507
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !13507

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !13507

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub33 = sub i64 %14, 1, !dbg !13507
  %and34 = and i64 %sub33, 288230376151711744, !dbg !13507
  %tobool35 = icmp ne i64 %and34, 0, !dbg !13507
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !13507

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !13507

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub38 = sub i64 %15, 1, !dbg !13507
  %and39 = and i64 %sub38, 144115188075855872, !dbg !13507
  %tobool40 = icmp ne i64 %and39, 0, !dbg !13507
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !13507

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !13507

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub43 = sub i64 %16, 1, !dbg !13507
  %and44 = and i64 %sub43, 72057594037927936, !dbg !13507
  %tobool45 = icmp ne i64 %and44, 0, !dbg !13507
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !13507

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !13507

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub48 = sub i64 %17, 1, !dbg !13507
  %and49 = and i64 %sub48, 36028797018963968, !dbg !13507
  %tobool50 = icmp ne i64 %and49, 0, !dbg !13507
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !13507

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !13507

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub53 = sub i64 %18, 1, !dbg !13507
  %and54 = and i64 %sub53, 18014398509481984, !dbg !13507
  %tobool55 = icmp ne i64 %and54, 0, !dbg !13507
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !13507

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !13507

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub58 = sub i64 %19, 1, !dbg !13507
  %and59 = and i64 %sub58, 9007199254740992, !dbg !13507
  %tobool60 = icmp ne i64 %and59, 0, !dbg !13507
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !13507

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !13507

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub63 = sub i64 %20, 1, !dbg !13507
  %and64 = and i64 %sub63, 4503599627370496, !dbg !13507
  %tobool65 = icmp ne i64 %and64, 0, !dbg !13507
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13507

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !13507

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub68 = sub i64 %21, 1, !dbg !13507
  %and69 = and i64 %sub68, 2251799813685248, !dbg !13507
  %tobool70 = icmp ne i64 %and69, 0, !dbg !13507
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !13507

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !13507

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub73 = sub i64 %22, 1, !dbg !13507
  %and74 = and i64 %sub73, 1125899906842624, !dbg !13507
  %tobool75 = icmp ne i64 %and74, 0, !dbg !13507
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !13507

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !13507

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub78 = sub i64 %23, 1, !dbg !13507
  %and79 = and i64 %sub78, 562949953421312, !dbg !13507
  %tobool80 = icmp ne i64 %and79, 0, !dbg !13507
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !13507

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !13507

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub83 = sub i64 %24, 1, !dbg !13507
  %and84 = and i64 %sub83, 281474976710656, !dbg !13507
  %tobool85 = icmp ne i64 %and84, 0, !dbg !13507
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !13507

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !13507

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub88 = sub i64 %25, 1, !dbg !13507
  %and89 = and i64 %sub88, 140737488355328, !dbg !13507
  %tobool90 = icmp ne i64 %and89, 0, !dbg !13507
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !13507

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !13507

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub93 = sub i64 %26, 1, !dbg !13507
  %and94 = and i64 %sub93, 70368744177664, !dbg !13507
  %tobool95 = icmp ne i64 %and94, 0, !dbg !13507
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !13507

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !13507

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub98 = sub i64 %27, 1, !dbg !13507
  %and99 = and i64 %sub98, 35184372088832, !dbg !13507
  %tobool100 = icmp ne i64 %and99, 0, !dbg !13507
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !13507

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !13507

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub103 = sub i64 %28, 1, !dbg !13507
  %and104 = and i64 %sub103, 17592186044416, !dbg !13507
  %tobool105 = icmp ne i64 %and104, 0, !dbg !13507
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !13507

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !13507

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub108 = sub i64 %29, 1, !dbg !13507
  %and109 = and i64 %sub108, 8796093022208, !dbg !13507
  %tobool110 = icmp ne i64 %and109, 0, !dbg !13507
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !13507

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !13507

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub113 = sub i64 %30, 1, !dbg !13507
  %and114 = and i64 %sub113, 4398046511104, !dbg !13507
  %tobool115 = icmp ne i64 %and114, 0, !dbg !13507
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13507

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !13507

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub118 = sub i64 %31, 1, !dbg !13507
  %and119 = and i64 %sub118, 2199023255552, !dbg !13507
  %tobool120 = icmp ne i64 %and119, 0, !dbg !13507
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !13507

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !13507

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub123 = sub i64 %32, 1, !dbg !13507
  %and124 = and i64 %sub123, 1099511627776, !dbg !13507
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13507
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !13507

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !13507

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub128 = sub i64 %33, 1, !dbg !13507
  %and129 = and i64 %sub128, 549755813888, !dbg !13507
  %tobool130 = icmp ne i64 %and129, 0, !dbg !13507
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !13507

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !13507

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub133 = sub i64 %34, 1, !dbg !13507
  %and134 = and i64 %sub133, 274877906944, !dbg !13507
  %tobool135 = icmp ne i64 %and134, 0, !dbg !13507
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !13507

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !13507

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub138 = sub i64 %35, 1, !dbg !13507
  %and139 = and i64 %sub138, 137438953472, !dbg !13507
  %tobool140 = icmp ne i64 %and139, 0, !dbg !13507
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !13507

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !13507

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub143 = sub i64 %36, 1, !dbg !13507
  %and144 = and i64 %sub143, 68719476736, !dbg !13507
  %tobool145 = icmp ne i64 %and144, 0, !dbg !13507
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !13507

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !13507

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub148 = sub i64 %37, 1, !dbg !13507
  %and149 = and i64 %sub148, 34359738368, !dbg !13507
  %tobool150 = icmp ne i64 %and149, 0, !dbg !13507
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !13507

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !13507

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub153 = sub i64 %38, 1, !dbg !13507
  %and154 = and i64 %sub153, 17179869184, !dbg !13507
  %tobool155 = icmp ne i64 %and154, 0, !dbg !13507
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !13507

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !13507

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub158 = sub i64 %39, 1, !dbg !13507
  %and159 = and i64 %sub158, 8589934592, !dbg !13507
  %tobool160 = icmp ne i64 %and159, 0, !dbg !13507
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !13507

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !13507

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub163 = sub i64 %40, 1, !dbg !13507
  %and164 = and i64 %sub163, 4294967296, !dbg !13507
  %tobool165 = icmp ne i64 %and164, 0, !dbg !13507
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !13507

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !13507

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub168 = sub i64 %41, 1, !dbg !13507
  %and169 = and i64 %sub168, 2147483648, !dbg !13507
  %tobool170 = icmp ne i64 %and169, 0, !dbg !13507
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !13507

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !13507

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub173 = sub i64 %42, 1, !dbg !13507
  %and174 = and i64 %sub173, 1073741824, !dbg !13507
  %tobool175 = icmp ne i64 %and174, 0, !dbg !13507
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !13507

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !13507

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub178 = sub i64 %43, 1, !dbg !13507
  %and179 = and i64 %sub178, 536870912, !dbg !13507
  %tobool180 = icmp ne i64 %and179, 0, !dbg !13507
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !13507

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !13507

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub183 = sub i64 %44, 1, !dbg !13507
  %and184 = and i64 %sub183, 268435456, !dbg !13507
  %tobool185 = icmp ne i64 %and184, 0, !dbg !13507
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !13507

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !13507

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub188 = sub i64 %45, 1, !dbg !13507
  %and189 = and i64 %sub188, 134217728, !dbg !13507
  %tobool190 = icmp ne i64 %and189, 0, !dbg !13507
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !13507

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !13507

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub193 = sub i64 %46, 1, !dbg !13507
  %and194 = and i64 %sub193, 67108864, !dbg !13507
  %tobool195 = icmp ne i64 %and194, 0, !dbg !13507
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !13507

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !13507

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub198 = sub i64 %47, 1, !dbg !13507
  %and199 = and i64 %sub198, 33554432, !dbg !13507
  %tobool200 = icmp ne i64 %and199, 0, !dbg !13507
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !13507

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !13507

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub203 = sub i64 %48, 1, !dbg !13507
  %and204 = and i64 %sub203, 16777216, !dbg !13507
  %tobool205 = icmp ne i64 %and204, 0, !dbg !13507
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !13507

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !13507

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub208 = sub i64 %49, 1, !dbg !13507
  %and209 = and i64 %sub208, 8388608, !dbg !13507
  %tobool210 = icmp ne i64 %and209, 0, !dbg !13507
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !13507

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !13507

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub213 = sub i64 %50, 1, !dbg !13507
  %and214 = and i64 %sub213, 4194304, !dbg !13507
  %tobool215 = icmp ne i64 %and214, 0, !dbg !13507
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !13507

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !13507

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub218 = sub i64 %51, 1, !dbg !13507
  %and219 = and i64 %sub218, 2097152, !dbg !13507
  %tobool220 = icmp ne i64 %and219, 0, !dbg !13507
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !13507

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !13507

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub223 = sub i64 %52, 1, !dbg !13507
  %and224 = and i64 %sub223, 1048576, !dbg !13507
  %tobool225 = icmp ne i64 %and224, 0, !dbg !13507
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !13507

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !13507

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub228 = sub i64 %53, 1, !dbg !13507
  %and229 = and i64 %sub228, 524288, !dbg !13507
  %tobool230 = icmp ne i64 %and229, 0, !dbg !13507
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !13507

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !13507

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub233 = sub i64 %54, 1, !dbg !13507
  %and234 = and i64 %sub233, 262144, !dbg !13507
  %tobool235 = icmp ne i64 %and234, 0, !dbg !13507
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !13507

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !13507

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub238 = sub i64 %55, 1, !dbg !13507
  %and239 = and i64 %sub238, 131072, !dbg !13507
  %tobool240 = icmp ne i64 %and239, 0, !dbg !13507
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !13507

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !13507

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub243 = sub i64 %56, 1, !dbg !13507
  %and244 = and i64 %sub243, 65536, !dbg !13507
  %tobool245 = icmp ne i64 %and244, 0, !dbg !13507
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !13507

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !13507

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub248 = sub i64 %57, 1, !dbg !13507
  %and249 = and i64 %sub248, 32768, !dbg !13507
  %tobool250 = icmp ne i64 %and249, 0, !dbg !13507
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !13507

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !13507

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub253 = sub i64 %58, 1, !dbg !13507
  %and254 = and i64 %sub253, 16384, !dbg !13507
  %tobool255 = icmp ne i64 %and254, 0, !dbg !13507
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !13507

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !13507

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub258 = sub i64 %59, 1, !dbg !13507
  %and259 = and i64 %sub258, 8192, !dbg !13507
  %tobool260 = icmp ne i64 %and259, 0, !dbg !13507
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !13507

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !13507

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub263 = sub i64 %60, 1, !dbg !13507
  %and264 = and i64 %sub263, 4096, !dbg !13507
  %tobool265 = icmp ne i64 %and264, 0, !dbg !13507
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !13507

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !13507

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub268 = sub i64 %61, 1, !dbg !13507
  %and269 = and i64 %sub268, 2048, !dbg !13507
  %tobool270 = icmp ne i64 %and269, 0, !dbg !13507
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !13507

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !13507

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub273 = sub i64 %62, 1, !dbg !13507
  %and274 = and i64 %sub273, 1024, !dbg !13507
  %tobool275 = icmp ne i64 %and274, 0, !dbg !13507
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !13507

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !13507

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub278 = sub i64 %63, 1, !dbg !13507
  %and279 = and i64 %sub278, 512, !dbg !13507
  %tobool280 = icmp ne i64 %and279, 0, !dbg !13507
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !13507

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !13507

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub283 = sub i64 %64, 1, !dbg !13507
  %and284 = and i64 %sub283, 256, !dbg !13507
  %tobool285 = icmp ne i64 %and284, 0, !dbg !13507
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !13507

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !13507

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub288 = sub i64 %65, 1, !dbg !13507
  %and289 = and i64 %sub288, 128, !dbg !13507
  %tobool290 = icmp ne i64 %and289, 0, !dbg !13507
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !13507

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !13507

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub293 = sub i64 %66, 1, !dbg !13507
  %and294 = and i64 %sub293, 64, !dbg !13507
  %tobool295 = icmp ne i64 %and294, 0, !dbg !13507
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !13507

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !13507

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub298 = sub i64 %67, 1, !dbg !13507
  %and299 = and i64 %sub298, 32, !dbg !13507
  %tobool300 = icmp ne i64 %and299, 0, !dbg !13507
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !13507

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !13507

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub303 = sub i64 %68, 1, !dbg !13507
  %and304 = and i64 %sub303, 16, !dbg !13507
  %tobool305 = icmp ne i64 %and304, 0, !dbg !13507
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !13507

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !13507

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub308 = sub i64 %69, 1, !dbg !13507
  %and309 = and i64 %sub308, 8, !dbg !13507
  %tobool310 = icmp ne i64 %and309, 0, !dbg !13507
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !13507

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !13507

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub313 = sub i64 %70, 1, !dbg !13507
  %and314 = and i64 %sub313, 4, !dbg !13507
  %tobool315 = icmp ne i64 %and314, 0, !dbg !13507
  %71 = zext i1 %tobool315 to i64, !dbg !13507
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !13507
  br label %cond.end, !dbg !13507

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !13507
  br label %cond.end317, !dbg !13507

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !13507
  br label %cond.end319, !dbg !13507

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !13507
  br label %cond.end321, !dbg !13507

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !13507
  br label %cond.end323, !dbg !13507

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !13507
  br label %cond.end325, !dbg !13507

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !13507
  br label %cond.end327, !dbg !13507

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !13507
  br label %cond.end329, !dbg !13507

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !13507
  br label %cond.end331, !dbg !13507

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !13507
  br label %cond.end333, !dbg !13507

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !13507
  br label %cond.end335, !dbg !13507

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !13507
  br label %cond.end337, !dbg !13507

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !13507
  br label %cond.end339, !dbg !13507

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !13507
  br label %cond.end341, !dbg !13507

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !13507
  br label %cond.end343, !dbg !13507

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !13507
  br label %cond.end345, !dbg !13507

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !13507
  br label %cond.end347, !dbg !13507

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !13507
  br label %cond.end349, !dbg !13507

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !13507
  br label %cond.end351, !dbg !13507

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !13507
  br label %cond.end353, !dbg !13507

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !13507
  br label %cond.end355, !dbg !13507

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !13507
  br label %cond.end357, !dbg !13507

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !13507
  br label %cond.end359, !dbg !13507

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !13507
  br label %cond.end361, !dbg !13507

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !13507
  br label %cond.end363, !dbg !13507

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !13507
  br label %cond.end365, !dbg !13507

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !13507
  br label %cond.end367, !dbg !13507

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !13507
  br label %cond.end369, !dbg !13507

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !13507
  br label %cond.end371, !dbg !13507

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !13507
  br label %cond.end373, !dbg !13507

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !13507
  br label %cond.end375, !dbg !13507

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !13507
  br label %cond.end377, !dbg !13507

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !13507
  br label %cond.end379, !dbg !13507

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !13507
  br label %cond.end381, !dbg !13507

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !13507
  br label %cond.end383, !dbg !13507

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !13507
  br label %cond.end385, !dbg !13507

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !13507
  br label %cond.end387, !dbg !13507

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !13507
  br label %cond.end389, !dbg !13507

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !13507
  br label %cond.end391, !dbg !13507

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !13507
  br label %cond.end393, !dbg !13507

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !13507
  br label %cond.end395, !dbg !13507

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !13507
  br label %cond.end397, !dbg !13507

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !13507
  br label %cond.end399, !dbg !13507

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !13507
  br label %cond.end401, !dbg !13507

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !13507
  br label %cond.end403, !dbg !13507

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !13507
  br label %cond.end405, !dbg !13507

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !13507
  br label %cond.end407, !dbg !13507

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !13507
  br label %cond.end409, !dbg !13507

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !13507
  br label %cond.end411, !dbg !13507

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !13507
  br label %cond.end413, !dbg !13507

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !13507
  br label %cond.end415, !dbg !13507

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !13507
  br label %cond.end417, !dbg !13507

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !13507
  br label %cond.end419, !dbg !13507

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !13507
  br label %cond.end421, !dbg !13507

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !13507
  br label %cond.end423, !dbg !13507

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !13507
  br label %cond.end425, !dbg !13507

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !13507
  br label %cond.end427, !dbg !13507

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !13507
  br label %cond.end429, !dbg !13507

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !13507
  br label %cond.end431, !dbg !13507

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !13507
  br label %cond.end433, !dbg !13507

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !13507
  br label %cond.end435, !dbg !13507

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !13507
  br label %cond.end437, !dbg !13507

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !13507
  br label %cond.end440, !dbg !13507

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !13507

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !13507
  br label %cond.end444, !dbg !13507

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !13507
  %sub443 = sub i64 %72, 1, !dbg !13507
  %call = call i32 @__ilog2_u64(i64 %sub443) #12, !dbg !13507
  br label %cond.end444, !dbg !13507

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !13507
  %sub446 = sub i32 %cond445, 12, !dbg !13508
  %add = add i32 %sub446, 1, !dbg !13509
  store i32 %add, i32* %retval, align 4, !dbg !13510
  br label %return, !dbg !13510

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !13511
  %dec = add i64 %73, -1, !dbg !13511
  store i64 %dec, i64* %size.addr, align 8, !dbg !13511
  %74 = load i64, i64* %size.addr, align 8, !dbg !13512
  %shr = lshr i64 %74, 12, !dbg !13512
  store i64 %shr, i64* %size.addr, align 8, !dbg !13512
  %75 = load i64, i64* %size.addr, align 8, !dbg !13513
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13490
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !13514
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !13515
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !13514, !srcloc !13516
  store i32 %78, i32* %bitpos.i, align 4, !dbg !13514
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !13517
  %add.i = add i32 %79, 1, !dbg !13518
  store i32 %add.i, i32* %retval, align 4, !dbg !13519
  br label %return, !dbg !13519

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !13520
  ret i32 %80, !dbg !13520
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #9 !dbg !13521 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13483, metadata !DIExpression()), !dbg !13525
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13489, metadata !DIExpression()), !dbg !13527
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13528, metadata !DIExpression()), !dbg !13529
  %0 = load i64, i64* %n.addr, align 8, !dbg !13530
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13527
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !13531
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !13532
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !13531, !srcloc !13516
  store i32 %3, i32* %bitpos.i, align 4, !dbg !13531
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !13533
  %add.i = add i32 %4, 1, !dbg !13534
  %sub = sub i32 %add.i, 1, !dbg !13535
  ret i32 %sub, !dbg !13536
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !13537 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !13541, metadata !DIExpression()), !dbg !13542
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !13543, metadata !DIExpression()), !dbg !13544
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13545, metadata !DIExpression()), !dbg !13546
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13547, metadata !DIExpression()), !dbg !13548
  %0 = load i8*, i8** %object.addr, align 8, !dbg !13549
  ret i8* %0, !dbg !13550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !13551 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !13554, metadata !DIExpression()), !dbg !13555
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13556, metadata !DIExpression()), !dbg !13558
  %0 = load i64, i64* %__edi, align 8, !dbg !13558
  store i64 %0, i64* %__edi, align 8, !dbg !13558
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13559, metadata !DIExpression()), !dbg !13558
  %1 = load i64, i64* %__esi, align 8, !dbg !13558
  store i64 %1, i64* %__esi, align 8, !dbg !13558
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13560, metadata !DIExpression()), !dbg !13558
  %2 = load i64, i64* %__edx, align 8, !dbg !13558
  store i64 %2, i64* %__edx, align 8, !dbg !13558
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13561, metadata !DIExpression()), !dbg !13558
  %3 = load i64, i64* %__ecx, align 8, !dbg !13558
  store i64 %3, i64* %__ecx, align 8, !dbg !13558
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13562, metadata !DIExpression()), !dbg !13558
  %4 = load i64, i64* %__eax, align 8, !dbg !13558
  store i64 %4, i64* %__eax, align 8, !dbg !13558
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !13558
  %6 = call i64 @llvm.read_register.i64(metadata !5522), !dbg !13558
  %7 = load i64, i64* %f.addr, align 8, !dbg !13558
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !13558, !srcloc !13563
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !13558
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !13558
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13558
  call void @llvm.write_register.i64(metadata !5522, i64 %asmresult1), !dbg !13558
  ret void, !dbg !13564
}

; Function Attrs: noredzone
declare dso_local void @scsi_rescan_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @kobject_uevent_env(%struct.kobject*, i32, i8**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13565 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13568, metadata !DIExpression()), !dbg !13569
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13570, metadata !DIExpression()), !dbg !13571
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13572, metadata !DIExpression()), !dbg !13573
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13574
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13576
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13577
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #10, !dbg !13578
  br i1 %call, label %if.end, label %if.then, !dbg !13579

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !13580

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13581
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13582
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !13583
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !13584
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13585
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13586
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !13587
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !13588
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13589
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13590
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !13591
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !13592
  br label %do.body, !dbg !13593

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !13594

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !13596

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !13594

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13598
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13598
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !13598
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !13598
  br label %do.end7, !dbg !13598

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !13594

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !13600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13601 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13604, metadata !DIExpression()), !dbg !13605
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13606, metadata !DIExpression()), !dbg !13607
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13608, metadata !DIExpression()), !dbg !13609
  ret i1 true, !dbg !13610
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !13611 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !13614, metadata !DIExpression()), !dbg !13615
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13616, metadata !DIExpression()), !dbg !13617
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !13618
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13619
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #10, !dbg !13620
  ret i1 %call, !dbg !13621
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_internal_device_block(%struct.scsi_device* %sdev) #0 !dbg !13622 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %q = alloca %struct.request_queue*, align 8
  %err = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !13623, metadata !DIExpression()), !dbg !13624
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !13625, metadata !DIExpression()), !dbg !13626
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13627
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 1, !dbg !13628
  %1 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !13628
  store %struct.request_queue* %1, %struct.request_queue** %q, align 8, !dbg !13626
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13629, metadata !DIExpression()), !dbg !13630
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13631
  %state_mutex = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 59, !dbg !13632
  call void @mutex_lock(%struct.mutex* %state_mutex) #10, !dbg !13633
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13634
  %call = call i32 @scsi_internal_device_block_nowait(%struct.scsi_device* %3) #10, !dbg !13635
  store i32 %call, i32* %err, align 4, !dbg !13636
  %4 = load i32, i32* %err, align 4, !dbg !13637
  %cmp = icmp eq i32 %4, 0, !dbg !13639
  br i1 %cmp, label %if.then, label %if.end, !dbg !13640

if.then:                                          ; preds = %entry
  %5 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !13641
  call void @blk_mq_quiesce_queue(%struct.request_queue* %5) #10, !dbg !13642
  br label %if.end, !dbg !13642

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !13643
  %state_mutex1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 59, !dbg !13644
  call void @mutex_unlock(%struct.mutex* %state_mutex1) #10, !dbg !13645
  %7 = load i32, i32* %err, align 4, !dbg !13646
  ret i32 %7, !dbg !13647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !13648 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13651, metadata !DIExpression()), !dbg !13652
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13653
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13655
  %1 = load i8*, i8** %init_name, align 8, !dbg !13655
  %tobool = icmp ne i8* %1, null, !dbg !13653
  br i1 %tobool, label %if.then, label %if.end, !dbg !13656

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13657
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !13658
  %3 = load i8*, i8** %init_name1, align 8, !dbg !13658
  store i8* %3, i8** %retval, align 8, !dbg !13659
  br label %return, !dbg !13659

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13660
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !13661
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #10, !dbg !13662
  store i8* %call, i8** %retval, align 8, !dbg !13663
  br label %return, !dbg !13663

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !13664
  ret i8* %5, !dbg !13664
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_quiesce_queue(%struct.request_queue*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !13665 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !13670, metadata !DIExpression()), !dbg !13671
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !13672
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !13673
  %1 = load i8*, i8** %name, align 8, !dbg !13673
  ret i8* %1, !dbg !13674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pagefault_disable() #0 !dbg !13675 {
entry:
  %pscr_ret__.i.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i.i, metadata !9288, metadata !DIExpression()), !dbg !13676
  %__vpp_verify.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i.i, metadata !9297, metadata !DIExpression()), !dbg !13680
  %pfo_val__.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i.i, metadata !9300, metadata !DIExpression()), !dbg !13681
  %tmp.i.i = alloca %struct.task_struct*, align 8
  %tmp1.i.i = alloca %struct.task_struct*, align 8
  store i8* null, i8** %__vpp_verify.i.i, align 8, !dbg !13680
  %0 = load i8*, i8** %__vpp_verify.i.i, align 8, !dbg !13680
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !13681, !srcloc !9323
  store i64 %1, i64* %pfo_val__.i.i, align 8, !dbg !13681
  %2 = load i64, i64* %pfo_val__.i.i, align 8, !dbg !13681
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !13681
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i.i, align 8, !dbg !13681
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i.i, align 8, !dbg !13681
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !13676
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !13676
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i.i, align 8, !dbg !13676
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i.i, align 8, !dbg !13676
  %pagefault_disabled.i = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 123, !dbg !13682
  %7 = load i32, i32* %pagefault_disabled.i, align 8, !dbg !13683
  %inc.i = add i32 %7, 1, !dbg !13683
  store i32 %inc.i, i32* %pagefault_disabled.i, align 8, !dbg !13683
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13684, !srcloc !13685
  ret void, !dbg !13686
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_lock() #0 !dbg !13687 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13688, !srcloc !13689
  ret void, !dbg !13690
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_unlock() #0 !dbg !13691 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13692, !srcloc !13693
  br label %do.body, !dbg !13694

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13695

do.end:                                           ; preds = %do.body
  ret void, !dbg !13697
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #5

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #9 !dbg !13698 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !13701, metadata !DIExpression()), !dbg !13702
  %0 = load i16, i16* %val.addr, align 2, !dbg !13703
  %conv = zext i16 %0 to i32, !dbg !13703
  %and = and i32 %conv, 255, !dbg !13703
  %shl = shl i32 %and, 8, !dbg !13703
  %1 = load i16, i16* %val.addr, align 2, !dbg !13703
  %conv1 = zext i16 %1 to i32, !dbg !13703
  %and2 = and i32 %conv1, 65280, !dbg !13703
  %shr = ashr i32 %and2, 8, !dbg !13703
  %or = or i32 %shl, %shr, !dbg !13703
  %conv3 = trunc i32 %or to i16, !dbg !13703
  ret i16 %conv3, !dbg !13704
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind willreturn }
attributes #9 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone }
attributes #11 = { noredzone nounwind }
attributes #12 = { noredzone nounwind readnone }
attributes #13 = { nounwind readnone }
attributes #14 = { cold noredzone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5522}
!llvm.module.flags = !{!5523, !5524, !5525, !5526}
!llvm.ident = !{!5527}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "scsi_sense_cache_mutex", scope: !2, file: !3, line: 57, type: !328, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5442, globals: !5501, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/scsi/scsi_lib.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !20, !28, !34, !40, !46, !53, !61, !67, !73, !80, !84, !96, !101, !108, !115, !121, !127, !135, !146, !153, !163, !168, !189, !195, !228, !244, !257, !264, !5379, !5401, !5410, !5419, !5425, !5432}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !12, line: 296, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17, !18, !19}
!14 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !21, line: 9, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!27 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !29, line: 54, baseType: !7, size: 32, elements: !30)
!29 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!30 = !{!31, !32, !33}
!31 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!32 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !35, line: 26, baseType: !7, size: 32, elements: !36)
!35 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!36 = !{!37, !38, !39}
!37 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!38 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !41, line: 44, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44, !45}
!43 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !47, line: 343, baseType: !7, size: 32, elements: !48)
!47 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!48 = !{!49, !50, !51, !52}
!49 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!50 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!52 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !54, line: 524, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58, !59, !60}
!56 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!60 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !54, line: 502, baseType: !7, size: 32, elements: !62)
!62 = !{!63, !64, !65, !66}
!63 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !68, line: 118, baseType: !7, size: 32, elements: !69)
!68 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!69 = !{!70, !71, !72}
!70 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !74, line: 19, baseType: !7, size: 32, elements: !75)
!74 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !68, line: 293, baseType: !7, size: 32, elements: !81)
!81 = !{!82, !83}
!82 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !85, line: 49, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!86 = !{!87, !88, !89, !90, !91, !92, !93, !94, !95}
!87 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!91 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!92 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!93 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!94 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!95 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !68, line: 315, baseType: !7, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !102, line: 15, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106, !107}
!104 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !109, line: 59, baseType: !7, size: 32, elements: !110)
!109 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!110 = !{!111, !112, !113, !114}
!111 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!114 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !116, line: 546, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!117 = !{!118, !119, !120}
!118 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !122, line: 16, baseType: !7, size: 32, elements: !123)
!122 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!123 = !{!124, !125, !126}
!124 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!126 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !128, line: 276, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133, !134}
!130 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !128, line: 36, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145}
!137 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!140 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!142 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!143 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!144 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!145 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !147, line: 5, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150, !151, !152}
!149 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !154, line: 514, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!155 = !{!156, !157, !158, !159, !160, !161, !162}
!156 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!162 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !164, line: 10, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!165 = !{!166, !167}
!166 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "req_opf", file: !169, line: 336, baseType: !7, size: 32, elements: !170)
!169 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!170 = !{!171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!171 = !DIEnumerator(name: "REQ_OP_READ", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "REQ_OP_WRITE", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "REQ_OP_FLUSH", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "REQ_OP_DISCARD", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "REQ_OP_SECURE_ERASE", value: 5, isUnsigned: true)
!176 = !DIEnumerator(name: "REQ_OP_WRITE_SAME", value: 7, isUnsigned: true)
!177 = !DIEnumerator(name: "REQ_OP_WRITE_ZEROES", value: 9, isUnsigned: true)
!178 = !DIEnumerator(name: "REQ_OP_ZONE_OPEN", value: 10, isUnsigned: true)
!179 = !DIEnumerator(name: "REQ_OP_ZONE_CLOSE", value: 11, isUnsigned: true)
!180 = !DIEnumerator(name: "REQ_OP_ZONE_FINISH", value: 12, isUnsigned: true)
!181 = !DIEnumerator(name: "REQ_OP_ZONE_APPEND", value: 13, isUnsigned: true)
!182 = !DIEnumerator(name: "REQ_OP_ZONE_RESET", value: 15, isUnsigned: true)
!183 = !DIEnumerator(name: "REQ_OP_ZONE_RESET_ALL", value: 17, isUnsigned: true)
!184 = !DIEnumerator(name: "REQ_OP_SCSI_IN", value: 32, isUnsigned: true)
!185 = !DIEnumerator(name: "REQ_OP_SCSI_OUT", value: 33, isUnsigned: true)
!186 = !DIEnumerator(name: "REQ_OP_DRV_IN", value: 34, isUnsigned: true)
!187 = !DIEnumerator(name: "REQ_OP_DRV_OUT", value: 35, isUnsigned: true)
!188 = !DIEnumerator(name: "REQ_OP_LAST", value: 36, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !190, line: 444, baseType: !7, size: 32, elements: !191)
!190 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!191 = !{!192, !193, !194}
!192 = !DIEnumerator(name: "BLK_MQ_REQ_NOWAIT", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "BLK_MQ_REQ_RESERVED", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "BLK_MQ_REQ_PREEMPT", value: 8, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !196, line: 30, baseType: !197, size: 64, elements: !198)
!196 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!197 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!198 = !{!199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227}
!199 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!200 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!201 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!202 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!203 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!204 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!205 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!206 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!207 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!208 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!209 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!210 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!211 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!212 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!213 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!214 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!215 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!216 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!217 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!218 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!219 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!220 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!221 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!222 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!223 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!224 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!225 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!226 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!227 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!228 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !190, line: 391, baseType: !7, size: 32, elements: !229)
!229 = !{!230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243}
!230 = !DIEnumerator(name: "BLK_MQ_F_SHOULD_MERGE", value: 1, isUnsigned: true)
!231 = !DIEnumerator(name: "BLK_MQ_F_TAG_QUEUE_SHARED", value: 2, isUnsigned: true)
!232 = !DIEnumerator(name: "BLK_MQ_F_STACKING", value: 4, isUnsigned: true)
!233 = !DIEnumerator(name: "BLK_MQ_F_TAG_HCTX_SHARED", value: 8, isUnsigned: true)
!234 = !DIEnumerator(name: "BLK_MQ_F_BLOCKING", value: 32, isUnsigned: true)
!235 = !DIEnumerator(name: "BLK_MQ_F_NO_SCHED", value: 64, isUnsigned: true)
!236 = !DIEnumerator(name: "BLK_MQ_F_ALLOC_POLICY_START_BIT", value: 8, isUnsigned: true)
!237 = !DIEnumerator(name: "BLK_MQ_F_ALLOC_POLICY_BITS", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "BLK_MQ_S_STOPPED", value: 0, isUnsigned: true)
!239 = !DIEnumerator(name: "BLK_MQ_S_TAG_ACTIVE", value: 1, isUnsigned: true)
!240 = !DIEnumerator(name: "BLK_MQ_S_SCHED_RESTART", value: 2, isUnsigned: true)
!241 = !DIEnumerator(name: "BLK_MQ_S_INACTIVE", value: 3, isUnsigned: true)
!242 = !DIEnumerator(name: "BLK_MQ_MAX_DEPTH", value: 10240, isUnsigned: true)
!243 = !DIEnumerator(name: "BLK_MQ_CPU_WORK_BATCH", value: 8, isUnsigned: true)
!244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_event", file: !128, line: 64, baseType: !7, size: 32, elements: !245)
!245 = !{!246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256}
!246 = !DIEnumerator(name: "SDEV_EVT_MEDIA_CHANGE", value: 1, isUnsigned: true)
!247 = !DIEnumerator(name: "SDEV_EVT_INQUIRY_CHANGE_REPORTED", value: 2, isUnsigned: true)
!248 = !DIEnumerator(name: "SDEV_EVT_CAPACITY_CHANGE_REPORTED", value: 3, isUnsigned: true)
!249 = !DIEnumerator(name: "SDEV_EVT_SOFT_THRESHOLD_REACHED_REPORTED", value: 4, isUnsigned: true)
!250 = !DIEnumerator(name: "SDEV_EVT_MODE_PARAMETER_CHANGE_REPORTED", value: 5, isUnsigned: true)
!251 = !DIEnumerator(name: "SDEV_EVT_LUN_CHANGE_REPORTED", value: 6, isUnsigned: true)
!252 = !DIEnumerator(name: "SDEV_EVT_ALUA_STATE_CHANGE_REPORTED", value: 7, isUnsigned: true)
!253 = !DIEnumerator(name: "SDEV_EVT_POWER_ON_RESET_OCCURRED", value: 8, isUnsigned: true)
!254 = !DIEnumerator(name: "SDEV_EVT_FIRST", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "SDEV_EVT_LAST", value: 8, isUnsigned: true)
!256 = !DIEnumerator(name: "SDEV_EVT_MAXBITS", value: 9, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !258, line: 63, baseType: !7, size: 32, elements: !259)
!258 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!259 = !{!260, !261, !262, !263}
!260 = !DIEnumerator(name: "__PERCPU_REF_ATOMIC", value: 1, isUnsigned: true)
!261 = !DIEnumerator(name: "__PERCPU_REF_DEAD", value: 2, isUnsigned: true)
!262 = !DIEnumerator(name: "__PERCPU_REF_ATOMIC_DEAD", value: 3, isUnsigned: true)
!263 = !DIEnumerator(name: "__PERCPU_REF_FLAG_BITS", value: 2, isUnsigned: true)
!264 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !265, file: !3, line: 681, baseType: !7, size: 32, elements: !5374)
!265 = distinct !DISubprogram(name: "scsi_io_completion_action", scope: !3, file: !3, line: 676, type: !266, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!266 = !DISubroutineType(types: !267)
!267 = !{null, !268, !286}
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !270, line: 68, size: 3136, elements: !271)
!270 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!271 = !{!272, !292, !5312, !5313, !5314, !5315, !5316, !5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5344, !5346, !5347, !5348, !5349, !5350, !5354, !5368, !5369, !5370, !5371, !5372, !5373}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !269, file: !270, line: 69, baseType: !273, size: 448)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !274, line: 9, size: 448, elements: !275)
!274 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!275 = !{!276, !281, !283, !285, !287, !288, !289, !290}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !273, file: !274, line: 10, baseType: !277, size: 128)
!277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 128, elements: !279)
!278 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!279 = !{!280}
!280 = !DISubrange(count: 16)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !273, file: !274, line: 11, baseType: !282, size: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !273, file: !274, line: 12, baseType: !284, size: 16, offset: 192)
!284 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !273, file: !274, line: 13, baseType: !286, size: 32, offset: 224)
!286 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !273, file: !274, line: 14, baseType: !7, size: 32, offset: 256)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !273, file: !274, line: 15, baseType: !7, size: 32, offset: 288)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !273, file: !274, line: 16, baseType: !286, size: 32, offset: 320)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !273, file: !274, line: 17, baseType: !291, size: 64, offset: 384)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !269, file: !270, line: 70, baseType: !293, size: 64, offset: 448)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !128, line: 101, size: 15232, align: 64, elements: !295)
!295 = !{!296, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179, !5180, !5181, !5189, !5190, !5191, !5192, !5193, !5194, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5205, !5206, !5207, !5208, !5209, !5210, !5211, !5212, !5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220, !5221, !5222, !5223, !5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235, !5236, !5237, !5238, !5239, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5260, !5261, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5311}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !294, file: !128, line: 102, baseType: !297, size: 64)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !154, line: 524, size: 16256, elements: !299)
!299 = !{!300, !307, !308, !309, !325, !327, !345, !346, !4884, !4885, !4886, !5045, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5135, !5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5149, !5150}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !298, file: !154, line: 533, baseType: !301, size: 128)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !302, line: 178, size: 128, elements: !303)
!302 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!303 = !{!304, !306}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !301, file: !302, line: 179, baseType: !305, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !301, file: !302, line: 179, baseType: !305, size: 64, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !298, file: !154, line: 534, baseType: !301, size: 128, offset: 128)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !298, file: !154, line: 536, baseType: !301, size: 128, offset: 256)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !298, file: !154, line: 538, baseType: !310, offset: 384)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !311, line: 83, baseType: !312)
!311 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !311, line: 71, elements: !313)
!313 = !{!314}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !311, line: 72, baseType: !315)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !311, line: 72, elements: !316)
!316 = !{!317}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !315, file: !311, line: 73, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !311, line: 20, elements: !319)
!319 = !{!320}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !318, file: !311, line: 21, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !322, line: 25, baseType: !323)
!322 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !322, line: 25, elements: !324)
!324 = !{}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !298, file: !154, line: 539, baseType: !326, size: 64, offset: 384)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !298, file: !154, line: 541, baseType: !328, size: 192, offset: 448)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !329, line: 53, size: 192, elements: !330)
!329 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!330 = !{!331, !343, !344}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !328, file: !329, line: 54, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !333, line: 13, baseType: !334)
!333 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !302, line: 175, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !302, line: 173, size: 64, elements: !336)
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !335, file: !302, line: 174, baseType: !338, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !339, line: 22, baseType: !340)
!339 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !341, line: 30, baseType: !342)
!341 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!342 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !328, file: !329, line: 55, baseType: !310, offset: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !328, file: !329, line: 59, baseType: !301, size: 128, offset: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !298, file: !154, line: 543, baseType: !301, size: 128, offset: 640)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !298, file: !154, line: 544, baseType: !347, size: 64, offset: 768)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !349, line: 640, size: 48640, elements: !350)
!349 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!350 = !{!351, !360, !362, !363, !373, !374, !375, !376, !377, !378, !379, !380, !384, !412, !423, !522, !523, !524, !535, !536, !538, !539, !4218, !4219, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4296, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4311, !4312, !4313, !4315, !4316, !4317, !4318, !4319, !4320, !4326, !4327, !4328, !4329, !4330, !4331, !4332, !4344, !4349, !4350, !4351, !4352, !4353, !4355, !4358, !4361, !4364, !4367, !4370, !4471, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4517, !4518, !4519, !4520, !4521, !4526, !4527, !4528, !4531, !4532, !4534, !4543, !4546, !4547, !4548, !4551, !4552, !4631, !4632, !4635, !4636, !4639, !4640, !4641, !4645, !4646, !4647, !4660, !4661, !4662, !4672, !4677, !4678, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !348, file: !349, line: 646, baseType: !352, size: 128)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !353, line: 56, size: 128, elements: !354)
!353 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!354 = !{!355, !357}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !352, file: !353, line: 57, baseType: !356, size: 64)
!356 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !352, file: !353, line: 58, baseType: !358, size: 32, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !339, line: 21, baseType: !359)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !341, line: 27, baseType: !7)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !348, file: !349, line: 649, baseType: !361, size: 64, offset: 128)
!361 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !197)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !348, file: !349, line: 657, baseType: !291, size: 64, offset: 192)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !348, file: !349, line: 658, baseType: !364, size: 32, offset: 256)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !365, line: 113, baseType: !366)
!365 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !365, line: 111, size: 32, elements: !367)
!367 = !{!368}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !366, file: !365, line: 112, baseType: !369, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !302, line: 168, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !302, line: 166, size: 32, elements: !371)
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !370, file: !302, line: 167, baseType: !286, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !348, file: !349, line: 660, baseType: !7, size: 32, offset: 288)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !348, file: !349, line: 661, baseType: !7, size: 32, offset: 320)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !348, file: !349, line: 684, baseType: !286, size: 32, offset: 352)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !348, file: !349, line: 686, baseType: !286, size: 32, offset: 384)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !348, file: !349, line: 687, baseType: !286, size: 32, offset: 416)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !348, file: !349, line: 688, baseType: !286, size: 32, offset: 448)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !348, file: !349, line: 689, baseType: !7, size: 32, offset: 480)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !348, file: !349, line: 691, baseType: !381, size: 64, offset: 512)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !349, line: 691, flags: DIFlagFwdDecl)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !348, file: !349, line: 692, baseType: !385, size: 832, offset: 576)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !349, line: 451, size: 832, elements: !386)
!386 = !{!387, !392, !400, !401, !402, !406, !407, !408, !409, !410}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !385, file: !349, line: 453, baseType: !388, size: 128)
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !349, line: 325, size: 128, elements: !389)
!389 = !{!390, !391}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !388, file: !349, line: 326, baseType: !356, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !388, file: !349, line: 327, baseType: !358, size: 32, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !385, file: !349, line: 454, baseType: !393, size: 192, align: 64, offset: 128)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !394, line: 24, size: 192, align: 64, elements: !395)
!394 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!395 = !{!396, !397, !399}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !393, file: !394, line: 25, baseType: !356, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !393, file: !394, line: 26, baseType: !398, size: 64, offset: 64)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !393, file: !394, line: 27, baseType: !398, size: 64, offset: 128)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !385, file: !349, line: 455, baseType: !301, size: 128, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !385, file: !349, line: 456, baseType: !7, size: 32, offset: 448)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !385, file: !349, line: 458, baseType: !403, size: 64, offset: 512)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !339, line: 23, baseType: !404)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !341, line: 31, baseType: !405)
!405 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !385, file: !349, line: 459, baseType: !403, size: 64, offset: 576)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !385, file: !349, line: 460, baseType: !403, size: 64, offset: 640)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !385, file: !349, line: 461, baseType: !403, size: 64, offset: 704)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !385, file: !349, line: 463, baseType: !403, size: 64, offset: 768)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !385, file: !349, line: 465, baseType: !411, offset: 832)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !349, line: 415, elements: !324)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !348, file: !349, line: 693, baseType: !413, size: 384, offset: 1408)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !349, line: 489, size: 384, elements: !414)
!414 = !{!415, !416, !417, !418, !419, !420, !421}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !413, file: !349, line: 490, baseType: !301, size: 128)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !413, file: !349, line: 491, baseType: !356, size: 64, offset: 128)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !413, file: !349, line: 492, baseType: !356, size: 64, offset: 192)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !413, file: !349, line: 493, baseType: !7, size: 32, offset: 256)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !413, file: !349, line: 494, baseType: !284, size: 16, offset: 288)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !413, file: !349, line: 495, baseType: !284, size: 16, offset: 304)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !413, file: !349, line: 497, baseType: !422, size: 64, offset: 320)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !348, file: !349, line: 697, baseType: !424, size: 1792, offset: 1792)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !349, line: 507, size: 1792, elements: !425)
!425 = !{!426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !519, !520}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !424, file: !349, line: 508, baseType: !393, size: 192, align: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !424, file: !349, line: 515, baseType: !403, size: 64, offset: 192)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !424, file: !349, line: 516, baseType: !403, size: 64, offset: 256)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !424, file: !349, line: 517, baseType: !403, size: 64, offset: 320)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !424, file: !349, line: 518, baseType: !403, size: 64, offset: 384)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !424, file: !349, line: 519, baseType: !403, size: 64, offset: 448)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !424, file: !349, line: 526, baseType: !338, size: 64, offset: 512)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !424, file: !349, line: 527, baseType: !403, size: 64, offset: 576)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !424, file: !349, line: 528, baseType: !7, size: 32, offset: 640)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !424, file: !349, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !424, file: !349, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !424, file: !349, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !424, file: !349, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !424, file: !349, line: 563, baseType: !440, size: 512, offset: 704)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !441)
!441 = !{!442, !450, !451, !456, !513, !516, !517, !518}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !440, file: !6, line: 119, baseType: !443, size: 256)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !444, line: 9, size: 256, elements: !445)
!444 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!445 = !{!446, !447}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !443, file: !444, line: 10, baseType: !393, size: 192, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !443, file: !444, line: 11, baseType: !448, size: 64, offset: 192)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !449, line: 29, baseType: !338)
!449 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!450 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !440, file: !6, line: 120, baseType: !448, size: 64, offset: 256)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !440, file: !6, line: 121, baseType: !452, size: 64, offset: 320)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DISubroutineType(types: !454)
!454 = !{!5, !455}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !440, file: !6, line: 122, baseType: !457, size: 64, offset: 384)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !459)
!459 = !{!460, !481, !482, !486, !496, !497, !508, !512}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !458, file: !6, line: 160, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !463)
!463 = !{!464, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !462, file: !6, line: 215, baseType: !465)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !311, line: 29, baseType: !318)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !462, file: !6, line: 216, baseType: !7, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !462, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !462, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !462, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !462, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !462, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !462, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !462, file: !6, line: 233, baseType: !448, size: 64, offset: 128)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !462, file: !6, line: 234, baseType: !455, size: 64, offset: 192)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !462, file: !6, line: 235, baseType: !448, size: 64, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !462, file: !6, line: 236, baseType: !455, size: 64, offset: 320)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !462, file: !6, line: 237, baseType: !478, size: 4096, offset: 512)
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !458, size: 4096, elements: !479)
!479 = !{!480}
!480 = !DISubrange(count: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !458, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !458, file: !6, line: 162, baseType: !483, size: 32, offset: 96)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !302, line: 27, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !485, line: 96, baseType: !286)
!485 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!486 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !458, file: !6, line: 163, baseType: !487, size: 32, offset: 128)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !488, line: 276, baseType: !489)
!488 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !488, line: 276, size: 32, elements: !490)
!490 = !{!491}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !489, file: !488, line: 276, baseType: !492, size: 32)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !488, line: 70, baseType: !493)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !488, line: 65, size: 32, elements: !494)
!494 = !{!495}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !493, file: !488, line: 66, baseType: !7, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !458, file: !6, line: 164, baseType: !455, size: 64, offset: 192)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !458, file: !6, line: 165, baseType: !498, size: 128, offset: 256)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !444, line: 14, size: 128, elements: !499)
!499 = !{!500}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !498, file: !444, line: 15, baseType: !501, size: 128)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !394, line: 125, size: 128, elements: !502)
!502 = !{!503, !507}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !501, file: !394, line: 126, baseType: !504, size: 64)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !394, line: 31, size: 64, elements: !505)
!505 = !{!506}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !504, file: !394, line: 32, baseType: !398, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !501, file: !394, line: 127, baseType: !398, size: 64, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !458, file: !6, line: 166, baseType: !509, size: 64, offset: 384)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DISubroutineType(types: !511)
!511 = !{!448}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !458, file: !6, line: 167, baseType: !448, size: 64, offset: 448)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !440, file: !6, line: 123, baseType: !514, size: 8, offset: 448)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !339, line: 17, baseType: !515)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !341, line: 21, baseType: !278)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !440, file: !6, line: 124, baseType: !514, size: 8, offset: 456)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !440, file: !6, line: 125, baseType: !514, size: 8, offset: 464)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !440, file: !6, line: 126, baseType: !514, size: 8, offset: 472)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !424, file: !349, line: 572, baseType: !440, size: 512, offset: 1216)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !424, file: !349, line: 580, baseType: !521, size: 64, offset: 1728)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !348, file: !349, line: 721, baseType: !7, size: 32, offset: 3584)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !348, file: !349, line: 722, baseType: !286, size: 32, offset: 3616)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !348, file: !349, line: 723, baseType: !525, size: 64, offset: 3648)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !527)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !528, line: 17, baseType: !529)
!528 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !528, line: 17, size: 64, elements: !530)
!530 = !{!531}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !529, file: !528, line: 17, baseType: !532, size: 64)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 64, elements: !533)
!533 = !{!534}
!534 = !DISubrange(count: 1)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !348, file: !349, line: 724, baseType: !527, size: 64, offset: 3712)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !348, file: !349, line: 749, baseType: !537, offset: 3776)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !349, line: 290, elements: !324)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !348, file: !349, line: 751, baseType: !301, size: 128, offset: 3776)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !348, file: !349, line: 757, baseType: !540, size: 64, offset: 3904)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !542, line: 388, size: 7296, elements: !543)
!542 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!543 = !{!544, !4216}
!544 = !DIDerivedType(tag: DW_TAG_member, scope: !541, file: !542, line: 389, baseType: !545, size: 7296)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !541, file: !542, line: 389, size: 7296, elements: !546)
!546 = !{!547, !4107, !4108, !4109, !4110, !4111, !4112, !4113, !4114, !4121, !4122, !4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4155, !4161, !4164, !4187, !4188, !4200, !4201, !4204, !4205, !4206, !4209, !4210, !4211, !4214, !4215}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !545, file: !542, line: 390, baseType: !548, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !542, line: 305, size: 1472, elements: !550)
!550 = !{!551, !552, !553, !554, !555, !556, !557, !558, !566, !567, !572, !573, !576, !4101, !4102, !4103, !4104, !4105}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !549, file: !542, line: 308, baseType: !356, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !549, file: !542, line: 309, baseType: !356, size: 64, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !549, file: !542, line: 313, baseType: !548, size: 64, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !549, file: !542, line: 313, baseType: !548, size: 64, offset: 192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !549, file: !542, line: 315, baseType: !393, size: 192, align: 64, offset: 256)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !549, file: !542, line: 323, baseType: !356, size: 64, offset: 448)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !549, file: !542, line: 327, baseType: !540, size: 64, offset: 512)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !549, file: !542, line: 333, baseType: !559, size: 64, offset: 576)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !560, line: 284, baseType: !561)
!560 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !560, line: 284, size: 64, elements: !562)
!562 = !{!563}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !561, file: !560, line: 284, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !565, line: 19, baseType: !356)
!565 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!566 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !549, file: !542, line: 334, baseType: !356, size: 64, offset: 640)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !549, file: !542, line: 343, baseType: !568, size: 256, offset: 704)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !549, file: !542, line: 340, size: 256, elements: !569)
!569 = !{!570, !571}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !568, file: !542, line: 341, baseType: !393, size: 192, align: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !568, file: !542, line: 342, baseType: !356, size: 64, offset: 192)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !549, file: !542, line: 351, baseType: !301, size: 128, offset: 960)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !549, file: !542, line: 353, baseType: !574, size: 64, offset: 1088)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !542, line: 353, flags: DIFlagFwdDecl)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !549, file: !542, line: 356, baseType: !577, size: 64, offset: 1152)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !579)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !116, line: 557, size: 832, elements: !580)
!580 = !{!581, !585, !586, !590, !594, !4075, !4079, !4083, !4087, !4088, !4089, !4093, !4097}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !579, file: !116, line: 558, baseType: !582, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{null, !548}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !579, file: !116, line: 559, baseType: !582, size: 64, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !579, file: !116, line: 560, baseType: !587, size: 64, offset: 128)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DISubroutineType(types: !589)
!589 = !{!286, !548, !356}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !579, file: !116, line: 561, baseType: !591, size: 64, offset: 192)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DISubroutineType(types: !593)
!593 = !{!286, !548}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !579, file: !116, line: 562, baseType: !595, size: 64, offset: 256)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DISubroutineType(types: !597)
!597 = !{!598, !599}
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !542, line: 682, baseType: !7)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !116, line: 508, size: 768, elements: !601)
!601 = !{!602, !603, !604, !606, !607, !608, !615, !622, !628, !4070, !4071, !4073, !4074}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !600, file: !116, line: 509, baseType: !548, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !600, file: !116, line: 510, baseType: !7, size: 32, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !600, file: !116, line: 511, baseType: !605, size: 32, offset: 96)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !302, line: 148, baseType: !7)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !600, file: !116, line: 512, baseType: !356, size: 64, offset: 128)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !600, file: !116, line: 513, baseType: !356, size: 64, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !600, file: !116, line: 514, baseType: !609, size: 64, offset: 256)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !560, line: 385, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !560, line: 385, size: 64, elements: !612)
!612 = !{!613}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !611, file: !560, line: 385, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !565, line: 15, baseType: !356)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !600, file: !116, line: 516, baseType: !616, size: 64, offset: 320)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !560, line: 359, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !560, line: 359, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !618, file: !560, line: 359, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !565, line: 16, baseType: !356)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !600, file: !116, line: 519, baseType: !623, size: 64, offset: 384)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !565, line: 21, baseType: !624)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 21, size: 64, elements: !625)
!625 = !{!626}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !624, file: !565, line: 21, baseType: !627, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !565, line: 14, baseType: !356)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !600, file: !116, line: 521, baseType: !629, size: 64, offset: 448)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !542, line: 68, size: 512, align: 128, elements: !631)
!631 = !{!632, !633, !4062, !4069}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !630, file: !542, line: 69, baseType: !356, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !542, line: 77, baseType: !634, size: 320, offset: 64)
!634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !630, file: !542, line: 77, size: 320, elements: !635)
!635 = !{!636, !3955, !3960, !3986, !3994, !4000, !4013, !4061}
!636 = !DIDerivedType(tag: DW_TAG_member, scope: !634, file: !542, line: 78, baseType: !637, size: 320)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !634, file: !542, line: 78, size: 320, elements: !638)
!638 = !{!639, !640, !3953, !3954}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !637, file: !542, line: 84, baseType: !301, size: 128)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !637, file: !542, line: 86, baseType: !641, size: 64, offset: 128)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !12, line: 451, size: 1216, align: 64, elements: !643)
!643 = !{!644, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3948, !3949, !3950, !3951, !3952}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !642, file: !12, line: 452, baseType: !645, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !12, line: 610, size: 4224, elements: !647)
!647 = !{!648, !650, !651, !659, !666, !667, !3774, !3775, !3776, !3777, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3817, !3825, !3826, !3827, !3837, !3838, !3839, !3840}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !646, file: !12, line: 611, baseType: !649, size: 16)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !302, line: 19, baseType: !284)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !646, file: !12, line: 612, baseType: !284, size: 16, offset: 16)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !646, file: !12, line: 613, baseType: !652, size: 32, offset: 32)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !653, line: 23, baseType: !654)
!653 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !653, line: 21, size: 32, elements: !655)
!655 = !{!656}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !654, file: !653, line: 22, baseType: !657, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !302, line: 32, baseType: !658)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !485, line: 49, baseType: !7)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !646, file: !12, line: 614, baseType: !660, size: 32, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !653, line: 28, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !653, line: 26, size: 32, elements: !662)
!662 = !{!663}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !661, file: !653, line: 27, baseType: !664, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !302, line: 33, baseType: !665)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !485, line: 50, baseType: !7)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !646, file: !12, line: 615, baseType: !7, size: 32, offset: 96)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !646, file: !12, line: 622, baseType: !668, size: 64, offset: 128)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !670)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !12, line: 1864, size: 1536, align: 512, elements: !671)
!671 = !{!672, !3651, !3661, !3665, !3671, !3675, !3679, !3683, !3687, !3691, !3695, !3696, !3700, !3704, !3724, !3750, !3754, !3760, !3765, !3769, !3770}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !670, file: !12, line: 1865, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DISubroutineType(types: !675)
!675 = !{!676, !645, !676, !7}
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !678, line: 89, size: 1536, elements: !679)
!678 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!679 = !{!680, !681, !686, !694, !695, !710, !711, !715, !727, !801, !3635, !3636, !3637, !3643, !3644, !3645}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !677, file: !678, line: 91, baseType: !7, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !677, file: !678, line: 92, baseType: !682, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !488, line: 277, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !488, line: 277, size: 32, elements: !684)
!684 = !{!685}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !683, file: !488, line: 277, baseType: !492, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !677, file: !678, line: 93, baseType: !687, size: 128, offset: 64)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !688, line: 38, size: 128, elements: !689)
!688 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!689 = !{!690, !692}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !687, file: !688, line: 39, baseType: !691, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !687, file: !688, line: 39, baseType: !693, size: 64, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !677, file: !678, line: 94, baseType: !676, size: 64, offset: 192)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !677, file: !678, line: 95, baseType: !696, size: 128, offset: 256)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !678, line: 47, size: 128, elements: !697)
!697 = !{!698, !707}
!698 = !DIDerivedType(tag: DW_TAG_member, scope: !696, file: !678, line: 48, baseType: !699, size: 64)
!699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !696, file: !678, line: 48, size: 64, elements: !700)
!700 = !{!701, !706}
!701 = !DIDerivedType(tag: DW_TAG_member, scope: !699, file: !678, line: 49, baseType: !702, size: 64)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !699, file: !678, line: 49, size: 64, elements: !703)
!703 = !{!704, !705}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !702, file: !678, line: 50, baseType: !358, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !702, file: !678, line: 50, baseType: !358, size: 32, offset: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !699, file: !678, line: 52, baseType: !403, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !678, line: 54, baseType: !708, size: 64, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !677, file: !678, line: 96, baseType: !645, size: 64, offset: 384)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !677, file: !678, line: 98, baseType: !712, size: 256, offset: 448)
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 256, elements: !713)
!713 = !{!714}
!714 = !DISubrange(count: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !677, file: !678, line: 101, baseType: !716, size: 32, offset: 704)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !717, line: 25, size: 32, elements: !718)
!717 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!718 = !{!719}
!719 = !DIDerivedType(tag: DW_TAG_member, scope: !716, file: !717, line: 26, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !716, file: !717, line: 26, size: 32, elements: !721)
!721 = !{!722}
!722 = !DIDerivedType(tag: DW_TAG_member, scope: !720, file: !717, line: 30, baseType: !723, size: 32)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !720, file: !717, line: 30, size: 32, elements: !724)
!724 = !{!725, !726}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !723, file: !717, line: 31, baseType: !310)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !723, file: !717, line: 32, baseType: !286, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !677, file: !678, line: 102, baseType: !728, size: 64, offset: 768)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !678, line: 135, size: 1024, align: 512, elements: !731)
!731 = !{!732, !736, !737, !744, !753, !757, !761, !765, !766, !770, !775, !787, !795}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !730, file: !678, line: 136, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!286, !676, !7}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !730, file: !678, line: 137, baseType: !733, size: 64, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !730, file: !678, line: 138, baseType: !738, size: 64, offset: 128)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{!286, !741, !743}
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !677)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !730, file: !678, line: 139, baseType: !745, size: 64, offset: 192)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DISubroutineType(types: !747)
!747 = !{!286, !741, !7, !748, !751}
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !750)
!750 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !730, file: !678, line: 141, baseType: !754, size: 64, offset: 256)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DISubroutineType(types: !756)
!756 = !{!286, !741}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !730, file: !678, line: 142, baseType: !758, size: 64, offset: 320)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DISubroutineType(types: !760)
!760 = !{!286, !676}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !730, file: !678, line: 143, baseType: !762, size: 64, offset: 384)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{null, !676}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !730, file: !678, line: 144, baseType: !762, size: 64, offset: 448)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !730, file: !678, line: 145, baseType: !767, size: 64, offset: 512)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DISubroutineType(types: !769)
!769 = !{null, !676, !645}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !730, file: !678, line: 146, baseType: !771, size: 64, offset: 576)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DISubroutineType(types: !773)
!773 = !{!774, !676, !774, !286}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !730, file: !678, line: 147, baseType: !776, size: 64, offset: 640)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!779, !781}
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !678, line: 18, flags: DIFlagFwdDecl)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !783, line: 8, size: 128, elements: !784)
!783 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!784 = !{!785, !786}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !782, file: !783, line: 9, baseType: !779, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !782, file: !783, line: 10, baseType: !676, size: 64, offset: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !730, file: !678, line: 148, baseType: !788, size: 64, offset: 704)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{!286, !791, !793}
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !782)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !302, line: 30, baseType: !794)
!794 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !730, file: !678, line: 149, baseType: !796, size: 64, offset: 768)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!676, !676, !799}
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !646)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !677, file: !678, line: 103, baseType: !802, size: 64, offset: 832)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !12, line: 1416, size: 9472, elements: !804)
!804 = !{!805, !806, !809, !810, !811, !814, !865, !1544, !1626, !1709, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1725, !1729, !1730, !3494, !3495, !3498, !3499, !3500, !3541, !3567, !3568, !3569, !3570, !3571, !3572, !3575, !3576, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !803, file: !12, line: 1417, baseType: !301, size: 128)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !803, file: !12, line: 1418, baseType: !807, size: 32, offset: 128)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !302, line: 16, baseType: !808)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !302, line: 13, baseType: !358)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !803, file: !12, line: 1419, baseType: !278, size: 8, offset: 160)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !803, file: !12, line: 1420, baseType: !356, size: 64, offset: 192)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !803, file: !12, line: 1421, baseType: !812, size: 64, offset: 256)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !302, line: 46, baseType: !813)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !485, line: 88, baseType: !342)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !803, file: !12, line: 1422, baseType: !815, size: 64, offset: 320)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !12, line: 2228, size: 576, elements: !817)
!817 = !{!818, !819, !820, !826, !830, !834, !838, !842, !843, !853, !856, !857, !858, !862, !863, !864}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !816, file: !12, line: 2229, baseType: !748, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !816, file: !12, line: 2230, baseType: !286, size: 32, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !816, file: !12, line: 2238, baseType: !821, size: 64, offset: 128)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DISubroutineType(types: !823)
!823 = !{!286, !824}
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !12, line: 69, flags: DIFlagFwdDecl)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !816, file: !12, line: 2239, baseType: !827, size: 64, offset: 192)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!829 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !12, line: 70, flags: DIFlagFwdDecl)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !816, file: !12, line: 2240, baseType: !831, size: 64, offset: 256)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!676, !815, !286, !748, !291}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !816, file: !12, line: 2242, baseType: !835, size: 64, offset: 320)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{null, !802}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !816, file: !12, line: 2243, baseType: !839, size: 64, offset: 384)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !841, line: 76, flags: DIFlagFwdDecl)
!841 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!842 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !816, file: !12, line: 2244, baseType: !815, size: 64, offset: 448)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !816, file: !12, line: 2245, baseType: !844, size: 64, offset: 512)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !302, line: 182, size: 64, elements: !845)
!845 = !{!846}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !844, file: !302, line: 183, baseType: !847, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !302, line: 186, size: 128, elements: !849)
!849 = !{!850, !851}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !848, file: !302, line: 187, baseType: !847, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !848, file: !302, line: 187, baseType: !852, size: 64, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !816, file: !12, line: 2247, baseType: !854, offset: 576)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !855, line: 187, elements: !324)
!855 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!856 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !816, file: !12, line: 2248, baseType: !854, offset: 576)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !816, file: !12, line: 2249, baseType: !854, offset: 576)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !816, file: !12, line: 2250, baseType: !859, offset: 576)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !854, elements: !860)
!860 = !{!861}
!861 = !DISubrange(count: 3)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !816, file: !12, line: 2252, baseType: !854, offset: 576)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !816, file: !12, line: 2253, baseType: !854, offset: 576)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !816, file: !12, line: 2254, baseType: !854, offset: 576)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !803, file: !12, line: 1423, baseType: !866, size: 64, offset: 384)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !12, line: 1935, size: 1472, elements: !869)
!869 = !{!870, !874, !878, !879, !883, !889, !893, !894, !895, !899, !903, !904, !905, !906, !912, !917, !918, !1521, !1522, !1523, !1524, !1528, !1543}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !868, file: !12, line: 1936, baseType: !871, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = !DISubroutineType(types: !873)
!873 = !{!645, !802}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !868, file: !12, line: 1937, baseType: !875, size: 64, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DISubroutineType(types: !877)
!877 = !{null, !645}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !868, file: !12, line: 1938, baseType: !875, size: 64, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !868, file: !12, line: 1940, baseType: !880, size: 64, offset: 192)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !645, !286}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !868, file: !12, line: 1941, baseType: !884, size: 64, offset: 256)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!286, !645, !887}
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !12, line: 289, flags: DIFlagFwdDecl)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !868, file: !12, line: 1942, baseType: !890, size: 64, offset: 320)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{!286, !645}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !868, file: !12, line: 1943, baseType: !875, size: 64, offset: 384)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !868, file: !12, line: 1944, baseType: !835, size: 64, offset: 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !868, file: !12, line: 1945, baseType: !896, size: 64, offset: 512)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!286, !802, !286}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !868, file: !12, line: 1946, baseType: !900, size: 64, offset: 576)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{!286, !802}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !868, file: !12, line: 1947, baseType: !900, size: 64, offset: 640)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !868, file: !12, line: 1948, baseType: !900, size: 64, offset: 704)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !868, file: !12, line: 1949, baseType: !900, size: 64, offset: 768)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !868, file: !12, line: 1950, baseType: !907, size: 64, offset: 832)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{!286, !676, !910}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !12, line: 57, flags: DIFlagFwdDecl)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !868, file: !12, line: 1951, baseType: !913, size: 64, offset: 896)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!286, !802, !916, !774}
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !868, file: !12, line: 1952, baseType: !835, size: 64, offset: 960)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !868, file: !12, line: 1954, baseType: !919, size: 64, offset: 1024)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{!286, !922, !676}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !924, line: 16, size: 896, elements: !925)
!924 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!925 = !{!926, !927, !931, !932, !933, !934, !935, !936, !937, !959, !960, !1520}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !923, file: !924, line: 17, baseType: !774, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !923, file: !924, line: 18, baseType: !928, size: 64, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !302, line: 55, baseType: !929)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !485, line: 72, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !485, line: 16, baseType: !356)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !923, file: !924, line: 19, baseType: !928, size: 64, offset: 128)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !923, file: !924, line: 20, baseType: !928, size: 64, offset: 192)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !923, file: !924, line: 21, baseType: !928, size: 64, offset: 256)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !923, file: !924, line: 22, baseType: !812, size: 64, offset: 320)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !923, file: !924, line: 23, baseType: !812, size: 64, offset: 384)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !923, file: !924, line: 24, baseType: !328, size: 192, offset: 448)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !923, file: !924, line: 25, baseType: !938, size: 64, offset: 640)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !940)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !924, line: 31, size: 256, elements: !941)
!941 = !{!942, !947, !951, !955}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !940, file: !924, line: 32, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DISubroutineType(types: !945)
!945 = !{!291, !922, !946}
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !940, file: !924, line: 33, baseType: !948, size: 64, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DISubroutineType(types: !950)
!950 = !{null, !922, !291}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !940, file: !924, line: 34, baseType: !952, size: 64, offset: 128)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DISubroutineType(types: !954)
!954 = !{!291, !922, !291, !946}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !940, file: !924, line: 35, baseType: !956, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DISubroutineType(types: !958)
!958 = !{!286, !922, !291}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !923, file: !924, line: 26, baseType: !286, size: 32, offset: 704)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !923, file: !924, line: 27, baseType: !961, size: 64, offset: 768)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !12, line: 916, size: 1856, align: 32, elements: !964)
!964 = !{!965, !983, !984, !985, !1267, !1268, !1269, !1270, !1271, !1273, !1274, !1275, !1305, !1502, !1511, !1512, !1513, !1514, !1515, !1516, !1519}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !963, file: !12, line: 920, baseType: !966, size: 128)
!966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !963, file: !12, line: 917, size: 128, elements: !967)
!967 = !{!968, !974}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !966, file: !12, line: 918, baseType: !969, size: 64)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !970, line: 58, size: 64, elements: !971)
!970 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!971 = !{!972}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !969, file: !970, line: 59, baseType: !973, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !966, file: !12, line: 919, baseType: !975, size: 128, align: 64)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !302, line: 216, size: 128, align: 64, elements: !976)
!976 = !{!977, !979}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !975, file: !302, line: 217, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !975, file: !302, line: 218, baseType: !980, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{null, !978}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !963, file: !12, line: 921, baseType: !782, size: 128, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !963, file: !12, line: 922, baseType: !645, size: 64, offset: 256)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !963, file: !12, line: 923, baseType: !986, size: 64, offset: 320)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !12, line: 1822, size: 2048, elements: !989)
!989 = !{!990, !991, !996, !1003, !1007, !1053, !1054, !1058, !1071, !1072, !1080, !1084, !1085, !1089, !1090, !1094, !1099, !1100, !1104, !1108, !1222, !1226, !1230, !1234, !1235, !1241, !1245, !1250, !1254, !1258, !1262, !1266}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !988, file: !12, line: 1823, baseType: !839, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !988, file: !12, line: 1824, baseType: !992, size: 64, offset: 64)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DISubroutineType(types: !994)
!994 = !{!812, !995, !812, !286}
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !988, file: !12, line: 1825, baseType: !997, size: 64, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{!1000, !995, !774, !928, !946}
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !302, line: 60, baseType: !1001)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !485, line: 73, baseType: !1002)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !485, line: 15, baseType: !197)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !988, file: !12, line: 1826, baseType: !1004, size: 64, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!1000, !995, !748, !928, !946}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !988, file: !12, line: 1827, baseType: !1008, size: 64, offset: 256)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!1000, !1011, !1051}
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !12, line: 320, size: 384, elements: !1013)
!1013 = !{!1014, !1015, !1016, !1020, !1021, !1022, !1025, !1026}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1012, file: !12, line: 321, baseType: !995, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1012, file: !12, line: 326, baseType: !812, size: 64, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1012, file: !12, line: 327, baseType: !1017, size: 64, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{null, !1011, !197, !197}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1012, file: !12, line: 328, baseType: !291, size: 64, offset: 192)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1012, file: !12, line: 329, baseType: !286, size: 32, offset: 256)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1012, file: !12, line: 330, baseType: !1023, size: 16, offset: 288)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !339, line: 19, baseType: !1024)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !341, line: 24, baseType: !284)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1012, file: !12, line: 331, baseType: !1023, size: 16, offset: 304)
!1026 = !DIDerivedType(tag: DW_TAG_member, scope: !1012, file: !12, line: 332, baseType: !1027, size: 64, offset: 320)
!1027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1012, file: !12, line: 332, size: 64, elements: !1028)
!1028 = !{!1029, !1030}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1027, file: !12, line: 333, baseType: !7, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1027, file: !12, line: 334, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1033, line: 569, size: 448, elements: !1034)
!1033 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1034 = !{!1035, !1036, !1037}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1032, file: !1033, line: 570, baseType: !629, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1032, file: !1033, line: 571, baseType: !286, size: 32, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1032, file: !1033, line: 572, baseType: !1038, size: 320, offset: 128)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1039, line: 14, baseType: !1040)
!1039 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1039, line: 29, size: 320, elements: !1041)
!1041 = !{!1042, !1043, !1044, !1050}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1040, file: !1039, line: 30, baseType: !7, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1040, file: !1039, line: 31, baseType: !291, size: 64, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1040, file: !1039, line: 32, baseType: !1045, size: 64, offset: 128)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1039, line: 16, baseType: !1046)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!286, !1049, !7, !286, !291}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1040, file: !1039, line: 33, baseType: !301, size: 128, offset: 192)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !12, line: 64, flags: DIFlagFwdDecl)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !988, file: !12, line: 1828, baseType: !1008, size: 64, offset: 320)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !988, file: !12, line: 1829, baseType: !1055, size: 64, offset: 384)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!286, !1011, !793}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !988, file: !12, line: 1830, baseType: !1059, size: 64, offset: 448)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!286, !995, !1062}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !12, line: 1776, size: 128, elements: !1064)
!1064 = !{!1065, !1070}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1063, file: !12, line: 1777, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !12, line: 1773, baseType: !1067)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!286, !1062, !748, !286, !812, !403, !7}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1063, file: !12, line: 1778, baseType: !812, size: 64, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !988, file: !12, line: 1831, baseType: !1059, size: 64, offset: 512)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !988, file: !12, line: 1832, baseType: !1073, size: 64, offset: 576)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!1076, !995, !1078}
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1077, line: 52, baseType: !7)
!1077 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !12, line: 56, flags: DIFlagFwdDecl)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !988, file: !12, line: 1833, baseType: !1081, size: 64, offset: 640)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!197, !995, !7, !356}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !988, file: !12, line: 1834, baseType: !1081, size: 64, offset: 704)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !988, file: !12, line: 1835, baseType: !1086, size: 64, offset: 768)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!286, !995, !548}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !988, file: !12, line: 1836, baseType: !356, size: 64, offset: 832)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !988, file: !12, line: 1837, baseType: !1091, size: 64, offset: 896)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!286, !645, !995}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !988, file: !12, line: 1838, baseType: !1095, size: 64, offset: 960)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!286, !995, !1098}
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !12, line: 1007, baseType: !291)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !988, file: !12, line: 1839, baseType: !1091, size: 64, offset: 1024)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !988, file: !12, line: 1840, baseType: !1101, size: 64, offset: 1088)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!286, !995, !812, !812, !286}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !988, file: !12, line: 1841, baseType: !1105, size: 64, offset: 1152)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!286, !286, !995, !286}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !988, file: !12, line: 1842, baseType: !1109, size: 64, offset: 1216)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!286, !995, !286, !1112}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !12, line: 1062, size: 1664, elements: !1114)
!1114 = !{!1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1131, !1132, !1133, !1134, !1151, !1152, !1153, !1166, !1198}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1113, file: !12, line: 1063, baseType: !1112, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1113, file: !12, line: 1064, baseType: !301, size: 128, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1113, file: !12, line: 1065, baseType: !848, size: 128, offset: 192)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1113, file: !12, line: 1066, baseType: !301, size: 128, offset: 320)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1113, file: !12, line: 1069, baseType: !301, size: 128, offset: 448)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1113, file: !12, line: 1072, baseType: !1098, size: 64, offset: 576)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1113, file: !12, line: 1073, baseType: !7, size: 32, offset: 640)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1113, file: !12, line: 1074, baseType: !278, size: 8, offset: 672)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1113, file: !12, line: 1075, baseType: !7, size: 32, offset: 704)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1113, file: !12, line: 1076, baseType: !286, size: 32, offset: 736)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1113, file: !12, line: 1077, baseType: !1126, size: 128, offset: 768)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1039, line: 40, baseType: !1127)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1039, line: 36, size: 128, elements: !1128)
!1128 = !{!1129, !1130}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1127, file: !1039, line: 37, baseType: !310)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1127, file: !1039, line: 38, baseType: !301, size: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1113, file: !12, line: 1078, baseType: !995, size: 64, offset: 896)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1113, file: !12, line: 1079, baseType: !812, size: 64, offset: 960)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1113, file: !12, line: 1080, baseType: !812, size: 64, offset: 1024)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1113, file: !12, line: 1082, baseType: !1135, size: 64, offset: 1088)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !12, line: 1314, size: 320, elements: !1137)
!1137 = !{!1138, !1146, !1147, !1148, !1149, !1150}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1136, file: !12, line: 1315, baseType: !1139)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1140, line: 20, baseType: !1141)
!1140 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1140, line: 11, elements: !1142)
!1142 = !{!1143}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1141, file: !1140, line: 12, baseType: !1144)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !322, line: 33, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !322, line: 31, elements: !324)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1136, file: !12, line: 1316, baseType: !286, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1136, file: !12, line: 1317, baseType: !286, size: 32, offset: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1136, file: !12, line: 1318, baseType: !1135, size: 64, offset: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1136, file: !12, line: 1319, baseType: !995, size: 64, offset: 128)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1136, file: !12, line: 1320, baseType: !975, size: 128, align: 64, offset: 192)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1113, file: !12, line: 1084, baseType: !356, size: 64, offset: 1152)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1113, file: !12, line: 1085, baseType: !356, size: 64, offset: 1216)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1113, file: !12, line: 1087, baseType: !1154, size: 64, offset: 1280)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !12, line: 1011, size: 128, elements: !1157)
!1157 = !{!1158, !1162}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1156, file: !12, line: 1012, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{null, !1112, !1112}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1156, file: !12, line: 1013, baseType: !1163, size: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{null, !1112}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1113, file: !12, line: 1088, baseType: !1167, size: 64, offset: 1344)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !12, line: 1016, size: 512, elements: !1170)
!1170 = !{!1171, !1175, !1179, !1180, !1184, !1188, !1192, !1197}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1169, file: !12, line: 1017, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!1098, !1098}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1169, file: !12, line: 1018, baseType: !1176, size: 64, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{null, !1098}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1169, file: !12, line: 1019, baseType: !1163, size: 64, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1169, file: !12, line: 1020, baseType: !1181, size: 64, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!286, !1112, !286}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1169, file: !12, line: 1021, baseType: !1185, size: 64, offset: 256)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!793, !1112}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1169, file: !12, line: 1022, baseType: !1189, size: 64, offset: 320)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{!286, !1112, !286, !305}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1169, file: !12, line: 1023, baseType: !1193, size: 64, offset: 384)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{null, !1112, !1196}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1169, file: !12, line: 1024, baseType: !1185, size: 64, offset: 448)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1113, file: !12, line: 1097, baseType: !1199, size: 256, offset: 1408)
!1199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1113, file: !12, line: 1089, size: 256, elements: !1200)
!1200 = !{!1201, !1210, !1216}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1199, file: !12, line: 1090, baseType: !1202, size: 256)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1203, line: 10, size: 256, elements: !1204)
!1203 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1204 = !{!1205, !1206, !1209}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1202, file: !1203, line: 11, baseType: !358, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1202, file: !1203, line: 12, baseType: !1207, size: 64, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1203, line: 5, flags: DIFlagFwdDecl)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1202, file: !1203, line: 13, baseType: !301, size: 128, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1199, file: !12, line: 1091, baseType: !1211, size: 64)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1203, line: 17, size: 64, elements: !1212)
!1212 = !{!1213}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1211, file: !1203, line: 18, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1203, line: 16, flags: DIFlagFwdDecl)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1199, file: !12, line: 1096, baseType: !1217, size: 192)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1199, file: !12, line: 1092, size: 192, elements: !1218)
!1218 = !{!1219, !1220, !1221}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1217, file: !12, line: 1093, baseType: !301, size: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1217, file: !12, line: 1094, baseType: !286, size: 32, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1217, file: !12, line: 1095, baseType: !7, size: 32, offset: 160)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !988, file: !12, line: 1843, baseType: !1223, size: 64, offset: 1280)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!1000, !995, !629, !286, !928, !946, !286}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !988, file: !12, line: 1844, baseType: !1227, size: 64, offset: 1344)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!356, !995, !356, !356, !356, !356}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !988, file: !12, line: 1845, baseType: !1231, size: 64, offset: 1408)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!286, !286}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !988, file: !12, line: 1846, baseType: !1109, size: 64, offset: 1472)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !988, file: !12, line: 1847, baseType: !1236, size: 64, offset: 1536)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!1000, !1239, !995, !946, !928, !7}
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !349, line: 53, flags: DIFlagFwdDecl)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !988, file: !12, line: 1848, baseType: !1242, size: 64, offset: 1600)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!1000, !995, !946, !1239, !928, !7}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !988, file: !12, line: 1849, baseType: !1246, size: 64, offset: 1664)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!286, !995, !197, !1249, !1196}
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !988, file: !12, line: 1850, baseType: !1251, size: 64, offset: 1728)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!197, !995, !286, !812, !812}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !988, file: !12, line: 1852, baseType: !1255, size: 64, offset: 1792)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{null, !922, !995}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !988, file: !12, line: 1856, baseType: !1259, size: 64, offset: 1856)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!1000, !995, !812, !995, !812, !928, !7}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !988, file: !12, line: 1858, baseType: !1263, size: 64, offset: 1920)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!812, !995, !812, !995, !812, !812, !7}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !988, file: !12, line: 1861, baseType: !1101, size: 64, offset: 1984)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !963, file: !12, line: 929, baseType: !310, offset: 384)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !963, file: !12, line: 930, baseType: !11, size: 32, offset: 384)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !963, file: !12, line: 931, baseType: !332, size: 64, offset: 448)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !963, file: !12, line: 932, baseType: !7, size: 32, offset: 512)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !963, file: !12, line: 933, baseType: !1272, size: 32, offset: 544)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !302, line: 150, baseType: !7)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !963, file: !12, line: 934, baseType: !328, size: 192, offset: 576)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !963, file: !12, line: 935, baseType: !812, size: 64, offset: 768)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !963, file: !12, line: 936, baseType: !1276, size: 192, offset: 832)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !12, line: 885, size: 192, elements: !1277)
!1277 = !{!1278, !1279, !1301, !1302, !1303, !1304}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1276, file: !12, line: 886, baseType: !1139)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1276, file: !12, line: 887, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !21, line: 59, size: 768, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286, !1290, !1291, !1292, !1293}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1281, file: !21, line: 61, baseType: !364, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1281, file: !21, line: 62, baseType: !7, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1281, file: !21, line: 63, baseType: !310, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1281, file: !21, line: 65, baseType: !1287, size: 256, offset: 64)
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 256, elements: !1288)
!1288 = !{!1289}
!1289 = !DISubrange(count: 4)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1281, file: !21, line: 66, baseType: !844, size: 64, offset: 320)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1281, file: !21, line: 68, baseType: !1126, size: 128, offset: 384)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1281, file: !21, line: 69, baseType: !975, size: 128, align: 64, offset: 512)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1281, file: !21, line: 70, baseType: !1294, size: 128, offset: 640)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1295, size: 128, elements: !533)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !21, line: 54, size: 128, elements: !1296)
!1296 = !{!1297, !1298}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1295, file: !21, line: 55, baseType: !286, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1295, file: !21, line: 56, baseType: !1299, size: 64, offset: 64)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !21, line: 56, flags: DIFlagFwdDecl)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1276, file: !12, line: 888, baseType: !20, size: 32, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1276, file: !12, line: 889, baseType: !652, size: 32, offset: 96)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1276, file: !12, line: 889, baseType: !652, size: 32, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1276, file: !12, line: 890, baseType: !286, size: 32, offset: 160)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !963, file: !12, line: 937, baseType: !1306, size: 64, offset: 1024)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1309, line: 111, size: 1280, elements: !1310)
!1309 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1310 = !{!1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1330, !1331, !1332, !1333, !1334, !1335, !1455, !1456, !1457, !1458, !1484, !1487, !1497}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1308, file: !1309, line: 112, baseType: !369, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1308, file: !1309, line: 120, baseType: !652, size: 32, offset: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1308, file: !1309, line: 121, baseType: !660, size: 32, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1308, file: !1309, line: 122, baseType: !652, size: 32, offset: 96)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1308, file: !1309, line: 123, baseType: !660, size: 32, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1308, file: !1309, line: 124, baseType: !652, size: 32, offset: 160)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1308, file: !1309, line: 125, baseType: !660, size: 32, offset: 192)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1308, file: !1309, line: 126, baseType: !652, size: 32, offset: 224)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1308, file: !1309, line: 127, baseType: !660, size: 32, offset: 256)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1308, file: !1309, line: 128, baseType: !7, size: 32, offset: 288)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1308, file: !1309, line: 129, baseType: !1322, size: 64, offset: 320)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1323, line: 26, baseType: !1324)
!1323 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1323, line: 24, size: 64, elements: !1325)
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1324, file: !1323, line: 25, baseType: !1327, size: 64)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 64, elements: !1328)
!1328 = !{!1329}
!1329 = !DISubrange(count: 2)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1308, file: !1309, line: 130, baseType: !1322, size: 64, offset: 384)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1308, file: !1309, line: 131, baseType: !1322, size: 64, offset: 448)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1308, file: !1309, line: 132, baseType: !1322, size: 64, offset: 512)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1308, file: !1309, line: 133, baseType: !1322, size: 64, offset: 576)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1308, file: !1309, line: 135, baseType: !278, size: 8, offset: 640)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1308, file: !1309, line: 137, baseType: !1336, size: 64, offset: 704)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1338, line: 189, size: 1664, elements: !1339)
!1338 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1339 = !{!1340, !1341, !1346, !1351, !1359, !1362, !1363, !1370, !1371, !1372, !1373, !1376, !1377, !1378, !1380, !1381, !1419, !1440}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1337, file: !1338, line: 190, baseType: !364, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1337, file: !1338, line: 191, baseType: !1342, size: 32, offset: 32)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1338, line: 28, baseType: !1343)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !302, line: 98, baseType: !1344)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !339, line: 20, baseType: !1345)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !341, line: 26, baseType: !286)
!1346 = !DIDerivedType(tag: DW_TAG_member, scope: !1337, file: !1338, line: 192, baseType: !1347, size: 192, offset: 64)
!1347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1337, file: !1338, line: 192, size: 192, elements: !1348)
!1348 = !{!1349, !1350}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1347, file: !1338, line: 193, baseType: !301, size: 128)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1347, file: !1338, line: 194, baseType: !393, size: 192, align: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1337, file: !1338, line: 199, baseType: !1352, size: 256, offset: 256)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1353, line: 35, size: 256, elements: !1354)
!1353 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1354 = !{!1355, !1356, !1357, !1358}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1352, file: !1353, line: 36, baseType: !332, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1352, file: !1353, line: 42, baseType: !332, size: 64, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1352, file: !1353, line: 46, baseType: !465, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1352, file: !1353, line: 47, baseType: !301, size: 128, offset: 128)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1337, file: !1338, line: 200, baseType: !1360, size: 64, offset: 512)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1338, line: 200, flags: DIFlagFwdDecl)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1337, file: !1338, line: 201, baseType: !291, size: 64, offset: 576)
!1363 = !DIDerivedType(tag: DW_TAG_member, scope: !1337, file: !1338, line: 202, baseType: !1364, size: 64, offset: 640)
!1364 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1337, file: !1338, line: 202, size: 64, elements: !1365)
!1365 = !{!1366, !1369}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1364, file: !1338, line: 203, baseType: !1367, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1368, line: 8, baseType: !340)
!1368 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1364, file: !1338, line: 204, baseType: !1367, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1337, file: !1338, line: 206, baseType: !1367, size: 64, offset: 704)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1337, file: !1338, line: 207, baseType: !652, size: 32, offset: 768)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1337, file: !1338, line: 208, baseType: !660, size: 32, offset: 800)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1337, file: !1338, line: 209, baseType: !1374, size: 32, offset: 832)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1338, line: 31, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !302, line: 104, baseType: !358)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1337, file: !1338, line: 210, baseType: !284, size: 16, offset: 864)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1337, file: !1338, line: 211, baseType: !284, size: 16, offset: 880)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1337, file: !1338, line: 215, baseType: !1379, size: 16, offset: 896)
!1379 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1337, file: !1338, line: 222, baseType: !356, size: 64, offset: 960)
!1381 = !DIDerivedType(tag: DW_TAG_member, scope: !1337, file: !1338, line: 239, baseType: !1382, size: 320, offset: 1024)
!1382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1337, file: !1338, line: 239, size: 320, elements: !1383)
!1383 = !{!1384, !1411}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1382, file: !1338, line: 240, baseType: !1385, size: 320)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1338, line: 108, size: 320, elements: !1386)
!1386 = !{!1387, !1388, !1400, !1403, !1410}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1385, file: !1338, line: 110, baseType: !356, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, scope: !1385, file: !1338, line: 111, baseType: !1389, size: 64, offset: 64)
!1389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1385, file: !1338, line: 111, size: 64, elements: !1390)
!1390 = !{!1391, !1399}
!1391 = !DIDerivedType(tag: DW_TAG_member, scope: !1389, file: !1338, line: 112, baseType: !1392, size: 64)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1389, file: !1338, line: 112, size: 64, elements: !1393)
!1393 = !{!1394, !1395}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1392, file: !1338, line: 114, baseType: !1023, size: 16)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1392, file: !1338, line: 115, baseType: !1396, size: 48, offset: 16)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 48, elements: !1397)
!1397 = !{!1398}
!1398 = !DISubrange(count: 6)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1389, file: !1338, line: 121, baseType: !356, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1385, file: !1338, line: 123, baseType: !1401, size: 64, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1338, line: 96, flags: DIFlagFwdDecl)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1385, file: !1338, line: 124, baseType: !1404, size: 64, offset: 192)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1338, line: 102, size: 192, elements: !1406)
!1406 = !{!1407, !1408, !1409}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1405, file: !1338, line: 103, baseType: !975, size: 128, align: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1405, file: !1338, line: 104, baseType: !364, size: 32, offset: 128)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1405, file: !1338, line: 105, baseType: !793, size: 8, offset: 160)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1385, file: !1338, line: 125, baseType: !748, size: 64, offset: 256)
!1411 = !DIDerivedType(tag: DW_TAG_member, scope: !1382, file: !1338, line: 241, baseType: !1412, size: 320)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1382, file: !1338, line: 241, size: 320, elements: !1413)
!1413 = !{!1414, !1415, !1416, !1417, !1418}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1412, file: !1338, line: 242, baseType: !356, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1412, file: !1338, line: 243, baseType: !356, size: 64, offset: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1412, file: !1338, line: 244, baseType: !1401, size: 64, offset: 128)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1412, file: !1338, line: 245, baseType: !1404, size: 64, offset: 192)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1412, file: !1338, line: 246, baseType: !774, size: 64, offset: 256)
!1419 = !DIDerivedType(tag: DW_TAG_member, scope: !1337, file: !1338, line: 254, baseType: !1420, size: 256, offset: 1344)
!1420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1337, file: !1338, line: 254, size: 256, elements: !1421)
!1421 = !{!1422, !1428}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1420, file: !1338, line: 255, baseType: !1423, size: 256)
!1423 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1338, line: 128, size: 256, elements: !1424)
!1424 = !{!1425, !1426}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1423, file: !1338, line: 129, baseType: !291, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1423, file: !1338, line: 130, baseType: !1427, size: 256)
!1427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 256, elements: !1288)
!1428 = !DIDerivedType(tag: DW_TAG_member, scope: !1420, file: !1338, line: 256, baseType: !1429, size: 256)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1420, file: !1338, line: 256, size: 256, elements: !1430)
!1430 = !{!1431, !1432}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1429, file: !1338, line: 258, baseType: !301, size: 128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1429, file: !1338, line: 259, baseType: !1433, size: 128, offset: 128)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1434, line: 22, size: 128, elements: !1435)
!1434 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1435 = !{!1436, !1439}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1433, file: !1434, line: 23, baseType: !1437, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1434, line: 23, flags: DIFlagFwdDecl)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1433, file: !1434, line: 24, baseType: !356, size: 64, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1337, file: !1338, line: 274, baseType: !1441, size: 64, offset: 1600)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1338, line: 170, size: 192, elements: !1443)
!1443 = !{!1444, !1453, !1454}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1442, file: !1338, line: 171, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1338, line: 165, baseType: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!286, !1336, !1449, !1451, !1336}
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1423)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1442, file: !1338, line: 172, baseType: !1336, size: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1442, file: !1338, line: 173, baseType: !1401, size: 64, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1308, file: !1309, line: 138, baseType: !1336, size: 64, offset: 768)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1308, file: !1309, line: 139, baseType: !1336, size: 64, offset: 832)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1308, file: !1309, line: 140, baseType: !1336, size: 64, offset: 896)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1308, file: !1309, line: 145, baseType: !1459, size: 64, offset: 960)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1461, line: 13, size: 896, elements: !1462)
!1461 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1462 = !{!1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1460, file: !1461, line: 14, baseType: !364, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1460, file: !1461, line: 15, baseType: !369, size: 32, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1460, file: !1461, line: 16, baseType: !369, size: 32, offset: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1460, file: !1461, line: 21, baseType: !332, size: 64, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1460, file: !1461, line: 27, baseType: !356, size: 64, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1460, file: !1461, line: 28, baseType: !356, size: 64, offset: 256)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1460, file: !1461, line: 29, baseType: !332, size: 64, offset: 320)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1460, file: !1461, line: 32, baseType: !848, size: 128, offset: 384)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1460, file: !1461, line: 33, baseType: !652, size: 32, offset: 512)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1460, file: !1461, line: 37, baseType: !332, size: 64, offset: 576)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1460, file: !1461, line: 44, baseType: !1474, size: 256, offset: 640)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1475, line: 15, size: 256, elements: !1476)
!1475 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1476 = !{!1477, !1478, !1479, !1480, !1481, !1482, !1483}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1474, file: !1475, line: 16, baseType: !465)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1474, file: !1475, line: 18, baseType: !286, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1474, file: !1475, line: 19, baseType: !286, size: 32, offset: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1474, file: !1475, line: 20, baseType: !286, size: 32, offset: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1474, file: !1475, line: 21, baseType: !286, size: 32, offset: 96)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1474, file: !1475, line: 22, baseType: !356, size: 64, offset: 128)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1474, file: !1475, line: 23, baseType: !356, size: 64, offset: 192)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1308, file: !1309, line: 146, baseType: !1485, size: 64, offset: 1024)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !653, line: 18, flags: DIFlagFwdDecl)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1308, file: !1309, line: 147, baseType: !1488, size: 64, offset: 1088)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1309, line: 25, size: 64, elements: !1490)
!1490 = !{!1491, !1492, !1493}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1489, file: !1309, line: 26, baseType: !369, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1489, file: !1309, line: 27, baseType: !286, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1489, file: !1309, line: 28, baseType: !1494, offset: 64)
!1494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, elements: !1495)
!1495 = !{!1496}
!1496 = !DISubrange(count: 0)
!1497 = !DIDerivedType(tag: DW_TAG_member, scope: !1308, file: !1309, line: 149, baseType: !1498, size: 128, offset: 1152)
!1498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1308, file: !1309, line: 149, size: 128, elements: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1498, file: !1309, line: 150, baseType: !286, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1498, file: !1309, line: 151, baseType: !975, size: 128, align: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !963, file: !12, line: 938, baseType: !1503, size: 256, offset: 1088)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !12, line: 896, size: 256, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1503, file: !12, line: 897, baseType: !356, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1503, file: !12, line: 898, baseType: !7, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1503, file: !12, line: 899, baseType: !7, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1503, file: !12, line: 902, baseType: !7, size: 32, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1503, file: !12, line: 903, baseType: !7, size: 32, offset: 160)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1503, file: !12, line: 904, baseType: !812, size: 64, offset: 192)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !963, file: !12, line: 940, baseType: !403, size: 64, offset: 1344)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !963, file: !12, line: 945, baseType: !291, size: 64, offset: 1408)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !963, file: !12, line: 949, baseType: !301, size: 128, offset: 1472)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !963, file: !12, line: 950, baseType: !301, size: 128, offset: 1600)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !963, file: !12, line: 952, baseType: !641, size: 64, offset: 1728)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !963, file: !12, line: 953, baseType: !1517, size: 32, offset: 1792)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1518, line: 8, baseType: !358)
!1518 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !963, file: !12, line: 954, baseType: !1517, size: 32, offset: 1824)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !923, file: !924, line: 28, baseType: !291, size: 64, offset: 832)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !868, file: !12, line: 1955, baseType: !919, size: 64, offset: 1088)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !868, file: !12, line: 1956, baseType: !919, size: 64, offset: 1152)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !868, file: !12, line: 1957, baseType: !919, size: 64, offset: 1216)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !868, file: !12, line: 1963, baseType: !1525, size: 64, offset: 1280)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!286, !802, !629, !605}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !868, file: !12, line: 1964, baseType: !1529, size: 64, offset: 1344)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!197, !802, !1532}
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !1534, line: 12, size: 256, elements: !1535)
!1534 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!1535 = !{!1536, !1537, !1538, !1539, !1540}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1533, file: !1534, line: 13, baseType: !605, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !1533, file: !1534, line: 16, baseType: !286, size: 32, offset: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !1533, file: !1534, line: 23, baseType: !356, size: 64, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !1533, file: !1534, line: 30, baseType: !356, size: 64, offset: 128)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !1533, file: !1534, line: 33, baseType: !1541, size: 64, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1534, line: 33, flags: DIFlagFwdDecl)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !868, file: !12, line: 1966, baseType: !1529, size: 64, offset: 1408)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !803, file: !12, line: 1424, baseType: !1545, size: 64, offset: 448)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !29, line: 322, size: 704, elements: !1548)
!1548 = !{!1549, !1595, !1599, !1603, !1604, !1605, !1606, !1607, !1612, !1617, !1621}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !1547, file: !29, line: 323, baseType: !1550, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!286, !1553}
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !29, line: 294, size: 1600, elements: !1555)
!1555 = !{!1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1580, !1581, !1582}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !1554, file: !29, line: 295, baseType: !848, size: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !1554, file: !29, line: 296, baseType: !301, size: 128, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !1554, file: !29, line: 297, baseType: !301, size: 128, offset: 256)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !1554, file: !29, line: 298, baseType: !301, size: 128, offset: 384)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !1554, file: !29, line: 299, baseType: !328, size: 192, offset: 512)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !1554, file: !29, line: 300, baseType: !310, offset: 704)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !1554, file: !29, line: 301, baseType: !369, size: 32, offset: 704)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !1554, file: !29, line: 302, baseType: !802, size: 64, offset: 768)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !1554, file: !29, line: 303, baseType: !1565, size: 64, offset: 832)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !29, line: 68, size: 64, elements: !1566)
!1566 = !{!1567, !1579}
!1567 = !DIDerivedType(tag: DW_TAG_member, scope: !1565, file: !29, line: 69, baseType: !1568, size: 32)
!1568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1565, file: !29, line: 69, size: 32, elements: !1569)
!1569 = !{!1570, !1571, !1572}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1568, file: !29, line: 70, baseType: !652, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1568, file: !29, line: 71, baseType: !660, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !1568, file: !29, line: 72, baseType: !1573, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !1574, line: 24, baseType: !1575)
!1574 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1574, line: 22, size: 32, elements: !1576)
!1576 = !{!1577}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1575, file: !1574, line: 23, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !1574, line: 20, baseType: !658)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1565, file: !29, line: 74, baseType: !28, size: 32, offset: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !1554, file: !29, line: 304, baseType: !812, size: 64, offset: 896)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !1554, file: !29, line: 305, baseType: !356, size: 64, offset: 960)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !1554, file: !29, line: 306, baseType: !1583, size: 576, offset: 1024)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !29, line: 205, size: 576, elements: !1584)
!1584 = !{!1585, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !1583, file: !29, line: 206, baseType: !1586, size: 64)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !29, line: 66, baseType: !342)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !1583, file: !29, line: 207, baseType: !1586, size: 64, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !1583, file: !29, line: 208, baseType: !1586, size: 64, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !1583, file: !29, line: 209, baseType: !1586, size: 64, offset: 192)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !1583, file: !29, line: 210, baseType: !1586, size: 64, offset: 256)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !1583, file: !29, line: 211, baseType: !1586, size: 64, offset: 320)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !1583, file: !29, line: 212, baseType: !1586, size: 64, offset: 384)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !1583, file: !29, line: 213, baseType: !1367, size: 64, offset: 448)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !1583, file: !29, line: 214, baseType: !1367, size: 64, offset: 512)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !1547, file: !29, line: 324, baseType: !1596, size: 64, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!1553, !802, !286}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !1547, file: !29, line: 325, baseType: !1600, size: 64, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{null, !1553}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !1547, file: !29, line: 326, baseType: !1550, size: 64, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !1547, file: !29, line: 327, baseType: !1550, size: 64, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !1547, file: !29, line: 328, baseType: !1550, size: 64, offset: 320)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !1547, file: !29, line: 329, baseType: !896, size: 64, offset: 384)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !1547, file: !29, line: 332, baseType: !1608, size: 64, offset: 448)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!1611, !645}
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !1547, file: !29, line: 333, baseType: !1613, size: 64, offset: 512)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!286, !645, !1616}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !1547, file: !29, line: 335, baseType: !1618, size: 64, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{!286, !645, !1611}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1547, file: !29, line: 337, baseType: !1622, size: 64, offset: 640)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!286, !802, !1625}
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !803, file: !12, line: 1425, baseType: !1627, size: 64, offset: 512)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !29, line: 428, size: 704, elements: !1630)
!1630 = !{!1631, !1635, !1636, !1640, !1641, !1642, !1657, !1680, !1684, !1685, !1708}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !1629, file: !29, line: 429, baseType: !1632, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!286, !802, !286, !286, !791}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !1629, file: !29, line: 430, baseType: !896, size: 64, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !1629, file: !29, line: 431, baseType: !1637, size: 64, offset: 128)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{!286, !802, !7}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !1629, file: !29, line: 432, baseType: !1637, size: 64, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !1629, file: !29, line: 433, baseType: !896, size: 64, offset: 256)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !1629, file: !29, line: 434, baseType: !1643, size: 64, offset: 320)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!286, !802, !286, !1646}
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !29, line: 415, size: 256, elements: !1648)
!1648 = !{!1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !1647, file: !29, line: 416, baseType: !286, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1647, file: !29, line: 417, baseType: !7, size: 32, offset: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !1647, file: !29, line: 418, baseType: !7, size: 32, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !1647, file: !29, line: 420, baseType: !7, size: 32, offset: 96)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !1647, file: !29, line: 421, baseType: !7, size: 32, offset: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !1647, file: !29, line: 422, baseType: !7, size: 32, offset: 160)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !1647, file: !29, line: 423, baseType: !7, size: 32, offset: 192)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !1647, file: !29, line: 424, baseType: !7, size: 32, offset: 224)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !1629, file: !29, line: 435, baseType: !1658, size: 64, offset: 384)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!286, !802, !1565, !1661}
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !29, line: 343, size: 960, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !1662, file: !29, line: 344, baseType: !286, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !1662, file: !29, line: 345, baseType: !403, size: 64, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !1662, file: !29, line: 346, baseType: !403, size: 64, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !1662, file: !29, line: 347, baseType: !403, size: 64, offset: 192)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !1662, file: !29, line: 348, baseType: !403, size: 64, offset: 256)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !1662, file: !29, line: 349, baseType: !403, size: 64, offset: 320)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !1662, file: !29, line: 350, baseType: !403, size: 64, offset: 384)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !1662, file: !29, line: 351, baseType: !338, size: 64, offset: 448)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !1662, file: !29, line: 353, baseType: !338, size: 64, offset: 512)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !1662, file: !29, line: 354, baseType: !286, size: 32, offset: 576)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !1662, file: !29, line: 355, baseType: !286, size: 32, offset: 608)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !1662, file: !29, line: 356, baseType: !403, size: 64, offset: 640)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !1662, file: !29, line: 357, baseType: !403, size: 64, offset: 704)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !1662, file: !29, line: 358, baseType: !403, size: 64, offset: 768)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !1662, file: !29, line: 359, baseType: !338, size: 64, offset: 832)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !1662, file: !29, line: 360, baseType: !286, size: 32, offset: 896)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !1629, file: !29, line: 436, baseType: !1681, size: 64, offset: 448)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DISubroutineType(types: !1683)
!1683 = !{!286, !802, !1625, !1661}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !1629, file: !29, line: 438, baseType: !1658, size: 64, offset: 512)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !1629, file: !29, line: 439, baseType: !1686, size: 64, offset: 576)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DISubroutineType(types: !1688)
!1688 = !{!286, !802, !1689}
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !29, line: 409, size: 1408, elements: !1691)
!1691 = !{!1692, !1693}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !1690, file: !29, line: 410, baseType: !7, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !1690, file: !29, line: 411, baseType: !1694, size: 1344, offset: 64)
!1694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1695, size: 1344, elements: !860)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !29, line: 395, size: 448, elements: !1696)
!1696 = !{!1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1707}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1695, file: !29, line: 396, baseType: !7, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !1695, file: !29, line: 397, baseType: !7, size: 32, offset: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !1695, file: !29, line: 399, baseType: !7, size: 32, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !1695, file: !29, line: 400, baseType: !7, size: 32, offset: 96)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !1695, file: !29, line: 401, baseType: !7, size: 32, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !1695, file: !29, line: 402, baseType: !7, size: 32, offset: 160)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !1695, file: !29, line: 403, baseType: !7, size: 32, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1695, file: !29, line: 404, baseType: !405, size: 64, offset: 256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1695, file: !29, line: 405, baseType: !1706, size: 64, offset: 320)
!1706 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !302, line: 126, baseType: !403)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1695, file: !29, line: 406, baseType: !1706, size: 64, offset: 384)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !1629, file: !29, line: 440, baseType: !1637, size: 64, offset: 640)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !803, file: !12, line: 1426, baseType: !1710, size: 64, offset: 576)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1712)
!1712 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !12, line: 49, flags: DIFlagFwdDecl)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !803, file: !12, line: 1427, baseType: !356, size: 64, offset: 640)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !803, file: !12, line: 1428, baseType: !356, size: 64, offset: 704)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !803, file: !12, line: 1429, baseType: !356, size: 64, offset: 768)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !803, file: !12, line: 1430, baseType: !676, size: 64, offset: 832)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !803, file: !12, line: 1431, baseType: !1352, size: 256, offset: 896)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !803, file: !12, line: 1432, baseType: !286, size: 32, offset: 1152)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !803, file: !12, line: 1433, baseType: !369, size: 32, offset: 1184)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !803, file: !12, line: 1437, baseType: !1721, size: 64, offset: 1216)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1724)
!1724 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !12, line: 1437, flags: DIFlagFwdDecl)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !803, file: !12, line: 1449, baseType: !1726, size: 64, offset: 1280)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !688, line: 34, size: 64, elements: !1727)
!1727 = !{!1728}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1726, file: !688, line: 35, baseType: !691, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !803, file: !12, line: 1450, baseType: !301, size: 128, offset: 1344)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !803, file: !12, line: 1451, baseType: !1731, size: 64, offset: 1472)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !169, line: 22, size: 1344, elements: !1733)
!1733 = !{!1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !2570, !2571, !2572, !3491, !3492, !3493}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1732, file: !169, line: 23, baseType: !807, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1732, file: !169, line: 24, baseType: !286, size: 32, offset: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1732, file: !169, line: 25, baseType: !645, size: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1732, file: !169, line: 26, baseType: !802, size: 64, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1732, file: !169, line: 27, baseType: !328, size: 192, offset: 192)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1732, file: !169, line: 28, baseType: !291, size: 64, offset: 384)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1732, file: !169, line: 29, baseType: !291, size: 64, offset: 448)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1732, file: !169, line: 30, baseType: !286, size: 32, offset: 512)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1732, file: !169, line: 31, baseType: !793, size: 8, offset: 544)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1732, file: !169, line: 33, baseType: !301, size: 128, offset: 576)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1732, file: !169, line: 35, baseType: !1731, size: 64, offset: 704)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1732, file: !169, line: 36, baseType: !514, size: 8, offset: 768)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1732, file: !169, line: 37, baseType: !1747, size: 64, offset: 832)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1749, line: 53, size: 6592, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1753, !1754, !1755, !1758, !1778, !2549, !2550, !2551, !2552, !2562}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1748, file: !1749, line: 54, baseType: !1752, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !302, line: 125, baseType: !403)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1748, file: !1749, line: 60, baseType: !1752, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1748, file: !1749, line: 64, baseType: !356, size: 64, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1748, file: !1749, line: 65, baseType: !1756, size: 64, offset: 192)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1749, line: 65, flags: DIFlagFwdDecl)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1748, file: !1749, line: 66, baseType: !1759, size: 128, offset: 256)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !258, line: 105, size: 128, elements: !1760)
!1760 = !{!1761, !1762}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1759, file: !258, line: 110, baseType: !356, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1759, file: !258, line: 118, baseType: !1763, size: 64, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !258, line: 95, size: 448, elements: !1765)
!1765 = !{!1766, !1767, !1773, !1774, !1775, !1776, !1777}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1764, file: !258, line: 96, baseType: !332, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1764, file: !258, line: 97, baseType: !1768, size: 64, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !258, line: 60, baseType: !1770)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !1772}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1764, file: !258, line: 98, baseType: !1768, size: 64, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1764, file: !258, line: 99, baseType: !793, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1764, file: !258, line: 100, baseType: !793, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1764, file: !258, line: 101, baseType: !975, size: 128, align: 64, offset: 256)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1764, file: !258, line: 102, baseType: !1772, size: 64, offset: 384)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1748, file: !1749, line: 68, baseType: !1779, size: 5568, offset: 384)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !47, line: 461, size: 5568, elements: !1780)
!1780 = !{!1781, !2080, !2082, !2085, !2086, !2137, !2229, !2230, !2231, !2232, !2233, !2242, !2367, !2380, !2384, !2385, !2389, !2391, !2392, !2393, !2397, !2403, !2404, !2407, !2411, !2501, !2502, !2503, !2504, !2505, !2537, !2538, !2539, !2542, !2545, !2546, !2547, !2548}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1779, file: !47, line: 462, baseType: !1782, size: 512)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1783, line: 64, size: 512, elements: !1784)
!1783 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1784 = !{!1785, !1786, !1787, !1789, !1831, !1936, !2070, !2075, !2076, !2077, !2078, !2079}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1782, file: !1783, line: 65, baseType: !748, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1782, file: !1783, line: 66, baseType: !301, size: 128, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1782, file: !1783, line: 67, baseType: !1788, size: 64, offset: 192)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1782, file: !1783, line: 68, baseType: !1790, size: 64, offset: 256)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1783, line: 192, size: 704, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1791, file: !1783, line: 193, baseType: !301, size: 128)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1791, file: !1783, line: 194, baseType: !310, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1791, file: !1783, line: 195, baseType: !1782, size: 512, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1791, file: !1783, line: 196, baseType: !1797, size: 64, offset: 640)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1799)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1783, line: 156, size: 192, elements: !1800)
!1800 = !{!1801, !1806, !1811}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1799, file: !1783, line: 157, baseType: !1802, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{!286, !1790, !1788}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1799, file: !1783, line: 158, baseType: !1807, size: 64, offset: 64)
!1807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1808)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!748, !1790, !1788}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1799, file: !1783, line: 159, baseType: !1812, size: 64, offset: 128)
!1812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1813)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!286, !1790, !1788, !1816}
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1783, line: 148, size: 20736, elements: !1818)
!1818 = !{!1819, !1821, !1825, !1826, !1830}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1817, file: !1783, line: 149, baseType: !1820, size: 192)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !774, size: 192, elements: !860)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1817, file: !1783, line: 150, baseType: !1822, size: 4096, offset: 192)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !774, size: 4096, elements: !1823)
!1823 = !{!1824}
!1824 = !DISubrange(count: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1817, file: !1783, line: 151, baseType: !286, size: 32, offset: 4288)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1817, file: !1783, line: 152, baseType: !1827, size: 16384, offset: 4320)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 16384, elements: !1828)
!1828 = !{!1829}
!1829 = !DISubrange(count: 2048)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1817, file: !1783, line: 153, baseType: !286, size: 32, offset: 20704)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1782, file: !1783, line: 69, baseType: !1832, size: 64, offset: 320)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1783, line: 138, size: 448, elements: !1834)
!1834 = !{!1835, !1839, !1858, !1860, !1893, !1926, !1930}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1833, file: !1783, line: 139, baseType: !1836, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{null, !1788}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1833, file: !1783, line: 140, baseType: !1840, size: 64, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1843, line: 230, size: 128, elements: !1844)
!1843 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1844 = !{!1845, !1854}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1842, file: !1843, line: 231, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!1000, !1788, !1849, !774}
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1843, line: 30, size: 128, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1850, file: !1843, line: 31, baseType: !748, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1850, file: !1843, line: 32, baseType: !649, size: 16, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1842, file: !1843, line: 232, baseType: !1855, size: 64, offset: 64)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!1000, !1788, !1849, !748, !928}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1833, file: !1783, line: 141, baseType: !1859, size: 64, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1833, file: !1783, line: 142, baseType: !1861, size: 64, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1843, line: 84, size: 320, elements: !1865)
!1865 = !{!1866, !1867, !1871, !1890, !1891}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1864, file: !1843, line: 85, baseType: !748, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1864, file: !1843, line: 86, baseType: !1868, size: 64, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!649, !1788, !1849, !286}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1864, file: !1843, line: 88, baseType: !1872, size: 64, offset: 128)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!649, !1788, !1875, !286}
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1843, line: 168, size: 448, elements: !1877)
!1877 = !{!1878, !1879, !1880, !1881, !1885, !1886}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1876, file: !1843, line: 169, baseType: !1850, size: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1876, file: !1843, line: 170, baseType: !928, size: 64, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1876, file: !1843, line: 171, baseType: !291, size: 64, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1876, file: !1843, line: 172, baseType: !1882, size: 64, offset: 256)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!1000, !995, !1788, !1875, !774, !812, !928}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1876, file: !1843, line: 174, baseType: !1882, size: 64, offset: 320)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1876, file: !1843, line: 176, baseType: !1887, size: 64, offset: 384)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!286, !995, !1788, !1875, !548}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1864, file: !1843, line: 90, baseType: !1859, size: 64, offset: 192)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1864, file: !1843, line: 91, baseType: !1892, size: 64, offset: 256)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1833, file: !1783, line: 143, baseType: !1894, size: 64, offset: 256)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!1897, !1788}
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1899)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !35, line: 39, size: 384, elements: !1900)
!1900 = !{!1901, !1902, !1906, !1910, !1918, !1922}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1899, file: !35, line: 40, baseType: !34, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !1899, file: !35, line: 41, baseType: !1903, size: 64, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{!793}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !1899, file: !35, line: 42, baseType: !1907, size: 64, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{!291}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !1899, file: !35, line: 43, baseType: !1911, size: 64, offset: 192)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = !DISubroutineType(types: !1913)
!1913 = !{!1914, !1916}
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !35, line: 19, flags: DIFlagFwdDecl)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !1899, file: !35, line: 44, baseType: !1919, size: 64, offset: 256)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{!1914}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !1899, file: !35, line: 45, baseType: !1923, size: 64, offset: 320)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{null, !291}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1833, file: !1783, line: 144, baseType: !1927, size: 64, offset: 320)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!1914, !1788}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1833, file: !1783, line: 145, baseType: !1931, size: 64, offset: 384)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{null, !1788, !1934, !1935}
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1782, file: !1783, line: 70, baseType: !1937, size: 64, offset: 384)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1939, line: 123, size: 1024, elements: !1940)
!1939 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1940 = !{!1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !2063, !2064, !2065, !2066, !2067}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1938, file: !1939, line: 124, baseType: !369, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1938, file: !1939, line: 125, baseType: !369, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1938, file: !1939, line: 135, baseType: !1937, size: 64, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1938, file: !1939, line: 136, baseType: !748, size: 64, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1938, file: !1939, line: 138, baseType: !393, size: 192, align: 64, offset: 192)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1938, file: !1939, line: 140, baseType: !1914, size: 64, offset: 384)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1938, file: !1939, line: 141, baseType: !7, size: 32, offset: 448)
!1948 = !DIDerivedType(tag: DW_TAG_member, scope: !1938, file: !1939, line: 142, baseType: !1949, size: 256, offset: 512)
!1949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1938, file: !1939, line: 142, size: 256, elements: !1950)
!1950 = !{!1951, !2003, !2007}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1949, file: !1939, line: 143, baseType: !1952, size: 192)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1939, line: 91, size: 192, elements: !1953)
!1953 = !{!1954, !1955, !1956}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !1952, file: !1939, line: 92, baseType: !356, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1952, file: !1939, line: 94, baseType: !504, size: 64, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1952, file: !1939, line: 100, baseType: !1957, size: 64, offset: 128)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1939, line: 180, size: 704, elements: !1959)
!1959 = !{!1960, !1961, !1962, !1975, !1976, !1977, !2001, !2002}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1958, file: !1939, line: 182, baseType: !1937, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1958, file: !1939, line: 183, baseType: !7, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !1958, file: !1939, line: 186, baseType: !1963, size: 192, offset: 128)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1964, line: 19, size: 192, elements: !1965)
!1964 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1965 = !{!1966, !1973, !1974}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1963, file: !1964, line: 20, baseType: !1967, size: 128)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1968, line: 292, size: 128, elements: !1969)
!1968 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1969 = !{!1970, !1971, !1972}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1967, file: !1968, line: 293, baseType: !310)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1967, file: !1968, line: 295, baseType: !605, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1967, file: !1968, line: 296, baseType: !291, size: 64, offset: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1963, file: !1964, line: 21, baseType: !7, size: 32, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1963, file: !1964, line: 22, baseType: !7, size: 32, offset: 160)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !1958, file: !1939, line: 187, baseType: !358, size: 32, offset: 320)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !1958, file: !1939, line: 188, baseType: !358, size: 32, offset: 352)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !1958, file: !1939, line: 189, baseType: !1978, size: 64, offset: 384)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1939, line: 168, size: 320, elements: !1980)
!1980 = !{!1981, !1985, !1989, !1993, !1997}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1979, file: !1939, line: 169, baseType: !1982, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = !DISubroutineType(types: !1984)
!1984 = !{!286, !922, !1957}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1979, file: !1939, line: 171, baseType: !1986, size: 64, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DISubroutineType(types: !1988)
!1988 = !{!286, !1937, !748, !649}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1979, file: !1939, line: 173, baseType: !1990, size: 64, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{!286, !1937}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1979, file: !1939, line: 174, baseType: !1994, size: 64, offset: 192)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!286, !1937, !1937, !748}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1979, file: !1939, line: 176, baseType: !1998, size: 64, offset: 256)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{!286, !922, !1937, !1957}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !1958, file: !1939, line: 192, baseType: !301, size: 128, offset: 448)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !1958, file: !1939, line: 194, baseType: !1126, size: 128, offset: 576)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1949, file: !1939, line: 144, baseType: !2004, size: 64)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1939, line: 103, size: 64, elements: !2005)
!2005 = !{!2006}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !2004, file: !1939, line: 104, baseType: !1937, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1949, file: !1939, line: 145, baseType: !2008, size: 256)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1939, line: 107, size: 256, elements: !2009)
!2009 = !{!2010, !2058, !2061, !2062}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2008, file: !1939, line: 108, baseType: !2011, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2013)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1939, line: 217, size: 768, elements: !2014)
!2014 = !{!2015, !2035, !2039, !2040, !2041, !2042, !2043, !2047, !2048, !2049, !2050, !2054}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2013, file: !1939, line: 222, baseType: !2016, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!286, !2019}
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1939, line: 197, size: 1088, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2020, file: !1939, line: 199, baseType: !1937, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2020, file: !1939, line: 200, baseType: !995, size: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !2020, file: !1939, line: 201, baseType: !922, size: 64, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2020, file: !1939, line: 202, baseType: !291, size: 64, offset: 192)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2020, file: !1939, line: 205, baseType: !328, size: 192, offset: 256)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !2020, file: !1939, line: 206, baseType: !328, size: 192, offset: 448)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2020, file: !1939, line: 207, baseType: !286, size: 32, offset: 640)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2020, file: !1939, line: 208, baseType: !301, size: 128, offset: 704)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !2020, file: !1939, line: 209, baseType: !774, size: 64, offset: 832)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2020, file: !1939, line: 211, baseType: !928, size: 64, offset: 896)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !2020, file: !1939, line: 212, baseType: !793, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !2020, file: !1939, line: 213, baseType: !793, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2020, file: !1939, line: 214, baseType: !577, size: 64, offset: 1024)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2013, file: !1939, line: 223, baseType: !2036, size: 64, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{null, !2019}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !2013, file: !1939, line: 236, baseType: !956, size: 64, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !2013, file: !1939, line: 238, baseType: !943, size: 64, offset: 192)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !2013, file: !1939, line: 239, baseType: !952, size: 64, offset: 256)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !2013, file: !1939, line: 240, baseType: !948, size: 64, offset: 320)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2013, file: !1939, line: 242, baseType: !2044, size: 64, offset: 384)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!1000, !2019, !774, !928, !812}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2013, file: !1939, line: 252, baseType: !928, size: 64, offset: 448)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !2013, file: !1939, line: 259, baseType: !793, size: 8, offset: 512)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2013, file: !1939, line: 260, baseType: !2044, size: 64, offset: 576)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2013, file: !1939, line: 263, baseType: !2051, size: 64, offset: 640)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!1076, !2019, !1078}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2013, file: !1939, line: 266, baseType: !2055, size: 64, offset: 704)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!286, !2019, !548}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2008, file: !1939, line: 109, baseType: !2059, size: 64, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1939, line: 31, flags: DIFlagFwdDecl)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2008, file: !1939, line: 110, baseType: !812, size: 64, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !2008, file: !1939, line: 111, baseType: !1937, size: 64, offset: 192)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1938, file: !1939, line: 148, baseType: !291, size: 64, offset: 768)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1938, file: !1939, line: 154, baseType: !403, size: 64, offset: 832)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1938, file: !1939, line: 156, baseType: !284, size: 16, offset: 896)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1938, file: !1939, line: 157, baseType: !649, size: 16, offset: 912)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !1938, file: !1939, line: 158, baseType: !2068, size: 64, offset: 960)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1939, line: 32, flags: DIFlagFwdDecl)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1782, file: !1783, line: 71, baseType: !2071, size: 32, offset: 448)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2072, line: 19, size: 32, elements: !2073)
!2072 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2073 = !{!2074}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2071, file: !2072, line: 20, baseType: !364, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1782, file: !1783, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1782, file: !1783, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1782, file: !1783, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1782, file: !1783, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1782, file: !1783, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1779, file: !47, line: 463, baseType: !2081, size: 64, offset: 512)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1779, file: !47, line: 465, baseType: !2083, size: 64, offset: 576)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !47, line: 36, flags: DIFlagFwdDecl)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1779, file: !47, line: 467, baseType: !748, size: 64, offset: 640)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1779, file: !47, line: 468, baseType: !2087, size: 64, offset: 704)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !47, line: 87, size: 384, elements: !2090)
!2090 = !{!2091, !2092, !2093, !2097, !2102, !2106}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2089, file: !47, line: 88, baseType: !748, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2089, file: !47, line: 89, baseType: !1861, size: 64, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2089, file: !47, line: 90, baseType: !2094, size: 64, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!286, !2081, !1816}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2089, file: !47, line: 91, baseType: !2098, size: 64, offset: 192)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!774, !2081, !2101, !1934, !1935}
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2089, file: !47, line: 93, baseType: !2103, size: 64, offset: 256)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{null, !2081}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2089, file: !47, line: 95, baseType: !2107, size: 64, offset: 320)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !54, line: 278, size: 1472, elements: !2110)
!2110 = !{!2111, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !2109, file: !54, line: 279, baseType: !2112, size: 64)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!286, !2081}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2109, file: !54, line: 280, baseType: !2103, size: 64, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2109, file: !54, line: 281, baseType: !2112, size: 64, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2109, file: !54, line: 282, baseType: !2112, size: 64, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !2109, file: !54, line: 283, baseType: !2112, size: 64, offset: 256)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !2109, file: !54, line: 284, baseType: !2112, size: 64, offset: 320)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !2109, file: !54, line: 285, baseType: !2112, size: 64, offset: 384)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !2109, file: !54, line: 286, baseType: !2112, size: 64, offset: 448)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !2109, file: !54, line: 287, baseType: !2112, size: 64, offset: 512)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !2109, file: !54, line: 288, baseType: !2112, size: 64, offset: 576)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !2109, file: !54, line: 289, baseType: !2112, size: 64, offset: 640)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !2109, file: !54, line: 290, baseType: !2112, size: 64, offset: 704)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !2109, file: !54, line: 291, baseType: !2112, size: 64, offset: 768)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !2109, file: !54, line: 292, baseType: !2112, size: 64, offset: 832)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !2109, file: !54, line: 293, baseType: !2112, size: 64, offset: 896)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !2109, file: !54, line: 294, baseType: !2112, size: 64, offset: 960)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !2109, file: !54, line: 295, baseType: !2112, size: 64, offset: 1024)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !2109, file: !54, line: 296, baseType: !2112, size: 64, offset: 1088)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !2109, file: !54, line: 297, baseType: !2112, size: 64, offset: 1152)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !2109, file: !54, line: 298, baseType: !2112, size: 64, offset: 1216)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2109, file: !54, line: 299, baseType: !2112, size: 64, offset: 1280)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2109, file: !54, line: 300, baseType: !2112, size: 64, offset: 1344)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !2109, file: !54, line: 301, baseType: !2112, size: 64, offset: 1408)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1779, file: !47, line: 470, baseType: !2138, size: 64, offset: 768)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !2140, line: 82, size: 1408, elements: !2141)
!2140 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!2141 = !{!2142, !2143, !2144, !2145, !2146, !2147, !2148, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2224, !2227, !2228}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2139, file: !2140, line: 83, baseType: !748, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2139, file: !2140, line: 84, baseType: !748, size: 64, offset: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !2139, file: !2140, line: 85, baseType: !2081, size: 64, offset: 128)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !2139, file: !2140, line: 86, baseType: !1861, size: 64, offset: 192)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2139, file: !2140, line: 87, baseType: !1861, size: 64, offset: 256)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !2139, file: !2140, line: 88, baseType: !1861, size: 64, offset: 320)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !2139, file: !2140, line: 90, baseType: !2149, size: 64, offset: 384)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{!286, !2081, !2152}
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !41, line: 95, size: 1152, elements: !2154)
!2154 = !{!2155, !2156, !2157, !2158, !2159, !2160, !2161, !2175, !2188, !2189, !2190, !2191, !2192, !2200, !2201, !2202, !2203, !2204, !2205}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2153, file: !41, line: 96, baseType: !748, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2153, file: !41, line: 97, baseType: !2138, size: 64, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2153, file: !41, line: 99, baseType: !839, size: 64, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !2153, file: !41, line: 100, baseType: !748, size: 64, offset: 192)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !2153, file: !41, line: 102, baseType: !793, size: 8, offset: 256)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !2153, file: !41, line: 103, baseType: !40, size: 32, offset: 288)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !2153, file: !41, line: 105, baseType: !2162, size: 64, offset: 320)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2164)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !2165, line: 262, size: 1600, elements: !2166)
!2165 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!2166 = !{!2167, !2169, !2170, !2174}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2164, file: !2165, line: 263, baseType: !2168, size: 256)
!2168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 256, elements: !713)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2164, file: !2165, line: 264, baseType: !2168, size: 256, offset: 256)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !2164, file: !2165, line: 265, baseType: !2171, size: 1024, offset: 512)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 1024, elements: !2172)
!2172 = !{!2173}
!2173 = !DISubrange(count: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2164, file: !2165, line: 266, baseType: !1914, size: 64, offset: 1536)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !2153, file: !41, line: 106, baseType: !2176, size: 64, offset: 384)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !2165, line: 210, size: 256, elements: !2179)
!2179 = !{!2180, !2184, !2186, !2187}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2178, file: !2165, line: 211, baseType: !2181, size: 72)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 72, elements: !2182)
!2182 = !{!2183}
!2183 = !DISubrange(count: 9)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2178, file: !2165, line: 212, baseType: !2185, size: 64, offset: 128)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !2165, line: 14, baseType: !356)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !2178, file: !2165, line: 213, baseType: !359, size: 32, offset: 192)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !2178, file: !2165, line: 214, baseType: !359, size: 32, offset: 224)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2153, file: !41, line: 108, baseType: !2112, size: 64, offset: 448)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2153, file: !41, line: 109, baseType: !2103, size: 64, offset: 512)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2153, file: !41, line: 110, baseType: !2112, size: 64, offset: 576)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2153, file: !41, line: 111, baseType: !2103, size: 64, offset: 640)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2153, file: !41, line: 112, baseType: !2193, size: 64, offset: 704)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{!286, !2081, !2196}
!2196 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !54, line: 52, baseType: !2197)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !54, line: 50, size: 32, elements: !2198)
!2198 = !{!2199}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2197, file: !54, line: 51, baseType: !286, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2153, file: !41, line: 113, baseType: !2112, size: 64, offset: 768)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2153, file: !41, line: 114, baseType: !1861, size: 64, offset: 832)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2153, file: !41, line: 115, baseType: !1861, size: 64, offset: 896)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2153, file: !41, line: 117, baseType: !2107, size: 64, offset: 960)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !2153, file: !41, line: 118, baseType: !2103, size: 64, offset: 1024)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2153, file: !41, line: 120, baseType: !2206, size: 64, offset: 1088)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !41, line: 120, flags: DIFlagFwdDecl)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2139, file: !2140, line: 91, baseType: !2094, size: 64, offset: 448)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2139, file: !2140, line: 92, baseType: !2112, size: 64, offset: 512)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2139, file: !2140, line: 93, baseType: !2103, size: 64, offset: 576)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2139, file: !2140, line: 94, baseType: !2112, size: 64, offset: 640)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2139, file: !2140, line: 95, baseType: !2103, size: 64, offset: 704)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !2139, file: !2140, line: 97, baseType: !2112, size: 64, offset: 768)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2139, file: !2140, line: 98, baseType: !2112, size: 64, offset: 832)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2139, file: !2140, line: 100, baseType: !2193, size: 64, offset: 896)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2139, file: !2140, line: 101, baseType: !2112, size: 64, offset: 960)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !2139, file: !2140, line: 103, baseType: !2112, size: 64, offset: 1024)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !2139, file: !2140, line: 105, baseType: !2112, size: 64, offset: 1088)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2139, file: !2140, line: 107, baseType: !2107, size: 64, offset: 1152)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !2139, file: !2140, line: 109, baseType: !2221, size: 64, offset: 1216)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2223)
!2223 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !2140, line: 109, flags: DIFlagFwdDecl)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2139, file: !2140, line: 111, baseType: !2225, size: 64, offset: 1280)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !2140, line: 111, flags: DIFlagFwdDecl)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !2139, file: !2140, line: 112, baseType: !854, offset: 1344)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !2139, file: !2140, line: 114, baseType: !793, size: 8, offset: 1344)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1779, file: !47, line: 471, baseType: !2152, size: 64, offset: 832)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1779, file: !47, line: 473, baseType: !291, size: 64, offset: 896)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1779, file: !47, line: 475, baseType: !291, size: 64, offset: 960)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1779, file: !47, line: 480, baseType: !328, size: 192, offset: 1024)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1779, file: !47, line: 484, baseType: !2234, size: 576, offset: 1216)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !47, line: 361, size: 576, elements: !2235)
!2235 = !{!2236, !2237, !2238, !2239, !2240, !2241}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !2234, file: !47, line: 362, baseType: !301, size: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !2234, file: !47, line: 363, baseType: !301, size: 128, offset: 128)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !2234, file: !47, line: 364, baseType: !301, size: 128, offset: 256)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !2234, file: !47, line: 365, baseType: !301, size: 128, offset: 384)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !2234, file: !47, line: 366, baseType: !793, size: 8, offset: 512)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2234, file: !47, line: 367, baseType: !46, size: 32, offset: 544)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1779, file: !47, line: 485, baseType: !2243, size: 2304, offset: 1792)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !54, line: 565, size: 2304, elements: !2244)
!2244 = !{!2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2270, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2360, !2364}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !2243, file: !54, line: 566, baseType: !2196, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !2243, file: !54, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !2243, file: !54, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !2243, file: !54, line: 569, baseType: !793, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !2243, file: !54, line: 570, baseType: !793, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !2243, file: !54, line: 571, baseType: !793, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !2243, file: !54, line: 572, baseType: !793, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !2243, file: !54, line: 573, baseType: !793, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !2243, file: !54, line: 574, baseType: !793, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !2243, file: !54, line: 575, baseType: !793, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !2243, file: !54, line: 576, baseType: !793, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !2243, file: !54, line: 577, baseType: !358, size: 32, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2243, file: !54, line: 578, baseType: !310, offset: 96)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2243, file: !54, line: 580, baseType: !301, size: 128, offset: 128)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2243, file: !54, line: 581, baseType: !2260, size: 192, offset: 256)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2261, line: 26, size: 192, elements: !2262)
!2261 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2262 = !{!2263, !2264}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2260, file: !2261, line: 27, baseType: !7, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2260, file: !2261, line: 28, baseType: !2265, size: 128, offset: 64)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2266, line: 43, size: 128, elements: !2267)
!2266 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2267 = !{!2268, !2269}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2265, file: !2266, line: 44, baseType: !465)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2265, file: !2266, line: 45, baseType: !301, size: 128)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !2243, file: !54, line: 582, baseType: !2271, size: 64, offset: 448)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !2273, line: 43, size: 1472, elements: !2274)
!2273 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!2274 = !{!2275, !2276, !2277, !2278, !2279, !2282, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2272, file: !2273, line: 44, baseType: !748, size: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2272, file: !2273, line: 45, baseType: !286, size: 32, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2272, file: !2273, line: 46, baseType: !301, size: 128, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2272, file: !2273, line: 47, baseType: !310, offset: 256)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2272, file: !2273, line: 48, baseType: !2280, size: 64, offset: 256)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !54, line: 533, flags: DIFlagFwdDecl)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2272, file: !2273, line: 49, baseType: !2283, size: 320, offset: 320)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2284, line: 11, size: 320, elements: !2285)
!2284 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2285 = !{!2286, !2287, !2288, !2293}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2283, file: !2284, line: 16, baseType: !848, size: 128)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2283, file: !2284, line: 17, baseType: !356, size: 64, offset: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2283, file: !2284, line: 18, baseType: !2289, size: 64, offset: 192)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 64)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{null, !2292}
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2283, file: !2284, line: 19, baseType: !358, size: 32, offset: 256)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2272, file: !2273, line: 50, baseType: !356, size: 64, offset: 640)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !2272, file: !2273, line: 51, baseType: !448, size: 64, offset: 704)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !2272, file: !2273, line: 52, baseType: !448, size: 64, offset: 768)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !2272, file: !2273, line: 53, baseType: !448, size: 64, offset: 832)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !2272, file: !2273, line: 54, baseType: !448, size: 64, offset: 896)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !2272, file: !2273, line: 55, baseType: !448, size: 64, offset: 960)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !2272, file: !2273, line: 56, baseType: !356, size: 64, offset: 1024)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !2272, file: !2273, line: 57, baseType: !356, size: 64, offset: 1088)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !2272, file: !2273, line: 58, baseType: !356, size: 64, offset: 1152)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !2272, file: !2273, line: 59, baseType: !356, size: 64, offset: 1216)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !2272, file: !2273, line: 60, baseType: !356, size: 64, offset: 1280)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2272, file: !2273, line: 61, baseType: !2081, size: 64, offset: 1344)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2272, file: !2273, line: 62, baseType: !793, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !2272, file: !2273, line: 63, baseType: !793, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !2243, file: !54, line: 583, baseType: !793, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !2243, file: !54, line: 584, baseType: !793, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !2243, file: !54, line: 585, baseType: !793, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !2243, file: !54, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !2243, file: !54, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !2243, file: !54, line: 592, baseType: !440, size: 512, offset: 576)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2243, file: !54, line: 593, baseType: !403, size: 64, offset: 1088)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2243, file: !54, line: 594, baseType: !2316, size: 256, offset: 1152)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !196, line: 102, size: 256, elements: !2317)
!2317 = !{!2318, !2319, !2320}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2316, file: !196, line: 103, baseType: !332, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2316, file: !196, line: 104, baseType: !301, size: 128, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2316, file: !196, line: 105, baseType: !2321, size: 64, offset: 192)
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !196, line: 21, baseType: !2322)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!2323 = !DISubroutineType(types: !2324)
!2324 = !{null, !2325}
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !2243, file: !54, line: 595, baseType: !1126, size: 128, offset: 1408)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2243, file: !54, line: 596, baseType: !2280, size: 64, offset: 1536)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !2243, file: !54, line: 597, baseType: !369, size: 32, offset: 1600)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !2243, file: !54, line: 598, baseType: !369, size: 32, offset: 1632)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !2243, file: !54, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !2243, file: !54, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !2243, file: !54, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !2243, file: !54, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !2243, file: !54, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !2243, file: !54, line: 604, baseType: !793, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !2243, file: !54, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !2243, file: !54, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !2243, file: !54, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !2243, file: !54, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !2243, file: !54, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !2243, file: !54, line: 610, baseType: !7, size: 32, offset: 1696)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2243, file: !54, line: 611, baseType: !53, size: 32, offset: 1728)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !2243, file: !54, line: 612, baseType: !61, size: 32, offset: 1760)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !2243, file: !54, line: 613, baseType: !286, size: 32, offset: 1792)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !2243, file: !54, line: 614, baseType: !286, size: 32, offset: 1824)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !2243, file: !54, line: 615, baseType: !403, size: 64, offset: 1856)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !2243, file: !54, line: 616, baseType: !403, size: 64, offset: 1920)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !2243, file: !54, line: 617, baseType: !403, size: 64, offset: 1984)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !2243, file: !54, line: 618, baseType: !403, size: 64, offset: 2048)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !2243, file: !54, line: 620, baseType: !2351, size: 64, offset: 2112)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !54, line: 536, size: 256, elements: !2353)
!2353 = !{!2354, !2355, !2356, !2357}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2352, file: !54, line: 537, baseType: !310)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2352, file: !54, line: 538, baseType: !7, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !2352, file: !54, line: 540, baseType: !301, size: 128, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !2352, file: !54, line: 543, baseType: !2358, size: 64, offset: 192)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !54, line: 534, flags: DIFlagFwdDecl)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !2243, file: !54, line: 621, baseType: !2361, size: 64, offset: 2176)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DISubroutineType(types: !2363)
!2363 = !{null, !2081, !1344}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !2243, file: !54, line: 622, baseType: !2365, size: 64, offset: 2240)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !54, line: 622, flags: DIFlagFwdDecl)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1779, file: !47, line: 486, baseType: !2368, size: 64, offset: 4096)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !54, line: 642, size: 1792, elements: !2370)
!2370 = !{!2371, !2372, !2373, !2377, !2378, !2379}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2369, file: !54, line: 643, baseType: !2109, size: 1472)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2369, file: !54, line: 644, baseType: !2112, size: 64, offset: 1472)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !2369, file: !54, line: 645, baseType: !2374, size: 64, offset: 1536)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = !DISubroutineType(types: !2376)
!2376 = !{null, !2081, !793}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2369, file: !54, line: 646, baseType: !2112, size: 64, offset: 1600)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !2369, file: !54, line: 647, baseType: !2103, size: 64, offset: 1664)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !2369, file: !54, line: 648, baseType: !2103, size: 64, offset: 1728)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1779, file: !47, line: 493, baseType: !2381, size: 64, offset: 4160)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !2383, line: 13, flags: DIFlagFwdDecl)
!2383 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1779, file: !47, line: 499, baseType: !301, size: 128, offset: 4224)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1779, file: !47, line: 502, baseType: !2386, size: 64, offset: 4352)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2388)
!2388 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !47, line: 502, flags: DIFlagFwdDecl)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1779, file: !47, line: 504, baseType: !2390, size: 64, offset: 4416)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1779, file: !47, line: 505, baseType: !403, size: 64, offset: 4480)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1779, file: !47, line: 510, baseType: !403, size: 64, offset: 4544)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1779, file: !47, line: 511, baseType: !2394, size: 64, offset: 4608)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2396)
!2396 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !47, line: 511, flags: DIFlagFwdDecl)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1779, file: !47, line: 513, baseType: !2398, size: 64, offset: 4672)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !47, line: 288, size: 128, elements: !2400)
!2400 = !{!2401, !2402}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2399, file: !47, line: 293, baseType: !7, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !2399, file: !47, line: 294, baseType: !356, size: 64, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1779, file: !47, line: 515, baseType: !301, size: 128, offset: 4736)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1779, file: !47, line: 526, baseType: !2405, offset: 4864)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !2406, line: 5, elements: !324)
!2406 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1779, file: !47, line: 528, baseType: !2408, size: 64, offset: 4864)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !2410, line: 14, flags: DIFlagFwdDecl)
!2410 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1779, file: !47, line: 529, baseType: !2412, size: 64, offset: 4928)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !2414, line: 17, size: 192, elements: !2415)
!2414 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!2415 = !{!2416, !2417, !2500}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !2413, file: !2414, line: 18, baseType: !2412, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2413, file: !2414, line: 19, baseType: !2418, size: 64, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2420)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !2414, line: 110, size: 1152, elements: !2421)
!2421 = !{!2422, !2426, !2430, !2436, !2442, !2446, !2450, !2455, !2459, !2460, !2464, !2468, !2472, !2483, !2484, !2485, !2486, !2496}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2420, file: !2414, line: 111, baseType: !2423, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!2412, !2412}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !2420, file: !2414, line: 112, baseType: !2427, size: 64, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{null, !2412}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !2420, file: !2414, line: 113, baseType: !2431, size: 64, offset: 128)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = !DISubroutineType(types: !2433)
!2433 = !{!793, !2434}
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2413)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !2420, file: !2414, line: 114, baseType: !2437, size: 64, offset: 192)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!1914, !2434, !2440}
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1779)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !2420, file: !2414, line: 116, baseType: !2443, size: 64, offset: 256)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = !DISubroutineType(types: !2445)
!2445 = !{!793, !2434, !748}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !2420, file: !2414, line: 118, baseType: !2447, size: 64, offset: 320)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!286, !2434, !748, !7, !291, !928}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !2420, file: !2414, line: 123, baseType: !2451, size: 64, offset: 384)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!286, !2434, !748, !2454, !928}
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !2420, file: !2414, line: 126, baseType: !2456, size: 64, offset: 448)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{!748, !2434}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !2420, file: !2414, line: 127, baseType: !2456, size: 64, offset: 512)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !2420, file: !2414, line: 128, baseType: !2461, size: 64, offset: 576)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DISubroutineType(types: !2463)
!2463 = !{!2412, !2434}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !2420, file: !2414, line: 130, baseType: !2465, size: 64, offset: 640)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{!2412, !2434, !2412}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !2420, file: !2414, line: 133, baseType: !2469, size: 64, offset: 704)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!2412, !2434, !748}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !2420, file: !2414, line: 135, baseType: !2473, size: 64, offset: 768)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!286, !2434, !748, !748, !7, !7, !2476}
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !2414, line: 43, size: 640, elements: !2478)
!2478 = !{!2479, !2480, !2481}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2477, file: !2414, line: 44, baseType: !2412, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2477, file: !2414, line: 45, baseType: !7, size: 32, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2477, file: !2414, line: 46, baseType: !2482, size: 512, offset: 128)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 512, elements: !479)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !2420, file: !2414, line: 140, baseType: !2465, size: 64, offset: 832)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !2420, file: !2414, line: 143, baseType: !2461, size: 64, offset: 896)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !2420, file: !2414, line: 145, baseType: !2423, size: 64, offset: 960)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !2420, file: !2414, line: 146, baseType: !2487, size: 64, offset: 1024)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{!286, !2434, !2490}
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !2414, line: 29, size: 128, elements: !2492)
!2492 = !{!2493, !2494, !2495}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2491, file: !2414, line: 30, baseType: !7, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2491, file: !2414, line: 31, baseType: !7, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !2491, file: !2414, line: 32, baseType: !2434, size: 64, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !2420, file: !2414, line: 148, baseType: !2497, size: 64, offset: 1088)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{!286, !2434, !2081}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2413, file: !2414, line: 20, baseType: !2081, size: 64, offset: 128)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1779, file: !47, line: 534, baseType: !807, size: 32, offset: 4992)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1779, file: !47, line: 535, baseType: !358, size: 32, offset: 5024)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1779, file: !47, line: 537, baseType: !310, offset: 5056)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1779, file: !47, line: 538, baseType: !301, size: 128, offset: 5056)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1779, file: !47, line: 540, baseType: !2506, size: 64, offset: 5184)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !2508, line: 54, size: 960, elements: !2509)
!2508 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!2509 = !{!2510, !2511, !2512, !2513, !2514, !2515, !2516, !2520, !2524, !2525, !2526, !2527, !2531, !2535, !2536}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2507, file: !2508, line: 55, baseType: !748, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2507, file: !2508, line: 56, baseType: !839, size: 64, offset: 64)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !2507, file: !2508, line: 58, baseType: !1861, size: 64, offset: 128)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2507, file: !2508, line: 59, baseType: !1861, size: 64, offset: 192)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !2507, file: !2508, line: 60, baseType: !1788, size: 64, offset: 256)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !2507, file: !2508, line: 62, baseType: !2094, size: 64, offset: 320)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2507, file: !2508, line: 63, baseType: !2517, size: 64, offset: 384)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = !DISubroutineType(types: !2519)
!2519 = !{!774, !2081, !2101}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !2507, file: !2508, line: 65, baseType: !2521, size: 64, offset: 448)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DISubroutineType(types: !2523)
!2523 = !{null, !2506}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !2507, file: !2508, line: 66, baseType: !2103, size: 64, offset: 512)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !2507, file: !2508, line: 68, baseType: !2112, size: 64, offset: 576)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !2507, file: !2508, line: 70, baseType: !1897, size: 64, offset: 640)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2507, file: !2508, line: 71, baseType: !2528, size: 64, offset: 704)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!1914, !2081}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2507, file: !2508, line: 73, baseType: !2532, size: 64, offset: 768)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{null, !2081, !1934, !1935}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2507, file: !2508, line: 75, baseType: !2107, size: 64, offset: 832)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2507, file: !2508, line: 77, baseType: !2225, size: 64, offset: 896)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1779, file: !47, line: 541, baseType: !1861, size: 64, offset: 5248)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1779, file: !47, line: 543, baseType: !2103, size: 64, offset: 5312)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1779, file: !47, line: 544, baseType: !2540, size: 64, offset: 5376)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !47, line: 45, flags: DIFlagFwdDecl)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1779, file: !47, line: 545, baseType: !2543, size: 64, offset: 5440)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !47, line: 47, flags: DIFlagFwdDecl)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1779, file: !47, line: 547, baseType: !793, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1779, file: !47, line: 548, baseType: !793, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1779, file: !47, line: 549, baseType: !793, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1779, file: !47, line: 550, baseType: !793, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1748, file: !1749, line: 69, baseType: !1788, size: 64, offset: 5952)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1748, file: !1749, line: 70, baseType: !286, size: 32, offset: 6016)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1748, file: !1749, line: 70, baseType: !286, size: 32, offset: 6048)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1748, file: !1749, line: 71, baseType: !2553, size: 64, offset: 6080)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1749, line: 48, size: 808, elements: !2555)
!2555 = !{!2556, !2560}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2554, file: !1749, line: 49, baseType: !2557, size: 296)
!2557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 296, elements: !2558)
!2558 = !{!2559}
!2559 = !DISubrange(count: 37)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2554, file: !1749, line: 50, baseType: !2561, size: 512, offset: 296)
!2561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 512, elements: !1823)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1748, file: !1749, line: 75, baseType: !2563, size: 448, offset: 6144)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !196, line: 124, size: 448, elements: !2564)
!2564 = !{!2565, !2566, !2567}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2563, file: !196, line: 125, baseType: !2316, size: 256)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2563, file: !196, line: 126, baseType: !975, size: 128, align: 64, offset: 256)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2563, file: !196, line: 129, baseType: !2568, size: 64, offset: 384)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !196, line: 18, flags: DIFlagFwdDecl)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1732, file: !169, line: 39, baseType: !7, size: 32, offset: 896)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1732, file: !169, line: 41, baseType: !310, offset: 928)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1732, file: !169, line: 42, baseType: !2573, size: 64, offset: 960)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1749, line: 167, size: 8512, elements: !2575)
!2575 = !{!2576, !2577, !2578, !2579, !2580, !2581, !2582, !2593, !2594, !2775, !3472, !3473, !3474, !3475, !3476, !3477, !3480, !3481, !3484, !3485, !3486, !3489}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2574, file: !1749, line: 171, baseType: !286, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2574, file: !1749, line: 172, baseType: !286, size: 32, offset: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2574, file: !1749, line: 173, baseType: !286, size: 32, offset: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2574, file: !1749, line: 176, baseType: !2168, size: 256, offset: 96)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2574, file: !1749, line: 178, baseType: !284, size: 16, offset: 352)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2574, file: !1749, line: 179, baseType: !284, size: 16, offset: 368)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2574, file: !1749, line: 186, baseType: !2583, size: 64, offset: 384)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1749, line: 149, size: 256, elements: !2585)
!2585 = !{!2586, !2587, !2588, !2589}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2584, file: !1749, line: 150, baseType: !975, size: 128, align: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2584, file: !1749, line: 151, baseType: !286, size: 32, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2584, file: !1749, line: 152, baseType: !1747, size: 64, offset: 192)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2584, file: !1749, line: 153, baseType: !2590, offset: 256)
!2590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1747, elements: !2591)
!2591 = !{!2592}
!2592 = !DISubrange(count: -1)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2574, file: !1749, line: 187, baseType: !1748, size: 6592, offset: 448)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2574, file: !1749, line: 189, baseType: !2595, size: 64, offset: 7040)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2597)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !68, line: 1844, size: 960, elements: !2598)
!2598 = !{!2599, !2701, !2705, !2709, !2713, !2717, !2718, !2722, !2726, !2730, !2736, !2740, !2766, !2770, !2771}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2597, file: !68, line: 1845, baseType: !2600, size: 64)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!2603, !2604}
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !169, line: 515, baseType: !7)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !169, line: 203, size: 832, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2615, !2616, !2617, !2625, !2630, !2631, !2656, !2657, !2658, !2659, !2660, !2700}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2605, file: !169, line: 204, baseType: !2604, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2605, file: !169, line: 205, baseType: !2573, size: 64, offset: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2605, file: !169, line: 206, baseType: !7, size: 32, offset: 128)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2605, file: !169, line: 210, baseType: !284, size: 16, offset: 160)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2605, file: !169, line: 211, baseType: !284, size: 16, offset: 176)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2605, file: !169, line: 212, baseType: !284, size: 16, offset: 192)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2605, file: !169, line: 213, baseType: !2614, size: 8, offset: 208)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !169, line: 58, baseType: !514)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2605, file: !169, line: 214, baseType: !514, size: 8, offset: 216)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2605, file: !169, line: 215, baseType: !369, size: 32, offset: 224)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2605, file: !169, line: 217, baseType: !2618, size: 192, offset: 256)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !2619, line: 37, size: 192, elements: !2620)
!2619 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!2620 = !{!2621, !2622, !2623, !2624}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !2618, file: !2619, line: 38, baseType: !1752, size: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !2618, file: !2619, line: 40, baseType: !7, size: 32, offset: 64)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !2618, file: !2619, line: 42, baseType: !7, size: 32, offset: 96)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !2618, file: !2619, line: 44, baseType: !7, size: 32, offset: 128)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2605, file: !169, line: 219, baseType: !2626, size: 64, offset: 448)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !169, line: 19, baseType: !2628)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{null, !2604}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2605, file: !169, line: 221, baseType: !291, size: 64, offset: 512)
!2631 = !DIDerivedType(tag: DW_TAG_member, scope: !2605, file: !169, line: 240, baseType: !2632, size: 64, offset: 576)
!2632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2605, file: !169, line: 240, size: 64, elements: !2633)
!2633 = !{!2634}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !2632, file: !169, line: 242, baseType: !2635, size: 64)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2637, line: 313, size: 832, elements: !2638)
!2637 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2638 = !{!2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2654}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !2636, file: !2637, line: 314, baseType: !2604, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !2636, file: !2637, line: 316, baseType: !2618, size: 192, offset: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !2636, file: !2637, line: 318, baseType: !284, size: 16, offset: 256)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !2636, file: !2637, line: 319, baseType: !284, size: 16, offset: 272)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !2636, file: !2637, line: 320, baseType: !284, size: 16, offset: 288)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !2636, file: !2637, line: 321, baseType: !284, size: 16, offset: 304)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !2636, file: !2637, line: 323, baseType: !2618, size: 192, offset: 320)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !2636, file: !2637, line: 325, baseType: !2316, size: 256, offset: 512)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !2636, file: !2637, line: 327, baseType: !2648, size: 64, offset: 768)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !2619, line: 31, size: 128, elements: !2650)
!2650 = !{!2651, !2652, !2653}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !2649, file: !2619, line: 32, baseType: !629, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !2649, file: !2619, line: 33, baseType: !7, size: 32, offset: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !2649, file: !2619, line: 34, baseType: !7, size: 32, offset: 96)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !2636, file: !2637, line: 328, baseType: !2655, offset: 832)
!2655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2649, elements: !2591)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2605, file: !169, line: 246, baseType: !284, size: 16, offset: 640)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2605, file: !169, line: 252, baseType: !284, size: 16, offset: 656)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2605, file: !169, line: 254, baseType: !369, size: 32, offset: 672)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2605, file: !169, line: 256, baseType: !2648, size: 64, offset: 704)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2605, file: !169, line: 258, baseType: !2661, size: 64, offset: 768)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 64)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2637, line: 682, size: 2368, elements: !2663)
!2663 = !{!2664, !2667, !2668, !2689, !2690, !2691, !2692, !2693, !2698, !2699}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !2662, file: !2637, line: 683, baseType: !2665, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !542, line: 117, flags: DIFlagFwdDecl)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !2662, file: !2637, line: 684, baseType: !7, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !2662, file: !2637, line: 686, baseType: !2669, size: 448, offset: 128)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !2670, line: 26, baseType: !2671)
!2670 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !2670, line: 16, size: 448, elements: !2672)
!2672 = !{!2673, !2674, !2675, !2676, !2677, !2678, !2683, !2688}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2671, file: !2670, line: 17, baseType: !310)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !2671, file: !2670, line: 18, baseType: !286, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !2671, file: !2670, line: 19, baseType: !286, size: 32, offset: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2671, file: !2670, line: 20, baseType: !1196, size: 64, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !2671, file: !2670, line: 22, baseType: !291, size: 64, offset: 128)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2671, file: !2670, line: 23, baseType: !2679, size: 64, offset: 192)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !2670, line: 13, baseType: !2681)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!291, !605, !291}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2671, file: !2670, line: 24, baseType: !2684, size: 64, offset: 256)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !2670, line: 14, baseType: !2686)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{null, !291, !291}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2671, file: !2670, line: 25, baseType: !1126, size: 128, offset: 320)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !2662, file: !2637, line: 687, baseType: !2669, size: 448, offset: 576)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !2662, file: !2637, line: 689, baseType: !2669, size: 448, offset: 1024)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !2662, file: !2637, line: 690, baseType: !2669, size: 448, offset: 1472)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !2662, file: !2637, line: 697, baseType: !310, offset: 1920)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !2662, file: !2637, line: 698, baseType: !2694, size: 128, offset: 1920)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2637, line: 554, size: 128, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2694, file: !2637, line: 555, baseType: !2604, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2694, file: !2637, line: 556, baseType: !2604, size: 64, offset: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !2662, file: !2637, line: 699, baseType: !2316, size: 256, offset: 2048)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !2662, file: !2637, line: 700, baseType: !2568, size: 64, offset: 2304)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2605, file: !169, line: 265, baseType: !2655, offset: 832)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2597, file: !68, line: 1846, baseType: !2702, size: 64, offset: 64)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{!286, !1731, !1272}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2597, file: !68, line: 1847, baseType: !2706, size: 64, offset: 128)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{null, !2573, !1272}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2597, file: !68, line: 1848, baseType: !2710, size: 64, offset: 192)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!286, !1731, !1752, !629, !7}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2597, file: !68, line: 1849, baseType: !2714, size: 64, offset: 256)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!286, !1731, !1272, !7, !356}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2597, file: !68, line: 1850, baseType: !2714, size: 64, offset: 320)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2597, file: !68, line: 1851, baseType: !2719, size: 64, offset: 384)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{!7, !2573, !7}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2597, file: !68, line: 1853, baseType: !2723, size: 64, offset: 448)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{null, !2573}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2597, file: !68, line: 1854, baseType: !2727, size: 64, offset: 512)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!286, !2573}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2597, file: !68, line: 1855, baseType: !2731, size: 64, offset: 576)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!286, !1731, !2734}
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !12, line: 51, flags: DIFlagFwdDecl)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2597, file: !68, line: 1857, baseType: !2737, size: 64, offset: 640)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DISubroutineType(types: !2739)
!2739 = !{null, !1731, !356}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2597, file: !68, line: 1858, baseType: !2741, size: 64, offset: 704)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!286, !2573, !1752, !7, !2744, !291}
!2744 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !68, line: 354, baseType: !2745)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{!286, !2748, !7, !291}
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2750, line: 106, size: 512, elements: !2751)
!2750 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2751 = !{!2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2761, !2762}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2749, file: !2750, line: 107, baseType: !404, size: 64)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2749, file: !2750, line: 108, baseType: !404, size: 64, offset: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2749, file: !2750, line: 109, baseType: !404, size: 64, offset: 128)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2749, file: !2750, line: 110, baseType: !515, size: 8, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2749, file: !2750, line: 111, baseType: !515, size: 8, offset: 200)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2749, file: !2750, line: 112, baseType: !515, size: 8, offset: 208)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2749, file: !2750, line: 113, baseType: !515, size: 8, offset: 216)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2749, file: !2750, line: 114, baseType: !2760, size: 32, offset: 224)
!2760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 32, elements: !1288)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2749, file: !2750, line: 115, baseType: !404, size: 64, offset: 256)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2749, file: !2750, line: 116, baseType: !2763, size: 192, offset: 320)
!2763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 192, elements: !2764)
!2764 = !{!2765}
!2765 = !DISubrange(count: 24)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2597, file: !68, line: 1860, baseType: !2767, size: 64, offset: 768)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!774, !2573, !2101}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2597, file: !68, line: 1861, baseType: !839, size: 64, offset: 832)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2597, file: !68, line: 1862, baseType: !2772, size: 64, offset: 896)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2774)
!2774 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !68, line: 41, flags: DIFlagFwdDecl)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2574, file: !1749, line: 190, baseType: !2776, size: 64, offset: 7104)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !68, line: 399, size: 14464, elements: !2778)
!2778 = !{!2779, !2994, !3116, !3117, !3120, !3123, !3219, !3220, !3221, !3223, !3224, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3340, !3349, !3350, !3351, !3352, !3353, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2777, file: !68, line: 400, baseType: !2780, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !68, line: 130, size: 2176, elements: !2782)
!2782 = !{!2783, !2784, !2787, !2876, !2877, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2891, !2898, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2992, !2993}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2781, file: !68, line: 131, baseType: !2776, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2781, file: !68, line: 132, baseType: !2785, size: 64, offset: 64)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !68, line: 132, flags: DIFlagFwdDecl)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2781, file: !68, line: 133, baseType: !2788, size: 64, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !190, line: 16, size: 4032, elements: !2790)
!2790 = !{!2791, !2797, !2804, !2807, !2808, !2809, !2810, !2811, !2812, !2815, !2816, !2831, !2832, !2833, !2834, !2835, !2837, !2838, !2839, !2840, !2843, !2844, !2845, !2846, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861}
!2791 = !DIDerivedType(tag: DW_TAG_member, scope: !2789, file: !190, line: 17, baseType: !2792, size: 192)
!2792 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2789, file: !190, line: 17, size: 192, elements: !2793)
!2793 = !{!2794, !2795, !2796}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2792, file: !190, line: 19, baseType: !310)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !2792, file: !190, line: 27, baseType: !301, size: 128)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2792, file: !190, line: 32, baseType: !356, size: 64, offset: 128)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2789, file: !190, line: 38, baseType: !2798, size: 704, offset: 192)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !196, line: 115, size: 704, elements: !2799)
!2799 = !{!2800, !2801, !2802, !2803}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2798, file: !196, line: 116, baseType: !2316, size: 256)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2798, file: !196, line: 117, baseType: !2283, size: 320, offset: 256)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2798, file: !196, line: 120, baseType: !2568, size: 64, offset: 576)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2798, file: !196, line: 121, baseType: !286, size: 32, offset: 640)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2789, file: !190, line: 40, baseType: !2805, size: 64, offset: 896)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !528, line: 756, baseType: !2806)
!2806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 64, elements: !533)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !2789, file: !190, line: 45, baseType: !286, size: 32, offset: 960)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !2789, file: !190, line: 50, baseType: !286, size: 32, offset: 992)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2789, file: !190, line: 53, baseType: !356, size: 64, offset: 1024)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !2789, file: !190, line: 59, baseType: !291, size: 64, offset: 1088)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2789, file: !190, line: 63, baseType: !2776, size: 64, offset: 1152)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2789, file: !190, line: 65, baseType: !2813, size: 64, offset: 1216)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2814 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !68, line: 40, flags: DIFlagFwdDecl)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2789, file: !190, line: 71, baseType: !291, size: 64, offset: 1280)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !2789, file: !190, line: 77, baseType: !2817, size: 192, offset: 1344)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !2818, line: 48, size: 192, elements: !2819)
!2818 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!2819 = !{!2820, !2821, !2822, !2823}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2817, file: !2818, line: 52, baseType: !7, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2817, file: !2818, line: 57, baseType: !7, size: 32, offset: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !2817, file: !2818, line: 62, baseType: !7, size: 32, offset: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2817, file: !2818, line: 67, baseType: !2824, size: 64, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !2818, line: 20, size: 192, elements: !2826)
!2826 = !{!2827, !2828, !2829, !2830}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2825, file: !2818, line: 24, baseType: !356, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !2825, file: !2818, line: 29, baseType: !356, size: 64, offset: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !2825, file: !2818, line: 34, baseType: !356, size: 64, offset: 128)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !2825, file: !2818, line: 39, baseType: !310, offset: 192)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !2789, file: !190, line: 83, baseType: !2785, size: 64, offset: 1536)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !2789, file: !190, line: 89, baseType: !7, size: 32, offset: 1600)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2789, file: !190, line: 92, baseType: !284, size: 16, offset: 1632)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !2789, file: !190, line: 94, baseType: !284, size: 16, offset: 1648)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !2789, file: !190, line: 96, baseType: !2836, size: 64, offset: 1664)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !2789, file: !190, line: 99, baseType: !310, offset: 1728)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !2789, file: !190, line: 104, baseType: !1038, size: 320, offset: 1728)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !2789, file: !190, line: 110, baseType: !369, size: 32, offset: 2048)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2789, file: !190, line: 116, baseType: !2841, size: 64, offset: 2112)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !190, line: 9, flags: DIFlagFwdDecl)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !2789, file: !190, line: 122, baseType: !2841, size: 64, offset: 2176)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !2789, file: !190, line: 125, baseType: !356, size: 64, offset: 2240)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !2789, file: !190, line: 127, baseType: !356, size: 64, offset: 2304)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !2789, file: !190, line: 130, baseType: !2847, size: 448, offset: 2368)
!2847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 448, elements: !2848)
!2848 = !{!2849}
!2849 = !DISubrange(count: 7)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2789, file: !190, line: 133, baseType: !7, size: 32, offset: 2816)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !2789, file: !190, line: 135, baseType: !7, size: 32, offset: 2848)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !2789, file: !190, line: 141, baseType: !369, size: 32, offset: 2880)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !2789, file: !190, line: 145, baseType: !369, size: 32, offset: 2912)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !2789, file: !190, line: 148, baseType: !848, size: 128, offset: 2944)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !2789, file: !190, line: 150, baseType: !848, size: 128, offset: 3072)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2789, file: !190, line: 152, baseType: !1782, size: 512, offset: 3200)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !2789, file: !190, line: 155, baseType: !356, size: 64, offset: 3712)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !2789, file: !190, line: 157, baseType: !356, size: 64, offset: 3776)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !2789, file: !190, line: 159, baseType: !356, size: 64, offset: 3840)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !2789, file: !190, line: 175, baseType: !301, size: 128, offset: 3904)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !2789, file: !190, line: 182, baseType: !2862, offset: 4032)
!2862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2863, elements: !2591)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !2864, line: 16, size: 576, elements: !2865)
!2864 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!2865 = !{!2866, !2868, !2869, !2870, !2871, !2872, !2873, !2875}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !2863, file: !2864, line: 17, baseType: !2867, size: 32)
!2867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1379, size: 32, elements: !1328)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !2863, file: !2864, line: 18, baseType: !1379, size: 16, offset: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !2863, file: !2864, line: 19, baseType: !514, size: 8, offset: 48)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !2863, file: !2864, line: 20, baseType: !514, size: 8, offset: 56)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !2863, file: !2864, line: 21, baseType: !2265, size: 128, offset: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !2863, file: !2864, line: 23, baseType: !978, size: 64, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !2863, file: !2864, line: 24, baseType: !2874, size: 64, offset: 256)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !2863, file: !2864, line: 25, baseType: !2316, size: 256, offset: 320)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2781, file: !68, line: 135, baseType: !7, size: 32, offset: 192)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2781, file: !68, line: 136, baseType: !2878, size: 32, offset: 224)
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !68, line: 66, baseType: !359)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2781, file: !68, line: 138, baseType: !286, size: 32, offset: 256)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2781, file: !68, line: 139, baseType: !286, size: 32, offset: 288)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2781, file: !68, line: 142, baseType: !7, size: 32, offset: 320)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2781, file: !68, line: 143, baseType: !1752, size: 64, offset: 384)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2781, file: !68, line: 145, baseType: !2604, size: 64, offset: 448)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2781, file: !68, line: 146, baseType: !2604, size: 64, offset: 512)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2781, file: !68, line: 148, baseType: !301, size: 128, offset: 576)
!2886 = !DIDerivedType(tag: DW_TAG_member, scope: !2781, file: !68, line: 157, baseType: !2887, size: 128, offset: 704)
!2887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2781, file: !68, line: 157, size: 128, elements: !2888)
!2888 = !{!2889, !2890}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2887, file: !68, line: 158, baseType: !848, size: 128)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !2887, file: !68, line: 159, baseType: !301, size: 128)
!2891 = !DIDerivedType(tag: DW_TAG_member, scope: !2781, file: !68, line: 167, baseType: !2892, size: 192, offset: 832)
!2892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2781, file: !68, line: 167, size: 192, elements: !2893)
!2893 = !{!2894, !2895, !2896, !2897}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2892, file: !68, line: 168, baseType: !393, size: 192, align: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !2892, file: !68, line: 169, baseType: !2649, size: 128)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !2892, file: !68, line: 170, baseType: !291, size: 64)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2892, file: !68, line: 171, baseType: !286, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, scope: !2781, file: !68, line: 180, baseType: !2899, size: 256, offset: 1024)
!2899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2781, file: !68, line: 180, size: 256, elements: !2900)
!2900 = !{!2901, !2936}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !2899, file: !68, line: 184, baseType: !2902, size: 192)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2899, file: !68, line: 181, size: 192, elements: !2903)
!2903 = !{!2904, !2934}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !2902, file: !68, line: 182, baseType: !2905, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2907, line: 73, size: 448, elements: !2908)
!2907 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2908 = !{!2909, !2910, !2923, !2928, !2933}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2906, file: !2907, line: 74, baseType: !2776, size: 64)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2906, file: !2907, line: 75, baseType: !2911, size: 64, offset: 64)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2907, line: 99, size: 704, elements: !2913)
!2913 = !{!2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2912, file: !2907, line: 100, baseType: !332, size: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2912, file: !2907, line: 101, baseType: !369, size: 32, offset: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2912, file: !2907, line: 102, baseType: !369, size: 32, offset: 96)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2912, file: !2907, line: 105, baseType: !310, offset: 128)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2912, file: !2907, line: 107, baseType: !284, size: 16, offset: 128)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2912, file: !2907, line: 109, baseType: !1967, size: 128, offset: 192)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2912, file: !2907, line: 110, baseType: !2905, size: 64, offset: 320)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2912, file: !2907, line: 111, baseType: !844, size: 64, offset: 384)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2912, file: !2907, line: 113, baseType: !2316, size: 256, offset: 448)
!2923 = !DIDerivedType(tag: DW_TAG_member, scope: !2906, file: !2907, line: 83, baseType: !2924, size: 128, offset: 128)
!2924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2906, file: !2907, line: 83, size: 128, elements: !2925)
!2925 = !{!2926, !2927}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2924, file: !2907, line: 84, baseType: !301, size: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2924, file: !2907, line: 85, baseType: !2665, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, scope: !2906, file: !2907, line: 87, baseType: !2929, size: 128, offset: 256)
!2929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2906, file: !2907, line: 87, size: 128, elements: !2930)
!2930 = !{!2931, !2932}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2929, file: !2907, line: 88, baseType: !848, size: 128)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2929, file: !2907, line: 89, baseType: !975, size: 128, align: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2906, file: !2907, line: 92, baseType: !7, size: 32, offset: 384)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2902, file: !68, line: 183, baseType: !2935, size: 128, offset: 64)
!2935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 128, elements: !1328)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2899, file: !68, line: 190, baseType: !2937, size: 256)
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2899, file: !68, line: 186, size: 256, elements: !2938)
!2938 = !{!2939, !2940, !2941}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2937, file: !68, line: 187, baseType: !7, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2937, file: !68, line: 188, baseType: !301, size: 128, offset: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !2937, file: !68, line: 189, baseType: !2942, size: 64, offset: 192)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !68, line: 62, baseType: !2944)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !2780, !2614}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2781, file: !68, line: 193, baseType: !2573, size: 64, offset: 1280)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2781, file: !68, line: 194, baseType: !1747, size: 64, offset: 1344)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2781, file: !68, line: 200, baseType: !403, size: 64, offset: 1408)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2781, file: !68, line: 202, baseType: !403, size: 64, offset: 1472)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2781, file: !68, line: 212, baseType: !284, size: 16, offset: 1536)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2781, file: !68, line: 218, baseType: !284, size: 16, offset: 1552)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2781, file: !68, line: 221, baseType: !284, size: 16, offset: 1568)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2781, file: !68, line: 229, baseType: !284, size: 16, offset: 1584)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2781, file: !68, line: 230, baseType: !284, size: 16, offset: 1600)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2781, file: !68, line: 232, baseType: !67, size: 32, offset: 1632)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2781, file: !68, line: 233, baseType: !364, size: 32, offset: 1664)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2781, file: !68, line: 235, baseType: !7, size: 32, offset: 1696)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2781, file: !68, line: 236, baseType: !356, size: 64, offset: 1728)
!2959 = !DIDerivedType(tag: DW_TAG_member, scope: !2781, file: !68, line: 238, baseType: !2960, size: 256, offset: 1792)
!2960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2781, file: !68, line: 238, size: 256, elements: !2961)
!2961 = !{!2962, !2991}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !2960, file: !68, line: 239, baseType: !2963, size: 256)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !2964, line: 23, size: 256, elements: !2965)
!2964 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!2965 = !{!2966, !2988, !2990}
!2966 = !DIDerivedType(tag: DW_TAG_member, scope: !2963, file: !2964, line: 24, baseType: !2967, size: 128)
!2967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2963, file: !2964, line: 24, size: 128, elements: !2968)
!2968 = !{!2969, !2981}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2967, file: !2964, line: 25, baseType: !2970, size: 128)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !2971, line: 58, size: 128, elements: !2972)
!2971 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!2972 = !{!2973, !2974, !2979, !2980}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2970, file: !2971, line: 59, baseType: !969, size: 64)
!2974 = !DIDerivedType(tag: DW_TAG_member, scope: !2970, file: !2971, line: 60, baseType: !2975, size: 32, offset: 64)
!2975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2970, file: !2971, line: 60, size: 32, elements: !2976)
!2976 = !{!2977, !2978}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !2975, file: !2971, line: 61, baseType: !7, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !2975, file: !2971, line: 62, baseType: !369, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2970, file: !2971, line: 65, baseType: !1023, size: 16, offset: 96)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2970, file: !2971, line: 65, baseType: !1023, size: 16, offset: 112)
!2981 = !DIDerivedType(tag: DW_TAG_member, scope: !2967, file: !2964, line: 26, baseType: !2982, size: 128)
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2967, file: !2964, line: 26, size: 128, elements: !2983)
!2983 = !{!2984, !2985, !2986, !2987}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2982, file: !2964, line: 27, baseType: !969, size: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2982, file: !2964, line: 28, baseType: !7, size: 32, offset: 64)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2982, file: !2964, line: 30, baseType: !1023, size: 16, offset: 96)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2982, file: !2964, line: 30, baseType: !1023, size: 16, offset: 112)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2963, file: !2964, line: 34, baseType: !2989, size: 64, offset: 128)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !2964, line: 17, baseType: !1923)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2963, file: !2964, line: 35, baseType: !291, size: 64, offset: 192)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !2960, file: !68, line: 240, baseType: !403, size: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2781, file: !68, line: 246, baseType: !2942, size: 64, offset: 2048)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2781, file: !68, line: 247, baseType: !291, size: 64, offset: 2112)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2777, file: !68, line: 401, baseType: !2995, size: 64, offset: 64)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !74, line: 101, size: 4992, elements: !2997)
!2997 = !{!2998, !3110, !3111, !3112, !3113, !3114}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2996, file: !74, line: 103, baseType: !2999, size: 64)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !74, line: 66, size: 2240, elements: !3001)
!3001 = !{!3002, !3003, !3085, !3086, !3087, !3100, !3101, !3102, !3104, !3105, !3109}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !3000, file: !74, line: 69, baseType: !2665, size: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3000, file: !74, line: 72, baseType: !3004, size: 1408, offset: 64)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !74, line: 29, size: 1408, elements: !3005)
!3005 = !{!3006, !3010, !3014, !3018, !3022, !3026, !3030, !3034, !3039, !3043, !3047, !3053, !3057, !3058, !3062, !3066, !3070, !3074, !3075, !3079, !3080, !3084}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !3004, file: !74, line: 30, baseType: !3007, size: 64)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = !DISubroutineType(types: !3009)
!3009 = !{!286, !2776, !2999}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !3004, file: !74, line: 31, baseType: !3011, size: 64, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{null, !2995}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3004, file: !74, line: 32, baseType: !3015, size: 64, offset: 128)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{!286, !2788, !7}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3004, file: !74, line: 33, baseType: !3019, size: 64, offset: 192)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{null, !2788, !7}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !3004, file: !74, line: 34, baseType: !3023, size: 64, offset: 256)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{null, !2788}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !3004, file: !74, line: 36, baseType: !3027, size: 64, offset: 320)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!793, !2776, !2780, !2604}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !3004, file: !74, line: 37, baseType: !3031, size: 64, offset: 384)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{!793, !2788, !2604, !7}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !3004, file: !74, line: 38, baseType: !3035, size: 64, offset: 448)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{!286, !2776, !3038, !2604}
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !3004, file: !74, line: 39, baseType: !3040, size: 64, offset: 512)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 64)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{null, !2776, !2780, !73}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !3004, file: !74, line: 40, baseType: !3044, size: 64, offset: 576)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{null, !2776, !2780, !2780}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !3004, file: !74, line: 41, baseType: !3048, size: 64, offset: 640)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{null, !7, !3051}
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !74, line: 26, flags: DIFlagFwdDecl)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !3004, file: !74, line: 42, baseType: !3054, size: 64, offset: 704)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = !DISubroutineType(types: !3056)
!3056 = !{null, !2780}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !3004, file: !74, line: 43, baseType: !3054, size: 64, offset: 768)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !3004, file: !74, line: 44, baseType: !3059, size: 64, offset: 832)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{null, !2788, !305, !793}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !3004, file: !74, line: 45, baseType: !3063, size: 64, offset: 896)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{!2780, !2788}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !3004, file: !74, line: 46, baseType: !3067, size: 64, offset: 960)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DISubroutineType(types: !3069)
!3069 = !{!793, !2788}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !3004, file: !74, line: 47, baseType: !3071, size: 64, offset: 1024)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 64)
!3072 = !DISubroutineType(types: !3073)
!3073 = !{null, !2780, !403}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !3004, file: !74, line: 48, baseType: !3054, size: 64, offset: 1088)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !3004, file: !74, line: 49, baseType: !3076, size: 64, offset: 1152)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 64)
!3077 = !DISubroutineType(types: !3078)
!3078 = !{!2780, !2776, !2780}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !3004, file: !74, line: 50, baseType: !3076, size: 64, offset: 1216)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !3004, file: !74, line: 51, baseType: !3081, size: 64, offset: 1280)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{null, !2905}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !3004, file: !74, line: 52, baseType: !3081, size: 64, offset: 1344)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !3000, file: !74, line: 74, baseType: !928, size: 64, offset: 1472)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !3000, file: !74, line: 75, baseType: !928, size: 64, offset: 1536)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !3000, file: !74, line: 76, baseType: !3088, size: 64, offset: 1600)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 64)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !74, line: 57, size: 256, elements: !3090)
!3090 = !{!3091, !3092, !3096}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3089, file: !74, line: 58, baseType: !1850, size: 128)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3089, file: !74, line: 59, baseType: !3093, size: 64, offset: 128)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{!1000, !2995, !774}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3089, file: !74, line: 60, baseType: !3097, size: 64, offset: 192)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = !DISubroutineType(types: !3099)
!3099 = !{!1000, !2995, !748, !928}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !3000, file: !74, line: 77, baseType: !748, size: 64, offset: 1664)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !3000, file: !74, line: 78, baseType: !748, size: 64, offset: 1728)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !3000, file: !74, line: 79, baseType: !3103, size: 32, offset: 1792)
!3103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !3000, file: !74, line: 80, baseType: !839, size: 64, offset: 1856)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !3000, file: !74, line: 87, baseType: !3106, size: 176, offset: 1920)
!3106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 176, elements: !3107)
!3107 = !{!3108}
!3108 = !DISubrange(count: 22)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3000, file: !74, line: 88, baseType: !301, size: 128, offset: 2112)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !2996, file: !74, line: 104, baseType: !291, size: 64, offset: 64)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2996, file: !74, line: 105, baseType: !1782, size: 512, offset: 128)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2996, file: !74, line: 106, baseType: !328, size: 192, offset: 640)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !2996, file: !74, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2996, file: !74, line: 108, baseType: !3115, size: 4096, offset: 896)
!3115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 4096, elements: !1823)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2777, file: !68, line: 403, baseType: !1759, size: 128, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2777, file: !68, line: 405, baseType: !3118, size: 64, offset: 256)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !68, line: 43, flags: DIFlagFwdDecl)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2777, file: !68, line: 406, baseType: !3121, size: 64, offset: 320)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !68, line: 42, flags: DIFlagFwdDecl)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2777, file: !68, line: 408, baseType: !3124, size: 64, offset: 384)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3126)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !190, line: 290, size: 960, elements: !3127)
!3127 = !{!3128, !3138, !3139, !3143, !3147, !3151, !3155, !3156, !3160, !3161, !3208, !3212, !3213, !3214, !3215}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !3126, file: !190, line: 294, baseType: !3129, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!2614, !2788, !3132}
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3134)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !190, line: 277, size: 128, elements: !3135)
!3135 = !{!3136, !3137}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !3134, file: !190, line: 278, baseType: !2780, size: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3134, file: !190, line: 279, baseType: !793, size: 8, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !3126, file: !190, line: 304, baseType: !3023, size: 64, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !3126, file: !190, line: 312, baseType: !3140, size: 64, offset: 128)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{!793, !2776}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !3126, file: !190, line: 317, baseType: !3144, size: 64, offset: 192)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{null, !2776}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3126, file: !190, line: 322, baseType: !3148, size: 64, offset: 256)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!80, !2780, !793}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3126, file: !190, line: 327, baseType: !3152, size: 64, offset: 320)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!286, !2788}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3126, file: !190, line: 332, baseType: !3054, size: 64, offset: 384)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3126, file: !190, line: 339, baseType: !3157, size: 64, offset: 448)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 64)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{!286, !2788, !291, !7}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3126, file: !190, line: 343, baseType: !3019, size: 64, offset: 512)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !3126, file: !190, line: 352, baseType: !3162, size: 64, offset: 576)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!286, !3165, !2780, !7, !7}
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !190, line: 249, size: 2304, elements: !3167)
!3167 = !{!3168, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3203, !3204, !3206, !3207}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3166, file: !190, line: 250, baseType: !3169, size: 384)
!3169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3170, size: 384, elements: !860)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !190, line: 195, size: 128, elements: !3171)
!3171 = !{!3172, !3174, !3175}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !3170, file: !190, line: 196, baseType: !3173, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !3170, file: !190, line: 197, baseType: !7, size: 32, offset: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !3170, file: !190, line: 198, baseType: !7, size: 32, offset: 96)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !3166, file: !190, line: 251, baseType: !7, size: 32, offset: 384)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3166, file: !190, line: 252, baseType: !3124, size: 64, offset: 448)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3166, file: !190, line: 253, baseType: !7, size: 32, offset: 512)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3166, file: !190, line: 254, baseType: !7, size: 32, offset: 544)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !3166, file: !190, line: 255, baseType: !7, size: 32, offset: 576)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3166, file: !190, line: 256, baseType: !7, size: 32, offset: 608)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3166, file: !190, line: 257, baseType: !286, size: 32, offset: 640)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3166, file: !190, line: 258, baseType: !7, size: 32, offset: 672)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3166, file: !190, line: 259, baseType: !7, size: 32, offset: 704)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3166, file: !190, line: 260, baseType: !291, size: 64, offset: 768)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !3166, file: !190, line: 261, baseType: !369, size: 32, offset: 832)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !3166, file: !190, line: 263, baseType: !3188, size: 512, offset: 896)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !2818, line: 97, size: 512, elements: !3189)
!3189 = !{!3190, !3191, !3192, !3193, !3194, !3200, !3201, !3202}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !3188, file: !2818, line: 101, baseType: !2817, size: 192)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !3188, file: !2818, line: 109, baseType: !3173, size: 64, offset: 192)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !3188, file: !2818, line: 115, baseType: !7, size: 32, offset: 256)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !3188, file: !2818, line: 120, baseType: !369, size: 32, offset: 288)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !3188, file: !2818, line: 125, baseType: !3195, size: 64, offset: 320)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !2818, line: 76, size: 192, elements: !3197)
!3197 = !{!3198, !3199}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !3196, file: !2818, line: 80, baseType: !369, size: 32)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3196, file: !2818, line: 85, baseType: !1126, size: 128, offset: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !3188, file: !2818, line: 130, baseType: !369, size: 32, offset: 384)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !3188, file: !2818, line: 135, baseType: !793, size: 8, offset: 416)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !3188, file: !2818, line: 141, baseType: !7, size: 32, offset: 448)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !3166, file: !190, line: 264, baseType: !3188, size: 512, offset: 1408)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3166, file: !190, line: 265, baseType: !3205, size: 64, offset: 1920)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !3166, file: !190, line: 267, baseType: !328, size: 192, offset: 1984)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !3166, file: !190, line: 268, baseType: !301, size: 128, offset: 2176)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !3126, file: !190, line: 357, baseType: !3209, size: 64, offset: 640)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 64)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{null, !3165, !2780, !7}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !3126, file: !190, line: 363, baseType: !3054, size: 64, offset: 704)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !3126, file: !190, line: 369, baseType: !3054, size: 64, offset: 768)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !3126, file: !190, line: 374, baseType: !3140, size: 64, offset: 832)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !3126, file: !190, line: 380, baseType: !3216, size: 64, offset: 896)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 64)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{!286, !3165}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2777, file: !68, line: 411, baseType: !2785, size: 64, offset: 448)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2777, file: !68, line: 413, baseType: !7, size: 32, offset: 512)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2777, file: !68, line: 416, baseType: !3222, size: 64, offset: 576)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2777, file: !68, line: 417, baseType: !7, size: 32, offset: 640)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2777, file: !68, line: 419, baseType: !3225, size: 64, offset: 704)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !85, line: 165, size: 4672, elements: !3227)
!3227 = !{!3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3278, !3279, !3280, !3281, !3283, !3284}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3226, file: !85, line: 166, baseType: !403, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3226, file: !85, line: 167, baseType: !393, size: 192, align: 64, offset: 64)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !3226, file: !85, line: 168, baseType: !301, size: 128, offset: 256)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3226, file: !85, line: 169, baseType: !356, size: 64, offset: 384)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !3226, file: !85, line: 170, baseType: !356, size: 64, offset: 448)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3226, file: !85, line: 172, baseType: !2071, size: 32, offset: 512)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !3226, file: !85, line: 173, baseType: !7, size: 32, offset: 544)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !3226, file: !85, line: 174, baseType: !7, size: 32, offset: 576)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !3226, file: !85, line: 175, baseType: !7, size: 32, offset: 608)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !3226, file: !85, line: 175, baseType: !7, size: 32, offset: 640)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !3226, file: !85, line: 181, baseType: !332, size: 64, offset: 704)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !3226, file: !85, line: 183, baseType: !3240, size: 2688, offset: 768)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !85, line: 107, size: 2688, elements: !3241)
!3241 = !{!3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3271, !3272, !3273, !3274, !3275, !3276, !3277}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !3240, file: !85, line: 108, baseType: !3225, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3240, file: !85, line: 110, baseType: !356, size: 64, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !3240, file: !85, line: 111, baseType: !356, size: 64, offset: 128)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !3240, file: !85, line: 113, baseType: !301, size: 128, offset: 192)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !3240, file: !85, line: 114, baseType: !301, size: 128, offset: 320)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !3240, file: !85, line: 115, baseType: !301, size: 128, offset: 448)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !3240, file: !85, line: 116, baseType: !301, size: 128, offset: 576)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3240, file: !85, line: 117, baseType: !310, offset: 704)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !3240, file: !85, line: 119, baseType: !3251, size: 256, offset: 704)
!3251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3252, size: 256, elements: !1288)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3253, line: 97, size: 64, elements: !3254)
!3253 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3254 = !{!3255}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3252, file: !3253, line: 98, baseType: !338, size: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !3240, file: !85, line: 121, baseType: !356, size: 64, offset: 960)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !3240, file: !85, line: 123, baseType: !356, size: 64, offset: 1024)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !3240, file: !85, line: 124, baseType: !356, size: 64, offset: 1088)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !3240, file: !85, line: 125, baseType: !356, size: 64, offset: 1152)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !3240, file: !85, line: 126, baseType: !356, size: 64, offset: 1216)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !3240, file: !85, line: 127, baseType: !356, size: 64, offset: 1280)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !3240, file: !85, line: 135, baseType: !356, size: 64, offset: 1344)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !3240, file: !85, line: 136, baseType: !356, size: 64, offset: 1408)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !3240, file: !85, line: 138, baseType: !3265, size: 128, offset: 1472)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !3266, line: 76, size: 128, elements: !3267)
!3266 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!3267 = !{!3268, !3269, !3270}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3265, file: !3266, line: 78, baseType: !3252, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3265, file: !3266, line: 80, baseType: !7, size: 32, offset: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3265, file: !3266, line: 81, baseType: !465, offset: 96)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !3240, file: !85, line: 139, baseType: !286, size: 32, offset: 1600)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !3240, file: !85, line: 140, baseType: !84, size: 32, offset: 1632)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !3240, file: !85, line: 142, baseType: !310, offset: 1664)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !3240, file: !85, line: 143, baseType: !301, size: 128, offset: 1664)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !3240, file: !85, line: 144, baseType: !2798, size: 704, offset: 1792)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !3240, file: !85, line: 146, baseType: !356, size: 64, offset: 2496)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !3240, file: !85, line: 148, baseType: !301, size: 128, offset: 2560)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !3226, file: !85, line: 184, baseType: !301, size: 128, offset: 3456)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !3226, file: !85, line: 190, baseType: !1126, size: 128, offset: 3584)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3226, file: !85, line: 192, baseType: !2081, size: 64, offset: 3712)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3226, file: !85, line: 193, baseType: !3282, size: 512, offset: 3776)
!3282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 512, elements: !1823)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3226, file: !85, line: 194, baseType: !2081, size: 64, offset: 4288)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !3226, file: !85, line: 196, baseType: !2283, size: 320, offset: 4352)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2777, file: !68, line: 425, baseType: !291, size: 64, offset: 768)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2777, file: !68, line: 430, baseType: !356, size: 64, offset: 832)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2777, file: !68, line: 436, baseType: !369, size: 32, offset: 896)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2777, file: !68, line: 442, baseType: !286, size: 32, offset: 928)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2777, file: !68, line: 447, baseType: !605, size: 32, offset: 960)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2777, file: !68, line: 449, baseType: !310, offset: 992)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2777, file: !68, line: 454, baseType: !1782, size: 512, offset: 1024)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2777, file: !68, line: 459, baseType: !1788, size: 64, offset: 1536)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2777, file: !68, line: 462, baseType: !3294, size: 128, offset: 1600)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1749, line: 159, size: 128, elements: !3295)
!3295 = !{!3296, !3325, !3326, !3327, !3328}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3294, file: !1749, line: 160, baseType: !3297, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3299)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !68, line: 1664, size: 320, elements: !3300)
!3300 = !{!3301, !3315, !3316, !3319, !3324}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3299, file: !68, line: 1665, baseType: !3302, size: 64)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !68, line: 1660, baseType: !3304)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!2614, !3306}
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !68, line: 1651, size: 320, elements: !3308)
!3308 = !{!3309, !3310, !3311, !3312, !3313, !3314}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3307, file: !68, line: 1652, baseType: !291, size: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3307, file: !68, line: 1653, baseType: !291, size: 64, offset: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3307, file: !68, line: 1654, baseType: !1752, size: 64, offset: 128)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3307, file: !68, line: 1655, baseType: !7, size: 32, offset: 192)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3307, file: !68, line: 1656, baseType: !284, size: 16, offset: 224)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3307, file: !68, line: 1657, baseType: !748, size: 64, offset: 256)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3299, file: !68, line: 1666, baseType: !3302, size: 64, offset: 64)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3299, file: !68, line: 1667, baseType: !3317, size: 64, offset: 128)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !68, line: 1661, baseType: !3055)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3299, file: !68, line: 1668, baseType: !3320, size: 64, offset: 192)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3321 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !68, line: 1662, baseType: !3322)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{null, !2780, !7}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3299, file: !68, line: 1669, baseType: !748, size: 64, offset: 256)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3294, file: !1749, line: 161, baseType: !278, size: 8, offset: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3294, file: !1749, line: 162, baseType: !278, size: 8, offset: 72)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3294, file: !1749, line: 163, baseType: !278, size: 8, offset: 80)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3294, file: !1749, line: 164, baseType: !278, size: 8, offset: 88)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2777, file: !68, line: 466, baseType: !2081, size: 64, offset: 1728)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2777, file: !68, line: 467, baseType: !61, size: 32, offset: 1792)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2777, file: !68, line: 468, baseType: !7, size: 32, offset: 1824)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2777, file: !68, line: 474, baseType: !356, size: 64, offset: 1856)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2777, file: !68, line: 476, baseType: !7, size: 32, offset: 1920)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2777, file: !68, line: 477, baseType: !7, size: 32, offset: 1952)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2777, file: !68, line: 484, baseType: !7, size: 32, offset: 1984)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2777, file: !68, line: 485, baseType: !286, size: 32, offset: 2016)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2777, file: !68, line: 487, baseType: !3338, size: 64, offset: 2048)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !68, line: 44, flags: DIFlagFwdDecl)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2777, file: !68, line: 488, baseType: !3341, size: 5120, offset: 2112)
!3341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3342, size: 5120, elements: !279)
!3342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !169, line: 540, size: 320, elements: !3343)
!3343 = !{!3344, !3345, !3346, !3347, !3348}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3342, file: !169, line: 541, baseType: !403, size: 64)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3342, file: !169, line: 542, baseType: !403, size: 64, offset: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3342, file: !169, line: 543, baseType: !403, size: 64, offset: 128)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3342, file: !169, line: 544, baseType: !358, size: 32, offset: 192)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3342, file: !169, line: 545, baseType: !403, size: 64, offset: 256)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2777, file: !68, line: 490, baseType: !2283, size: 320, offset: 7232)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2777, file: !68, line: 491, baseType: !2316, size: 256, offset: 7552)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2777, file: !68, line: 493, baseType: !369, size: 32, offset: 7808)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2777, file: !68, line: 495, baseType: !301, size: 128, offset: 7872)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2777, file: !68, line: 502, baseType: !3354, size: 896, offset: 8000)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !68, line: 321, size: 896, elements: !3355)
!3355 = !{!3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3354, file: !68, line: 322, baseType: !356, size: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3354, file: !68, line: 323, baseType: !356, size: 64, offset: 64)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3354, file: !68, line: 324, baseType: !356, size: 64, offset: 128)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3354, file: !68, line: 326, baseType: !7, size: 32, offset: 192)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3354, file: !68, line: 327, baseType: !7, size: 32, offset: 224)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3354, file: !68, line: 328, baseType: !7, size: 32, offset: 256)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3354, file: !68, line: 329, baseType: !7, size: 32, offset: 288)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3354, file: !68, line: 330, baseType: !7, size: 32, offset: 320)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3354, file: !68, line: 331, baseType: !7, size: 32, offset: 352)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3354, file: !68, line: 332, baseType: !7, size: 32, offset: 384)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3354, file: !68, line: 333, baseType: !7, size: 32, offset: 416)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3354, file: !68, line: 334, baseType: !7, size: 32, offset: 448)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3354, file: !68, line: 335, baseType: !7, size: 32, offset: 480)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3354, file: !68, line: 336, baseType: !7, size: 32, offset: 512)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3354, file: !68, line: 337, baseType: !7, size: 32, offset: 544)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3354, file: !68, line: 338, baseType: !7, size: 32, offset: 576)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3354, file: !68, line: 339, baseType: !7, size: 32, offset: 608)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3354, file: !68, line: 340, baseType: !7, size: 32, offset: 640)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3354, file: !68, line: 341, baseType: !7, size: 32, offset: 672)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3354, file: !68, line: 342, baseType: !7, size: 32, offset: 704)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3354, file: !68, line: 344, baseType: !284, size: 16, offset: 736)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3354, file: !68, line: 345, baseType: !284, size: 16, offset: 752)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3354, file: !68, line: 346, baseType: !284, size: 16, offset: 768)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3354, file: !68, line: 348, baseType: !278, size: 8, offset: 784)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3354, file: !68, line: 349, baseType: !278, size: 8, offset: 792)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3354, file: !68, line: 350, baseType: !278, size: 8, offset: 800)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3354, file: !68, line: 351, baseType: !96, size: 32, offset: 832)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2777, file: !68, line: 504, baseType: !7, size: 32, offset: 8896)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2777, file: !68, line: 534, baseType: !7, size: 32, offset: 8928)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2777, file: !68, line: 535, baseType: !7, size: 32, offset: 8960)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2777, file: !68, line: 536, baseType: !286, size: 32, offset: 8992)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2777, file: !68, line: 537, baseType: !328, size: 192, offset: 9024)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2777, file: !68, line: 544, baseType: !2813, size: 64, offset: 9216)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2777, file: !68, line: 546, baseType: !301, size: 128, offset: 9280)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2777, file: !68, line: 547, baseType: !310, offset: 9408)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2777, file: !68, line: 548, baseType: !2798, size: 704, offset: 9408)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2777, file: !68, line: 550, baseType: !328, size: 192, offset: 10112)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2777, file: !68, line: 551, baseType: !328, size: 192, offset: 10304)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2777, file: !68, line: 557, baseType: !301, size: 128, offset: 10496)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2777, file: !68, line: 558, baseType: !310, offset: 10624)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2777, file: !68, line: 560, baseType: !286, size: 32, offset: 10624)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2777, file: !68, line: 563, baseType: !3398, size: 256, offset: 10688)
!3398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3399, line: 18, size: 256, elements: !3400)
!3399 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3400 = !{!3401, !3402, !3403, !3404}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3398, file: !3399, line: 19, baseType: !2081, size: 64)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3398, file: !3399, line: 20, baseType: !286, size: 32, offset: 64)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3398, file: !3399, line: 21, baseType: !2776, size: 64, offset: 128)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3398, file: !3399, line: 22, baseType: !3405, size: 64, offset: 192)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3407)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3399, line: 10, size: 256, elements: !3408)
!3408 = !{!3409, !3450, !3454, !3458}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3407, file: !3399, line: 11, baseType: !3410, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 64)
!3411 = !DISubroutineType(types: !3412)
!3412 = !{!286, !3413}
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3415, line: 22, size: 1280, elements: !3416)
!3415 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3416 = !{!3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3414, file: !3415, line: 23, baseType: !1345, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3414, file: !3415, line: 24, baseType: !359, size: 32, offset: 32)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3414, file: !3415, line: 25, baseType: !359, size: 32, offset: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3414, file: !3415, line: 28, baseType: !359, size: 32, offset: 96)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3414, file: !3415, line: 29, baseType: !404, size: 64, offset: 128)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3414, file: !3415, line: 30, baseType: !404, size: 64, offset: 192)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3414, file: !3415, line: 31, baseType: !359, size: 32, offset: 256)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3414, file: !3415, line: 32, baseType: !359, size: 32, offset: 288)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3414, file: !3415, line: 33, baseType: !359, size: 32, offset: 320)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3414, file: !3415, line: 34, baseType: !359, size: 32, offset: 352)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3414, file: !3415, line: 35, baseType: !404, size: 64, offset: 384)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3414, file: !3415, line: 38, baseType: !359, size: 32, offset: 448)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3414, file: !3415, line: 40, baseType: !359, size: 32, offset: 480)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3414, file: !3415, line: 41, baseType: !359, size: 32, offset: 512)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3414, file: !3415, line: 42, baseType: !359, size: 32, offset: 544)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3414, file: !3415, line: 43, baseType: !404, size: 64, offset: 576)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3414, file: !3415, line: 44, baseType: !404, size: 64, offset: 640)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3414, file: !3415, line: 46, baseType: !359, size: 32, offset: 704)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3414, file: !3415, line: 47, baseType: !359, size: 32, offset: 736)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3414, file: !3415, line: 48, baseType: !404, size: 64, offset: 768)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3414, file: !3415, line: 49, baseType: !359, size: 32, offset: 832)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3414, file: !3415, line: 51, baseType: !359, size: 32, offset: 864)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3414, file: !3415, line: 52, baseType: !359, size: 32, offset: 896)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3414, file: !3415, line: 53, baseType: !359, size: 32, offset: 928)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3414, file: !3415, line: 54, baseType: !359, size: 32, offset: 960)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3414, file: !3415, line: 55, baseType: !359, size: 32, offset: 992)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3414, file: !3415, line: 56, baseType: !359, size: 32, offset: 1024)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3414, file: !3415, line: 57, baseType: !359, size: 32, offset: 1056)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3414, file: !3415, line: 58, baseType: !1345, size: 32, offset: 1088)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3414, file: !3415, line: 59, baseType: !1345, size: 32, offset: 1120)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3414, file: !3415, line: 60, baseType: !404, size: 64, offset: 1152)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3414, file: !3415, line: 61, baseType: !359, size: 32, offset: 1216)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3414, file: !3415, line: 63, baseType: !359, size: 32, offset: 1248)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3407, file: !3399, line: 12, baseType: !3451, size: 64, offset: 64)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!286, !2780, !3413, !1272}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3407, file: !3399, line: 14, baseType: !3455, size: 64, offset: 128)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{!286, !2780, !3413}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3407, file: !3399, line: 15, baseType: !3054, size: 64, offset: 192)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2777, file: !68, line: 570, baseType: !975, size: 128, align: 64, offset: 10944)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2777, file: !68, line: 571, baseType: !1126, size: 128, offset: 11072)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2777, file: !68, line: 576, baseType: !328, size: 192, offset: 11200)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2777, file: !68, line: 578, baseType: !3165, size: 64, offset: 11392)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2777, file: !68, line: 579, baseType: !301, size: 128, offset: 11456)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2777, file: !68, line: 580, baseType: !2662, size: 2368, offset: 11584)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2777, file: !68, line: 582, baseType: !676, size: 64, offset: 13952)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2777, file: !68, line: 589, baseType: !793, size: 8, offset: 14016)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2777, file: !68, line: 591, baseType: !928, size: 64, offset: 14080)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2777, file: !68, line: 594, baseType: !3469, size: 320, offset: 14144)
!3469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 320, elements: !3470)
!3470 = !{!3471}
!3471 = !DISubrange(count: 5)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2574, file: !1749, line: 191, baseType: !291, size: 64, offset: 7168)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2574, file: !1749, line: 193, baseType: !286, size: 32, offset: 7232)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2574, file: !1749, line: 194, baseType: !356, size: 64, offset: 7296)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2574, file: !1749, line: 196, baseType: !1352, size: 256, offset: 7360)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2574, file: !1749, line: 197, baseType: !1788, size: 64, offset: 7616)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2574, file: !1749, line: 199, baseType: !3478, size: 64, offset: 7680)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1749, line: 199, flags: DIFlagFwdDecl)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2574, file: !1749, line: 200, baseType: !369, size: 32, offset: 7744)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2574, file: !1749, line: 201, baseType: !3482, size: 64, offset: 7808)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3483 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1749, line: 156, flags: DIFlagFwdDecl)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2574, file: !1749, line: 203, baseType: !1782, size: 512, offset: 7872)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2574, file: !1749, line: 208, baseType: !286, size: 32, offset: 8384)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2574, file: !1749, line: 209, baseType: !3487, size: 64, offset: 8448)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1749, line: 157, flags: DIFlagFwdDecl)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2574, file: !1749, line: 210, baseType: !3490, offset: 8512)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !855, line: 192, elements: !324)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1732, file: !169, line: 43, baseType: !3225, size: 64, offset: 1024)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1732, file: !169, line: 46, baseType: !286, size: 32, offset: 1088)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1732, file: !169, line: 48, baseType: !328, size: 192, offset: 1152)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !803, file: !12, line: 1452, baseType: !3225, size: 64, offset: 1536)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !803, file: !12, line: 1453, baseType: !3496, size: 64, offset: 1600)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !12, line: 1453, flags: DIFlagFwdDecl)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !803, file: !12, line: 1454, baseType: !848, size: 128, offset: 1664)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !803, file: !12, line: 1455, baseType: !7, size: 32, offset: 1792)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !803, file: !12, line: 1456, baseType: !3501, size: 2432, offset: 1856)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !29, line: 518, size: 2432, elements: !3502)
!3502 = !{!3503, !3504, !3505, !3507, !3539}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3501, file: !29, line: 519, baseType: !7, size: 32)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3501, file: !29, line: 520, baseType: !1352, size: 256, offset: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3501, file: !29, line: 521, baseType: !3506, size: 192, offset: 320)
!3506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, size: 192, elements: !860)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3501, file: !29, line: 522, baseType: !3508, size: 1728, offset: 512)
!3508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3509, size: 1728, elements: !860)
!3509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !29, line: 222, size: 576, elements: !3510)
!3510 = !{!3511, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3509, file: !29, line: 223, baseType: !3512, size: 64)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !29, line: 443, size: 256, elements: !3514)
!3514 = !{!3515, !3516, !3529, !3530}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3513, file: !29, line: 444, baseType: !286, size: 32)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3513, file: !29, line: 445, baseType: !3517, size: 64, offset: 64)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3519)
!3519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !29, line: 310, size: 512, elements: !3520)
!3520 = !{!3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3519, file: !29, line: 311, baseType: !896, size: 64)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3519, file: !29, line: 312, baseType: !896, size: 64, offset: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3519, file: !29, line: 313, baseType: !896, size: 64, offset: 128)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3519, file: !29, line: 314, baseType: !896, size: 64, offset: 192)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3519, file: !29, line: 315, baseType: !1550, size: 64, offset: 256)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3519, file: !29, line: 316, baseType: !1550, size: 64, offset: 320)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3519, file: !29, line: 317, baseType: !1550, size: 64, offset: 384)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3519, file: !29, line: 318, baseType: !1622, size: 64, offset: 448)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3513, file: !29, line: 446, baseType: !839, size: 64, offset: 128)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3513, file: !29, line: 447, baseType: !3512, size: 64, offset: 192)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3509, file: !29, line: 224, baseType: !286, size: 32, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3509, file: !29, line: 226, baseType: !301, size: 128, offset: 128)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3509, file: !29, line: 227, baseType: !356, size: 64, offset: 256)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3509, file: !29, line: 228, baseType: !7, size: 32, offset: 320)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3509, file: !29, line: 229, baseType: !7, size: 32, offset: 352)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3509, file: !29, line: 230, baseType: !1586, size: 64, offset: 384)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3509, file: !29, line: 231, baseType: !1586, size: 64, offset: 448)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3509, file: !29, line: 232, baseType: !291, size: 64, offset: 512)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3501, file: !29, line: 523, baseType: !3540, size: 192, offset: 2240)
!3540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3517, size: 192, elements: !860)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !803, file: !12, line: 1458, baseType: !3542, size: 2112, offset: 4288)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !12, line: 1410, size: 2112, elements: !3543)
!3543 = !{!3544, !3545, !3546}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3542, file: !12, line: 1411, baseType: !286, size: 32)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3542, file: !12, line: 1412, baseType: !1126, size: 128, offset: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3542, file: !12, line: 1413, baseType: !3547, size: 1920, offset: 192)
!3547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3548, size: 1920, elements: !860)
!3548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3549, line: 12, size: 640, elements: !3550)
!3549 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3550 = !{!3551, !3559, !3560, !3565, !3566}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3548, file: !3549, line: 13, baseType: !3552, size: 320)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3553, line: 17, size: 320, elements: !3554)
!3553 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3554 = !{!3555, !3556, !3557, !3558}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3552, file: !3553, line: 18, baseType: !286, size: 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3552, file: !3553, line: 19, baseType: !286, size: 32, offset: 32)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3552, file: !3553, line: 20, baseType: !1126, size: 128, offset: 64)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3552, file: !3553, line: 22, baseType: !975, size: 128, align: 64, offset: 192)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3548, file: !3549, line: 14, baseType: !3173, size: 64, offset: 320)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3548, file: !3549, line: 15, baseType: !3561, size: 64, offset: 384)
!3561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3562, line: 16, size: 64, elements: !3563)
!3562 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3563 = !{!3564}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3561, file: !3562, line: 17, baseType: !347, size: 64)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3548, file: !3549, line: 16, baseType: !1126, size: 128, offset: 448)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3548, file: !3549, line: 17, baseType: !369, size: 32, offset: 576)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !803, file: !12, line: 1465, baseType: !291, size: 64, offset: 6400)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !803, file: !12, line: 1468, baseType: !358, size: 32, offset: 6464)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !803, file: !12, line: 1470, baseType: !1367, size: 64, offset: 6528)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !803, file: !12, line: 1471, baseType: !1367, size: 64, offset: 6592)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !803, file: !12, line: 1473, baseType: !359, size: 32, offset: 6656)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !803, file: !12, line: 1474, baseType: !3573, size: 64, offset: 6720)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !12, line: 603, flags: DIFlagFwdDecl)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !803, file: !12, line: 1477, baseType: !2168, size: 256, offset: 6784)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !803, file: !12, line: 1478, baseType: !3577, size: 128, offset: 7040)
!3577 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3578, line: 18, baseType: !3579)
!3578 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3578, line: 16, size: 128, elements: !3580)
!3580 = !{!3581}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3579, file: !3578, line: 17, baseType: !3582, size: 128)
!3582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 128, elements: !279)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !803, file: !12, line: 1480, baseType: !7, size: 32, offset: 7168)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !803, file: !12, line: 1481, baseType: !1272, size: 32, offset: 7200)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !803, file: !12, line: 1487, baseType: !328, size: 192, offset: 7232)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !803, file: !12, line: 1493, baseType: !748, size: 64, offset: 7424)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !803, file: !12, line: 1495, baseType: !728, size: 64, offset: 7488)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !803, file: !12, line: 1500, baseType: !286, size: 32, offset: 7552)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !803, file: !12, line: 1502, baseType: !3590, size: 448, offset: 7616)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !1534, line: 60, size: 448, elements: !3591)
!3591 = !{!3592, !3597, !3598, !3599, !3600, !3601, !3602}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3590, file: !1534, line: 61, baseType: !3593, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!356, !3596, !1532}
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3590, file: !1534, line: 63, baseType: !3593, size: 64, offset: 64)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3590, file: !1534, line: 66, baseType: !197, size: 64, offset: 128)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3590, file: !1534, line: 67, baseType: !286, size: 32, offset: 192)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3590, file: !1534, line: 68, baseType: !7, size: 32, offset: 224)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3590, file: !1534, line: 71, baseType: !301, size: 128, offset: 256)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3590, file: !1534, line: 77, baseType: !3603, size: 64, offset: 384)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !803, file: !12, line: 1505, baseType: !332, size: 64, offset: 8064)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !803, file: !12, line: 1508, baseType: !332, size: 64, offset: 8128)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !803, file: !12, line: 1511, baseType: !286, size: 32, offset: 8192)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !803, file: !12, line: 1514, baseType: !1517, size: 32, offset: 8224)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !803, file: !12, line: 1517, baseType: !2568, size: 64, offset: 8256)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !803, file: !12, line: 1518, baseType: !844, size: 64, offset: 8320)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !803, file: !12, line: 1525, baseType: !1485, size: 64, offset: 8384)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !803, file: !12, line: 1532, baseType: !3612, size: 64, offset: 8448)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3613, line: 52, size: 64, elements: !3614)
!3613 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3614 = !{!3615}
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3612, file: !3613, line: 53, baseType: !3616, size: 64)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3613, line: 40, size: 256, elements: !3618)
!3618 = !{!3619, !3620, !3625}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3617, file: !3613, line: 42, baseType: !310)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3617, file: !3613, line: 44, baseType: !3621, size: 192)
!3621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3613, line: 28, size: 192, elements: !3622)
!3622 = !{!3623, !3624}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3621, file: !3613, line: 29, baseType: !301, size: 128)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3621, file: !3613, line: 31, baseType: !197, size: 64, offset: 128)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3617, file: !3613, line: 49, baseType: !197, size: 64, offset: 192)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !803, file: !12, line: 1533, baseType: !3612, size: 64, offset: 8512)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !803, file: !12, line: 1534, baseType: !975, size: 128, align: 64, offset: 8576)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !803, file: !12, line: 1535, baseType: !2316, size: 256, offset: 8704)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !803, file: !12, line: 1537, baseType: !328, size: 192, offset: 8960)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !803, file: !12, line: 1542, baseType: !286, size: 32, offset: 9152)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !803, file: !12, line: 1545, baseType: !310, offset: 9184)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !803, file: !12, line: 1546, baseType: !301, size: 128, offset: 9216)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !803, file: !12, line: 1548, baseType: !310, offset: 9344)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !803, file: !12, line: 1549, baseType: !301, size: 128, offset: 9344)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !677, file: !678, line: 104, baseType: !356, size: 64, offset: 896)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !677, file: !678, line: 105, baseType: !291, size: 64, offset: 960)
!3637 = !DIDerivedType(tag: DW_TAG_member, scope: !677, file: !678, line: 107, baseType: !3638, size: 128, offset: 1024)
!3638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !677, file: !678, line: 107, size: 128, elements: !3639)
!3639 = !{!3640, !3641}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3638, file: !678, line: 108, baseType: !301, size: 128)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3638, file: !678, line: 109, baseType: !3642, size: 64)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !677, file: !678, line: 111, baseType: !301, size: 128, offset: 1152)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !677, file: !678, line: 112, baseType: !301, size: 128, offset: 1280)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !677, file: !678, line: 120, baseType: !3646, size: 128, offset: 1408)
!3646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !677, file: !678, line: 116, size: 128, elements: !3647)
!3647 = !{!3648, !3649, !3650}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3646, file: !678, line: 117, baseType: !848, size: 128)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3646, file: !678, line: 118, baseType: !687, size: 128)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3646, file: !678, line: 119, baseType: !975, size: 128, align: 64)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !670, file: !12, line: 1866, baseType: !3652, size: 64, offset: 64)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 64)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!748, !676, !645, !3655}
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !3657, line: 10, size: 128, elements: !3658)
!3657 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!3658 = !{!3659, !3660}
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3656, file: !3657, line: 11, baseType: !1923, size: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !3656, file: !3657, line: 12, baseType: !291, size: 64, offset: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !670, file: !12, line: 1867, baseType: !3662, size: 64, offset: 128)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = !DISubroutineType(types: !3664)
!3664 = !{!286, !645, !286}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !670, file: !12, line: 1868, baseType: !3666, size: 64, offset: 192)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!3669, !645, !286}
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 64)
!3670 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !12, line: 581, flags: DIFlagFwdDecl)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !670, file: !12, line: 1870, baseType: !3672, size: 64, offset: 256)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 64)
!3673 = !DISubroutineType(types: !3674)
!3674 = !{!286, !676, !774, !286}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !670, file: !12, line: 1872, baseType: !3676, size: 64, offset: 320)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!286, !645, !676, !649, !793}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !670, file: !12, line: 1873, baseType: !3680, size: 64, offset: 384)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!286, !676, !645, !676}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !670, file: !12, line: 1874, baseType: !3684, size: 64, offset: 448)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DISubroutineType(types: !3686)
!3686 = !{!286, !645, !676}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !670, file: !12, line: 1875, baseType: !3688, size: 64, offset: 512)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{!286, !645, !676, !748}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !670, file: !12, line: 1876, baseType: !3692, size: 64, offset: 576)
!3692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3693, size: 64)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!286, !645, !676, !649}
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !670, file: !12, line: 1877, baseType: !3684, size: 64, offset: 640)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !670, file: !12, line: 1878, baseType: !3697, size: 64, offset: 704)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 64)
!3698 = !DISubroutineType(types: !3699)
!3699 = !{!286, !645, !676, !649, !807}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !670, file: !12, line: 1879, baseType: !3701, size: 64, offset: 768)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{!286, !645, !676, !645, !676, !7}
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !670, file: !12, line: 1881, baseType: !3705, size: 64, offset: 832)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!286, !676, !3708}
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !12, line: 219, size: 640, elements: !3710)
!3710 = !{!3711, !3712, !3713, !3714, !3715, !3716, !3721, !3722, !3723}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !3709, file: !12, line: 220, baseType: !7, size: 32)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !3709, file: !12, line: 221, baseType: !649, size: 16, offset: 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !3709, file: !12, line: 222, baseType: !652, size: 32, offset: 64)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !3709, file: !12, line: 223, baseType: !660, size: 32, offset: 96)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !3709, file: !12, line: 224, baseType: !812, size: 64, offset: 128)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !3709, file: !12, line: 225, baseType: !3717, size: 128, offset: 192)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1368, line: 13, size: 128, elements: !3718)
!3718 = !{!3719, !3720}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3717, file: !1368, line: 14, baseType: !1367, size: 64)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3717, file: !1368, line: 15, baseType: !197, size: 64, offset: 64)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !3709, file: !12, line: 226, baseType: !3717, size: 128, offset: 320)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !3709, file: !12, line: 227, baseType: !3717, size: 128, offset: 448)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !3709, file: !12, line: 234, baseType: !995, size: 64, offset: 576)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !670, file: !12, line: 1882, baseType: !3725, size: 64, offset: 896)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!286, !791, !3728, !358, !7}
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !3730, line: 22, size: 1152, elements: !3731)
!3730 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!3731 = !{!3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !3729, file: !3730, line: 23, baseType: !358, size: 32)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3729, file: !3730, line: 24, baseType: !649, size: 16, offset: 32)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !3729, file: !3730, line: 25, baseType: !7, size: 32, offset: 64)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !3729, file: !3730, line: 26, baseType: !1375, size: 32, offset: 96)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !3729, file: !3730, line: 27, baseType: !403, size: 64, offset: 128)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !3729, file: !3730, line: 28, baseType: !403, size: 64, offset: 192)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3729, file: !3730, line: 37, baseType: !403, size: 64, offset: 256)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3729, file: !3730, line: 38, baseType: !807, size: 32, offset: 320)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !3729, file: !3730, line: 39, baseType: !807, size: 32, offset: 352)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3729, file: !3730, line: 40, baseType: !652, size: 32, offset: 384)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3729, file: !3730, line: 41, baseType: !660, size: 32, offset: 416)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3729, file: !3730, line: 42, baseType: !812, size: 64, offset: 448)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !3729, file: !3730, line: 43, baseType: !3717, size: 128, offset: 512)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !3729, file: !3730, line: 44, baseType: !3717, size: 128, offset: 640)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !3729, file: !3730, line: 45, baseType: !3717, size: 128, offset: 768)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !3729, file: !3730, line: 46, baseType: !3717, size: 128, offset: 896)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3729, file: !3730, line: 47, baseType: !403, size: 64, offset: 1024)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !3729, file: !3730, line: 48, baseType: !403, size: 64, offset: 1088)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !670, file: !12, line: 1883, baseType: !3751, size: 64, offset: 960)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!1000, !676, !774, !928}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !670, file: !12, line: 1884, baseType: !3755, size: 64, offset: 1024)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!286, !645, !3758, !403, !403}
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !12, line: 50, flags: DIFlagFwdDecl)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !670, file: !12, line: 1886, baseType: !3761, size: 64, offset: 1088)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{!286, !645, !3764, !286}
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !670, file: !12, line: 1887, baseType: !3766, size: 64, offset: 1152)
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 64)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!286, !645, !676, !995, !7, !649}
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !670, file: !12, line: 1890, baseType: !3692, size: 64, offset: 1216)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !670, file: !12, line: 1891, baseType: !3771, size: 64, offset: 1280)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{!286, !645, !3669, !286}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !646, file: !12, line: 623, baseType: !802, size: 64, offset: 192)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !646, file: !12, line: 624, baseType: !641, size: 64, offset: 256)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !646, file: !12, line: 631, baseType: !356, size: 64, offset: 320)
!3777 = !DIDerivedType(tag: DW_TAG_member, scope: !646, file: !12, line: 639, baseType: !3778, size: 32, offset: 384)
!3778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !646, file: !12, line: 639, size: 32, elements: !3779)
!3779 = !{!3780, !3781}
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3778, file: !12, line: 640, baseType: !3103, size: 32)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3778, file: !12, line: 641, baseType: !7, size: 32)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !646, file: !12, line: 643, baseType: !807, size: 32, offset: 416)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !646, file: !12, line: 644, baseType: !812, size: 64, offset: 448)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !646, file: !12, line: 645, baseType: !3717, size: 128, offset: 512)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !646, file: !12, line: 646, baseType: !3717, size: 128, offset: 640)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !646, file: !12, line: 647, baseType: !3717, size: 128, offset: 768)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !646, file: !12, line: 648, baseType: !310, offset: 896)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !646, file: !12, line: 649, baseType: !284, size: 16, offset: 896)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !646, file: !12, line: 650, baseType: !514, size: 8, offset: 912)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !646, file: !12, line: 651, baseType: !514, size: 8, offset: 920)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !646, file: !12, line: 652, baseType: !1706, size: 64, offset: 960)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !646, file: !12, line: 659, baseType: !356, size: 64, offset: 1024)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !646, file: !12, line: 660, baseType: !1352, size: 256, offset: 1088)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !646, file: !12, line: 662, baseType: !356, size: 64, offset: 1344)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !646, file: !12, line: 663, baseType: !356, size: 64, offset: 1408)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !646, file: !12, line: 665, baseType: !848, size: 128, offset: 1472)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !646, file: !12, line: 666, baseType: !301, size: 128, offset: 1600)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !646, file: !12, line: 675, baseType: !301, size: 128, offset: 1728)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !646, file: !12, line: 676, baseType: !301, size: 128, offset: 1856)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !646, file: !12, line: 677, baseType: !301, size: 128, offset: 1984)
!3801 = !DIDerivedType(tag: DW_TAG_member, scope: !646, file: !12, line: 678, baseType: !3802, size: 128, offset: 2112)
!3802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !646, file: !12, line: 678, size: 128, elements: !3803)
!3803 = !{!3804, !3805}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3802, file: !12, line: 679, baseType: !844, size: 64)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3802, file: !12, line: 680, baseType: !975, size: 128, align: 64)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !646, file: !12, line: 682, baseType: !334, size: 64, offset: 2240)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !646, file: !12, line: 683, baseType: !334, size: 64, offset: 2304)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !646, file: !12, line: 684, baseType: !369, size: 32, offset: 2368)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !646, file: !12, line: 685, baseType: !369, size: 32, offset: 2400)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !646, file: !12, line: 686, baseType: !369, size: 32, offset: 2432)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !646, file: !12, line: 688, baseType: !369, size: 32, offset: 2464)
!3812 = !DIDerivedType(tag: DW_TAG_member, scope: !646, file: !12, line: 690, baseType: !3813, size: 64, offset: 2496)
!3813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !646, file: !12, line: 690, size: 64, elements: !3814)
!3814 = !{!3815, !3816}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3813, file: !12, line: 691, baseType: !986, size: 64)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3813, file: !12, line: 692, baseType: !875, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !646, file: !12, line: 694, baseType: !3818, size: 64, offset: 2560)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !12, line: 1100, size: 384, elements: !3820)
!3820 = !{!3821, !3822, !3823, !3824}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3819, file: !12, line: 1101, baseType: !310)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3819, file: !12, line: 1102, baseType: !301, size: 128)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3819, file: !12, line: 1103, baseType: !301, size: 128, offset: 128)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3819, file: !12, line: 1104, baseType: !301, size: 128, offset: 256)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !646, file: !12, line: 695, baseType: !642, size: 1216, align: 64, offset: 2624)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !646, file: !12, line: 696, baseType: !301, size: 128, offset: 3840)
!3827 = !DIDerivedType(tag: DW_TAG_member, scope: !646, file: !12, line: 697, baseType: !3828, size: 64, offset: 3968)
!3828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !646, file: !12, line: 697, size: 64, elements: !3829)
!3829 = !{!3830, !3831, !3832, !3835, !3836}
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3828, file: !12, line: 698, baseType: !1239, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3828, file: !12, line: 699, baseType: !1731, size: 64)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3828, file: !12, line: 700, baseType: !3833, size: 64)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !12, line: 700, flags: DIFlagFwdDecl)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3828, file: !12, line: 701, baseType: !774, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3828, file: !12, line: 702, baseType: !7, size: 32)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !646, file: !12, line: 705, baseType: !359, size: 32, offset: 4032)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !646, file: !12, line: 708, baseType: !359, size: 32, offset: 4064)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !646, file: !12, line: 709, baseType: !3573, size: 64, offset: 4096)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !646, file: !12, line: 720, baseType: !291, size: 64, offset: 4160)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !642, file: !12, line: 453, baseType: !1967, size: 128, offset: 64)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !642, file: !12, line: 454, baseType: !605, size: 32, offset: 192)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !642, file: !12, line: 455, baseType: !369, size: 32, offset: 224)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !642, file: !12, line: 460, baseType: !501, size: 128, offset: 256)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !642, file: !12, line: 461, baseType: !1352, size: 256, offset: 384)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !642, file: !12, line: 462, baseType: !356, size: 64, offset: 640)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !642, file: !12, line: 463, baseType: !356, size: 64, offset: 704)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !642, file: !12, line: 464, baseType: !356, size: 64, offset: 768)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !642, file: !12, line: 465, baseType: !3850, size: 64, offset: 832)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3852)
!3852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !12, line: 367, size: 1408, elements: !3853)
!3853 = !{!3854, !3858, !3862, !3866, !3870, !3874, !3886, !3891, !3895, !3899, !3903, !3907, !3911, !3912, !3916, !3922, !3923, !3924, !3928, !3933, !3937, !3944}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !3852, file: !12, line: 368, baseType: !3855, size: 64)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{!286, !629, !887}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !3852, file: !12, line: 369, baseType: !3859, size: 64, offset: 64)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!286, !995, !629}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !3852, file: !12, line: 372, baseType: !3863, size: 64, offset: 128)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!286, !641, !887}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !3852, file: !12, line: 375, baseType: !3867, size: 64, offset: 192)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!286, !629}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !3852, file: !12, line: 381, baseType: !3871, size: 64, offset: 256)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{!286, !995, !641, !305, !7}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !3852, file: !12, line: 383, baseType: !3875, size: 64, offset: 320)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DISubroutineType(types: !3877)
!3877 = !{null, !3878}
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1033, line: 795, size: 256, elements: !3880)
!3880 = !{!3881, !3882, !3883, !3884, !3885}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3879, file: !1033, line: 796, baseType: !995, size: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !3879, file: !1033, line: 797, baseType: !641, size: 64, offset: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !3879, file: !1033, line: 799, baseType: !356, size: 64, offset: 128)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !3879, file: !1033, line: 800, baseType: !7, size: 32, offset: 192)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !3879, file: !1033, line: 801, baseType: !7, size: 32, offset: 224)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !3852, file: !12, line: 385, baseType: !3887, size: 64, offset: 384)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!286, !995, !641, !812, !7, !7, !3890, !1196}
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !3852, file: !12, line: 388, baseType: !3892, size: 64, offset: 448)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!286, !995, !641, !812, !7, !7, !629, !291}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !3852, file: !12, line: 393, baseType: !3896, size: 64, offset: 512)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{!1752, !641, !1752}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !3852, file: !12, line: 394, baseType: !3900, size: 64, offset: 576)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{null, !629, !7, !7}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !3852, file: !12, line: 395, baseType: !3904, size: 64, offset: 640)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!286, !629, !605}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !3852, file: !12, line: 396, baseType: !3908, size: 64, offset: 704)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{null, !629}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !3852, file: !12, line: 397, baseType: !1008, size: 64, offset: 768)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !3852, file: !12, line: 402, baseType: !3913, size: 64, offset: 832)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DISubroutineType(types: !3915)
!3915 = !{!286, !641, !629, !629, !101}
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !3852, file: !12, line: 404, baseType: !3917, size: 64, offset: 896)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{!793, !629, !3920}
!3920 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !3921, line: 305, baseType: !7)
!3921 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !3852, file: !12, line: 405, baseType: !3908, size: 64, offset: 960)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !3852, file: !12, line: 406, baseType: !3867, size: 64, offset: 1024)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !3852, file: !12, line: 407, baseType: !3925, size: 64, offset: 1088)
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3926, size: 64)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{!286, !629, !356, !356}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !3852, file: !12, line: 409, baseType: !3929, size: 64, offset: 1152)
!3929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3930, size: 64)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{null, !629, !3932, !3932}
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !3852, file: !12, line: 410, baseType: !3934, size: 64, offset: 1216)
!3934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3935, size: 64)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!286, !641, !629}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !3852, file: !12, line: 413, baseType: !3938, size: 64, offset: 1280)
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!286, !3941, !995, !3943}
!3941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!3942 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !12, line: 61, flags: DIFlagFwdDecl)
!3943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !3852, file: !12, line: 415, baseType: !3945, size: 64, offset: 1344)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DISubroutineType(types: !3947)
!3947 = !{null, !995}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !642, file: !12, line: 466, baseType: !356, size: 64, offset: 896)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !642, file: !12, line: 467, baseType: !1517, size: 32, offset: 960)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !642, file: !12, line: 468, baseType: !310, offset: 992)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !642, file: !12, line: 469, baseType: !301, size: 128, offset: 1024)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !642, file: !12, line: 470, baseType: !291, size: 64, offset: 1152)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !637, file: !542, line: 87, baseType: !356, size: 64, offset: 192)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !637, file: !542, line: 94, baseType: !356, size: 64, offset: 256)
!3955 = !DIDerivedType(tag: DW_TAG_member, scope: !634, file: !542, line: 96, baseType: !3956, size: 64)
!3956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !634, file: !542, line: 96, size: 64, elements: !3957)
!3957 = !{!3958}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !3956, file: !542, line: 101, baseType: !3959, size: 64)
!3959 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !302, line: 143, baseType: !403)
!3960 = !DIDerivedType(tag: DW_TAG_member, scope: !634, file: !542, line: 103, baseType: !3961, size: 320)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !634, file: !542, line: 103, size: 320, elements: !3962)
!3962 = !{!3963, !3973, !3974, !3975}
!3963 = !DIDerivedType(tag: DW_TAG_member, scope: !3961, file: !542, line: 104, baseType: !3964, size: 128)
!3964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3961, file: !542, line: 104, size: 128, elements: !3965)
!3965 = !{!3966, !3967}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !3964, file: !542, line: 105, baseType: !301, size: 128)
!3967 = !DIDerivedType(tag: DW_TAG_member, scope: !3964, file: !542, line: 106, baseType: !3968, size: 128)
!3968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3964, file: !542, line: 106, size: 128, elements: !3969)
!3969 = !{!3970, !3971, !3972}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3968, file: !542, line: 107, baseType: !629, size: 64)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3968, file: !542, line: 109, baseType: !286, size: 32, offset: 64)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !3968, file: !542, line: 110, baseType: !286, size: 32, offset: 96)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !3961, file: !542, line: 117, baseType: !2665, size: 64, offset: 128)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !3961, file: !542, line: 119, baseType: !291, size: 64, offset: 192)
!3975 = !DIDerivedType(tag: DW_TAG_member, scope: !3961, file: !542, line: 120, baseType: !3976, size: 64, offset: 256)
!3976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3961, file: !542, line: 120, size: 64, elements: !3977)
!3977 = !{!3978, !3979, !3980}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !3976, file: !542, line: 121, baseType: !291, size: 64)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !3976, file: !542, line: 122, baseType: !356, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, scope: !3976, file: !542, line: 123, baseType: !3981, size: 32)
!3981 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3976, file: !542, line: 123, size: 32, elements: !3982)
!3982 = !{!3983, !3984, !3985}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !3981, file: !542, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3981, file: !542, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3981, file: !542, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3986 = !DIDerivedType(tag: DW_TAG_member, scope: !634, file: !542, line: 130, baseType: !3987, size: 192)
!3987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !634, file: !542, line: 130, size: 192, elements: !3988)
!3988 = !{!3989, !3990, !3991, !3992, !3993}
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !3987, file: !542, line: 131, baseType: !356, size: 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !3987, file: !542, line: 134, baseType: !278, size: 8, offset: 64)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !3987, file: !542, line: 135, baseType: !278, size: 8, offset: 72)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !3987, file: !542, line: 136, baseType: !369, size: 32, offset: 96)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !3987, file: !542, line: 137, baseType: !7, size: 32, offset: 128)
!3994 = !DIDerivedType(tag: DW_TAG_member, scope: !634, file: !542, line: 139, baseType: !3995, size: 256)
!3995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !634, file: !542, line: 139, size: 256, elements: !3996)
!3996 = !{!3997, !3998, !3999}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !3995, file: !542, line: 140, baseType: !356, size: 64)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !3995, file: !542, line: 141, baseType: !369, size: 32, offset: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !3995, file: !542, line: 143, baseType: !301, size: 128, offset: 128)
!4000 = !DIDerivedType(tag: DW_TAG_member, scope: !634, file: !542, line: 145, baseType: !4001, size: 256)
!4001 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !634, file: !542, line: 145, size: 256, elements: !4002)
!4002 = !{!4003, !4004, !4006, !4007, !4012}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !4001, file: !542, line: 146, baseType: !356, size: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !4001, file: !542, line: 147, baseType: !4005, size: 64, offset: 64)
!4005 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !560, line: 509, baseType: !629)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !4001, file: !542, line: 148, baseType: !356, size: 64, offset: 128)
!4007 = !DIDerivedType(tag: DW_TAG_member, scope: !4001, file: !542, line: 149, baseType: !4008, size: 64, offset: 192)
!4008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4001, file: !542, line: 149, size: 64, elements: !4009)
!4009 = !{!4010, !4011}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !4008, file: !542, line: 150, baseType: !540, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !4008, file: !542, line: 151, baseType: !369, size: 32)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4001, file: !542, line: 156, baseType: !310, offset: 256)
!4013 = !DIDerivedType(tag: DW_TAG_member, scope: !634, file: !542, line: 159, baseType: !4014, size: 128)
!4014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !634, file: !542, line: 159, size: 128, elements: !4015)
!4015 = !{!4016, !4060}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4014, file: !542, line: 161, baseType: !4017, size: 64)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !109, line: 110, size: 1152, elements: !4019)
!4019 = !{!4020, !4030, !4031, !4032, !4033, !4034, !4035, !4047, !4048, !4049}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4018, file: !109, line: 111, baseType: !4021, size: 384)
!4021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !109, line: 19, size: 384, elements: !4022)
!4022 = !{!4023, !4025, !4026, !4027, !4028, !4029}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4021, file: !109, line: 20, baseType: !4024, size: 64)
!4024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !356)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4021, file: !109, line: 21, baseType: !4024, size: 64, offset: 64)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4021, file: !109, line: 22, baseType: !4024, size: 64, offset: 128)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4021, file: !109, line: 23, baseType: !356, size: 64, offset: 192)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4021, file: !109, line: 24, baseType: !356, size: 64, offset: 256)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4021, file: !109, line: 25, baseType: !356, size: 64, offset: 320)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4018, file: !109, line: 112, baseType: !1772, size: 64, offset: 384)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4018, file: !109, line: 113, baseType: !1759, size: 128, offset: 448)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4018, file: !109, line: 114, baseType: !2260, size: 192, offset: 576)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4018, file: !109, line: 115, baseType: !108, size: 32, offset: 768)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4018, file: !109, line: 116, baseType: !7, size: 32, offset: 800)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4018, file: !109, line: 117, baseType: !4036, size: 64, offset: 832)
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4038)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !109, line: 67, size: 256, elements: !4039)
!4039 = !{!4040, !4041, !4045, !4046}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4038, file: !109, line: 73, baseType: !3908, size: 64)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4038, file: !109, line: 78, baseType: !4042, size: 64, offset: 64)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{null, !4017}
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4038, file: !109, line: 83, baseType: !4042, size: 64, offset: 128)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4038, file: !109, line: 89, baseType: !595, size: 64, offset: 192)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4018, file: !109, line: 118, baseType: !291, size: 64, offset: 896)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4018, file: !109, line: 119, baseType: !286, size: 32, offset: 960)
!4049 = !DIDerivedType(tag: DW_TAG_member, scope: !4018, file: !109, line: 120, baseType: !4050, size: 128, offset: 1024)
!4050 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4018, file: !109, line: 120, size: 128, elements: !4051)
!4051 = !{!4052, !4058}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4050, file: !109, line: 121, baseType: !4053, size: 128)
!4053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4054, line: 6, size: 128, elements: !4055)
!4054 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4055 = !{!4056, !4057}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4053, file: !4054, line: 7, baseType: !403, size: 64)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4053, file: !4054, line: 8, baseType: !403, size: 64, offset: 64)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4050, file: !109, line: 122, baseType: !4059)
!4059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4053, elements: !1495)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4014, file: !542, line: 162, baseType: !291, size: 64, offset: 64)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !634, file: !542, line: 176, baseType: !975, size: 128, align: 64)
!4062 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !542, line: 179, baseType: !4063, size: 32, offset: 384)
!4063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !630, file: !542, line: 179, size: 32, elements: !4064)
!4064 = !{!4065, !4066, !4067, !4068}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4063, file: !542, line: 184, baseType: !369, size: 32)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4063, file: !542, line: 192, baseType: !7, size: 32)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4063, file: !542, line: 194, baseType: !7, size: 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4063, file: !542, line: 195, baseType: !286, size: 32)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !630, file: !542, line: 199, baseType: !369, size: 32, offset: 416)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !600, file: !116, line: 522, baseType: !629, size: 64, offset: 512)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !600, file: !116, line: 528, baseType: !4072, size: 64, offset: 576)
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !600, file: !116, line: 532, baseType: !326, size: 64, offset: 640)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !600, file: !116, line: 536, baseType: !4005, size: 64, offset: 704)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !579, file: !116, line: 563, baseType: !4076, size: 64, offset: 320)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 64)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!598, !599, !115}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !579, file: !116, line: 565, baseType: !4080, size: 64, offset: 384)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{null, !599, !356, !356}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !579, file: !116, line: 567, baseType: !4084, size: 64, offset: 448)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{!356, !548}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !579, file: !116, line: 571, baseType: !595, size: 64, offset: 512)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !579, file: !116, line: 574, baseType: !595, size: 64, offset: 576)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !579, file: !116, line: 579, baseType: !4090, size: 64, offset: 640)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!286, !548, !356, !291, !286, !286}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !579, file: !116, line: 585, baseType: !4094, size: 64, offset: 704)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DISubroutineType(types: !4096)
!4096 = !{!748, !548}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !579, file: !116, line: 615, baseType: !4098, size: 64, offset: 768)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!629, !548, !356}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !549, file: !542, line: 359, baseType: !356, size: 64, offset: 1216)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !549, file: !542, line: 361, baseType: !995, size: 64, offset: 1280)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !549, file: !542, line: 362, baseType: !291, size: 64, offset: 1344)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !549, file: !542, line: 365, baseType: !332, size: 64, offset: 1408)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !549, file: !542, line: 373, baseType: !4106, offset: 1472)
!4106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !542, line: 296, elements: !324)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !545, file: !542, line: 391, baseType: !504, size: 64, offset: 64)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !545, file: !542, line: 392, baseType: !403, size: 64, offset: 128)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !545, file: !542, line: 394, baseType: !1227, size: 64, offset: 192)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !545, file: !542, line: 398, baseType: !356, size: 64, offset: 256)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !545, file: !542, line: 399, baseType: !356, size: 64, offset: 320)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !545, file: !542, line: 405, baseType: !356, size: 64, offset: 384)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !545, file: !542, line: 406, baseType: !356, size: 64, offset: 448)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !545, file: !542, line: 407, baseType: !4115, size: 64, offset: 512)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4116, size: 64)
!4116 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !560, line: 286, baseType: !4117)
!4117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !560, line: 286, size: 64, elements: !4118)
!4118 = !{!4119}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !4117, file: !560, line: 286, baseType: !4120, size: 64)
!4120 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !565, line: 18, baseType: !356)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !545, file: !542, line: 416, baseType: !369, size: 32, offset: 576)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !545, file: !542, line: 428, baseType: !369, size: 32, offset: 608)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !545, file: !542, line: 437, baseType: !369, size: 32, offset: 640)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !545, file: !542, line: 447, baseType: !369, size: 32, offset: 672)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !545, file: !542, line: 450, baseType: !332, size: 64, offset: 704)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !545, file: !542, line: 452, baseType: !286, size: 32, offset: 768)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !545, file: !542, line: 454, baseType: !310, offset: 800)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !545, file: !542, line: 457, baseType: !1352, size: 256, offset: 832)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !545, file: !542, line: 459, baseType: !301, size: 128, offset: 1088)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !545, file: !542, line: 466, baseType: !356, size: 64, offset: 1216)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !545, file: !542, line: 467, baseType: !356, size: 64, offset: 1280)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !545, file: !542, line: 469, baseType: !356, size: 64, offset: 1344)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !545, file: !542, line: 470, baseType: !356, size: 64, offset: 1408)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !545, file: !542, line: 471, baseType: !334, size: 64, offset: 1472)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !545, file: !542, line: 472, baseType: !356, size: 64, offset: 1536)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !545, file: !542, line: 473, baseType: !356, size: 64, offset: 1600)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !545, file: !542, line: 474, baseType: !356, size: 64, offset: 1664)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !545, file: !542, line: 475, baseType: !356, size: 64, offset: 1728)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !545, file: !542, line: 477, baseType: !310, offset: 1792)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !545, file: !542, line: 478, baseType: !356, size: 64, offset: 1792)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !545, file: !542, line: 478, baseType: !356, size: 64, offset: 1856)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !545, file: !542, line: 478, baseType: !356, size: 64, offset: 1920)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !545, file: !542, line: 478, baseType: !356, size: 64, offset: 1984)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !545, file: !542, line: 479, baseType: !356, size: 64, offset: 2048)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !545, file: !542, line: 479, baseType: !356, size: 64, offset: 2112)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !545, file: !542, line: 479, baseType: !356, size: 64, offset: 2176)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !545, file: !542, line: 480, baseType: !356, size: 64, offset: 2240)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !545, file: !542, line: 480, baseType: !356, size: 64, offset: 2304)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !545, file: !542, line: 480, baseType: !356, size: 64, offset: 2368)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !545, file: !542, line: 480, baseType: !356, size: 64, offset: 2432)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !545, file: !542, line: 482, baseType: !4152, size: 2816, offset: 2496)
!4152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 2816, elements: !4153)
!4153 = !{!4154}
!4154 = !DISubrange(count: 44)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !545, file: !542, line: 488, baseType: !4156, size: 256, offset: 5312)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !4157, line: 60, size: 256, elements: !4158)
!4157 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!4158 = !{!4159}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4156, file: !4157, line: 61, baseType: !4160, size: 256)
!4160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 256, elements: !1288)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !545, file: !542, line: 490, baseType: !4162, size: 64, offset: 5568)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !542, line: 490, flags: DIFlagFwdDecl)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !545, file: !542, line: 493, baseType: !4165, size: 896, offset: 5632)
!4165 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !4166, line: 53, baseType: !4167)
!4166 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!4167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4166, line: 13, size: 896, elements: !4168)
!4168 = !{!4169, !4170, !4171, !4172, !4175, !4176, !4177, !4178, !4182, !4183, !4184}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !4167, file: !4166, line: 18, baseType: !403, size: 64)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !4167, file: !4166, line: 28, baseType: !334, size: 64, offset: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !4167, file: !4166, line: 31, baseType: !1352, size: 256, offset: 128)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !4167, file: !4166, line: 32, baseType: !4173, size: 64, offset: 384)
!4173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4174, size: 64)
!4174 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !4166, line: 32, flags: DIFlagFwdDecl)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !4167, file: !4166, line: 37, baseType: !284, size: 16, offset: 448)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4167, file: !4166, line: 40, baseType: !328, size: 192, offset: 512)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !4167, file: !4166, line: 41, baseType: !291, size: 64, offset: 704)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !4167, file: !4166, line: 42, baseType: !4179, size: 64, offset: 768)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4181)
!4181 = !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !4166, line: 42, flags: DIFlagFwdDecl)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !4167, file: !4166, line: 44, baseType: !369, size: 32, offset: 832)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !4167, file: !4166, line: 50, baseType: !1023, size: 16, offset: 864)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !4167, file: !4166, line: 51, baseType: !4185, size: 16, offset: 880)
!4185 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !339, line: 18, baseType: !4186)
!4186 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !341, line: 23, baseType: !1379)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !545, file: !542, line: 495, baseType: !356, size: 64, offset: 6528)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !545, file: !542, line: 497, baseType: !4189, size: 64, offset: 6592)
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !542, line: 381, size: 384, elements: !4191)
!4191 = !{!4192, !4193, !4199}
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4190, file: !542, line: 382, baseType: !369, size: 32)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !4190, file: !542, line: 383, baseType: !4194, size: 128, offset: 64)
!4194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !542, line: 376, size: 128, elements: !4195)
!4195 = !{!4196, !4197}
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4194, file: !542, line: 377, baseType: !347, size: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4194, file: !542, line: 378, baseType: !4198, size: 64, offset: 64)
!4198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4194, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !4190, file: !542, line: 384, baseType: !2260, size: 192, offset: 192)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !545, file: !542, line: 500, baseType: !310, offset: 6656)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !545, file: !542, line: 501, baseType: !4202, size: 64, offset: 6656)
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4203 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !542, line: 387, flags: DIFlagFwdDecl)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !545, file: !542, line: 516, baseType: !1485, size: 64, offset: 6720)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !545, file: !542, line: 519, baseType: !995, size: 64, offset: 6784)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !545, file: !542, line: 521, baseType: !4207, size: 64, offset: 6848)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !542, line: 521, flags: DIFlagFwdDecl)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !545, file: !542, line: 545, baseType: !369, size: 32, offset: 6912)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !545, file: !542, line: 548, baseType: !793, size: 8, offset: 6944)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !545, file: !542, line: 550, baseType: !4212, offset: 6952)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4213, line: 142, elements: !324)
!4213 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !545, file: !542, line: 554, baseType: !2316, size: 256, offset: 6976)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !545, file: !542, line: 557, baseType: !358, size: 32, offset: 7232)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !541, file: !542, line: 565, baseType: !4217, offset: 7296)
!4217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, elements: !2591)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !348, file: !349, line: 758, baseType: !540, size: 64, offset: 3968)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !348, file: !349, line: 761, baseType: !4220, size: 320, offset: 4032)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !4157, line: 34, size: 320, elements: !4221)
!4221 = !{!4222, !4223}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !4220, file: !4157, line: 35, baseType: !403, size: 64)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !4220, file: !4157, line: 36, baseType: !4224, size: 256, offset: 64)
!4224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 256, elements: !1288)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !348, file: !349, line: 766, baseType: !286, size: 32, offset: 4352)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !348, file: !349, line: 767, baseType: !286, size: 32, offset: 4384)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !348, file: !349, line: 768, baseType: !286, size: 32, offset: 4416)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !348, file: !349, line: 770, baseType: !286, size: 32, offset: 4448)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !348, file: !349, line: 772, baseType: !356, size: 64, offset: 4480)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !348, file: !349, line: 775, baseType: !7, size: 32, offset: 4544)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !348, file: !349, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !348, file: !349, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !348, file: !349, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !348, file: !349, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !348, file: !349, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !348, file: !349, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !348, file: !349, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !348, file: !349, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !348, file: !349, line: 831, baseType: !356, size: 64, offset: 4672)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !348, file: !349, line: 833, baseType: !4241, size: 384, offset: 4736)
!4241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !122, line: 25, size: 384, elements: !4242)
!4242 = !{!4243, !4248}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4241, file: !122, line: 26, baseType: !4244, size: 64)
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!197, !4247}
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4248 = !DIDerivedType(tag: DW_TAG_member, scope: !4241, file: !122, line: 27, baseType: !4249, size: 320, offset: 64)
!4249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4241, file: !122, line: 27, size: 320, elements: !4250)
!4250 = !{!4251, !4261, !4286}
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !4249, file: !122, line: 36, baseType: !4252, size: 320)
!4252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4249, file: !122, line: 29, size: 320, elements: !4253)
!4253 = !{!4254, !4256, !4257, !4258, !4259, !4260}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !4252, file: !122, line: 30, baseType: !4255, size: 64)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4252, file: !122, line: 31, baseType: !358, size: 32, offset: 64)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4252, file: !122, line: 32, baseType: !358, size: 32, offset: 96)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !4252, file: !122, line: 33, baseType: !358, size: 32, offset: 128)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4252, file: !122, line: 34, baseType: !403, size: 64, offset: 192)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !4252, file: !122, line: 35, baseType: !4255, size: 64, offset: 256)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !4249, file: !122, line: 46, baseType: !4262, size: 192)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4249, file: !122, line: 38, size: 192, elements: !4263)
!4263 = !{!4264, !4265, !4266, !4285}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !4262, file: !122, line: 39, baseType: !483, size: 32)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4262, file: !122, line: 40, baseType: !121, size: 32, offset: 32)
!4266 = !DIDerivedType(tag: DW_TAG_member, scope: !4262, file: !122, line: 41, baseType: !4267, size: 64, offset: 64)
!4267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4262, file: !122, line: 41, size: 64, elements: !4268)
!4268 = !{!4269, !4277}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !4267, file: !122, line: 42, baseType: !4270, size: 64)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !4272, line: 7, size: 128, elements: !4273)
!4272 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!4273 = !{!4274, !4276}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4271, file: !4272, line: 8, baseType: !4275, size: 64)
!4275 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !485, line: 93, baseType: !342)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4271, file: !4272, line: 9, baseType: !342, size: 64, offset: 64)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !4267, file: !122, line: 43, baseType: !4278, size: 64)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !4280, line: 7, size: 64, elements: !4281)
!4280 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!4281 = !{!4282, !4284}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4279, file: !4280, line: 8, baseType: !4283, size: 32)
!4283 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !4280, line: 5, baseType: !1344)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4279, file: !4280, line: 9, baseType: !1344, size: 32, offset: 32)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4262, file: !122, line: 45, baseType: !403, size: 64, offset: 128)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4249, file: !122, line: 54, baseType: !4287, size: 256)
!4287 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4249, file: !122, line: 48, size: 256, elements: !4288)
!4288 = !{!4289, !4292, !4293, !4294, !4295}
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !4287, file: !122, line: 49, baseType: !4290, size: 64)
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 64)
!4291 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !122, line: 14, flags: DIFlagFwdDecl)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !4287, file: !122, line: 50, baseType: !286, size: 32, offset: 64)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !4287, file: !122, line: 51, baseType: !286, size: 32, offset: 96)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4287, file: !122, line: 52, baseType: !356, size: 64, offset: 128)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4287, file: !122, line: 53, baseType: !356, size: 64, offset: 192)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !348, file: !349, line: 835, baseType: !4297, size: 32, offset: 5120)
!4297 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !302, line: 22, baseType: !4298)
!4298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !485, line: 28, baseType: !286)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !348, file: !349, line: 836, baseType: !4297, size: 32, offset: 5152)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !348, file: !349, line: 840, baseType: !356, size: 64, offset: 5184)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !348, file: !349, line: 849, baseType: !347, size: 64, offset: 5248)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !348, file: !349, line: 852, baseType: !347, size: 64, offset: 5312)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !348, file: !349, line: 857, baseType: !301, size: 128, offset: 5376)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !348, file: !349, line: 858, baseType: !301, size: 128, offset: 5504)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !348, file: !349, line: 859, baseType: !347, size: 64, offset: 5632)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !348, file: !349, line: 867, baseType: !301, size: 128, offset: 5696)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !348, file: !349, line: 868, baseType: !301, size: 128, offset: 5824)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !348, file: !349, line: 871, baseType: !1280, size: 64, offset: 5952)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !348, file: !349, line: 872, baseType: !4310, size: 512, offset: 6016)
!4310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !848, size: 512, elements: !1288)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !348, file: !349, line: 873, baseType: !301, size: 128, offset: 6528)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !348, file: !349, line: 874, baseType: !301, size: 128, offset: 6656)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !348, file: !349, line: 876, baseType: !4314, size: 64, offset: 6784)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !348, file: !349, line: 879, baseType: !916, size: 64, offset: 6848)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !348, file: !349, line: 882, baseType: !916, size: 64, offset: 6912)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !348, file: !349, line: 884, baseType: !403, size: 64, offset: 6976)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !348, file: !349, line: 885, baseType: !403, size: 64, offset: 7040)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !348, file: !349, line: 890, baseType: !403, size: 64, offset: 7104)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !348, file: !349, line: 891, baseType: !4321, size: 128, offset: 7168)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !349, line: 242, size: 128, elements: !4322)
!4322 = !{!4323, !4324, !4325}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4321, file: !349, line: 244, baseType: !403, size: 64)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4321, file: !349, line: 245, baseType: !403, size: 64, offset: 64)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4321, file: !349, line: 246, baseType: !465, offset: 128)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !348, file: !349, line: 900, baseType: !356, size: 64, offset: 7296)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !348, file: !349, line: 901, baseType: !356, size: 64, offset: 7360)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !348, file: !349, line: 904, baseType: !403, size: 64, offset: 7424)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !348, file: !349, line: 907, baseType: !403, size: 64, offset: 7488)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !348, file: !349, line: 910, baseType: !356, size: 64, offset: 7552)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !348, file: !349, line: 911, baseType: !356, size: 64, offset: 7616)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !348, file: !349, line: 914, baseType: !4333, size: 640, offset: 7680)
!4333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !4334, line: 123, size: 640, elements: !4335)
!4334 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!4335 = !{!4336, !4342, !4343}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !4333, file: !4334, line: 124, baseType: !4337, size: 576)
!4337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4338, size: 576, elements: !860)
!4338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !4334, line: 108, size: 192, elements: !4339)
!4339 = !{!4340, !4341}
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !4338, file: !4334, line: 109, baseType: !403, size: 64)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !4338, file: !4334, line: 110, baseType: !498, size: 128, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !4333, file: !4334, line: 125, baseType: !7, size: 32, offset: 576)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !4333, file: !4334, line: 126, baseType: !7, size: 32, offset: 608)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !348, file: !349, line: 917, baseType: !4345, size: 192, offset: 8320)
!4345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !4334, line: 134, size: 192, elements: !4346)
!4346 = !{!4347, !4348}
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4345, file: !4334, line: 135, baseType: !975, size: 128, align: 64)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !4345, file: !4334, line: 136, baseType: !7, size: 32, offset: 128)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !348, file: !349, line: 923, baseType: !1306, size: 64, offset: 8512)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !348, file: !349, line: 926, baseType: !1306, size: 64, offset: 8576)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !348, file: !349, line: 929, baseType: !1306, size: 64, offset: 8640)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !348, file: !349, line: 933, baseType: !1336, size: 64, offset: 8704)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !348, file: !349, line: 943, baseType: !4354, size: 128, offset: 8768)
!4354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 128, elements: !279)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !348, file: !349, line: 945, baseType: !4356, size: 64, offset: 8896)
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4357, size: 64)
!4357 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !349, line: 49, flags: DIFlagFwdDecl)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !348, file: !349, line: 956, baseType: !4359, size: 64, offset: 8960)
!4359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4360, size: 64)
!4360 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !349, line: 45, flags: DIFlagFwdDecl)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !348, file: !349, line: 959, baseType: !4362, size: 64, offset: 9024)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !349, line: 959, flags: DIFlagFwdDecl)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !348, file: !349, line: 962, baseType: !4365, size: 64, offset: 9088)
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4366, size: 64)
!4366 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !349, line: 66, flags: DIFlagFwdDecl)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !348, file: !349, line: 966, baseType: !4368, size: 64, offset: 9152)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !349, line: 50, flags: DIFlagFwdDecl)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !348, file: !349, line: 969, baseType: !4371, size: 64, offset: 9216)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !4373, line: 82, size: 7296, elements: !4374)
!4373 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!4374 = !{!4375, !4376, !4377, !4378, !4379, !4380, !4381, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4410, !4419, !4420, !4422, !4423, !4424, !4427, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4457, !4458, !4465, !4466, !4467, !4468, !4469, !4470}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !4372, file: !4373, line: 83, baseType: !364, size: 32)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !4372, file: !4373, line: 84, baseType: !369, size: 32, offset: 32)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4372, file: !4373, line: 85, baseType: !286, size: 32, offset: 64)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !4372, file: !4373, line: 86, baseType: !301, size: 128, offset: 128)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !4372, file: !4373, line: 88, baseType: !1126, size: 128, offset: 256)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !4372, file: !4373, line: 91, baseType: !347, size: 64, offset: 384)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !4372, file: !4373, line: 94, baseType: !4382, size: 192, offset: 448)
!4382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !4383, line: 30, size: 192, elements: !4384)
!4383 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!4384 = !{!4385, !4386}
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4382, file: !4383, line: 31, baseType: !301, size: 128)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4382, file: !4383, line: 32, baseType: !4387, size: 64, offset: 128)
!4387 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !4388, line: 25, baseType: !4389)
!4388 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4388, line: 23, size: 64, elements: !4390)
!4390 = !{!4391}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !4389, file: !4388, line: 24, baseType: !532, size: 64)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !4372, file: !4373, line: 97, baseType: !844, size: 64, offset: 640)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !4372, file: !4373, line: 100, baseType: !286, size: 32, offset: 704)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !4372, file: !4373, line: 106, baseType: !286, size: 32, offset: 736)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !4372, file: !4373, line: 107, baseType: !347, size: 64, offset: 768)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !4372, file: !4373, line: 110, baseType: !286, size: 32, offset: 832)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4372, file: !4373, line: 111, baseType: !7, size: 32, offset: 864)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !4372, file: !4373, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !4372, file: !4373, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !4372, file: !4373, line: 128, baseType: !286, size: 32, offset: 928)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !4372, file: !4373, line: 129, baseType: !301, size: 128, offset: 960)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !4372, file: !4373, line: 132, baseType: !440, size: 512, offset: 1088)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !4372, file: !4373, line: 133, baseType: !448, size: 64, offset: 1600)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !4372, file: !4373, line: 140, baseType: !4405, size: 256, offset: 1664)
!4405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4406, size: 256, elements: !1328)
!4406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !4373, line: 38, size: 128, elements: !4407)
!4407 = !{!4408, !4409}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4406, file: !4373, line: 39, baseType: !403, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !4406, file: !4373, line: 40, baseType: !403, size: 64, offset: 64)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !4372, file: !4373, line: 146, baseType: !4411, size: 192, offset: 1920)
!4411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !4373, line: 66, size: 192, elements: !4412)
!4412 = !{!4413}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !4411, file: !4373, line: 67, baseType: !4414, size: 192)
!4414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !4373, line: 47, size: 192, elements: !4415)
!4415 = !{!4416, !4417, !4418}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4414, file: !4373, line: 48, baseType: !334, size: 64)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4414, file: !4373, line: 49, baseType: !334, size: 64, offset: 64)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !4414, file: !4373, line: 50, baseType: !334, size: 64, offset: 128)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !4372, file: !4373, line: 150, baseType: !4333, size: 640, offset: 2112)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !4372, file: !4373, line: 153, baseType: !4421, size: 256, offset: 2752)
!4421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1280, size: 256, elements: !1288)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !4372, file: !4373, line: 159, baseType: !1280, size: 64, offset: 3008)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !4372, file: !4373, line: 162, baseType: !286, size: 32, offset: 3072)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4372, file: !4373, line: 164, baseType: !4425, size: 64, offset: 3136)
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!4426 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !4373, line: 164, flags: DIFlagFwdDecl)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !4372, file: !4373, line: 175, baseType: !4428, size: 32, offset: 3200)
!4428 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !488, line: 805, baseType: !4429)
!4429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !488, line: 798, size: 32, elements: !4430)
!4430 = !{!4431, !4432}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !4429, file: !488, line: 803, baseType: !682, size: 32)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4429, file: !488, line: 804, baseType: !310, offset: 32)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4372, file: !4373, line: 176, baseType: !403, size: 64, offset: 3264)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4372, file: !4373, line: 176, baseType: !403, size: 64, offset: 3328)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !4372, file: !4373, line: 176, baseType: !403, size: 64, offset: 3392)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !4372, file: !4373, line: 176, baseType: !403, size: 64, offset: 3456)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !4372, file: !4373, line: 177, baseType: !403, size: 64, offset: 3520)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !4372, file: !4373, line: 178, baseType: !403, size: 64, offset: 3584)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !4372, file: !4373, line: 179, baseType: !4321, size: 128, offset: 3648)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !4372, file: !4373, line: 180, baseType: !356, size: 64, offset: 3776)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !4372, file: !4373, line: 180, baseType: !356, size: 64, offset: 3840)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !4372, file: !4373, line: 180, baseType: !356, size: 64, offset: 3904)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !4372, file: !4373, line: 180, baseType: !356, size: 64, offset: 3968)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !4372, file: !4373, line: 181, baseType: !356, size: 64, offset: 4032)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !4372, file: !4373, line: 181, baseType: !356, size: 64, offset: 4096)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !4372, file: !4373, line: 181, baseType: !356, size: 64, offset: 4160)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !4372, file: !4373, line: 181, baseType: !356, size: 64, offset: 4224)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !4372, file: !4373, line: 182, baseType: !356, size: 64, offset: 4288)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !4372, file: !4373, line: 182, baseType: !356, size: 64, offset: 4352)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !4372, file: !4373, line: 182, baseType: !356, size: 64, offset: 4416)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !4372, file: !4373, line: 182, baseType: !356, size: 64, offset: 4480)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !4372, file: !4373, line: 183, baseType: !356, size: 64, offset: 4544)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !4372, file: !4373, line: 183, baseType: !356, size: 64, offset: 4608)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !4372, file: !4373, line: 184, baseType: !4455, offset: 4672)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !4456, line: 12, elements: !324)
!4456 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !4372, file: !4373, line: 192, baseType: !405, size: 64, offset: 4672)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !4372, file: !4373, line: 203, baseType: !4459, size: 2048, offset: 4736)
!4459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4460, size: 2048, elements: !279)
!4460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !4461, line: 43, size: 128, elements: !4462)
!4461 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!4462 = !{!4463, !4464}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !4460, file: !4461, line: 44, baseType: !930, size: 64)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !4460, file: !4461, line: 45, baseType: !930, size: 64, offset: 64)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !4372, file: !4373, line: 220, baseType: !793, size: 8, offset: 6784)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !4372, file: !4373, line: 221, baseType: !1379, size: 16, offset: 6800)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !4372, file: !4373, line: 222, baseType: !1379, size: 16, offset: 6816)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !4372, file: !4373, line: 224, baseType: !540, size: 64, offset: 6848)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !4372, file: !4373, line: 227, baseType: !328, size: 192, offset: 6912)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !4372, file: !4373, line: 233, baseType: !328, size: 192, offset: 7104)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !348, file: !349, line: 970, baseType: !4472, size: 64, offset: 9280)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !4373, line: 20, size: 16576, elements: !4474)
!4474 = !{!4475, !4476, !4477, !4478}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !4473, file: !4373, line: 21, baseType: !310)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4473, file: !4373, line: 22, baseType: !364, size: 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !4473, file: !4373, line: 23, baseType: !1126, size: 128, offset: 64)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4473, file: !4373, line: 24, baseType: !4479, size: 16384, offset: 192)
!4479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4480, size: 16384, elements: !1823)
!4480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !4383, line: 49, size: 256, elements: !4481)
!4481 = !{!4482}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !4480, file: !4383, line: 50, baseType: !4483, size: 256)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !4383, line: 35, size: 256, elements: !4484)
!4484 = !{!4485, !4492, !4493, !4499}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4483, file: !4383, line: 37, baseType: !4486, size: 64)
!4486 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !4487, line: 19, baseType: !4488)
!4487 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !4487, line: 18, baseType: !4490)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{null, !286}
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4483, file: !4383, line: 38, baseType: !356, size: 64, offset: 64)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4483, file: !4383, line: 44, baseType: !4494, size: 64, offset: 128)
!4494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !4487, line: 22, baseType: !4495)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !4487, line: 21, baseType: !4497)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{null}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4483, file: !4383, line: 46, baseType: !4387, size: 64, offset: 192)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !348, file: !349, line: 971, baseType: !4387, size: 64, offset: 9344)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !348, file: !349, line: 972, baseType: !4387, size: 64, offset: 9408)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !348, file: !349, line: 974, baseType: !4387, size: 64, offset: 9472)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !348, file: !349, line: 975, baseType: !4382, size: 192, offset: 9536)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !348, file: !349, line: 976, baseType: !356, size: 64, offset: 9728)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !348, file: !349, line: 977, baseType: !928, size: 64, offset: 9792)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !348, file: !349, line: 978, baseType: !7, size: 32, offset: 9856)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !348, file: !349, line: 980, baseType: !978, size: 64, offset: 9920)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !348, file: !349, line: 989, baseType: !4509, size: 128, offset: 9984)
!4509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !4510, line: 35, size: 128, elements: !4511)
!4510 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!4511 = !{!4512, !4513, !4514}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4509, file: !4510, line: 36, baseType: !286, size: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !4509, file: !4510, line: 37, baseType: !369, size: 32, offset: 32)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4509, file: !4510, line: 38, baseType: !4515, size: 64, offset: 64)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !4510, line: 23, flags: DIFlagFwdDecl)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !348, file: !349, line: 992, baseType: !403, size: 64, offset: 10112)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !348, file: !349, line: 993, baseType: !403, size: 64, offset: 10176)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !348, file: !349, line: 996, baseType: !310, offset: 10240)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !348, file: !349, line: 999, baseType: !465, offset: 10240)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !348, file: !349, line: 1001, baseType: !4522, size: 64, offset: 10240)
!4522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !349, line: 636, size: 64, elements: !4523)
!4523 = !{!4524}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4522, file: !349, line: 637, baseType: !4525, size: 64)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4522, size: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !348, file: !349, line: 1005, baseType: !501, size: 128, offset: 10304)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !348, file: !349, line: 1007, baseType: !347, size: 64, offset: 10432)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !348, file: !349, line: 1009, baseType: !4529, size: 64, offset: 10496)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !349, line: 1009, flags: DIFlagFwdDecl)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !348, file: !349, line: 1043, baseType: !291, size: 64, offset: 10560)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !348, file: !349, line: 1046, baseType: !4533, size: 64, offset: 10624)
!4533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 64)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !348, file: !349, line: 1050, baseType: !4535, size: 64, offset: 10688)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !68, line: 1236, size: 320, elements: !4537)
!4537 = !{!4538, !4539, !4540, !4541, !4542}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !4536, file: !68, line: 1237, baseType: !301, size: 128)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !4536, file: !68, line: 1238, baseType: !301, size: 128, offset: 128)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !4536, file: !68, line: 1239, baseType: !284, size: 16, offset: 256)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !4536, file: !68, line: 1240, baseType: !793, size: 8, offset: 272)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !4536, file: !68, line: 1241, baseType: !793, size: 8, offset: 280)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !348, file: !349, line: 1054, baseType: !4544, size: 64, offset: 10752)
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !349, line: 55, flags: DIFlagFwdDecl)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !348, file: !349, line: 1056, baseType: !3225, size: 64, offset: 10816)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !348, file: !349, line: 1058, baseType: !2911, size: 64, offset: 10880)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !348, file: !349, line: 1061, baseType: !4549, size: 64, offset: 10944)
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4550 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !349, line: 43, flags: DIFlagFwdDecl)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !348, file: !349, line: 1064, baseType: !356, size: 64, offset: 11008)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !348, file: !349, line: 1065, baseType: !4553, size: 64, offset: 11072)
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 64)
!4554 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !4383, line: 14, baseType: !4555)
!4555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !4383, line: 12, size: 384, elements: !4556)
!4556 = !{!4557}
!4557 = !DIDerivedType(tag: DW_TAG_member, scope: !4555, file: !4383, line: 13, baseType: !4558, size: 384)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4555, file: !4383, line: 13, size: 384, elements: !4559)
!4559 = !{!4560, !4561, !4562, !4563}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !4558, file: !4383, line: 13, baseType: !286, size: 32)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !4558, file: !4383, line: 13, baseType: !286, size: 32, offset: 32)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !4558, file: !4383, line: 13, baseType: !286, size: 32, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !4558, file: !4383, line: 13, baseType: !4564, size: 256, offset: 128)
!4564 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !4565, line: 32, size: 256, elements: !4566)
!4565 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!4566 = !{!4567, !4572, !4585, !4591, !4600, !4620, !4625}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !4564, file: !4565, line: 37, baseType: !4568, size: 64)
!4568 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4564, file: !4565, line: 34, size: 64, elements: !4569)
!4569 = !{!4570, !4571}
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4568, file: !4565, line: 35, baseType: !4298, size: 32)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4568, file: !4565, line: 36, baseType: !658, size: 32, offset: 32)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !4564, file: !4565, line: 45, baseType: !4573, size: 192)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4564, file: !4565, line: 40, size: 192, elements: !4574)
!4574 = !{!4575, !4577, !4578, !4584}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !4573, file: !4565, line: 41, baseType: !4576, size: 32)
!4576 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !485, line: 95, baseType: !286)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !4573, file: !4565, line: 42, baseType: !286, size: 32, offset: 32)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4573, file: !4565, line: 43, baseType: !4579, size: 64, offset: 64)
!4579 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !4565, line: 11, baseType: !4580)
!4580 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !4565, line: 8, size: 64, elements: !4581)
!4581 = !{!4582, !4583}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !4580, file: !4565, line: 9, baseType: !286, size: 32)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !4580, file: !4565, line: 10, baseType: !291, size: 64)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !4573, file: !4565, line: 44, baseType: !286, size: 32, offset: 128)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !4564, file: !4565, line: 52, baseType: !4586, size: 128)
!4586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4564, file: !4565, line: 48, size: 128, elements: !4587)
!4587 = !{!4588, !4589, !4590}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4586, file: !4565, line: 49, baseType: !4298, size: 32)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4586, file: !4565, line: 50, baseType: !658, size: 32, offset: 32)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4586, file: !4565, line: 51, baseType: !4579, size: 64, offset: 64)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !4564, file: !4565, line: 61, baseType: !4592, size: 256)
!4592 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4564, file: !4565, line: 55, size: 256, elements: !4593)
!4593 = !{!4594, !4595, !4596, !4597, !4599}
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4592, file: !4565, line: 56, baseType: !4298, size: 32)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4592, file: !4565, line: 57, baseType: !658, size: 32, offset: 32)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !4592, file: !4565, line: 58, baseType: !286, size: 32, offset: 64)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !4592, file: !4565, line: 59, baseType: !4598, size: 64, offset: 128)
!4598 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !485, line: 94, baseType: !1002)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !4592, file: !4565, line: 60, baseType: !4598, size: 64, offset: 192)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !4564, file: !4565, line: 95, baseType: !4601, size: 256)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4564, file: !4565, line: 64, size: 256, elements: !4602)
!4602 = !{!4603, !4604}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !4601, file: !4565, line: 65, baseType: !291, size: 64)
!4604 = !DIDerivedType(tag: DW_TAG_member, scope: !4601, file: !4565, line: 77, baseType: !4605, size: 192, offset: 64)
!4605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4601, file: !4565, line: 77, size: 192, elements: !4606)
!4606 = !{!4607, !4608, !4615}
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !4605, file: !4565, line: 82, baseType: !1379, size: 16)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !4605, file: !4565, line: 88, baseType: !4609, size: 192)
!4609 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4605, file: !4565, line: 84, size: 192, elements: !4610)
!4610 = !{!4611, !4613, !4614}
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !4609, file: !4565, line: 85, baseType: !4612, size: 64)
!4612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 64, elements: !479)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !4609, file: !4565, line: 86, baseType: !291, size: 64, offset: 64)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !4609, file: !4565, line: 87, baseType: !291, size: 64, offset: 128)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !4605, file: !4565, line: 93, baseType: !4616, size: 96)
!4616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4605, file: !4565, line: 90, size: 96, elements: !4617)
!4617 = !{!4618, !4619}
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !4616, file: !4565, line: 91, baseType: !4612, size: 64)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !4616, file: !4565, line: 92, baseType: !359, size: 32, offset: 64)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !4564, file: !4565, line: 101, baseType: !4621, size: 128)
!4621 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4564, file: !4565, line: 98, size: 128, elements: !4622)
!4622 = !{!4623, !4624}
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !4621, file: !4565, line: 99, baseType: !197, size: 64)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !4621, file: !4565, line: 100, baseType: !286, size: 32, offset: 64)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !4564, file: !4565, line: 108, baseType: !4626, size: 128)
!4626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4564, file: !4565, line: 104, size: 128, elements: !4627)
!4627 = !{!4628, !4629, !4630}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4626, file: !4565, line: 105, baseType: !291, size: 64)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4626, file: !4565, line: 106, baseType: !286, size: 32, offset: 64)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4626, file: !4565, line: 107, baseType: !7, size: 32, offset: 96)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !348, file: !349, line: 1067, baseType: !4455, offset: 11136)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !348, file: !349, line: 1099, baseType: !4633, size: 64, offset: 11136)
!4633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 64)
!4634 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !349, line: 56, flags: DIFlagFwdDecl)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !348, file: !349, line: 1103, baseType: !301, size: 128, offset: 11200)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !348, file: !349, line: 1104, baseType: !4637, size: 64, offset: 11328)
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4638, size: 64)
!4638 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !349, line: 46, flags: DIFlagFwdDecl)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !348, file: !349, line: 1105, baseType: !328, size: 192, offset: 11392)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !348, file: !349, line: 1106, baseType: !7, size: 32, offset: 11584)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !348, file: !349, line: 1109, baseType: !4642, size: 128, offset: 11648)
!4642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4643, size: 128, elements: !1328)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !349, line: 51, flags: DIFlagFwdDecl)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !348, file: !349, line: 1110, baseType: !328, size: 192, offset: 11776)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !348, file: !349, line: 1111, baseType: !301, size: 128, offset: 11968)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !348, file: !349, line: 1173, baseType: !4648, size: 64, offset: 12096)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4650, line: 62, size: 256, align: 256, elements: !4651)
!4650 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4651 = !{!4652, !4653, !4654, !4659}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4649, file: !4650, line: 75, baseType: !359, size: 32)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4649, file: !4650, line: 90, baseType: !359, size: 32, offset: 32)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4649, file: !4650, line: 124, baseType: !4655, size: 64, offset: 64)
!4655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4649, file: !4650, line: 109, size: 64, elements: !4656)
!4656 = !{!4657, !4658}
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4655, file: !4650, line: 110, baseType: !404, size: 64)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4655, file: !4650, line: 112, baseType: !404, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4649, file: !4650, line: 144, baseType: !359, size: 32, offset: 128)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !348, file: !349, line: 1174, baseType: !358, size: 32, offset: 12160)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !348, file: !349, line: 1179, baseType: !356, size: 64, offset: 12224)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !348, file: !349, line: 1182, baseType: !4663, size: 128, offset: 12288)
!4663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !4157, line: 76, size: 128, elements: !4664)
!4664 = !{!4665, !4670, !4671}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4663, file: !4157, line: 85, baseType: !4666, size: 64)
!4666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4667, line: 7, size: 64, elements: !4668)
!4667 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4668 = !{!4669}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4666, file: !4667, line: 12, baseType: !529, size: 64)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4663, file: !4157, line: 88, baseType: !793, size: 8, offset: 64)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4663, file: !4157, line: 95, baseType: !793, size: 8, offset: 72)
!4672 = !DIDerivedType(tag: DW_TAG_member, scope: !348, file: !349, line: 1184, baseType: !4673, size: 128, offset: 12416)
!4673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !348, file: !349, line: 1184, size: 128, elements: !4674)
!4674 = !{!4675, !4676}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4673, file: !349, line: 1185, baseType: !364, size: 32)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4673, file: !349, line: 1186, baseType: !975, size: 128, align: 64)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !348, file: !349, line: 1190, baseType: !1239, size: 64, offset: 12544)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !348, file: !349, line: 1192, baseType: !4679, size: 128, offset: 12608)
!4679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !4157, line: 64, size: 128, elements: !4680)
!4680 = !{!4681, !4682, !4683}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4679, file: !4157, line: 65, baseType: !629, size: 64)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4679, file: !4157, line: 67, baseType: !359, size: 32, offset: 64)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4679, file: !4157, line: 68, baseType: !359, size: 32, offset: 96)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !348, file: !349, line: 1206, baseType: !286, size: 32, offset: 12736)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !348, file: !349, line: 1207, baseType: !286, size: 32, offset: 12768)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !348, file: !349, line: 1209, baseType: !356, size: 64, offset: 12800)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !348, file: !349, line: 1219, baseType: !403, size: 64, offset: 12864)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !348, file: !349, line: 1220, baseType: !403, size: 64, offset: 12928)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !348, file: !349, line: 1317, baseType: !286, size: 32, offset: 12992)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !348, file: !349, line: 1319, baseType: !347, size: 64, offset: 13056)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !348, file: !349, line: 1322, baseType: !4692, size: 64, offset: 13120)
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4694, line: 56, size: 512, elements: !4695)
!4694 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4695 = !{!4696, !4697, !4698, !4699, !4700, !4701, !4702, !4704}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4693, file: !4694, line: 57, baseType: !4692, size: 64)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4693, file: !4694, line: 58, baseType: !291, size: 64, offset: 64)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4693, file: !4694, line: 59, baseType: !356, size: 64, offset: 128)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4693, file: !4694, line: 60, baseType: !356, size: 64, offset: 192)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4693, file: !4694, line: 61, baseType: !3890, size: 64, offset: 256)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4693, file: !4694, line: 62, baseType: !7, size: 32, offset: 320)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4693, file: !4694, line: 63, baseType: !4703, size: 64, offset: 384)
!4703 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !302, line: 153, baseType: !403)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4693, file: !4694, line: 64, baseType: !1914, size: 64, offset: 448)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !348, file: !349, line: 1326, baseType: !364, size: 32, offset: 13184)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !348, file: !349, line: 1342, baseType: !291, size: 64, offset: 13248)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !348, file: !349, line: 1343, baseType: !404, size: 64, offset: 13312)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !348, file: !349, line: 1344, baseType: !403, size: 64, offset: 13376)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !348, file: !349, line: 1345, baseType: !404, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !348, file: !349, line: 1346, baseType: !404, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !348, file: !349, line: 1347, baseType: !404, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !348, file: !349, line: 1348, baseType: !975, size: 128, align: 64, offset: 13504)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !348, file: !349, line: 1358, baseType: !4714, size: 34816, offset: 13824)
!4714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4715, line: 485, size: 34816, elements: !4716)
!4715 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4716 = !{!4717, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4746, !4747, !4748, !4749, !4750, !4751, !4754, !4755, !4756}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4714, file: !4715, line: 487, baseType: !4718, size: 192)
!4718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4719, size: 192, elements: !860)
!4719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4720, line: 16, size: 64, elements: !4721)
!4720 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4721 = !{!4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731, !4732, !4733, !4734}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4719, file: !4720, line: 17, baseType: !1023, size: 16)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4719, file: !4720, line: 18, baseType: !1023, size: 16, offset: 16)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4719, file: !4720, line: 19, baseType: !1023, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4719, file: !4720, line: 19, baseType: !1023, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4719, file: !4720, line: 19, baseType: !1023, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4719, file: !4720, line: 19, baseType: !1023, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4719, file: !4720, line: 19, baseType: !1023, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4719, file: !4720, line: 20, baseType: !1023, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4719, file: !4720, line: 20, baseType: !1023, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4719, file: !4720, line: 20, baseType: !1023, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4719, file: !4720, line: 20, baseType: !1023, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4719, file: !4720, line: 20, baseType: !1023, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4719, file: !4720, line: 20, baseType: !1023, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4714, file: !4715, line: 491, baseType: !356, size: 64, offset: 192)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4714, file: !4715, line: 495, baseType: !284, size: 16, offset: 256)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4714, file: !4715, line: 496, baseType: !284, size: 16, offset: 272)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4714, file: !4715, line: 497, baseType: !284, size: 16, offset: 288)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4714, file: !4715, line: 498, baseType: !284, size: 16, offset: 304)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4714, file: !4715, line: 502, baseType: !356, size: 64, offset: 320)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4714, file: !4715, line: 503, baseType: !356, size: 64, offset: 384)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4714, file: !4715, line: 514, baseType: !4743, size: 256, offset: 448)
!4743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4744, size: 256, elements: !1288)
!4744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4745, size: 64)
!4745 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4715, line: 483, flags: DIFlagFwdDecl)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4714, file: !4715, line: 516, baseType: !356, size: 64, offset: 704)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4714, file: !4715, line: 518, baseType: !356, size: 64, offset: 768)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4714, file: !4715, line: 520, baseType: !356, size: 64, offset: 832)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4714, file: !4715, line: 521, baseType: !356, size: 64, offset: 896)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4714, file: !4715, line: 522, baseType: !356, size: 64, offset: 960)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4714, file: !4715, line: 528, baseType: !4752, size: 64, offset: 1024)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4715, line: 10, flags: DIFlagFwdDecl)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4714, file: !4715, line: 535, baseType: !356, size: 64, offset: 1088)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4714, file: !4715, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4714, file: !4715, line: 540, baseType: !4757, size: 33280, offset: 1536)
!4757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4758, line: 317, size: 33280, elements: !4759)
!4758 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4759 = !{!4760, !4761, !4762}
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4757, file: !4758, line: 330, baseType: !7, size: 32)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4757, file: !4758, line: 337, baseType: !356, size: 64, offset: 64)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4757, file: !4758, line: 348, baseType: !4763, size: 32768, offset: 512)
!4763 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4758, line: 304, size: 32768, elements: !4764)
!4764 = !{!4765, !4780, !4817, !4867, !4880}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4763, file: !4758, line: 305, baseType: !4766, size: 896)
!4766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4758, line: 12, size: 896, elements: !4767)
!4767 = !{!4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4779}
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4766, file: !4758, line: 13, baseType: !358, size: 32)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4766, file: !4758, line: 14, baseType: !358, size: 32, offset: 32)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4766, file: !4758, line: 15, baseType: !358, size: 32, offset: 64)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4766, file: !4758, line: 16, baseType: !358, size: 32, offset: 96)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4766, file: !4758, line: 17, baseType: !358, size: 32, offset: 128)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4766, file: !4758, line: 18, baseType: !358, size: 32, offset: 160)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4766, file: !4758, line: 19, baseType: !358, size: 32, offset: 192)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4766, file: !4758, line: 22, baseType: !4776, size: 640, offset: 224)
!4776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 640, elements: !4777)
!4777 = !{!4778}
!4778 = !DISubrange(count: 20)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4766, file: !4758, line: 25, baseType: !358, size: 32, offset: 864)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4763, file: !4758, line: 306, baseType: !4781, size: 4096, align: 128)
!4781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4758, line: 34, size: 4096, align: 128, elements: !4782)
!4782 = !{!4783, !4784, !4785, !4786, !4787, !4802, !4803, !4804, !4806, !4808, !4812}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4781, file: !4758, line: 35, baseType: !1023, size: 16)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4781, file: !4758, line: 36, baseType: !1023, size: 16, offset: 16)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4781, file: !4758, line: 37, baseType: !1023, size: 16, offset: 32)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4781, file: !4758, line: 38, baseType: !1023, size: 16, offset: 48)
!4787 = !DIDerivedType(tag: DW_TAG_member, scope: !4781, file: !4758, line: 39, baseType: !4788, size: 128, offset: 64)
!4788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4781, file: !4758, line: 39, size: 128, elements: !4789)
!4789 = !{!4790, !4795}
!4790 = !DIDerivedType(tag: DW_TAG_member, scope: !4788, file: !4758, line: 40, baseType: !4791, size: 128)
!4791 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4788, file: !4758, line: 40, size: 128, elements: !4792)
!4792 = !{!4793, !4794}
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4791, file: !4758, line: 41, baseType: !403, size: 64)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4791, file: !4758, line: 42, baseType: !403, size: 64, offset: 64)
!4795 = !DIDerivedType(tag: DW_TAG_member, scope: !4788, file: !4758, line: 44, baseType: !4796, size: 128)
!4796 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4788, file: !4758, line: 44, size: 128, elements: !4797)
!4797 = !{!4798, !4799, !4800, !4801}
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4796, file: !4758, line: 45, baseType: !358, size: 32)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4796, file: !4758, line: 46, baseType: !358, size: 32, offset: 32)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4796, file: !4758, line: 47, baseType: !358, size: 32, offset: 64)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4796, file: !4758, line: 48, baseType: !358, size: 32, offset: 96)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4781, file: !4758, line: 51, baseType: !358, size: 32, offset: 192)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4781, file: !4758, line: 52, baseType: !358, size: 32, offset: 224)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4781, file: !4758, line: 55, baseType: !4805, size: 1024, offset: 256)
!4805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 1024, elements: !713)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4781, file: !4758, line: 58, baseType: !4807, size: 2048, offset: 1280)
!4807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 2048, elements: !1823)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4781, file: !4758, line: 60, baseType: !4809, size: 384, offset: 3328)
!4809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 384, elements: !4810)
!4810 = !{!4811}
!4811 = !DISubrange(count: 12)
!4812 = !DIDerivedType(tag: DW_TAG_member, scope: !4781, file: !4758, line: 62, baseType: !4813, size: 384, offset: 3712)
!4813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4781, file: !4758, line: 62, size: 384, elements: !4814)
!4814 = !{!4815, !4816}
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4813, file: !4758, line: 63, baseType: !4809, size: 384)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4813, file: !4758, line: 64, baseType: !4809, size: 384)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4763, file: !4758, line: 307, baseType: !4818, size: 1088)
!4818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4758, line: 79, size: 1088, elements: !4819)
!4819 = !{!4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4866}
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4818, file: !4758, line: 80, baseType: !358, size: 32)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4818, file: !4758, line: 81, baseType: !358, size: 32, offset: 32)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4818, file: !4758, line: 82, baseType: !358, size: 32, offset: 64)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4818, file: !4758, line: 83, baseType: !358, size: 32, offset: 96)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4818, file: !4758, line: 84, baseType: !358, size: 32, offset: 128)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4818, file: !4758, line: 85, baseType: !358, size: 32, offset: 160)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4818, file: !4758, line: 86, baseType: !358, size: 32, offset: 192)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4818, file: !4758, line: 88, baseType: !4776, size: 640, offset: 224)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4818, file: !4758, line: 89, baseType: !514, size: 8, offset: 864)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4818, file: !4758, line: 90, baseType: !514, size: 8, offset: 872)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4818, file: !4758, line: 91, baseType: !514, size: 8, offset: 880)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4818, file: !4758, line: 92, baseType: !514, size: 8, offset: 888)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4818, file: !4758, line: 93, baseType: !514, size: 8, offset: 896)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4818, file: !4758, line: 94, baseType: !514, size: 8, offset: 904)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4818, file: !4758, line: 95, baseType: !4835, size: 64, offset: 960)
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4837, line: 11, size: 128, elements: !4838)
!4837 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4838 = !{!4839, !4840}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4836, file: !4837, line: 12, baseType: !197, size: 64)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4836, file: !4837, line: 13, baseType: !4841, size: 64, offset: 64)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4843, line: 56, size: 1344, elements: !4844)
!4843 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4844 = !{!4845, !4846, !4847, !4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4862, !4863, !4864, !4865}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4842, file: !4843, line: 61, baseType: !356, size: 64)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4842, file: !4843, line: 62, baseType: !356, size: 64, offset: 64)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4842, file: !4843, line: 63, baseType: !356, size: 64, offset: 128)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4842, file: !4843, line: 64, baseType: !356, size: 64, offset: 192)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4842, file: !4843, line: 65, baseType: !356, size: 64, offset: 256)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4842, file: !4843, line: 66, baseType: !356, size: 64, offset: 320)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4842, file: !4843, line: 68, baseType: !356, size: 64, offset: 384)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4842, file: !4843, line: 69, baseType: !356, size: 64, offset: 448)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4842, file: !4843, line: 70, baseType: !356, size: 64, offset: 512)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4842, file: !4843, line: 71, baseType: !356, size: 64, offset: 576)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4842, file: !4843, line: 72, baseType: !356, size: 64, offset: 640)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4842, file: !4843, line: 73, baseType: !356, size: 64, offset: 704)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4842, file: !4843, line: 74, baseType: !356, size: 64, offset: 768)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4842, file: !4843, line: 75, baseType: !356, size: 64, offset: 832)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4842, file: !4843, line: 76, baseType: !356, size: 64, offset: 896)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4842, file: !4843, line: 81, baseType: !356, size: 64, offset: 960)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4842, file: !4843, line: 83, baseType: !356, size: 64, offset: 1024)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4842, file: !4843, line: 84, baseType: !356, size: 64, offset: 1088)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4842, file: !4843, line: 85, baseType: !356, size: 64, offset: 1152)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4842, file: !4843, line: 86, baseType: !356, size: 64, offset: 1216)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4842, file: !4843, line: 87, baseType: !356, size: 64, offset: 1280)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4818, file: !4758, line: 96, baseType: !358, size: 32, offset: 1024)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4763, file: !4758, line: 308, baseType: !4868, size: 4608, align: 512)
!4868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4758, line: 289, size: 4608, align: 512, elements: !4869)
!4869 = !{!4870, !4871, !4878}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4868, file: !4758, line: 290, baseType: !4781, size: 4096, align: 128)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4868, file: !4758, line: 291, baseType: !4872, size: 512, offset: 4096)
!4872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4758, line: 268, size: 512, elements: !4873)
!4873 = !{!4874, !4875, !4876}
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4872, file: !4758, line: 269, baseType: !403, size: 64)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4872, file: !4758, line: 270, baseType: !403, size: 64, offset: 64)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4872, file: !4758, line: 271, baseType: !4877, size: 384, offset: 128)
!4877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 384, elements: !1397)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4868, file: !4758, line: 292, baseType: !4879, offset: 4608)
!4879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, elements: !1495)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4763, file: !4758, line: 309, baseType: !4881, size: 32768)
!4881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 32768, elements: !4882)
!4882 = !{!4883}
!4883 = !DISubrange(count: 4096)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !298, file: !154, line: 545, baseType: !4314, size: 64, offset: 832)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !298, file: !154, line: 547, baseType: !1126, size: 128, offset: 896)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !298, file: !154, line: 548, baseType: !4887, size: 64, offset: 1024)
!4887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4888, size: 64)
!4888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !154, line: 32, size: 2880, elements: !4889)
!4889 = !{!4890, !4891, !4892, !4896, !4900, !4904, !4905, !4906, !4910, !4914, !4915, !4916, !4917, !4918, !4922, !4923, !4927, !4954, !4958, !4962, !4966, !4970, !4974, !4978, !4982, !4983, !4987, !4991, !4995, !4999, !5000, !5004, !5005, !5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5017, !5018, !5019, !5020, !5021, !5022, !5023, !5037, !5038, !5039, !5040, !5041, !5044}
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !4888, file: !154, line: 33, baseType: !839, size: 64)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4888, file: !154, line: 34, baseType: !748, size: 64, offset: 64)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4888, file: !154, line: 43, baseType: !4893, size: 64, offset: 128)
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4894, size: 64)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{!748, !297}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4888, file: !154, line: 50, baseType: !4897, size: 64, offset: 192)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!286, !293, !7, !291}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !4888, file: !154, line: 65, baseType: !4901, size: 64, offset: 256)
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 64)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{!286, !297, !268}
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !4888, file: !154, line: 66, baseType: !4901, size: 64, offset: 320)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !4888, file: !154, line: 102, baseType: !4901, size: 64, offset: 384)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !4888, file: !154, line: 112, baseType: !4907, size: 64, offset: 448)
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 64)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{null, !297, !1023}
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !4888, file: !154, line: 132, baseType: !4911, size: 64, offset: 512)
!4911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4912, size: 64)
!4912 = !DISubroutineType(types: !4913)
!4913 = !{!286, !268}
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !4888, file: !154, line: 133, baseType: !4911, size: 64, offset: 576)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !4888, file: !154, line: 134, baseType: !4911, size: 64, offset: 640)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !4888, file: !154, line: 135, baseType: !4911, size: 64, offset: 704)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !4888, file: !154, line: 136, baseType: !4911, size: 64, offset: 768)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !4888, file: !154, line: 164, baseType: !4919, size: 64, offset: 832)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!286, !293}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !4888, file: !154, line: 195, baseType: !4919, size: 64, offset: 896)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !4888, file: !154, line: 206, baseType: !4924, size: 64, offset: 960)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 64)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{null, !293}
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !4888, file: !154, line: 220, baseType: !4928, size: 64, offset: 1024)
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 64)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!286, !4931}
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4932, size: 64)
!4932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !128, line: 289, size: 6272, align: 64, elements: !4933)
!4933 = !{!4934, !4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948, !4949, !4950, !4951, !4952, !4953}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !4932, file: !128, line: 290, baseType: !293, size: 64)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !4932, file: !128, line: 291, baseType: !301, size: 128, offset: 64)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4932, file: !128, line: 292, baseType: !301, size: 128, offset: 192)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4932, file: !128, line: 293, baseType: !1779, size: 5568, offset: 320)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !4932, file: !128, line: 294, baseType: !2071, size: 32, offset: 5888)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !4932, file: !128, line: 295, baseType: !7, size: 32, offset: 5920)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4932, file: !128, line: 296, baseType: !7, size: 32, offset: 5952)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !4932, file: !128, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !4932, file: !128, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !4932, file: !128, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !4932, file: !128, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !4932, file: !128, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !4932, file: !128, line: 310, baseType: !369, size: 32, offset: 6016)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !4932, file: !128, line: 311, baseType: !369, size: 32, offset: 6048)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !4932, file: !128, line: 317, baseType: !7, size: 32, offset: 6080)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !4932, file: !128, line: 318, baseType: !7, size: 32, offset: 6112)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !4932, file: !128, line: 321, baseType: !750, size: 8, offset: 6144)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4932, file: !128, line: 322, baseType: !127, size: 32, offset: 6176)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !4932, file: !128, line: 323, baseType: !291, size: 64, offset: 6208)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !4932, file: !128, line: 324, baseType: !4217, offset: 6272)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !4888, file: !154, line: 230, baseType: !4955, size: 64, offset: 1088)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{null, !4931}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !4888, file: !154, line: 241, baseType: !4959, size: 64, offset: 1152)
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4960, size: 64)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{!286, !297, !356}
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !4888, file: !154, line: 250, baseType: !4963, size: 64, offset: 1216)
!4963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4964, size: 64)
!4964 = !DISubroutineType(types: !4965)
!4965 = !{null, !297}
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !4888, file: !154, line: 263, baseType: !4967, size: 64, offset: 1280)
!4967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4968, size: 64)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{!286, !293, !286}
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !4888, file: !154, line: 271, baseType: !4971, size: 64, offset: 1344)
!4971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4972, size: 64)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{!286, !297}
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !4888, file: !154, line: 278, baseType: !4975, size: 64, offset: 1408)
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4976, size: 64)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{!793, !2780}
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !4888, file: !154, line: 288, baseType: !4979, size: 64, offset: 1472)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{!286, !293, !1731, !1752, !916}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !4888, file: !154, line: 297, baseType: !4924, size: 64, offset: 1536)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !4888, file: !154, line: 306, baseType: !4984, size: 64, offset: 1600)
!4984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 64)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{!286, !922, !297}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4888, file: !154, line: 307, baseType: !4988, size: 64, offset: 1664)
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = !DISubroutineType(types: !4990)
!4990 = !{!286, !297, !774, !286}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !4888, file: !154, line: 316, baseType: !4992, size: 64, offset: 1728)
!4992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4993, size: 64)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{!80, !268}
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !4888, file: !154, line: 326, baseType: !4996, size: 64, offset: 1792)
!4996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4997, size: 64)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!286, !297, !286}
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !4888, file: !154, line: 334, baseType: !748, size: 64, offset: 1856)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !4888, file: !154, line: 340, baseType: !5001, size: 64, offset: 1920)
!5001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5002, size: 64)
!5002 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !5003, line: 123, flags: DIFlagFwdDecl)
!5003 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !4888, file: !154, line: 347, baseType: !286, size: 32, offset: 1984)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !4888, file: !154, line: 356, baseType: !286, size: 32, offset: 2016)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !4888, file: !154, line: 362, baseType: !284, size: 16, offset: 2048)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !4888, file: !154, line: 363, baseType: !284, size: 16, offset: 2064)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !4888, file: !154, line: 368, baseType: !7, size: 32, offset: 2080)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4888, file: !154, line: 373, baseType: !7, size: 32, offset: 2112)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !4888, file: !154, line: 379, baseType: !356, size: 64, offset: 2176)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !4888, file: !154, line: 381, baseType: !356, size: 64, offset: 2240)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !4888, file: !154, line: 400, baseType: !1379, size: 16, offset: 2304)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4888, file: !154, line: 406, baseType: !278, size: 8, offset: 2320)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !4888, file: !154, line: 409, baseType: !286, size: 32, offset: 2336)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !4888, file: !154, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !4888, file: !154, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !4888, file: !154, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !4888, file: !154, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !4888, file: !154, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !4888, file: !154, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !4888, file: !154, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !4888, file: !154, line: 445, baseType: !7, size: 32, offset: 2400)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !4888, file: !154, line: 459, baseType: !5024, size: 64, offset: 2432)
!5024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5025, size: 64)
!5025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5026, size: 64)
!5026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !47, line: 99, size: 256, elements: !5027)
!5027 = !{!5028, !5029, !5033}
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5026, file: !47, line: 100, baseType: !1850, size: 128)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5026, file: !47, line: 101, baseType: !5030, size: 64, offset: 128)
!5030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5031, size: 64)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{!1000, !2081, !5025, !774}
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5026, file: !47, line: 103, baseType: !5034, size: 64, offset: 192)
!5034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5035, size: 64)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{!1000, !2081, !5025, !748, !928}
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !4888, file: !154, line: 464, baseType: !5024, size: 64, offset: 2496)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !4888, file: !154, line: 470, baseType: !1861, size: 64, offset: 2560)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !4888, file: !154, line: 479, baseType: !403, size: 64, offset: 2624)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !4888, file: !154, line: 484, baseType: !7, size: 32, offset: 2688)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !4888, file: !154, line: 485, baseType: !5042, size: 64, offset: 2752)
!5042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5043, size: 64)
!5043 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !154, line: 19, flags: DIFlagFwdDecl)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !4888, file: !154, line: 488, baseType: !286, size: 32, offset: 2816)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !298, file: !154, line: 549, baseType: !5046, size: 64, offset: 1088)
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 64)
!5047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !5048, line: 16, size: 2624, elements: !5049)
!5048 = !DIFile(filename: "./include/scsi/scsi_transport.h", directory: "/home/lizy2001/genbc/linux")
!5049 = !{!5050, !5086, !5087, !5088, !5093, !5094, !5095, !5096, !5097, !5098, !5099}
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "host_attrs", scope: !5047, file: !5048, line: 18, baseType: !5051, size: 768)
!5051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "transport_container", file: !5052, line: 56, size: 768, elements: !5053)
!5052 = !DIFile(filename: "./include/linux/transport_class.h", directory: "/home/lizy2001/genbc/linux")
!5053 = !{!5054, !5085}
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !5051, file: !5052, line: 57, baseType: !5055, size: 704)
!5055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_container", file: !5056, line: 16, size: 704, elements: !5057)
!5056 = !DIFile(filename: "./include/linux/attribute_container.h", directory: "/home/lizy2001/genbc/linux")
!5057 = !{!5058, !5059, !5076, !5077, !5078, !5079, !5084}
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5055, file: !5056, line: 17, baseType: !301, size: 128)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "containers", scope: !5055, file: !5056, line: 18, baseType: !5060, size: 256, align: 64, offset: 128)
!5060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist", file: !5061, line: 18, size: 256, align: 64, elements: !5062)
!5061 = !DIFile(filename: "./include/linux/klist.h", directory: "/home/lizy2001/genbc/linux")
!5062 = !{!5063, !5064, !5065, !5075}
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "k_lock", scope: !5060, file: !5061, line: 19, baseType: !310)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "k_list", scope: !5060, file: !5061, line: 20, baseType: !301, size: 128)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5060, file: !5061, line: 21, baseType: !5066, size: 64, offset: 128)
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5067, size: 64)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{null, !5069}
!5069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5070, size: 64)
!5070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist_node", file: !5061, line: 37, size: 256, elements: !5071)
!5071 = !{!5072, !5073, !5074}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "n_klist", scope: !5070, file: !5061, line: 38, baseType: !291, size: 64)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "n_node", scope: !5070, file: !5061, line: 39, baseType: !301, size: 128, offset: 64)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "n_ref", scope: !5070, file: !5061, line: 40, baseType: !2071, size: 32, offset: 192)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5060, file: !5061, line: 22, baseType: !5066, size: 64, offset: 192)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5055, file: !5056, line: 19, baseType: !2506, size: 64, offset: 384)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !5055, file: !5056, line: 20, baseType: !1862, size: 64, offset: 448)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5055, file: !5056, line: 21, baseType: !5024, size: 64, offset: 512)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5055, file: !5056, line: 22, baseType: !5080, size: 64, offset: 576)
!5080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5081, size: 64)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{!286, !5083, !2081}
!5083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5055, size: 64)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5055, file: !5056, line: 24, baseType: !356, size: 64, offset: 640)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !5051, file: !5052, line: 58, baseType: !1862, size: 64, offset: 704)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "target_attrs", scope: !5047, file: !5048, line: 19, baseType: !5051, size: 768, offset: 768)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "device_attrs", scope: !5047, file: !5048, line: 20, baseType: !5051, size: 768, offset: 1536)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "user_scan", scope: !5047, file: !5048, line: 25, baseType: !5089, size: 64, offset: 2304)
!5089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5090, size: 64)
!5090 = !DISubroutineType(types: !5091)
!5091 = !{!286, !297, !5092, !5092, !403}
!5092 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !302, line: 87, baseType: !7)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "device_size", scope: !5047, file: !5048, line: 30, baseType: !286, size: 32, offset: 2368)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "device_private_offset", scope: !5047, file: !5048, line: 31, baseType: !286, size: 32, offset: 2400)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "target_size", scope: !5047, file: !5048, line: 32, baseType: !286, size: 32, offset: 2432)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "target_private_offset", scope: !5047, file: !5048, line: 33, baseType: !286, size: 32, offset: 2464)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "host_size", scope: !5047, file: !5048, line: 34, baseType: !286, size: 32, offset: 2496)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "create_work_queue", scope: !5047, file: !5048, line: 40, baseType: !7, size: 1, offset: 2528, flags: DIFlagBitField, extraData: i64 2528)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "eh_strategy_handler", scope: !5047, file: !5048, line: 45, baseType: !4963, size: 64, offset: 2560)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !298, file: !154, line: 552, baseType: !3166, size: 2304, offset: 1152)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !298, file: !154, line: 554, baseType: !369, size: 32, offset: 3456)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !298, file: !154, line: 556, baseType: !7, size: 32, offset: 3488)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !298, file: !154, line: 558, baseType: !7, size: 32, offset: 3520)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !298, file: !154, line: 560, baseType: !7, size: 32, offset: 3552)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !298, file: !154, line: 563, baseType: !286, size: 32, offset: 3584)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !298, file: !154, line: 564, baseType: !356, size: 64, offset: 3648)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !298, file: !154, line: 573, baseType: !7, size: 32, offset: 3712)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !298, file: !154, line: 574, baseType: !7, size: 32, offset: 3744)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !298, file: !154, line: 575, baseType: !403, size: 64, offset: 3776)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !298, file: !154, line: 584, baseType: !7, size: 32, offset: 3840)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !298, file: !154, line: 593, baseType: !284, size: 16, offset: 3872)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !298, file: !154, line: 595, baseType: !286, size: 32, offset: 3904)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !298, file: !154, line: 596, baseType: !286, size: 32, offset: 3936)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !298, file: !154, line: 597, baseType: !1379, size: 16, offset: 3968)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !298, file: !154, line: 598, baseType: !284, size: 16, offset: 3984)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !298, file: !154, line: 599, baseType: !284, size: 16, offset: 4000)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !298, file: !154, line: 600, baseType: !7, size: 32, offset: 4032)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !298, file: !154, line: 601, baseType: !7, size: 32, offset: 4064)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !298, file: !154, line: 602, baseType: !356, size: 64, offset: 4096)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !298, file: !154, line: 603, baseType: !356, size: 64, offset: 4160)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !298, file: !154, line: 612, baseType: !7, size: 32, offset: 4224)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !298, file: !154, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !298, file: !154, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !298, file: !154, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !298, file: !154, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !298, file: !154, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !298, file: !154, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !298, file: !154, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !298, file: !154, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !298, file: !154, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !298, file: !154, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !298, file: !154, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !298, file: !154, line: 653, baseType: !5134, size: 160, offset: 4272)
!5134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 160, elements: !4777)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !298, file: !154, line: 654, baseType: !2568, size: 64, offset: 4480)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !298, file: !154, line: 659, baseType: !2568, size: 64, offset: 4544)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !298, file: !154, line: 664, baseType: !7, size: 32, offset: 4608)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !298, file: !154, line: 667, baseType: !7, size: 32, offset: 4640)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !298, file: !154, line: 668, baseType: !278, size: 8, offset: 4672)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !298, file: !154, line: 671, baseType: !356, size: 64, offset: 4736)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !298, file: !154, line: 672, baseType: !356, size: 64, offset: 4800)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !298, file: !154, line: 673, baseType: !278, size: 8, offset: 4864)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !298, file: !154, line: 674, baseType: !278, size: 8, offset: 4872)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !298, file: !154, line: 675, baseType: !7, size: 32, offset: 4896)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !298, file: !154, line: 678, baseType: !153, size: 32, offset: 4928)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !298, file: !154, line: 681, baseType: !1779, size: 5568, offset: 4992)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !298, file: !154, line: 681, baseType: !1779, size: 5568, offset: 10560)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !298, file: !154, line: 687, baseType: !291, size: 64, offset: 16128)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !298, file: !154, line: 693, baseType: !2081, size: 64, offset: 16192)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !298, file: !154, line: 700, baseType: !4217, align: 64, offset: 16256)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !294, file: !128, line: 103, baseType: !2776, size: 64, offset: 64)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !294, file: !128, line: 106, baseType: !301, size: 128, offset: 128)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !294, file: !128, line: 107, baseType: !301, size: 128, offset: 256)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !294, file: !128, line: 109, baseType: !369, size: 32, offset: 384)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !294, file: !128, line: 110, baseType: !369, size: 32, offset: 416)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !294, file: !128, line: 112, baseType: !369, size: 32, offset: 448)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !294, file: !128, line: 113, baseType: !310, offset: 480)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !294, file: !128, line: 114, baseType: !301, size: 128, offset: 512)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !294, file: !128, line: 115, baseType: !284, size: 16, offset: 640)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !294, file: !128, line: 116, baseType: !284, size: 16, offset: 656)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !294, file: !128, line: 117, baseType: !284, size: 16, offset: 672)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !294, file: !128, line: 118, baseType: !284, size: 16, offset: 688)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !294, file: !128, line: 119, baseType: !356, size: 64, offset: 704)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !294, file: !128, line: 120, baseType: !356, size: 64, offset: 768)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !294, file: !128, line: 123, baseType: !356, size: 64, offset: 832)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !294, file: !128, line: 125, baseType: !7, size: 32, offset: 896)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !294, file: !128, line: 125, baseType: !7, size: 32, offset: 928)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !294, file: !128, line: 126, baseType: !403, size: 64, offset: 960)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !294, file: !128, line: 127, baseType: !7, size: 32, offset: 1024)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !294, file: !128, line: 129, baseType: !7, size: 32, offset: 1056)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !294, file: !128, line: 131, baseType: !291, size: 64, offset: 1088)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !294, file: !128, line: 132, baseType: !278, size: 8, offset: 1152)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !294, file: !128, line: 133, baseType: !750, size: 8, offset: 1160)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !294, file: !128, line: 134, baseType: !750, size: 8, offset: 1168)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !294, file: !128, line: 135, baseType: !328, size: 192, offset: 1216)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !294, file: !128, line: 136, baseType: !278, size: 8, offset: 1408)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !294, file: !128, line: 137, baseType: !282, size: 64, offset: 1472)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !294, file: !128, line: 138, baseType: !748, size: 64, offset: 1536)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !294, file: !128, line: 139, baseType: !748, size: 64, offset: 1600)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !294, file: !128, line: 140, baseType: !748, size: 64, offset: 1664)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !294, file: !128, line: 143, baseType: !5182, size: 64, offset: 1728)
!5182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5183, size: 64)
!5183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !128, line: 95, size: 192, elements: !5184)
!5184 = !{!5185, !5186, !5187}
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5183, file: !128, line: 96, baseType: !975, size: 128, align: 64)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5183, file: !128, line: 97, baseType: !286, size: 32, offset: 128)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5183, file: !128, line: 98, baseType: !5188, offset: 160)
!5188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, elements: !2591)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !294, file: !128, line: 144, baseType: !5182, size: 64, offset: 1792)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !294, file: !128, line: 145, baseType: !5182, size: 64, offset: 1856)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !294, file: !128, line: 146, baseType: !5182, size: 64, offset: 1920)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !294, file: !128, line: 147, baseType: !278, size: 8, offset: 1984)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !294, file: !128, line: 148, baseType: !4931, size: 64, offset: 2048)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !294, file: !128, line: 150, baseType: !5195, size: 64, offset: 2112)
!5195 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !128, line: 18, baseType: !404)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !294, file: !128, line: 154, baseType: !7, size: 32, offset: 2176)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !294, file: !128, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !294, file: !128, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !294, file: !128, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !294, file: !128, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !294, file: !128, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !294, file: !128, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !294, file: !128, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !294, file: !128, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !294, file: !128, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !294, file: !128, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !294, file: !128, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !294, file: !128, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !294, file: !128, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !294, file: !128, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !294, file: !128, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !294, file: !128, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !294, file: !128, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !294, file: !128, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !294, file: !128, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !294, file: !128, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !294, file: !128, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !294, file: !128, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !294, file: !128, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !294, file: !128, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !294, file: !128, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !294, file: !128, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !294, file: !128, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !294, file: !128, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !294, file: !128, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !294, file: !128, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !294, file: !128, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !294, file: !128, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !294, file: !128, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !294, file: !128, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !294, file: !128, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !294, file: !128, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !294, file: !128, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !294, file: !128, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !294, file: !128, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !294, file: !128, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !294, file: !128, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !294, file: !128, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !294, file: !128, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !294, file: !128, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !294, file: !128, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !294, file: !128, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !294, file: !128, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !294, file: !128, line: 208, baseType: !793, size: 8, offset: 2256)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !294, file: !128, line: 210, baseType: !369, size: 32, offset: 2272)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !294, file: !128, line: 212, baseType: !532, size: 64, offset: 2304)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !294, file: !128, line: 213, baseType: !532, size: 64, offset: 2368)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !294, file: !128, line: 214, baseType: !301, size: 128, offset: 2432)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !294, file: !128, line: 215, baseType: !2316, size: 256, offset: 2560)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !294, file: !128, line: 217, baseType: !7, size: 32, offset: 2816)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !294, file: !128, line: 220, baseType: !369, size: 32, offset: 2848)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !294, file: !128, line: 221, baseType: !369, size: 32, offset: 2880)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !294, file: !128, line: 222, baseType: !369, size: 32, offset: 2912)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !294, file: !128, line: 224, baseType: !1779, size: 5568, offset: 2944)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !294, file: !128, line: 225, baseType: !1779, size: 5568, offset: 8512)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !294, file: !128, line: 227, baseType: !5257, size: 256, offset: 14080)
!5257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !196, line: 168, size: 256, elements: !5258)
!5258 = !{!5259}
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5257, file: !196, line: 169, baseType: !2316, size: 256)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !294, file: !128, line: 228, baseType: !2316, size: 256, offset: 14336)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !294, file: !128, line: 230, baseType: !5262, size: 64, offset: 14592)
!5262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5263, size: 64)
!5263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !5264, line: 48, size: 704, elements: !5265)
!5264 = !DIFile(filename: "./include/scsi/scsi_dh.h", directory: "/home/lizy2001/genbc/linux")
!5265 = !{!5266, !5267, !5268, !5269, !5285, !5286, !5287, !5295, !5299, !5303}
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5263, file: !5264, line: 50, baseType: !301, size: 128)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5263, file: !5264, line: 53, baseType: !839, size: 64, offset: 128)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5263, file: !5264, line: 54, baseType: !748, size: 64, offset: 192)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "check_sense", scope: !5263, file: !5264, line: 55, baseType: !5270, size: 64, offset: 256)
!5270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5271, size: 64)
!5271 = !DISubroutineType(types: !5272)
!5272 = !{!286, !293, !5273}
!5273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5274, size: 64)
!5274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_sense_hdr", file: !5275, line: 50, size: 64, elements: !5276)
!5275 = !DIFile(filename: "./include/scsi/scsi_common.h", directory: "/home/lizy2001/genbc/linux")
!5276 = !{!5277, !5278, !5279, !5280, !5281, !5282, !5283, !5284}
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "response_code", scope: !5274, file: !5275, line: 51, baseType: !514, size: 8)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "sense_key", scope: !5274, file: !5275, line: 52, baseType: !514, size: 8, offset: 8)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "asc", scope: !5274, file: !5275, line: 53, baseType: !514, size: 8, offset: 16)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "ascq", scope: !5274, file: !5275, line: 54, baseType: !514, size: 8, offset: 24)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "byte4", scope: !5274, file: !5275, line: 55, baseType: !514, size: 8, offset: 32)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "byte5", scope: !5274, file: !5275, line: 56, baseType: !514, size: 8, offset: 40)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "byte6", scope: !5274, file: !5275, line: 57, baseType: !514, size: 8, offset: 48)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "additional_length", scope: !5274, file: !5275, line: 58, baseType: !514, size: 8, offset: 56)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !5263, file: !5264, line: 56, baseType: !4919, size: 64, offset: 320)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5263, file: !5264, line: 57, baseType: !4924, size: 64, offset: 384)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5263, file: !5264, line: 58, baseType: !5288, size: 64, offset: 448)
!5288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5289, size: 64)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{!286, !293, !5291, !291}
!5291 = !DIDerivedType(tag: DW_TAG_typedef, name: "activate_complete", file: !5264, line: 47, baseType: !5292)
!5292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5293, size: 64)
!5293 = !DISubroutineType(types: !5294)
!5294 = !{null, !291, !286}
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "prep_fn", scope: !5263, file: !5264, line: 59, baseType: !5296, size: 64, offset: 512)
!5296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5297, size: 64)
!5297 = !DISubroutineType(types: !5298)
!5298 = !{!2614, !293, !2780}
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !5263, file: !5264, line: 60, baseType: !5300, size: 64, offset: 576)
!5300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5301, size: 64)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{!286, !293, !748}
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "rescan", scope: !5263, file: !5264, line: 61, baseType: !4924, size: 64, offset: 640)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !294, file: !128, line: 231, baseType: !291, size: 64, offset: 14656)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !294, file: !128, line: 233, baseType: !928, size: 64, offset: 14720)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !294, file: !128, line: 234, baseType: !291, size: 64, offset: 14784)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !294, file: !128, line: 236, baseType: !278, size: 8, offset: 14848)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !294, file: !128, line: 237, baseType: !328, size: 192, offset: 14912)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !294, file: !128, line: 238, baseType: !135, size: 32, offset: 15104)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !294, file: !128, line: 239, baseType: !347, size: 64, offset: 15168)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !294, file: !128, line: 240, baseType: !4217, offset: 15232)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !269, file: !270, line: 71, baseType: !301, size: 128, offset: 512)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !269, file: !270, line: 72, baseType: !2798, size: 704, offset: 640)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !269, file: !270, line: 74, baseType: !975, size: 128, align: 64, offset: 1344)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !269, file: !270, line: 76, baseType: !286, size: 32, offset: 1472)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !269, file: !270, line: 83, baseType: !356, size: 64, offset: 1536)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !269, file: !270, line: 85, baseType: !286, size: 32, offset: 1600)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !269, file: !270, line: 86, baseType: !286, size: 32, offset: 1632)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !269, file: !270, line: 88, baseType: !278, size: 8, offset: 1664)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !269, file: !270, line: 89, baseType: !278, size: 8, offset: 1672)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !269, file: !270, line: 90, baseType: !278, size: 8, offset: 1680)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !269, file: !270, line: 92, baseType: !284, size: 16, offset: 1696)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !269, file: !270, line: 93, baseType: !146, size: 32, offset: 1728)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !269, file: !270, line: 96, baseType: !282, size: 64, offset: 1792)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !269, file: !270, line: 100, baseType: !5326, size: 192, offset: 1856)
!5326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !270, line: 35, size: 192, elements: !5327)
!5327 = !{!5328, !5343}
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !5326, file: !270, line: 36, baseType: !5329, size: 128)
!5329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !5330, line: 42, size: 128, elements: !5331)
!5330 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!5331 = !{!5332, !5341, !5342}
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !5329, file: !5330, line: 43, baseType: !5333, size: 64)
!5333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5334, size: 64)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !5330, line: 11, size: 256, elements: !5335)
!5335 = !{!5336, !5337, !5338, !5339, !5340}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !5334, file: !5330, line: 12, baseType: !356, size: 64)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5334, file: !5330, line: 13, baseType: !7, size: 32, offset: 64)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5334, file: !5330, line: 14, baseType: !7, size: 32, offset: 96)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !5334, file: !5330, line: 15, baseType: !3959, size: 64, offset: 128)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !5334, file: !5330, line: 17, baseType: !7, size: 32, offset: 192)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !5329, file: !5330, line: 44, baseType: !7, size: 32, offset: 64)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !5329, file: !5330, line: 45, baseType: !7, size: 32, offset: 96)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5326, file: !270, line: 37, baseType: !7, size: 32, offset: 128)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !269, file: !270, line: 101, baseType: !5345, size: 64, offset: 2048)
!5345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5326, size: 64)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !269, file: !270, line: 103, baseType: !7, size: 32, offset: 2112)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !269, file: !270, line: 106, baseType: !7, size: 32, offset: 2144)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !269, file: !270, line: 112, baseType: !2780, size: 64, offset: 2176)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !269, file: !270, line: 115, baseType: !282, size: 64, offset: 2240)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !269, file: !270, line: 123, baseType: !5351, size: 64, offset: 2304)
!5351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5352, size: 64)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{null, !268}
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !269, file: !270, line: 129, baseType: !5355, size: 512, offset: 2368)
!5355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !270, line: 41, size: 512, elements: !5356)
!5356 = !{!5357, !5358, !5359, !5360, !5361, !5362, !5364, !5365, !5366, !5367}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5355, file: !270, line: 42, baseType: !774, size: 64)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !5355, file: !270, line: 43, baseType: !286, size: 32, offset: 64)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5355, file: !270, line: 44, baseType: !5333, size: 64, offset: 128)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !5355, file: !270, line: 45, baseType: !286, size: 32, offset: 192)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !5355, file: !270, line: 47, baseType: !3959, size: 64, offset: 256)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !5355, file: !270, line: 49, baseType: !5363, size: 32, offset: 320)
!5363 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !286)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !5355, file: !270, line: 50, baseType: !5363, size: 32, offset: 352)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !5355, file: !270, line: 51, baseType: !5363, size: 32, offset: 384)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !5355, file: !270, line: 52, baseType: !5363, size: 32, offset: 416)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !5355, file: !270, line: 53, baseType: !5363, size: 32, offset: 448)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !269, file: !270, line: 131, baseType: !282, size: 64, offset: 2880)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !269, file: !270, line: 139, baseType: !286, size: 32, offset: 2944)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !269, file: !270, line: 140, baseType: !286, size: 32, offset: 2976)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !269, file: !270, line: 141, baseType: !356, size: 64, offset: 3008)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !269, file: !270, line: 143, baseType: !278, size: 8, offset: 3072)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !269, file: !270, line: 144, baseType: !7, size: 32, offset: 3104)
!5374 = !{!5375, !5376, !5377, !5378}
!5375 = !DIEnumerator(name: "ACTION_FAIL", value: 0, isUnsigned: true)
!5376 = !DIEnumerator(name: "ACTION_REPREP", value: 1, isUnsigned: true)
!5377 = !DIEnumerator(name: "ACTION_RETRY", value: 2, isUnsigned: true)
!5378 = !DIEnumerator(name: "ACTION_DELAYED_RETRY", value: 3, isUnsigned: true)
!5379 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "req_flag_bits", file: !169, line: 374, baseType: !7, size: 32, elements: !5380)
!5380 = !{!5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400}
!5381 = !DIEnumerator(name: "__REQ_FAILFAST_DEV", value: 8, isUnsigned: true)
!5382 = !DIEnumerator(name: "__REQ_FAILFAST_TRANSPORT", value: 9, isUnsigned: true)
!5383 = !DIEnumerator(name: "__REQ_FAILFAST_DRIVER", value: 10, isUnsigned: true)
!5384 = !DIEnumerator(name: "__REQ_SYNC", value: 11, isUnsigned: true)
!5385 = !DIEnumerator(name: "__REQ_META", value: 12, isUnsigned: true)
!5386 = !DIEnumerator(name: "__REQ_PRIO", value: 13, isUnsigned: true)
!5387 = !DIEnumerator(name: "__REQ_NOMERGE", value: 14, isUnsigned: true)
!5388 = !DIEnumerator(name: "__REQ_IDLE", value: 15, isUnsigned: true)
!5389 = !DIEnumerator(name: "__REQ_INTEGRITY", value: 16, isUnsigned: true)
!5390 = !DIEnumerator(name: "__REQ_FUA", value: 17, isUnsigned: true)
!5391 = !DIEnumerator(name: "__REQ_PREFLUSH", value: 18, isUnsigned: true)
!5392 = !DIEnumerator(name: "__REQ_RAHEAD", value: 19, isUnsigned: true)
!5393 = !DIEnumerator(name: "__REQ_BACKGROUND", value: 20, isUnsigned: true)
!5394 = !DIEnumerator(name: "__REQ_NOWAIT", value: 21, isUnsigned: true)
!5395 = !DIEnumerator(name: "__REQ_CGROUP_PUNT", value: 22, isUnsigned: true)
!5396 = !DIEnumerator(name: "__REQ_NOUNMAP", value: 23, isUnsigned: true)
!5397 = !DIEnumerator(name: "__REQ_HIPRI", value: 24, isUnsigned: true)
!5398 = !DIEnumerator(name: "__REQ_DRV", value: 25, isUnsigned: true)
!5399 = !DIEnumerator(name: "__REQ_SWAP", value: 26, isUnsigned: true)
!5400 = !DIEnumerator(name: "__REQ_NR_BITS", value: 27, isUnsigned: true)
!5401 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_prot_capabilities", file: !154, line: 801, baseType: !7, size: 32, elements: !5402)
!5402 = !{!5403, !5404, !5405, !5406, !5407, !5408, !5409}
!5403 = !DIEnumerator(name: "SHOST_DIF_TYPE1_PROTECTION", value: 1, isUnsigned: true)
!5404 = !DIEnumerator(name: "SHOST_DIF_TYPE2_PROTECTION", value: 2, isUnsigned: true)
!5405 = !DIEnumerator(name: "SHOST_DIF_TYPE3_PROTECTION", value: 4, isUnsigned: true)
!5406 = !DIEnumerator(name: "SHOST_DIX_TYPE0_PROTECTION", value: 8, isUnsigned: true)
!5407 = !DIEnumerator(name: "SHOST_DIX_TYPE1_PROTECTION", value: 16, isUnsigned: true)
!5408 = !DIEnumerator(name: "SHOST_DIX_TYPE2_PROTECTION", value: 32, isUnsigned: true)
!5409 = !DIEnumerator(name: "SHOST_DIX_TYPE3_PROTECTION", value: 64, isUnsigned: true)
!5410 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_prot_operations", file: !270, line: 225, baseType: !7, size: 32, elements: !5411)
!5411 = !{!5412, !5413, !5414, !5415, !5416, !5417, !5418}
!5412 = !DIEnumerator(name: "SCSI_PROT_NORMAL", value: 0, isUnsigned: true)
!5413 = !DIEnumerator(name: "SCSI_PROT_READ_INSERT", value: 1, isUnsigned: true)
!5414 = !DIEnumerator(name: "SCSI_PROT_WRITE_STRIP", value: 2, isUnsigned: true)
!5415 = !DIEnumerator(name: "SCSI_PROT_READ_STRIP", value: 3, isUnsigned: true)
!5416 = !DIEnumerator(name: "SCSI_PROT_WRITE_INSERT", value: 4, isUnsigned: true)
!5417 = !DIEnumerator(name: "SCSI_PROT_READ_PASS", value: 5, isUnsigned: true)
!5418 = !DIEnumerator(name: "SCSI_PROT_WRITE_PASS", value: 6, isUnsigned: true)
!5419 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hctx_type", file: !190, line: 208, baseType: !7, size: 32, elements: !5420)
!5420 = !{!5421, !5422, !5423, !5424}
!5421 = !DIEnumerator(name: "HCTX_TYPE_DEFAULT", value: 0, isUnsigned: true)
!5422 = !DIEnumerator(name: "HCTX_TYPE_READ", value: 1, isUnsigned: true)
!5423 = !DIEnumerator(name: "HCTX_TYPE_POLL", value: 2, isUnsigned: true)
!5424 = !DIEnumerator(name: "HCTX_MAX_TYPES", value: 3, isUnsigned: true)
!5425 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !5426, line: 305, baseType: !7, size: 32, elements: !5427)
!5426 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!5427 = !{!5428, !5429, !5430, !5431}
!5428 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!5429 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!5430 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!5431 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!5432 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobject_action", file: !1783, line: 53, baseType: !7, size: 32, elements: !5433)
!5433 = !{!5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441}
!5434 = !DIEnumerator(name: "KOBJ_ADD", value: 0, isUnsigned: true)
!5435 = !DIEnumerator(name: "KOBJ_REMOVE", value: 1, isUnsigned: true)
!5436 = !DIEnumerator(name: "KOBJ_CHANGE", value: 2, isUnsigned: true)
!5437 = !DIEnumerator(name: "KOBJ_MOVE", value: 3, isUnsigned: true)
!5438 = !DIEnumerator(name: "KOBJ_ONLINE", value: 4, isUnsigned: true)
!5439 = !DIEnumerator(name: "KOBJ_OFFLINE", value: 5, isUnsigned: true)
!5440 = !DIEnumerator(name: "KOBJ_BIND", value: 6, isUnsigned: true)
!5441 = !DIEnumerator(name: "KOBJ_UNBIND", value: 7, isUnsigned: true)
!5442 = !{!5443, !605, !2878, !291, !293, !2614, !774, !356, !284, !7, !5444, !4931, !629, !5182, !5449, !5452, !5453, !5454, !5456, !5474, !286, !403, !5475, !5478, !197, !5333, !5480, !5491, !297, !5493, !5495, !347, !5496, !4703, !5497, !5499, !5500, !1024}
!5443 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !302, line: 149, baseType: !7)
!5444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5445, size: 64)
!5445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_event", file: !128, line: 80, size: 192, elements: !5446)
!5446 = !{!5447, !5448}
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "evt_type", scope: !5445, file: !128, line: 81, baseType: !244, size: 32)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5445, file: !128, line: 82, baseType: !301, size: 128, offset: 64)
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5450, size: 64)
!5450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5451)
!5451 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5182)
!5452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5363, size: 64)
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!5454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5455, size: 64)
!5455 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !305)
!5456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5457, size: 64)
!5457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5458, size: 64)
!5458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_driver", file: !5459, line: 13, size: 1536, elements: !5460)
!5459 = !DIFile(filename: "./include/scsi/scsi_driver.h", directory: "/home/lizy2001/genbc/linux")
!5460 = !{!5461, !5462, !5463, !5467, !5468, !5469, !5473}
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "gendrv", scope: !5458, file: !5459, line: 14, baseType: !2153, size: 1152)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "rescan", scope: !5458, file: !5459, line: 16, baseType: !2103, size: 64, offset: 1152)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "init_command", scope: !5458, file: !5459, line: 17, baseType: !5464, size: 64, offset: 1216)
!5464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5465, size: 64)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!2614, !268}
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "uninit_command", scope: !5458, file: !5459, line: 18, baseType: !5351, size: 64, offset: 1280)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5458, file: !5459, line: 19, baseType: !4911, size: 64, offset: 1344)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !5458, file: !5459, line: 20, baseType: !5470, size: 64, offset: 1408)
!5470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5471, size: 64)
!5471 = !DISubroutineType(types: !5472)
!5472 = !{!286, !268, !286}
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "eh_reset", scope: !5458, file: !5459, line: 21, baseType: !5351, size: 64, offset: 1472)
!5474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!5475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5477)
!5477 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !356)
!5478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5479, size: 64)
!5479 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !358)
!5480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5481, size: 64)
!5481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_varlen_cdb_hdr", file: !5482, line: 180, size: 80, elements: !5483)
!5482 = !DIFile(filename: "./include/scsi/scsi_proto.h", directory: "/home/lizy2001/genbc/linux")
!5483 = !{!5484, !5485, !5486, !5488, !5489}
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !5481, file: !5482, line: 181, baseType: !515, size: 8)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !5481, file: !5482, line: 182, baseType: !515, size: 8, offset: 8)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !5481, file: !5482, line: 183, baseType: !5487, size: 40, offset: 16)
!5487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 40, elements: !3470)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "additional_cdb_length", scope: !5481, file: !5482, line: 184, baseType: !515, size: 8, offset: 56)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "service_action", scope: !5481, file: !5482, line: 185, baseType: !5490, size: 16, offset: 64)
!5490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !1077, line: 30, baseType: !1024)
!5491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5492, size: 64)
!5492 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !750)
!5493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5494, size: 64)
!5494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5455)
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!5496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5498, size: 64)
!5498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5363)
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5490, size: 64)
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!5501 = !{!5502, !5507, !5509, !0, !5511, !5513, !5515, !5517}
!5502 = !DIGlobalVariableExpression(var: !5503, expr: !DIExpression())
!5503 = distinct !DIGlobalVariable(name: "__warned", scope: !5504, file: !3, line: 972, type: !793, isLocal: true, isDefinition: true)
!5504 = distinct !DISubprogram(name: "scsi_io_completion", scope: !3, file: !3, line: 935, type: !5505, scopeLine: 936, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{null, !268, !7}
!5507 = !DIGlobalVariableExpression(var: !5508, expr: !DIExpression())
!5508 = distinct !DIGlobalVariable(name: "scsi_sense_cache", scope: !2, file: !3, line: 55, type: !2665, isLocal: true, isDefinition: true)
!5509 = !DIGlobalVariableExpression(var: !5510, expr: !DIExpression())
!5510 = distinct !DIGlobalVariable(name: "scsi_sense_isadma_cache", scope: !2, file: !3, line: 56, type: !2665, isLocal: true, isDefinition: true)
!5511 = !DIGlobalVariableExpression(var: !5512, expr: !DIExpression())
!5512 = distinct !DIGlobalVariable(name: "_rs", scope: !265, file: !3, line: 803, type: !1474, isLocal: true, isDefinition: true)
!5513 = !DIGlobalVariableExpression(var: !5514, expr: !DIExpression())
!5514 = distinct !DIGlobalVariable(name: "scsi_mq_ops", scope: !2, file: !3, line: 1859, type: !3125, isLocal: true, isDefinition: true)
!5515 = !DIGlobalVariableExpression(var: !5516, expr: !DIExpression())
!5516 = distinct !DIGlobalVariable(name: "scsi_mq_ops_no_commit", scope: !2, file: !3, line: 1832, type: !3125, isLocal: true, isDefinition: true)
!5517 = !DIGlobalVariableExpression(var: !5518, expr: !DIExpression())
!5518 = distinct !DIGlobalVariable(name: "__warned", scope: !5519, file: !3, line: 2777, type: !793, isLocal: true, isDefinition: true)
!5519 = distinct !DISubprogram(name: "device_block", scope: !3, file: !3, line: 2771, type: !5520, scopeLine: 2772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5520 = !DISubroutineType(types: !5521)
!5521 = !{null, !293, !291}
!5522 = !{!"rsp"}
!5523 = !{i32 7, !"Dwarf Version", i32 4}
!5524 = !{i32 2, !"Debug Info Version", i32 3}
!5525 = !{i32 1, !"wchar_size", i32 2}
!5526 = !{i32 1, !"Code Model", i32 2}
!5527 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5528 = distinct !DISubprogram(name: "scsi_init_sense_cache", scope: !3, file: !3, line: 81, type: !4972, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5529 = !DILocalVariable(name: "shost", arg: 1, scope: !5528, file: !3, line: 81, type: !297)
!5530 = !DILocation(line: 81, column: 45, scope: !5528)
!5531 = !DILocalVariable(name: "cache", scope: !5528, file: !3, line: 83, type: !2665)
!5532 = !DILocation(line: 83, column: 21, scope: !5528)
!5533 = !DILocalVariable(name: "ret", scope: !5528, file: !3, line: 84, type: !286)
!5534 = !DILocation(line: 84, column: 6, scope: !5528)
!5535 = !DILocation(line: 86, column: 2, scope: !5528)
!5536 = !DILocation(line: 87, column: 34, scope: !5528)
!5537 = !DILocation(line: 87, column: 41, scope: !5528)
!5538 = !DILocation(line: 87, column: 10, scope: !5528)
!5539 = !DILocation(line: 87, column: 8, scope: !5528)
!5540 = !DILocation(line: 88, column: 6, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 88, column: 6)
!5542 = !DILocation(line: 88, column: 6, scope: !5528)
!5543 = !DILocation(line: 89, column: 3, scope: !5541)
!5544 = !DILocation(line: 91, column: 6, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 91, column: 6)
!5546 = !DILocation(line: 91, column: 13, scope: !5545)
!5547 = !DILocation(line: 91, column: 6, scope: !5528)
!5548 = !DILocation(line: 93, column: 4, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 91, column: 32)
!5550 = !DILocation(line: 92, column: 27, scope: !5549)
!5551 = !DILocation(line: 96, column: 8, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 96, column: 7)
!5553 = !DILocation(line: 96, column: 7, scope: !5549)
!5554 = !DILocation(line: 97, column: 8, scope: !5552)
!5555 = !DILocation(line: 97, column: 4, scope: !5552)
!5556 = !DILocation(line: 98, column: 2, scope: !5549)
!5557 = !DILocation(line: 100, column: 4, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 98, column: 9)
!5559 = !DILocation(line: 99, column: 20, scope: !5558)
!5560 = !DILocation(line: 103, column: 8, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5558, file: !3, line: 103, column: 7)
!5562 = !DILocation(line: 103, column: 7, scope: !5558)
!5563 = !DILocation(line: 104, column: 8, scope: !5561)
!5564 = !DILocation(line: 104, column: 4, scope: !5561)
!5565 = !DILabel(scope: !5528, name: "exit", file: !3, line: 106)
!5566 = !DILocation(line: 106, column: 2, scope: !5528)
!5567 = !DILocation(line: 107, column: 2, scope: !5528)
!5568 = !DILocation(line: 108, column: 9, scope: !5528)
!5569 = !DILocation(line: 108, column: 2, scope: !5528)
!5570 = distinct !DISubprogram(name: "scsi_select_sense_cache", scope: !3, file: !3, line: 62, type: !5571, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{!2665, !793}
!5573 = !DILocalVariable(name: "unchecked_isa_dma", arg: 1, scope: !5570, file: !3, line: 62, type: !793)
!5574 = !DILocation(line: 62, column: 30, scope: !5570)
!5575 = !DILocation(line: 64, column: 9, scope: !5570)
!5576 = !DILocation(line: 64, column: 29, scope: !5570)
!5577 = !DILocation(line: 64, column: 55, scope: !5570)
!5578 = !DILocation(line: 64, column: 2, scope: !5570)
!5579 = distinct !DISubprogram(name: "scsi_queue_insert", scope: !3, file: !3, line: 216, type: !266, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5580 = !DILocalVariable(name: "cmd", arg: 1, scope: !5579, file: !3, line: 216, type: !268)
!5581 = !DILocation(line: 216, column: 42, scope: !5579)
!5582 = !DILocalVariable(name: "reason", arg: 2, scope: !5579, file: !3, line: 216, type: !286)
!5583 = !DILocation(line: 216, column: 51, scope: !5579)
!5584 = !DILocation(line: 218, column: 22, scope: !5579)
!5585 = !DILocation(line: 218, column: 27, scope: !5579)
!5586 = !DILocation(line: 218, column: 2, scope: !5579)
!5587 = !DILocation(line: 219, column: 1, scope: !5579)
!5588 = distinct !DISubprogram(name: "__scsi_queue_insert", scope: !3, file: !3, line: 177, type: !5589, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{null, !268, !286, !793}
!5591 = !DILocalVariable(name: "cmd", arg: 1, scope: !5588, file: !3, line: 177, type: !268)
!5592 = !DILocation(line: 177, column: 51, scope: !5588)
!5593 = !DILocalVariable(name: "reason", arg: 2, scope: !5588, file: !3, line: 177, type: !286)
!5594 = !DILocation(line: 177, column: 60, scope: !5588)
!5595 = !DILocalVariable(name: "unbusy", arg: 3, scope: !5588, file: !3, line: 177, type: !793)
!5596 = !DILocation(line: 177, column: 73, scope: !5588)
!5597 = !DILocalVariable(name: "device", scope: !5588, file: !3, line: 179, type: !293)
!5598 = !DILocation(line: 179, column: 22, scope: !5588)
!5599 = !DILocation(line: 179, column: 31, scope: !5588)
!5600 = !DILocation(line: 179, column: 36, scope: !5588)
!5601 = !DILocation(line: 181, column: 2, scope: !5588)
!5602 = !DILocation(line: 181, column: 2, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 181, column: 2)
!5604 = !DILocation(line: 184, column: 19, scope: !5588)
!5605 = !DILocation(line: 184, column: 24, scope: !5588)
!5606 = !DILocation(line: 184, column: 2, scope: !5588)
!5607 = !DILocation(line: 190, column: 6, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 190, column: 6)
!5609 = !DILocation(line: 190, column: 6, scope: !5588)
!5610 = !DILocation(line: 191, column: 22, scope: !5608)
!5611 = !DILocation(line: 191, column: 30, scope: !5608)
!5612 = !DILocation(line: 191, column: 3, scope: !5608)
!5613 = !DILocation(line: 199, column: 2, scope: !5588)
!5614 = !DILocation(line: 199, column: 7, scope: !5588)
!5615 = !DILocation(line: 199, column: 14, scope: !5588)
!5616 = !DILocation(line: 201, column: 25, scope: !5588)
!5617 = !DILocation(line: 201, column: 30, scope: !5588)
!5618 = !DILocation(line: 201, column: 2, scope: !5588)
!5619 = !DILocation(line: 202, column: 1, scope: !5588)
!5620 = distinct !DISubprogram(name: "__scsi_execute", scope: !3, file: !3, line: 240, type: !5621, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{!286, !293, !708, !286, !291, !7, !282, !5273, !286, !286, !403, !2878, !916}
!5623 = !DILocalVariable(name: "sdev", arg: 1, scope: !5620, file: !3, line: 240, type: !293)
!5624 = !DILocation(line: 240, column: 40, scope: !5620)
!5625 = !DILocalVariable(name: "cmd", arg: 2, scope: !5620, file: !3, line: 240, type: !708)
!5626 = !DILocation(line: 240, column: 67, scope: !5620)
!5627 = !DILocalVariable(name: "data_direction", arg: 3, scope: !5620, file: !3, line: 241, type: !286)
!5628 = !DILocation(line: 241, column: 8, scope: !5620)
!5629 = !DILocalVariable(name: "buffer", arg: 4, scope: !5620, file: !3, line: 241, type: !291)
!5630 = !DILocation(line: 241, column: 30, scope: !5620)
!5631 = !DILocalVariable(name: "bufflen", arg: 5, scope: !5620, file: !3, line: 241, type: !7)
!5632 = !DILocation(line: 241, column: 47, scope: !5620)
!5633 = !DILocalVariable(name: "sense", arg: 6, scope: !5620, file: !3, line: 242, type: !282)
!5634 = !DILocation(line: 242, column: 19, scope: !5620)
!5635 = !DILocalVariable(name: "sshdr", arg: 7, scope: !5620, file: !3, line: 242, type: !5273)
!5636 = !DILocation(line: 242, column: 49, scope: !5620)
!5637 = !DILocalVariable(name: "timeout", arg: 8, scope: !5620, file: !3, line: 243, type: !286)
!5638 = !DILocation(line: 243, column: 8, scope: !5620)
!5639 = !DILocalVariable(name: "retries", arg: 9, scope: !5620, file: !3, line: 243, type: !286)
!5640 = !DILocation(line: 243, column: 21, scope: !5620)
!5641 = !DILocalVariable(name: "flags", arg: 10, scope: !5620, file: !3, line: 243, type: !403)
!5642 = !DILocation(line: 243, column: 34, scope: !5620)
!5643 = !DILocalVariable(name: "rq_flags", arg: 11, scope: !5620, file: !3, line: 243, type: !2878)
!5644 = !DILocation(line: 243, column: 53, scope: !5620)
!5645 = !DILocalVariable(name: "resid", arg: 12, scope: !5620, file: !3, line: 244, type: !916)
!5646 = !DILocation(line: 244, column: 9, scope: !5620)
!5647 = !DILocalVariable(name: "req", scope: !5620, file: !3, line: 246, type: !2780)
!5648 = !DILocation(line: 246, column: 18, scope: !5620)
!5649 = !DILocalVariable(name: "rq", scope: !5620, file: !3, line: 247, type: !5650)
!5650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!5651 = !DILocation(line: 247, column: 23, scope: !5620)
!5652 = !DILocalVariable(name: "ret", scope: !5620, file: !3, line: 248, type: !286)
!5653 = !DILocation(line: 248, column: 6, scope: !5620)
!5654 = !DILocation(line: 250, column: 24, scope: !5620)
!5655 = !DILocation(line: 250, column: 30, scope: !5620)
!5656 = !DILocation(line: 251, column: 4, scope: !5620)
!5657 = !DILocation(line: 251, column: 19, scope: !5620)
!5658 = !DILocation(line: 250, column: 8, scope: !5620)
!5659 = !DILocation(line: 250, column: 6, scope: !5620)
!5660 = !DILocation(line: 253, column: 13, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 253, column: 6)
!5662 = !DILocation(line: 253, column: 6, scope: !5661)
!5663 = !DILocation(line: 253, column: 6, scope: !5620)
!5664 = !DILocation(line: 254, column: 10, scope: !5661)
!5665 = !DILocation(line: 254, column: 3, scope: !5661)
!5666 = !DILocation(line: 255, column: 16, scope: !5620)
!5667 = !DILocation(line: 255, column: 7, scope: !5620)
!5668 = !DILocation(line: 255, column: 5, scope: !5620)
!5669 = !DILocation(line: 257, column: 6, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 257, column: 6)
!5671 = !DILocation(line: 257, column: 14, scope: !5670)
!5672 = !DILocation(line: 257, column: 33, scope: !5670)
!5673 = !DILocation(line: 257, column: 39, scope: !5670)
!5674 = !DILocation(line: 257, column: 54, scope: !5670)
!5675 = !DILocation(line: 258, column: 6, scope: !5670)
!5676 = !DILocation(line: 258, column: 14, scope: !5670)
!5677 = !DILocation(line: 257, column: 17, scope: !5670)
!5678 = !DILocation(line: 257, column: 6, scope: !5620)
!5679 = !DILocation(line: 259, column: 3, scope: !5670)
!5680 = !DILocation(line: 261, column: 16, scope: !5620)
!5681 = !DILocation(line: 261, column: 2, scope: !5620)
!5682 = !DILocation(line: 261, column: 6, scope: !5620)
!5683 = !DILocation(line: 261, column: 14, scope: !5620)
!5684 = !DILocation(line: 262, column: 9, scope: !5620)
!5685 = !DILocation(line: 262, column: 13, scope: !5620)
!5686 = !DILocation(line: 262, column: 18, scope: !5620)
!5687 = !DILocation(line: 262, column: 23, scope: !5620)
!5688 = !DILocation(line: 262, column: 27, scope: !5620)
!5689 = !DILocation(line: 262, column: 2, scope: !5620)
!5690 = !DILocation(line: 263, column: 16, scope: !5620)
!5691 = !DILocation(line: 263, column: 2, scope: !5620)
!5692 = !DILocation(line: 263, column: 6, scope: !5620)
!5693 = !DILocation(line: 263, column: 14, scope: !5620)
!5694 = !DILocation(line: 264, column: 17, scope: !5620)
!5695 = !DILocation(line: 264, column: 2, scope: !5620)
!5696 = !DILocation(line: 264, column: 7, scope: !5620)
!5697 = !DILocation(line: 264, column: 15, scope: !5620)
!5698 = !DILocation(line: 265, column: 20, scope: !5620)
!5699 = !DILocation(line: 265, column: 2, scope: !5620)
!5700 = !DILocation(line: 265, column: 7, scope: !5620)
!5701 = !DILocation(line: 265, column: 17, scope: !5620)
!5702 = !DILocation(line: 266, column: 19, scope: !5620)
!5703 = !DILocation(line: 266, column: 28, scope: !5620)
!5704 = !DILocation(line: 266, column: 2, scope: !5620)
!5705 = !DILocation(line: 266, column: 7, scope: !5620)
!5706 = !DILocation(line: 266, column: 16, scope: !5620)
!5707 = !DILocation(line: 271, column: 17, scope: !5620)
!5708 = !DILocation(line: 271, column: 22, scope: !5620)
!5709 = !DILocation(line: 271, column: 31, scope: !5620)
!5710 = !DILocation(line: 271, column: 2, scope: !5620)
!5711 = !DILocation(line: 279, column: 6, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 279, column: 6)
!5713 = !DILocation(line: 0, scope: !5712)
!5714 = !DILocation(line: 279, column: 6, scope: !5620)
!5715 = !DILocation(line: 280, column: 10, scope: !5712)
!5716 = !DILocation(line: 280, column: 20, scope: !5712)
!5717 = !DILocation(line: 280, column: 30, scope: !5712)
!5718 = !DILocation(line: 280, column: 34, scope: !5712)
!5719 = !DILocation(line: 280, column: 28, scope: !5712)
!5720 = !DILocation(line: 280, column: 17, scope: !5712)
!5721 = !DILocation(line: 280, column: 49, scope: !5712)
!5722 = !DILocation(line: 280, column: 53, scope: !5712)
!5723 = !DILocation(line: 280, column: 3, scope: !5712)
!5724 = !DILocation(line: 282, column: 6, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 282, column: 6)
!5726 = !DILocation(line: 282, column: 6, scope: !5620)
!5727 = !DILocation(line: 283, column: 12, scope: !5725)
!5728 = !DILocation(line: 283, column: 16, scope: !5725)
!5729 = !DILocation(line: 283, column: 4, scope: !5725)
!5730 = !DILocation(line: 283, column: 10, scope: !5725)
!5731 = !DILocation(line: 283, column: 3, scope: !5725)
!5732 = !DILocation(line: 284, column: 6, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 284, column: 6)
!5734 = !DILocation(line: 284, column: 12, scope: !5733)
!5735 = !DILocation(line: 284, column: 15, scope: !5733)
!5736 = !DILocation(line: 284, column: 19, scope: !5733)
!5737 = !DILocation(line: 284, column: 6, scope: !5620)
!5738 = !DILocation(line: 285, column: 10, scope: !5733)
!5739 = !DILocation(line: 285, column: 17, scope: !5733)
!5740 = !DILocation(line: 285, column: 21, scope: !5733)
!5741 = !DILocation(line: 285, column: 3, scope: !5733)
!5742 = !DILocation(line: 286, column: 6, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 286, column: 6)
!5744 = !DILocation(line: 286, column: 6, scope: !5620)
!5745 = !DILocation(line: 287, column: 24, scope: !5743)
!5746 = !DILocation(line: 287, column: 28, scope: !5743)
!5747 = !DILocation(line: 287, column: 35, scope: !5743)
!5748 = !DILocation(line: 287, column: 39, scope: !5743)
!5749 = !DILocation(line: 287, column: 50, scope: !5743)
!5750 = !DILocation(line: 287, column: 3, scope: !5743)
!5751 = !DILocation(line: 288, column: 8, scope: !5620)
!5752 = !DILocation(line: 288, column: 12, scope: !5620)
!5753 = !DILocation(line: 288, column: 6, scope: !5620)
!5754 = !DILocation(line: 288, column: 2, scope: !5620)
!5755 = !DILabel(scope: !5620, name: "out", file: !3, line: 289)
!5756 = !DILocation(line: 289, column: 2, scope: !5620)
!5757 = !DILocation(line: 290, column: 18, scope: !5620)
!5758 = !DILocation(line: 290, column: 2, scope: !5620)
!5759 = !DILocation(line: 292, column: 9, scope: !5620)
!5760 = !DILocation(line: 292, column: 2, scope: !5620)
!5761 = !DILocation(line: 293, column: 1, scope: !5620)
!5762 = distinct !DISubprogram(name: "IS_ERR", scope: !5763, file: !5763, line: 34, type: !5764, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5763 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5764 = !DISubroutineType(types: !5765)
!5765 = !{!793, !1914}
!5766 = !DILocalVariable(name: "ptr", arg: 1, scope: !5762, file: !5763, line: 34, type: !1914)
!5767 = !DILocation(line: 34, column: 60, scope: !5762)
!5768 = !DILocation(line: 36, column: 9, scope: !5762)
!5769 = !DILocation(line: 36, column: 2, scope: !5762)
!5770 = distinct !DISubprogram(name: "scsi_req", scope: !274, file: !274, line: 20, type: !5771, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5771 = !DISubroutineType(types: !5772)
!5772 = !{!5650, !2780}
!5773 = !DILocalVariable(name: "rq", arg: 1, scope: !5770, file: !274, line: 20, type: !2780)
!5774 = !DILocation(line: 20, column: 61, scope: !5770)
!5775 = !DILocation(line: 22, column: 26, scope: !5770)
!5776 = !DILocation(line: 22, column: 9, scope: !5770)
!5777 = !DILocation(line: 22, column: 2, scope: !5770)
!5778 = distinct !DISubprogram(name: "scsi_device_unbusy", scope: !3, file: !3, line: 320, type: !5779, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{null, !293, !268}
!5781 = !DILocalVariable(name: "v", arg: 1, scope: !5782, file: !5783, line: 106, type: !5786)
!5782 = distinct !DISubprogram(name: "arch_atomic_dec", scope: !5783, file: !5783, line: 106, type: !5784, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5783 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!5784 = !DISubroutineType(types: !5785)
!5785 = !{null, !5786}
!5786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!5787 = !DILocation(line: 106, column: 55, scope: !5782, inlinedAt: !5788)
!5788 = distinct !DILocation(line: 331, column: 2, scope: !5789, inlinedAt: !5791)
!5789 = distinct !DISubprogram(name: "atomic_dec", scope: !5790, file: !5790, line: 328, type: !5784, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5790 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5791 = distinct !DILocation(line: 330, column: 2, scope: !5778)
!5792 = !DILocalVariable(name: "v", arg: 1, scope: !5793, file: !5794, line: 99, type: !5797)
!5793 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5794, file: !5794, line: 99, type: !5795, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5794 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5795 = !DISubroutineType(types: !5796)
!5796 = !{null, !5797, !928}
!5797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5798, size: 64)
!5798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5799)
!5799 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5800 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !5801)
!5801 = distinct !DILocation(line: 330, column: 2, scope: !5789, inlinedAt: !5791)
!5802 = !DILocalVariable(name: "size", arg: 2, scope: !5793, file: !5794, line: 99, type: !928)
!5803 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !5801)
!5804 = !DILocalVariable(name: "v", arg: 1, scope: !5789, file: !5790, line: 328, type: !5786)
!5805 = !DILocation(line: 328, column: 22, scope: !5789, inlinedAt: !5791)
!5806 = !DILocation(line: 106, column: 55, scope: !5782, inlinedAt: !5807)
!5807 = distinct !DILocation(line: 331, column: 2, scope: !5789, inlinedAt: !5808)
!5808 = distinct !DILocation(line: 328, column: 3, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 327, column: 6)
!5810 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !5811)
!5811 = distinct !DILocation(line: 330, column: 2, scope: !5789, inlinedAt: !5808)
!5812 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !5811)
!5813 = !DILocation(line: 328, column: 22, scope: !5789, inlinedAt: !5808)
!5814 = !DILocalVariable(name: "sdev", arg: 1, scope: !5778, file: !3, line: 320, type: !293)
!5815 = !DILocation(line: 320, column: 45, scope: !5778)
!5816 = !DILocalVariable(name: "cmd", arg: 2, scope: !5778, file: !3, line: 320, type: !268)
!5817 = !DILocation(line: 320, column: 69, scope: !5778)
!5818 = !DILocalVariable(name: "shost", scope: !5778, file: !3, line: 322, type: !297)
!5819 = !DILocation(line: 322, column: 20, scope: !5778)
!5820 = !DILocation(line: 322, column: 28, scope: !5778)
!5821 = !DILocation(line: 322, column: 34, scope: !5778)
!5822 = !DILocalVariable(name: "starget", scope: !5778, file: !3, line: 323, type: !4931)
!5823 = !DILocation(line: 323, column: 22, scope: !5778)
!5824 = !DILocation(line: 323, column: 44, scope: !5778)
!5825 = !DILocation(line: 323, column: 32, scope: !5778)
!5826 = !DILocation(line: 325, column: 21, scope: !5778)
!5827 = !DILocation(line: 325, column: 28, scope: !5778)
!5828 = !DILocation(line: 325, column: 2, scope: !5778)
!5829 = !DILocation(line: 327, column: 6, scope: !5809)
!5830 = !DILocation(line: 327, column: 15, scope: !5809)
!5831 = !DILocation(line: 327, column: 25, scope: !5809)
!5832 = !DILocation(line: 327, column: 6, scope: !5778)
!5833 = !DILocation(line: 328, column: 15, scope: !5809)
!5834 = !DILocation(line: 328, column: 24, scope: !5809)
!5835 = !DILocation(line: 330, column: 31, scope: !5789, inlinedAt: !5808)
!5836 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !5811)
!5837 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !5811)
!5838 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !5811)
!5839 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !5811)
!5840 = !DILocation(line: 331, column: 18, scope: !5789, inlinedAt: !5808)
!5841 = !DILocation(line: 109, column: 16, scope: !5782, inlinedAt: !5807)
!5842 = !DILocation(line: 109, column: 19, scope: !5782, inlinedAt: !5807)
!5843 = !DILocation(line: 108, column: 2, scope: !5782, inlinedAt: !5807)
!5844 = !{i32 -2146275142}
!5845 = !DILocation(line: 328, column: 3, scope: !5809)
!5846 = !DILocation(line: 330, column: 14, scope: !5778)
!5847 = !DILocation(line: 330, column: 20, scope: !5778)
!5848 = !DILocation(line: 330, column: 31, scope: !5789, inlinedAt: !5791)
!5849 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !5801)
!5850 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !5801)
!5851 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !5801)
!5852 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !5801)
!5853 = !DILocation(line: 331, column: 18, scope: !5789, inlinedAt: !5791)
!5854 = !DILocation(line: 109, column: 16, scope: !5782, inlinedAt: !5788)
!5855 = !DILocation(line: 109, column: 19, scope: !5782, inlinedAt: !5788)
!5856 = !DILocation(line: 108, column: 2, scope: !5782, inlinedAt: !5788)
!5857 = !DILocation(line: 331, column: 1, scope: !5778)
!5858 = distinct !DISubprogram(name: "scsi_target", scope: !128, file: !128, line: 329, type: !5859, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5859 = !DISubroutineType(types: !5860)
!5860 = !{!4931, !293}
!5861 = !DILocalVariable(name: "sdev", arg: 1, scope: !5858, file: !128, line: 329, type: !293)
!5862 = !DILocation(line: 329, column: 67, scope: !5858)
!5863 = !DILocalVariable(name: "__mptr", scope: !5864, file: !128, line: 331, type: !291)
!5864 = distinct !DILexicalBlock(scope: !5858, file: !128, line: 331, column: 9)
!5865 = !DILocation(line: 331, column: 9, scope: !5864)
!5866 = !DILocation(line: 331, column: 9, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5864, file: !128, line: 331, column: 9)
!5868 = !DILocation(line: 331, column: 2, scope: !5858)
!5869 = distinct !DISubprogram(name: "scsi_dec_host_busy", scope: !3, file: !3, line: 305, type: !5870, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{null, !297, !268}
!5872 = !DILocalVariable(name: "lock", arg: 1, scope: !5873, file: !5874, line: 407, type: !326)
!5873 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5874, file: !5874, line: 407, type: !5875, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5874 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5875 = !DISubroutineType(types: !5876)
!5876 = !{null, !326, !356}
!5877 = !DILocation(line: 407, column: 64, scope: !5873, inlinedAt: !5878)
!5878 = distinct !DILocation(line: 315, column: 3, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 311, column: 46)
!5880 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 311, column: 6)
!5881 = !DILocalVariable(name: "flags", arg: 2, scope: !5873, file: !5874, line: 407, type: !356)
!5882 = !DILocation(line: 407, column: 84, scope: !5873, inlinedAt: !5878)
!5883 = !DILocalVariable(name: "lock", arg: 1, scope: !5884, file: !5874, line: 327, type: !326)
!5884 = distinct !DISubprogram(name: "spinlock_check", scope: !5874, file: !5874, line: 327, type: !5885, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!5887, !326}
!5887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!5888 = !DILocation(line: 327, column: 67, scope: !5884, inlinedAt: !5889)
!5889 = distinct !DILocation(line: 312, column: 3, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 312, column: 3)
!5891 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 312, column: 3)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 312, column: 3)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 312, column: 3)
!5894 = distinct !DILexicalBlock(scope: !5879, file: !3, line: 312, column: 3)
!5895 = !DILocalVariable(name: "shost", arg: 1, scope: !5869, file: !3, line: 305, type: !297)
!5896 = !DILocation(line: 305, column: 50, scope: !5869)
!5897 = !DILocalVariable(name: "cmd", arg: 2, scope: !5869, file: !3, line: 305, type: !268)
!5898 = !DILocation(line: 305, column: 75, scope: !5869)
!5899 = !DILocalVariable(name: "flags", scope: !5869, file: !3, line: 307, type: !356)
!5900 = !DILocation(line: 307, column: 16, scope: !5869)
!5901 = !DILocation(line: 639, column: 2, scope: !5902, inlinedAt: !5904)
!5902 = distinct !DISubprogram(name: "rcu_read_lock", scope: !5903, file: !5903, line: 637, type: !4497, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5903 = !DIFile(filename: "./include/linux/rcupdate.h", directory: "/home/lizy2001/genbc/linux")
!5904 = distinct !DILocation(line: 309, column: 2, scope: !5869)
!5905 = !DILocation(line: 310, column: 36, scope: !5869)
!5906 = !DILocation(line: 310, column: 41, scope: !5869)
!5907 = !DILocation(line: 310, column: 2, scope: !5869)
!5908 = !DILocation(line: 311, column: 6, scope: !5880)
!5909 = !DILocation(line: 311, column: 6, scope: !5869)
!5910 = !DILocation(line: 312, column: 3, scope: !5879)
!5911 = !DILocation(line: 312, column: 3, scope: !5894)
!5912 = !DILocalVariable(name: "__dummy", scope: !5913, file: !3, line: 312, type: !356)
!5913 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 312, column: 3)
!5914 = !DILocation(line: 312, column: 3, scope: !5913)
!5915 = !DILocalVariable(name: "__dummy2", scope: !5913, file: !3, line: 312, type: !356)
!5916 = !DILocation(line: 312, column: 3, scope: !5893)
!5917 = !DILocation(line: 312, column: 3, scope: !5892)
!5918 = !DILocation(line: 312, column: 3, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 312, column: 3)
!5920 = !DILocalVariable(name: "__dummy", scope: !5921, file: !3, line: 312, type: !356)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 312, column: 3)
!5922 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 312, column: 3)
!5923 = !DILocation(line: 312, column: 3, scope: !5921)
!5924 = !DILocalVariable(name: "__dummy2", scope: !5921, file: !3, line: 312, type: !356)
!5925 = !DILocation(line: 312, column: 3, scope: !5922)
!5926 = !DILocation(line: 312, column: 3, scope: !5891)
!5927 = !{i32 -2140965612}
!5928 = !DILocation(line: 312, column: 3, scope: !5890)
!5929 = !DILocation(line: 329, column: 10, scope: !5884, inlinedAt: !5889)
!5930 = !DILocation(line: 329, column: 16, scope: !5884, inlinedAt: !5889)
!5931 = !DILocation(line: 313, column: 7, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5879, file: !3, line: 313, column: 7)
!5933 = !DILocation(line: 313, column: 14, scope: !5932)
!5934 = !DILocation(line: 313, column: 26, scope: !5932)
!5935 = !DILocation(line: 313, column: 29, scope: !5932)
!5936 = !DILocation(line: 313, column: 36, scope: !5932)
!5937 = !DILocation(line: 313, column: 7, scope: !5879)
!5938 = !DILocation(line: 314, column: 19, scope: !5932)
!5939 = !DILocation(line: 314, column: 4, scope: !5932)
!5940 = !DILocation(line: 315, column: 26, scope: !5879)
!5941 = !DILocation(line: 315, column: 33, scope: !5879)
!5942 = !DILocation(line: 315, column: 44, scope: !5879)
!5943 = !DILocalVariable(name: "__dummy", scope: !5944, file: !5874, line: 409, type: !356)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !5874, line: 409, column: 2)
!5945 = distinct !DILexicalBlock(scope: !5873, file: !5874, line: 409, column: 2)
!5946 = !DILocation(line: 409, column: 2, scope: !5944, inlinedAt: !5878)
!5947 = !DILocalVariable(name: "__dummy2", scope: !5944, file: !5874, line: 409, type: !356)
!5948 = !DILocalVariable(name: "__dummy", scope: !5949, file: !5874, line: 409, type: !356)
!5949 = distinct !DILexicalBlock(scope: !5950, file: !5874, line: 409, column: 2)
!5950 = distinct !DILexicalBlock(scope: !5951, file: !5874, line: 409, column: 2)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !5874, line: 409, column: 2)
!5952 = distinct !DILexicalBlock(scope: !5945, file: !5874, line: 409, column: 2)
!5953 = !DILocation(line: 409, column: 2, scope: !5949, inlinedAt: !5878)
!5954 = !DILocalVariable(name: "__dummy2", scope: !5949, file: !5874, line: 409, type: !356)
!5955 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !5878)
!5956 = !DILocation(line: 409, column: 2, scope: !5957, inlinedAt: !5878)
!5957 = distinct !DILexicalBlock(scope: !5952, file: !5874, line: 409, column: 2)
!5958 = !{i32 -2145346282}
!5959 = !DILocation(line: 409, column: 2, scope: !5960, inlinedAt: !5878)
!5960 = distinct !DILexicalBlock(scope: !5957, file: !5874, line: 409, column: 2)
!5961 = !DILocation(line: 316, column: 2, scope: !5879)
!5962 = !DILocation(line: 317, column: 2, scope: !5869)
!5963 = !DILocation(line: 318, column: 1, scope: !5869)
!5964 = distinct !DISubprogram(name: "scsi_requeue_run_queue", scope: !3, file: !3, line: 490, type: !2323, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5965 = !DILocalVariable(name: "work", arg: 1, scope: !5964, file: !3, line: 490, type: !2325)
!5966 = !DILocation(line: 490, column: 49, scope: !5964)
!5967 = !DILocalVariable(name: "sdev", scope: !5964, file: !3, line: 492, type: !293)
!5968 = !DILocation(line: 492, column: 22, scope: !5964)
!5969 = !DILocalVariable(name: "q", scope: !5964, file: !3, line: 493, type: !2776)
!5970 = !DILocation(line: 493, column: 24, scope: !5964)
!5971 = !DILocalVariable(name: "__mptr", scope: !5972, file: !3, line: 495, type: !291)
!5972 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 495, column: 9)
!5973 = !DILocation(line: 495, column: 9, scope: !5972)
!5974 = !DILocation(line: 495, column: 9, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 495, column: 9)
!5976 = !DILocation(line: 495, column: 7, scope: !5964)
!5977 = !DILocation(line: 496, column: 6, scope: !5964)
!5978 = !DILocation(line: 496, column: 12, scope: !5964)
!5979 = !DILocation(line: 496, column: 4, scope: !5964)
!5980 = !DILocation(line: 497, column: 17, scope: !5964)
!5981 = !DILocation(line: 497, column: 2, scope: !5964)
!5982 = !DILocation(line: 498, column: 1, scope: !5964)
!5983 = distinct !DISubprogram(name: "scsi_run_queue", scope: !3, file: !3, line: 478, type: !3145, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!5984 = !DILocalVariable(name: "q", arg: 1, scope: !5983, file: !3, line: 478, type: !2776)
!5985 = !DILocation(line: 478, column: 50, scope: !5983)
!5986 = !DILocalVariable(name: "sdev", scope: !5983, file: !3, line: 480, type: !293)
!5987 = !DILocation(line: 480, column: 22, scope: !5983)
!5988 = !DILocation(line: 480, column: 29, scope: !5983)
!5989 = !DILocation(line: 480, column: 32, scope: !5983)
!5990 = !DILocation(line: 482, column: 18, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 482, column: 6)
!5992 = !DILocation(line: 482, column: 6, scope: !5991)
!5993 = !DILocation(line: 482, column: 25, scope: !5991)
!5994 = !DILocation(line: 482, column: 6, scope: !5983)
!5995 = !DILocation(line: 483, column: 23, scope: !5991)
!5996 = !DILocation(line: 483, column: 3, scope: !5991)
!5997 = !DILocation(line: 484, column: 19, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 484, column: 6)
!5999 = !DILocation(line: 484, column: 25, scope: !5998)
!6000 = !DILocation(line: 484, column: 31, scope: !5998)
!6001 = !DILocation(line: 484, column: 7, scope: !5998)
!6002 = !DILocation(line: 484, column: 6, scope: !5983)
!6003 = !DILocation(line: 485, column: 25, scope: !5998)
!6004 = !DILocation(line: 485, column: 31, scope: !5998)
!6005 = !DILocation(line: 485, column: 3, scope: !5998)
!6006 = !DILocation(line: 487, column: 23, scope: !5983)
!6007 = !DILocation(line: 487, column: 2, scope: !5983)
!6008 = !DILocation(line: 488, column: 1, scope: !5983)
!6009 = distinct !DISubprogram(name: "scsi_run_host_queues", scope: !3, file: !3, line: 500, type: !4964, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6010 = !DILocalVariable(name: "shost", arg: 1, scope: !6009, file: !3, line: 500, type: !297)
!6011 = !DILocation(line: 500, column: 45, scope: !6009)
!6012 = !DILocalVariable(name: "sdev", scope: !6009, file: !3, line: 502, type: !293)
!6013 = !DILocation(line: 502, column: 22, scope: !6009)
!6014 = !DILocation(line: 504, column: 2, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 504, column: 2)
!6016 = !DILocation(line: 504, column: 2, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 504, column: 2)
!6018 = !DILocation(line: 505, column: 18, scope: !6017)
!6019 = !DILocation(line: 505, column: 24, scope: !6017)
!6020 = !DILocation(line: 505, column: 3, scope: !6017)
!6021 = distinct !{!6021, !6014, !6022}
!6022 = !DILocation(line: 505, column: 37, scope: !6015)
!6023 = !DILocation(line: 506, column: 1, scope: !6009)
!6024 = distinct !DISubprogram(name: "scsi_free_sgtables", scope: !3, file: !3, line: 518, type: !5352, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6025 = !DILocalVariable(name: "cmd", arg: 1, scope: !6024, file: !3, line: 518, type: !268)
!6026 = !DILocation(line: 518, column: 43, scope: !6024)
!6027 = !DILocation(line: 520, column: 6, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6024, file: !3, line: 520, column: 6)
!6029 = !DILocation(line: 520, column: 11, scope: !6028)
!6030 = !DILocation(line: 520, column: 15, scope: !6028)
!6031 = !DILocation(line: 520, column: 21, scope: !6028)
!6032 = !DILocation(line: 520, column: 6, scope: !6024)
!6033 = !DILocation(line: 521, column: 26, scope: !6028)
!6034 = !DILocation(line: 521, column: 31, scope: !6028)
!6035 = !DILocation(line: 521, column: 35, scope: !6028)
!6036 = !DILocation(line: 521, column: 3, scope: !6028)
!6037 = !DILocation(line: 523, column: 25, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6024, file: !3, line: 523, column: 6)
!6039 = !DILocation(line: 523, column: 6, scope: !6038)
!6040 = !DILocation(line: 523, column: 6, scope: !6024)
!6041 = !DILocation(line: 524, column: 26, scope: !6038)
!6042 = !DILocation(line: 524, column: 31, scope: !6038)
!6043 = !DILocation(line: 524, column: 41, scope: !6038)
!6044 = !DILocation(line: 524, column: 3, scope: !6038)
!6045 = !DILocation(line: 526, column: 1, scope: !6024)
!6046 = distinct !DISubprogram(name: "scsi_prot_sg_count", scope: !270, file: !270, line: 293, type: !6047, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{!7, !268}
!6049 = !DILocalVariable(name: "cmd", arg: 1, scope: !6046, file: !270, line: 293, type: !268)
!6050 = !DILocation(line: 293, column: 61, scope: !6046)
!6051 = !DILocation(line: 295, column: 9, scope: !6046)
!6052 = !DILocation(line: 295, column: 14, scope: !6046)
!6053 = !DILocation(line: 295, column: 25, scope: !6046)
!6054 = !DILocation(line: 295, column: 30, scope: !6046)
!6055 = !DILocation(line: 295, column: 40, scope: !6046)
!6056 = !DILocation(line: 295, column: 46, scope: !6046)
!6057 = !DILocation(line: 295, column: 2, scope: !6046)
!6058 = !DILocalVariable(name: "cmd", arg: 1, scope: !5504, file: !3, line: 935, type: !268)
!6059 = !DILocation(line: 935, column: 43, scope: !5504)
!6060 = !DILocalVariable(name: "good_bytes", arg: 2, scope: !5504, file: !3, line: 935, type: !7)
!6061 = !DILocation(line: 935, column: 61, scope: !5504)
!6062 = !DILocalVariable(name: "result", scope: !5504, file: !3, line: 937, type: !286)
!6063 = !DILocation(line: 937, column: 6, scope: !5504)
!6064 = !DILocation(line: 937, column: 15, scope: !5504)
!6065 = !DILocation(line: 937, column: 20, scope: !5504)
!6066 = !DILocalVariable(name: "q", scope: !5504, file: !3, line: 938, type: !2776)
!6067 = !DILocation(line: 938, column: 24, scope: !5504)
!6068 = !DILocation(line: 938, column: 28, scope: !5504)
!6069 = !DILocation(line: 938, column: 33, scope: !5504)
!6070 = !DILocation(line: 938, column: 41, scope: !5504)
!6071 = !DILocalVariable(name: "req", scope: !5504, file: !3, line: 939, type: !2780)
!6072 = !DILocation(line: 939, column: 18, scope: !5504)
!6073 = !DILocation(line: 939, column: 24, scope: !5504)
!6074 = !DILocation(line: 939, column: 29, scope: !5504)
!6075 = !DILocalVariable(name: "blk_stat", scope: !5504, file: !3, line: 940, type: !2614)
!6076 = !DILocation(line: 940, column: 15, scope: !5504)
!6077 = !DILocation(line: 942, column: 6, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 942, column: 6)
!6079 = !DILocation(line: 942, column: 6, scope: !5504)
!6080 = !DILocation(line: 943, column: 41, scope: !6078)
!6081 = !DILocation(line: 943, column: 46, scope: !6078)
!6082 = !DILocation(line: 943, column: 12, scope: !6078)
!6083 = !DILocation(line: 943, column: 10, scope: !6078)
!6084 = !DILocation(line: 943, column: 3, scope: !6078)
!6085 = !DILocation(line: 945, column: 6, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 945, column: 6)
!6087 = !DILocation(line: 945, column: 6, scope: !5504)
!6088 = !DILocation(line: 949, column: 27, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 945, column: 44)
!6090 = !DILocation(line: 949, column: 32, scope: !6089)
!6091 = !DILocation(line: 949, column: 12, scope: !6089)
!6092 = !DILocation(line: 949, column: 3, scope: !6089)
!6093 = !DILocation(line: 949, column: 18, scope: !6089)
!6094 = !DILocation(line: 949, column: 25, scope: !6089)
!6095 = !DILocation(line: 950, column: 2, scope: !6089)
!6096 = !DILocation(line: 956, column: 2, scope: !5504)
!6097 = !DILocation(line: 956, column: 2, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 956, column: 2)
!6099 = !DILocation(line: 964, column: 6, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 964, column: 6)
!6101 = !DILocation(line: 964, column: 6, scope: !5504)
!6102 = !DILocation(line: 965, column: 7, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 965, column: 7)
!6104 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 964, column: 63)
!6105 = !DILocation(line: 965, column: 7, scope: !6104)
!6106 = !DILocation(line: 966, column: 4, scope: !6103)
!6107 = !DILocation(line: 967, column: 2, scope: !6104)
!6108 = !DILocation(line: 970, column: 6, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 970, column: 6)
!6110 = !DILocation(line: 0, scope: !6109)
!6111 = !DILocation(line: 970, column: 6, scope: !5504)
!6112 = !DILocation(line: 971, column: 24, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 971, column: 7)
!6114 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 970, column: 51)
!6115 = !DILocation(line: 971, column: 29, scope: !6113)
!6116 = !DILocation(line: 971, column: 52, scope: !6113)
!6117 = !DILocation(line: 971, column: 39, scope: !6113)
!6118 = !DILocation(line: 971, column: 7, scope: !6113)
!6119 = !DILocation(line: 971, column: 7, scope: !6114)
!6120 = !DILocalVariable(name: "__ret_warn_once", scope: !6121, file: !3, line: 972, type: !286)
!6121 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 972, column: 4)
!6122 = !DILocation(line: 972, column: 4, scope: !6121)
!6123 = !DILocation(line: 972, column: 4, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 972, column: 4)
!6125 = !DILocation(line: 0, scope: !6124)
!6126 = !DILocation(line: 972, column: 4, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 972, column: 4)
!6128 = !DILocalVariable(name: "__ret_warn_on", scope: !6129, file: !3, line: 972, type: !286)
!6129 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 972, column: 4)
!6130 = !DILocation(line: 972, column: 4, scope: !6129)
!6131 = !DILocation(line: 972, column: 4, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 972, column: 4)
!6133 = !DILocation(line: 972, column: 4, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 972, column: 4)
!6135 = !DILocation(line: 972, column: 4, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 972, column: 4)
!6137 = !DILocation(line: 972, column: 4, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 972, column: 4)
!6139 = !DILocation(line: 972, column: 4, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 972, column: 4)
!6141 = !DILocation(line: 972, column: 4, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 972, column: 4)
!6143 = !{i32 -2140938604, i32 -2140938575, i32 -2140938529, i32 -2140938471, i32 -2140938417, i32 -2140938363, i32 -2140938308, i32 -2140938277}
!6144 = !DILocation(line: 972, column: 4, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 972, column: 4)
!6146 = !{i32 -2140937861, i32 -2140937854, i32 -2140937802, i32 -2140937771, i32 -2140937741}
!6147 = !DILocation(line: 972, column: 4, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 972, column: 4)
!6149 = !DILocation(line: 972, column: 4, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 972, column: 4)
!6151 = !DILocation(line: 972, column: 4, scope: !6113)
!6152 = !DILocation(line: 974, column: 3, scope: !6114)
!6153 = !DILocation(line: 981, column: 6, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 981, column: 6)
!6155 = !DILocation(line: 981, column: 6, scope: !5504)
!6156 = !DILocation(line: 982, column: 29, scope: !6154)
!6157 = !DILocation(line: 982, column: 34, scope: !6154)
!6158 = !DILocation(line: 982, column: 3, scope: !6154)
!6159 = !DILocation(line: 984, column: 29, scope: !6154)
!6160 = !DILocation(line: 984, column: 34, scope: !6154)
!6161 = !DILocation(line: 984, column: 3, scope: !6154)
!6162 = !DILocation(line: 985, column: 1, scope: !5504)
!6163 = distinct !DISubprogram(name: "scsi_io_completion_nz_result", scope: !3, file: !3, line: 845, type: !6164, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6164 = !DISubroutineType(types: !6165)
!6165 = !{!286, !268, !286, !6166}
!6166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!6167 = !DILocalVariable(name: "cmd", arg: 1, scope: !6163, file: !3, line: 845, type: !268)
!6168 = !DILocation(line: 845, column: 59, scope: !6163)
!6169 = !DILocalVariable(name: "result", arg: 2, scope: !6163, file: !3, line: 845, type: !286)
!6170 = !DILocation(line: 845, column: 68, scope: !6163)
!6171 = !DILocalVariable(name: "blk_statp", arg: 3, scope: !6163, file: !3, line: 846, type: !6166)
!6172 = !DILocation(line: 846, column: 20, scope: !6163)
!6173 = !DILocalVariable(name: "sense_valid", scope: !6163, file: !3, line: 848, type: !793)
!6174 = !DILocation(line: 848, column: 7, scope: !6163)
!6175 = !DILocalVariable(name: "sense_current", scope: !6163, file: !3, line: 849, type: !793)
!6176 = !DILocation(line: 849, column: 7, scope: !6163)
!6177 = !DILocalVariable(name: "req", scope: !6163, file: !3, line: 850, type: !2780)
!6178 = !DILocation(line: 850, column: 18, scope: !6163)
!6179 = !DILocation(line: 850, column: 24, scope: !6163)
!6180 = !DILocation(line: 850, column: 29, scope: !6163)
!6181 = !DILocalVariable(name: "sshdr", scope: !6163, file: !3, line: 851, type: !5274)
!6182 = !DILocation(line: 851, column: 24, scope: !6163)
!6183 = !DILocation(line: 853, column: 45, scope: !6163)
!6184 = !DILocation(line: 853, column: 16, scope: !6163)
!6185 = !DILocation(line: 853, column: 14, scope: !6163)
!6186 = !DILocation(line: 854, column: 6, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 854, column: 6)
!6188 = !DILocation(line: 854, column: 6, scope: !6163)
!6189 = !DILocation(line: 855, column: 20, scope: !6187)
!6190 = !DILocation(line: 855, column: 19, scope: !6187)
!6191 = !DILocation(line: 855, column: 17, scope: !6187)
!6192 = !DILocation(line: 855, column: 3, scope: !6187)
!6193 = !DILocation(line: 857, column: 28, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 857, column: 6)
!6195 = !DILocation(line: 857, column: 6, scope: !6194)
!6196 = !DILocation(line: 857, column: 6, scope: !6163)
!6197 = !DILocation(line: 858, column: 7, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 858, column: 7)
!6199 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 857, column: 34)
!6200 = !DILocation(line: 858, column: 7, scope: !6199)
!6201 = !DILocalVariable(name: "__UNIQUE_ID___x307", scope: !6202, file: !3, line: 863, type: !286)
!6202 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 863, column: 5)
!6203 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 858, column: 20)
!6204 = !DILocation(line: 863, column: 5, scope: !6202)
!6205 = !DILocalVariable(name: "__UNIQUE_ID___y308", scope: !6202, file: !3, line: 863, type: !286)
!6206 = !DILocation(line: 862, column: 13, scope: !6203)
!6207 = !DILocation(line: 862, column: 4, scope: !6203)
!6208 = !DILocation(line: 862, column: 19, scope: !6203)
!6209 = !DILocation(line: 862, column: 29, scope: !6203)
!6210 = !DILocation(line: 865, column: 3, scope: !6203)
!6211 = !DILocation(line: 866, column: 7, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 866, column: 7)
!6213 = !DILocation(line: 866, column: 7, scope: !6199)
!6214 = !DILocation(line: 867, column: 43, scope: !6212)
!6215 = !DILocation(line: 867, column: 48, scope: !6212)
!6216 = !DILocation(line: 867, column: 17, scope: !6212)
!6217 = !DILocation(line: 867, column: 5, scope: !6212)
!6218 = !DILocation(line: 867, column: 15, scope: !6212)
!6219 = !DILocation(line: 867, column: 4, scope: !6212)
!6220 = !DILocation(line: 868, column: 2, scope: !6199)
!6221 = !DILocation(line: 868, column: 26, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 868, column: 13)
!6223 = !DILocation(line: 868, column: 13, scope: !6222)
!6224 = !DILocation(line: 868, column: 31, scope: !6222)
!6225 = !DILocation(line: 868, column: 36, scope: !6222)
!6226 = !DILocation(line: 868, column: 39, scope: !6222)
!6227 = !DILocation(line: 868, column: 13, scope: !6194)
!6228 = !DILocation(line: 874, column: 42, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 868, column: 54)
!6230 = !DILocation(line: 874, column: 47, scope: !6229)
!6231 = !DILocation(line: 874, column: 16, scope: !6229)
!6232 = !DILocation(line: 874, column: 4, scope: !6229)
!6233 = !DILocation(line: 874, column: 14, scope: !6229)
!6234 = !DILocation(line: 875, column: 2, scope: !6229)
!6235 = !DILocation(line: 882, column: 6, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 882, column: 6)
!6237 = !DILocation(line: 882, column: 18, scope: !6236)
!6238 = !DILocation(line: 882, column: 28, scope: !6236)
!6239 = !DILocation(line: 882, column: 22, scope: !6236)
!6240 = !DILocation(line: 882, column: 38, scope: !6236)
!6241 = !DILocation(line: 882, column: 6, scope: !6163)
!6242 = !DILocalVariable(name: "do_print", scope: !6243, file: !3, line: 883, type: !793)
!6243 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 882, column: 59)
!6244 = !DILocation(line: 883, column: 8, scope: !6243)
!6245 = !DILocation(line: 889, column: 14, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 889, column: 7)
!6247 = !DILocation(line: 889, column: 8, scope: !6246)
!6248 = !DILocation(line: 889, column: 18, scope: !6246)
!6249 = !DILocation(line: 889, column: 26, scope: !6246)
!6250 = !DILocation(line: 889, column: 36, scope: !6246)
!6251 = !DILocation(line: 889, column: 30, scope: !6246)
!6252 = !DILocation(line: 889, column: 41, scope: !6246)
!6253 = !DILocation(line: 889, column: 7, scope: !6243)
!6254 = !DILocation(line: 890, column: 13, scope: !6246)
!6255 = !DILocation(line: 890, column: 4, scope: !6246)
!6256 = !DILocation(line: 891, column: 12, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 891, column: 12)
!6258 = !DILocation(line: 891, column: 17, scope: !6257)
!6259 = !DILocation(line: 891, column: 26, scope: !6257)
!6260 = !DILocation(line: 891, column: 12, scope: !6246)
!6261 = !DILocation(line: 892, column: 13, scope: !6257)
!6262 = !DILocation(line: 892, column: 4, scope: !6257)
!6263 = !DILocation(line: 893, column: 7, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 893, column: 7)
!6265 = !DILocation(line: 893, column: 7, scope: !6243)
!6266 = !DILocation(line: 894, column: 21, scope: !6264)
!6267 = !DILocation(line: 894, column: 4, scope: !6264)
!6268 = !DILocation(line: 895, column: 10, scope: !6243)
!6269 = !DILocation(line: 897, column: 4, scope: !6243)
!6270 = !DILocation(line: 897, column: 14, scope: !6243)
!6271 = !DILocation(line: 898, column: 2, scope: !6243)
!6272 = !DILocation(line: 906, column: 6, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 906, column: 6)
!6274 = !DILocation(line: 906, column: 26, scope: !6273)
!6275 = !DILocation(line: 906, column: 49, scope: !6273)
!6276 = !DILocation(line: 906, column: 29, scope: !6273)
!6277 = !DILocation(line: 906, column: 6, scope: !6163)
!6278 = !DILocation(line: 907, column: 10, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 906, column: 58)
!6280 = !DILocation(line: 908, column: 4, scope: !6279)
!6281 = !DILocation(line: 908, column: 14, scope: !6279)
!6282 = !DILocation(line: 909, column: 2, scope: !6279)
!6283 = !DILocation(line: 910, column: 9, scope: !6163)
!6284 = !DILocation(line: 910, column: 2, scope: !6163)
!6285 = distinct !DISubprogram(name: "blk_rq_is_passthrough", scope: !68, file: !68, line: 270, type: !4976, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6286 = !DILocalVariable(name: "rq", arg: 1, scope: !6285, file: !68, line: 270, type: !2780)
!6287 = !DILocation(line: 270, column: 58, scope: !6285)
!6288 = !DILocation(line: 272, column: 24, scope: !6285)
!6289 = !DILocation(line: 272, column: 9, scope: !6285)
!6290 = !DILocation(line: 272, column: 28, scope: !6285)
!6291 = !DILocation(line: 272, column: 49, scope: !6285)
!6292 = !DILocation(line: 272, column: 31, scope: !6285)
!6293 = !DILocation(line: 272, column: 2, scope: !6285)
!6294 = distinct !DISubprogram(name: "blk_rq_bytes", scope: !68, file: !68, line: 988, type: !6295, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6295 = !DISubroutineType(types: !6296)
!6296 = !{!7, !6297}
!6297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6298, size: 64)
!6298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2781)
!6299 = !DILocalVariable(name: "rq", arg: 1, scope: !6294, file: !68, line: 988, type: !6297)
!6300 = !DILocation(line: 988, column: 63, scope: !6294)
!6301 = !DILocation(line: 990, column: 9, scope: !6294)
!6302 = !DILocation(line: 990, column: 13, scope: !6294)
!6303 = !DILocation(line: 990, column: 2, scope: !6294)
!6304 = distinct !DISubprogram(name: "scsi_end_request", scope: !3, file: !3, line: 562, type: !6305, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6305 = !DISubroutineType(types: !6306)
!6306 = !{!793, !2780, !2614, !7}
!6307 = !DILocalVariable(name: "req", arg: 1, scope: !6304, file: !3, line: 562, type: !2780)
!6308 = !DILocation(line: 562, column: 46, scope: !6304)
!6309 = !DILocalVariable(name: "error", arg: 2, scope: !6304, file: !3, line: 562, type: !2614)
!6310 = !DILocation(line: 562, column: 64, scope: !6304)
!6311 = !DILocalVariable(name: "bytes", arg: 3, scope: !6304, file: !3, line: 563, type: !7)
!6312 = !DILocation(line: 563, column: 16, scope: !6304)
!6313 = !DILocalVariable(name: "cmd", scope: !6304, file: !3, line: 565, type: !268)
!6314 = !DILocation(line: 565, column: 20, scope: !6304)
!6315 = !DILocation(line: 565, column: 43, scope: !6304)
!6316 = !DILocation(line: 565, column: 26, scope: !6304)
!6317 = !DILocalVariable(name: "sdev", scope: !6304, file: !3, line: 566, type: !293)
!6318 = !DILocation(line: 566, column: 22, scope: !6304)
!6319 = !DILocation(line: 566, column: 29, scope: !6304)
!6320 = !DILocation(line: 566, column: 34, scope: !6304)
!6321 = !DILocalVariable(name: "q", scope: !6304, file: !3, line: 567, type: !2776)
!6322 = !DILocation(line: 567, column: 24, scope: !6304)
!6323 = !DILocation(line: 567, column: 28, scope: !6304)
!6324 = !DILocation(line: 567, column: 34, scope: !6304)
!6325 = !DILocation(line: 569, column: 25, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 569, column: 6)
!6327 = !DILocation(line: 569, column: 30, scope: !6326)
!6328 = !DILocation(line: 569, column: 37, scope: !6326)
!6329 = !DILocation(line: 569, column: 6, scope: !6326)
!6330 = !DILocation(line: 569, column: 6, scope: !6304)
!6331 = !DILocation(line: 570, column: 3, scope: !6326)
!6332 = !DILocation(line: 572, column: 6, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 572, column: 6)
!6334 = !DILocation(line: 572, column: 6, scope: !6304)
!6335 = !DILocation(line: 573, column: 23, scope: !6333)
!6336 = !DILocation(line: 573, column: 28, scope: !6333)
!6337 = !DILocation(line: 573, column: 3, scope: !6333)
!6338 = !DILocation(line: 575, column: 22, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 575, column: 6)
!6340 = !DILocation(line: 575, column: 7, scope: !6339)
!6341 = !DILocation(line: 575, column: 6, scope: !6304)
!6342 = !DILocalVariable(name: "__ret_warn_on", scope: !6343, file: !3, line: 576, type: !286)
!6343 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 576, column: 3)
!6344 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 575, column: 28)
!6345 = !DILocation(line: 576, column: 3, scope: !6343)
!6346 = !DILocation(line: 576, column: 3, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 576, column: 3)
!6348 = !DILocation(line: 576, column: 3, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 576, column: 3)
!6350 = !DILocation(line: 576, column: 3, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 576, column: 3)
!6352 = !DILocation(line: 576, column: 3, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 576, column: 3)
!6354 = !{i32 -2140948597, i32 -2140948568, i32 -2140948522, i32 -2140948464, i32 -2140948410, i32 -2140948356, i32 -2140948301, i32 -2140948270}
!6355 = !DILocation(line: 576, column: 3, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 576, column: 3)
!6357 = !{i32 -2140943793, i32 -2140943786, i32 -2140943734, i32 -2140943703, i32 -2140943673}
!6358 = !DILocation(line: 576, column: 3, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 576, column: 3)
!6360 = !DILocation(line: 577, column: 3, scope: !6344)
!6361 = !DILocation(line: 577, column: 8, scope: !6344)
!6362 = !DILocation(line: 577, column: 14, scope: !6344)
!6363 = !DILocation(line: 578, column: 2, scope: !6344)
!6364 = !DILocation(line: 586, column: 20, scope: !6304)
!6365 = !DILocation(line: 586, column: 25, scope: !6304)
!6366 = !DILocation(line: 586, column: 2, scope: !6304)
!6367 = !DILocation(line: 595, column: 21, scope: !6304)
!6368 = !DILocation(line: 595, column: 2, scope: !6304)
!6369 = !DILocation(line: 601, column: 18, scope: !6304)
!6370 = !DILocation(line: 601, column: 21, scope: !6304)
!6371 = !DILocation(line: 601, column: 2, scope: !6304)
!6372 = !DILocation(line: 603, column: 23, scope: !6304)
!6373 = !DILocation(line: 603, column: 28, scope: !6304)
!6374 = !DILocation(line: 603, column: 2, scope: !6304)
!6375 = !DILocation(line: 605, column: 23, scope: !6304)
!6376 = !DILocation(line: 605, column: 2, scope: !6304)
!6377 = !DILocation(line: 607, column: 18, scope: !6304)
!6378 = !DILocation(line: 607, column: 21, scope: !6304)
!6379 = !DILocation(line: 607, column: 2, scope: !6304)
!6380 = !DILocation(line: 608, column: 2, scope: !6304)
!6381 = !DILocation(line: 609, column: 1, scope: !6304)
!6382 = distinct !DISubprogram(name: "scsi_io_completion_reprep", scope: !3, file: !3, line: 651, type: !6383, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6383 = !DISubroutineType(types: !6384)
!6384 = !{null, !268, !2776}
!6385 = !DILocalVariable(name: "cmd", arg: 1, scope: !6382, file: !3, line: 651, type: !268)
!6386 = !DILocation(line: 651, column: 57, scope: !6382)
!6387 = !DILocalVariable(name: "q", arg: 2, scope: !6382, file: !3, line: 652, type: !2776)
!6388 = !DILocation(line: 652, column: 33, scope: !6382)
!6389 = !DILocation(line: 655, column: 22, scope: !6382)
!6390 = !DILocation(line: 655, column: 2, scope: !6382)
!6391 = !DILocation(line: 656, column: 1, scope: !6382)
!6392 = !DILocalVariable(name: "cmd", arg: 1, scope: !265, file: !3, line: 676, type: !268)
!6393 = !DILocation(line: 676, column: 57, scope: !265)
!6394 = !DILocalVariable(name: "result", arg: 2, scope: !265, file: !3, line: 676, type: !286)
!6395 = !DILocation(line: 676, column: 66, scope: !265)
!6396 = !DILocalVariable(name: "q", scope: !265, file: !3, line: 678, type: !2776)
!6397 = !DILocation(line: 678, column: 24, scope: !265)
!6398 = !DILocation(line: 678, column: 28, scope: !265)
!6399 = !DILocation(line: 678, column: 33, scope: !265)
!6400 = !DILocation(line: 678, column: 41, scope: !265)
!6401 = !DILocalVariable(name: "req", scope: !265, file: !3, line: 679, type: !2780)
!6402 = !DILocation(line: 679, column: 18, scope: !265)
!6403 = !DILocation(line: 679, column: 24, scope: !265)
!6404 = !DILocation(line: 679, column: 29, scope: !265)
!6405 = !DILocalVariable(name: "level", scope: !265, file: !3, line: 680, type: !286)
!6406 = !DILocation(line: 680, column: 6, scope: !265)
!6407 = !DILocalVariable(name: "action", scope: !265, file: !3, line: 682, type: !264)
!6408 = !DILocation(line: 682, column: 30, scope: !265)
!6409 = !DILocalVariable(name: "sshdr", scope: !265, file: !3, line: 683, type: !5274)
!6410 = !DILocation(line: 683, column: 24, scope: !265)
!6411 = !DILocalVariable(name: "sense_valid", scope: !265, file: !3, line: 684, type: !793)
!6412 = !DILocation(line: 684, column: 7, scope: !265)
!6413 = !DILocalVariable(name: "sense_current", scope: !265, file: !3, line: 685, type: !793)
!6414 = !DILocation(line: 685, column: 7, scope: !265)
!6415 = !DILocalVariable(name: "blk_stat", scope: !265, file: !3, line: 686, type: !2614)
!6416 = !DILocation(line: 686, column: 15, scope: !265)
!6417 = !DILocation(line: 688, column: 45, scope: !265)
!6418 = !DILocation(line: 688, column: 16, scope: !265)
!6419 = !DILocation(line: 688, column: 14, scope: !265)
!6420 = !DILocation(line: 689, column: 6, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !265, file: !3, line: 689, column: 6)
!6422 = !DILocation(line: 689, column: 6, scope: !265)
!6423 = !DILocation(line: 690, column: 20, scope: !6421)
!6424 = !DILocation(line: 690, column: 19, scope: !6421)
!6425 = !DILocation(line: 690, column: 17, scope: !6421)
!6426 = !DILocation(line: 690, column: 3, scope: !6421)
!6427 = !DILocation(line: 692, column: 39, scope: !265)
!6428 = !DILocation(line: 692, column: 44, scope: !265)
!6429 = !DILocation(line: 692, column: 13, scope: !265)
!6430 = !DILocation(line: 692, column: 11, scope: !265)
!6431 = !DILocation(line: 694, column: 6, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !265, file: !3, line: 694, column: 6)
!6433 = !DILocation(line: 694, column: 24, scope: !6432)
!6434 = !DILocation(line: 694, column: 6, scope: !265)
!6435 = !DILocation(line: 699, column: 10, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 694, column: 38)
!6437 = !DILocation(line: 700, column: 2, scope: !6436)
!6438 = !DILocation(line: 700, column: 13, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 700, column: 13)
!6440 = !DILocation(line: 700, column: 25, scope: !6439)
!6441 = !DILocation(line: 700, column: 28, scope: !6439)
!6442 = !DILocation(line: 700, column: 13, scope: !6432)
!6443 = !DILocation(line: 701, column: 17, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 700, column: 43)
!6445 = !DILocation(line: 701, column: 11, scope: !6444)
!6446 = !DILocation(line: 701, column: 3, scope: !6444)
!6447 = !DILocation(line: 703, column: 8, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 703, column: 8)
!6449 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 701, column: 28)
!6450 = !DILocation(line: 703, column: 13, scope: !6448)
!6451 = !DILocation(line: 703, column: 21, scope: !6448)
!6452 = !DILocation(line: 703, column: 8, scope: !6449)
!6453 = !DILocation(line: 707, column: 5, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 703, column: 32)
!6455 = !DILocation(line: 707, column: 10, scope: !6454)
!6456 = !DILocation(line: 707, column: 18, scope: !6454)
!6457 = !DILocation(line: 707, column: 26, scope: !6454)
!6458 = !DILocation(line: 708, column: 12, scope: !6454)
!6459 = !DILocation(line: 709, column: 4, scope: !6454)
!6460 = !DILocation(line: 715, column: 12, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 709, column: 11)
!6462 = !DILocation(line: 717, column: 4, scope: !6449)
!6463 = !DILocation(line: 727, column: 9, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 727, column: 8)
!6465 = !DILocation(line: 727, column: 14, scope: !6464)
!6466 = !DILocation(line: 727, column: 22, scope: !6464)
!6467 = !DILocation(line: 727, column: 36, scope: !6464)
!6468 = !DILocation(line: 728, column: 14, scope: !6464)
!6469 = !DILocation(line: 728, column: 8, scope: !6464)
!6470 = !DILocation(line: 728, column: 18, scope: !6464)
!6471 = !DILocation(line: 728, column: 26, scope: !6464)
!6472 = !DILocation(line: 728, column: 35, scope: !6464)
!6473 = !DILocation(line: 728, column: 29, scope: !6464)
!6474 = !DILocation(line: 728, column: 40, scope: !6464)
!6475 = !DILocation(line: 728, column: 49, scope: !6464)
!6476 = !DILocation(line: 729, column: 9, scope: !6464)
!6477 = !DILocation(line: 729, column: 14, scope: !6464)
!6478 = !DILocation(line: 729, column: 22, scope: !6464)
!6479 = !DILocation(line: 729, column: 33, scope: !6464)
!6480 = !DILocation(line: 730, column: 9, scope: !6464)
!6481 = !DILocation(line: 730, column: 14, scope: !6464)
!6482 = !DILocation(line: 730, column: 22, scope: !6464)
!6483 = !DILocation(line: 727, column: 8, scope: !6449)
!6484 = !DILocation(line: 732, column: 5, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 730, column: 36)
!6486 = !DILocation(line: 732, column: 10, scope: !6485)
!6487 = !DILocation(line: 732, column: 18, scope: !6485)
!6488 = !DILocation(line: 732, column: 32, scope: !6485)
!6489 = !DILocation(line: 733, column: 12, scope: !6485)
!6490 = !DILocation(line: 734, column: 4, scope: !6485)
!6491 = !DILocation(line: 734, column: 21, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 734, column: 15)
!6493 = !DILocation(line: 734, column: 15, scope: !6492)
!6494 = !DILocation(line: 734, column: 25, scope: !6492)
!6495 = !DILocation(line: 734, column: 15, scope: !6464)
!6496 = !DILocation(line: 735, column: 12, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 734, column: 44)
!6498 = !DILocation(line: 736, column: 14, scope: !6497)
!6499 = !DILocation(line: 738, column: 4, scope: !6497)
!6500 = !DILocation(line: 738, column: 21, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 738, column: 15)
!6502 = !DILocation(line: 738, column: 15, scope: !6501)
!6503 = !DILocation(line: 738, column: 25, scope: !6501)
!6504 = !DILocation(line: 738, column: 33, scope: !6501)
!6505 = !DILocation(line: 738, column: 42, scope: !6501)
!6506 = !DILocation(line: 738, column: 36, scope: !6501)
!6507 = !DILocation(line: 738, column: 46, scope: !6501)
!6508 = !DILocation(line: 738, column: 15, scope: !6492)
!6509 = !DILocation(line: 739, column: 12, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 738, column: 55)
!6511 = !DILocation(line: 740, column: 14, scope: !6510)
!6512 = !DILocation(line: 741, column: 4, scope: !6510)
!6513 = !DILocation(line: 742, column: 12, scope: !6501)
!6514 = !DILocation(line: 743, column: 4, scope: !6449)
!6515 = !DILocation(line: 745, column: 11, scope: !6449)
!6516 = !DILocation(line: 746, column: 14, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 746, column: 8)
!6518 = !DILocation(line: 746, column: 8, scope: !6517)
!6519 = !DILocation(line: 746, column: 18, scope: !6517)
!6520 = !DILocation(line: 746, column: 8, scope: !6449)
!6521 = !DILocation(line: 747, column: 14, scope: !6517)
!6522 = !DILocation(line: 747, column: 5, scope: !6517)
!6523 = !DILocation(line: 748, column: 4, scope: !6449)
!6524 = !DILocation(line: 753, column: 14, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 753, column: 8)
!6526 = !DILocation(line: 753, column: 8, scope: !6525)
!6527 = !DILocation(line: 753, column: 18, scope: !6525)
!6528 = !DILocation(line: 753, column: 8, scope: !6449)
!6529 = !DILocation(line: 754, column: 19, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 753, column: 27)
!6531 = !DILocation(line: 754, column: 13, scope: !6530)
!6532 = !DILocation(line: 754, column: 5, scope: !6530)
!6533 = !DILocation(line: 767, column: 13, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 754, column: 25)
!6535 = !DILocation(line: 768, column: 6, scope: !6534)
!6536 = !DILocation(line: 770, column: 13, scope: !6534)
!6537 = !DILocation(line: 771, column: 6, scope: !6534)
!6538 = !DILocation(line: 773, column: 4, scope: !6530)
!6539 = !DILocation(line: 774, column: 12, scope: !6525)
!6540 = !DILocation(line: 775, column: 4, scope: !6449)
!6541 = !DILocation(line: 778, column: 11, scope: !6449)
!6542 = !DILocation(line: 779, column: 4, scope: !6449)
!6543 = !DILocation(line: 781, column: 11, scope: !6449)
!6544 = !DILocation(line: 782, column: 15, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 782, column: 8)
!6546 = !DILocation(line: 782, column: 9, scope: !6545)
!6547 = !DILocation(line: 782, column: 19, scope: !6545)
!6548 = !DILocation(line: 782, column: 27, scope: !6545)
!6549 = !DILocation(line: 782, column: 36, scope: !6545)
!6550 = !DILocation(line: 782, column: 30, scope: !6545)
!6551 = !DILocation(line: 782, column: 41, scope: !6545)
!6552 = !DILocation(line: 782, column: 50, scope: !6545)
!6553 = !DILocation(line: 783, column: 15, scope: !6545)
!6554 = !DILocation(line: 783, column: 9, scope: !6545)
!6555 = !DILocation(line: 783, column: 19, scope: !6545)
!6556 = !DILocation(line: 783, column: 27, scope: !6545)
!6557 = !DILocation(line: 784, column: 16, scope: !6545)
!6558 = !DILocation(line: 784, column: 10, scope: !6545)
!6559 = !DILocation(line: 784, column: 21, scope: !6545)
!6560 = !DILocation(line: 784, column: 29, scope: !6545)
!6561 = !DILocation(line: 784, column: 38, scope: !6545)
!6562 = !DILocation(line: 784, column: 32, scope: !6545)
!6563 = !DILocation(line: 784, column: 43, scope: !6545)
!6564 = !DILocation(line: 782, column: 8, scope: !6449)
!6565 = !DILocation(line: 786, column: 14, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 784, column: 54)
!6567 = !DILocation(line: 787, column: 4, scope: !6566)
!6568 = !DILocation(line: 788, column: 4, scope: !6449)
!6569 = !DILocation(line: 790, column: 11, scope: !6449)
!6570 = !DILocation(line: 791, column: 4, scope: !6449)
!6571 = !DILocation(line: 793, column: 2, scope: !6444)
!6572 = !DILocation(line: 794, column: 10, scope: !6439)
!6573 = !DILocation(line: 796, column: 6, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !265, file: !3, line: 796, column: 6)
!6575 = !DILocation(line: 796, column: 13, scope: !6574)
!6576 = !DILocation(line: 796, column: 28, scope: !6574)
!6577 = !DILocation(line: 796, column: 57, scope: !6574)
!6578 = !DILocation(line: 796, column: 31, scope: !6574)
!6579 = !DILocation(line: 796, column: 6, scope: !265)
!6580 = !DILocation(line: 797, column: 10, scope: !6574)
!6581 = !DILocation(line: 797, column: 3, scope: !6574)
!6582 = !DILocation(line: 799, column: 10, scope: !265)
!6583 = !DILocation(line: 799, column: 2, scope: !265)
!6584 = !DILocation(line: 802, column: 9, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 802, column: 7)
!6586 = distinct !DILexicalBlock(scope: !265, file: !3, line: 799, column: 18)
!6587 = !DILocation(line: 802, column: 14, scope: !6585)
!6588 = !DILocation(line: 802, column: 23, scope: !6585)
!6589 = !DILocation(line: 802, column: 7, scope: !6586)
!6590 = !DILocation(line: 807, column: 8, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 807, column: 8)
!6592 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 802, column: 37)
!6593 = !DILocation(line: 807, column: 8, scope: !6592)
!6594 = !DILocation(line: 808, column: 11, scope: !6591)
!6595 = !DILocation(line: 808, column: 5, scope: !6591)
!6596 = !DILocation(line: 816, column: 9, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 816, column: 8)
!6598 = !DILocation(line: 816, column: 15, scope: !6597)
!6599 = !DILocation(line: 816, column: 18, scope: !6597)
!6600 = !DILocation(line: 816, column: 8, scope: !6592)
!6601 = !DILocation(line: 817, column: 23, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 816, column: 37)
!6603 = !DILocation(line: 817, column: 5, scope: !6602)
!6604 = !DILocation(line: 818, column: 9, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 818, column: 9)
!6606 = !DILocation(line: 818, column: 29, scope: !6605)
!6607 = !DILocation(line: 818, column: 9, scope: !6602)
!6608 = !DILocation(line: 819, column: 23, scope: !6605)
!6609 = !DILocation(line: 819, column: 6, scope: !6605)
!6610 = !DILocation(line: 820, column: 24, scope: !6602)
!6611 = !DILocation(line: 820, column: 5, scope: !6602)
!6612 = !DILocation(line: 821, column: 4, scope: !6602)
!6613 = !DILocation(line: 822, column: 3, scope: !6592)
!6614 = !DILocation(line: 823, column: 25, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 823, column: 7)
!6616 = !DILocation(line: 823, column: 30, scope: !6615)
!6617 = !DILocation(line: 823, column: 57, scope: !6615)
!6618 = !DILocation(line: 823, column: 40, scope: !6615)
!6619 = !DILocation(line: 823, column: 8, scope: !6615)
!6620 = !DILocation(line: 823, column: 7, scope: !6586)
!6621 = !DILocation(line: 824, column: 4, scope: !6615)
!6622 = !DILocation(line: 823, column: 61, scope: !6615)
!6623 = !DILocation(line: 827, column: 29, scope: !6586)
!6624 = !DILocation(line: 827, column: 34, scope: !6586)
!6625 = !DILocation(line: 827, column: 3, scope: !6586)
!6626 = !DILocation(line: 828, column: 3, scope: !6586)
!6627 = !DILocation(line: 831, column: 23, scope: !6586)
!6628 = !DILocation(line: 831, column: 3, scope: !6586)
!6629 = !DILocation(line: 832, column: 3, scope: !6586)
!6630 = !DILocation(line: 835, column: 23, scope: !6586)
!6631 = !DILocation(line: 835, column: 3, scope: !6586)
!6632 = !DILocation(line: 836, column: 3, scope: !6586)
!6633 = !DILocation(line: 838, column: 1, scope: !265)
!6634 = distinct !DISubprogram(name: "scsi_alloc_sgtables", scope: !3, file: !3, line: 1004, type: !5465, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6635 = !DILocalVariable(name: "cmd", arg: 1, scope: !6634, file: !3, line: 1004, type: !268)
!6636 = !DILocation(line: 1004, column: 52, scope: !6634)
!6637 = !DILocalVariable(name: "sdev", scope: !6634, file: !3, line: 1006, type: !293)
!6638 = !DILocation(line: 1006, column: 22, scope: !6634)
!6639 = !DILocation(line: 1006, column: 29, scope: !6634)
!6640 = !DILocation(line: 1006, column: 34, scope: !6634)
!6641 = !DILocalVariable(name: "rq", scope: !6634, file: !3, line: 1007, type: !2780)
!6642 = !DILocation(line: 1007, column: 18, scope: !6634)
!6643 = !DILocation(line: 1007, column: 23, scope: !6634)
!6644 = !DILocation(line: 1007, column: 28, scope: !6634)
!6645 = !DILocalVariable(name: "nr_segs", scope: !6634, file: !3, line: 1008, type: !284)
!6646 = !DILocation(line: 1008, column: 17, scope: !6634)
!6647 = !DILocation(line: 1008, column: 51, scope: !6634)
!6648 = !DILocation(line: 1008, column: 27, scope: !6634)
!6649 = !DILocalVariable(name: "last_sg", scope: !6634, file: !3, line: 1009, type: !5333)
!6650 = !DILocation(line: 1009, column: 22, scope: !6634)
!6651 = !DILocalVariable(name: "ret", scope: !6634, file: !3, line: 1010, type: !2614)
!6652 = !DILocation(line: 1010, column: 15, scope: !6634)
!6653 = !DILocalVariable(name: "need_drain", scope: !6634, file: !3, line: 1011, type: !793)
!6654 = !DILocation(line: 1011, column: 7, scope: !6634)
!6655 = !DILocation(line: 1011, column: 45, scope: !6634)
!6656 = !DILocation(line: 1011, column: 51, scope: !6634)
!6657 = !DILocation(line: 1011, column: 20, scope: !6634)
!6658 = !DILocalVariable(name: "count", scope: !6634, file: !3, line: 1012, type: !286)
!6659 = !DILocation(line: 1012, column: 6, scope: !6634)
!6660 = !DILocalVariable(name: "__ret_warn_on", scope: !6661, file: !3, line: 1014, type: !286)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 1014, column: 6)
!6662 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1014, column: 6)
!6663 = !DILocation(line: 1014, column: 6, scope: !6661)
!6664 = !DILocation(line: 1014, column: 6, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 1014, column: 6)
!6666 = !DILocation(line: 1014, column: 6, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1014, column: 6)
!6668 = !DILocation(line: 1014, column: 6, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 1014, column: 6)
!6670 = !DILocation(line: 1014, column: 6, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 1014, column: 6)
!6672 = !{i32 -2140936795, i32 -2140936766, i32 -2140936720, i32 -2140936662, i32 -2140936608, i32 -2140936554, i32 -2140936499, i32 -2140936468}
!6673 = !DILocation(line: 1014, column: 6, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 1014, column: 6)
!6675 = !{i32 -2140936051, i32 -2140936044, i32 -2140935992, i32 -2140935961, i32 -2140935931}
!6676 = !DILocation(line: 1014, column: 6, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 1014, column: 6)
!6678 = !DILocation(line: 1014, column: 6, scope: !6662)
!6679 = !DILocation(line: 1014, column: 6, scope: !6634)
!6680 = !DILocation(line: 1015, column: 3, scope: !6662)
!6681 = !DILocation(line: 1021, column: 6, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1021, column: 6)
!6683 = !DILocation(line: 1021, column: 6, scope: !6634)
!6684 = !DILocation(line: 1022, column: 10, scope: !6682)
!6685 = !DILocation(line: 1022, column: 3, scope: !6682)
!6686 = !DILocation(line: 1027, column: 6, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1027, column: 6)
!6688 = !DILocation(line: 1027, column: 6, scope: !6634)
!6689 = !DILocation(line: 1029, column: 3, scope: !6687)
!6690 = !DILocation(line: 1035, column: 26, scope: !6634)
!6691 = !DILocation(line: 1035, column: 30, scope: !6634)
!6692 = !DILocation(line: 1035, column: 33, scope: !6634)
!6693 = !DILocation(line: 1035, column: 37, scope: !6634)
!6694 = !DILocation(line: 1035, column: 42, scope: !6634)
!6695 = !DILocation(line: 1035, column: 46, scope: !6634)
!6696 = !DILocation(line: 1035, column: 52, scope: !6634)
!6697 = !DILocation(line: 1035, column: 10, scope: !6634)
!6698 = !DILocation(line: 1035, column: 8, scope: !6634)
!6699 = !DILocation(line: 1037, column: 19, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1037, column: 6)
!6701 = !DILocation(line: 1037, column: 6, scope: !6700)
!6702 = !DILocation(line: 1037, column: 25, scope: !6700)
!6703 = !DILocation(line: 1037, column: 29, scope: !6700)
!6704 = !DILocation(line: 1037, column: 32, scope: !6700)
!6705 = !DILocation(line: 1037, column: 23, scope: !6700)
!6706 = !DILocation(line: 1037, column: 6, scope: !6634)
!6707 = !DILocalVariable(name: "pad_len", scope: !6708, file: !3, line: 1038, type: !7)
!6708 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 1037, column: 46)
!6709 = !DILocation(line: 1038, column: 16, scope: !6708)
!6710 = !DILocation(line: 1039, column: 5, scope: !6708)
!6711 = !DILocation(line: 1039, column: 9, scope: !6708)
!6712 = !DILocation(line: 1039, column: 12, scope: !6708)
!6713 = !DILocation(line: 1039, column: 41, scope: !6708)
!6714 = !DILocation(line: 1039, column: 28, scope: !6708)
!6715 = !DILocation(line: 1039, column: 27, scope: !6708)
!6716 = !DILocation(line: 1039, column: 25, scope: !6708)
!6717 = !DILocation(line: 1039, column: 46, scope: !6708)
!6718 = !DILocation(line: 1041, column: 22, scope: !6708)
!6719 = !DILocation(line: 1041, column: 3, scope: !6708)
!6720 = !DILocation(line: 1041, column: 12, scope: !6708)
!6721 = !DILocation(line: 1041, column: 19, scope: !6708)
!6722 = !DILocation(line: 1042, column: 21, scope: !6708)
!6723 = !DILocation(line: 1042, column: 3, scope: !6708)
!6724 = !DILocation(line: 1042, column: 8, scope: !6708)
!6725 = !DILocation(line: 1042, column: 18, scope: !6708)
!6726 = !DILocation(line: 1043, column: 2, scope: !6708)
!6727 = !DILocation(line: 1045, column: 6, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1045, column: 6)
!6729 = !DILocation(line: 1045, column: 6, scope: !6634)
!6730 = !DILocation(line: 1046, column: 17, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 1045, column: 18)
!6732 = !DILocation(line: 1046, column: 3, scope: !6731)
!6733 = !DILocation(line: 1047, column: 21, scope: !6731)
!6734 = !DILocation(line: 1047, column: 13, scope: !6731)
!6735 = !DILocation(line: 1047, column: 11, scope: !6731)
!6736 = !DILocation(line: 1048, column: 14, scope: !6731)
!6737 = !DILocation(line: 1048, column: 23, scope: !6731)
!6738 = !DILocation(line: 1048, column: 29, scope: !6731)
!6739 = !DILocation(line: 1048, column: 44, scope: !6731)
!6740 = !DILocation(line: 1048, column: 50, scope: !6731)
!6741 = !DILocation(line: 1048, column: 3, scope: !6731)
!6742 = !DILocation(line: 1049, column: 15, scope: !6731)
!6743 = !DILocation(line: 1049, column: 3, scope: !6731)
!6744 = !DILocation(line: 1051, column: 21, scope: !6731)
!6745 = !DILocation(line: 1051, column: 27, scope: !6731)
!6746 = !DILocation(line: 1051, column: 3, scope: !6731)
!6747 = !DILocation(line: 1051, column: 8, scope: !6731)
!6748 = !DILocation(line: 1051, column: 18, scope: !6731)
!6749 = !DILocation(line: 1052, column: 8, scope: !6731)
!6750 = !DILocation(line: 1053, column: 2, scope: !6731)
!6751 = !DILocation(line: 1055, column: 2, scope: !6634)
!6752 = !DILocation(line: 1055, column: 2, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 1055, column: 2)
!6754 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1055, column: 2)
!6755 = !DILocation(line: 1055, column: 2, scope: !6754)
!6756 = !DILocation(line: 1055, column: 2, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 1055, column: 2)
!6758 = !DILocation(line: 1055, column: 2, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 1055, column: 2)
!6760 = !DILocation(line: 1055, column: 2, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 1055, column: 2)
!6762 = !{i32 -2140935377, i32 -2140935348, i32 -2140935302, i32 -2140935244, i32 -2140935190, i32 -2140935136, i32 -2140935081, i32 -2140935050}
!6763 = !DILocation(line: 1055, column: 2, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1055, column: 2)
!6765 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 1055, column: 2)
!6766 = !{i32 -2140934603, i32 -2140934596, i32 -2140934542, i32 -2140934511, i32 -2140934481}
!6767 = !DILocation(line: 1055, column: 2, scope: !6765)
!6768 = !DILocation(line: 1056, column: 25, scope: !6634)
!6769 = !DILocation(line: 1056, column: 2, scope: !6634)
!6770 = !DILocation(line: 1056, column: 7, scope: !6634)
!6771 = !DILocation(line: 1056, column: 11, scope: !6634)
!6772 = !DILocation(line: 1056, column: 17, scope: !6634)
!6773 = !DILocation(line: 1056, column: 23, scope: !6634)
!6774 = !DILocation(line: 1057, column: 41, scope: !6634)
!6775 = !DILocation(line: 1057, column: 20, scope: !6634)
!6776 = !DILocation(line: 1057, column: 2, scope: !6634)
!6777 = !DILocation(line: 1057, column: 7, scope: !6634)
!6778 = !DILocation(line: 1057, column: 11, scope: !6634)
!6779 = !DILocation(line: 1057, column: 18, scope: !6634)
!6780 = !DILocation(line: 1059, column: 23, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1059, column: 6)
!6782 = !DILocation(line: 1059, column: 6, scope: !6781)
!6783 = !DILocation(line: 1059, column: 6, scope: !6634)
!6784 = !DILocalVariable(name: "prot_sdb", scope: !6785, file: !3, line: 1060, type: !5345)
!6785 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 1059, column: 28)
!6786 = !DILocation(line: 1060, column: 28, scope: !6785)
!6787 = !DILocation(line: 1060, column: 39, scope: !6785)
!6788 = !DILocation(line: 1060, column: 44, scope: !6785)
!6789 = !DILocalVariable(name: "ivecs", scope: !6785, file: !3, line: 1061, type: !286)
!6790 = !DILocation(line: 1061, column: 7, scope: !6785)
!6791 = !DILocalVariable(name: "__ret_warn_on", scope: !6792, file: !3, line: 1063, type: !286)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 1063, column: 7)
!6793 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 1063, column: 7)
!6794 = !DILocation(line: 1063, column: 7, scope: !6792)
!6795 = !DILocation(line: 1063, column: 7, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 1063, column: 7)
!6797 = !DILocation(line: 1063, column: 7, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 1063, column: 7)
!6799 = !DILocation(line: 1063, column: 7, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 1063, column: 7)
!6801 = !DILocation(line: 1063, column: 7, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 1063, column: 7)
!6803 = !{i32 -2140933929, i32 -2140933900, i32 -2140933854, i32 -2140933796, i32 -2140933742, i32 -2140933688, i32 -2140933633, i32 -2140933602}
!6804 = !DILocation(line: 1063, column: 7, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 1063, column: 7)
!6806 = !{i32 -2140933185, i32 -2140933178, i32 -2140933126, i32 -2140933095, i32 -2140933065}
!6807 = !DILocation(line: 1063, column: 7, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 1063, column: 7)
!6809 = !DILocation(line: 1063, column: 7, scope: !6793)
!6810 = !DILocation(line: 1063, column: 7, scope: !6785)
!6811 = !DILocation(line: 1069, column: 8, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 1063, column: 32)
!6813 = !DILocation(line: 1070, column: 4, scope: !6812)
!6814 = !DILocation(line: 1073, column: 37, scope: !6785)
!6815 = !DILocation(line: 1073, column: 41, scope: !6785)
!6816 = !DILocation(line: 1073, column: 44, scope: !6785)
!6817 = !DILocation(line: 1073, column: 48, scope: !6785)
!6818 = !DILocation(line: 1073, column: 11, scope: !6785)
!6819 = !DILocation(line: 1073, column: 9, scope: !6785)
!6820 = !DILocation(line: 1075, column: 31, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 1075, column: 7)
!6822 = !DILocation(line: 1075, column: 41, scope: !6821)
!6823 = !DILocation(line: 1075, column: 48, scope: !6821)
!6824 = !DILocation(line: 1076, column: 5, scope: !6821)
!6825 = !DILocation(line: 1076, column: 15, scope: !6821)
!6826 = !DILocation(line: 1076, column: 21, scope: !6821)
!6827 = !DILocation(line: 1075, column: 7, scope: !6821)
!6828 = !DILocation(line: 1075, column: 7, scope: !6785)
!6829 = !DILocation(line: 1078, column: 8, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1077, column: 31)
!6831 = !DILocation(line: 1079, column: 4, scope: !6830)
!6832 = !DILocation(line: 1082, column: 35, scope: !6785)
!6833 = !DILocation(line: 1082, column: 39, scope: !6785)
!6834 = !DILocation(line: 1082, column: 42, scope: !6785)
!6835 = !DILocation(line: 1082, column: 46, scope: !6785)
!6836 = !DILocation(line: 1083, column: 7, scope: !6785)
!6837 = !DILocation(line: 1083, column: 17, scope: !6785)
!6838 = !DILocation(line: 1083, column: 23, scope: !6785)
!6839 = !DILocation(line: 1082, column: 11, scope: !6785)
!6840 = !DILocation(line: 1082, column: 9, scope: !6785)
!6841 = !DILocation(line: 1084, column: 3, scope: !6785)
!6842 = !DILocation(line: 1084, column: 3, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 1084, column: 3)
!6844 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 1084, column: 3)
!6845 = !DILocation(line: 1084, column: 3, scope: !6844)
!6846 = !DILocation(line: 1084, column: 3, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1084, column: 3)
!6848 = !DILocation(line: 1084, column: 3, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 1084, column: 3)
!6850 = !DILocation(line: 1084, column: 3, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 1084, column: 3)
!6852 = !{i32 -2140932644, i32 -2140932615, i32 -2140932569, i32 -2140932511, i32 -2140932457, i32 -2140932403, i32 -2140932348, i32 -2140932317}
!6853 = !DILocation(line: 1084, column: 3, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !3, line: 1084, column: 3)
!6855 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 1084, column: 3)
!6856 = !{i32 -2140931870, i32 -2140931863, i32 -2140931809, i32 -2140931778, i32 -2140931748}
!6857 = !DILocation(line: 1084, column: 3, scope: !6855)
!6858 = !DILocation(line: 1085, column: 3, scope: !6785)
!6859 = !DILocation(line: 1085, column: 3, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 1085, column: 3)
!6861 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 1085, column: 3)
!6862 = !DILocation(line: 1085, column: 3, scope: !6861)
!6863 = !DILocation(line: 1085, column: 3, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 1085, column: 3)
!6865 = !DILocation(line: 1085, column: 3, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 1085, column: 3)
!6867 = !DILocation(line: 1085, column: 3, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 1085, column: 3)
!6869 = !{i32 -2140931379, i32 -2140931350, i32 -2140931304, i32 -2140931246, i32 -2140931192, i32 -2140931138, i32 -2140931083, i32 -2140931052}
!6870 = !DILocation(line: 1085, column: 3, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 1085, column: 3)
!6872 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 1085, column: 3)
!6873 = !{i32 -2140930605, i32 -2140930598, i32 -2140930544, i32 -2140930513, i32 -2140930483}
!6874 = !DILocation(line: 1085, column: 3, scope: !6872)
!6875 = !DILocation(line: 1087, column: 19, scope: !6785)
!6876 = !DILocation(line: 1087, column: 3, scope: !6785)
!6877 = !DILocation(line: 1087, column: 8, scope: !6785)
!6878 = !DILocation(line: 1087, column: 17, scope: !6785)
!6879 = !DILocation(line: 1088, column: 32, scope: !6785)
!6880 = !DILocation(line: 1088, column: 3, scope: !6785)
!6881 = !DILocation(line: 1088, column: 8, scope: !6785)
!6882 = !DILocation(line: 1088, column: 18, scope: !6785)
!6883 = !DILocation(line: 1088, column: 24, scope: !6785)
!6884 = !DILocation(line: 1088, column: 30, scope: !6785)
!6885 = !DILocation(line: 1089, column: 2, scope: !6785)
!6886 = !DILocation(line: 1091, column: 2, scope: !6634)
!6887 = !DILabel(scope: !6634, name: "out_free_sgtables", file: !3, line: 1092)
!6888 = !DILocation(line: 1092, column: 1, scope: !6634)
!6889 = !DILocation(line: 1093, column: 21, scope: !6634)
!6890 = !DILocation(line: 1093, column: 2, scope: !6634)
!6891 = !DILocation(line: 1094, column: 9, scope: !6634)
!6892 = !DILocation(line: 1094, column: 2, scope: !6634)
!6893 = !DILocation(line: 1095, column: 1, scope: !6634)
!6894 = distinct !DISubprogram(name: "blk_rq_nr_phys_segments", scope: !68, file: !68, line: 1191, type: !6895, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6895 = !DISubroutineType(types: !6896)
!6896 = !{!284, !2780}
!6897 = !DILocalVariable(name: "rq", arg: 1, scope: !6894, file: !68, line: 1191, type: !2780)
!6898 = !DILocation(line: 1191, column: 70, scope: !6894)
!6899 = !DILocation(line: 1193, column: 6, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6894, file: !68, line: 1193, column: 6)
!6901 = !DILocation(line: 1193, column: 10, scope: !6900)
!6902 = !DILocation(line: 1193, column: 19, scope: !6900)
!6903 = !DILocation(line: 1193, column: 6, scope: !6894)
!6904 = !DILocation(line: 1194, column: 3, scope: !6900)
!6905 = !DILocation(line: 1195, column: 9, scope: !6894)
!6906 = !DILocation(line: 1195, column: 13, scope: !6894)
!6907 = !DILocation(line: 1195, column: 2, scope: !6894)
!6908 = !DILocation(line: 1196, column: 1, scope: !6894)
!6909 = distinct !DISubprogram(name: "scsi_cmd_needs_dma_drain", scope: !3, file: !3, line: 987, type: !6910, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6910 = !DISubroutineType(types: !6911)
!6911 = !{!793, !293, !2780}
!6912 = !DILocalVariable(name: "sdev", arg: 1, scope: !6909, file: !3, line: 987, type: !293)
!6913 = !DILocation(line: 987, column: 65, scope: !6909)
!6914 = !DILocalVariable(name: "rq", arg: 2, scope: !6909, file: !3, line: 988, type: !2780)
!6915 = !DILocation(line: 988, column: 19, scope: !6909)
!6916 = !DILocation(line: 990, column: 9, scope: !6909)
!6917 = !DILocation(line: 990, column: 15, scope: !6909)
!6918 = !DILocation(line: 990, column: 29, scope: !6909)
!6919 = !DILocation(line: 990, column: 54, scope: !6909)
!6920 = !DILocation(line: 990, column: 32, scope: !6909)
!6921 = !DILocation(line: 990, column: 58, scope: !6909)
!6922 = !DILocation(line: 991, column: 22, scope: !6909)
!6923 = !DILocation(line: 991, column: 10, scope: !6909)
!6924 = !DILocation(line: 991, column: 34, scope: !6909)
!6925 = !DILocation(line: 992, column: 9, scope: !6909)
!6926 = !DILocation(line: 992, column: 15, scope: !6909)
!6927 = !DILocation(line: 992, column: 21, scope: !6909)
!6928 = !DILocation(line: 992, column: 28, scope: !6909)
!6929 = !DILocation(line: 992, column: 43, scope: !6909)
!6930 = !DILocation(line: 0, scope: !6909)
!6931 = !DILocation(line: 990, column: 2, scope: !6909)
!6932 = distinct !DISubprogram(name: "sg_unmark_end", scope: !5330, file: !5330, line: 226, type: !6933, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6933 = !DISubroutineType(types: !6934)
!6934 = !{null, !5333}
!6935 = !DILocalVariable(name: "sg", arg: 1, scope: !6932, file: !5330, line: 226, type: !5333)
!6936 = !DILocation(line: 226, column: 54, scope: !6932)
!6937 = !DILocation(line: 228, column: 2, scope: !6932)
!6938 = !DILocation(line: 228, column: 6, scope: !6932)
!6939 = !DILocation(line: 228, column: 16, scope: !6932)
!6940 = !DILocation(line: 229, column: 1, scope: !6932)
!6941 = distinct !DISubprogram(name: "sg_set_buf", scope: !5330, file: !5330, line: 139, type: !6942, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6942 = !DISubroutineType(types: !6943)
!6943 = !{null, !5333, !1914, !7}
!6944 = !DILocalVariable(name: "sg", arg: 1, scope: !6941, file: !5330, line: 139, type: !5333)
!6945 = !DILocation(line: 139, column: 51, scope: !6941)
!6946 = !DILocalVariable(name: "buf", arg: 2, scope: !6941, file: !5330, line: 139, type: !1914)
!6947 = !DILocation(line: 139, column: 67, scope: !6941)
!6948 = !DILocalVariable(name: "buflen", arg: 3, scope: !6941, file: !5330, line: 140, type: !7)
!6949 = !DILocation(line: 140, column: 23, scope: !6941)
!6950 = !DILocation(line: 145, column: 14, scope: !6941)
!6951 = !DILocation(line: 145, column: 18, scope: !6941)
!6952 = !DILocation(line: 145, column: 37, scope: !6941)
!6953 = !DILocation(line: 145, column: 45, scope: !6941)
!6954 = !DILocation(line: 145, column: 2, scope: !6941)
!6955 = !DILocation(line: 146, column: 1, scope: !6941)
!6956 = distinct !DISubprogram(name: "sg_mark_end", scope: !5330, file: !5330, line: 209, type: !6933, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6957 = !DILocalVariable(name: "sg", arg: 1, scope: !6956, file: !5330, line: 209, type: !5333)
!6958 = !DILocation(line: 209, column: 52, scope: !6956)
!6959 = !DILocation(line: 214, column: 2, scope: !6956)
!6960 = !DILocation(line: 214, column: 6, scope: !6956)
!6961 = !DILocation(line: 214, column: 16, scope: !6956)
!6962 = !DILocation(line: 215, column: 2, scope: !6956)
!6963 = !DILocation(line: 215, column: 6, scope: !6956)
!6964 = !DILocation(line: 215, column: 16, scope: !6956)
!6965 = !DILocation(line: 216, column: 1, scope: !6956)
!6966 = distinct !DISubprogram(name: "blk_rq_payload_bytes", scope: !68, file: !68, line: 1037, type: !6967, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{!7, !2780}
!6969 = !DILocalVariable(name: "rq", arg: 1, scope: !6966, file: !68, line: 1037, type: !2780)
!6970 = !DILocation(line: 1037, column: 65, scope: !6966)
!6971 = !DILocation(line: 1039, column: 6, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6966, file: !68, line: 1039, column: 6)
!6973 = !DILocation(line: 1039, column: 10, scope: !6972)
!6974 = !DILocation(line: 1039, column: 19, scope: !6972)
!6975 = !DILocation(line: 1039, column: 6, scope: !6966)
!6976 = !DILocation(line: 1040, column: 10, scope: !6972)
!6977 = !DILocation(line: 1040, column: 14, scope: !6972)
!6978 = !DILocation(line: 1040, column: 26, scope: !6972)
!6979 = !DILocation(line: 1040, column: 3, scope: !6972)
!6980 = !DILocation(line: 1041, column: 22, scope: !6966)
!6981 = !DILocation(line: 1041, column: 9, scope: !6966)
!6982 = !DILocation(line: 1041, column: 2, scope: !6966)
!6983 = !DILocation(line: 1042, column: 1, scope: !6966)
!6984 = distinct !DISubprogram(name: "blk_integrity_rq", scope: !68, file: !68, line: 1701, type: !4976, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6985 = !DILocalVariable(name: "rq", arg: 1, scope: !6984, file: !68, line: 1701, type: !2780)
!6986 = !DILocation(line: 1701, column: 53, scope: !6984)
!6987 = !DILocation(line: 1703, column: 9, scope: !6984)
!6988 = !DILocation(line: 1703, column: 13, scope: !6984)
!6989 = !DILocation(line: 1703, column: 23, scope: !6984)
!6990 = !DILocation(line: 1703, column: 2, scope: !6984)
!6991 = distinct !DISubprogram(name: "queue_max_integrity_segments", scope: !68, file: !68, line: 1713, type: !6992, scopeLine: 1714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!6992 = !DISubroutineType(types: !6993)
!6993 = !{!284, !6994}
!6994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6995, size: 64)
!6995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2777)
!6996 = !DILocalVariable(name: "q", arg: 1, scope: !6991, file: !68, line: 1713, type: !6994)
!6997 = !DILocation(line: 1713, column: 58, scope: !6991)
!6998 = !DILocation(line: 1715, column: 9, scope: !6991)
!6999 = !DILocation(line: 1715, column: 12, scope: !6991)
!7000 = !DILocation(line: 1715, column: 19, scope: !6991)
!7001 = !DILocation(line: 1715, column: 2, scope: !6991)
!7002 = distinct !DISubprogram(name: "scsi_init_command", scope: !3, file: !3, line: 1132, type: !5779, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7003 = !DILocalVariable(name: "dev", arg: 1, scope: !7002, file: !3, line: 1132, type: !293)
!7004 = !DILocation(line: 1132, column: 44, scope: !7002)
!7005 = !DILocalVariable(name: "cmd", arg: 2, scope: !7002, file: !3, line: 1132, type: !268)
!7006 = !DILocation(line: 1132, column: 67, scope: !7002)
!7007 = !DILocalVariable(name: "buf", scope: !7002, file: !3, line: 1134, type: !291)
!7008 = !DILocation(line: 1134, column: 8, scope: !7002)
!7009 = !DILocation(line: 1134, column: 14, scope: !7002)
!7010 = !DILocation(line: 1134, column: 19, scope: !7002)
!7011 = !DILocalVariable(name: "prot", scope: !7002, file: !3, line: 1135, type: !291)
!7012 = !DILocation(line: 1135, column: 8, scope: !7002)
!7013 = !DILocation(line: 1135, column: 15, scope: !7002)
!7014 = !DILocation(line: 1135, column: 20, scope: !7002)
!7015 = !DILocalVariable(name: "rq", scope: !7002, file: !3, line: 1136, type: !2780)
!7016 = !DILocation(line: 1136, column: 18, scope: !7002)
!7017 = !DILocation(line: 1136, column: 42, scope: !7002)
!7018 = !DILocation(line: 1136, column: 23, scope: !7002)
!7019 = !DILocalVariable(name: "flags", scope: !7002, file: !3, line: 1137, type: !7)
!7020 = !DILocation(line: 1137, column: 15, scope: !7002)
!7021 = !DILocation(line: 1137, column: 23, scope: !7002)
!7022 = !DILocation(line: 1137, column: 28, scope: !7002)
!7023 = !DILocation(line: 1137, column: 34, scope: !7002)
!7024 = !DILocalVariable(name: "jiffies_at_alloc", scope: !7002, file: !3, line: 1138, type: !356)
!7025 = !DILocation(line: 1138, column: 16, scope: !7002)
!7026 = !DILocalVariable(name: "retries", scope: !7002, file: !3, line: 1139, type: !286)
!7027 = !DILocation(line: 1139, column: 6, scope: !7002)
!7028 = !DILocalVariable(name: "to_clear", scope: !7002, file: !3, line: 1139, type: !286)
!7029 = !DILocation(line: 1139, column: 15, scope: !7002)
!7030 = !DILocalVariable(name: "in_flight", scope: !7002, file: !3, line: 1140, type: !793)
!7031 = !DILocation(line: 1140, column: 7, scope: !7002)
!7032 = !DILocation(line: 1142, column: 22, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 1142, column: 6)
!7034 = !DILocation(line: 1142, column: 7, scope: !7033)
!7035 = !DILocation(line: 1142, column: 26, scope: !7033)
!7036 = !DILocation(line: 1142, column: 31, scope: !7033)
!7037 = !DILocation(line: 1142, column: 37, scope: !7033)
!7038 = !DILocation(line: 1142, column: 6, scope: !7002)
!7039 = !DILocation(line: 1143, column: 9, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1142, column: 58)
!7041 = !DILocation(line: 1144, column: 22, scope: !7040)
!7042 = !DILocation(line: 1144, column: 3, scope: !7040)
!7043 = !DILocation(line: 1145, column: 2, scope: !7040)
!7044 = !DILocation(line: 1147, column: 21, scope: !7002)
!7045 = !DILocation(line: 1147, column: 26, scope: !7002)
!7046 = !DILocation(line: 1147, column: 19, scope: !7002)
!7047 = !DILocation(line: 1148, column: 12, scope: !7002)
!7048 = !DILocation(line: 1148, column: 17, scope: !7002)
!7049 = !DILocation(line: 1148, column: 10, scope: !7002)
!7050 = !DILocation(line: 1149, column: 45, scope: !7002)
!7051 = !DILocation(line: 1149, column: 50, scope: !7002)
!7052 = !DILocation(line: 1149, column: 14, scope: !7002)
!7053 = !DILocation(line: 1149, column: 12, scope: !7002)
!7054 = !DILocation(line: 1155, column: 11, scope: !7002)
!7055 = !DILocation(line: 1156, column: 7, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 1156, column: 6)
!7057 = !DILocation(line: 1156, column: 12, scope: !7056)
!7058 = !DILocation(line: 1156, column: 18, scope: !7056)
!7059 = !DILocation(line: 1156, column: 25, scope: !7056)
!7060 = !DILocation(line: 1156, column: 6, scope: !7002)
!7061 = !DILocation(line: 1157, column: 15, scope: !7056)
!7062 = !DILocation(line: 1157, column: 20, scope: !7056)
!7063 = !DILocation(line: 1157, column: 26, scope: !7056)
!7064 = !DILocation(line: 1157, column: 33, scope: !7056)
!7065 = !DILocation(line: 1157, column: 12, scope: !7056)
!7066 = !DILocation(line: 1157, column: 3, scope: !7056)
!7067 = !DILocation(line: 1158, column: 17, scope: !7002)
!7068 = !DILocation(line: 1158, column: 9, scope: !7002)
!7069 = !DILocation(line: 1158, column: 21, scope: !7002)
!7070 = !DILocation(line: 1158, column: 44, scope: !7002)
!7071 = !DILocation(line: 1158, column: 2, scope: !7002)
!7072 = !DILocation(line: 1160, column: 16, scope: !7002)
!7073 = !DILocation(line: 1160, column: 2, scope: !7002)
!7074 = !DILocation(line: 1160, column: 7, scope: !7002)
!7075 = !DILocation(line: 1160, column: 14, scope: !7002)
!7076 = !DILocation(line: 1161, column: 22, scope: !7002)
!7077 = !DILocation(line: 1161, column: 2, scope: !7002)
!7078 = !DILocation(line: 1161, column: 7, scope: !7002)
!7079 = !DILocation(line: 1161, column: 20, scope: !7002)
!7080 = !DILocation(line: 1162, column: 18, scope: !7002)
!7081 = !DILocation(line: 1162, column: 2, scope: !7002)
!7082 = !DILocation(line: 1162, column: 7, scope: !7002)
!7083 = !DILocation(line: 1162, column: 16, scope: !7002)
!7084 = !DILocation(line: 1163, column: 15, scope: !7002)
!7085 = !DILocation(line: 1163, column: 2, scope: !7002)
!7086 = !DILocation(line: 1163, column: 7, scope: !7002)
!7087 = !DILocation(line: 1163, column: 13, scope: !7002)
!7088 = !DILocation(line: 1164, column: 2, scope: !7002)
!7089 = !DILocation(line: 1164, column: 2, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 1164, column: 2)
!7091 = !DILocation(line: 1164, column: 2, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 1164, column: 2)
!7093 = !DILocation(line: 1165, column: 26, scope: !7002)
!7094 = !DILocation(line: 1165, column: 2, scope: !7002)
!7095 = !DILocation(line: 1165, column: 7, scope: !7002)
!7096 = !DILocation(line: 1165, column: 24, scope: !7002)
!7097 = !DILocation(line: 1166, column: 17, scope: !7002)
!7098 = !DILocation(line: 1166, column: 2, scope: !7002)
!7099 = !DILocation(line: 1166, column: 7, scope: !7002)
!7100 = !DILocation(line: 1166, column: 15, scope: !7002)
!7101 = !DILocation(line: 1167, column: 6, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 1167, column: 6)
!7103 = !DILocation(line: 1167, column: 6, scope: !7002)
!7104 = !DILocation(line: 1168, column: 35, scope: !7102)
!7105 = !DILocation(line: 1168, column: 40, scope: !7102)
!7106 = !DILocation(line: 1168, column: 3, scope: !7102)
!7107 = !DILocation(line: 1170, column: 1, scope: !7002)
!7108 = distinct !DISubprogram(name: "blk_mq_rq_from_pdu", scope: !190, file: !190, line: 553, type: !7109, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7109 = !DISubroutineType(types: !7110)
!7110 = !{!2780, !291}
!7111 = !DILocalVariable(name: "pdu", arg: 1, scope: !7108, file: !190, line: 553, type: !291)
!7112 = !DILocation(line: 553, column: 56, scope: !7108)
!7113 = !DILocation(line: 555, column: 9, scope: !7108)
!7114 = !DILocation(line: 555, column: 13, scope: !7108)
!7115 = !DILocation(line: 555, column: 2, scope: !7108)
!7116 = distinct !DISubprogram(name: "blk_rq_is_scsi", scope: !68, file: !68, line: 260, type: !4976, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7117 = !DILocalVariable(name: "rq", arg: 1, scope: !7116, file: !68, line: 260, type: !2780)
!7118 = !DILocation(line: 260, column: 51, scope: !7116)
!7119 = !DILocation(line: 262, column: 24, scope: !7116)
!7120 = !DILocation(line: 262, column: 9, scope: !7116)
!7121 = !DILocation(line: 262, column: 2, scope: !7116)
!7122 = distinct !DISubprogram(name: "scsi_initialize_rq", scope: !3, file: !3, line: 1109, type: !3055, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7123 = !DILocalVariable(name: "rq", arg: 1, scope: !7122, file: !3, line: 1109, type: !2780)
!7124 = !DILocation(line: 1109, column: 48, scope: !7122)
!7125 = !DILocalVariable(name: "cmd", scope: !7122, file: !3, line: 1111, type: !268)
!7126 = !DILocation(line: 1111, column: 20, scope: !7122)
!7127 = !DILocation(line: 1111, column: 43, scope: !7122)
!7128 = !DILocation(line: 1111, column: 26, scope: !7122)
!7129 = !DILocation(line: 1113, column: 17, scope: !7122)
!7130 = !DILocation(line: 1113, column: 22, scope: !7122)
!7131 = !DILocation(line: 1113, column: 2, scope: !7122)
!7132 = !DILocation(line: 1114, column: 17, scope: !7122)
!7133 = !DILocation(line: 1114, column: 22, scope: !7122)
!7134 = !DILocation(line: 1114, column: 2, scope: !7122)
!7135 = !DILocation(line: 1115, column: 26, scope: !7122)
!7136 = !DILocation(line: 1115, column: 2, scope: !7122)
!7137 = !DILocation(line: 1115, column: 7, scope: !7122)
!7138 = !DILocation(line: 1115, column: 24, scope: !7122)
!7139 = !DILocation(line: 1116, column: 2, scope: !7122)
!7140 = !DILocation(line: 1116, column: 7, scope: !7122)
!7141 = !DILocation(line: 1116, column: 15, scope: !7122)
!7142 = !DILocation(line: 1117, column: 1, scope: !7122)
!7143 = distinct !DISubprogram(name: "test_bit", scope: !7144, file: !7144, line: 132, type: !7145, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7144 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7145 = !DISubroutineType(types: !7146)
!7146 = !{!793, !197, !5475}
!7147 = !DILocalVariable(name: "nr", arg: 1, scope: !7148, file: !7149, line: 210, type: !197)
!7148 = distinct !DISubprogram(name: "variable_test_bit", scope: !7149, file: !7149, line: 210, type: !7145, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7149 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7150 = !DILocation(line: 210, column: 52, scope: !7148, inlinedAt: !7151)
!7151 = distinct !DILocation(line: 135, column: 9, scope: !7143)
!7152 = !DILocalVariable(name: "addr", arg: 2, scope: !7148, file: !7149, line: 210, type: !5475)
!7153 = !DILocation(line: 210, column: 86, scope: !7148, inlinedAt: !7151)
!7154 = !DILocalVariable(name: "oldbit", scope: !7148, file: !7149, line: 212, type: !793)
!7155 = !DILocation(line: 212, column: 7, scope: !7148, inlinedAt: !7151)
!7156 = !DILocalVariable(name: "nr", arg: 1, scope: !7157, file: !7149, line: 204, type: !197)
!7157 = distinct !DISubprogram(name: "constant_test_bit", scope: !7149, file: !7149, line: 204, type: !7145, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7158 = !DILocation(line: 204, column: 52, scope: !7157, inlinedAt: !7159)
!7159 = distinct !DILocation(line: 135, column: 9, scope: !7143)
!7160 = !DILocalVariable(name: "addr", arg: 2, scope: !7157, file: !7149, line: 204, type: !5475)
!7161 = !DILocation(line: 204, column: 86, scope: !7157, inlinedAt: !7159)
!7162 = !DILocalVariable(name: "v", arg: 1, scope: !7163, file: !5794, line: 69, type: !5797)
!7163 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5794, file: !5794, line: 69, type: !5795, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7164 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !7165)
!7165 = distinct !DILocation(line: 134, column: 2, scope: !7143)
!7166 = !DILocalVariable(name: "size", arg: 2, scope: !7163, file: !5794, line: 69, type: !928)
!7167 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !7165)
!7168 = !DILocalVariable(name: "nr", arg: 1, scope: !7143, file: !7144, line: 132, type: !197)
!7169 = !DILocation(line: 132, column: 34, scope: !7143)
!7170 = !DILocalVariable(name: "addr", arg: 2, scope: !7143, file: !7144, line: 132, type: !5475)
!7171 = !DILocation(line: 132, column: 68, scope: !7143)
!7172 = !DILocation(line: 134, column: 25, scope: !7143)
!7173 = !DILocation(line: 134, column: 32, scope: !7143)
!7174 = !DILocation(line: 134, column: 30, scope: !7143)
!7175 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !7165)
!7176 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !7165)
!7177 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !7165)
!7178 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !7165)
!7179 = !DILocation(line: 135, column: 9, scope: !7143)
!7180 = !DILocation(line: 206, column: 19, scope: !7157, inlinedAt: !7159)
!7181 = !DILocation(line: 206, column: 22, scope: !7157, inlinedAt: !7159)
!7182 = !DILocation(line: 206, column: 15, scope: !7157, inlinedAt: !7159)
!7183 = !DILocation(line: 207, column: 4, scope: !7157, inlinedAt: !7159)
!7184 = !DILocation(line: 207, column: 9, scope: !7157, inlinedAt: !7159)
!7185 = !DILocation(line: 207, column: 12, scope: !7157, inlinedAt: !7159)
!7186 = !DILocation(line: 206, column: 44, scope: !7157, inlinedAt: !7159)
!7187 = !DILocation(line: 207, column: 37, scope: !7157, inlinedAt: !7159)
!7188 = !DILocation(line: 217, column: 33, scope: !7148, inlinedAt: !7151)
!7189 = !DILocation(line: 217, column: 46, scope: !7148, inlinedAt: !7151)
!7190 = !DILocation(line: 214, column: 2, scope: !7148, inlinedAt: !7151)
!7191 = !{i32 -2146889500, i32 -2146889440}
!7192 = !DILocation(line: 219, column: 9, scope: !7148, inlinedAt: !7151)
!7193 = !DILocation(line: 135, column: 2, scope: !7143)
!7194 = distinct !DISubprogram(name: "__init_work", scope: !196, file: !196, line: 215, type: !7195, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7195 = !DISubroutineType(types: !7196)
!7196 = !{null, !2325, !286}
!7197 = !DILocalVariable(name: "work", arg: 1, scope: !7194, file: !196, line: 215, type: !2325)
!7198 = !DILocation(line: 215, column: 52, scope: !7194)
!7199 = !DILocalVariable(name: "onstack", arg: 2, scope: !7194, file: !196, line: 215, type: !286)
!7200 = !DILocation(line: 215, column: 62, scope: !7194)
!7201 = !DILocation(line: 215, column: 73, scope: !7194)
!7202 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !7203, file: !7203, line: 33, type: !7204, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7203 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!7204 = !DISubroutineType(types: !7205)
!7205 = !{null, !305}
!7206 = !DILocalVariable(name: "list", arg: 1, scope: !7202, file: !7203, line: 33, type: !305)
!7207 = !DILocation(line: 33, column: 53, scope: !7202)
!7208 = !DILocation(line: 35, column: 2, scope: !7202)
!7209 = !DILocation(line: 35, column: 2, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7202, file: !7203, line: 35, column: 2)
!7211 = !DILocation(line: 35, column: 2, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7210, file: !7203, line: 35, column: 2)
!7213 = !DILocation(line: 35, column: 2, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7210, file: !7203, line: 35, column: 2)
!7215 = !DILocation(line: 36, column: 15, scope: !7202)
!7216 = !DILocation(line: 36, column: 2, scope: !7202)
!7217 = !DILocation(line: 36, column: 8, scope: !7202)
!7218 = !DILocation(line: 36, column: 13, scope: !7202)
!7219 = !DILocation(line: 37, column: 1, scope: !7202)
!7220 = distinct !DISubprogram(name: "__set_bit", scope: !7144, file: !7144, line: 25, type: !7221, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7221 = !DISubroutineType(types: !7222)
!7222 = !{null, !197, !7223}
!7223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!7224 = !DILocalVariable(name: "nr", arg: 1, scope: !7225, file: !7149, line: 66, type: !197)
!7225 = distinct !DISubprogram(name: "arch___set_bit", scope: !7149, file: !7149, line: 66, type: !7221, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7226 = !DILocation(line: 66, column: 21, scope: !7225, inlinedAt: !7227)
!7227 = distinct !DILocation(line: 28, column: 2, scope: !7220)
!7228 = !DILocalVariable(name: "addr", arg: 2, scope: !7225, file: !7149, line: 66, type: !7223)
!7229 = !DILocation(line: 66, column: 49, scope: !7225, inlinedAt: !7227)
!7230 = !DILocalVariable(name: "v", arg: 1, scope: !7231, file: !5794, line: 39, type: !5797)
!7231 = distinct !DISubprogram(name: "instrument_write", scope: !5794, file: !5794, line: 39, type: !5795, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7232 = !DILocation(line: 39, column: 67, scope: !7231, inlinedAt: !7233)
!7233 = distinct !DILocation(line: 27, column: 2, scope: !7220)
!7234 = !DILocalVariable(name: "size", arg: 2, scope: !7231, file: !5794, line: 39, type: !928)
!7235 = !DILocation(line: 39, column: 77, scope: !7231, inlinedAt: !7233)
!7236 = !DILocalVariable(name: "nr", arg: 1, scope: !7220, file: !7144, line: 25, type: !197)
!7237 = !DILocation(line: 25, column: 35, scope: !7220)
!7238 = !DILocalVariable(name: "addr", arg: 2, scope: !7220, file: !7144, line: 25, type: !7223)
!7239 = !DILocation(line: 25, column: 63, scope: !7220)
!7240 = !DILocation(line: 27, column: 19, scope: !7220)
!7241 = !DILocation(line: 27, column: 26, scope: !7220)
!7242 = !DILocation(line: 27, column: 24, scope: !7220)
!7243 = !DILocation(line: 41, column: 20, scope: !7231, inlinedAt: !7233)
!7244 = !DILocation(line: 41, column: 23, scope: !7231, inlinedAt: !7233)
!7245 = !DILocation(line: 41, column: 2, scope: !7231, inlinedAt: !7233)
!7246 = !DILocation(line: 42, column: 2, scope: !7231, inlinedAt: !7233)
!7247 = !DILocation(line: 28, column: 17, scope: !7220)
!7248 = !DILocation(line: 28, column: 21, scope: !7220)
!7249 = !DILocation(line: 68, column: 44, scope: !7225, inlinedAt: !7227)
!7250 = !DILocation(line: 68, column: 56, scope: !7225, inlinedAt: !7227)
!7251 = !DILocation(line: 68, column: 2, scope: !7225, inlinedAt: !7227)
!7252 = !{i32 -2146898112}
!7253 = !DILocation(line: 29, column: 1, scope: !7220)
!7254 = distinct !DISubprogram(name: "__scsi_init_queue", scope: !3, file: !3, line: 1789, type: !7255, scopeLine: 1790, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7255 = !DISubroutineType(types: !7256)
!7256 = !{null, !297, !2776}
!7257 = !DILocalVariable(name: "shost", arg: 1, scope: !7254, file: !3, line: 1789, type: !297)
!7258 = !DILocation(line: 1789, column: 42, scope: !7254)
!7259 = !DILocalVariable(name: "q", arg: 2, scope: !7254, file: !3, line: 1789, type: !2776)
!7260 = !DILocation(line: 1789, column: 71, scope: !7254)
!7261 = !DILocalVariable(name: "dev", scope: !7254, file: !3, line: 1791, type: !2081)
!7262 = !DILocation(line: 1791, column: 17, scope: !7254)
!7263 = !DILocation(line: 1791, column: 23, scope: !7254)
!7264 = !DILocation(line: 1791, column: 30, scope: !7254)
!7265 = !DILocation(line: 1796, column: 25, scope: !7254)
!7266 = !DILocalVariable(name: "__UNIQUE_ID___x319", scope: !7267, file: !3, line: 1796, type: !284)
!7267 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 1796, column: 28)
!7268 = !DILocation(line: 1796, column: 28, scope: !7267)
!7269 = !DILocalVariable(name: "__UNIQUE_ID___y320", scope: !7267, file: !3, line: 1796, type: !284)
!7270 = !DILocation(line: 1796, column: 28, scope: !7254)
!7271 = !DILocation(line: 1796, column: 2, scope: !7254)
!7272 = !DILocation(line: 1799, column: 25, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 1799, column: 6)
!7274 = !DILocation(line: 1799, column: 6, scope: !7273)
!7275 = !DILocation(line: 1799, column: 6, scope: !7254)
!7276 = !DILocalVariable(name: "__x", scope: !7277, file: !3, line: 1801, type: !284)
!7277 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 1801, column: 4)
!7278 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 1799, column: 33)
!7279 = !DILocation(line: 1801, column: 4, scope: !7277)
!7280 = !DILocalVariable(name: "__y", scope: !7277, file: !3, line: 1801, type: !284)
!7281 = !DILocalVariable(name: "__UNIQUE_ID___x321", scope: !7282, file: !3, line: 1801, type: !284)
!7282 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 1801, column: 4)
!7283 = !DILocation(line: 1801, column: 4, scope: !7282)
!7284 = !DILocalVariable(name: "__UNIQUE_ID___y322", scope: !7282, file: !3, line: 1801, type: !284)
!7285 = !DILocation(line: 1801, column: 4, scope: !7278)
!7286 = !DILocation(line: 1800, column: 3, scope: !7278)
!7287 = !DILocation(line: 1800, column: 10, scope: !7278)
!7288 = !DILocation(line: 1800, column: 28, scope: !7278)
!7289 = !DILocation(line: 1803, column: 3, scope: !7278)
!7290 = !DILocation(line: 1803, column: 3, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 1803, column: 3)
!7292 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 1803, column: 3)
!7293 = !DILocation(line: 1803, column: 3, scope: !7292)
!7294 = !DILocation(line: 1803, column: 3, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 1803, column: 3)
!7296 = !DILocation(line: 1803, column: 3, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 1803, column: 3)
!7298 = !DILocation(line: 1803, column: 3, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 1803, column: 3)
!7300 = !{i32 -2140916450, i32 -2140916421, i32 -2140916375, i32 -2140916317, i32 -2140916263, i32 -2140916209, i32 -2140916154, i32 -2140916123}
!7301 = !DILocation(line: 1803, column: 3, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 1803, column: 3)
!7303 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 1803, column: 3)
!7304 = !{i32 -2140915676, i32 -2140915669, i32 -2140915615, i32 -2140915584, i32 -2140915554}
!7305 = !DILocation(line: 1803, column: 3, scope: !7303)
!7306 = !DILocation(line: 1804, column: 36, scope: !7278)
!7307 = !DILocation(line: 1804, column: 39, scope: !7278)
!7308 = !DILocation(line: 1804, column: 46, scope: !7278)
!7309 = !DILocation(line: 1804, column: 3, scope: !7278)
!7310 = !DILocation(line: 1805, column: 2, scope: !7278)
!7311 = !DILocation(line: 1807, column: 6, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 1807, column: 6)
!7313 = !DILocation(line: 1807, column: 11, scope: !7312)
!7314 = !DILocation(line: 1807, column: 6, scope: !7254)
!7315 = !DILocalVariable(name: "__UNIQUE_ID___x324", scope: !7316, file: !3, line: 1808, type: !7)
!7316 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 1808, column: 24)
!7317 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 1807, column: 21)
!7318 = !DILocation(line: 1808, column: 24, scope: !7316)
!7319 = !DILocalVariable(name: "__UNIQUE_ID___y325", scope: !7316, file: !3, line: 1808, type: !7)
!7320 = !DILocation(line: 1808, column: 3, scope: !7317)
!7321 = !DILocation(line: 1808, column: 10, scope: !7317)
!7322 = !DILocation(line: 1808, column: 22, scope: !7317)
!7323 = !DILocation(line: 1810, column: 2, scope: !7317)
!7324 = !DILocation(line: 1811, column: 27, scope: !7254)
!7325 = !DILocation(line: 1811, column: 30, scope: !7254)
!7326 = !DILocation(line: 1811, column: 37, scope: !7254)
!7327 = !DILocation(line: 1811, column: 2, scope: !7254)
!7328 = !DILocation(line: 1812, column: 6, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 1812, column: 6)
!7330 = !DILocation(line: 1812, column: 13, scope: !7329)
!7331 = !DILocation(line: 1812, column: 6, scope: !7254)
!7332 = !DILocation(line: 1813, column: 26, scope: !7329)
!7333 = !DILocation(line: 1813, column: 3, scope: !7329)
!7334 = !DILocation(line: 1814, column: 29, scope: !7254)
!7335 = !DILocation(line: 1814, column: 32, scope: !7254)
!7336 = !DILocation(line: 1814, column: 39, scope: !7254)
!7337 = !DILocation(line: 1814, column: 2, scope: !7254)
!7338 = !DILocation(line: 1815, column: 23, scope: !7254)
!7339 = !DILocation(line: 1815, column: 28, scope: !7254)
!7340 = !DILocation(line: 1815, column: 35, scope: !7254)
!7341 = !DILocation(line: 1815, column: 2, scope: !7254)
!7342 = !DILocation(line: 1817, column: 29, scope: !7254)
!7343 = !DILocation(line: 1817, column: 32, scope: !7254)
!7344 = !DILocation(line: 1817, column: 39, scope: !7254)
!7345 = !DILocation(line: 1817, column: 2, scope: !7254)
!7346 = !DILocation(line: 1818, column: 26, scope: !7254)
!7347 = !DILocation(line: 1818, column: 29, scope: !7254)
!7348 = !DILocation(line: 1818, column: 36, scope: !7254)
!7349 = !DILocation(line: 1818, column: 2, scope: !7254)
!7350 = !DILocation(line: 1819, column: 23, scope: !7254)
!7351 = !DILocation(line: 1819, column: 51, scope: !7254)
!7352 = !DILocation(line: 1819, column: 28, scope: !7254)
!7353 = !DILocation(line: 1819, column: 2, scope: !7254)
!7354 = !DILocation(line: 1828, column: 26, scope: !7254)
!7355 = !DILocalVariable(name: "__UNIQUE_ID___x326", scope: !7356, file: !3, line: 1828, type: !286)
!7356 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 1828, column: 29)
!7357 = !DILocation(line: 1828, column: 29, scope: !7356)
!7358 = !DILocalVariable(name: "__UNIQUE_ID___y327", scope: !7356, file: !3, line: 1828, type: !286)
!7359 = !DILocation(line: 1828, column: 63, scope: !7254)
!7360 = !DILocation(line: 1828, column: 2, scope: !7254)
!7361 = !DILocation(line: 1829, column: 1, scope: !7254)
!7362 = distinct !DISubprogram(name: "scsi_host_prot_dma", scope: !154, file: !154, line: 827, type: !4972, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7363 = !DILocalVariable(name: "shost", arg: 1, scope: !7362, file: !154, line: 827, type: !297)
!7364 = !DILocation(line: 827, column: 56, scope: !7362)
!7365 = !DILocation(line: 829, column: 9, scope: !7362)
!7366 = !DILocation(line: 829, column: 16, scope: !7362)
!7367 = !DILocation(line: 829, column: 34, scope: !7362)
!7368 = !DILocation(line: 829, column: 2, scope: !7362)
!7369 = distinct !DISubprogram(name: "blk_queue_max_integrity_segments", scope: !68, file: !68, line: 1706, type: !7370, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7370 = !DISubroutineType(types: !7371)
!7371 = !{null, !2776, !7}
!7372 = !DILocalVariable(name: "q", arg: 1, scope: !7369, file: !68, line: 1706, type: !2776)
!7373 = !DILocation(line: 1706, column: 75, scope: !7369)
!7374 = !DILocalVariable(name: "segs", arg: 2, scope: !7369, file: !68, line: 1707, type: !7)
!7375 = !DILocation(line: 1707, column: 24, scope: !7369)
!7376 = !DILocation(line: 1709, column: 37, scope: !7369)
!7377 = !DILocation(line: 1709, column: 2, scope: !7369)
!7378 = !DILocation(line: 1709, column: 5, scope: !7369)
!7379 = !DILocation(line: 1709, column: 12, scope: !7369)
!7380 = !DILocation(line: 1709, column: 35, scope: !7369)
!7381 = !DILocation(line: 1710, column: 1, scope: !7369)
!7382 = distinct !DISubprogram(name: "dma_set_seg_boundary", scope: !7383, file: !7383, line: 494, type: !7384, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7383 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!7384 = !DISubroutineType(types: !7385)
!7385 = !{!286, !2081, !356}
!7386 = !DILocalVariable(name: "dev", arg: 1, scope: !7382, file: !7383, line: 494, type: !2081)
!7387 = !DILocation(line: 494, column: 55, scope: !7382)
!7388 = !DILocalVariable(name: "mask", arg: 2, scope: !7382, file: !7383, line: 494, type: !356)
!7389 = !DILocation(line: 494, column: 74, scope: !7382)
!7390 = !DILocation(line: 496, column: 6, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7382, file: !7383, line: 496, column: 6)
!7392 = !DILocation(line: 496, column: 11, scope: !7391)
!7393 = !DILocation(line: 496, column: 6, scope: !7382)
!7394 = !DILocation(line: 497, column: 43, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !7383, line: 496, column: 22)
!7396 = !DILocation(line: 497, column: 3, scope: !7395)
!7397 = !DILocation(line: 497, column: 8, scope: !7395)
!7398 = !DILocation(line: 497, column: 19, scope: !7395)
!7399 = !DILocation(line: 497, column: 41, scope: !7395)
!7400 = !DILocation(line: 498, column: 3, scope: !7395)
!7401 = !DILocation(line: 500, column: 2, scope: !7382)
!7402 = !DILocation(line: 501, column: 1, scope: !7382)
!7403 = distinct !DISubprogram(name: "dma_set_max_seg_size", scope: !7383, file: !7383, line: 459, type: !7404, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7404 = !DISubroutineType(types: !7405)
!7405 = !{!286, !2081, !7}
!7406 = !DILocalVariable(name: "dev", arg: 1, scope: !7403, file: !7383, line: 459, type: !2081)
!7407 = !DILocation(line: 459, column: 55, scope: !7403)
!7408 = !DILocalVariable(name: "size", arg: 2, scope: !7403, file: !7383, line: 459, type: !7)
!7409 = !DILocation(line: 459, column: 73, scope: !7403)
!7410 = !DILocation(line: 461, column: 6, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7403, file: !7383, line: 461, column: 6)
!7412 = !DILocation(line: 461, column: 11, scope: !7411)
!7413 = !DILocation(line: 461, column: 6, scope: !7403)
!7414 = !DILocation(line: 462, column: 38, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7411, file: !7383, line: 461, column: 22)
!7416 = !DILocation(line: 462, column: 3, scope: !7415)
!7417 = !DILocation(line: 462, column: 8, scope: !7415)
!7418 = !DILocation(line: 462, column: 19, scope: !7415)
!7419 = !DILocation(line: 462, column: 36, scope: !7415)
!7420 = !DILocation(line: 463, column: 3, scope: !7415)
!7421 = !DILocation(line: 465, column: 2, scope: !7403)
!7422 = !DILocation(line: 466, column: 1, scope: !7403)
!7423 = distinct !DISubprogram(name: "queue_max_segment_size", scope: !68, file: !68, line: 1411, type: !7424, scopeLine: 1412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7424 = !DISubroutineType(types: !7425)
!7425 = !{!7, !6994}
!7426 = !DILocalVariable(name: "q", arg: 1, scope: !7423, file: !68, line: 1411, type: !6994)
!7427 = !DILocation(line: 1411, column: 79, scope: !7423)
!7428 = !DILocation(line: 1413, column: 9, scope: !7423)
!7429 = !DILocation(line: 1413, column: 12, scope: !7423)
!7430 = !DILocation(line: 1413, column: 19, scope: !7423)
!7431 = !DILocation(line: 1413, column: 2, scope: !7423)
!7432 = distinct !DISubprogram(name: "dma_get_cache_alignment", scope: !7383, file: !7383, line: 503, type: !7433, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7433 = !DISubroutineType(types: !7434)
!7434 = !{!286}
!7435 = !DILocation(line: 508, column: 2, scope: !7432)
!7436 = distinct !DISubprogram(name: "scsi_mq_alloc_queue", scope: !3, file: !3, line: 1877, type: !7437, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7437 = !DISubroutineType(types: !7438)
!7438 = !{!2776, !293}
!7439 = !DILocalVariable(name: "sdev", arg: 1, scope: !7436, file: !3, line: 1877, type: !293)
!7440 = !DILocation(line: 1877, column: 63, scope: !7436)
!7441 = !DILocation(line: 1879, column: 43, scope: !7436)
!7442 = !DILocation(line: 1879, column: 49, scope: !7436)
!7443 = !DILocation(line: 1879, column: 55, scope: !7436)
!7444 = !DILocation(line: 1879, column: 24, scope: !7436)
!7445 = !DILocation(line: 1879, column: 2, scope: !7436)
!7446 = !DILocation(line: 1879, column: 8, scope: !7436)
!7447 = !DILocation(line: 1879, column: 22, scope: !7436)
!7448 = !DILocation(line: 1880, column: 13, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 1880, column: 6)
!7450 = !DILocation(line: 1880, column: 19, scope: !7449)
!7451 = !DILocation(line: 1880, column: 6, scope: !7449)
!7452 = !DILocation(line: 1880, column: 6, scope: !7436)
!7453 = !DILocation(line: 1881, column: 3, scope: !7449)
!7454 = !DILocation(line: 1883, column: 35, scope: !7436)
!7455 = !DILocation(line: 1883, column: 2, scope: !7436)
!7456 = !DILocation(line: 1883, column: 8, scope: !7436)
!7457 = !DILocation(line: 1883, column: 23, scope: !7436)
!7458 = !DILocation(line: 1883, column: 33, scope: !7436)
!7459 = !DILocation(line: 1884, column: 20, scope: !7436)
!7460 = !DILocation(line: 1884, column: 26, scope: !7436)
!7461 = !DILocation(line: 1884, column: 32, scope: !7436)
!7462 = !DILocation(line: 1884, column: 38, scope: !7436)
!7463 = !DILocation(line: 1884, column: 2, scope: !7436)
!7464 = !DILocation(line: 1885, column: 50, scope: !7436)
!7465 = !DILocation(line: 1885, column: 56, scope: !7436)
!7466 = !DILocation(line: 1885, column: 2, scope: !7436)
!7467 = !DILocation(line: 1886, column: 9, scope: !7436)
!7468 = !DILocation(line: 1886, column: 15, scope: !7436)
!7469 = !DILocation(line: 1886, column: 2, scope: !7436)
!7470 = !DILocation(line: 1887, column: 1, scope: !7436)
!7471 = distinct !DISubprogram(name: "scsi_mq_setup_tags", scope: !3, file: !3, line: 1889, type: !4972, scopeLine: 1890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7472 = !DILocalVariable(name: "shost", arg: 1, scope: !7471, file: !3, line: 1889, type: !297)
!7473 = !DILocation(line: 1889, column: 42, scope: !7471)
!7474 = !DILocalVariable(name: "cmd_size", scope: !7471, file: !3, line: 1891, type: !7)
!7475 = !DILocation(line: 1891, column: 15, scope: !7471)
!7476 = !DILocalVariable(name: "sgl_size", scope: !7471, file: !3, line: 1891, type: !7)
!7477 = !DILocation(line: 1891, column: 25, scope: !7471)
!7478 = !DILocalVariable(name: "tag_set", scope: !7471, file: !3, line: 1892, type: !3165)
!7479 = !DILocation(line: 1892, column: 25, scope: !7471)
!7480 = !DILocation(line: 1892, column: 36, scope: !7471)
!7481 = !DILocation(line: 1892, column: 43, scope: !7471)
!7482 = !DILocalVariable(name: "__UNIQUE_ID___x328", scope: !7483, file: !3, line: 1894, type: !7)
!7483 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1894, column: 13)
!7484 = !DILocation(line: 1894, column: 13, scope: !7483)
!7485 = !DILocalVariable(name: "__UNIQUE_ID___y329", scope: !7483, file: !3, line: 1894, type: !7)
!7486 = !DILocation(line: 1894, column: 11, scope: !7471)
!7487 = !DILocation(line: 1896, column: 40, scope: !7471)
!7488 = !DILocation(line: 1896, column: 47, scope: !7471)
!7489 = !DILocation(line: 1896, column: 54, scope: !7471)
!7490 = !DILocation(line: 1896, column: 38, scope: !7471)
!7491 = !DILocation(line: 1896, column: 65, scope: !7471)
!7492 = !DILocation(line: 1896, column: 63, scope: !7471)
!7493 = !DILocation(line: 1896, column: 13, scope: !7471)
!7494 = !DILocation(line: 1896, column: 11, scope: !7471)
!7495 = !DILocation(line: 1897, column: 25, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1897, column: 6)
!7497 = !DILocation(line: 1897, column: 6, scope: !7496)
!7498 = !DILocation(line: 1897, column: 6, scope: !7471)
!7499 = !DILocation(line: 1898, column: 12, scope: !7496)
!7500 = !DILocation(line: 1898, column: 3, scope: !7496)
!7501 = !DILocation(line: 1901, column: 9, scope: !7471)
!7502 = !DILocation(line: 1901, column: 2, scope: !7471)
!7503 = !DILocation(line: 1902, column: 6, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1902, column: 6)
!7505 = !DILocation(line: 1902, column: 13, scope: !7504)
!7506 = !DILocation(line: 1902, column: 20, scope: !7504)
!7507 = !DILocation(line: 1902, column: 6, scope: !7471)
!7508 = !DILocation(line: 1903, column: 3, scope: !7504)
!7509 = !DILocation(line: 1903, column: 12, scope: !7504)
!7510 = !DILocation(line: 1903, column: 16, scope: !7504)
!7511 = !DILocation(line: 1905, column: 3, scope: !7504)
!7512 = !DILocation(line: 1905, column: 12, scope: !7504)
!7513 = !DILocation(line: 1905, column: 16, scope: !7504)
!7514 = !DILocation(line: 1906, column: 26, scope: !7471)
!7515 = !DILocation(line: 1906, column: 33, scope: !7471)
!7516 = !DILocation(line: 1906, column: 2, scope: !7471)
!7517 = !DILocation(line: 1906, column: 11, scope: !7471)
!7518 = !DILocation(line: 1906, column: 24, scope: !7471)
!7519 = !DILocation(line: 1907, column: 25, scope: !7471)
!7520 = !DILocation(line: 1907, column: 32, scope: !7471)
!7521 = !DILocation(line: 1907, column: 2, scope: !7471)
!7522 = !DILocation(line: 1907, column: 11, scope: !7471)
!7523 = !DILocation(line: 1907, column: 23, scope: !7471)
!7524 = !DILocation(line: 1908, column: 22, scope: !7471)
!7525 = !DILocation(line: 1908, column: 2, scope: !7471)
!7526 = !DILocation(line: 1908, column: 11, scope: !7471)
!7527 = !DILocation(line: 1908, column: 20, scope: !7471)
!7528 = !DILocation(line: 1909, column: 2, scope: !7471)
!7529 = !DILocation(line: 1909, column: 11, scope: !7471)
!7530 = !DILocation(line: 1909, column: 21, scope: !7471)
!7531 = !DILocation(line: 1910, column: 2, scope: !7471)
!7532 = !DILocation(line: 1910, column: 11, scope: !7471)
!7533 = !DILocation(line: 1910, column: 17, scope: !7471)
!7534 = !DILocation(line: 1912, column: 3, scope: !7471)
!7535 = !DILocation(line: 1911, column: 2, scope: !7471)
!7536 = !DILocation(line: 1911, column: 11, scope: !7471)
!7537 = !DILocation(line: 1911, column: 17, scope: !7471)
!7538 = !DILocation(line: 1913, column: 25, scope: !7471)
!7539 = !DILocation(line: 1913, column: 2, scope: !7471)
!7540 = !DILocation(line: 1913, column: 11, scope: !7471)
!7541 = !DILocation(line: 1913, column: 23, scope: !7471)
!7542 = !DILocation(line: 1914, column: 6, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1914, column: 6)
!7544 = !DILocation(line: 1914, column: 13, scope: !7543)
!7545 = !DILocation(line: 1914, column: 6, scope: !7471)
!7546 = !DILocation(line: 1915, column: 3, scope: !7543)
!7547 = !DILocation(line: 1915, column: 12, scope: !7543)
!7548 = !DILocation(line: 1915, column: 18, scope: !7543)
!7549 = !DILocation(line: 1917, column: 30, scope: !7471)
!7550 = !DILocation(line: 1917, column: 9, scope: !7471)
!7551 = !DILocation(line: 1917, column: 2, scope: !7471)
!7552 = distinct !DISubprogram(name: "scsi_mq_inline_sgl_size", scope: !3, file: !3, line: 1539, type: !7553, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7553 = !DISubroutineType(types: !7554)
!7554 = !{!7, !297}
!7555 = !DILocalVariable(name: "shost", arg: 1, scope: !7552, file: !3, line: 1539, type: !297)
!7556 = !DILocation(line: 1539, column: 63, scope: !7552)
!7557 = !DILocalVariable(name: "__UNIQUE_ID___x316", scope: !7558, file: !3, line: 1541, type: !7)
!7558 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 1541, column: 9)
!7559 = !DILocation(line: 1541, column: 9, scope: !7558)
!7560 = !DILocalVariable(name: "__UNIQUE_ID___y317", scope: !7558, file: !3, line: 1541, type: !7)
!7561 = !DILocation(line: 1541, column: 9, scope: !7552)
!7562 = !DILocation(line: 1541, column: 70, scope: !7552)
!7563 = !DILocation(line: 1541, column: 2, scope: !7552)
!7564 = distinct !DISubprogram(name: "scsi_host_get_prot", scope: !154, file: !154, line: 822, type: !7553, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7565 = !DILocalVariable(name: "shost", arg: 1, scope: !7564, file: !154, line: 822, type: !297)
!7566 = !DILocation(line: 822, column: 65, scope: !7564)
!7567 = !DILocation(line: 824, column: 9, scope: !7564)
!7568 = !DILocation(line: 824, column: 16, scope: !7564)
!7569 = !DILocation(line: 824, column: 2, scope: !7564)
!7570 = distinct !DISubprogram(name: "scsi_mq_destroy_tags", scope: !3, file: !3, line: 1920, type: !4964, scopeLine: 1921, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7571 = !DILocalVariable(name: "shost", arg: 1, scope: !7570, file: !3, line: 1920, type: !297)
!7572 = !DILocation(line: 1920, column: 45, scope: !7570)
!7573 = !DILocation(line: 1922, column: 23, scope: !7570)
!7574 = !DILocation(line: 1922, column: 30, scope: !7570)
!7575 = !DILocation(line: 1922, column: 2, scope: !7570)
!7576 = !DILocation(line: 1923, column: 1, scope: !7570)
!7577 = distinct !DISubprogram(name: "scsi_device_from_queue", scope: !3, file: !3, line: 1932, type: !7578, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{!293, !2776}
!7580 = !DILocalVariable(name: "q", arg: 1, scope: !7577, file: !3, line: 1932, type: !2776)
!7581 = !DILocation(line: 1932, column: 66, scope: !7577)
!7582 = !DILocalVariable(name: "sdev", scope: !7577, file: !3, line: 1934, type: !293)
!7583 = !DILocation(line: 1934, column: 22, scope: !7577)
!7584 = !DILocation(line: 1936, column: 6, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 1936, column: 6)
!7586 = !DILocation(line: 1936, column: 9, scope: !7585)
!7587 = !DILocation(line: 1936, column: 16, scope: !7585)
!7588 = !DILocation(line: 1936, column: 42, scope: !7585)
!7589 = !DILocation(line: 1937, column: 6, scope: !7585)
!7590 = !DILocation(line: 1937, column: 9, scope: !7585)
!7591 = !DILocation(line: 1937, column: 16, scope: !7585)
!7592 = !DILocation(line: 1936, column: 6, scope: !7577)
!7593 = !DILocation(line: 1938, column: 10, scope: !7585)
!7594 = !DILocation(line: 1938, column: 13, scope: !7585)
!7595 = !DILocation(line: 1938, column: 8, scope: !7585)
!7596 = !DILocation(line: 1938, column: 3, scope: !7585)
!7597 = !DILocation(line: 1939, column: 7, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 1939, column: 6)
!7599 = !DILocation(line: 1939, column: 12, scope: !7598)
!7600 = !DILocation(line: 1939, column: 28, scope: !7598)
!7601 = !DILocation(line: 1939, column: 34, scope: !7598)
!7602 = !DILocation(line: 1939, column: 16, scope: !7598)
!7603 = !DILocation(line: 1939, column: 6, scope: !7577)
!7604 = !DILocation(line: 1940, column: 8, scope: !7598)
!7605 = !DILocation(line: 1940, column: 3, scope: !7598)
!7606 = !DILocation(line: 1942, column: 9, scope: !7577)
!7607 = !DILocation(line: 1942, column: 2, scope: !7577)
!7608 = distinct !DISubprogram(name: "scsi_block_requests", scope: !3, file: !3, line: 1953, type: !4964, scopeLine: 1954, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7609 = !DILocalVariable(name: "shost", arg: 1, scope: !7608, file: !3, line: 1953, type: !297)
!7610 = !DILocation(line: 1953, column: 44, scope: !7608)
!7611 = !DILocation(line: 1955, column: 2, scope: !7608)
!7612 = !DILocation(line: 1955, column: 9, scope: !7608)
!7613 = !DILocation(line: 1955, column: 27, scope: !7608)
!7614 = !DILocation(line: 1956, column: 1, scope: !7608)
!7615 = distinct !DISubprogram(name: "scsi_unblock_requests", scope: !3, file: !3, line: 1969, type: !4964, scopeLine: 1970, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7616 = !DILocalVariable(name: "shost", arg: 1, scope: !7615, file: !3, line: 1969, type: !297)
!7617 = !DILocation(line: 1969, column: 46, scope: !7615)
!7618 = !DILocation(line: 1971, column: 2, scope: !7615)
!7619 = !DILocation(line: 1971, column: 9, scope: !7615)
!7620 = !DILocation(line: 1971, column: 27, scope: !7615)
!7621 = !DILocation(line: 1972, column: 23, scope: !7615)
!7622 = !DILocation(line: 1972, column: 2, scope: !7615)
!7623 = !DILocation(line: 1973, column: 1, scope: !7615)
!7624 = distinct !DISubprogram(name: "scsi_exit_queue", scope: !3, file: !3, line: 1976, type: !4497, scopeLine: 1977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7625 = !DILocation(line: 1978, column: 21, scope: !7624)
!7626 = !DILocation(line: 1978, column: 2, scope: !7624)
!7627 = !DILocation(line: 1979, column: 21, scope: !7624)
!7628 = !DILocation(line: 1979, column: 2, scope: !7624)
!7629 = !DILocation(line: 1980, column: 1, scope: !7624)
!7630 = distinct !DISubprogram(name: "scsi_mode_select", scope: !3, file: !3, line: 2001, type: !7631, scopeLine: 2004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7631 = !DISubroutineType(types: !7632)
!7632 = !{!286, !293, !286, !286, !286, !282, !286, !286, !286, !7633, !5273}
!7633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7634, size: 64)
!7634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_mode_data", file: !128, line: 22, size: 96, elements: !7635)
!7635 = !{!7636, !7637, !7638, !7639, !7640, !7641}
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7634, file: !128, line: 23, baseType: !359, size: 32)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "block_descriptor_length", scope: !7634, file: !128, line: 24, baseType: !1024, size: 16, offset: 32)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "medium_type", scope: !7634, file: !128, line: 25, baseType: !515, size: 8, offset: 48)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "device_specific", scope: !7634, file: !128, line: 26, baseType: !515, size: 8, offset: 56)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "header_length", scope: !7634, file: !128, line: 27, baseType: !515, size: 8, offset: 64)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "longlba", scope: !7634, file: !128, line: 28, baseType: !515, size: 1, offset: 72, flags: DIFlagBitField, extraData: i64 72)
!7642 = !DILocalVariable(name: "s", arg: 1, scope: !7643, file: !5426, line: 445, type: !2665)
!7643 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !5426, file: !5426, line: 445, type: !7644, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7644 = !DISubroutineType(types: !7645)
!7645 = !{!291, !2665, !605, !928}
!7646 = !DILocation(line: 445, column: 72, scope: !7643, inlinedAt: !7647)
!7647 = distinct !DILocation(line: 552, column: 10, scope: !7648, inlinedAt: !7653)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !5426, line: 540, column: 34)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !5426, line: 540, column: 6)
!7650 = distinct !DISubprogram(name: "kmalloc", scope: !5426, file: !5426, line: 538, type: !7651, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7651 = !DISubroutineType(types: !7652)
!7652 = !{!291, !928, !605}
!7653 = distinct !DILocation(line: 2037, column: 17, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 2032, column: 9)
!7655 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 2012, column: 6)
!7656 = !DILocalVariable(name: "flags", arg: 2, scope: !7643, file: !5426, line: 446, type: !605)
!7657 = !DILocation(line: 446, column: 9, scope: !7643, inlinedAt: !7647)
!7658 = !DILocalVariable(name: "size", arg: 3, scope: !7643, file: !5426, line: 446, type: !928)
!7659 = !DILocation(line: 446, column: 23, scope: !7643, inlinedAt: !7647)
!7660 = !DILocalVariable(name: "ret", scope: !7643, file: !5426, line: 448, type: !291)
!7661 = !DILocation(line: 448, column: 8, scope: !7643, inlinedAt: !7647)
!7662 = !DILocalVariable(name: "flags", arg: 1, scope: !7663, file: !5426, line: 318, type: !605)
!7663 = distinct !DISubprogram(name: "kmalloc_type", scope: !5426, file: !5426, line: 318, type: !7664, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7664 = !DISubroutineType(types: !7665)
!7665 = !{!5425, !605}
!7666 = !DILocation(line: 318, column: 67, scope: !7663, inlinedAt: !7667)
!7667 = distinct !DILocation(line: 553, column: 20, scope: !7648, inlinedAt: !7653)
!7668 = !DILocalVariable(name: "size", arg: 1, scope: !7669, file: !5426, line: 346, type: !928)
!7669 = distinct !DISubprogram(name: "kmalloc_index", scope: !5426, file: !5426, line: 346, type: !7670, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7670 = !DISubroutineType(types: !7671)
!7671 = !{!7, !928}
!7672 = !DILocation(line: 346, column: 58, scope: !7669, inlinedAt: !7673)
!7673 = distinct !DILocation(line: 547, column: 11, scope: !7648, inlinedAt: !7653)
!7674 = !DILocalVariable(name: "size", arg: 1, scope: !7675, file: !5426, line: 472, type: !928)
!7675 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !5426, file: !5426, line: 472, type: !7676, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7676 = !DISubroutineType(types: !7677)
!7677 = !{!291, !928, !605, !7}
!7678 = !DILocation(line: 472, column: 28, scope: !7675, inlinedAt: !7679)
!7679 = distinct !DILocation(line: 481, column: 9, scope: !7680, inlinedAt: !7681)
!7680 = distinct !DISubprogram(name: "kmalloc_large", scope: !5426, file: !5426, line: 478, type: !7651, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!7681 = distinct !DILocation(line: 545, column: 11, scope: !7682, inlinedAt: !7653)
!7682 = distinct !DILexicalBlock(scope: !7648, file: !5426, line: 544, column: 7)
!7683 = !DILocalVariable(name: "flags", arg: 2, scope: !7675, file: !5426, line: 472, type: !605)
!7684 = !DILocation(line: 472, column: 40, scope: !7675, inlinedAt: !7679)
!7685 = !DILocalVariable(name: "order", arg: 3, scope: !7675, file: !5426, line: 472, type: !7)
!7686 = !DILocation(line: 472, column: 60, scope: !7675, inlinedAt: !7679)
!7687 = !DILocalVariable(name: "size", arg: 1, scope: !7680, file: !5426, line: 478, type: !928)
!7688 = !DILocation(line: 478, column: 51, scope: !7680, inlinedAt: !7681)
!7689 = !DILocalVariable(name: "flags", arg: 2, scope: !7680, file: !5426, line: 478, type: !605)
!7690 = !DILocation(line: 478, column: 63, scope: !7680, inlinedAt: !7681)
!7691 = !DILocalVariable(name: "order", scope: !7680, file: !5426, line: 480, type: !7)
!7692 = !DILocation(line: 480, column: 15, scope: !7680, inlinedAt: !7681)
!7693 = !DILocalVariable(name: "size", arg: 1, scope: !7650, file: !5426, line: 538, type: !928)
!7694 = !DILocation(line: 538, column: 45, scope: !7650, inlinedAt: !7653)
!7695 = !DILocalVariable(name: "flags", arg: 2, scope: !7650, file: !5426, line: 538, type: !605)
!7696 = !DILocation(line: 538, column: 57, scope: !7650, inlinedAt: !7653)
!7697 = !DILocalVariable(name: "index", scope: !7648, file: !5426, line: 542, type: !7)
!7698 = !DILocation(line: 542, column: 16, scope: !7648, inlinedAt: !7653)
!7699 = !DILocation(line: 445, column: 72, scope: !7643, inlinedAt: !7700)
!7700 = distinct !DILocation(line: 552, column: 10, scope: !7648, inlinedAt: !7701)
!7701 = distinct !DILocation(line: 2015, column: 17, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 2012, column: 27)
!7703 = !DILocation(line: 446, column: 9, scope: !7643, inlinedAt: !7700)
!7704 = !DILocation(line: 446, column: 23, scope: !7643, inlinedAt: !7700)
!7705 = !DILocation(line: 448, column: 8, scope: !7643, inlinedAt: !7700)
!7706 = !DILocation(line: 318, column: 67, scope: !7663, inlinedAt: !7707)
!7707 = distinct !DILocation(line: 553, column: 20, scope: !7648, inlinedAt: !7701)
!7708 = !DILocation(line: 346, column: 58, scope: !7669, inlinedAt: !7709)
!7709 = distinct !DILocation(line: 547, column: 11, scope: !7648, inlinedAt: !7701)
!7710 = !DILocation(line: 472, column: 28, scope: !7675, inlinedAt: !7711)
!7711 = distinct !DILocation(line: 481, column: 9, scope: !7680, inlinedAt: !7712)
!7712 = distinct !DILocation(line: 545, column: 11, scope: !7682, inlinedAt: !7701)
!7713 = !DILocation(line: 472, column: 40, scope: !7675, inlinedAt: !7711)
!7714 = !DILocation(line: 472, column: 60, scope: !7675, inlinedAt: !7711)
!7715 = !DILocation(line: 478, column: 51, scope: !7680, inlinedAt: !7712)
!7716 = !DILocation(line: 478, column: 63, scope: !7680, inlinedAt: !7712)
!7717 = !DILocation(line: 480, column: 15, scope: !7680, inlinedAt: !7712)
!7718 = !DILocation(line: 538, column: 45, scope: !7650, inlinedAt: !7701)
!7719 = !DILocation(line: 538, column: 57, scope: !7650, inlinedAt: !7701)
!7720 = !DILocation(line: 542, column: 16, scope: !7648, inlinedAt: !7701)
!7721 = !DILocalVariable(name: "sdev", arg: 1, scope: !7630, file: !3, line: 2001, type: !293)
!7722 = !DILocation(line: 2001, column: 38, scope: !7630)
!7723 = !DILocalVariable(name: "pf", arg: 2, scope: !7630, file: !3, line: 2001, type: !286)
!7724 = !DILocation(line: 2001, column: 48, scope: !7630)
!7725 = !DILocalVariable(name: "sp", arg: 3, scope: !7630, file: !3, line: 2001, type: !286)
!7726 = !DILocation(line: 2001, column: 56, scope: !7630)
!7727 = !DILocalVariable(name: "modepage", arg: 4, scope: !7630, file: !3, line: 2001, type: !286)
!7728 = !DILocation(line: 2001, column: 64, scope: !7630)
!7729 = !DILocalVariable(name: "buffer", arg: 5, scope: !7630, file: !3, line: 2002, type: !282)
!7730 = !DILocation(line: 2002, column: 19, scope: !7630)
!7731 = !DILocalVariable(name: "len", arg: 6, scope: !7630, file: !3, line: 2002, type: !286)
!7732 = !DILocation(line: 2002, column: 31, scope: !7630)
!7733 = !DILocalVariable(name: "timeout", arg: 7, scope: !7630, file: !3, line: 2002, type: !286)
!7734 = !DILocation(line: 2002, column: 40, scope: !7630)
!7735 = !DILocalVariable(name: "retries", arg: 8, scope: !7630, file: !3, line: 2002, type: !286)
!7736 = !DILocation(line: 2002, column: 53, scope: !7630)
!7737 = !DILocalVariable(name: "data", arg: 9, scope: !7630, file: !3, line: 2003, type: !7633)
!7738 = !DILocation(line: 2003, column: 27, scope: !7630)
!7739 = !DILocalVariable(name: "sshdr", arg: 10, scope: !7630, file: !3, line: 2003, type: !5273)
!7740 = !DILocation(line: 2003, column: 56, scope: !7630)
!7741 = !DILocalVariable(name: "cmd", scope: !7630, file: !3, line: 2005, type: !7742)
!7742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 80, elements: !7743)
!7743 = !{!7744}
!7744 = !DISubrange(count: 10)
!7745 = !DILocation(line: 2005, column: 16, scope: !7630)
!7746 = !DILocalVariable(name: "real_buffer", scope: !7630, file: !3, line: 2006, type: !282)
!7747 = !DILocation(line: 2006, column: 17, scope: !7630)
!7748 = !DILocalVariable(name: "ret", scope: !7630, file: !3, line: 2007, type: !286)
!7749 = !DILocation(line: 2007, column: 6, scope: !7630)
!7750 = !DILocation(line: 2009, column: 2, scope: !7630)
!7751 = !DILocation(line: 2010, column: 12, scope: !7630)
!7752 = !DILocation(line: 2010, column: 30, scope: !7630)
!7753 = !DILocation(line: 2010, column: 27, scope: !7630)
!7754 = !DILocation(line: 2010, column: 11, scope: !7630)
!7755 = !DILocation(line: 2010, column: 2, scope: !7630)
!7756 = !DILocation(line: 2010, column: 9, scope: !7630)
!7757 = !DILocation(line: 2012, column: 6, scope: !7655)
!7758 = !DILocation(line: 2012, column: 12, scope: !7655)
!7759 = !DILocation(line: 2012, column: 6, scope: !7630)
!7760 = !DILocation(line: 2013, column: 7, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 2013, column: 7)
!7762 = !DILocation(line: 2013, column: 11, scope: !7761)
!7763 = !DILocation(line: 2013, column: 7, scope: !7702)
!7764 = !DILocation(line: 2014, column: 4, scope: !7761)
!7765 = !DILocation(line: 2015, column: 29, scope: !7702)
!7766 = !DILocation(line: 2015, column: 27, scope: !7702)
!7767 = !DILocation(line: 2015, column: 25, scope: !7702)
!7768 = !DILocation(line: 540, column: 27, scope: !7649, inlinedAt: !7701)
!7769 = !DILocation(line: 540, column: 6, scope: !7649, inlinedAt: !7701)
!7770 = !DILocation(line: 540, column: 6, scope: !7650, inlinedAt: !7701)
!7771 = !DILocation(line: 544, column: 7, scope: !7682, inlinedAt: !7701)
!7772 = !DILocation(line: 544, column: 12, scope: !7682, inlinedAt: !7701)
!7773 = !DILocation(line: 544, column: 7, scope: !7648, inlinedAt: !7701)
!7774 = !DILocation(line: 545, column: 25, scope: !7682, inlinedAt: !7701)
!7775 = !DILocation(line: 545, column: 31, scope: !7682, inlinedAt: !7701)
!7776 = !DILocation(line: 480, column: 33, scope: !7680, inlinedAt: !7712)
!7777 = !DILocation(line: 480, column: 23, scope: !7680, inlinedAt: !7712)
!7778 = !DILocation(line: 481, column: 29, scope: !7680, inlinedAt: !7712)
!7779 = !DILocation(line: 481, column: 35, scope: !7680, inlinedAt: !7712)
!7780 = !DILocation(line: 481, column: 42, scope: !7680, inlinedAt: !7712)
!7781 = !DILocation(line: 474, column: 23, scope: !7675, inlinedAt: !7711)
!7782 = !DILocation(line: 474, column: 29, scope: !7675, inlinedAt: !7711)
!7783 = !DILocation(line: 474, column: 36, scope: !7675, inlinedAt: !7711)
!7784 = !DILocation(line: 474, column: 9, scope: !7675, inlinedAt: !7711)
!7785 = !DILocation(line: 545, column: 4, scope: !7682, inlinedAt: !7701)
!7786 = !DILocation(line: 547, column: 25, scope: !7648, inlinedAt: !7701)
!7787 = !DILocation(line: 348, column: 7, scope: !7788, inlinedAt: !7709)
!7788 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 348, column: 6)
!7789 = !DILocation(line: 348, column: 6, scope: !7669, inlinedAt: !7709)
!7790 = !DILocation(line: 349, column: 3, scope: !7788, inlinedAt: !7709)
!7791 = !DILocation(line: 351, column: 6, scope: !7792, inlinedAt: !7709)
!7792 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 351, column: 6)
!7793 = !DILocation(line: 351, column: 11, scope: !7792, inlinedAt: !7709)
!7794 = !DILocation(line: 351, column: 6, scope: !7669, inlinedAt: !7709)
!7795 = !DILocation(line: 352, column: 3, scope: !7792, inlinedAt: !7709)
!7796 = !DILocation(line: 354, column: 32, scope: !7797, inlinedAt: !7709)
!7797 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 354, column: 6)
!7798 = !DILocation(line: 354, column: 37, scope: !7797, inlinedAt: !7709)
!7799 = !DILocation(line: 354, column: 42, scope: !7797, inlinedAt: !7709)
!7800 = !DILocation(line: 354, column: 45, scope: !7797, inlinedAt: !7709)
!7801 = !DILocation(line: 354, column: 50, scope: !7797, inlinedAt: !7709)
!7802 = !DILocation(line: 354, column: 6, scope: !7669, inlinedAt: !7709)
!7803 = !DILocation(line: 355, column: 3, scope: !7797, inlinedAt: !7709)
!7804 = !DILocation(line: 356, column: 32, scope: !7805, inlinedAt: !7709)
!7805 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 356, column: 6)
!7806 = !DILocation(line: 356, column: 37, scope: !7805, inlinedAt: !7709)
!7807 = !DILocation(line: 356, column: 43, scope: !7805, inlinedAt: !7709)
!7808 = !DILocation(line: 356, column: 46, scope: !7805, inlinedAt: !7709)
!7809 = !DILocation(line: 356, column: 51, scope: !7805, inlinedAt: !7709)
!7810 = !DILocation(line: 356, column: 6, scope: !7669, inlinedAt: !7709)
!7811 = !DILocation(line: 357, column: 3, scope: !7805, inlinedAt: !7709)
!7812 = !DILocation(line: 358, column: 6, scope: !7813, inlinedAt: !7709)
!7813 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 358, column: 6)
!7814 = !DILocation(line: 358, column: 11, scope: !7813, inlinedAt: !7709)
!7815 = !DILocation(line: 358, column: 6, scope: !7669, inlinedAt: !7709)
!7816 = !DILocation(line: 358, column: 26, scope: !7813, inlinedAt: !7709)
!7817 = !DILocation(line: 359, column: 6, scope: !7818, inlinedAt: !7709)
!7818 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 359, column: 6)
!7819 = !DILocation(line: 359, column: 11, scope: !7818, inlinedAt: !7709)
!7820 = !DILocation(line: 359, column: 6, scope: !7669, inlinedAt: !7709)
!7821 = !DILocation(line: 359, column: 26, scope: !7818, inlinedAt: !7709)
!7822 = !DILocation(line: 360, column: 6, scope: !7823, inlinedAt: !7709)
!7823 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 360, column: 6)
!7824 = !DILocation(line: 360, column: 11, scope: !7823, inlinedAt: !7709)
!7825 = !DILocation(line: 360, column: 6, scope: !7669, inlinedAt: !7709)
!7826 = !DILocation(line: 360, column: 26, scope: !7823, inlinedAt: !7709)
!7827 = !DILocation(line: 361, column: 6, scope: !7828, inlinedAt: !7709)
!7828 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 361, column: 6)
!7829 = !DILocation(line: 361, column: 11, scope: !7828, inlinedAt: !7709)
!7830 = !DILocation(line: 361, column: 6, scope: !7669, inlinedAt: !7709)
!7831 = !DILocation(line: 361, column: 26, scope: !7828, inlinedAt: !7709)
!7832 = !DILocation(line: 362, column: 6, scope: !7833, inlinedAt: !7709)
!7833 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 362, column: 6)
!7834 = !DILocation(line: 362, column: 11, scope: !7833, inlinedAt: !7709)
!7835 = !DILocation(line: 362, column: 6, scope: !7669, inlinedAt: !7709)
!7836 = !DILocation(line: 362, column: 26, scope: !7833, inlinedAt: !7709)
!7837 = !DILocation(line: 363, column: 6, scope: !7838, inlinedAt: !7709)
!7838 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 363, column: 6)
!7839 = !DILocation(line: 363, column: 11, scope: !7838, inlinedAt: !7709)
!7840 = !DILocation(line: 363, column: 6, scope: !7669, inlinedAt: !7709)
!7841 = !DILocation(line: 363, column: 26, scope: !7838, inlinedAt: !7709)
!7842 = !DILocation(line: 364, column: 6, scope: !7843, inlinedAt: !7709)
!7843 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 364, column: 6)
!7844 = !DILocation(line: 364, column: 11, scope: !7843, inlinedAt: !7709)
!7845 = !DILocation(line: 364, column: 6, scope: !7669, inlinedAt: !7709)
!7846 = !DILocation(line: 364, column: 26, scope: !7843, inlinedAt: !7709)
!7847 = !DILocation(line: 365, column: 6, scope: !7848, inlinedAt: !7709)
!7848 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 365, column: 6)
!7849 = !DILocation(line: 365, column: 11, scope: !7848, inlinedAt: !7709)
!7850 = !DILocation(line: 365, column: 6, scope: !7669, inlinedAt: !7709)
!7851 = !DILocation(line: 365, column: 26, scope: !7848, inlinedAt: !7709)
!7852 = !DILocation(line: 366, column: 6, scope: !7853, inlinedAt: !7709)
!7853 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 366, column: 6)
!7854 = !DILocation(line: 366, column: 11, scope: !7853, inlinedAt: !7709)
!7855 = !DILocation(line: 366, column: 6, scope: !7669, inlinedAt: !7709)
!7856 = !DILocation(line: 366, column: 26, scope: !7853, inlinedAt: !7709)
!7857 = !DILocation(line: 367, column: 6, scope: !7858, inlinedAt: !7709)
!7858 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 367, column: 6)
!7859 = !DILocation(line: 367, column: 11, scope: !7858, inlinedAt: !7709)
!7860 = !DILocation(line: 367, column: 6, scope: !7669, inlinedAt: !7709)
!7861 = !DILocation(line: 367, column: 26, scope: !7858, inlinedAt: !7709)
!7862 = !DILocation(line: 368, column: 6, scope: !7863, inlinedAt: !7709)
!7863 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 368, column: 6)
!7864 = !DILocation(line: 368, column: 11, scope: !7863, inlinedAt: !7709)
!7865 = !DILocation(line: 368, column: 6, scope: !7669, inlinedAt: !7709)
!7866 = !DILocation(line: 368, column: 26, scope: !7863, inlinedAt: !7709)
!7867 = !DILocation(line: 369, column: 6, scope: !7868, inlinedAt: !7709)
!7868 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 369, column: 6)
!7869 = !DILocation(line: 369, column: 11, scope: !7868, inlinedAt: !7709)
!7870 = !DILocation(line: 369, column: 6, scope: !7669, inlinedAt: !7709)
!7871 = !DILocation(line: 369, column: 26, scope: !7868, inlinedAt: !7709)
!7872 = !DILocation(line: 370, column: 6, scope: !7873, inlinedAt: !7709)
!7873 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 370, column: 6)
!7874 = !DILocation(line: 370, column: 11, scope: !7873, inlinedAt: !7709)
!7875 = !DILocation(line: 370, column: 6, scope: !7669, inlinedAt: !7709)
!7876 = !DILocation(line: 370, column: 26, scope: !7873, inlinedAt: !7709)
!7877 = !DILocation(line: 371, column: 6, scope: !7878, inlinedAt: !7709)
!7878 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 371, column: 6)
!7879 = !DILocation(line: 371, column: 11, scope: !7878, inlinedAt: !7709)
!7880 = !DILocation(line: 371, column: 6, scope: !7669, inlinedAt: !7709)
!7881 = !DILocation(line: 371, column: 26, scope: !7878, inlinedAt: !7709)
!7882 = !DILocation(line: 372, column: 6, scope: !7883, inlinedAt: !7709)
!7883 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 372, column: 6)
!7884 = !DILocation(line: 372, column: 11, scope: !7883, inlinedAt: !7709)
!7885 = !DILocation(line: 372, column: 6, scope: !7669, inlinedAt: !7709)
!7886 = !DILocation(line: 372, column: 26, scope: !7883, inlinedAt: !7709)
!7887 = !DILocation(line: 373, column: 6, scope: !7888, inlinedAt: !7709)
!7888 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 373, column: 6)
!7889 = !DILocation(line: 373, column: 11, scope: !7888, inlinedAt: !7709)
!7890 = !DILocation(line: 373, column: 6, scope: !7669, inlinedAt: !7709)
!7891 = !DILocation(line: 373, column: 26, scope: !7888, inlinedAt: !7709)
!7892 = !DILocation(line: 374, column: 6, scope: !7893, inlinedAt: !7709)
!7893 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 374, column: 6)
!7894 = !DILocation(line: 374, column: 11, scope: !7893, inlinedAt: !7709)
!7895 = !DILocation(line: 374, column: 6, scope: !7669, inlinedAt: !7709)
!7896 = !DILocation(line: 374, column: 26, scope: !7893, inlinedAt: !7709)
!7897 = !DILocation(line: 375, column: 6, scope: !7898, inlinedAt: !7709)
!7898 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 375, column: 6)
!7899 = !DILocation(line: 375, column: 11, scope: !7898, inlinedAt: !7709)
!7900 = !DILocation(line: 375, column: 6, scope: !7669, inlinedAt: !7709)
!7901 = !DILocation(line: 375, column: 27, scope: !7898, inlinedAt: !7709)
!7902 = !DILocation(line: 376, column: 6, scope: !7903, inlinedAt: !7709)
!7903 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 376, column: 6)
!7904 = !DILocation(line: 376, column: 11, scope: !7903, inlinedAt: !7709)
!7905 = !DILocation(line: 376, column: 6, scope: !7669, inlinedAt: !7709)
!7906 = !DILocation(line: 376, column: 32, scope: !7903, inlinedAt: !7709)
!7907 = !DILocation(line: 377, column: 6, scope: !7908, inlinedAt: !7709)
!7908 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 377, column: 6)
!7909 = !DILocation(line: 377, column: 11, scope: !7908, inlinedAt: !7709)
!7910 = !DILocation(line: 377, column: 6, scope: !7669, inlinedAt: !7709)
!7911 = !DILocation(line: 377, column: 32, scope: !7908, inlinedAt: !7709)
!7912 = !DILocation(line: 378, column: 6, scope: !7913, inlinedAt: !7709)
!7913 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 378, column: 6)
!7914 = !DILocation(line: 378, column: 11, scope: !7913, inlinedAt: !7709)
!7915 = !DILocation(line: 378, column: 6, scope: !7669, inlinedAt: !7709)
!7916 = !DILocation(line: 378, column: 32, scope: !7913, inlinedAt: !7709)
!7917 = !DILocation(line: 379, column: 6, scope: !7918, inlinedAt: !7709)
!7918 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 379, column: 6)
!7919 = !DILocation(line: 379, column: 11, scope: !7918, inlinedAt: !7709)
!7920 = !DILocation(line: 379, column: 6, scope: !7669, inlinedAt: !7709)
!7921 = !DILocation(line: 379, column: 33, scope: !7918, inlinedAt: !7709)
!7922 = !DILocation(line: 380, column: 6, scope: !7923, inlinedAt: !7709)
!7923 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 380, column: 6)
!7924 = !DILocation(line: 380, column: 11, scope: !7923, inlinedAt: !7709)
!7925 = !DILocation(line: 380, column: 6, scope: !7669, inlinedAt: !7709)
!7926 = !DILocation(line: 380, column: 33, scope: !7923, inlinedAt: !7709)
!7927 = !DILocation(line: 381, column: 6, scope: !7928, inlinedAt: !7709)
!7928 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 381, column: 6)
!7929 = !DILocation(line: 381, column: 11, scope: !7928, inlinedAt: !7709)
!7930 = !DILocation(line: 381, column: 6, scope: !7669, inlinedAt: !7709)
!7931 = !DILocation(line: 381, column: 33, scope: !7928, inlinedAt: !7709)
!7932 = !DILocation(line: 382, column: 2, scope: !7933, inlinedAt: !7709)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !5426, line: 382, column: 2)
!7934 = distinct !DILexicalBlock(scope: !7669, file: !5426, line: 382, column: 2)
!7935 = !{i32 -2142243142, i32 -2142243113, i32 -2142243067, i32 -2142243009, i32 -2142242955, i32 -2142242901, i32 -2142242846, i32 -2142242815}
!7936 = !DILocation(line: 382, column: 2, scope: !7937, inlinedAt: !7709)
!7937 = distinct !DILexicalBlock(scope: !7938, file: !5426, line: 382, column: 2)
!7938 = distinct !DILexicalBlock(scope: !7934, file: !5426, line: 382, column: 2)
!7939 = !{i32 -2142242372, i32 -2142242365, i32 -2142242311, i32 -2142242280, i32 -2142242250}
!7940 = !DILocation(line: 382, column: 2, scope: !7938, inlinedAt: !7709)
!7941 = !DILocation(line: 386, column: 1, scope: !7669, inlinedAt: !7709)
!7942 = !DILocation(line: 547, column: 9, scope: !7648, inlinedAt: !7701)
!7943 = !DILocation(line: 549, column: 8, scope: !7944, inlinedAt: !7701)
!7944 = distinct !DILexicalBlock(scope: !7648, file: !5426, line: 549, column: 7)
!7945 = !DILocation(line: 549, column: 7, scope: !7648, inlinedAt: !7701)
!7946 = !DILocation(line: 550, column: 4, scope: !7944, inlinedAt: !7701)
!7947 = !DILocation(line: 553, column: 33, scope: !7648, inlinedAt: !7701)
!7948 = !DILocation(line: 325, column: 6, scope: !7949, inlinedAt: !7707)
!7949 = distinct !DILexicalBlock(scope: !7663, file: !5426, line: 325, column: 6)
!7950 = !DILocation(line: 325, column: 6, scope: !7663, inlinedAt: !7707)
!7951 = !DILocation(line: 326, column: 3, scope: !7949, inlinedAt: !7707)
!7952 = !DILocation(line: 332, column: 9, scope: !7663, inlinedAt: !7707)
!7953 = !DILocation(line: 332, column: 15, scope: !7663, inlinedAt: !7707)
!7954 = !DILocation(line: 332, column: 2, scope: !7663, inlinedAt: !7707)
!7955 = !DILocation(line: 336, column: 1, scope: !7663, inlinedAt: !7707)
!7956 = !DILocation(line: 553, column: 5, scope: !7648, inlinedAt: !7701)
!7957 = !DILocation(line: 553, column: 41, scope: !7648, inlinedAt: !7701)
!7958 = !DILocation(line: 554, column: 5, scope: !7648, inlinedAt: !7701)
!7959 = !DILocation(line: 554, column: 12, scope: !7648, inlinedAt: !7701)
!7960 = !DILocation(line: 448, column: 31, scope: !7643, inlinedAt: !7700)
!7961 = !DILocation(line: 448, column: 34, scope: !7643, inlinedAt: !7700)
!7962 = !DILocation(line: 448, column: 14, scope: !7643, inlinedAt: !7700)
!7963 = !DILocation(line: 450, column: 22, scope: !7643, inlinedAt: !7700)
!7964 = !DILocation(line: 450, column: 25, scope: !7643, inlinedAt: !7700)
!7965 = !DILocation(line: 450, column: 30, scope: !7643, inlinedAt: !7700)
!7966 = !DILocation(line: 450, column: 36, scope: !7643, inlinedAt: !7700)
!7967 = !DILocation(line: 450, column: 8, scope: !7643, inlinedAt: !7700)
!7968 = !DILocation(line: 450, column: 6, scope: !7643, inlinedAt: !7700)
!7969 = !DILocation(line: 451, column: 9, scope: !7643, inlinedAt: !7700)
!7970 = !DILocation(line: 552, column: 3, scope: !7648, inlinedAt: !7701)
!7971 = !DILocation(line: 557, column: 19, scope: !7650, inlinedAt: !7701)
!7972 = !DILocation(line: 557, column: 25, scope: !7650, inlinedAt: !7701)
!7973 = !DILocation(line: 557, column: 9, scope: !7650, inlinedAt: !7701)
!7974 = !DILocation(line: 557, column: 2, scope: !7650, inlinedAt: !7701)
!7975 = !DILocation(line: 558, column: 1, scope: !7650, inlinedAt: !7701)
!7976 = !DILocation(line: 2015, column: 15, scope: !7702)
!7977 = !DILocation(line: 2016, column: 8, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 2016, column: 7)
!7979 = !DILocation(line: 2016, column: 7, scope: !7702)
!7980 = !DILocation(line: 2017, column: 4, scope: !7978)
!7981 = !DILocation(line: 2018, column: 10, scope: !7702)
!7982 = !DILocation(line: 2018, column: 22, scope: !7702)
!7983 = !DILocation(line: 2018, column: 27, scope: !7702)
!7984 = !DILocation(line: 2018, column: 35, scope: !7702)
!7985 = !DILocation(line: 2018, column: 3, scope: !7702)
!7986 = !DILocation(line: 2019, column: 7, scope: !7702)
!7987 = !DILocation(line: 2020, column: 3, scope: !7702)
!7988 = !DILocation(line: 2020, column: 18, scope: !7702)
!7989 = !DILocation(line: 2021, column: 3, scope: !7702)
!7990 = !DILocation(line: 2021, column: 18, scope: !7702)
!7991 = !DILocation(line: 2022, column: 20, scope: !7702)
!7992 = !DILocation(line: 2022, column: 26, scope: !7702)
!7993 = !DILocation(line: 2022, column: 3, scope: !7702)
!7994 = !DILocation(line: 2022, column: 18, scope: !7702)
!7995 = !DILocation(line: 2023, column: 20, scope: !7702)
!7996 = !DILocation(line: 2023, column: 26, scope: !7702)
!7997 = !DILocation(line: 2023, column: 3, scope: !7702)
!7998 = !DILocation(line: 2023, column: 18, scope: !7702)
!7999 = !DILocation(line: 2024, column: 20, scope: !7702)
!8000 = !DILocation(line: 2024, column: 26, scope: !7702)
!8001 = !DILocation(line: 2024, column: 3, scope: !7702)
!8002 = !DILocation(line: 2024, column: 18, scope: !7702)
!8003 = !DILocation(line: 2025, column: 3, scope: !7702)
!8004 = !DILocation(line: 2025, column: 18, scope: !7702)
!8005 = !DILocation(line: 2026, column: 20, scope: !7702)
!8006 = !DILocation(line: 2026, column: 26, scope: !7702)
!8007 = !DILocation(line: 2026, column: 50, scope: !7702)
!8008 = !DILocation(line: 2026, column: 3, scope: !7702)
!8009 = !DILocation(line: 2026, column: 18, scope: !7702)
!8010 = !DILocation(line: 2027, column: 20, scope: !7702)
!8011 = !DILocation(line: 2027, column: 26, scope: !7702)
!8012 = !DILocation(line: 2027, column: 3, scope: !7702)
!8013 = !DILocation(line: 2027, column: 18, scope: !7702)
!8014 = !DILocation(line: 2029, column: 3, scope: !7702)
!8015 = !DILocation(line: 2029, column: 10, scope: !7702)
!8016 = !DILocation(line: 2030, column: 12, scope: !7702)
!8017 = !DILocation(line: 2030, column: 16, scope: !7702)
!8018 = !DILocation(line: 2030, column: 3, scope: !7702)
!8019 = !DILocation(line: 2030, column: 10, scope: !7702)
!8020 = !DILocation(line: 2031, column: 12, scope: !7702)
!8021 = !DILocation(line: 2031, column: 3, scope: !7702)
!8022 = !DILocation(line: 2031, column: 10, scope: !7702)
!8023 = !DILocation(line: 2032, column: 2, scope: !7702)
!8024 = !DILocation(line: 2033, column: 7, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2033, column: 7)
!8026 = !DILocation(line: 2033, column: 11, scope: !8025)
!8027 = !DILocation(line: 2033, column: 17, scope: !8025)
!8028 = !DILocation(line: 2033, column: 20, scope: !8025)
!8029 = !DILocation(line: 2033, column: 26, scope: !8025)
!8030 = !DILocation(line: 2033, column: 50, scope: !8025)
!8031 = !DILocation(line: 2033, column: 56, scope: !8025)
!8032 = !DILocation(line: 2034, column: 7, scope: !8025)
!8033 = !DILocation(line: 2034, column: 13, scope: !8025)
!8034 = !DILocation(line: 2033, column: 7, scope: !7654)
!8035 = !DILocation(line: 2035, column: 4, scope: !8025)
!8036 = !DILocation(line: 2037, column: 29, scope: !7654)
!8037 = !DILocation(line: 2037, column: 27, scope: !7654)
!8038 = !DILocation(line: 2037, column: 25, scope: !7654)
!8039 = !DILocation(line: 540, column: 27, scope: !7649, inlinedAt: !7653)
!8040 = !DILocation(line: 540, column: 6, scope: !7649, inlinedAt: !7653)
!8041 = !DILocation(line: 540, column: 6, scope: !7650, inlinedAt: !7653)
!8042 = !DILocation(line: 544, column: 7, scope: !7682, inlinedAt: !7653)
!8043 = !DILocation(line: 544, column: 12, scope: !7682, inlinedAt: !7653)
!8044 = !DILocation(line: 544, column: 7, scope: !7648, inlinedAt: !7653)
!8045 = !DILocation(line: 545, column: 25, scope: !7682, inlinedAt: !7653)
!8046 = !DILocation(line: 545, column: 31, scope: !7682, inlinedAt: !7653)
!8047 = !DILocation(line: 480, column: 33, scope: !7680, inlinedAt: !7681)
!8048 = !DILocation(line: 480, column: 23, scope: !7680, inlinedAt: !7681)
!8049 = !DILocation(line: 481, column: 29, scope: !7680, inlinedAt: !7681)
!8050 = !DILocation(line: 481, column: 35, scope: !7680, inlinedAt: !7681)
!8051 = !DILocation(line: 481, column: 42, scope: !7680, inlinedAt: !7681)
!8052 = !DILocation(line: 474, column: 23, scope: !7675, inlinedAt: !7679)
!8053 = !DILocation(line: 474, column: 29, scope: !7675, inlinedAt: !7679)
!8054 = !DILocation(line: 474, column: 36, scope: !7675, inlinedAt: !7679)
!8055 = !DILocation(line: 474, column: 9, scope: !7675, inlinedAt: !7679)
!8056 = !DILocation(line: 545, column: 4, scope: !7682, inlinedAt: !7653)
!8057 = !DILocation(line: 547, column: 25, scope: !7648, inlinedAt: !7653)
!8058 = !DILocation(line: 348, column: 7, scope: !7788, inlinedAt: !7673)
!8059 = !DILocation(line: 348, column: 6, scope: !7669, inlinedAt: !7673)
!8060 = !DILocation(line: 349, column: 3, scope: !7788, inlinedAt: !7673)
!8061 = !DILocation(line: 351, column: 6, scope: !7792, inlinedAt: !7673)
!8062 = !DILocation(line: 351, column: 11, scope: !7792, inlinedAt: !7673)
!8063 = !DILocation(line: 351, column: 6, scope: !7669, inlinedAt: !7673)
!8064 = !DILocation(line: 352, column: 3, scope: !7792, inlinedAt: !7673)
!8065 = !DILocation(line: 354, column: 32, scope: !7797, inlinedAt: !7673)
!8066 = !DILocation(line: 354, column: 37, scope: !7797, inlinedAt: !7673)
!8067 = !DILocation(line: 354, column: 42, scope: !7797, inlinedAt: !7673)
!8068 = !DILocation(line: 354, column: 45, scope: !7797, inlinedAt: !7673)
!8069 = !DILocation(line: 354, column: 50, scope: !7797, inlinedAt: !7673)
!8070 = !DILocation(line: 354, column: 6, scope: !7669, inlinedAt: !7673)
!8071 = !DILocation(line: 355, column: 3, scope: !7797, inlinedAt: !7673)
!8072 = !DILocation(line: 356, column: 32, scope: !7805, inlinedAt: !7673)
!8073 = !DILocation(line: 356, column: 37, scope: !7805, inlinedAt: !7673)
!8074 = !DILocation(line: 356, column: 43, scope: !7805, inlinedAt: !7673)
!8075 = !DILocation(line: 356, column: 46, scope: !7805, inlinedAt: !7673)
!8076 = !DILocation(line: 356, column: 51, scope: !7805, inlinedAt: !7673)
!8077 = !DILocation(line: 356, column: 6, scope: !7669, inlinedAt: !7673)
!8078 = !DILocation(line: 357, column: 3, scope: !7805, inlinedAt: !7673)
!8079 = !DILocation(line: 358, column: 6, scope: !7813, inlinedAt: !7673)
!8080 = !DILocation(line: 358, column: 11, scope: !7813, inlinedAt: !7673)
!8081 = !DILocation(line: 358, column: 6, scope: !7669, inlinedAt: !7673)
!8082 = !DILocation(line: 358, column: 26, scope: !7813, inlinedAt: !7673)
!8083 = !DILocation(line: 359, column: 6, scope: !7818, inlinedAt: !7673)
!8084 = !DILocation(line: 359, column: 11, scope: !7818, inlinedAt: !7673)
!8085 = !DILocation(line: 359, column: 6, scope: !7669, inlinedAt: !7673)
!8086 = !DILocation(line: 359, column: 26, scope: !7818, inlinedAt: !7673)
!8087 = !DILocation(line: 360, column: 6, scope: !7823, inlinedAt: !7673)
!8088 = !DILocation(line: 360, column: 11, scope: !7823, inlinedAt: !7673)
!8089 = !DILocation(line: 360, column: 6, scope: !7669, inlinedAt: !7673)
!8090 = !DILocation(line: 360, column: 26, scope: !7823, inlinedAt: !7673)
!8091 = !DILocation(line: 361, column: 6, scope: !7828, inlinedAt: !7673)
!8092 = !DILocation(line: 361, column: 11, scope: !7828, inlinedAt: !7673)
!8093 = !DILocation(line: 361, column: 6, scope: !7669, inlinedAt: !7673)
!8094 = !DILocation(line: 361, column: 26, scope: !7828, inlinedAt: !7673)
!8095 = !DILocation(line: 362, column: 6, scope: !7833, inlinedAt: !7673)
!8096 = !DILocation(line: 362, column: 11, scope: !7833, inlinedAt: !7673)
!8097 = !DILocation(line: 362, column: 6, scope: !7669, inlinedAt: !7673)
!8098 = !DILocation(line: 362, column: 26, scope: !7833, inlinedAt: !7673)
!8099 = !DILocation(line: 363, column: 6, scope: !7838, inlinedAt: !7673)
!8100 = !DILocation(line: 363, column: 11, scope: !7838, inlinedAt: !7673)
!8101 = !DILocation(line: 363, column: 6, scope: !7669, inlinedAt: !7673)
!8102 = !DILocation(line: 363, column: 26, scope: !7838, inlinedAt: !7673)
!8103 = !DILocation(line: 364, column: 6, scope: !7843, inlinedAt: !7673)
!8104 = !DILocation(line: 364, column: 11, scope: !7843, inlinedAt: !7673)
!8105 = !DILocation(line: 364, column: 6, scope: !7669, inlinedAt: !7673)
!8106 = !DILocation(line: 364, column: 26, scope: !7843, inlinedAt: !7673)
!8107 = !DILocation(line: 365, column: 6, scope: !7848, inlinedAt: !7673)
!8108 = !DILocation(line: 365, column: 11, scope: !7848, inlinedAt: !7673)
!8109 = !DILocation(line: 365, column: 6, scope: !7669, inlinedAt: !7673)
!8110 = !DILocation(line: 365, column: 26, scope: !7848, inlinedAt: !7673)
!8111 = !DILocation(line: 366, column: 6, scope: !7853, inlinedAt: !7673)
!8112 = !DILocation(line: 366, column: 11, scope: !7853, inlinedAt: !7673)
!8113 = !DILocation(line: 366, column: 6, scope: !7669, inlinedAt: !7673)
!8114 = !DILocation(line: 366, column: 26, scope: !7853, inlinedAt: !7673)
!8115 = !DILocation(line: 367, column: 6, scope: !7858, inlinedAt: !7673)
!8116 = !DILocation(line: 367, column: 11, scope: !7858, inlinedAt: !7673)
!8117 = !DILocation(line: 367, column: 6, scope: !7669, inlinedAt: !7673)
!8118 = !DILocation(line: 367, column: 26, scope: !7858, inlinedAt: !7673)
!8119 = !DILocation(line: 368, column: 6, scope: !7863, inlinedAt: !7673)
!8120 = !DILocation(line: 368, column: 11, scope: !7863, inlinedAt: !7673)
!8121 = !DILocation(line: 368, column: 6, scope: !7669, inlinedAt: !7673)
!8122 = !DILocation(line: 368, column: 26, scope: !7863, inlinedAt: !7673)
!8123 = !DILocation(line: 369, column: 6, scope: !7868, inlinedAt: !7673)
!8124 = !DILocation(line: 369, column: 11, scope: !7868, inlinedAt: !7673)
!8125 = !DILocation(line: 369, column: 6, scope: !7669, inlinedAt: !7673)
!8126 = !DILocation(line: 369, column: 26, scope: !7868, inlinedAt: !7673)
!8127 = !DILocation(line: 370, column: 6, scope: !7873, inlinedAt: !7673)
!8128 = !DILocation(line: 370, column: 11, scope: !7873, inlinedAt: !7673)
!8129 = !DILocation(line: 370, column: 6, scope: !7669, inlinedAt: !7673)
!8130 = !DILocation(line: 370, column: 26, scope: !7873, inlinedAt: !7673)
!8131 = !DILocation(line: 371, column: 6, scope: !7878, inlinedAt: !7673)
!8132 = !DILocation(line: 371, column: 11, scope: !7878, inlinedAt: !7673)
!8133 = !DILocation(line: 371, column: 6, scope: !7669, inlinedAt: !7673)
!8134 = !DILocation(line: 371, column: 26, scope: !7878, inlinedAt: !7673)
!8135 = !DILocation(line: 372, column: 6, scope: !7883, inlinedAt: !7673)
!8136 = !DILocation(line: 372, column: 11, scope: !7883, inlinedAt: !7673)
!8137 = !DILocation(line: 372, column: 6, scope: !7669, inlinedAt: !7673)
!8138 = !DILocation(line: 372, column: 26, scope: !7883, inlinedAt: !7673)
!8139 = !DILocation(line: 373, column: 6, scope: !7888, inlinedAt: !7673)
!8140 = !DILocation(line: 373, column: 11, scope: !7888, inlinedAt: !7673)
!8141 = !DILocation(line: 373, column: 6, scope: !7669, inlinedAt: !7673)
!8142 = !DILocation(line: 373, column: 26, scope: !7888, inlinedAt: !7673)
!8143 = !DILocation(line: 374, column: 6, scope: !7893, inlinedAt: !7673)
!8144 = !DILocation(line: 374, column: 11, scope: !7893, inlinedAt: !7673)
!8145 = !DILocation(line: 374, column: 6, scope: !7669, inlinedAt: !7673)
!8146 = !DILocation(line: 374, column: 26, scope: !7893, inlinedAt: !7673)
!8147 = !DILocation(line: 375, column: 6, scope: !7898, inlinedAt: !7673)
!8148 = !DILocation(line: 375, column: 11, scope: !7898, inlinedAt: !7673)
!8149 = !DILocation(line: 375, column: 6, scope: !7669, inlinedAt: !7673)
!8150 = !DILocation(line: 375, column: 27, scope: !7898, inlinedAt: !7673)
!8151 = !DILocation(line: 376, column: 6, scope: !7903, inlinedAt: !7673)
!8152 = !DILocation(line: 376, column: 11, scope: !7903, inlinedAt: !7673)
!8153 = !DILocation(line: 376, column: 6, scope: !7669, inlinedAt: !7673)
!8154 = !DILocation(line: 376, column: 32, scope: !7903, inlinedAt: !7673)
!8155 = !DILocation(line: 377, column: 6, scope: !7908, inlinedAt: !7673)
!8156 = !DILocation(line: 377, column: 11, scope: !7908, inlinedAt: !7673)
!8157 = !DILocation(line: 377, column: 6, scope: !7669, inlinedAt: !7673)
!8158 = !DILocation(line: 377, column: 32, scope: !7908, inlinedAt: !7673)
!8159 = !DILocation(line: 378, column: 6, scope: !7913, inlinedAt: !7673)
!8160 = !DILocation(line: 378, column: 11, scope: !7913, inlinedAt: !7673)
!8161 = !DILocation(line: 378, column: 6, scope: !7669, inlinedAt: !7673)
!8162 = !DILocation(line: 378, column: 32, scope: !7913, inlinedAt: !7673)
!8163 = !DILocation(line: 379, column: 6, scope: !7918, inlinedAt: !7673)
!8164 = !DILocation(line: 379, column: 11, scope: !7918, inlinedAt: !7673)
!8165 = !DILocation(line: 379, column: 6, scope: !7669, inlinedAt: !7673)
!8166 = !DILocation(line: 379, column: 33, scope: !7918, inlinedAt: !7673)
!8167 = !DILocation(line: 380, column: 6, scope: !7923, inlinedAt: !7673)
!8168 = !DILocation(line: 380, column: 11, scope: !7923, inlinedAt: !7673)
!8169 = !DILocation(line: 380, column: 6, scope: !7669, inlinedAt: !7673)
!8170 = !DILocation(line: 380, column: 33, scope: !7923, inlinedAt: !7673)
!8171 = !DILocation(line: 381, column: 6, scope: !7928, inlinedAt: !7673)
!8172 = !DILocation(line: 381, column: 11, scope: !7928, inlinedAt: !7673)
!8173 = !DILocation(line: 381, column: 6, scope: !7669, inlinedAt: !7673)
!8174 = !DILocation(line: 381, column: 33, scope: !7928, inlinedAt: !7673)
!8175 = !DILocation(line: 382, column: 2, scope: !7933, inlinedAt: !7673)
!8176 = !DILocation(line: 382, column: 2, scope: !7937, inlinedAt: !7673)
!8177 = !DILocation(line: 382, column: 2, scope: !7938, inlinedAt: !7673)
!8178 = !DILocation(line: 386, column: 1, scope: !7669, inlinedAt: !7673)
!8179 = !DILocation(line: 547, column: 9, scope: !7648, inlinedAt: !7653)
!8180 = !DILocation(line: 549, column: 8, scope: !7944, inlinedAt: !7653)
!8181 = !DILocation(line: 549, column: 7, scope: !7648, inlinedAt: !7653)
!8182 = !DILocation(line: 550, column: 4, scope: !7944, inlinedAt: !7653)
!8183 = !DILocation(line: 553, column: 33, scope: !7648, inlinedAt: !7653)
!8184 = !DILocation(line: 325, column: 6, scope: !7949, inlinedAt: !7667)
!8185 = !DILocation(line: 325, column: 6, scope: !7663, inlinedAt: !7667)
!8186 = !DILocation(line: 326, column: 3, scope: !7949, inlinedAt: !7667)
!8187 = !DILocation(line: 332, column: 9, scope: !7663, inlinedAt: !7667)
!8188 = !DILocation(line: 332, column: 15, scope: !7663, inlinedAt: !7667)
!8189 = !DILocation(line: 332, column: 2, scope: !7663, inlinedAt: !7667)
!8190 = !DILocation(line: 336, column: 1, scope: !7663, inlinedAt: !7667)
!8191 = !DILocation(line: 553, column: 5, scope: !7648, inlinedAt: !7653)
!8192 = !DILocation(line: 553, column: 41, scope: !7648, inlinedAt: !7653)
!8193 = !DILocation(line: 554, column: 5, scope: !7648, inlinedAt: !7653)
!8194 = !DILocation(line: 554, column: 12, scope: !7648, inlinedAt: !7653)
!8195 = !DILocation(line: 448, column: 31, scope: !7643, inlinedAt: !7647)
!8196 = !DILocation(line: 448, column: 34, scope: !7643, inlinedAt: !7647)
!8197 = !DILocation(line: 448, column: 14, scope: !7643, inlinedAt: !7647)
!8198 = !DILocation(line: 450, column: 22, scope: !7643, inlinedAt: !7647)
!8199 = !DILocation(line: 450, column: 25, scope: !7643, inlinedAt: !7647)
!8200 = !DILocation(line: 450, column: 30, scope: !7643, inlinedAt: !7647)
!8201 = !DILocation(line: 450, column: 36, scope: !7643, inlinedAt: !7647)
!8202 = !DILocation(line: 450, column: 8, scope: !7643, inlinedAt: !7647)
!8203 = !DILocation(line: 450, column: 6, scope: !7643, inlinedAt: !7647)
!8204 = !DILocation(line: 451, column: 9, scope: !7643, inlinedAt: !7647)
!8205 = !DILocation(line: 552, column: 3, scope: !7648, inlinedAt: !7653)
!8206 = !DILocation(line: 557, column: 19, scope: !7650, inlinedAt: !7653)
!8207 = !DILocation(line: 557, column: 25, scope: !7650, inlinedAt: !7653)
!8208 = !DILocation(line: 557, column: 9, scope: !7650, inlinedAt: !7653)
!8209 = !DILocation(line: 557, column: 2, scope: !7650, inlinedAt: !7653)
!8210 = !DILocation(line: 558, column: 1, scope: !7650, inlinedAt: !7653)
!8211 = !DILocation(line: 2037, column: 15, scope: !7654)
!8212 = !DILocation(line: 2038, column: 8, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2038, column: 7)
!8214 = !DILocation(line: 2038, column: 7, scope: !7654)
!8215 = !DILocation(line: 2039, column: 4, scope: !8213)
!8216 = !DILocation(line: 2040, column: 10, scope: !7654)
!8217 = !DILocation(line: 2040, column: 22, scope: !7654)
!8218 = !DILocation(line: 2040, column: 27, scope: !7654)
!8219 = !DILocation(line: 2040, column: 35, scope: !7654)
!8220 = !DILocation(line: 2040, column: 3, scope: !7654)
!8221 = !DILocation(line: 2041, column: 7, scope: !7654)
!8222 = !DILocation(line: 2042, column: 3, scope: !7654)
!8223 = !DILocation(line: 2042, column: 18, scope: !7654)
!8224 = !DILocation(line: 2043, column: 20, scope: !7654)
!8225 = !DILocation(line: 2043, column: 26, scope: !7654)
!8226 = !DILocation(line: 2043, column: 3, scope: !7654)
!8227 = !DILocation(line: 2043, column: 18, scope: !7654)
!8228 = !DILocation(line: 2044, column: 20, scope: !7654)
!8229 = !DILocation(line: 2044, column: 26, scope: !7654)
!8230 = !DILocation(line: 2044, column: 3, scope: !7654)
!8231 = !DILocation(line: 2044, column: 18, scope: !7654)
!8232 = !DILocation(line: 2045, column: 20, scope: !7654)
!8233 = !DILocation(line: 2045, column: 26, scope: !7654)
!8234 = !DILocation(line: 2045, column: 3, scope: !7654)
!8235 = !DILocation(line: 2045, column: 18, scope: !7654)
!8236 = !DILocation(line: 2047, column: 3, scope: !7654)
!8237 = !DILocation(line: 2047, column: 10, scope: !7654)
!8238 = !DILocation(line: 2048, column: 12, scope: !7654)
!8239 = !DILocation(line: 2048, column: 3, scope: !7654)
!8240 = !DILocation(line: 2048, column: 10, scope: !7654)
!8241 = !DILocation(line: 2051, column: 25, scope: !7630)
!8242 = !DILocation(line: 2051, column: 31, scope: !7630)
!8243 = !DILocation(line: 2051, column: 51, scope: !7630)
!8244 = !DILocation(line: 2051, column: 64, scope: !7630)
!8245 = !DILocation(line: 2052, column: 11, scope: !7630)
!8246 = !DILocation(line: 2052, column: 18, scope: !7630)
!8247 = !DILocation(line: 2052, column: 27, scope: !7630)
!8248 = !DILocation(line: 2051, column: 8, scope: !7630)
!8249 = !DILocation(line: 2051, column: 6, scope: !7630)
!8250 = !DILocation(line: 2053, column: 8, scope: !7630)
!8251 = !DILocation(line: 2053, column: 2, scope: !7630)
!8252 = !DILocation(line: 2054, column: 9, scope: !7630)
!8253 = !DILocation(line: 2054, column: 2, scope: !7630)
!8254 = !DILocation(line: 2055, column: 1, scope: !7630)
!8255 = distinct !DISubprogram(name: "scsi_execute_req", scope: !128, file: !128, line: 456, type: !8256, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8256 = !DISubroutineType(types: !8257)
!8257 = !{!286, !293, !708, !286, !291, !7, !5273, !286, !286, !916}
!8258 = !DILocalVariable(name: "sdev", arg: 1, scope: !8255, file: !128, line: 456, type: !293)
!8259 = !DILocation(line: 456, column: 56, scope: !8255)
!8260 = !DILocalVariable(name: "cmd", arg: 2, scope: !8255, file: !128, line: 457, type: !708)
!8261 = !DILocation(line: 457, column: 23, scope: !8255)
!8262 = !DILocalVariable(name: "data_direction", arg: 3, scope: !8255, file: !128, line: 457, type: !286)
!8263 = !DILocation(line: 457, column: 32, scope: !8255)
!8264 = !DILocalVariable(name: "buffer", arg: 4, scope: !8255, file: !128, line: 457, type: !291)
!8265 = !DILocation(line: 457, column: 54, scope: !8255)
!8266 = !DILocalVariable(name: "bufflen", arg: 5, scope: !8255, file: !128, line: 458, type: !7)
!8267 = !DILocation(line: 458, column: 11, scope: !8255)
!8268 = !DILocalVariable(name: "sshdr", arg: 6, scope: !8255, file: !128, line: 458, type: !5273)
!8269 = !DILocation(line: 458, column: 43, scope: !8255)
!8270 = !DILocalVariable(name: "timeout", arg: 7, scope: !8255, file: !128, line: 458, type: !286)
!8271 = !DILocation(line: 458, column: 54, scope: !8255)
!8272 = !DILocalVariable(name: "retries", arg: 8, scope: !8255, file: !128, line: 459, type: !286)
!8273 = !DILocation(line: 459, column: 6, scope: !8255)
!8274 = !DILocalVariable(name: "resid", arg: 9, scope: !8255, file: !128, line: 459, type: !916)
!8275 = !DILocation(line: 459, column: 20, scope: !8255)
!8276 = !DILocation(line: 461, column: 9, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8255, file: !128, line: 461, column: 9)
!8278 = !DILocation(line: 461, column: 9, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8277, file: !128, line: 461, column: 9)
!8280 = !DILocation(line: 461, column: 2, scope: !8255)
!8281 = distinct !DISubprogram(name: "scsi_mode_sense", scope: !3, file: !3, line: 2076, type: !8282, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{!286, !293, !286, !286, !282, !286, !286, !286, !7633, !5273}
!8284 = !DILocalVariable(name: "sdev", arg: 1, scope: !8281, file: !3, line: 2076, type: !293)
!8285 = !DILocation(line: 2076, column: 37, scope: !8281)
!8286 = !DILocalVariable(name: "dbd", arg: 2, scope: !8281, file: !3, line: 2076, type: !286)
!8287 = !DILocation(line: 2076, column: 47, scope: !8281)
!8288 = !DILocalVariable(name: "modepage", arg: 3, scope: !8281, file: !3, line: 2076, type: !286)
!8289 = !DILocation(line: 2076, column: 56, scope: !8281)
!8290 = !DILocalVariable(name: "buffer", arg: 4, scope: !8281, file: !3, line: 2077, type: !282)
!8291 = !DILocation(line: 2077, column: 20, scope: !8281)
!8292 = !DILocalVariable(name: "len", arg: 5, scope: !8281, file: !3, line: 2077, type: !286)
!8293 = !DILocation(line: 2077, column: 32, scope: !8281)
!8294 = !DILocalVariable(name: "timeout", arg: 6, scope: !8281, file: !3, line: 2077, type: !286)
!8295 = !DILocation(line: 2077, column: 41, scope: !8281)
!8296 = !DILocalVariable(name: "retries", arg: 7, scope: !8281, file: !3, line: 2077, type: !286)
!8297 = !DILocation(line: 2077, column: 54, scope: !8281)
!8298 = !DILocalVariable(name: "data", arg: 8, scope: !8281, file: !3, line: 2078, type: !7633)
!8299 = !DILocation(line: 2078, column: 28, scope: !8281)
!8300 = !DILocalVariable(name: "sshdr", arg: 9, scope: !8281, file: !3, line: 2078, type: !5273)
!8301 = !DILocation(line: 2078, column: 57, scope: !8281)
!8302 = !DILocalVariable(name: "cmd", scope: !8281, file: !3, line: 2080, type: !8303)
!8303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 96, elements: !4810)
!8304 = !DILocation(line: 2080, column: 16, scope: !8281)
!8305 = !DILocalVariable(name: "use_10_for_ms", scope: !8281, file: !3, line: 2081, type: !286)
!8306 = !DILocation(line: 2081, column: 6, scope: !8281)
!8307 = !DILocalVariable(name: "header_length", scope: !8281, file: !3, line: 2082, type: !286)
!8308 = !DILocation(line: 2082, column: 6, scope: !8281)
!8309 = !DILocalVariable(name: "result", scope: !8281, file: !3, line: 2083, type: !286)
!8310 = !DILocation(line: 2083, column: 6, scope: !8281)
!8311 = !DILocalVariable(name: "retry_count", scope: !8281, file: !3, line: 2083, type: !286)
!8312 = !DILocation(line: 2083, column: 14, scope: !8281)
!8313 = !DILocation(line: 2083, column: 28, scope: !8281)
!8314 = !DILocalVariable(name: "my_sshdr", scope: !8281, file: !3, line: 2084, type: !5274)
!8315 = !DILocation(line: 2084, column: 24, scope: !8281)
!8316 = !DILocation(line: 2086, column: 9, scope: !8281)
!8317 = !DILocation(line: 2086, column: 2, scope: !8281)
!8318 = !DILocation(line: 2087, column: 10, scope: !8281)
!8319 = !DILocation(line: 2087, column: 2, scope: !8281)
!8320 = !DILocation(line: 2089, column: 8, scope: !8281)
!8321 = !DILocation(line: 2089, column: 14, scope: !8281)
!8322 = !DILocation(line: 2089, column: 35, scope: !8281)
!8323 = !DILocation(line: 2089, column: 6, scope: !8281)
!8324 = !DILocation(line: 2090, column: 11, scope: !8281)
!8325 = !DILocation(line: 2090, column: 15, scope: !8281)
!8326 = !DILocation(line: 2090, column: 2, scope: !8281)
!8327 = !DILocation(line: 2090, column: 9, scope: !8281)
!8328 = !DILocation(line: 2091, column: 11, scope: !8281)
!8329 = !DILocation(line: 2091, column: 2, scope: !8281)
!8330 = !DILocation(line: 2091, column: 9, scope: !8281)
!8331 = !DILocation(line: 2094, column: 7, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 2094, column: 6)
!8333 = !DILocation(line: 2094, column: 6, scope: !8281)
!8334 = !DILocation(line: 2095, column: 9, scope: !8332)
!8335 = !DILocation(line: 2095, column: 3, scope: !8332)
!8336 = !DILabel(scope: !8281, name: "retry", file: !3, line: 2097)
!8337 = !DILocation(line: 2097, column: 2, scope: !8281)
!8338 = !DILocation(line: 2098, column: 18, scope: !8281)
!8339 = !DILocation(line: 2098, column: 24, scope: !8281)
!8340 = !DILocation(line: 2098, column: 16, scope: !8281)
!8341 = !DILocation(line: 2100, column: 6, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 2100, column: 6)
!8343 = !DILocation(line: 2100, column: 6, scope: !8281)
!8344 = !DILocation(line: 2101, column: 7, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 2101, column: 7)
!8346 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 2100, column: 21)
!8347 = !DILocation(line: 2101, column: 11, scope: !8345)
!8348 = !DILocation(line: 2101, column: 7, scope: !8346)
!8349 = !DILocation(line: 2102, column: 8, scope: !8345)
!8350 = !DILocation(line: 2102, column: 4, scope: !8345)
!8351 = !DILocation(line: 2104, column: 3, scope: !8346)
!8352 = !DILocation(line: 2104, column: 10, scope: !8346)
!8353 = !DILocation(line: 2105, column: 12, scope: !8346)
!8354 = !DILocation(line: 2105, column: 3, scope: !8346)
!8355 = !DILocation(line: 2105, column: 10, scope: !8346)
!8356 = !DILocation(line: 2106, column: 17, scope: !8346)
!8357 = !DILocation(line: 2107, column: 2, scope: !8346)
!8358 = !DILocation(line: 2108, column: 7, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 2108, column: 7)
!8360 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 2107, column: 9)
!8361 = !DILocation(line: 2108, column: 11, scope: !8359)
!8362 = !DILocation(line: 2108, column: 7, scope: !8360)
!8363 = !DILocation(line: 2109, column: 8, scope: !8359)
!8364 = !DILocation(line: 2109, column: 4, scope: !8359)
!8365 = !DILocation(line: 2111, column: 3, scope: !8360)
!8366 = !DILocation(line: 2111, column: 10, scope: !8360)
!8367 = !DILocation(line: 2112, column: 12, scope: !8360)
!8368 = !DILocation(line: 2112, column: 3, scope: !8360)
!8369 = !DILocation(line: 2112, column: 10, scope: !8360)
!8370 = !DILocation(line: 2113, column: 17, scope: !8360)
!8371 = !DILocation(line: 2116, column: 9, scope: !8281)
!8372 = !DILocation(line: 2116, column: 20, scope: !8281)
!8373 = !DILocation(line: 2116, column: 2, scope: !8281)
!8374 = !DILocation(line: 2118, column: 28, scope: !8281)
!8375 = !DILocation(line: 2118, column: 34, scope: !8281)
!8376 = !DILocation(line: 2118, column: 56, scope: !8281)
!8377 = !DILocation(line: 2118, column: 64, scope: !8281)
!8378 = !DILocation(line: 2119, column: 7, scope: !8281)
!8379 = !DILocation(line: 2119, column: 14, scope: !8281)
!8380 = !DILocation(line: 2119, column: 23, scope: !8281)
!8381 = !DILocation(line: 2118, column: 11, scope: !8281)
!8382 = !DILocation(line: 2118, column: 9, scope: !8281)
!8383 = !DILocation(line: 2126, column: 6, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 2126, column: 6)
!8385 = !DILocation(line: 2126, column: 20, scope: !8384)
!8386 = !DILocation(line: 2126, column: 44, scope: !8384)
!8387 = !DILocation(line: 2126, column: 24, scope: !8384)
!8388 = !DILocation(line: 2126, column: 52, scope: !8384)
!8389 = !DILocation(line: 2127, column: 6, scope: !8384)
!8390 = !DILocation(line: 2127, column: 26, scope: !8384)
!8391 = !DILocation(line: 2126, column: 6, scope: !8281)
!8392 = !DILocation(line: 2128, column: 24, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 2128, column: 7)
!8394 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 2127, column: 43)
!8395 = !DILocation(line: 2128, column: 7, scope: !8393)
!8396 = !DILocation(line: 2128, column: 7, scope: !8394)
!8397 = !DILocation(line: 2129, column: 9, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 2129, column: 8)
!8399 = distinct !DILexicalBlock(scope: !8393, file: !3, line: 2128, column: 32)
!8400 = !DILocation(line: 2129, column: 16, scope: !8398)
!8401 = !DILocation(line: 2129, column: 26, scope: !8398)
!8402 = !DILocation(line: 2129, column: 46, scope: !8398)
!8403 = !DILocation(line: 2130, column: 9, scope: !8398)
!8404 = !DILocation(line: 2130, column: 16, scope: !8398)
!8405 = !DILocation(line: 2130, column: 20, scope: !8398)
!8406 = !DILocation(line: 2130, column: 29, scope: !8398)
!8407 = !DILocation(line: 2130, column: 33, scope: !8398)
!8408 = !DILocation(line: 2130, column: 40, scope: !8398)
!8409 = !DILocation(line: 2130, column: 45, scope: !8398)
!8410 = !DILocation(line: 2129, column: 8, scope: !8399)
!8411 = !DILocation(line: 2134, column: 5, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2130, column: 52)
!8413 = !DILocation(line: 2134, column: 11, scope: !8412)
!8414 = !DILocation(line: 2134, column: 25, scope: !8412)
!8415 = !DILocation(line: 2135, column: 5, scope: !8412)
!8416 = !DILocation(line: 2137, column: 3, scope: !8399)
!8417 = !DILocation(line: 2138, column: 2, scope: !8394)
!8418 = !DILocation(line: 2140, column: 26, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 2140, column: 6)
!8420 = !DILocation(line: 2140, column: 6, scope: !8419)
!8421 = !DILocation(line: 2140, column: 6, scope: !8281)
!8422 = !DILocation(line: 2141, column: 7, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 2141, column: 7)
!8424 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 2140, column: 35)
!8425 = !DILocation(line: 0, scope: !8423)
!8426 = !DILocation(line: 2141, column: 7, scope: !8424)
!8427 = !DILocation(line: 2144, column: 18, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 2142, column: 44)
!8429 = !DILocation(line: 2145, column: 4, scope: !8428)
!8430 = !DILocation(line: 2145, column: 10, scope: !8428)
!8431 = !DILocation(line: 2145, column: 17, scope: !8428)
!8432 = !DILocation(line: 2146, column: 4, scope: !8428)
!8433 = !DILocation(line: 2146, column: 10, scope: !8428)
!8434 = !DILocation(line: 2146, column: 22, scope: !8428)
!8435 = !DILocation(line: 2147, column: 4, scope: !8428)
!8436 = !DILocation(line: 2147, column: 10, scope: !8428)
!8437 = !DILocation(line: 2147, column: 26, scope: !8428)
!8438 = !DILocation(line: 2148, column: 4, scope: !8428)
!8439 = !DILocation(line: 2148, column: 10, scope: !8428)
!8440 = !DILocation(line: 2148, column: 18, scope: !8428)
!8441 = !DILocation(line: 2149, column: 4, scope: !8428)
!8442 = !DILocation(line: 2149, column: 10, scope: !8428)
!8443 = !DILocation(line: 2149, column: 34, scope: !8428)
!8444 = !DILocation(line: 2150, column: 3, scope: !8428)
!8445 = !DILocation(line: 2150, column: 14, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 2150, column: 14)
!8447 = !DILocation(line: 2150, column: 14, scope: !8423)
!8448 = !DILocation(line: 2151, column: 19, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2150, column: 29)
!8450 = !DILocation(line: 2151, column: 28, scope: !8449)
!8451 = !DILocation(line: 2151, column: 35, scope: !8449)
!8452 = !DILocation(line: 2151, column: 33, scope: !8449)
!8453 = !DILocation(line: 2151, column: 45, scope: !8449)
!8454 = !DILocation(line: 2151, column: 4, scope: !8449)
!8455 = !DILocation(line: 2151, column: 10, scope: !8449)
!8456 = !DILocation(line: 2151, column: 17, scope: !8449)
!8457 = !DILocation(line: 2152, column: 24, scope: !8449)
!8458 = !DILocation(line: 2152, column: 4, scope: !8449)
!8459 = !DILocation(line: 2152, column: 10, scope: !8449)
!8460 = !DILocation(line: 2152, column: 22, scope: !8449)
!8461 = !DILocation(line: 2153, column: 28, scope: !8449)
!8462 = !DILocation(line: 2153, column: 4, scope: !8449)
!8463 = !DILocation(line: 2153, column: 10, scope: !8449)
!8464 = !DILocation(line: 2153, column: 26, scope: !8449)
!8465 = !DILocation(line: 2154, column: 20, scope: !8449)
!8466 = !DILocation(line: 2154, column: 30, scope: !8449)
!8467 = !DILocation(line: 2154, column: 4, scope: !8449)
!8468 = !DILocation(line: 2154, column: 10, scope: !8449)
!8469 = !DILocation(line: 2154, column: 18, scope: !8449)
!8470 = !DILocation(line: 2155, column: 36, scope: !8449)
!8471 = !DILocation(line: 2155, column: 45, scope: !8449)
!8472 = !DILocation(line: 2156, column: 7, scope: !8449)
!8473 = !DILocation(line: 2156, column: 5, scope: !8449)
!8474 = !DILocation(line: 2155, column: 4, scope: !8449)
!8475 = !DILocation(line: 2155, column: 10, scope: !8449)
!8476 = !DILocation(line: 2155, column: 34, scope: !8449)
!8477 = !DILocation(line: 2157, column: 3, scope: !8449)
!8478 = !DILocation(line: 2158, column: 19, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2157, column: 10)
!8480 = !DILocation(line: 2158, column: 29, scope: !8479)
!8481 = !DILocation(line: 2158, column: 4, scope: !8479)
!8482 = !DILocation(line: 2158, column: 10, scope: !8479)
!8483 = !DILocation(line: 2158, column: 17, scope: !8479)
!8484 = !DILocation(line: 2159, column: 24, scope: !8479)
!8485 = !DILocation(line: 2159, column: 4, scope: !8479)
!8486 = !DILocation(line: 2159, column: 10, scope: !8479)
!8487 = !DILocation(line: 2159, column: 22, scope: !8479)
!8488 = !DILocation(line: 2160, column: 28, scope: !8479)
!8489 = !DILocation(line: 2160, column: 4, scope: !8479)
!8490 = !DILocation(line: 2160, column: 10, scope: !8479)
!8491 = !DILocation(line: 2160, column: 26, scope: !8479)
!8492 = !DILocation(line: 2161, column: 36, scope: !8479)
!8493 = !DILocation(line: 2161, column: 4, scope: !8479)
!8494 = !DILocation(line: 2161, column: 10, scope: !8479)
!8495 = !DILocation(line: 2161, column: 34, scope: !8479)
!8496 = !DILocation(line: 2163, column: 25, scope: !8424)
!8497 = !DILocation(line: 2163, column: 3, scope: !8424)
!8498 = !DILocation(line: 2163, column: 9, scope: !8424)
!8499 = !DILocation(line: 2163, column: 23, scope: !8424)
!8500 = !DILocation(line: 2164, column: 2, scope: !8424)
!8501 = !DILocation(line: 2164, column: 14, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 2164, column: 13)
!8503 = !DILocation(line: 2164, column: 34, scope: !8502)
!8504 = !DILocation(line: 2164, column: 54, scope: !8502)
!8505 = !DILocation(line: 2165, column: 23, scope: !8502)
!8506 = !DILocation(line: 2165, column: 6, scope: !8502)
!8507 = !DILocation(line: 2165, column: 30, scope: !8502)
!8508 = !DILocation(line: 2166, column: 6, scope: !8502)
!8509 = !DILocation(line: 2166, column: 13, scope: !8502)
!8510 = !DILocation(line: 2166, column: 23, scope: !8502)
!8511 = !DILocation(line: 2166, column: 41, scope: !8502)
!8512 = !DILocation(line: 2166, column: 44, scope: !8502)
!8513 = !DILocation(line: 2164, column: 13, scope: !8419)
!8514 = !DILocation(line: 2167, column: 14, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 2166, column: 57)
!8516 = !DILocation(line: 2168, column: 3, scope: !8515)
!8517 = !DILocation(line: 2171, column: 9, scope: !8281)
!8518 = !DILocation(line: 2171, column: 2, scope: !8281)
!8519 = distinct !DISubprogram(name: "scsi_status_is_good", scope: !8520, file: !8520, line: 41, type: !1232, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8520 = !DIFile(filename: "./include/scsi/scsi.h", directory: "/home/lizy2001/genbc/linux")
!8521 = !DILocalVariable(name: "status", arg: 1, scope: !8519, file: !8520, line: 41, type: !286)
!8522 = !DILocation(line: 41, column: 43, scope: !8519)
!8523 = !DILocation(line: 48, column: 9, scope: !8519)
!8524 = !DILocation(line: 49, column: 11, scope: !8519)
!8525 = !DILocation(line: 49, column: 18, scope: !8519)
!8526 = !DILocation(line: 49, column: 36, scope: !8519)
!8527 = !DILocation(line: 50, column: 4, scope: !8519)
!8528 = !DILocation(line: 50, column: 11, scope: !8519)
!8529 = !DILocation(line: 50, column: 38, scope: !8519)
!8530 = !DILocation(line: 52, column: 4, scope: !8519)
!8531 = !DILocation(line: 52, column: 11, scope: !8519)
!8532 = !DILocation(line: 52, column: 37, scope: !8519)
!8533 = !DILocation(line: 53, column: 4, scope: !8519)
!8534 = !DILocation(line: 53, column: 11, scope: !8519)
!8535 = !DILocation(line: 53, column: 51, scope: !8519)
!8536 = !DILocation(line: 55, column: 4, scope: !8519)
!8537 = !DILocation(line: 55, column: 11, scope: !8519)
!8538 = !DILocation(line: 49, column: 2, scope: !8519)
!8539 = distinct !DISubprogram(name: "scsi_sense_valid", scope: !5275, file: !5275, line: 61, type: !8540, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8540 = !DISubroutineType(types: !8541)
!8541 = !{!793, !8542}
!8542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8543, size: 64)
!8543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5274)
!8544 = !DILocalVariable(name: "sshdr", arg: 1, scope: !8539, file: !5275, line: 61, type: !8542)
!8545 = !DILocation(line: 61, column: 66, scope: !8539)
!8546 = !DILocation(line: 63, column: 7, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8539, file: !5275, line: 63, column: 6)
!8548 = !DILocation(line: 63, column: 6, scope: !8539)
!8549 = !DILocation(line: 64, column: 3, scope: !8547)
!8550 = !DILocation(line: 66, column: 10, scope: !8539)
!8551 = !DILocation(line: 66, column: 17, scope: !8539)
!8552 = !DILocation(line: 66, column: 31, scope: !8539)
!8553 = !DILocation(line: 66, column: 39, scope: !8539)
!8554 = !DILocation(line: 66, column: 2, scope: !8539)
!8555 = !DILocation(line: 67, column: 1, scope: !8539)
!8556 = distinct !DISubprogram(name: "scsi_test_unit_ready", scope: !3, file: !3, line: 2186, type: !8557, scopeLine: 2188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8557 = !DISubroutineType(types: !8558)
!8558 = !{!286, !293, !286, !286, !5273}
!8559 = !DILocalVariable(name: "sdev", arg: 1, scope: !8556, file: !3, line: 2186, type: !293)
!8560 = !DILocation(line: 2186, column: 42, scope: !8556)
!8561 = !DILocalVariable(name: "timeout", arg: 2, scope: !8556, file: !3, line: 2186, type: !286)
!8562 = !DILocation(line: 2186, column: 52, scope: !8556)
!8563 = !DILocalVariable(name: "retries", arg: 3, scope: !8556, file: !3, line: 2186, type: !286)
!8564 = !DILocation(line: 2186, column: 65, scope: !8556)
!8565 = !DILocalVariable(name: "sshdr", arg: 4, scope: !8556, file: !3, line: 2187, type: !5273)
!8566 = !DILocation(line: 2187, column: 31, scope: !8556)
!8567 = !DILocalVariable(name: "cmd", scope: !8556, file: !3, line: 2189, type: !1396)
!8568 = !DILocation(line: 2189, column: 7, scope: !8556)
!8569 = !DILocalVariable(name: "result", scope: !8556, file: !3, line: 2192, type: !286)
!8570 = !DILocation(line: 2192, column: 6, scope: !8556)
!8571 = !DILocation(line: 2195, column: 2, scope: !8556)
!8572 = !DILocation(line: 2196, column: 29, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 2195, column: 5)
!8574 = !DILocation(line: 2196, column: 35, scope: !8573)
!8575 = !DILocation(line: 2196, column: 59, scope: !8573)
!8576 = !DILocation(line: 2197, column: 8, scope: !8573)
!8577 = !DILocation(line: 2196, column: 12, scope: !8573)
!8578 = !DILocation(line: 2196, column: 10, scope: !8573)
!8579 = !DILocation(line: 2198, column: 7, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 2198, column: 7)
!8581 = !DILocation(line: 2198, column: 13, scope: !8580)
!8582 = !DILocation(line: 2198, column: 23, scope: !8580)
!8583 = !DILocation(line: 2198, column: 43, scope: !8580)
!8584 = !DILocation(line: 2198, column: 26, scope: !8580)
!8585 = !DILocation(line: 2198, column: 50, scope: !8580)
!8586 = !DILocation(line: 2199, column: 7, scope: !8580)
!8587 = !DILocation(line: 2199, column: 14, scope: !8580)
!8588 = !DILocation(line: 2199, column: 24, scope: !8580)
!8589 = !DILocation(line: 2198, column: 7, scope: !8573)
!8590 = !DILocation(line: 2200, column: 4, scope: !8580)
!8591 = !DILocation(line: 2200, column: 10, scope: !8580)
!8592 = !DILocation(line: 2200, column: 18, scope: !8580)
!8593 = !DILocation(line: 2201, column: 2, scope: !8573)
!8594 = !DILocation(line: 2201, column: 28, scope: !8556)
!8595 = !DILocation(line: 2201, column: 11, scope: !8556)
!8596 = !DILocation(line: 2201, column: 35, scope: !8556)
!8597 = !DILocation(line: 2202, column: 4, scope: !8556)
!8598 = !DILocation(line: 2202, column: 11, scope: !8556)
!8599 = !DILocation(line: 2202, column: 21, scope: !8556)
!8600 = !DILocation(line: 2202, column: 39, scope: !8556)
!8601 = !DILocation(line: 2202, column: 42, scope: !8556)
!8602 = !DILocation(line: 0, scope: !8556)
!8603 = distinct !{!8603, !8571, !8604}
!8604 = !DILocation(line: 2202, column: 51, scope: !8556)
!8605 = !DILocation(line: 2204, column: 9, scope: !8556)
!8606 = !DILocation(line: 2204, column: 2, scope: !8556)
!8607 = distinct !DISubprogram(name: "scsi_device_set_state", scope: !3, file: !3, line: 2217, type: !8608, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{!286, !293, !135}
!8610 = !DILocalVariable(name: "sdev", arg: 1, scope: !8607, file: !3, line: 2217, type: !293)
!8611 = !DILocation(line: 2217, column: 43, scope: !8607)
!8612 = !DILocalVariable(name: "state", arg: 2, scope: !8607, file: !3, line: 2217, type: !135)
!8613 = !DILocation(line: 2217, column: 72, scope: !8607)
!8614 = !DILocalVariable(name: "oldstate", scope: !8607, file: !3, line: 2219, type: !135)
!8615 = !DILocation(line: 2219, column: 25, scope: !8607)
!8616 = !DILocation(line: 2219, column: 36, scope: !8607)
!8617 = !DILocation(line: 2219, column: 42, scope: !8607)
!8618 = !DILocation(line: 2221, column: 6, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 2221, column: 6)
!8620 = !DILocation(line: 2221, column: 15, scope: !8619)
!8621 = !DILocation(line: 2221, column: 12, scope: !8619)
!8622 = !DILocation(line: 2221, column: 6, scope: !8607)
!8623 = !DILocation(line: 2222, column: 3, scope: !8619)
!8624 = !DILocation(line: 2224, column: 10, scope: !8607)
!8625 = !DILocation(line: 2224, column: 2, scope: !8607)
!8626 = !DILocation(line: 2226, column: 11, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 2224, column: 17)
!8628 = !DILocation(line: 2226, column: 3, scope: !8627)
!8629 = !DILocation(line: 2228, column: 4, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2226, column: 21)
!8631 = !DILocation(line: 2230, column: 4, scope: !8630)
!8632 = !DILocation(line: 2232, column: 3, scope: !8627)
!8633 = !DILocation(line: 2235, column: 11, scope: !8627)
!8634 = !DILocation(line: 2235, column: 3, scope: !8627)
!8635 = !DILocation(line: 2241, column: 4, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2235, column: 21)
!8637 = !DILocation(line: 2243, column: 4, scope: !8636)
!8638 = !DILocation(line: 2245, column: 3, scope: !8627)
!8639 = !DILocation(line: 2248, column: 11, scope: !8627)
!8640 = !DILocation(line: 2248, column: 3, scope: !8627)
!8641 = !DILocation(line: 2252, column: 4, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2248, column: 21)
!8643 = !DILocation(line: 2254, column: 4, scope: !8642)
!8644 = !DILocation(line: 2256, column: 3, scope: !8627)
!8645 = !DILocation(line: 2260, column: 11, scope: !8627)
!8646 = !DILocation(line: 2260, column: 3, scope: !8627)
!8647 = !DILocation(line: 2265, column: 4, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2260, column: 21)
!8649 = !DILocation(line: 2267, column: 4, scope: !8648)
!8650 = !DILocation(line: 2269, column: 3, scope: !8627)
!8651 = !DILocation(line: 2272, column: 11, scope: !8627)
!8652 = !DILocation(line: 2272, column: 3, scope: !8627)
!8653 = !DILocation(line: 2277, column: 4, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2272, column: 21)
!8655 = !DILocation(line: 2279, column: 4, scope: !8654)
!8656 = !DILocation(line: 2281, column: 3, scope: !8627)
!8657 = !DILocation(line: 2284, column: 11, scope: !8627)
!8658 = !DILocation(line: 2284, column: 3, scope: !8627)
!8659 = !DILocation(line: 2286, column: 4, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2284, column: 21)
!8661 = !DILocation(line: 2288, column: 4, scope: !8660)
!8662 = !DILocation(line: 2290, column: 3, scope: !8627)
!8663 = !DILocation(line: 2293, column: 11, scope: !8627)
!8664 = !DILocation(line: 2293, column: 3, scope: !8627)
!8665 = !DILocation(line: 2299, column: 4, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2293, column: 21)
!8667 = !DILocation(line: 2301, column: 4, scope: !8666)
!8668 = !DILocation(line: 2303, column: 3, scope: !8627)
!8669 = !DILocation(line: 2306, column: 11, scope: !8627)
!8670 = !DILocation(line: 2306, column: 3, scope: !8627)
!8671 = !DILocation(line: 2314, column: 4, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2306, column: 21)
!8673 = !DILocation(line: 2316, column: 4, scope: !8672)
!8674 = !DILocation(line: 2318, column: 3, scope: !8627)
!8675 = !DILocation(line: 2321, column: 2, scope: !8607)
!8676 = !DILocation(line: 2321, column: 8, scope: !8607)
!8677 = !DILocation(line: 2321, column: 24, scope: !8607)
!8678 = !DILocation(line: 2322, column: 21, scope: !8607)
!8679 = !DILocation(line: 2322, column: 2, scope: !8607)
!8680 = !DILocation(line: 2322, column: 8, scope: !8607)
!8681 = !DILocation(line: 2322, column: 19, scope: !8607)
!8682 = !DILocation(line: 2323, column: 2, scope: !8607)
!8683 = !DILabel(scope: !8607, name: "illegal", file: !3, line: 2325)
!8684 = !DILocation(line: 2325, column: 2, scope: !8607)
!8685 = !DILocation(line: 2326, column: 2, scope: !8607)
!8686 = !DILocation(line: 2326, column: 2, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 2326, column: 2)
!8688 = !DILocation(line: 2332, column: 2, scope: !8607)
!8689 = !DILocation(line: 2333, column: 1, scope: !8607)
!8690 = distinct !DISubprogram(name: "scsi_evt_thread", scope: !3, file: !3, line: 2391, type: !2323, scopeLine: 2392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8691 = !DILocation(line: 407, column: 64, scope: !5873, inlinedAt: !8692)
!8692 = distinct !DILocation(line: 2410, column: 3, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 2403, column: 12)
!8694 = !DILocation(line: 407, column: 84, scope: !5873, inlinedAt: !8692)
!8695 = !DILocation(line: 327, column: 67, scope: !5884, inlinedAt: !8696)
!8696 = distinct !DILocation(line: 2408, column: 3, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 2408, column: 3)
!8698 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 2408, column: 3)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 2408, column: 3)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 2408, column: 3)
!8701 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 2408, column: 3)
!8702 = !DILocalVariable(name: "work", arg: 1, scope: !8690, file: !3, line: 2391, type: !2325)
!8703 = !DILocation(line: 2391, column: 42, scope: !8690)
!8704 = !DILocalVariable(name: "sdev", scope: !8690, file: !3, line: 2393, type: !293)
!8705 = !DILocation(line: 2393, column: 22, scope: !8690)
!8706 = !DILocalVariable(name: "evt_type", scope: !8690, file: !3, line: 2394, type: !244)
!8707 = !DILocation(line: 2394, column: 25, scope: !8690)
!8708 = !DILocalVariable(name: "event_list", scope: !8690, file: !3, line: 2395, type: !301)
!8709 = !DILocation(line: 2395, column: 2, scope: !8690)
!8710 = !DILocalVariable(name: "__mptr", scope: !8711, file: !3, line: 2397, type: !291)
!8711 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 2397, column: 9)
!8712 = !DILocation(line: 2397, column: 9, scope: !8711)
!8713 = !DILocation(line: 2397, column: 9, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 2397, column: 9)
!8715 = !DILocation(line: 2397, column: 7, scope: !8690)
!8716 = !DILocation(line: 2399, column: 16, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 2399, column: 2)
!8718 = !DILocation(line: 2399, column: 7, scope: !8717)
!8719 = !DILocation(line: 2399, column: 34, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 2399, column: 2)
!8721 = !DILocation(line: 2399, column: 43, scope: !8720)
!8722 = !DILocation(line: 2399, column: 2, scope: !8717)
!8723 = !DILocation(line: 2400, column: 26, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 2400, column: 7)
!8725 = !DILocation(line: 2400, column: 36, scope: !8724)
!8726 = !DILocation(line: 2400, column: 42, scope: !8724)
!8727 = !DILocation(line: 2400, column: 7, scope: !8724)
!8728 = !DILocation(line: 2400, column: 7, scope: !8720)
!8729 = !DILocation(line: 2401, column: 25, scope: !8724)
!8730 = !DILocation(line: 2401, column: 31, scope: !8724)
!8731 = !DILocation(line: 2401, column: 4, scope: !8724)
!8732 = !DILocation(line: 2400, column: 56, scope: !8724)
!8733 = !DILocation(line: 2399, column: 69, scope: !8720)
!8734 = !DILocation(line: 2399, column: 2, scope: !8720)
!8735 = distinct !{!8735, !8722, !8736}
!8736 = !DILocation(line: 2401, column: 51, scope: !8717)
!8737 = !DILocation(line: 2403, column: 2, scope: !8690)
!8738 = !DILocalVariable(name: "evt", scope: !8693, file: !3, line: 2404, type: !5444)
!8739 = !DILocation(line: 2404, column: 22, scope: !8693)
!8740 = !DILocalVariable(name: "this", scope: !8693, file: !3, line: 2405, type: !305)
!8741 = !DILocation(line: 2405, column: 21, scope: !8693)
!8742 = !DILocalVariable(name: "tmp", scope: !8693, file: !3, line: 2405, type: !305)
!8743 = !DILocation(line: 2405, column: 28, scope: !8693)
!8744 = !DILocalVariable(name: "flags", scope: !8693, file: !3, line: 2406, type: !356)
!8745 = !DILocation(line: 2406, column: 17, scope: !8693)
!8746 = !DILocation(line: 2408, column: 3, scope: !8693)
!8747 = !DILocation(line: 2408, column: 3, scope: !8701)
!8748 = !DILocalVariable(name: "__dummy", scope: !8749, file: !3, line: 2408, type: !356)
!8749 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 2408, column: 3)
!8750 = !DILocation(line: 2408, column: 3, scope: !8749)
!8751 = !DILocalVariable(name: "__dummy2", scope: !8749, file: !3, line: 2408, type: !356)
!8752 = !DILocation(line: 2408, column: 3, scope: !8700)
!8753 = !DILocation(line: 2408, column: 3, scope: !8699)
!8754 = !DILocation(line: 2408, column: 3, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 2408, column: 3)
!8756 = !DILocalVariable(name: "__dummy", scope: !8757, file: !3, line: 2408, type: !356)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 2408, column: 3)
!8758 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 2408, column: 3)
!8759 = !DILocation(line: 2408, column: 3, scope: !8757)
!8760 = !DILocalVariable(name: "__dummy2", scope: !8757, file: !3, line: 2408, type: !356)
!8761 = !DILocation(line: 2408, column: 3, scope: !8758)
!8762 = !DILocation(line: 2408, column: 3, scope: !8698)
!8763 = !{i32 -2140904499}
!8764 = !DILocation(line: 2408, column: 3, scope: !8697)
!8765 = !DILocation(line: 329, column: 10, scope: !5884, inlinedAt: !8696)
!8766 = !DILocation(line: 329, column: 16, scope: !5884, inlinedAt: !8696)
!8767 = !DILocation(line: 2409, column: 21, scope: !8693)
!8768 = !DILocation(line: 2409, column: 27, scope: !8693)
!8769 = !DILocation(line: 2409, column: 3, scope: !8693)
!8770 = !DILocation(line: 2410, column: 27, scope: !8693)
!8771 = !DILocation(line: 2410, column: 33, scope: !8693)
!8772 = !DILocation(line: 2410, column: 44, scope: !8693)
!8773 = !DILocation(line: 409, column: 2, scope: !5944, inlinedAt: !8692)
!8774 = !DILocation(line: 409, column: 2, scope: !5949, inlinedAt: !8692)
!8775 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !8692)
!8776 = !DILocation(line: 409, column: 2, scope: !5957, inlinedAt: !8692)
!8777 = !DILocation(line: 409, column: 2, scope: !5960, inlinedAt: !8692)
!8778 = !DILocation(line: 2412, column: 7, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 2412, column: 7)
!8780 = !DILocation(line: 2412, column: 7, scope: !8693)
!8781 = !DILocation(line: 2413, column: 4, scope: !8779)
!8782 = !DILocation(line: 2415, column: 3, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 2415, column: 3)
!8784 = !DILocation(line: 2415, column: 3, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 2415, column: 3)
!8786 = !DILocalVariable(name: "__mptr", scope: !8787, file: !3, line: 2416, type: !291)
!8787 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 2416, column: 10)
!8788 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 2415, column: 46)
!8789 = !DILocation(line: 2416, column: 10, scope: !8787)
!8790 = !DILocation(line: 2416, column: 10, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 2416, column: 10)
!8792 = !DILocation(line: 2416, column: 8, scope: !8788)
!8793 = !DILocation(line: 2417, column: 14, scope: !8788)
!8794 = !DILocation(line: 2417, column: 19, scope: !8788)
!8795 = !DILocation(line: 2417, column: 4, scope: !8788)
!8796 = !DILocation(line: 2418, column: 18, scope: !8788)
!8797 = !DILocation(line: 2418, column: 24, scope: !8788)
!8798 = !DILocation(line: 2418, column: 4, scope: !8788)
!8799 = !DILocation(line: 2419, column: 10, scope: !8788)
!8800 = !DILocation(line: 2419, column: 4, scope: !8788)
!8801 = !DILocation(line: 2420, column: 3, scope: !8788)
!8802 = distinct !{!8802, !8782, !8803}
!8803 = !DILocation(line: 2420, column: 3, scope: !8783)
!8804 = distinct !{!8804, !8737, !8805}
!8805 = !DILocation(line: 2421, column: 2, scope: !8690)
!8806 = !DILocation(line: 2422, column: 1, scope: !8690)
!8807 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !8808, file: !8808, line: 81, type: !8809, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8808 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8809 = !DISubroutineType(types: !8810)
!8810 = !{!793, !197, !7223}
!8811 = !DILocalVariable(name: "nr", arg: 1, scope: !8812, file: !7149, line: 160, type: !197)
!8812 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !7149, file: !7149, line: 160, type: !8809, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8813 = !DILocation(line: 160, column: 30, scope: !8812, inlinedAt: !8814)
!8814 = distinct !DILocation(line: 84, column: 9, scope: !8807)
!8815 = !DILocalVariable(name: "addr", arg: 2, scope: !8812, file: !7149, line: 160, type: !7223)
!8816 = !DILocation(line: 160, column: 58, scope: !8812, inlinedAt: !8814)
!8817 = !DILocalVariable(name: "c", scope: !8818, file: !7149, line: 162, type: !793)
!8818 = distinct !DILexicalBlock(scope: !8812, file: !7149, line: 162, column: 9)
!8819 = !DILocation(line: 162, column: 9, scope: !8818, inlinedAt: !8814)
!8820 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !8821)
!8821 = distinct !DILocation(line: 83, column: 2, scope: !8807)
!8822 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !8821)
!8823 = !DILocalVariable(name: "nr", arg: 1, scope: !8807, file: !8808, line: 81, type: !197)
!8824 = !DILocation(line: 81, column: 44, scope: !8807)
!8825 = !DILocalVariable(name: "addr", arg: 2, scope: !8807, file: !8808, line: 81, type: !7223)
!8826 = !DILocation(line: 81, column: 72, scope: !8807)
!8827 = !DILocation(line: 83, column: 31, scope: !8807)
!8828 = !DILocation(line: 83, column: 38, scope: !8807)
!8829 = !DILocation(line: 83, column: 36, scope: !8807)
!8830 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !8821)
!8831 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !8821)
!8832 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !8821)
!8833 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !8821)
!8834 = !DILocation(line: 84, column: 33, scope: !8807)
!8835 = !DILocation(line: 84, column: 37, scope: !8807)
!8836 = !{i32 -2146892350, i32 -2146892254}
!8837 = !DILocation(line: 84, column: 2, scope: !8807)
!8838 = distinct !DISubprogram(name: "sdev_evt_send_simple", scope: !3, file: !3, line: 2496, type: !8839, scopeLine: 2498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8839 = !DISubroutineType(types: !8840)
!8840 = !{null, !293, !244, !605}
!8841 = !DILocalVariable(name: "sdev", arg: 1, scope: !8838, file: !3, line: 2496, type: !293)
!8842 = !DILocation(line: 2496, column: 47, scope: !8838)
!8843 = !DILocalVariable(name: "evt_type", arg: 2, scope: !8838, file: !3, line: 2497, type: !244)
!8844 = !DILocation(line: 2497, column: 29, scope: !8838)
!8845 = !DILocalVariable(name: "gfpflags", arg: 3, scope: !8838, file: !3, line: 2497, type: !605)
!8846 = !DILocation(line: 2497, column: 45, scope: !8838)
!8847 = !DILocalVariable(name: "evt", scope: !8838, file: !3, line: 2499, type: !5444)
!8848 = !DILocation(line: 2499, column: 21, scope: !8838)
!8849 = !DILocation(line: 2499, column: 42, scope: !8838)
!8850 = !DILocation(line: 2499, column: 52, scope: !8838)
!8851 = !DILocation(line: 2499, column: 27, scope: !8838)
!8852 = !DILocation(line: 2500, column: 7, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 2500, column: 6)
!8854 = !DILocation(line: 2500, column: 6, scope: !8838)
!8855 = !DILocation(line: 2501, column: 3, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 2500, column: 12)
!8857 = !DILocation(line: 2503, column: 3, scope: !8856)
!8858 = !DILocation(line: 2506, column: 16, scope: !8838)
!8859 = !DILocation(line: 2506, column: 22, scope: !8838)
!8860 = !DILocation(line: 2506, column: 2, scope: !8838)
!8861 = !DILocation(line: 2507, column: 1, scope: !8838)
!8862 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !8863, file: !8863, line: 666, type: !8864, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8863 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!8864 = !DISubroutineType(types: !8865)
!8865 = !{!356}
!8866 = !DILocalVariable(name: "f", scope: !8862, file: !8863, line: 668, type: !356)
!8867 = !DILocation(line: 668, column: 16, scope: !8862)
!8868 = !DILocation(line: 670, column: 6, scope: !8862)
!8869 = !DILocation(line: 670, column: 4, scope: !8862)
!8870 = !DILocation(line: 671, column: 2, scope: !8862)
!8871 = !DILocation(line: 672, column: 9, scope: !8862)
!8872 = !DILocation(line: 672, column: 2, scope: !8862)
!8873 = distinct !DISubprogram(name: "list_splice_init", scope: !7203, file: !7203, line: 478, type: !8874, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8874 = !DISubroutineType(types: !8875)
!8875 = !{null, !305, !305}
!8876 = !DILocalVariable(name: "list", arg: 1, scope: !8873, file: !7203, line: 478, type: !305)
!8877 = !DILocation(line: 478, column: 55, scope: !8873)
!8878 = !DILocalVariable(name: "head", arg: 2, scope: !8873, file: !7203, line: 479, type: !305)
!8879 = !DILocation(line: 479, column: 27, scope: !8873)
!8880 = !DILocation(line: 481, column: 18, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8873, file: !7203, line: 481, column: 6)
!8882 = !DILocation(line: 481, column: 7, scope: !8881)
!8883 = !DILocation(line: 481, column: 6, scope: !8873)
!8884 = !DILocation(line: 482, column: 17, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8881, file: !7203, line: 481, column: 25)
!8886 = !DILocation(line: 482, column: 23, scope: !8885)
!8887 = !DILocation(line: 482, column: 29, scope: !8885)
!8888 = !DILocation(line: 482, column: 35, scope: !8885)
!8889 = !DILocation(line: 482, column: 3, scope: !8885)
!8890 = !DILocation(line: 483, column: 18, scope: !8885)
!8891 = !DILocation(line: 483, column: 3, scope: !8885)
!8892 = !DILocation(line: 484, column: 2, scope: !8885)
!8893 = !DILocation(line: 485, column: 1, scope: !8873)
!8894 = distinct !DISubprogram(name: "list_empty", scope: !7203, file: !7203, line: 280, type: !8895, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8895 = !DISubroutineType(types: !8896)
!8896 = !{!286, !8897}
!8897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8898, size: 64)
!8898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!8899 = !DILocalVariable(name: "head", arg: 1, scope: !8894, file: !7203, line: 280, type: !8897)
!8900 = !DILocation(line: 280, column: 54, scope: !8894)
!8901 = !DILocation(line: 282, column: 9, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8894, file: !7203, line: 282, column: 9)
!8903 = !DILocation(line: 282, column: 9, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8902, file: !7203, line: 282, column: 9)
!8905 = !DILocation(line: 282, column: 34, scope: !8894)
!8906 = !DILocation(line: 282, column: 31, scope: !8894)
!8907 = !DILocation(line: 282, column: 2, scope: !8894)
!8908 = distinct !DISubprogram(name: "list_del", scope: !7203, file: !7203, line: 144, type: !7204, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8909 = !DILocalVariable(name: "entry", arg: 1, scope: !8908, file: !7203, line: 144, type: !305)
!8910 = !DILocation(line: 144, column: 47, scope: !8908)
!8911 = !DILocation(line: 146, column: 19, scope: !8908)
!8912 = !DILocation(line: 146, column: 2, scope: !8908)
!8913 = !DILocation(line: 147, column: 2, scope: !8908)
!8914 = !DILocation(line: 147, column: 9, scope: !8908)
!8915 = !DILocation(line: 147, column: 14, scope: !8908)
!8916 = !DILocation(line: 148, column: 2, scope: !8908)
!8917 = !DILocation(line: 148, column: 9, scope: !8908)
!8918 = !DILocation(line: 148, column: 14, scope: !8908)
!8919 = !DILocation(line: 149, column: 1, scope: !8908)
!8920 = distinct !DISubprogram(name: "scsi_evt_emit", scope: !3, file: !3, line: 2343, type: !8921, scopeLine: 2344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8921 = !DISubroutineType(types: !8922)
!8922 = !{null, !293, !5444}
!8923 = !DILocalVariable(name: "sdev", arg: 1, scope: !8920, file: !3, line: 2343, type: !293)
!8924 = !DILocation(line: 2343, column: 47, scope: !8920)
!8925 = !DILocalVariable(name: "evt", arg: 2, scope: !8920, file: !3, line: 2343, type: !5444)
!8926 = !DILocation(line: 2343, column: 72, scope: !8920)
!8927 = !DILocalVariable(name: "idx", scope: !8920, file: !3, line: 2345, type: !286)
!8928 = !DILocation(line: 2345, column: 6, scope: !8920)
!8929 = !DILocalVariable(name: "envp", scope: !8920, file: !3, line: 2346, type: !1820)
!8930 = !DILocation(line: 2346, column: 8, scope: !8920)
!8931 = !DILocation(line: 2348, column: 10, scope: !8920)
!8932 = !DILocation(line: 2348, column: 15, scope: !8920)
!8933 = !DILocation(line: 2348, column: 2, scope: !8920)
!8934 = !DILocation(line: 2350, column: 11, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 2348, column: 25)
!8936 = !DILocation(line: 2350, column: 3, scope: !8935)
!8937 = !DILocation(line: 2350, column: 15, scope: !8935)
!8938 = !DILocation(line: 2351, column: 3, scope: !8935)
!8939 = !DILocation(line: 2353, column: 23, scope: !8935)
!8940 = !DILocation(line: 2353, column: 29, scope: !8935)
!8941 = !DILocation(line: 2353, column: 3, scope: !8935)
!8942 = !DILocation(line: 2354, column: 11, scope: !8935)
!8943 = !DILocation(line: 2354, column: 3, scope: !8935)
!8944 = !DILocation(line: 2354, column: 15, scope: !8935)
!8945 = !DILocation(line: 2355, column: 3, scope: !8935)
!8946 = !DILocation(line: 2357, column: 11, scope: !8935)
!8947 = !DILocation(line: 2357, column: 3, scope: !8935)
!8948 = !DILocation(line: 2357, column: 15, scope: !8935)
!8949 = !DILocation(line: 2358, column: 3, scope: !8935)
!8950 = !DILocation(line: 2360, column: 17, scope: !8935)
!8951 = !DILocation(line: 2360, column: 9, scope: !8935)
!8952 = !DILocation(line: 2360, column: 21, scope: !8935)
!8953 = !DILocation(line: 2361, column: 3, scope: !8935)
!8954 = !DILocation(line: 2363, column: 11, scope: !8935)
!8955 = !DILocation(line: 2363, column: 3, scope: !8935)
!8956 = !DILocation(line: 2363, column: 15, scope: !8935)
!8957 = !DILocation(line: 2364, column: 3, scope: !8935)
!8958 = !DILocation(line: 2366, column: 11, scope: !8935)
!8959 = !DILocation(line: 2366, column: 3, scope: !8935)
!8960 = !DILocation(line: 2366, column: 15, scope: !8935)
!8961 = !DILocation(line: 2367, column: 3, scope: !8935)
!8962 = !DILocation(line: 2369, column: 11, scope: !8935)
!8963 = !DILocation(line: 2369, column: 3, scope: !8935)
!8964 = !DILocation(line: 2369, column: 15, scope: !8935)
!8965 = !DILocation(line: 2370, column: 3, scope: !8935)
!8966 = !DILocation(line: 2372, column: 11, scope: !8935)
!8967 = !DILocation(line: 2372, column: 3, scope: !8935)
!8968 = !DILocation(line: 2372, column: 15, scope: !8935)
!8969 = !DILocation(line: 2373, column: 3, scope: !8935)
!8970 = !DILocation(line: 2376, column: 3, scope: !8935)
!8971 = !DILocation(line: 2379, column: 10, scope: !8920)
!8972 = !DILocation(line: 2379, column: 2, scope: !8920)
!8973 = !DILocation(line: 2379, column: 14, scope: !8920)
!8974 = !DILocation(line: 2381, column: 22, scope: !8920)
!8975 = !DILocation(line: 2381, column: 28, scope: !8920)
!8976 = !DILocation(line: 2381, column: 40, scope: !8920)
!8977 = !DILocation(line: 2381, column: 59, scope: !8920)
!8978 = !DILocation(line: 2381, column: 2, scope: !8920)
!8979 = !DILocation(line: 2382, column: 1, scope: !8920)
!8980 = distinct !DISubprogram(name: "sdev_evt_send", scope: !3, file: !3, line: 2431, type: !8921, scopeLine: 2432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!8981 = !DILocation(line: 407, column: 64, scope: !5873, inlinedAt: !8982)
!8982 = distinct !DILocation(line: 2448, column: 2, scope: !8980)
!8983 = !DILocation(line: 407, column: 84, scope: !5873, inlinedAt: !8982)
!8984 = !DILocation(line: 327, column: 67, scope: !5884, inlinedAt: !8985)
!8985 = distinct !DILocation(line: 2445, column: 2, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 2445, column: 2)
!8987 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 2445, column: 2)
!8988 = distinct !DILexicalBlock(scope: !8989, file: !3, line: 2445, column: 2)
!8989 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 2445, column: 2)
!8990 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 2445, column: 2)
!8991 = !DILocalVariable(name: "sdev", arg: 1, scope: !8980, file: !3, line: 2431, type: !293)
!8992 = !DILocation(line: 2431, column: 40, scope: !8980)
!8993 = !DILocalVariable(name: "evt", arg: 2, scope: !8980, file: !3, line: 2431, type: !5444)
!8994 = !DILocation(line: 2431, column: 65, scope: !8980)
!8995 = !DILocalVariable(name: "flags", scope: !8980, file: !3, line: 2433, type: !356)
!8996 = !DILocation(line: 2433, column: 16, scope: !8980)
!8997 = !DILocation(line: 2445, column: 2, scope: !8980)
!8998 = !DILocation(line: 2445, column: 2, scope: !8990)
!8999 = !DILocalVariable(name: "__dummy", scope: !9000, file: !3, line: 2445, type: !356)
!9000 = distinct !DILexicalBlock(scope: !8989, file: !3, line: 2445, column: 2)
!9001 = !DILocation(line: 2445, column: 2, scope: !9000)
!9002 = !DILocalVariable(name: "__dummy2", scope: !9000, file: !3, line: 2445, type: !356)
!9003 = !DILocation(line: 2445, column: 2, scope: !8989)
!9004 = !DILocation(line: 2445, column: 2, scope: !8988)
!9005 = !DILocation(line: 2445, column: 2, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 2445, column: 2)
!9007 = !DILocalVariable(name: "__dummy", scope: !9008, file: !3, line: 2445, type: !356)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 2445, column: 2)
!9009 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 2445, column: 2)
!9010 = !DILocation(line: 2445, column: 2, scope: !9008)
!9011 = !DILocalVariable(name: "__dummy2", scope: !9008, file: !3, line: 2445, type: !356)
!9012 = !DILocation(line: 2445, column: 2, scope: !9009)
!9013 = !DILocation(line: 2445, column: 2, scope: !8987)
!9014 = !{i32 -2140901792}
!9015 = !DILocation(line: 2445, column: 2, scope: !8986)
!9016 = !DILocation(line: 329, column: 10, scope: !5884, inlinedAt: !8985)
!9017 = !DILocation(line: 329, column: 16, scope: !5884, inlinedAt: !8985)
!9018 = !DILocation(line: 2446, column: 17, scope: !8980)
!9019 = !DILocation(line: 2446, column: 22, scope: !8980)
!9020 = !DILocation(line: 2446, column: 29, scope: !8980)
!9021 = !DILocation(line: 2446, column: 35, scope: !8980)
!9022 = !DILocation(line: 2446, column: 2, scope: !8980)
!9023 = !DILocation(line: 2447, column: 17, scope: !8980)
!9024 = !DILocation(line: 2447, column: 23, scope: !8980)
!9025 = !DILocation(line: 2447, column: 2, scope: !8980)
!9026 = !DILocation(line: 2448, column: 26, scope: !8980)
!9027 = !DILocation(line: 2448, column: 32, scope: !8980)
!9028 = !DILocation(line: 2448, column: 43, scope: !8980)
!9029 = !DILocation(line: 409, column: 2, scope: !5944, inlinedAt: !8982)
!9030 = !DILocation(line: 409, column: 2, scope: !5949, inlinedAt: !8982)
!9031 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !8982)
!9032 = !DILocation(line: 409, column: 2, scope: !5957, inlinedAt: !8982)
!9033 = !DILocation(line: 409, column: 2, scope: !5960, inlinedAt: !8982)
!9034 = !DILocation(line: 2449, column: 1, scope: !8980)
!9035 = distinct !DISubprogram(name: "list_add_tail", scope: !7203, file: !7203, line: 98, type: !8874, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9036 = !DILocalVariable(name: "new", arg: 1, scope: !9035, file: !7203, line: 98, type: !305)
!9037 = !DILocation(line: 98, column: 52, scope: !9035)
!9038 = !DILocalVariable(name: "head", arg: 2, scope: !9035, file: !7203, line: 98, type: !305)
!9039 = !DILocation(line: 98, column: 75, scope: !9035)
!9040 = !DILocation(line: 100, column: 13, scope: !9035)
!9041 = !DILocation(line: 100, column: 18, scope: !9035)
!9042 = !DILocation(line: 100, column: 24, scope: !9035)
!9043 = !DILocation(line: 100, column: 30, scope: !9035)
!9044 = !DILocation(line: 100, column: 2, scope: !9035)
!9045 = !DILocation(line: 101, column: 1, scope: !9035)
!9046 = distinct !DISubprogram(name: "schedule_work", scope: !196, file: !196, line: 566, type: !9047, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9047 = !DISubroutineType(types: !9048)
!9048 = !{!793, !2325}
!9049 = !DILocalVariable(name: "work", arg: 1, scope: !9046, file: !196, line: 566, type: !2325)
!9050 = !DILocation(line: 566, column: 54, scope: !9046)
!9051 = !DILocation(line: 568, column: 20, scope: !9046)
!9052 = !DILocation(line: 568, column: 31, scope: !9046)
!9053 = !DILocation(line: 568, column: 9, scope: !9046)
!9054 = !DILocation(line: 568, column: 2, scope: !9046)
!9055 = distinct !DISubprogram(name: "sdev_evt_alloc", scope: !3, file: !3, line: 2459, type: !9056, scopeLine: 2461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9056 = !DISubroutineType(types: !9057)
!9057 = !{!5444, !244, !605}
!9058 = !DILocalVariable(name: "evt_type", arg: 1, scope: !9055, file: !3, line: 2459, type: !244)
!9059 = !DILocation(line: 2459, column: 58, scope: !9055)
!9060 = !DILocalVariable(name: "gfpflags", arg: 2, scope: !9055, file: !3, line: 2460, type: !605)
!9061 = !DILocation(line: 2460, column: 13, scope: !9055)
!9062 = !DILocalVariable(name: "evt", scope: !9055, file: !3, line: 2462, type: !5444)
!9063 = !DILocation(line: 2462, column: 21, scope: !9055)
!9064 = !DILocation(line: 2462, column: 62, scope: !9055)
!9065 = !DILocation(line: 2462, column: 27, scope: !9055)
!9066 = !DILocation(line: 2463, column: 7, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 2463, column: 6)
!9068 = !DILocation(line: 2463, column: 6, scope: !9055)
!9069 = !DILocation(line: 2464, column: 3, scope: !9067)
!9070 = !DILocation(line: 2466, column: 18, scope: !9055)
!9071 = !DILocation(line: 2466, column: 2, scope: !9055)
!9072 = !DILocation(line: 2466, column: 7, scope: !9055)
!9073 = !DILocation(line: 2466, column: 16, scope: !9055)
!9074 = !DILocation(line: 2467, column: 18, scope: !9055)
!9075 = !DILocation(line: 2467, column: 23, scope: !9055)
!9076 = !DILocation(line: 2467, column: 2, scope: !9055)
!9077 = !DILocation(line: 2470, column: 10, scope: !9055)
!9078 = !DILocation(line: 2470, column: 2, scope: !9055)
!9079 = !DILocation(line: 2470, column: 20, scope: !9055)
!9080 = !DILocation(line: 2481, column: 3, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 2470, column: 20)
!9082 = !DILocation(line: 2484, column: 9, scope: !9055)
!9083 = !DILocation(line: 2484, column: 2, scope: !9055)
!9084 = !DILocation(line: 2485, column: 1, scope: !9055)
!9085 = distinct !DISubprogram(name: "kzalloc", scope: !5426, file: !5426, line: 662, type: !7651, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9086 = !DILocation(line: 445, column: 72, scope: !7643, inlinedAt: !9087)
!9087 = distinct !DILocation(line: 552, column: 10, scope: !7648, inlinedAt: !9088)
!9088 = distinct !DILocation(line: 664, column: 9, scope: !9085)
!9089 = !DILocation(line: 446, column: 9, scope: !7643, inlinedAt: !9087)
!9090 = !DILocation(line: 446, column: 23, scope: !7643, inlinedAt: !9087)
!9091 = !DILocation(line: 448, column: 8, scope: !7643, inlinedAt: !9087)
!9092 = !DILocation(line: 318, column: 67, scope: !7663, inlinedAt: !9093)
!9093 = distinct !DILocation(line: 553, column: 20, scope: !7648, inlinedAt: !9088)
!9094 = !DILocation(line: 346, column: 58, scope: !7669, inlinedAt: !9095)
!9095 = distinct !DILocation(line: 547, column: 11, scope: !7648, inlinedAt: !9088)
!9096 = !DILocation(line: 472, column: 28, scope: !7675, inlinedAt: !9097)
!9097 = distinct !DILocation(line: 481, column: 9, scope: !7680, inlinedAt: !9098)
!9098 = distinct !DILocation(line: 545, column: 11, scope: !7682, inlinedAt: !9088)
!9099 = !DILocation(line: 472, column: 40, scope: !7675, inlinedAt: !9097)
!9100 = !DILocation(line: 472, column: 60, scope: !7675, inlinedAt: !9097)
!9101 = !DILocation(line: 478, column: 51, scope: !7680, inlinedAt: !9098)
!9102 = !DILocation(line: 478, column: 63, scope: !7680, inlinedAt: !9098)
!9103 = !DILocation(line: 480, column: 15, scope: !7680, inlinedAt: !9098)
!9104 = !DILocation(line: 538, column: 45, scope: !7650, inlinedAt: !9088)
!9105 = !DILocation(line: 538, column: 57, scope: !7650, inlinedAt: !9088)
!9106 = !DILocation(line: 542, column: 16, scope: !7648, inlinedAt: !9088)
!9107 = !DILocalVariable(name: "size", arg: 1, scope: !9085, file: !5426, line: 662, type: !928)
!9108 = !DILocation(line: 662, column: 36, scope: !9085)
!9109 = !DILocalVariable(name: "flags", arg: 2, scope: !9085, file: !5426, line: 662, type: !605)
!9110 = !DILocation(line: 662, column: 48, scope: !9085)
!9111 = !DILocation(line: 664, column: 17, scope: !9085)
!9112 = !DILocation(line: 664, column: 23, scope: !9085)
!9113 = !DILocation(line: 664, column: 29, scope: !9085)
!9114 = !DILocation(line: 540, column: 27, scope: !7649, inlinedAt: !9088)
!9115 = !DILocation(line: 540, column: 6, scope: !7649, inlinedAt: !9088)
!9116 = !DILocation(line: 540, column: 6, scope: !7650, inlinedAt: !9088)
!9117 = !DILocation(line: 544, column: 7, scope: !7682, inlinedAt: !9088)
!9118 = !DILocation(line: 544, column: 12, scope: !7682, inlinedAt: !9088)
!9119 = !DILocation(line: 544, column: 7, scope: !7648, inlinedAt: !9088)
!9120 = !DILocation(line: 545, column: 25, scope: !7682, inlinedAt: !9088)
!9121 = !DILocation(line: 545, column: 31, scope: !7682, inlinedAt: !9088)
!9122 = !DILocation(line: 480, column: 33, scope: !7680, inlinedAt: !9098)
!9123 = !DILocation(line: 480, column: 23, scope: !7680, inlinedAt: !9098)
!9124 = !DILocation(line: 481, column: 29, scope: !7680, inlinedAt: !9098)
!9125 = !DILocation(line: 481, column: 35, scope: !7680, inlinedAt: !9098)
!9126 = !DILocation(line: 481, column: 42, scope: !7680, inlinedAt: !9098)
!9127 = !DILocation(line: 474, column: 23, scope: !7675, inlinedAt: !9097)
!9128 = !DILocation(line: 474, column: 29, scope: !7675, inlinedAt: !9097)
!9129 = !DILocation(line: 474, column: 36, scope: !7675, inlinedAt: !9097)
!9130 = !DILocation(line: 474, column: 9, scope: !7675, inlinedAt: !9097)
!9131 = !DILocation(line: 545, column: 4, scope: !7682, inlinedAt: !9088)
!9132 = !DILocation(line: 547, column: 25, scope: !7648, inlinedAt: !9088)
!9133 = !DILocation(line: 348, column: 7, scope: !7788, inlinedAt: !9095)
!9134 = !DILocation(line: 348, column: 6, scope: !7669, inlinedAt: !9095)
!9135 = !DILocation(line: 349, column: 3, scope: !7788, inlinedAt: !9095)
!9136 = !DILocation(line: 351, column: 6, scope: !7792, inlinedAt: !9095)
!9137 = !DILocation(line: 351, column: 11, scope: !7792, inlinedAt: !9095)
!9138 = !DILocation(line: 351, column: 6, scope: !7669, inlinedAt: !9095)
!9139 = !DILocation(line: 352, column: 3, scope: !7792, inlinedAt: !9095)
!9140 = !DILocation(line: 354, column: 32, scope: !7797, inlinedAt: !9095)
!9141 = !DILocation(line: 354, column: 37, scope: !7797, inlinedAt: !9095)
!9142 = !DILocation(line: 354, column: 42, scope: !7797, inlinedAt: !9095)
!9143 = !DILocation(line: 354, column: 45, scope: !7797, inlinedAt: !9095)
!9144 = !DILocation(line: 354, column: 50, scope: !7797, inlinedAt: !9095)
!9145 = !DILocation(line: 354, column: 6, scope: !7669, inlinedAt: !9095)
!9146 = !DILocation(line: 355, column: 3, scope: !7797, inlinedAt: !9095)
!9147 = !DILocation(line: 356, column: 32, scope: !7805, inlinedAt: !9095)
!9148 = !DILocation(line: 356, column: 37, scope: !7805, inlinedAt: !9095)
!9149 = !DILocation(line: 356, column: 43, scope: !7805, inlinedAt: !9095)
!9150 = !DILocation(line: 356, column: 46, scope: !7805, inlinedAt: !9095)
!9151 = !DILocation(line: 356, column: 51, scope: !7805, inlinedAt: !9095)
!9152 = !DILocation(line: 356, column: 6, scope: !7669, inlinedAt: !9095)
!9153 = !DILocation(line: 357, column: 3, scope: !7805, inlinedAt: !9095)
!9154 = !DILocation(line: 358, column: 6, scope: !7813, inlinedAt: !9095)
!9155 = !DILocation(line: 358, column: 11, scope: !7813, inlinedAt: !9095)
!9156 = !DILocation(line: 358, column: 6, scope: !7669, inlinedAt: !9095)
!9157 = !DILocation(line: 358, column: 26, scope: !7813, inlinedAt: !9095)
!9158 = !DILocation(line: 359, column: 6, scope: !7818, inlinedAt: !9095)
!9159 = !DILocation(line: 359, column: 11, scope: !7818, inlinedAt: !9095)
!9160 = !DILocation(line: 359, column: 6, scope: !7669, inlinedAt: !9095)
!9161 = !DILocation(line: 359, column: 26, scope: !7818, inlinedAt: !9095)
!9162 = !DILocation(line: 360, column: 6, scope: !7823, inlinedAt: !9095)
!9163 = !DILocation(line: 360, column: 11, scope: !7823, inlinedAt: !9095)
!9164 = !DILocation(line: 360, column: 6, scope: !7669, inlinedAt: !9095)
!9165 = !DILocation(line: 360, column: 26, scope: !7823, inlinedAt: !9095)
!9166 = !DILocation(line: 361, column: 6, scope: !7828, inlinedAt: !9095)
!9167 = !DILocation(line: 361, column: 11, scope: !7828, inlinedAt: !9095)
!9168 = !DILocation(line: 361, column: 6, scope: !7669, inlinedAt: !9095)
!9169 = !DILocation(line: 361, column: 26, scope: !7828, inlinedAt: !9095)
!9170 = !DILocation(line: 362, column: 6, scope: !7833, inlinedAt: !9095)
!9171 = !DILocation(line: 362, column: 11, scope: !7833, inlinedAt: !9095)
!9172 = !DILocation(line: 362, column: 6, scope: !7669, inlinedAt: !9095)
!9173 = !DILocation(line: 362, column: 26, scope: !7833, inlinedAt: !9095)
!9174 = !DILocation(line: 363, column: 6, scope: !7838, inlinedAt: !9095)
!9175 = !DILocation(line: 363, column: 11, scope: !7838, inlinedAt: !9095)
!9176 = !DILocation(line: 363, column: 6, scope: !7669, inlinedAt: !9095)
!9177 = !DILocation(line: 363, column: 26, scope: !7838, inlinedAt: !9095)
!9178 = !DILocation(line: 364, column: 6, scope: !7843, inlinedAt: !9095)
!9179 = !DILocation(line: 364, column: 11, scope: !7843, inlinedAt: !9095)
!9180 = !DILocation(line: 364, column: 6, scope: !7669, inlinedAt: !9095)
!9181 = !DILocation(line: 364, column: 26, scope: !7843, inlinedAt: !9095)
!9182 = !DILocation(line: 365, column: 6, scope: !7848, inlinedAt: !9095)
!9183 = !DILocation(line: 365, column: 11, scope: !7848, inlinedAt: !9095)
!9184 = !DILocation(line: 365, column: 6, scope: !7669, inlinedAt: !9095)
!9185 = !DILocation(line: 365, column: 26, scope: !7848, inlinedAt: !9095)
!9186 = !DILocation(line: 366, column: 6, scope: !7853, inlinedAt: !9095)
!9187 = !DILocation(line: 366, column: 11, scope: !7853, inlinedAt: !9095)
!9188 = !DILocation(line: 366, column: 6, scope: !7669, inlinedAt: !9095)
!9189 = !DILocation(line: 366, column: 26, scope: !7853, inlinedAt: !9095)
!9190 = !DILocation(line: 367, column: 6, scope: !7858, inlinedAt: !9095)
!9191 = !DILocation(line: 367, column: 11, scope: !7858, inlinedAt: !9095)
!9192 = !DILocation(line: 367, column: 6, scope: !7669, inlinedAt: !9095)
!9193 = !DILocation(line: 367, column: 26, scope: !7858, inlinedAt: !9095)
!9194 = !DILocation(line: 368, column: 6, scope: !7863, inlinedAt: !9095)
!9195 = !DILocation(line: 368, column: 11, scope: !7863, inlinedAt: !9095)
!9196 = !DILocation(line: 368, column: 6, scope: !7669, inlinedAt: !9095)
!9197 = !DILocation(line: 368, column: 26, scope: !7863, inlinedAt: !9095)
!9198 = !DILocation(line: 369, column: 6, scope: !7868, inlinedAt: !9095)
!9199 = !DILocation(line: 369, column: 11, scope: !7868, inlinedAt: !9095)
!9200 = !DILocation(line: 369, column: 6, scope: !7669, inlinedAt: !9095)
!9201 = !DILocation(line: 369, column: 26, scope: !7868, inlinedAt: !9095)
!9202 = !DILocation(line: 370, column: 6, scope: !7873, inlinedAt: !9095)
!9203 = !DILocation(line: 370, column: 11, scope: !7873, inlinedAt: !9095)
!9204 = !DILocation(line: 370, column: 6, scope: !7669, inlinedAt: !9095)
!9205 = !DILocation(line: 370, column: 26, scope: !7873, inlinedAt: !9095)
!9206 = !DILocation(line: 371, column: 6, scope: !7878, inlinedAt: !9095)
!9207 = !DILocation(line: 371, column: 11, scope: !7878, inlinedAt: !9095)
!9208 = !DILocation(line: 371, column: 6, scope: !7669, inlinedAt: !9095)
!9209 = !DILocation(line: 371, column: 26, scope: !7878, inlinedAt: !9095)
!9210 = !DILocation(line: 372, column: 6, scope: !7883, inlinedAt: !9095)
!9211 = !DILocation(line: 372, column: 11, scope: !7883, inlinedAt: !9095)
!9212 = !DILocation(line: 372, column: 6, scope: !7669, inlinedAt: !9095)
!9213 = !DILocation(line: 372, column: 26, scope: !7883, inlinedAt: !9095)
!9214 = !DILocation(line: 373, column: 6, scope: !7888, inlinedAt: !9095)
!9215 = !DILocation(line: 373, column: 11, scope: !7888, inlinedAt: !9095)
!9216 = !DILocation(line: 373, column: 6, scope: !7669, inlinedAt: !9095)
!9217 = !DILocation(line: 373, column: 26, scope: !7888, inlinedAt: !9095)
!9218 = !DILocation(line: 374, column: 6, scope: !7893, inlinedAt: !9095)
!9219 = !DILocation(line: 374, column: 11, scope: !7893, inlinedAt: !9095)
!9220 = !DILocation(line: 374, column: 6, scope: !7669, inlinedAt: !9095)
!9221 = !DILocation(line: 374, column: 26, scope: !7893, inlinedAt: !9095)
!9222 = !DILocation(line: 375, column: 6, scope: !7898, inlinedAt: !9095)
!9223 = !DILocation(line: 375, column: 11, scope: !7898, inlinedAt: !9095)
!9224 = !DILocation(line: 375, column: 6, scope: !7669, inlinedAt: !9095)
!9225 = !DILocation(line: 375, column: 27, scope: !7898, inlinedAt: !9095)
!9226 = !DILocation(line: 376, column: 6, scope: !7903, inlinedAt: !9095)
!9227 = !DILocation(line: 376, column: 11, scope: !7903, inlinedAt: !9095)
!9228 = !DILocation(line: 376, column: 6, scope: !7669, inlinedAt: !9095)
!9229 = !DILocation(line: 376, column: 32, scope: !7903, inlinedAt: !9095)
!9230 = !DILocation(line: 377, column: 6, scope: !7908, inlinedAt: !9095)
!9231 = !DILocation(line: 377, column: 11, scope: !7908, inlinedAt: !9095)
!9232 = !DILocation(line: 377, column: 6, scope: !7669, inlinedAt: !9095)
!9233 = !DILocation(line: 377, column: 32, scope: !7908, inlinedAt: !9095)
!9234 = !DILocation(line: 378, column: 6, scope: !7913, inlinedAt: !9095)
!9235 = !DILocation(line: 378, column: 11, scope: !7913, inlinedAt: !9095)
!9236 = !DILocation(line: 378, column: 6, scope: !7669, inlinedAt: !9095)
!9237 = !DILocation(line: 378, column: 32, scope: !7913, inlinedAt: !9095)
!9238 = !DILocation(line: 379, column: 6, scope: !7918, inlinedAt: !9095)
!9239 = !DILocation(line: 379, column: 11, scope: !7918, inlinedAt: !9095)
!9240 = !DILocation(line: 379, column: 6, scope: !7669, inlinedAt: !9095)
!9241 = !DILocation(line: 379, column: 33, scope: !7918, inlinedAt: !9095)
!9242 = !DILocation(line: 380, column: 6, scope: !7923, inlinedAt: !9095)
!9243 = !DILocation(line: 380, column: 11, scope: !7923, inlinedAt: !9095)
!9244 = !DILocation(line: 380, column: 6, scope: !7669, inlinedAt: !9095)
!9245 = !DILocation(line: 380, column: 33, scope: !7923, inlinedAt: !9095)
!9246 = !DILocation(line: 381, column: 6, scope: !7928, inlinedAt: !9095)
!9247 = !DILocation(line: 381, column: 11, scope: !7928, inlinedAt: !9095)
!9248 = !DILocation(line: 381, column: 6, scope: !7669, inlinedAt: !9095)
!9249 = !DILocation(line: 381, column: 33, scope: !7928, inlinedAt: !9095)
!9250 = !DILocation(line: 382, column: 2, scope: !7933, inlinedAt: !9095)
!9251 = !DILocation(line: 382, column: 2, scope: !7937, inlinedAt: !9095)
!9252 = !DILocation(line: 382, column: 2, scope: !7938, inlinedAt: !9095)
!9253 = !DILocation(line: 386, column: 1, scope: !7669, inlinedAt: !9095)
!9254 = !DILocation(line: 547, column: 9, scope: !7648, inlinedAt: !9088)
!9255 = !DILocation(line: 549, column: 8, scope: !7944, inlinedAt: !9088)
!9256 = !DILocation(line: 549, column: 7, scope: !7648, inlinedAt: !9088)
!9257 = !DILocation(line: 550, column: 4, scope: !7944, inlinedAt: !9088)
!9258 = !DILocation(line: 553, column: 33, scope: !7648, inlinedAt: !9088)
!9259 = !DILocation(line: 325, column: 6, scope: !7949, inlinedAt: !9093)
!9260 = !DILocation(line: 325, column: 6, scope: !7663, inlinedAt: !9093)
!9261 = !DILocation(line: 326, column: 3, scope: !7949, inlinedAt: !9093)
!9262 = !DILocation(line: 332, column: 9, scope: !7663, inlinedAt: !9093)
!9263 = !DILocation(line: 332, column: 15, scope: !7663, inlinedAt: !9093)
!9264 = !DILocation(line: 332, column: 2, scope: !7663, inlinedAt: !9093)
!9265 = !DILocation(line: 336, column: 1, scope: !7663, inlinedAt: !9093)
!9266 = !DILocation(line: 553, column: 5, scope: !7648, inlinedAt: !9088)
!9267 = !DILocation(line: 553, column: 41, scope: !7648, inlinedAt: !9088)
!9268 = !DILocation(line: 554, column: 5, scope: !7648, inlinedAt: !9088)
!9269 = !DILocation(line: 554, column: 12, scope: !7648, inlinedAt: !9088)
!9270 = !DILocation(line: 448, column: 31, scope: !7643, inlinedAt: !9087)
!9271 = !DILocation(line: 448, column: 34, scope: !7643, inlinedAt: !9087)
!9272 = !DILocation(line: 448, column: 14, scope: !7643, inlinedAt: !9087)
!9273 = !DILocation(line: 450, column: 22, scope: !7643, inlinedAt: !9087)
!9274 = !DILocation(line: 450, column: 25, scope: !7643, inlinedAt: !9087)
!9275 = !DILocation(line: 450, column: 30, scope: !7643, inlinedAt: !9087)
!9276 = !DILocation(line: 450, column: 36, scope: !7643, inlinedAt: !9087)
!9277 = !DILocation(line: 450, column: 8, scope: !7643, inlinedAt: !9087)
!9278 = !DILocation(line: 450, column: 6, scope: !7643, inlinedAt: !9087)
!9279 = !DILocation(line: 451, column: 9, scope: !7643, inlinedAt: !9087)
!9280 = !DILocation(line: 552, column: 3, scope: !7648, inlinedAt: !9088)
!9281 = !DILocation(line: 557, column: 19, scope: !7650, inlinedAt: !9088)
!9282 = !DILocation(line: 557, column: 25, scope: !7650, inlinedAt: !9088)
!9283 = !DILocation(line: 557, column: 9, scope: !7650, inlinedAt: !9088)
!9284 = !DILocation(line: 557, column: 2, scope: !7650, inlinedAt: !9088)
!9285 = !DILocation(line: 558, column: 1, scope: !7650, inlinedAt: !9088)
!9286 = !DILocation(line: 664, column: 2, scope: !9085)
!9287 = distinct !DISubprogram(name: "scsi_device_quiesce", scope: !3, file: !3, line: 2526, type: !4920, scopeLine: 2527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9288 = !DILocalVariable(name: "pscr_ret__", scope: !9289, file: !9290, line: 15, type: !347)
!9289 = distinct !DILexicalBlock(scope: !9291, file: !9290, line: 15, column: 9)
!9290 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!9291 = distinct !DISubprogram(name: "get_current", scope: !9290, file: !9290, line: 13, type: !9292, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9292 = !DISubroutineType(types: !9293)
!9293 = !{!347}
!9294 = !DILocation(line: 15, column: 9, scope: !9289, inlinedAt: !9295)
!9295 = distinct !DILocation(line: 2556, column: 23, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9287, file: !3, line: 2555, column: 6)
!9297 = !DILocalVariable(name: "__vpp_verify", scope: !9298, file: !9290, line: 15, type: !1914)
!9298 = distinct !DILexicalBlock(scope: !9289, file: !9290, line: 15, column: 9)
!9299 = !DILocation(line: 15, column: 9, scope: !9298, inlinedAt: !9295)
!9300 = !DILocalVariable(name: "pfo_val__", scope: !9301, file: !9290, line: 15, type: !403)
!9301 = distinct !DILexicalBlock(scope: !9289, file: !9290, line: 15, column: 9)
!9302 = !DILocation(line: 15, column: 9, scope: !9301, inlinedAt: !9295)
!9303 = !DILocation(line: 15, column: 9, scope: !9289, inlinedAt: !9304)
!9304 = distinct !DILocation(line: 2538, column: 27, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9287, file: !3, line: 2538, column: 6)
!9306 = !DILocation(line: 15, column: 9, scope: !9298, inlinedAt: !9304)
!9307 = !DILocation(line: 15, column: 9, scope: !9301, inlinedAt: !9304)
!9308 = !DILocation(line: 15, column: 9, scope: !9289, inlinedAt: !9309)
!9309 = distinct !DILocation(line: 2536, column: 2, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9287, file: !3, line: 2536, column: 2)
!9311 = !DILocation(line: 15, column: 9, scope: !9298, inlinedAt: !9309)
!9312 = !DILocation(line: 15, column: 9, scope: !9301, inlinedAt: !9309)
!9313 = !DILocalVariable(name: "sdev", arg: 1, scope: !9287, file: !3, line: 2526, type: !293)
!9314 = !DILocation(line: 2526, column: 41, scope: !9287)
!9315 = !DILocalVariable(name: "q", scope: !9287, file: !3, line: 2528, type: !2776)
!9316 = !DILocation(line: 2528, column: 24, scope: !9287)
!9317 = !DILocation(line: 2528, column: 28, scope: !9287)
!9318 = !DILocation(line: 2528, column: 34, scope: !9287)
!9319 = !DILocalVariable(name: "err", scope: !9287, file: !3, line: 2529, type: !286)
!9320 = !DILocation(line: 2529, column: 6, scope: !9287)
!9321 = !DILocalVariable(name: "__ret_warn_on", scope: !9310, file: !3, line: 2536, type: !286)
!9322 = !DILocation(line: 2536, column: 2, scope: !9310)
!9323 = !{i32 -2146512963}
!9324 = !DILocation(line: 0, scope: !9310)
!9325 = !DILocation(line: 2536, column: 2, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 2536, column: 2)
!9327 = !DILocation(line: 2536, column: 2, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 2536, column: 2)
!9329 = !DILocation(line: 2536, column: 2, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 2536, column: 2)
!9331 = !DILocation(line: 2536, column: 2, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 2536, column: 2)
!9333 = !{i32 -2140900637, i32 -2140900608, i32 -2140900562, i32 -2140900504, i32 -2140900450, i32 -2140900396, i32 -2140900341, i32 -2140900310}
!9334 = !DILocation(line: 2536, column: 2, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 2536, column: 2)
!9336 = !{i32 -2140899893, i32 -2140899886, i32 -2140899834, i32 -2140899803, i32 -2140899773}
!9337 = !DILocation(line: 2536, column: 2, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 2536, column: 2)
!9339 = !DILocation(line: 2538, column: 6, scope: !9305)
!9340 = !DILocation(line: 2538, column: 12, scope: !9305)
!9341 = !DILocation(line: 2538, column: 24, scope: !9305)
!9342 = !DILocation(line: 2538, column: 6, scope: !9287)
!9343 = !DILocation(line: 2539, column: 3, scope: !9305)
!9344 = !DILocation(line: 2541, column: 18, scope: !9287)
!9345 = !DILocation(line: 2541, column: 2, scope: !9287)
!9346 = !DILocation(line: 2543, column: 22, scope: !9287)
!9347 = !DILocation(line: 2543, column: 2, scope: !9287)
!9348 = !DILocation(line: 2550, column: 2, scope: !9287)
!9349 = !DILocation(line: 2551, column: 24, scope: !9287)
!9350 = !DILocation(line: 2551, column: 2, scope: !9287)
!9351 = !DILocation(line: 2553, column: 14, scope: !9287)
!9352 = !DILocation(line: 2553, column: 20, scope: !9287)
!9353 = !DILocation(line: 2553, column: 2, scope: !9287)
!9354 = !DILocation(line: 2554, column: 30, scope: !9287)
!9355 = !DILocation(line: 2554, column: 8, scope: !9287)
!9356 = !DILocation(line: 2554, column: 6, scope: !9287)
!9357 = !DILocation(line: 2555, column: 6, scope: !9296)
!9358 = !DILocation(line: 2555, column: 10, scope: !9296)
!9359 = !DILocation(line: 2555, column: 6, scope: !9287)
!9360 = !DILocation(line: 2556, column: 3, scope: !9296)
!9361 = !DILocation(line: 2556, column: 9, scope: !9296)
!9362 = !DILocation(line: 2556, column: 21, scope: !9296)
!9363 = !DILocation(line: 2558, column: 21, scope: !9296)
!9364 = !DILocation(line: 2558, column: 3, scope: !9296)
!9365 = !DILocation(line: 2559, column: 16, scope: !9287)
!9366 = !DILocation(line: 2559, column: 22, scope: !9287)
!9367 = !DILocation(line: 2559, column: 2, scope: !9287)
!9368 = !DILocation(line: 2561, column: 9, scope: !9287)
!9369 = !DILocation(line: 2561, column: 2, scope: !9287)
!9370 = !DILocation(line: 2562, column: 1, scope: !9287)
!9371 = distinct !DISubprogram(name: "scsi_device_resume", scope: !3, file: !3, line: 2574, type: !4925, scopeLine: 2575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9372 = !DILocalVariable(name: "sdev", arg: 1, scope: !9371, file: !3, line: 2574, type: !293)
!9373 = !DILocation(line: 2574, column: 45, scope: !9371)
!9374 = !DILocation(line: 2580, column: 14, scope: !9371)
!9375 = !DILocation(line: 2580, column: 20, scope: !9371)
!9376 = !DILocation(line: 2580, column: 2, scope: !9371)
!9377 = !DILocation(line: 2581, column: 6, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 2581, column: 6)
!9379 = !DILocation(line: 2581, column: 12, scope: !9378)
!9380 = !DILocation(line: 2581, column: 6, scope: !9371)
!9381 = !DILocation(line: 2582, column: 3, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 2581, column: 25)
!9383 = !DILocation(line: 2582, column: 9, scope: !9382)
!9384 = !DILocation(line: 2582, column: 21, scope: !9382)
!9385 = !DILocation(line: 2583, column: 21, scope: !9382)
!9386 = !DILocation(line: 2583, column: 27, scope: !9382)
!9387 = !DILocation(line: 2583, column: 3, scope: !9382)
!9388 = !DILocation(line: 2584, column: 2, scope: !9382)
!9389 = !DILocation(line: 2585, column: 6, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 2585, column: 6)
!9391 = !DILocation(line: 2585, column: 12, scope: !9390)
!9392 = !DILocation(line: 2585, column: 23, scope: !9390)
!9393 = !DILocation(line: 2585, column: 6, scope: !9371)
!9394 = !DILocation(line: 2586, column: 25, scope: !9390)
!9395 = !DILocation(line: 2586, column: 3, scope: !9390)
!9396 = !DILocation(line: 2587, column: 16, scope: !9371)
!9397 = !DILocation(line: 2587, column: 22, scope: !9371)
!9398 = !DILocation(line: 2587, column: 2, scope: !9371)
!9399 = !DILocation(line: 2588, column: 1, scope: !9371)
!9400 = distinct !DISubprogram(name: "scsi_target_quiesce", scope: !3, file: !3, line: 2598, type: !4956, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9401 = !DILocalVariable(name: "starget", arg: 1, scope: !9400, file: !3, line: 2598, type: !4931)
!9402 = !DILocation(line: 2598, column: 41, scope: !9400)
!9403 = !DILocation(line: 2600, column: 26, scope: !9400)
!9404 = !DILocation(line: 2600, column: 2, scope: !9400)
!9405 = !DILocation(line: 2601, column: 1, scope: !9400)
!9406 = distinct !DISubprogram(name: "device_quiesce_fn", scope: !3, file: !3, line: 2592, type: !5520, scopeLine: 2593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9407 = !DILocalVariable(name: "sdev", arg: 1, scope: !9406, file: !3, line: 2592, type: !293)
!9408 = !DILocation(line: 2592, column: 39, scope: !9406)
!9409 = !DILocalVariable(name: "data", arg: 2, scope: !9406, file: !3, line: 2592, type: !291)
!9410 = !DILocation(line: 2592, column: 51, scope: !9406)
!9411 = !DILocation(line: 2594, column: 22, scope: !9406)
!9412 = !DILocation(line: 2594, column: 2, scope: !9406)
!9413 = !DILocation(line: 2595, column: 1, scope: !9406)
!9414 = distinct !DISubprogram(name: "scsi_target_resume", scope: !3, file: !3, line: 2611, type: !4956, scopeLine: 2612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9415 = !DILocalVariable(name: "starget", arg: 1, scope: !9414, file: !3, line: 2611, type: !4931)
!9416 = !DILocation(line: 2611, column: 40, scope: !9414)
!9417 = !DILocation(line: 2613, column: 26, scope: !9414)
!9418 = !DILocation(line: 2613, column: 2, scope: !9414)
!9419 = !DILocation(line: 2614, column: 1, scope: !9414)
!9420 = distinct !DISubprogram(name: "device_resume_fn", scope: !3, file: !3, line: 2605, type: !5520, scopeLine: 2606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9421 = !DILocalVariable(name: "sdev", arg: 1, scope: !9420, file: !3, line: 2605, type: !293)
!9422 = !DILocation(line: 2605, column: 38, scope: !9420)
!9423 = !DILocalVariable(name: "data", arg: 2, scope: !9420, file: !3, line: 2605, type: !291)
!9424 = !DILocation(line: 2605, column: 50, scope: !9420)
!9425 = !DILocation(line: 2607, column: 21, scope: !9420)
!9426 = !DILocation(line: 2607, column: 2, scope: !9420)
!9427 = !DILocation(line: 2608, column: 1, scope: !9420)
!9428 = distinct !DISubprogram(name: "scsi_internal_device_block_nowait", scope: !3, file: !3, line: 2631, type: !4920, scopeLine: 2632, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9429 = !DILocalVariable(name: "sdev", arg: 1, scope: !9428, file: !3, line: 2631, type: !293)
!9430 = !DILocation(line: 2631, column: 59, scope: !9428)
!9431 = !DILocalVariable(name: "q", scope: !9428, file: !3, line: 2633, type: !2776)
!9432 = !DILocation(line: 2633, column: 24, scope: !9428)
!9433 = !DILocation(line: 2633, column: 28, scope: !9428)
!9434 = !DILocation(line: 2633, column: 34, scope: !9428)
!9435 = !DILocalVariable(name: "err", scope: !9428, file: !3, line: 2634, type: !286)
!9436 = !DILocation(line: 2634, column: 6, scope: !9428)
!9437 = !DILocation(line: 2636, column: 30, scope: !9428)
!9438 = !DILocation(line: 2636, column: 8, scope: !9428)
!9439 = !DILocation(line: 2636, column: 6, scope: !9428)
!9440 = !DILocation(line: 2637, column: 6, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 2637, column: 6)
!9442 = !DILocation(line: 2637, column: 6, scope: !9428)
!9443 = !DILocation(line: 2638, column: 31, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9441, file: !3, line: 2637, column: 11)
!9445 = !DILocation(line: 2638, column: 9, scope: !9444)
!9446 = !DILocation(line: 2638, column: 7, scope: !9444)
!9447 = !DILocation(line: 2640, column: 7, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 2640, column: 7)
!9449 = !DILocation(line: 2640, column: 7, scope: !9444)
!9450 = !DILocation(line: 2641, column: 11, scope: !9448)
!9451 = !DILocation(line: 2641, column: 4, scope: !9448)
!9452 = !DILocation(line: 2642, column: 2, scope: !9444)
!9453 = !DILocation(line: 2649, column: 30, scope: !9428)
!9454 = !DILocation(line: 2649, column: 2, scope: !9428)
!9455 = !DILocation(line: 2650, column: 2, scope: !9428)
!9456 = !DILocation(line: 2651, column: 1, scope: !9428)
!9457 = distinct !DISubprogram(name: "scsi_start_queue", scope: !3, file: !3, line: 2683, type: !4925, scopeLine: 2684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9458 = !DILocalVariable(name: "sdev", arg: 1, scope: !9457, file: !3, line: 2683, type: !293)
!9459 = !DILocation(line: 2683, column: 43, scope: !9457)
!9460 = !DILocalVariable(name: "q", scope: !9457, file: !3, line: 2685, type: !2776)
!9461 = !DILocation(line: 2685, column: 24, scope: !9457)
!9462 = !DILocation(line: 2685, column: 28, scope: !9457)
!9463 = !DILocation(line: 2685, column: 34, scope: !9457)
!9464 = !DILocation(line: 2687, column: 25, scope: !9457)
!9465 = !DILocation(line: 2687, column: 2, scope: !9457)
!9466 = !DILocation(line: 2688, column: 1, scope: !9457)
!9467 = distinct !DISubprogram(name: "scsi_internal_device_unblock_nowait", scope: !3, file: !3, line: 2705, type: !8608, scopeLine: 2707, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9468 = !DILocalVariable(name: "sdev", arg: 1, scope: !9467, file: !3, line: 2705, type: !293)
!9469 = !DILocation(line: 2705, column: 61, scope: !9467)
!9470 = !DILocalVariable(name: "new_state", arg: 2, scope: !9467, file: !3, line: 2706, type: !135)
!9471 = !DILocation(line: 2706, column: 29, scope: !9467)
!9472 = !DILocation(line: 2708, column: 10, scope: !9467)
!9473 = !DILocation(line: 2708, column: 2, scope: !9467)
!9474 = !DILocation(line: 2711, column: 3, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 2708, column: 21)
!9476 = !DILocation(line: 2713, column: 3, scope: !9475)
!9477 = !DILocation(line: 2720, column: 10, scope: !9467)
!9478 = !DILocation(line: 2720, column: 16, scope: !9467)
!9479 = !DILocation(line: 2720, column: 2, scope: !9467)
!9480 = !DILocation(line: 2723, column: 22, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 2720, column: 28)
!9482 = !DILocation(line: 2723, column: 3, scope: !9481)
!9483 = !DILocation(line: 2723, column: 9, scope: !9481)
!9484 = !DILocation(line: 2723, column: 20, scope: !9481)
!9485 = !DILocation(line: 2724, column: 3, scope: !9481)
!9486 = !DILocation(line: 2726, column: 7, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9481, file: !3, line: 2726, column: 7)
!9488 = !DILocation(line: 2726, column: 17, scope: !9487)
!9489 = !DILocation(line: 2726, column: 43, scope: !9487)
!9490 = !DILocation(line: 2727, column: 7, scope: !9487)
!9491 = !DILocation(line: 2727, column: 17, scope: !9487)
!9492 = !DILocation(line: 2726, column: 7, scope: !9481)
!9493 = !DILocation(line: 2728, column: 23, scope: !9487)
!9494 = !DILocation(line: 2728, column: 4, scope: !9487)
!9495 = !DILocation(line: 2728, column: 10, scope: !9487)
!9496 = !DILocation(line: 2728, column: 21, scope: !9487)
!9497 = !DILocation(line: 2730, column: 4, scope: !9487)
!9498 = !DILocation(line: 2730, column: 10, scope: !9487)
!9499 = !DILocation(line: 2730, column: 21, scope: !9487)
!9500 = !DILocation(line: 2731, column: 3, scope: !9481)
!9501 = !DILocation(line: 2734, column: 3, scope: !9481)
!9502 = !DILocation(line: 2736, column: 3, scope: !9481)
!9503 = !DILocation(line: 2738, column: 19, scope: !9467)
!9504 = !DILocation(line: 2738, column: 2, scope: !9467)
!9505 = !DILocation(line: 2740, column: 2, scope: !9467)
!9506 = !DILocation(line: 2741, column: 1, scope: !9467)
!9507 = distinct !DISubprogram(name: "scsi_target_block", scope: !3, file: !3, line: 2791, type: !2104, scopeLine: 2792, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9508 = !DILocalVariable(name: "dev", arg: 1, scope: !9507, file: !3, line: 2791, type: !2081)
!9509 = !DILocation(line: 2791, column: 34, scope: !9507)
!9510 = !DILocation(line: 2793, column: 28, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 2793, column: 6)
!9512 = !DILocation(line: 2793, column: 6, scope: !9511)
!9513 = !DILocation(line: 2793, column: 6, scope: !9507)
!9514 = !DILocalVariable(name: "__mptr", scope: !9515, file: !3, line: 2794, type: !291)
!9515 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 2794, column: 27)
!9516 = !DILocation(line: 2794, column: 27, scope: !9515)
!9517 = !DILocation(line: 2794, column: 27, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9515, file: !3, line: 2794, column: 27)
!9519 = !DILocation(line: 2794, column: 3, scope: !9511)
!9520 = !DILocation(line: 2797, column: 25, scope: !9511)
!9521 = !DILocation(line: 2797, column: 3, scope: !9511)
!9522 = !DILocation(line: 2798, column: 1, scope: !9507)
!9523 = !DILocalVariable(name: "sdev", arg: 1, scope: !5519, file: !3, line: 2771, type: !293)
!9524 = !DILocation(line: 2771, column: 34, scope: !5519)
!9525 = !DILocalVariable(name: "data", arg: 2, scope: !5519, file: !3, line: 2771, type: !291)
!9526 = !DILocation(line: 2771, column: 46, scope: !5519)
!9527 = !DILocalVariable(name: "ret", scope: !5519, file: !3, line: 2773, type: !286)
!9528 = !DILocation(line: 2773, column: 6, scope: !5519)
!9529 = !DILocation(line: 2775, column: 35, scope: !5519)
!9530 = !DILocation(line: 2775, column: 8, scope: !5519)
!9531 = !DILocation(line: 2775, column: 6, scope: !5519)
!9532 = !DILocalVariable(name: "__ret_warn_once", scope: !9533, file: !3, line: 2777, type: !286)
!9533 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 2777, column: 2)
!9534 = !DILocation(line: 2777, column: 2, scope: !9533)
!9535 = !DILocation(line: 2777, column: 2, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 2777, column: 2)
!9537 = !DILocation(line: 0, scope: !9536)
!9538 = !DILocation(line: 2777, column: 2, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 2777, column: 2)
!9540 = !DILocalVariable(name: "__ret_warn_on", scope: !9541, file: !3, line: 2777, type: !286)
!9541 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 2777, column: 2)
!9542 = !DILocation(line: 2777, column: 2, scope: !9541)
!9543 = !DILocation(line: 2777, column: 2, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 2777, column: 2)
!9545 = !DILocation(line: 2777, column: 2, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 2777, column: 2)
!9547 = !DILocation(line: 2777, column: 2, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9546, file: !3, line: 2777, column: 2)
!9549 = !DILocation(line: 2777, column: 2, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9546, file: !3, line: 2777, column: 2)
!9551 = !DILocation(line: 2777, column: 2, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 2777, column: 2)
!9553 = !DILocation(line: 2777, column: 2, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 2777, column: 2)
!9555 = !{i32 -2140897641, i32 -2140897612, i32 -2140897566, i32 -2140897508, i32 -2140897454, i32 -2140897400, i32 -2140897345, i32 -2140897314}
!9556 = !DILocation(line: 2777, column: 2, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 2777, column: 2)
!9558 = !{i32 -2140896897, i32 -2140896890, i32 -2140896838, i32 -2140896807, i32 -2140896777}
!9559 = !DILocation(line: 2777, column: 2, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 2777, column: 2)
!9561 = !DILocation(line: 2777, column: 2, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9546, file: !3, line: 2777, column: 2)
!9563 = !DILocation(line: 2779, column: 1, scope: !5519)
!9564 = distinct !DISubprogram(name: "target_block", scope: !3, file: !3, line: 2782, type: !9565, scopeLine: 2783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9565 = !DISubroutineType(types: !9566)
!9566 = !{!286, !2081, !291}
!9567 = !DILocalVariable(name: "dev", arg: 1, scope: !9564, file: !3, line: 2782, type: !2081)
!9568 = !DILocation(line: 2782, column: 29, scope: !9564)
!9569 = !DILocalVariable(name: "data", arg: 2, scope: !9564, file: !3, line: 2782, type: !291)
!9570 = !DILocation(line: 2782, column: 40, scope: !9564)
!9571 = !DILocation(line: 2784, column: 28, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 2784, column: 6)
!9573 = !DILocation(line: 2784, column: 6, scope: !9572)
!9574 = !DILocation(line: 2784, column: 6, scope: !9564)
!9575 = !DILocalVariable(name: "__mptr", scope: !9576, file: !3, line: 2785, type: !291)
!9576 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 2785, column: 27)
!9577 = !DILocation(line: 2785, column: 27, scope: !9576)
!9578 = !DILocation(line: 2785, column: 27, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9576, file: !3, line: 2785, column: 27)
!9580 = !DILocation(line: 2785, column: 3, scope: !9572)
!9581 = !DILocation(line: 2787, column: 2, scope: !9564)
!9582 = distinct !DISubprogram(name: "scsi_target_unblock", scope: !3, file: !3, line: 2817, type: !9583, scopeLine: 2818, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9583 = !DISubroutineType(types: !9584)
!9584 = !{null, !2081, !135}
!9585 = !DILocalVariable(name: "dev", arg: 1, scope: !9582, file: !3, line: 2817, type: !2081)
!9586 = !DILocation(line: 2817, column: 36, scope: !9582)
!9587 = !DILocalVariable(name: "new_state", arg: 2, scope: !9582, file: !3, line: 2817, type: !135)
!9588 = !DILocation(line: 2817, column: 64, scope: !9582)
!9589 = !DILocation(line: 2819, column: 28, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9582, file: !3, line: 2819, column: 6)
!9591 = !DILocation(line: 2819, column: 6, scope: !9590)
!9592 = !DILocation(line: 2819, column: 6, scope: !9582)
!9593 = !DILocalVariable(name: "__mptr", scope: !9594, file: !3, line: 2820, type: !291)
!9594 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 2820, column: 27)
!9595 = !DILocation(line: 2820, column: 27, scope: !9594)
!9596 = !DILocation(line: 2820, column: 27, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 2820, column: 27)
!9598 = !DILocation(line: 2820, column: 48, scope: !9590)
!9599 = !DILocation(line: 2820, column: 3, scope: !9590)
!9600 = !DILocation(line: 2823, column: 25, scope: !9590)
!9601 = !DILocation(line: 2823, column: 30, scope: !9590)
!9602 = !DILocation(line: 2823, column: 3, scope: !9590)
!9603 = !DILocation(line: 2824, column: 1, scope: !9582)
!9604 = distinct !DISubprogram(name: "device_unblock", scope: !3, file: !3, line: 2802, type: !5520, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9605 = !DILocalVariable(name: "sdev", arg: 1, scope: !9604, file: !3, line: 2802, type: !293)
!9606 = !DILocation(line: 2802, column: 36, scope: !9604)
!9607 = !DILocalVariable(name: "data", arg: 2, scope: !9604, file: !3, line: 2802, type: !291)
!9608 = !DILocation(line: 2802, column: 48, scope: !9604)
!9609 = !DILocation(line: 2804, column: 31, scope: !9604)
!9610 = !DILocation(line: 2804, column: 64, scope: !9604)
!9611 = !DILocation(line: 2804, column: 38, scope: !9604)
!9612 = !DILocation(line: 2804, column: 37, scope: !9604)
!9613 = !DILocation(line: 2804, column: 2, scope: !9604)
!9614 = !DILocation(line: 2805, column: 1, scope: !9604)
!9615 = distinct !DISubprogram(name: "target_unblock", scope: !3, file: !3, line: 2808, type: !9565, scopeLine: 2809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9616 = !DILocalVariable(name: "dev", arg: 1, scope: !9615, file: !3, line: 2808, type: !2081)
!9617 = !DILocation(line: 2808, column: 31, scope: !9615)
!9618 = !DILocalVariable(name: "data", arg: 2, scope: !9615, file: !3, line: 2808, type: !291)
!9619 = !DILocation(line: 2808, column: 42, scope: !9615)
!9620 = !DILocation(line: 2810, column: 28, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 2810, column: 6)
!9622 = !DILocation(line: 2810, column: 6, scope: !9621)
!9623 = !DILocation(line: 2810, column: 6, scope: !9615)
!9624 = !DILocalVariable(name: "__mptr", scope: !9625, file: !3, line: 2811, type: !291)
!9625 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 2811, column: 27)
!9626 = !DILocation(line: 2811, column: 27, scope: !9625)
!9627 = !DILocation(line: 2811, column: 27, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 2811, column: 27)
!9629 = !DILocation(line: 2811, column: 48, scope: !9621)
!9630 = !DILocation(line: 2811, column: 3, scope: !9621)
!9631 = !DILocation(line: 2813, column: 2, scope: !9615)
!9632 = distinct !DISubprogram(name: "scsi_host_block", scope: !3, file: !3, line: 2828, type: !4972, scopeLine: 2829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9633 = !DILocalVariable(name: "shost", arg: 1, scope: !9632, file: !3, line: 2828, type: !297)
!9634 = !DILocation(line: 2828, column: 35, scope: !9632)
!9635 = !DILocalVariable(name: "sdev", scope: !9632, file: !3, line: 2830, type: !293)
!9636 = !DILocation(line: 2830, column: 22, scope: !9632)
!9637 = !DILocalVariable(name: "ret", scope: !9632, file: !3, line: 2831, type: !286)
!9638 = !DILocation(line: 2831, column: 6, scope: !9632)
!9639 = !DILocation(line: 2837, column: 2, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 2837, column: 2)
!9641 = !DILocation(line: 2837, column: 2, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 2837, column: 2)
!9643 = !DILocation(line: 2838, column: 15, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 2837, column: 37)
!9645 = !DILocation(line: 2838, column: 21, scope: !9644)
!9646 = !DILocation(line: 2838, column: 3, scope: !9644)
!9647 = !DILocation(line: 2839, column: 43, scope: !9644)
!9648 = !DILocation(line: 2839, column: 9, scope: !9644)
!9649 = !DILocation(line: 2839, column: 7, scope: !9644)
!9650 = !DILocation(line: 2840, column: 17, scope: !9644)
!9651 = !DILocation(line: 2840, column: 23, scope: !9644)
!9652 = !DILocation(line: 2840, column: 3, scope: !9644)
!9653 = !DILocation(line: 2841, column: 7, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 2841, column: 7)
!9655 = !DILocation(line: 2841, column: 7, scope: !9644)
!9656 = !DILocation(line: 2842, column: 20, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 2841, column: 12)
!9658 = !DILocation(line: 2842, column: 4, scope: !9657)
!9659 = !DILocation(line: 2843, column: 4, scope: !9657)
!9660 = !DILocation(line: 2845, column: 2, scope: !9644)
!9661 = distinct !{!9661, !9639, !9662}
!9662 = !DILocation(line: 2845, column: 2, scope: !9640)
!9663 = !DILocalVariable(name: "__ret_warn_on", scope: !9664, file: !3, line: 2851, type: !286)
!9664 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 2851, column: 2)
!9665 = !DILocation(line: 2851, column: 2, scope: !9664)
!9666 = !DILocation(line: 2851, column: 2, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 2851, column: 2)
!9668 = !DILocation(line: 2851, column: 2, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 2851, column: 2)
!9670 = !DILocation(line: 2851, column: 2, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 2851, column: 2)
!9672 = !DILocation(line: 2851, column: 2, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 2851, column: 2)
!9674 = !{i32 -2140889729, i32 -2140889700, i32 -2140889654, i32 -2140889596, i32 -2140889542, i32 -2140889488, i32 -2140889433, i32 -2140889402}
!9675 = !DILocation(line: 2851, column: 2, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 2851, column: 2)
!9677 = !{i32 -2140888985, i32 -2140888978, i32 -2140888926, i32 -2140888895, i32 -2140888865}
!9678 = !DILocation(line: 2851, column: 2, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 2851, column: 2)
!9680 = !DILocation(line: 2853, column: 7, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 2853, column: 6)
!9682 = !DILocation(line: 2853, column: 6, scope: !9632)
!9683 = !DILocation(line: 2854, column: 3, scope: !9681)
!9684 = !DILocation(line: 2856, column: 9, scope: !9632)
!9685 = !DILocation(line: 2856, column: 2, scope: !9632)
!9686 = distinct !DISubprogram(name: "scsi_host_unblock", scope: !3, file: !3, line: 2861, type: !4997, scopeLine: 2862, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9687 = !DILocalVariable(name: "shost", arg: 1, scope: !9686, file: !3, line: 2861, type: !297)
!9688 = !DILocation(line: 2861, column: 37, scope: !9686)
!9689 = !DILocalVariable(name: "new_state", arg: 2, scope: !9686, file: !3, line: 2861, type: !286)
!9690 = !DILocation(line: 2861, column: 48, scope: !9686)
!9691 = !DILocalVariable(name: "sdev", scope: !9686, file: !3, line: 2863, type: !293)
!9692 = !DILocation(line: 2863, column: 22, scope: !9686)
!9693 = !DILocalVariable(name: "ret", scope: !9686, file: !3, line: 2864, type: !286)
!9694 = !DILocation(line: 2864, column: 6, scope: !9686)
!9695 = !DILocation(line: 2866, column: 2, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 2866, column: 2)
!9697 = !DILocation(line: 2866, column: 2, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 2866, column: 2)
!9699 = !DILocation(line: 2867, column: 38, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9698, file: !3, line: 2866, column: 37)
!9701 = !DILocation(line: 2867, column: 44, scope: !9700)
!9702 = !DILocation(line: 2867, column: 9, scope: !9700)
!9703 = !DILocation(line: 2867, column: 7, scope: !9700)
!9704 = !DILocation(line: 2868, column: 7, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 2868, column: 7)
!9706 = !DILocation(line: 2868, column: 7, scope: !9700)
!9707 = !DILocation(line: 2869, column: 20, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9705, file: !3, line: 2868, column: 12)
!9709 = !DILocation(line: 2869, column: 4, scope: !9708)
!9710 = !DILocation(line: 2870, column: 4, scope: !9708)
!9711 = !DILocation(line: 2872, column: 2, scope: !9700)
!9712 = distinct !{!9712, !9695, !9713}
!9713 = !DILocation(line: 2872, column: 2, scope: !9696)
!9714 = !DILocation(line: 2873, column: 9, scope: !9686)
!9715 = !DILocation(line: 2873, column: 2, scope: !9686)
!9716 = distinct !DISubprogram(name: "scsi_internal_device_unblock", scope: !3, file: !3, line: 2758, type: !8608, scopeLine: 2760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9717 = !DILocalVariable(name: "sdev", arg: 1, scope: !9716, file: !3, line: 2758, type: !293)
!9718 = !DILocation(line: 2758, column: 61, scope: !9716)
!9719 = !DILocalVariable(name: "new_state", arg: 2, scope: !9716, file: !3, line: 2759, type: !135)
!9720 = !DILocation(line: 2759, column: 29, scope: !9716)
!9721 = !DILocalVariable(name: "ret", scope: !9716, file: !3, line: 2761, type: !286)
!9722 = !DILocation(line: 2761, column: 6, scope: !9716)
!9723 = !DILocation(line: 2763, column: 14, scope: !9716)
!9724 = !DILocation(line: 2763, column: 20, scope: !9716)
!9725 = !DILocation(line: 2763, column: 2, scope: !9716)
!9726 = !DILocation(line: 2764, column: 44, scope: !9716)
!9727 = !DILocation(line: 2764, column: 50, scope: !9716)
!9728 = !DILocation(line: 2764, column: 8, scope: !9716)
!9729 = !DILocation(line: 2764, column: 6, scope: !9716)
!9730 = !DILocation(line: 2765, column: 16, scope: !9716)
!9731 = !DILocation(line: 2765, column: 22, scope: !9716)
!9732 = !DILocation(line: 2765, column: 2, scope: !9716)
!9733 = !DILocation(line: 2767, column: 9, scope: !9716)
!9734 = !DILocation(line: 2767, column: 2, scope: !9716)
!9735 = distinct !DISubprogram(name: "scsi_kmap_atomic_sg", scope: !3, file: !3, line: 2886, type: !9736, scopeLine: 2888, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9736 = !DISubroutineType(types: !9737)
!9737 = !{!291, !5333, !286, !9738, !9738}
!9738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!9739 = !DILocalVariable(name: "flags", arg: 1, scope: !9740, file: !9741, line: 162, type: !356)
!9740 = distinct !DISubprogram(name: "arch_irqs_disabled_flags", scope: !9741, file: !9741, line: 162, type: !9742, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9741 = !DIFile(filename: "./arch/x86/include/asm/irqflags.h", directory: "/home/lizy2001/genbc/linux")
!9742 = !DISubroutineType(types: !9743)
!9743 = !{!286, !356}
!9744 = !DILocation(line: 162, column: 67, scope: !9740, inlinedAt: !9745)
!9745 = distinct !DILocation(line: 2894, column: 2, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 2894, column: 2)
!9747 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 2894, column: 2)
!9748 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 2894, column: 2)
!9749 = !DILocalVariable(name: "sgl", arg: 1, scope: !9735, file: !3, line: 2886, type: !5333)
!9750 = !DILocation(line: 2886, column: 47, scope: !9735)
!9751 = !DILocalVariable(name: "sg_count", arg: 2, scope: !9735, file: !3, line: 2886, type: !286)
!9752 = !DILocation(line: 2886, column: 56, scope: !9735)
!9753 = !DILocalVariable(name: "offset", arg: 3, scope: !9735, file: !3, line: 2887, type: !9738)
!9754 = !DILocation(line: 2887, column: 14, scope: !9735)
!9755 = !DILocalVariable(name: "len", arg: 4, scope: !9735, file: !3, line: 2887, type: !9738)
!9756 = !DILocation(line: 2887, column: 30, scope: !9735)
!9757 = !DILocalVariable(name: "i", scope: !9735, file: !3, line: 2889, type: !286)
!9758 = !DILocation(line: 2889, column: 6, scope: !9735)
!9759 = !DILocalVariable(name: "sg_len", scope: !9735, file: !3, line: 2890, type: !928)
!9760 = !DILocation(line: 2890, column: 9, scope: !9735)
!9761 = !DILocalVariable(name: "len_complete", scope: !9735, file: !3, line: 2890, type: !928)
!9762 = !DILocation(line: 2890, column: 21, scope: !9735)
!9763 = !DILocalVariable(name: "sg", scope: !9735, file: !3, line: 2891, type: !5333)
!9764 = !DILocation(line: 2891, column: 22, scope: !9735)
!9765 = !DILocalVariable(name: "page", scope: !9735, file: !3, line: 2892, type: !629)
!9766 = !DILocation(line: 2892, column: 15, scope: !9735)
!9767 = !DILocalVariable(name: "__ret_warn_on", scope: !9748, file: !3, line: 2894, type: !286)
!9768 = !DILocation(line: 2894, column: 2, scope: !9748)
!9769 = !DILocalVariable(name: "_flags", scope: !9747, file: !3, line: 2894, type: !356)
!9770 = !DILocation(line: 2894, column: 2, scope: !9747)
!9771 = !DILocalVariable(name: "__dummy", scope: !9772, file: !3, line: 2894, type: !356)
!9772 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 2894, column: 2)
!9773 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 2894, column: 2)
!9774 = !DILocation(line: 2894, column: 2, scope: !9772)
!9775 = !DILocalVariable(name: "__dummy2", scope: !9772, file: !3, line: 2894, type: !356)
!9776 = !DILocation(line: 2894, column: 2, scope: !9773)
!9777 = !DILocalVariable(name: "__dummy", scope: !9778, file: !3, line: 2894, type: !356)
!9778 = distinct !DILexicalBlock(scope: !9746, file: !3, line: 2894, column: 2)
!9779 = !DILocation(line: 2894, column: 2, scope: !9778)
!9780 = !DILocalVariable(name: "__dummy2", scope: !9778, file: !3, line: 2894, type: !356)
!9781 = !DILocation(line: 2894, column: 2, scope: !9746)
!9782 = !DILocation(line: 164, column: 11, scope: !9740, inlinedAt: !9745)
!9783 = !DILocation(line: 164, column: 17, scope: !9740, inlinedAt: !9745)
!9784 = !DILocation(line: 164, column: 9, scope: !9740, inlinedAt: !9745)
!9785 = !DILocation(line: 2894, column: 2, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 2894, column: 2)
!9787 = !DILocation(line: 2894, column: 2, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 2894, column: 2)
!9789 = !DILocation(line: 2894, column: 2, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 2894, column: 2)
!9791 = !DILocation(line: 2894, column: 2, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 2894, column: 2)
!9793 = !{i32 -2140887021, i32 -2140886992, i32 -2140886946, i32 -2140886888, i32 -2140886834, i32 -2140886780, i32 -2140886725, i32 -2140886694}
!9794 = !DILocation(line: 2894, column: 2, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 2894, column: 2)
!9796 = !{i32 -2140886288, i32 -2140886281, i32 -2140886229, i32 -2140886198, i32 -2140886168}
!9797 = !DILocation(line: 2894, column: 2, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 2894, column: 2)
!9799 = !DILocation(line: 2896, column: 2, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 2896, column: 2)
!9801 = !DILocation(line: 2896, column: 2, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 2896, column: 2)
!9803 = !DILocation(line: 2897, column: 18, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 2896, column: 36)
!9805 = !DILocation(line: 2897, column: 16, scope: !9804)
!9806 = !DILocation(line: 2898, column: 13, scope: !9804)
!9807 = !DILocation(line: 2898, column: 17, scope: !9804)
!9808 = !DILocation(line: 2898, column: 10, scope: !9804)
!9809 = !DILocation(line: 2899, column: 7, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 2899, column: 7)
!9811 = !DILocation(line: 2899, column: 17, scope: !9810)
!9812 = !DILocation(line: 2899, column: 16, scope: !9810)
!9813 = !DILocation(line: 2899, column: 14, scope: !9810)
!9814 = !DILocation(line: 2899, column: 7, scope: !9804)
!9815 = !DILocation(line: 2900, column: 4, scope: !9810)
!9816 = !DILocation(line: 2901, column: 2, scope: !9804)
!9817 = distinct !{!9817, !9799, !9818}
!9818 = !DILocation(line: 2901, column: 2, scope: !9800)
!9819 = !DILocation(line: 2903, column: 6, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 2903, column: 6)
!9821 = !DILocation(line: 2903, column: 6, scope: !9735)
!9822 = !DILocation(line: 2906, column: 20, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 2903, column: 31)
!9824 = !DILocation(line: 2906, column: 29, scope: !9823)
!9825 = !DILocation(line: 2906, column: 28, scope: !9823)
!9826 = !DILocation(line: 2906, column: 37, scope: !9823)
!9827 = !DILocation(line: 2904, column: 3, scope: !9823)
!9828 = !DILocalVariable(name: "__ret_warn_on", scope: !9829, file: !3, line: 2907, type: !286)
!9829 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 2907, column: 3)
!9830 = !DILocation(line: 2907, column: 3, scope: !9829)
!9831 = !DILocation(line: 2907, column: 3, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 2907, column: 3)
!9833 = !DILocation(line: 2907, column: 3, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 2907, column: 3)
!9835 = !DILocation(line: 2907, column: 3, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 2907, column: 3)
!9837 = !DILocation(line: 2907, column: 3, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 2907, column: 3)
!9839 = !{i32 -2140885440, i32 -2140885411, i32 -2140885365, i32 -2140885307, i32 -2140885253, i32 -2140885199, i32 -2140885144, i32 -2140885113}
!9840 = !DILocation(line: 2907, column: 3, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 2907, column: 3)
!9842 = !{i32 -2140884707, i32 -2140884700, i32 -2140884648, i32 -2140884617, i32 -2140884587}
!9843 = !DILocation(line: 2907, column: 3, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 2907, column: 3)
!9845 = !DILocation(line: 2908, column: 3, scope: !9823)
!9846 = !DILocation(line: 2912, column: 13, scope: !9735)
!9847 = !DILocation(line: 2912, column: 12, scope: !9735)
!9848 = !DILocation(line: 2912, column: 22, scope: !9735)
!9849 = !DILocation(line: 2912, column: 20, scope: !9735)
!9850 = !DILocation(line: 2912, column: 37, scope: !9735)
!9851 = !DILocation(line: 2912, column: 41, scope: !9735)
!9852 = !DILocation(line: 2912, column: 35, scope: !9735)
!9853 = !DILocation(line: 2912, column: 3, scope: !9735)
!9854 = !DILocation(line: 2912, column: 10, scope: !9735)
!9855 = !DILocation(line: 2915, column: 9, scope: !9735)
!9856 = !DILocation(line: 2915, column: 7, scope: !9735)
!9857 = !DILocation(line: 2916, column: 3, scope: !9735)
!9858 = !DILocation(line: 2916, column: 10, scope: !9735)
!9859 = !DILocation(line: 2919, column: 24, scope: !9735)
!9860 = !DILocation(line: 2919, column: 23, scope: !9735)
!9861 = !DILocation(line: 2919, column: 21, scope: !9735)
!9862 = !DILocation(line: 2919, column: 9, scope: !9735)
!9863 = !DILocation(line: 2920, column: 7, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 2920, column: 6)
!9865 = !DILocation(line: 2920, column: 6, scope: !9864)
!9866 = !DILocation(line: 2920, column: 13, scope: !9864)
!9867 = !DILocation(line: 2920, column: 11, scope: !9864)
!9868 = !DILocation(line: 2920, column: 6, scope: !9735)
!9869 = !DILocation(line: 2921, column: 10, scope: !9864)
!9870 = !DILocation(line: 2921, column: 4, scope: !9864)
!9871 = !DILocation(line: 2921, column: 8, scope: !9864)
!9872 = !DILocation(line: 2921, column: 3, scope: !9864)
!9873 = !DILocation(line: 2923, column: 21, scope: !9735)
!9874 = !DILocation(line: 2923, column: 9, scope: !9735)
!9875 = !DILocation(line: 2923, column: 2, scope: !9735)
!9876 = !DILocation(line: 2924, column: 1, scope: !9735)
!9877 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !8863, file: !8863, line: 646, type: !8864, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9878 = !DILocalVariable(name: "__ret", scope: !9879, file: !8863, line: 648, type: !356)
!9879 = distinct !DILexicalBlock(scope: !9877, file: !8863, line: 648, column: 9)
!9880 = !DILocation(line: 648, column: 9, scope: !9879)
!9881 = !DILocalVariable(name: "__edi", scope: !9879, file: !8863, line: 648, type: !356)
!9882 = !DILocalVariable(name: "__esi", scope: !9879, file: !8863, line: 648, type: !356)
!9883 = !DILocalVariable(name: "__edx", scope: !9879, file: !8863, line: 648, type: !356)
!9884 = !DILocalVariable(name: "__ecx", scope: !9879, file: !8863, line: 648, type: !356)
!9885 = !DILocalVariable(name: "__eax", scope: !9879, file: !8863, line: 648, type: !356)
!9886 = !DILocation(line: 648, column: 9, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !8863, line: 648, column: 9)
!9888 = distinct !DILexicalBlock(scope: !9879, file: !8863, line: 648, column: 9)
!9889 = !{i32 -2145520140, i32 -2145517825, i32 -2145517591, i32 -2145517540, i32 -2145517512, i32 -2145517487, i32 -2145517803, i32 -2145517790, i32 -2145517352, i32 -2145517233, i32 -2145517698, i32 -2145517671, i32 -2145517643, i32 -2145517613}
!9890 = !DILocalVariable(name: "__mask", scope: !9891, file: !8863, line: 648, type: !356)
!9891 = distinct !DILexicalBlock(scope: !9887, file: !8863, line: 648, column: 9)
!9892 = !DILocation(line: 648, column: 9, scope: !9891)
!9893 = !DILocation(line: 648, column: 9, scope: !9888)
!9894 = !DILocation(line: 648, column: 2, scope: !9877)
!9895 = distinct !DISubprogram(name: "sg_page", scope: !5330, file: !5330, line: 124, type: !9896, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9896 = !DISubroutineType(types: !9897)
!9897 = !{!629, !5333}
!9898 = !DILocalVariable(name: "sg", arg: 1, scope: !9895, file: !5330, line: 124, type: !5333)
!9899 = !DILocation(line: 124, column: 56, scope: !9895)
!9900 = !DILocation(line: 129, column: 26, scope: !9895)
!9901 = !DILocation(line: 129, column: 31, scope: !9895)
!9902 = !DILocation(line: 129, column: 41, scope: !9895)
!9903 = !DILocation(line: 129, column: 9, scope: !9895)
!9904 = !DILocation(line: 129, column: 2, scope: !9895)
!9905 = distinct !DISubprogram(name: "kmap_atomic", scope: !9906, file: !9906, line: 154, type: !9907, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9906 = !DIFile(filename: "./include/linux/highmem.h", directory: "/home/lizy2001/genbc/linux")
!9907 = !DISubroutineType(types: !9908)
!9908 = !{!291, !629}
!9909 = !DILocalVariable(name: "page", arg: 1, scope: !9910, file: !116, line: 1514, type: !9913)
!9910 = distinct !DISubprogram(name: "lowmem_page_address", scope: !116, file: !116, line: 1514, type: !9911, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9911 = !DISubroutineType(types: !9912)
!9912 = !{!291, !9913}
!9913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9914, size: 64)
!9914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !630)
!9915 = !DILocation(line: 1514, column: 69, scope: !9910, inlinedAt: !9916)
!9916 = distinct !DILocation(line: 158, column: 9, scope: !9905)
!9917 = !DILocalVariable(name: "page", arg: 1, scope: !9905, file: !9906, line: 154, type: !629)
!9918 = !DILocation(line: 154, column: 46, scope: !9905)
!9919 = !DILocation(line: 156, column: 2, scope: !9905)
!9920 = !{i32 -2142580808}
!9921 = !DILocation(line: 157, column: 2, scope: !9905)
!9922 = !DILocation(line: 158, column: 9, scope: !9905)
!9923 = !DILocation(line: 1516, column: 9, scope: !9910, inlinedAt: !9916)
!9924 = !DILocation(line: 158, column: 2, scope: !9905)
!9925 = distinct !DISubprogram(name: "scsi_kunmap_atomic_sg", scope: !3, file: !3, line: 2931, type: !1924, scopeLine: 2932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9926 = !DILocalVariable(name: "virt", arg: 1, scope: !9925, file: !3, line: 2931, type: !291)
!9927 = !DILocation(line: 2931, column: 34, scope: !9925)
!9928 = !DILocation(line: 2933, column: 2, scope: !9925)
!9929 = !DILocation(line: 2933, column: 2, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9925, file: !3, line: 2933, column: 2)
!9931 = !DILocation(line: 2933, column: 2, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 2933, column: 2)
!9933 = !{i32 -2140882667}
!9934 = !DILocation(line: 2934, column: 1, scope: !9925)
!9935 = distinct !DISubprogram(name: "kunmap_atomic_high", scope: !9906, file: !9906, line: 162, type: !1924, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9936 = !DILocalVariable(name: "addr", arg: 1, scope: !9935, file: !9906, line: 162, type: !291)
!9937 = !DILocation(line: 162, column: 45, scope: !9935)
!9938 = !DILocation(line: 171, column: 1, scope: !9935)
!9939 = distinct !DISubprogram(name: "pagefault_enable", scope: !9940, file: !9940, line: 254, type: !4497, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9940 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!9941 = !DILocation(line: 15, column: 9, scope: !9289, inlinedAt: !9942)
!9942 = distinct !DILocation(line: 234, column: 2, scope: !9943, inlinedAt: !9944)
!9943 = distinct !DISubprogram(name: "pagefault_disabled_dec", scope: !9940, file: !9940, line: 232, type: !4497, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9944 = distinct !DILocation(line: 261, column: 2, scope: !9939)
!9945 = !DILocation(line: 15, column: 9, scope: !9298, inlinedAt: !9942)
!9946 = !DILocation(line: 15, column: 9, scope: !9301, inlinedAt: !9942)
!9947 = !DILocation(line: 260, column: 2, scope: !9939)
!9948 = !{i32 -2143604859}
!9949 = !DILocation(line: 234, column: 11, scope: !9943, inlinedAt: !9944)
!9950 = !DILocation(line: 234, column: 29, scope: !9943, inlinedAt: !9944)
!9951 = !DILocation(line: 262, column: 1, scope: !9939)
!9952 = distinct !DISubprogram(name: "sdev_disable_disk_events", scope: !3, file: !3, line: 2937, type: !4925, scopeLine: 2938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9953 = !DILocalVariable(name: "v", arg: 1, scope: !9954, file: !5783, line: 93, type: !5786)
!9954 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !5783, file: !5783, line: 93, type: !5784, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9955 = !DILocation(line: 93, column: 55, scope: !9954, inlinedAt: !9956)
!9956 = distinct !DILocation(line: 241, column: 2, scope: !9957, inlinedAt: !9958)
!9957 = distinct !DISubprogram(name: "atomic_inc", scope: !5790, file: !5790, line: 238, type: !5784, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9958 = distinct !DILocation(line: 2939, column: 2, scope: !9952)
!9959 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !9960)
!9960 = distinct !DILocation(line: 240, column: 2, scope: !9957, inlinedAt: !9958)
!9961 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !9960)
!9962 = !DILocalVariable(name: "v", arg: 1, scope: !9957, file: !5790, line: 238, type: !5786)
!9963 = !DILocation(line: 238, column: 22, scope: !9957, inlinedAt: !9958)
!9964 = !DILocalVariable(name: "sdev", arg: 1, scope: !9952, file: !3, line: 2937, type: !293)
!9965 = !DILocation(line: 2937, column: 51, scope: !9952)
!9966 = !DILocation(line: 2939, column: 14, scope: !9952)
!9967 = !DILocation(line: 2939, column: 20, scope: !9952)
!9968 = !DILocation(line: 240, column: 31, scope: !9957, inlinedAt: !9958)
!9969 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !9960)
!9970 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !9960)
!9971 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !9960)
!9972 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !9960)
!9973 = !DILocation(line: 241, column: 18, scope: !9957, inlinedAt: !9958)
!9974 = !DILocation(line: 96, column: 16, scope: !9954, inlinedAt: !9956)
!9975 = !DILocation(line: 96, column: 19, scope: !9954, inlinedAt: !9956)
!9976 = !DILocation(line: 95, column: 2, scope: !9954, inlinedAt: !9956)
!9977 = !{i32 -2146275352}
!9978 = !DILocation(line: 2940, column: 1, scope: !9952)
!9979 = distinct !DISubprogram(name: "sdev_enable_disk_events", scope: !3, file: !3, line: 2943, type: !4925, scopeLine: 2944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9980 = !DILocation(line: 106, column: 55, scope: !5782, inlinedAt: !9981)
!9981 = distinct !DILocation(line: 331, column: 2, scope: !5789, inlinedAt: !9982)
!9982 = distinct !DILocation(line: 2947, column: 2, scope: !9979)
!9983 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !9984)
!9984 = distinct !DILocation(line: 330, column: 2, scope: !5789, inlinedAt: !9982)
!9985 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !9984)
!9986 = !DILocation(line: 328, column: 22, scope: !5789, inlinedAt: !9982)
!9987 = !DILocalVariable(name: "v", arg: 1, scope: !9988, file: !5783, line: 23, type: !9991)
!9988 = distinct !DISubprogram(name: "arch_atomic_read", scope: !5783, file: !5783, line: 23, type: !9989, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{!286, !9991}
!9991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9992, size: 64)
!9992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!9993 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !9994)
!9994 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !9996)
!9995 = distinct !DISubprogram(name: "atomic_read", scope: !5790, file: !5790, line: 25, type: !9989, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!9996 = distinct !DILocation(line: 2945, column: 6, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2945, column: 6)
!9998 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 2945, column: 6)
!9999 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !10000)
!10000 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !9996)
!10001 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !10000)
!10002 = !DILocalVariable(name: "v", arg: 1, scope: !9995, file: !5790, line: 25, type: !9991)
!10003 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !9996)
!10004 = !DILocalVariable(name: "sdev", arg: 1, scope: !9979, file: !3, line: 2943, type: !293)
!10005 = !DILocation(line: 2943, column: 50, scope: !9979)
!10006 = !DILocalVariable(name: "__ret_warn_on", scope: !9997, file: !3, line: 2945, type: !286)
!10007 = !DILocation(line: 2945, column: 6, scope: !9997)
!10008 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !9996)
!10009 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !10000)
!10010 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !10000)
!10011 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !10000)
!10012 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !10000)
!10013 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !9996)
!10014 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !9994)
!10015 = !DILocation(line: 2945, column: 6, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 2945, column: 6)
!10017 = !DILocation(line: 2945, column: 6, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 2945, column: 6)
!10019 = !DILocation(line: 2945, column: 6, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 2945, column: 6)
!10021 = !DILocation(line: 2945, column: 6, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 2945, column: 6)
!10023 = !{i32 -2140881863, i32 -2140881834, i32 -2140881788, i32 -2140881730, i32 -2140881676, i32 -2140881622, i32 -2140881567, i32 -2140881536}
!10024 = !DILocation(line: 2945, column: 6, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 2945, column: 6)
!10026 = !{i32 -2140881119, i32 -2140881112, i32 -2140881060, i32 -2140881029, i32 -2140880999}
!10027 = !DILocation(line: 2945, column: 6, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 2945, column: 6)
!10029 = !DILocation(line: 2945, column: 6, scope: !9998)
!10030 = !DILocation(line: 2945, column: 6, scope: !9979)
!10031 = !DILocation(line: 2946, column: 3, scope: !9998)
!10032 = !DILocation(line: 2947, column: 14, scope: !9979)
!10033 = !DILocation(line: 2947, column: 20, scope: !9979)
!10034 = !DILocation(line: 330, column: 31, scope: !5789, inlinedAt: !9982)
!10035 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !9984)
!10036 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !9984)
!10037 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !9984)
!10038 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !9984)
!10039 = !DILocation(line: 331, column: 18, scope: !5789, inlinedAt: !9982)
!10040 = !DILocation(line: 109, column: 16, scope: !5782, inlinedAt: !9981)
!10041 = !DILocation(line: 109, column: 19, scope: !5782, inlinedAt: !9981)
!10042 = !DILocation(line: 108, column: 2, scope: !5782, inlinedAt: !9981)
!10043 = !DILocation(line: 2948, column: 1, scope: !9979)
!10044 = distinct !DISubprogram(name: "scsi_vpd_lun_id", scope: !3, file: !3, line: 2965, type: !10045, scopeLine: 2966, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10045 = !DISubroutineType(types: !10046)
!10046 = !{!286, !293, !774, !928}
!10047 = !DILocalVariable(name: "sdev", arg: 1, scope: !10044, file: !3, line: 2965, type: !293)
!10048 = !DILocation(line: 2965, column: 41, scope: !10044)
!10049 = !DILocalVariable(name: "id", arg: 2, scope: !10044, file: !3, line: 2965, type: !774)
!10050 = !DILocation(line: 2965, column: 53, scope: !10044)
!10051 = !DILocalVariable(name: "id_len", arg: 3, scope: !10044, file: !3, line: 2965, type: !928)
!10052 = !DILocation(line: 2965, column: 64, scope: !10044)
!10053 = !DILocalVariable(name: "cur_id_type", scope: !10044, file: !3, line: 2967, type: !514)
!10054 = !DILocation(line: 2967, column: 5, scope: !10044)
!10055 = !DILocalVariable(name: "cur_id_size", scope: !10044, file: !3, line: 2968, type: !514)
!10056 = !DILocation(line: 2968, column: 5, scope: !10044)
!10057 = !DILocalVariable(name: "d", scope: !10044, file: !3, line: 2969, type: !708)
!10058 = !DILocation(line: 2969, column: 23, scope: !10044)
!10059 = !DILocalVariable(name: "cur_id_str", scope: !10044, file: !3, line: 2969, type: !708)
!10060 = !DILocation(line: 2969, column: 27, scope: !10044)
!10061 = !DILocalVariable(name: "vpd_pg83", scope: !10044, file: !3, line: 2970, type: !10062)
!10062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10063, size: 64)
!10063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5183)
!10064 = !DILocation(line: 2970, column: 25, scope: !10044)
!10065 = !DILocalVariable(name: "id_size", scope: !10044, file: !3, line: 2971, type: !286)
!10066 = !DILocation(line: 2971, column: 6, scope: !10044)
!10067 = !DILocation(line: 639, column: 2, scope: !5902, inlinedAt: !10068)
!10068 = distinct !DILocation(line: 2973, column: 2, scope: !10044)
!10069 = !DILocalVariable(name: "________p1", scope: !10070, file: !3, line: 2974, type: !5182)
!10070 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 2974, column: 13)
!10071 = !DILocation(line: 2974, column: 13, scope: !10070)
!10072 = !DILocation(line: 2974, column: 13, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 2974, column: 13)
!10074 = !DILocation(line: 2974, column: 13, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10073, file: !3, line: 2974, column: 13)
!10076 = !DILocation(line: 2974, column: 13, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 2974, column: 13)
!10078 = !DILocation(line: 2974, column: 11, scope: !10044)
!10079 = !DILocation(line: 2975, column: 7, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 2975, column: 6)
!10081 = !DILocation(line: 2975, column: 6, scope: !10044)
!10082 = !DILocation(line: 2976, column: 3, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 2975, column: 17)
!10084 = !DILocation(line: 2977, column: 3, scope: !10083)
!10085 = !DILocation(line: 2995, column: 6, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 2995, column: 6)
!10087 = !DILocation(line: 2995, column: 13, scope: !10086)
!10088 = !DILocation(line: 2995, column: 6, scope: !10044)
!10089 = !DILocation(line: 2996, column: 3, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10086, file: !3, line: 2995, column: 19)
!10091 = !DILocation(line: 2997, column: 3, scope: !10090)
!10092 = !DILocation(line: 3000, column: 9, scope: !10044)
!10093 = !DILocation(line: 3000, column: 16, scope: !10044)
!10094 = !DILocation(line: 3000, column: 2, scope: !10044)
!10095 = !DILocation(line: 3001, column: 6, scope: !10044)
!10096 = !DILocation(line: 3001, column: 16, scope: !10044)
!10097 = !DILocation(line: 3001, column: 21, scope: !10044)
!10098 = !DILocation(line: 3001, column: 4, scope: !10044)
!10099 = !DILocation(line: 3002, column: 2, scope: !10044)
!10100 = !DILocation(line: 3002, column: 9, scope: !10044)
!10101 = !DILocation(line: 3002, column: 13, scope: !10044)
!10102 = !DILocation(line: 3002, column: 23, scope: !10044)
!10103 = !DILocation(line: 3002, column: 30, scope: !10044)
!10104 = !DILocation(line: 3002, column: 40, scope: !10044)
!10105 = !DILocation(line: 3002, column: 28, scope: !10044)
!10106 = !DILocation(line: 3002, column: 11, scope: !10044)
!10107 = !DILocation(line: 3004, column: 8, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 3004, column: 7)
!10109 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 3002, column: 45)
!10110 = !DILocation(line: 3004, column: 13, scope: !10108)
!10111 = !DILocation(line: 3004, column: 21, scope: !10108)
!10112 = !DILocation(line: 3004, column: 7, scope: !10109)
!10113 = !DILocation(line: 3005, column: 4, scope: !10108)
!10114 = !DILocation(line: 3007, column: 11, scope: !10109)
!10115 = !DILocation(line: 3007, column: 16, scope: !10109)
!10116 = !DILocation(line: 3007, column: 3, scope: !10109)
!10117 = !DILocation(line: 3010, column: 8, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3010, column: 8)
!10119 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 3007, column: 23)
!10120 = !DILocation(line: 3010, column: 22, scope: !10118)
!10121 = !DILocation(line: 3010, column: 20, scope: !10118)
!10122 = !DILocation(line: 3010, column: 8, scope: !10119)
!10123 = !DILocation(line: 3011, column: 5, scope: !10118)
!10124 = !DILocation(line: 3013, column: 8, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3013, column: 8)
!10126 = !DILocation(line: 3013, column: 20, scope: !10125)
!10127 = !DILocation(line: 3013, column: 27, scope: !10125)
!10128 = !DILocation(line: 3013, column: 30, scope: !10125)
!10129 = !DILocation(line: 3013, column: 42, scope: !10125)
!10130 = !DILocation(line: 3013, column: 8, scope: !10119)
!10131 = !DILocation(line: 3014, column: 5, scope: !10125)
!10132 = !DILocation(line: 3015, column: 18, scope: !10119)
!10133 = !DILocation(line: 3015, column: 16, scope: !10119)
!10134 = !DILocation(line: 3016, column: 8, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3016, column: 8)
!10136 = !DILocation(line: 3016, column: 20, scope: !10135)
!10137 = !DILocation(line: 3016, column: 26, scope: !10135)
!10138 = !DILocation(line: 3016, column: 24, scope: !10135)
!10139 = !DILocation(line: 3016, column: 8, scope: !10119)
!10140 = !DILocation(line: 3017, column: 19, scope: !10135)
!10141 = !DILocation(line: 3017, column: 26, scope: !10135)
!10142 = !DILocation(line: 3017, column: 17, scope: !10135)
!10143 = !DILocation(line: 3017, column: 5, scope: !10135)
!10144 = !DILocation(line: 3018, column: 17, scope: !10119)
!10145 = !DILocation(line: 3018, column: 19, scope: !10119)
!10146 = !DILocation(line: 3018, column: 15, scope: !10119)
!10147 = !DILocation(line: 3019, column: 18, scope: !10119)
!10148 = !DILocation(line: 3019, column: 23, scope: !10119)
!10149 = !DILocation(line: 3019, column: 16, scope: !10119)
!10150 = !DILocation(line: 3020, column: 23, scope: !10119)
!10151 = !DILocation(line: 3020, column: 27, scope: !10119)
!10152 = !DILocation(line: 3021, column: 9, scope: !10119)
!10153 = !DILocation(line: 3021, column: 22, scope: !10119)
!10154 = !DILocation(line: 3020, column: 14, scope: !10119)
!10155 = !DILocation(line: 3020, column: 12, scope: !10119)
!10156 = !DILocation(line: 3022, column: 4, scope: !10119)
!10157 = !DILocation(line: 3025, column: 8, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3025, column: 8)
!10159 = !DILocation(line: 3025, column: 22, scope: !10158)
!10160 = !DILocation(line: 3025, column: 20, scope: !10158)
!10161 = !DILocation(line: 3025, column: 8, scope: !10119)
!10162 = !DILocation(line: 3026, column: 5, scope: !10158)
!10163 = !DILocation(line: 3028, column: 8, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3028, column: 8)
!10165 = !DILocation(line: 3028, column: 20, scope: !10164)
!10166 = !DILocation(line: 3028, column: 27, scope: !10164)
!10167 = !DILocation(line: 3029, column: 8, scope: !10164)
!10168 = !DILocation(line: 3029, column: 23, scope: !10164)
!10169 = !DILocation(line: 3029, column: 20, scope: !10164)
!10170 = !DILocation(line: 3028, column: 8, scope: !10119)
!10171 = !DILocation(line: 3030, column: 5, scope: !10164)
!10172 = !DILocation(line: 3031, column: 18, scope: !10119)
!10173 = !DILocation(line: 3031, column: 16, scope: !10119)
!10174 = !DILocation(line: 3032, column: 17, scope: !10119)
!10175 = !DILocation(line: 3032, column: 19, scope: !10119)
!10176 = !DILocation(line: 3032, column: 15, scope: !10119)
!10177 = !DILocation(line: 3033, column: 18, scope: !10119)
!10178 = !DILocation(line: 3033, column: 23, scope: !10119)
!10179 = !DILocation(line: 3033, column: 16, scope: !10119)
!10180 = !DILocation(line: 3034, column: 12, scope: !10119)
!10181 = !DILocation(line: 3034, column: 4, scope: !10119)
!10182 = !DILocation(line: 3036, column: 24, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3034, column: 25)
!10184 = !DILocation(line: 3036, column: 28, scope: !10183)
!10185 = !DILocation(line: 3038, column: 10, scope: !10183)
!10186 = !DILocation(line: 3036, column: 15, scope: !10183)
!10187 = !DILocation(line: 3036, column: 13, scope: !10183)
!10188 = !DILocation(line: 3039, column: 5, scope: !10183)
!10189 = !DILocation(line: 3041, column: 24, scope: !10183)
!10190 = !DILocation(line: 3041, column: 28, scope: !10183)
!10191 = !DILocation(line: 3043, column: 10, scope: !10183)
!10192 = !DILocation(line: 3041, column: 15, scope: !10183)
!10193 = !DILocation(line: 3041, column: 13, scope: !10183)
!10194 = !DILocation(line: 3044, column: 5, scope: !10183)
!10195 = !DILocation(line: 3046, column: 24, scope: !10183)
!10196 = !DILocation(line: 3046, column: 28, scope: !10183)
!10197 = !DILocation(line: 3048, column: 10, scope: !10183)
!10198 = !DILocation(line: 3046, column: 15, scope: !10183)
!10199 = !DILocation(line: 3046, column: 13, scope: !10183)
!10200 = !DILocation(line: 3049, column: 5, scope: !10183)
!10201 = !DILocation(line: 3051, column: 17, scope: !10183)
!10202 = !DILocation(line: 3052, column: 5, scope: !10183)
!10203 = !DILocation(line: 3054, column: 4, scope: !10119)
!10204 = !DILocation(line: 3057, column: 8, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3057, column: 8)
!10206 = !DILocation(line: 3057, column: 22, scope: !10205)
!10207 = !DILocation(line: 3057, column: 20, scope: !10205)
!10208 = !DILocation(line: 3057, column: 8, scope: !10119)
!10209 = !DILocation(line: 3058, column: 5, scope: !10205)
!10210 = !DILocation(line: 3059, column: 18, scope: !10119)
!10211 = !DILocation(line: 3059, column: 16, scope: !10119)
!10212 = !DILocation(line: 3060, column: 17, scope: !10119)
!10213 = !DILocation(line: 3060, column: 19, scope: !10119)
!10214 = !DILocation(line: 3060, column: 15, scope: !10119)
!10215 = !DILocation(line: 3061, column: 18, scope: !10119)
!10216 = !DILocation(line: 3061, column: 23, scope: !10119)
!10217 = !DILocation(line: 3061, column: 16, scope: !10119)
!10218 = !DILocation(line: 3062, column: 12, scope: !10119)
!10219 = !DILocation(line: 3062, column: 4, scope: !10119)
!10220 = !DILocation(line: 3064, column: 24, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3062, column: 25)
!10222 = !DILocation(line: 3064, column: 28, scope: !10221)
!10223 = !DILocation(line: 3066, column: 10, scope: !10221)
!10224 = !DILocation(line: 3064, column: 15, scope: !10221)
!10225 = !DILocation(line: 3064, column: 13, scope: !10221)
!10226 = !DILocation(line: 3067, column: 5, scope: !10221)
!10227 = !DILocation(line: 3069, column: 24, scope: !10221)
!10228 = !DILocation(line: 3069, column: 28, scope: !10221)
!10229 = !DILocation(line: 3071, column: 10, scope: !10221)
!10230 = !DILocation(line: 3069, column: 15, scope: !10221)
!10231 = !DILocation(line: 3069, column: 13, scope: !10221)
!10232 = !DILocation(line: 3072, column: 5, scope: !10221)
!10233 = !DILocation(line: 3074, column: 17, scope: !10221)
!10234 = !DILocation(line: 3075, column: 5, scope: !10221)
!10235 = !DILocation(line: 3077, column: 4, scope: !10119)
!10236 = !DILocation(line: 3080, column: 8, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3080, column: 8)
!10238 = !DILocation(line: 3080, column: 20, scope: !10237)
!10239 = !DILocation(line: 3080, column: 26, scope: !10237)
!10240 = !DILocation(line: 3080, column: 24, scope: !10237)
!10241 = !DILocation(line: 3080, column: 8, scope: !10119)
!10242 = !DILocation(line: 3081, column: 5, scope: !10237)
!10243 = !DILocation(line: 3083, column: 8, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3083, column: 8)
!10245 = !DILocation(line: 3083, column: 20, scope: !10244)
!10246 = !DILocation(line: 3083, column: 23, scope: !10244)
!10247 = !DILocation(line: 3083, column: 30, scope: !10244)
!10248 = !DILocation(line: 3083, column: 28, scope: !10244)
!10249 = !DILocation(line: 3083, column: 8, scope: !10119)
!10250 = !DILocation(line: 3084, column: 5, scope: !10244)
!10251 = !DILocation(line: 3085, column: 28, scope: !10119)
!10252 = !DILocation(line: 3085, column: 26, scope: !10119)
!10253 = !DILocation(line: 3085, column: 18, scope: !10119)
!10254 = !DILocation(line: 3085, column: 16, scope: !10119)
!10255 = !DILocation(line: 3086, column: 17, scope: !10119)
!10256 = !DILocation(line: 3086, column: 19, scope: !10119)
!10257 = !DILocation(line: 3086, column: 15, scope: !10119)
!10258 = !DILocation(line: 3087, column: 18, scope: !10119)
!10259 = !DILocation(line: 3087, column: 23, scope: !10119)
!10260 = !DILocation(line: 3087, column: 16, scope: !10119)
!10261 = !DILocation(line: 3088, column: 8, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3088, column: 8)
!10263 = !DILocation(line: 3088, column: 23, scope: !10262)
!10264 = !DILocation(line: 3088, column: 20, scope: !10262)
!10265 = !DILocation(line: 3088, column: 8, scope: !10119)
!10266 = !DILocation(line: 3089, column: 19, scope: !10262)
!10267 = !DILocation(line: 3089, column: 26, scope: !10262)
!10268 = !DILocation(line: 3089, column: 17, scope: !10262)
!10269 = !DILocation(line: 3089, column: 5, scope: !10262)
!10270 = !DILocation(line: 3090, column: 11, scope: !10119)
!10271 = !DILocation(line: 3090, column: 15, scope: !10119)
!10272 = !DILocation(line: 3090, column: 27, scope: !10119)
!10273 = !DILocation(line: 3090, column: 4, scope: !10119)
!10274 = !DILocation(line: 3092, column: 8, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 3092, column: 8)
!10276 = !DILocation(line: 3092, column: 23, scope: !10275)
!10277 = !DILocation(line: 3092, column: 20, scope: !10275)
!10278 = !DILocation(line: 3092, column: 8, scope: !10119)
!10279 = !DILocation(line: 3093, column: 17, scope: !10275)
!10280 = !DILocation(line: 3093, column: 5, scope: !10275)
!10281 = !DILocation(line: 3094, column: 4, scope: !10119)
!10282 = !DILocation(line: 3096, column: 4, scope: !10119)
!10283 = !DILocation(line: 3097, column: 3, scope: !10119)
!10284 = !DILabel(scope: !10109, name: "next_desig", file: !3, line: 3098)
!10285 = !DILocation(line: 3098, column: 1, scope: !10109)
!10286 = !DILocation(line: 3099, column: 8, scope: !10109)
!10287 = !DILocation(line: 3099, column: 13, scope: !10109)
!10288 = !DILocation(line: 3099, column: 5, scope: !10109)
!10289 = distinct !{!10289, !10099, !10290}
!10290 = !DILocation(line: 3100, column: 2, scope: !10044)
!10291 = !DILocation(line: 3101, column: 2, scope: !10044)
!10292 = !DILocation(line: 3103, column: 9, scope: !10044)
!10293 = !DILocation(line: 3103, column: 2, scope: !10044)
!10294 = !DILocation(line: 3104, column: 1, scope: !10044)
!10295 = distinct !DISubprogram(name: "rcu_read_unlock", scope: !5903, file: !5903, line: 689, type: !4497, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10296 = !DILocation(line: 691, column: 2, scope: !10295)
!10297 = !DILocation(line: 691, column: 2, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10295, file: !5903, line: 691, column: 2)
!10299 = !DILocation(line: 694, column: 2, scope: !10295)
!10300 = !DILocation(line: 695, column: 2, scope: !10295)
!10301 = !DILocation(line: 695, column: 2, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10295, file: !5903, line: 695, column: 2)
!10303 = !DILocation(line: 696, column: 1, scope: !10295)
!10304 = distinct !DISubprogram(name: "scsi_vpd_tpg_id", scope: !3, file: !3, line: 3116, type: !10305, scopeLine: 3117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10305 = !DISubroutineType(types: !10306)
!10306 = !{!286, !293, !916}
!10307 = !DILocalVariable(name: "p", arg: 1, scope: !10308, file: !10309, line: 171, type: !10312)
!10308 = distinct !DISubprogram(name: "__swab16p", scope: !10309, file: !10309, line: 171, type: !10310, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10309 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!10310 = !DISubroutineType(types: !10311)
!10311 = !{!1024, !10312}
!10312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10313, size: 64)
!10313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!10314 = !DILocation(line: 171, column: 53, scope: !10308, inlinedAt: !10315)
!10315 = distinct !DILocation(line: 90, column: 9, scope: !10316, inlinedAt: !10322)
!10316 = distinct !DISubprogram(name: "__be16_to_cpup", scope: !10317, file: !10317, line: 88, type: !10318, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10317 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!10318 = !DISubroutineType(types: !10319)
!10319 = !{!1024, !10320}
!10320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10321, size: 64)
!10321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5490)
!10322 = distinct !DILocation(line: 25, column: 9, scope: !10323, inlinedAt: !10327)
!10323 = distinct !DISubprogram(name: "get_unaligned_be16", scope: !10324, file: !10324, line: 23, type: !10325, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10324 = !DIFile(filename: "./include/linux/unaligned/access_ok.h", directory: "/home/lizy2001/genbc/linux")
!10325 = !DISubroutineType(types: !10326)
!10326 = !{!1023, !1914}
!10327 = distinct !DILocation(line: 3138, column: 15, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 3131, column: 23)
!10329 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 3130, column: 45)
!10330 = !DILocalVariable(name: "p", arg: 1, scope: !10316, file: !10317, line: 88, type: !10320)
!10331 = !DILocation(line: 88, column: 59, scope: !10316, inlinedAt: !10322)
!10332 = !DILocalVariable(name: "p", arg: 1, scope: !10323, file: !10324, line: 23, type: !1914)
!10333 = !DILocation(line: 23, column: 59, scope: !10323, inlinedAt: !10327)
!10334 = !DILocation(line: 171, column: 53, scope: !10308, inlinedAt: !10335)
!10335 = distinct !DILocation(line: 90, column: 9, scope: !10316, inlinedAt: !10336)
!10336 = distinct !DILocation(line: 25, column: 9, scope: !10323, inlinedAt: !10337)
!10337 = distinct !DILocation(line: 3134, column: 15, scope: !10328)
!10338 = !DILocation(line: 88, column: 59, scope: !10316, inlinedAt: !10336)
!10339 = !DILocation(line: 23, column: 59, scope: !10323, inlinedAt: !10337)
!10340 = !DILocalVariable(name: "sdev", arg: 1, scope: !10304, file: !3, line: 3116, type: !293)
!10341 = !DILocation(line: 3116, column: 41, scope: !10304)
!10342 = !DILocalVariable(name: "rel_id", arg: 2, scope: !10304, file: !3, line: 3116, type: !916)
!10343 = !DILocation(line: 3116, column: 52, scope: !10304)
!10344 = !DILocalVariable(name: "d", scope: !10304, file: !3, line: 3118, type: !708)
!10345 = !DILocation(line: 3118, column: 23, scope: !10304)
!10346 = !DILocalVariable(name: "vpd_pg83", scope: !10304, file: !3, line: 3119, type: !10062)
!10347 = !DILocation(line: 3119, column: 25, scope: !10304)
!10348 = !DILocalVariable(name: "group_id", scope: !10304, file: !3, line: 3120, type: !286)
!10349 = !DILocation(line: 3120, column: 6, scope: !10304)
!10350 = !DILocalVariable(name: "rel_port", scope: !10304, file: !3, line: 3120, type: !286)
!10351 = !DILocation(line: 3120, column: 26, scope: !10304)
!10352 = !DILocation(line: 639, column: 2, scope: !5902, inlinedAt: !10353)
!10353 = distinct !DILocation(line: 3122, column: 2, scope: !10304)
!10354 = !DILocalVariable(name: "________p1", scope: !10355, file: !3, line: 3123, type: !5182)
!10355 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 3123, column: 13)
!10356 = !DILocation(line: 3123, column: 13, scope: !10355)
!10357 = !DILocation(line: 3123, column: 13, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 3123, column: 13)
!10359 = !DILocation(line: 3123, column: 13, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10358, file: !3, line: 3123, column: 13)
!10361 = !DILocation(line: 3123, column: 13, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 3123, column: 13)
!10363 = !DILocation(line: 3123, column: 11, scope: !10304)
!10364 = !DILocation(line: 3124, column: 7, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 3124, column: 6)
!10366 = !DILocation(line: 3124, column: 6, scope: !10304)
!10367 = !DILocation(line: 3125, column: 3, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 3124, column: 17)
!10369 = !DILocation(line: 3126, column: 3, scope: !10368)
!10370 = !DILocation(line: 3129, column: 6, scope: !10304)
!10371 = !DILocation(line: 3129, column: 16, scope: !10304)
!10372 = !DILocation(line: 3129, column: 21, scope: !10304)
!10373 = !DILocation(line: 3129, column: 4, scope: !10304)
!10374 = !DILocation(line: 3130, column: 2, scope: !10304)
!10375 = !DILocation(line: 3130, column: 9, scope: !10304)
!10376 = !DILocation(line: 3130, column: 13, scope: !10304)
!10377 = !DILocation(line: 3130, column: 23, scope: !10304)
!10378 = !DILocation(line: 3130, column: 30, scope: !10304)
!10379 = !DILocation(line: 3130, column: 40, scope: !10304)
!10380 = !DILocation(line: 3130, column: 28, scope: !10304)
!10381 = !DILocation(line: 3130, column: 11, scope: !10304)
!10382 = !DILocation(line: 3131, column: 11, scope: !10329)
!10383 = !DILocation(line: 3131, column: 16, scope: !10329)
!10384 = !DILocation(line: 3131, column: 3, scope: !10329)
!10385 = !DILocation(line: 3134, column: 35, scope: !10328)
!10386 = !DILocation(line: 25, column: 32, scope: !10323, inlinedAt: !10337)
!10387 = !DILocation(line: 25, column: 22, scope: !10323, inlinedAt: !10337)
!10388 = !DILocation(line: 90, column: 28, scope: !10316, inlinedAt: !10336)
!10389 = !DILocation(line: 176, column: 9, scope: !10308, inlinedAt: !10335)
!10390 = !DILocation(line: 3134, column: 15, scope: !10328)
!10391 = !DILocation(line: 3134, column: 13, scope: !10328)
!10392 = !DILocation(line: 3135, column: 4, scope: !10328)
!10393 = !DILocation(line: 3138, column: 35, scope: !10328)
!10394 = !DILocation(line: 25, column: 32, scope: !10323, inlinedAt: !10327)
!10395 = !DILocation(line: 25, column: 22, scope: !10323, inlinedAt: !10327)
!10396 = !DILocation(line: 90, column: 28, scope: !10316, inlinedAt: !10322)
!10397 = !DILocation(line: 176, column: 9, scope: !10308, inlinedAt: !10315)
!10398 = !DILocation(line: 3138, column: 15, scope: !10328)
!10399 = !DILocation(line: 3138, column: 13, scope: !10328)
!10400 = !DILocation(line: 3139, column: 4, scope: !10328)
!10401 = !DILocation(line: 3141, column: 4, scope: !10328)
!10402 = !DILocation(line: 3143, column: 8, scope: !10329)
!10403 = !DILocation(line: 3143, column: 13, scope: !10329)
!10404 = !DILocation(line: 3143, column: 5, scope: !10329)
!10405 = distinct !{!10405, !10374, !10406}
!10406 = !DILocation(line: 3144, column: 2, scope: !10304)
!10407 = !DILocation(line: 3145, column: 2, scope: !10304)
!10408 = !DILocation(line: 3147, column: 6, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 3147, column: 6)
!10410 = !DILocation(line: 3147, column: 15, scope: !10409)
!10411 = !DILocation(line: 3147, column: 20, scope: !10409)
!10412 = !DILocation(line: 3147, column: 23, scope: !10409)
!10413 = !DILocation(line: 3147, column: 30, scope: !10409)
!10414 = !DILocation(line: 3147, column: 33, scope: !10409)
!10415 = !DILocation(line: 3147, column: 42, scope: !10409)
!10416 = !DILocation(line: 3147, column: 6, scope: !10304)
!10417 = !DILocation(line: 3148, column: 13, scope: !10409)
!10418 = !DILocation(line: 3148, column: 4, scope: !10409)
!10419 = !DILocation(line: 3148, column: 11, scope: !10409)
!10420 = !DILocation(line: 3148, column: 3, scope: !10409)
!10421 = !DILocation(line: 3150, column: 9, scope: !10304)
!10422 = !DILocation(line: 3150, column: 2, scope: !10304)
!10423 = !DILocation(line: 3151, column: 1, scope: !10304)
!10424 = distinct !DISubprogram(name: "scsi_set_blocked", scope: !3, file: !3, line: 119, type: !266, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10425 = !DILocalVariable(name: "v", arg: 1, scope: !10426, file: !5783, line: 39, type: !5786)
!10426 = distinct !DISubprogram(name: "arch_atomic_set", scope: !5783, file: !5783, line: 39, type: !10427, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10427 = !DISubroutineType(types: !10428)
!10428 = !{null, !5786, !286}
!10429 = !DILocation(line: 39, column: 55, scope: !10426, inlinedAt: !10430)
!10430 = distinct !DILocation(line: 46, column: 2, scope: !10431, inlinedAt: !10432)
!10431 = distinct !DISubprogram(name: "atomic_set", scope: !5790, file: !5790, line: 43, type: !10427, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10432 = distinct !DILocation(line: 148, column: 3, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 138, column: 18)
!10434 = !DILocalVariable(name: "i", arg: 2, scope: !10426, file: !5783, line: 39, type: !286)
!10435 = !DILocation(line: 39, column: 62, scope: !10426, inlinedAt: !10430)
!10436 = !DILocalVariable(name: "v", arg: 1, scope: !10437, file: !5794, line: 84, type: !5797)
!10437 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5794, file: !5794, line: 84, type: !5795, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10438 = !DILocation(line: 84, column: 74, scope: !10437, inlinedAt: !10439)
!10439 = distinct !DILocation(line: 45, column: 2, scope: !10431, inlinedAt: !10432)
!10440 = !DILocalVariable(name: "size", arg: 2, scope: !10437, file: !5794, line: 84, type: !928)
!10441 = !DILocation(line: 84, column: 84, scope: !10437, inlinedAt: !10439)
!10442 = !DILocalVariable(name: "v", arg: 1, scope: !10431, file: !5790, line: 43, type: !5786)
!10443 = !DILocation(line: 43, column: 22, scope: !10431, inlinedAt: !10432)
!10444 = !DILocalVariable(name: "i", arg: 2, scope: !10431, file: !5790, line: 43, type: !286)
!10445 = !DILocation(line: 43, column: 29, scope: !10431, inlinedAt: !10432)
!10446 = !DILocation(line: 39, column: 55, scope: !10426, inlinedAt: !10447)
!10447 = distinct !DILocation(line: 46, column: 2, scope: !10431, inlinedAt: !10448)
!10448 = distinct !DILocation(line: 144, column: 3, scope: !10433)
!10449 = !DILocation(line: 39, column: 62, scope: !10426, inlinedAt: !10447)
!10450 = !DILocation(line: 84, column: 74, scope: !10437, inlinedAt: !10451)
!10451 = distinct !DILocation(line: 45, column: 2, scope: !10431, inlinedAt: !10448)
!10452 = !DILocation(line: 84, column: 84, scope: !10437, inlinedAt: !10451)
!10453 = !DILocation(line: 43, column: 22, scope: !10431, inlinedAt: !10448)
!10454 = !DILocation(line: 43, column: 29, scope: !10431, inlinedAt: !10448)
!10455 = !DILocation(line: 39, column: 55, scope: !10426, inlinedAt: !10456)
!10456 = distinct !DILocation(line: 46, column: 2, scope: !10431, inlinedAt: !10457)
!10457 = distinct !DILocation(line: 140, column: 3, scope: !10433)
!10458 = !DILocation(line: 39, column: 62, scope: !10426, inlinedAt: !10456)
!10459 = !DILocation(line: 84, column: 74, scope: !10437, inlinedAt: !10460)
!10460 = distinct !DILocation(line: 45, column: 2, scope: !10431, inlinedAt: !10457)
!10461 = !DILocation(line: 84, column: 84, scope: !10437, inlinedAt: !10460)
!10462 = !DILocation(line: 43, column: 22, scope: !10431, inlinedAt: !10457)
!10463 = !DILocation(line: 43, column: 29, scope: !10431, inlinedAt: !10457)
!10464 = !DILocalVariable(name: "cmd", arg: 1, scope: !10424, file: !3, line: 119, type: !268)
!10465 = !DILocation(line: 119, column: 36, scope: !10424)
!10466 = !DILocalVariable(name: "reason", arg: 2, scope: !10424, file: !3, line: 119, type: !286)
!10467 = !DILocation(line: 119, column: 45, scope: !10424)
!10468 = !DILocalVariable(name: "host", scope: !10424, file: !3, line: 121, type: !297)
!10469 = !DILocation(line: 121, column: 20, scope: !10424)
!10470 = !DILocation(line: 121, column: 27, scope: !10424)
!10471 = !DILocation(line: 121, column: 32, scope: !10424)
!10472 = !DILocation(line: 121, column: 40, scope: !10424)
!10473 = !DILocalVariable(name: "device", scope: !10424, file: !3, line: 122, type: !293)
!10474 = !DILocation(line: 122, column: 22, scope: !10424)
!10475 = !DILocation(line: 122, column: 31, scope: !10424)
!10476 = !DILocation(line: 122, column: 36, scope: !10424)
!10477 = !DILocalVariable(name: "starget", scope: !10424, file: !3, line: 123, type: !4931)
!10478 = !DILocation(line: 123, column: 22, scope: !10424)
!10479 = !DILocation(line: 123, column: 44, scope: !10424)
!10480 = !DILocation(line: 123, column: 32, scope: !10424)
!10481 = !DILocation(line: 138, column: 10, scope: !10424)
!10482 = !DILocation(line: 138, column: 2, scope: !10424)
!10483 = !DILocation(line: 140, column: 15, scope: !10433)
!10484 = !DILocation(line: 140, column: 21, scope: !10433)
!10485 = !DILocation(line: 140, column: 35, scope: !10433)
!10486 = !DILocation(line: 140, column: 41, scope: !10433)
!10487 = !DILocation(line: 45, column: 26, scope: !10431, inlinedAt: !10457)
!10488 = !DILocation(line: 86, column: 20, scope: !10437, inlinedAt: !10460)
!10489 = !DILocation(line: 86, column: 23, scope: !10437, inlinedAt: !10460)
!10490 = !DILocation(line: 86, column: 2, scope: !10437, inlinedAt: !10460)
!10491 = !DILocation(line: 87, column: 2, scope: !10437, inlinedAt: !10460)
!10492 = !DILocation(line: 46, column: 18, scope: !10431, inlinedAt: !10457)
!10493 = !DILocation(line: 46, column: 21, scope: !10431, inlinedAt: !10457)
!10494 = !DILocation(line: 41, column: 2, scope: !10495, inlinedAt: !10456)
!10495 = distinct !DILexicalBlock(scope: !10426, file: !5783, line: 41, column: 2)
!10496 = !DILocation(line: 141, column: 3, scope: !10433)
!10497 = !DILocation(line: 144, column: 15, scope: !10433)
!10498 = !DILocation(line: 144, column: 23, scope: !10433)
!10499 = !DILocation(line: 145, column: 7, scope: !10433)
!10500 = !DILocation(line: 145, column: 15, scope: !10433)
!10501 = !DILocation(line: 45, column: 26, scope: !10431, inlinedAt: !10448)
!10502 = !DILocation(line: 86, column: 20, scope: !10437, inlinedAt: !10451)
!10503 = !DILocation(line: 86, column: 23, scope: !10437, inlinedAt: !10451)
!10504 = !DILocation(line: 86, column: 2, scope: !10437, inlinedAt: !10451)
!10505 = !DILocation(line: 87, column: 2, scope: !10437, inlinedAt: !10451)
!10506 = !DILocation(line: 46, column: 18, scope: !10431, inlinedAt: !10448)
!10507 = !DILocation(line: 46, column: 21, scope: !10431, inlinedAt: !10448)
!10508 = !DILocation(line: 41, column: 2, scope: !10495, inlinedAt: !10447)
!10509 = !DILocation(line: 146, column: 3, scope: !10433)
!10510 = !DILocation(line: 148, column: 15, scope: !10433)
!10511 = !DILocation(line: 148, column: 24, scope: !10433)
!10512 = !DILocation(line: 149, column: 7, scope: !10433)
!10513 = !DILocation(line: 149, column: 16, scope: !10433)
!10514 = !DILocation(line: 45, column: 26, scope: !10431, inlinedAt: !10432)
!10515 = !DILocation(line: 86, column: 20, scope: !10437, inlinedAt: !10439)
!10516 = !DILocation(line: 86, column: 23, scope: !10437, inlinedAt: !10439)
!10517 = !DILocation(line: 86, column: 2, scope: !10437, inlinedAt: !10439)
!10518 = !DILocation(line: 87, column: 2, scope: !10437, inlinedAt: !10439)
!10519 = !DILocation(line: 46, column: 18, scope: !10431, inlinedAt: !10432)
!10520 = !DILocation(line: 46, column: 21, scope: !10431, inlinedAt: !10432)
!10521 = !DILocation(line: 41, column: 2, scope: !10495, inlinedAt: !10430)
!10522 = !DILocation(line: 150, column: 3, scope: !10433)
!10523 = !DILocation(line: 152, column: 1, scope: !10424)
!10524 = distinct !DISubprogram(name: "kasan_check_write", scope: !10525, file: !10525, line: 38, type: !10526, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10525 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10526 = !DISubroutineType(types: !10527)
!10527 = !{!793, !5797, !7}
!10528 = !DILocalVariable(name: "p", arg: 1, scope: !10524, file: !10525, line: 38, type: !5797)
!10529 = !DILocation(line: 38, column: 59, scope: !10524)
!10530 = !DILocalVariable(name: "size", arg: 2, scope: !10524, file: !10525, line: 38, type: !7)
!10531 = !DILocation(line: 38, column: 75, scope: !10524)
!10532 = !DILocation(line: 40, column: 2, scope: !10524)
!10533 = distinct !DISubprogram(name: "kcsan_check_access", scope: !10534, file: !10534, line: 178, type: !10535, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10534 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10535 = !DISubroutineType(types: !10536)
!10536 = !{null, !5797, !928, !286}
!10537 = !DILocalVariable(name: "ptr", arg: 1, scope: !10533, file: !10534, line: 178, type: !5797)
!10538 = !DILocation(line: 178, column: 60, scope: !10533)
!10539 = !DILocalVariable(name: "size", arg: 2, scope: !10533, file: !10534, line: 178, type: !928)
!10540 = !DILocation(line: 178, column: 72, scope: !10533)
!10541 = !DILocalVariable(name: "type", arg: 3, scope: !10533, file: !10534, line: 179, type: !286)
!10542 = !DILocation(line: 179, column: 15, scope: !10533)
!10543 = !DILocation(line: 179, column: 23, scope: !10533)
!10544 = distinct !DISubprogram(name: "blk_mq_rq_to_pdu", scope: !190, file: !190, line: 567, type: !10545, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{!291, !2780}
!10547 = !DILocalVariable(name: "rq", arg: 1, scope: !10544, file: !190, line: 567, type: !2780)
!10548 = !DILocation(line: 567, column: 54, scope: !10544)
!10549 = !DILocation(line: 569, column: 9, scope: !10544)
!10550 = !DILocation(line: 569, column: 12, scope: !10544)
!10551 = !DILocation(line: 569, column: 2, scope: !10544)
!10552 = distinct !DISubprogram(name: "__clear_bit", scope: !7144, file: !7144, line: 40, type: !7221, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10553 = !DILocalVariable(name: "nr", arg: 1, scope: !10554, file: !7149, line: 92, type: !197)
!10554 = distinct !DISubprogram(name: "arch___clear_bit", scope: !7149, file: !7149, line: 92, type: !7221, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10555 = !DILocation(line: 92, column: 23, scope: !10554, inlinedAt: !10556)
!10556 = distinct !DILocation(line: 43, column: 2, scope: !10552)
!10557 = !DILocalVariable(name: "addr", arg: 2, scope: !10554, file: !7149, line: 92, type: !7223)
!10558 = !DILocation(line: 92, column: 51, scope: !10554, inlinedAt: !10556)
!10559 = !DILocation(line: 39, column: 67, scope: !7231, inlinedAt: !10560)
!10560 = distinct !DILocation(line: 42, column: 2, scope: !10552)
!10561 = !DILocation(line: 39, column: 77, scope: !7231, inlinedAt: !10560)
!10562 = !DILocalVariable(name: "nr", arg: 1, scope: !10552, file: !7144, line: 40, type: !197)
!10563 = !DILocation(line: 40, column: 37, scope: !10552)
!10564 = !DILocalVariable(name: "addr", arg: 2, scope: !10552, file: !7144, line: 40, type: !7223)
!10565 = !DILocation(line: 40, column: 65, scope: !10552)
!10566 = !DILocation(line: 42, column: 19, scope: !10552)
!10567 = !DILocation(line: 42, column: 26, scope: !10552)
!10568 = !DILocation(line: 42, column: 24, scope: !10552)
!10569 = !DILocation(line: 41, column: 20, scope: !7231, inlinedAt: !10560)
!10570 = !DILocation(line: 41, column: 23, scope: !7231, inlinedAt: !10560)
!10571 = !DILocation(line: 41, column: 2, scope: !7231, inlinedAt: !10560)
!10572 = !DILocation(line: 42, column: 2, scope: !7231, inlinedAt: !10560)
!10573 = !DILocation(line: 43, column: 19, scope: !10552)
!10574 = !DILocation(line: 43, column: 23, scope: !10552)
!10575 = !DILocation(line: 94, column: 44, scope: !10554, inlinedAt: !10556)
!10576 = !DILocation(line: 94, column: 56, scope: !10554, inlinedAt: !10556)
!10577 = !DILocation(line: 94, column: 2, scope: !10554, inlinedAt: !10556)
!10578 = !{i32 -2146896913}
!10579 = !DILocation(line: 44, column: 1, scope: !10552)
!10580 = distinct !DISubprogram(name: "scsi_host_in_recovery", scope: !154, file: !154, line: 727, type: !4972, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10581 = !DILocalVariable(name: "shost", arg: 1, scope: !10580, file: !154, line: 727, type: !297)
!10582 = !DILocation(line: 727, column: 59, scope: !10580)
!10583 = !DILocation(line: 729, column: 9, scope: !10580)
!10584 = !DILocation(line: 729, column: 16, scope: !10580)
!10585 = !DILocation(line: 729, column: 28, scope: !10580)
!10586 = !DILocation(line: 729, column: 46, scope: !10580)
!10587 = !DILocation(line: 730, column: 3, scope: !10580)
!10588 = !DILocation(line: 730, column: 10, scope: !10580)
!10589 = !DILocation(line: 730, column: 22, scope: !10580)
!10590 = !DILocation(line: 730, column: 47, scope: !10580)
!10591 = !DILocation(line: 731, column: 3, scope: !10580)
!10592 = !DILocation(line: 731, column: 10, scope: !10580)
!10593 = !DILocation(line: 731, column: 22, scope: !10580)
!10594 = !DILocation(line: 731, column: 44, scope: !10580)
!10595 = !DILocation(line: 732, column: 3, scope: !10580)
!10596 = !DILocation(line: 732, column: 10, scope: !10580)
!10597 = !DILocation(line: 729, column: 2, scope: !10580)
!10598 = distinct !DISubprogram(name: "scsi_single_lun_run", scope: !3, file: !3, line: 345, type: !4925, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10599 = !DILocation(line: 327, column: 67, scope: !5884, inlinedAt: !10600)
!10600 = distinct !DILocation(line: 376, column: 3, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10602, file: !3, line: 376, column: 3)
!10602 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 376, column: 3)
!10603 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 376, column: 3)
!10604 = distinct !DILexicalBlock(scope: !10605, file: !3, line: 376, column: 3)
!10605 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 376, column: 3)
!10606 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 368, column: 26)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 367, column: 2)
!10608 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 367, column: 2)
!10609 = !DILocation(line: 407, column: 64, scope: !5873, inlinedAt: !10610)
!10610 = distinct !DILocation(line: 374, column: 3, scope: !10606)
!10611 = !DILocation(line: 407, column: 84, scope: !5873, inlinedAt: !10610)
!10612 = !DILocation(line: 327, column: 67, scope: !5884, inlinedAt: !10613)
!10613 = distinct !DILocation(line: 364, column: 2, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 364, column: 2)
!10615 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 364, column: 2)
!10616 = distinct !DILexicalBlock(scope: !10617, file: !3, line: 364, column: 2)
!10617 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 364, column: 2)
!10618 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 364, column: 2)
!10619 = !DILocation(line: 407, column: 64, scope: !5873, inlinedAt: !10620)
!10620 = distinct !DILocation(line: 354, column: 2, scope: !10598)
!10621 = !DILocation(line: 407, column: 84, scope: !5873, inlinedAt: !10620)
!10622 = !DILocation(line: 407, column: 64, scope: !5873, inlinedAt: !10623)
!10623 = distinct !DILocation(line: 381, column: 2, scope: !10598)
!10624 = !DILocation(line: 407, column: 84, scope: !5873, inlinedAt: !10623)
!10625 = !DILocation(line: 327, column: 67, scope: !5884, inlinedAt: !10626)
!10626 = distinct !DILocation(line: 352, column: 2, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 352, column: 2)
!10628 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 352, column: 2)
!10629 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 352, column: 2)
!10630 = distinct !DILexicalBlock(scope: !10631, file: !3, line: 352, column: 2)
!10631 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 352, column: 2)
!10632 = !DILocalVariable(name: "current_sdev", arg: 1, scope: !10598, file: !3, line: 345, type: !293)
!10633 = !DILocation(line: 345, column: 53, scope: !10598)
!10634 = !DILocalVariable(name: "shost", scope: !10598, file: !3, line: 347, type: !297)
!10635 = !DILocation(line: 347, column: 20, scope: !10598)
!10636 = !DILocation(line: 347, column: 28, scope: !10598)
!10637 = !DILocation(line: 347, column: 42, scope: !10598)
!10638 = !DILocalVariable(name: "sdev", scope: !10598, file: !3, line: 348, type: !293)
!10639 = !DILocation(line: 348, column: 22, scope: !10598)
!10640 = !DILocalVariable(name: "tmp", scope: !10598, file: !3, line: 348, type: !293)
!10641 = !DILocation(line: 348, column: 29, scope: !10598)
!10642 = !DILocalVariable(name: "starget", scope: !10598, file: !3, line: 349, type: !4931)
!10643 = !DILocation(line: 349, column: 22, scope: !10598)
!10644 = !DILocation(line: 349, column: 44, scope: !10598)
!10645 = !DILocation(line: 349, column: 32, scope: !10598)
!10646 = !DILocalVariable(name: "flags", scope: !10598, file: !3, line: 350, type: !356)
!10647 = !DILocation(line: 350, column: 16, scope: !10598)
!10648 = !DILocation(line: 352, column: 2, scope: !10598)
!10649 = !DILocation(line: 352, column: 2, scope: !10631)
!10650 = !DILocalVariable(name: "__dummy", scope: !10651, file: !3, line: 352, type: !356)
!10651 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 352, column: 2)
!10652 = !DILocation(line: 352, column: 2, scope: !10651)
!10653 = !DILocalVariable(name: "__dummy2", scope: !10651, file: !3, line: 352, type: !356)
!10654 = !DILocation(line: 352, column: 2, scope: !10630)
!10655 = !DILocation(line: 352, column: 2, scope: !10629)
!10656 = !DILocation(line: 352, column: 2, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 352, column: 2)
!10658 = !DILocalVariable(name: "__dummy", scope: !10659, file: !3, line: 352, type: !356)
!10659 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 352, column: 2)
!10660 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 352, column: 2)
!10661 = !DILocation(line: 352, column: 2, scope: !10659)
!10662 = !DILocalVariable(name: "__dummy2", scope: !10659, file: !3, line: 352, type: !356)
!10663 = !DILocation(line: 352, column: 2, scope: !10660)
!10664 = !DILocation(line: 352, column: 2, scope: !10628)
!10665 = !{i32 -2140964536}
!10666 = !DILocation(line: 352, column: 2, scope: !10627)
!10667 = !DILocation(line: 329, column: 10, scope: !5884, inlinedAt: !10626)
!10668 = !DILocation(line: 329, column: 16, scope: !5884, inlinedAt: !10626)
!10669 = !DILocation(line: 353, column: 2, scope: !10598)
!10670 = !DILocation(line: 353, column: 11, scope: !10598)
!10671 = !DILocation(line: 353, column: 29, scope: !10598)
!10672 = !DILocation(line: 354, column: 25, scope: !10598)
!10673 = !DILocation(line: 354, column: 32, scope: !10598)
!10674 = !DILocation(line: 354, column: 43, scope: !10598)
!10675 = !DILocation(line: 409, column: 2, scope: !5944, inlinedAt: !10620)
!10676 = !DILocation(line: 409, column: 2, scope: !5949, inlinedAt: !10620)
!10677 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !10620)
!10678 = !DILocation(line: 409, column: 2, scope: !5957, inlinedAt: !10620)
!10679 = !DILocation(line: 409, column: 2, scope: !5960, inlinedAt: !10620)
!10680 = !DILocation(line: 362, column: 18, scope: !10598)
!10681 = !DILocation(line: 362, column: 32, scope: !10598)
!10682 = !DILocation(line: 362, column: 2, scope: !10598)
!10683 = !DILocation(line: 364, column: 2, scope: !10598)
!10684 = !DILocation(line: 364, column: 2, scope: !10618)
!10685 = !DILocalVariable(name: "__dummy", scope: !10686, file: !3, line: 364, type: !356)
!10686 = distinct !DILexicalBlock(scope: !10617, file: !3, line: 364, column: 2)
!10687 = !DILocation(line: 364, column: 2, scope: !10686)
!10688 = !DILocalVariable(name: "__dummy2", scope: !10686, file: !3, line: 364, type: !356)
!10689 = !DILocation(line: 364, column: 2, scope: !10617)
!10690 = !DILocation(line: 364, column: 2, scope: !10616)
!10691 = !DILocation(line: 364, column: 2, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 364, column: 2)
!10693 = !DILocalVariable(name: "__dummy", scope: !10694, file: !3, line: 364, type: !356)
!10694 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 364, column: 2)
!10695 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 364, column: 2)
!10696 = !DILocation(line: 364, column: 2, scope: !10694)
!10697 = !DILocalVariable(name: "__dummy2", scope: !10694, file: !3, line: 364, type: !356)
!10698 = !DILocation(line: 364, column: 2, scope: !10695)
!10699 = !DILocation(line: 364, column: 2, scope: !10615)
!10700 = !{i32 -2140963470}
!10701 = !DILocation(line: 364, column: 2, scope: !10614)
!10702 = !DILocation(line: 329, column: 10, scope: !5884, inlinedAt: !10613)
!10703 = !DILocation(line: 329, column: 16, scope: !5884, inlinedAt: !10613)
!10704 = !DILocation(line: 365, column: 6, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 365, column: 6)
!10706 = !DILocation(line: 365, column: 15, scope: !10705)
!10707 = !DILocation(line: 365, column: 6, scope: !10598)
!10708 = !DILocation(line: 366, column: 3, scope: !10705)
!10709 = !DILocalVariable(name: "__mptr", scope: !10710, file: !3, line: 367, type: !291)
!10710 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 367, column: 2)
!10711 = !DILocation(line: 367, column: 2, scope: !10710)
!10712 = !DILocation(line: 367, column: 2, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 367, column: 2)
!10714 = !DILocation(line: 367, column: 2, scope: !10608)
!10715 = !DILocalVariable(name: "__mptr", scope: !10716, file: !3, line: 367, type: !291)
!10716 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 367, column: 2)
!10717 = !DILocation(line: 367, column: 2, scope: !10716)
!10718 = !DILocation(line: 367, column: 2, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10716, file: !3, line: 367, column: 2)
!10720 = !DILocation(line: 367, column: 2, scope: !10607)
!10721 = !DILocation(line: 369, column: 7, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 369, column: 7)
!10723 = !DILocation(line: 369, column: 15, scope: !10722)
!10724 = !DILocation(line: 369, column: 12, scope: !10722)
!10725 = !DILocation(line: 369, column: 7, scope: !10606)
!10726 = !DILocation(line: 370, column: 4, scope: !10722)
!10727 = !DILocation(line: 371, column: 23, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 371, column: 7)
!10729 = !DILocation(line: 371, column: 7, scope: !10728)
!10730 = !DILocation(line: 371, column: 7, scope: !10606)
!10731 = !DILocation(line: 372, column: 4, scope: !10728)
!10732 = !DILocation(line: 374, column: 26, scope: !10606)
!10733 = !DILocation(line: 374, column: 33, scope: !10606)
!10734 = !DILocation(line: 374, column: 44, scope: !10606)
!10735 = !DILocation(line: 409, column: 2, scope: !5944, inlinedAt: !10610)
!10736 = !DILocation(line: 409, column: 2, scope: !5949, inlinedAt: !10610)
!10737 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !10610)
!10738 = !DILocation(line: 409, column: 2, scope: !5957, inlinedAt: !10610)
!10739 = !DILocation(line: 409, column: 2, scope: !5960, inlinedAt: !10610)
!10740 = !DILocation(line: 375, column: 19, scope: !10606)
!10741 = !DILocation(line: 375, column: 25, scope: !10606)
!10742 = !DILocation(line: 375, column: 3, scope: !10606)
!10743 = !DILocation(line: 376, column: 3, scope: !10606)
!10744 = !DILocation(line: 376, column: 3, scope: !10605)
!10745 = !DILocalVariable(name: "__dummy", scope: !10746, file: !3, line: 376, type: !356)
!10746 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 376, column: 3)
!10747 = !DILocation(line: 376, column: 3, scope: !10746)
!10748 = !DILocalVariable(name: "__dummy2", scope: !10746, file: !3, line: 376, type: !356)
!10749 = !DILocation(line: 376, column: 3, scope: !10604)
!10750 = !DILocation(line: 376, column: 3, scope: !10603)
!10751 = !DILocation(line: 376, column: 3, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 376, column: 3)
!10753 = !DILocalVariable(name: "__dummy", scope: !10754, file: !3, line: 376, type: !356)
!10754 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 376, column: 3)
!10755 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 376, column: 3)
!10756 = !DILocation(line: 376, column: 3, scope: !10754)
!10757 = !DILocalVariable(name: "__dummy2", scope: !10754, file: !3, line: 376, type: !356)
!10758 = !DILocation(line: 376, column: 3, scope: !10755)
!10759 = !DILocation(line: 376, column: 3, scope: !10602)
!10760 = !{i32 -2140955699}
!10761 = !DILocation(line: 376, column: 3, scope: !10601)
!10762 = !DILocation(line: 329, column: 10, scope: !5884, inlinedAt: !10600)
!10763 = !DILocation(line: 329, column: 16, scope: !5884, inlinedAt: !10600)
!10764 = !DILocation(line: 378, column: 19, scope: !10606)
!10765 = !DILocation(line: 378, column: 3, scope: !10606)
!10766 = !DILocation(line: 379, column: 2, scope: !10606)
!10767 = !DILocalVariable(name: "__mptr", scope: !10768, file: !3, line: 367, type: !291)
!10768 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 367, column: 2)
!10769 = !DILocation(line: 367, column: 2, scope: !10768)
!10770 = !DILocation(line: 367, column: 2, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 367, column: 2)
!10772 = distinct !{!10772, !10714, !10773}
!10773 = !DILocation(line: 379, column: 2, scope: !10608)
!10774 = !DILabel(scope: !10598, name: "out", file: !3, line: 380)
!10775 = !DILocation(line: 380, column: 2, scope: !10598)
!10776 = !DILocation(line: 381, column: 25, scope: !10598)
!10777 = !DILocation(line: 381, column: 32, scope: !10598)
!10778 = !DILocation(line: 381, column: 43, scope: !10598)
!10779 = !DILocation(line: 409, column: 2, scope: !5944, inlinedAt: !10623)
!10780 = !DILocation(line: 409, column: 2, scope: !5949, inlinedAt: !10623)
!10781 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !10623)
!10782 = !DILocation(line: 409, column: 2, scope: !5957, inlinedAt: !10623)
!10783 = !DILocation(line: 409, column: 2, scope: !5960, inlinedAt: !10623)
!10784 = !DILocation(line: 382, column: 1, scope: !10598)
!10785 = distinct !DISubprogram(name: "scsi_starved_list_run", scope: !3, file: !3, line: 413, type: !4964, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10786 = !DILocation(line: 327, column: 67, scope: !5884, inlinedAt: !10787)
!10787 = distinct !DILocation(line: 465, column: 3, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 465, column: 3)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 465, column: 3)
!10790 = distinct !DILexicalBlock(scope: !10791, file: !3, line: 465, column: 3)
!10791 = distinct !DILexicalBlock(scope: !10792, file: !3, line: 465, column: 3)
!10792 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 465, column: 3)
!10793 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 422, column: 37)
!10794 = !DILocation(line: 407, column: 64, scope: !5873, inlinedAt: !10795)
!10795 = distinct !DILocation(line: 460, column: 3, scope: !10793)
!10796 = !DILocation(line: 407, column: 84, scope: !5873, inlinedAt: !10795)
!10797 = !DILocation(line: 407, column: 64, scope: !5873, inlinedAt: !10798)
!10798 = distinct !DILocation(line: 469, column: 2, scope: !10785)
!10799 = !DILocation(line: 407, column: 84, scope: !5873, inlinedAt: !10798)
!10800 = !DILocation(line: 327, column: 67, scope: !5884, inlinedAt: !10801)
!10801 = distinct !DILocation(line: 419, column: 2, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10803, file: !3, line: 419, column: 2)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 419, column: 2)
!10804 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 419, column: 2)
!10805 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 419, column: 2)
!10806 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 419, column: 2)
!10807 = !DILocalVariable(name: "shost", arg: 1, scope: !10785, file: !3, line: 413, type: !297)
!10808 = !DILocation(line: 413, column: 53, scope: !10785)
!10809 = !DILocalVariable(name: "starved_list", scope: !10785, file: !3, line: 415, type: !301)
!10810 = !DILocation(line: 415, column: 2, scope: !10785)
!10811 = !DILocalVariable(name: "sdev", scope: !10785, file: !3, line: 416, type: !293)
!10812 = !DILocation(line: 416, column: 22, scope: !10785)
!10813 = !DILocalVariable(name: "flags", scope: !10785, file: !3, line: 417, type: !356)
!10814 = !DILocation(line: 417, column: 16, scope: !10785)
!10815 = !DILocation(line: 419, column: 2, scope: !10785)
!10816 = !DILocation(line: 419, column: 2, scope: !10806)
!10817 = !DILocalVariable(name: "__dummy", scope: !10818, file: !3, line: 419, type: !356)
!10818 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 419, column: 2)
!10819 = !DILocation(line: 419, column: 2, scope: !10818)
!10820 = !DILocalVariable(name: "__dummy2", scope: !10818, file: !3, line: 419, type: !356)
!10821 = !DILocation(line: 419, column: 2, scope: !10805)
!10822 = !DILocation(line: 419, column: 2, scope: !10804)
!10823 = !DILocation(line: 419, column: 2, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 419, column: 2)
!10825 = !DILocalVariable(name: "__dummy", scope: !10826, file: !3, line: 419, type: !356)
!10826 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 419, column: 2)
!10827 = distinct !DILexicalBlock(scope: !10824, file: !3, line: 419, column: 2)
!10828 = !DILocation(line: 419, column: 2, scope: !10826)
!10829 = !DILocalVariable(name: "__dummy2", scope: !10826, file: !3, line: 419, type: !356)
!10830 = !DILocation(line: 419, column: 2, scope: !10827)
!10831 = !DILocation(line: 419, column: 2, scope: !10803)
!10832 = !{i32 -2140953972}
!10833 = !DILocation(line: 419, column: 2, scope: !10802)
!10834 = !DILocation(line: 329, column: 10, scope: !5884, inlinedAt: !10801)
!10835 = !DILocation(line: 329, column: 16, scope: !5884, inlinedAt: !10801)
!10836 = !DILocation(line: 420, column: 20, scope: !10785)
!10837 = !DILocation(line: 420, column: 27, scope: !10785)
!10838 = !DILocation(line: 420, column: 2, scope: !10785)
!10839 = !DILocation(line: 422, column: 2, scope: !10785)
!10840 = !DILocation(line: 422, column: 10, scope: !10785)
!10841 = !DILocation(line: 422, column: 9, scope: !10785)
!10842 = !DILocalVariable(name: "slq", scope: !10793, file: !3, line: 423, type: !2776)
!10843 = !DILocation(line: 423, column: 25, scope: !10793)
!10844 = !DILocation(line: 435, column: 25, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 435, column: 7)
!10846 = !DILocation(line: 435, column: 7, scope: !10845)
!10847 = !DILocation(line: 435, column: 7, scope: !10793)
!10848 = !DILocation(line: 436, column: 4, scope: !10845)
!10849 = !DILocalVariable(name: "__mptr", scope: !10850, file: !3, line: 438, type: !291)
!10850 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 438, column: 10)
!10851 = !DILocation(line: 438, column: 10, scope: !10850)
!10852 = !DILocation(line: 438, column: 10, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10850, file: !3, line: 438, column: 10)
!10854 = !DILocation(line: 438, column: 8, scope: !10793)
!10855 = !DILocation(line: 440, column: 18, scope: !10793)
!10856 = !DILocation(line: 440, column: 24, scope: !10793)
!10857 = !DILocation(line: 440, column: 3, scope: !10793)
!10858 = !DILocation(line: 441, column: 39, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 441, column: 7)
!10860 = !DILocation(line: 441, column: 27, scope: !10859)
!10861 = !DILocation(line: 441, column: 7, scope: !10859)
!10862 = !DILocation(line: 441, column: 7, scope: !10793)
!10863 = !DILocation(line: 442, column: 20, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 441, column: 47)
!10865 = !DILocation(line: 442, column: 26, scope: !10864)
!10866 = !DILocation(line: 443, column: 13, scope: !10864)
!10867 = !DILocation(line: 443, column: 20, scope: !10864)
!10868 = !DILocation(line: 442, column: 4, scope: !10864)
!10869 = !DILocation(line: 444, column: 4, scope: !10864)
!10870 = distinct !{!10870, !10839, !10871}
!10871 = !DILocation(line: 466, column: 2, scope: !10785)
!10872 = !DILocation(line: 457, column: 9, scope: !10793)
!10873 = !DILocation(line: 457, column: 15, scope: !10793)
!10874 = !DILocation(line: 457, column: 7, scope: !10793)
!10875 = !DILocation(line: 458, column: 22, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 458, column: 7)
!10877 = !DILocation(line: 458, column: 8, scope: !10876)
!10878 = !DILocation(line: 458, column: 7, scope: !10793)
!10879 = !DILocation(line: 459, column: 4, scope: !10876)
!10880 = !DILocation(line: 460, column: 26, scope: !10793)
!10881 = !DILocation(line: 460, column: 33, scope: !10793)
!10882 = !DILocation(line: 460, column: 44, scope: !10793)
!10883 = !DILocation(line: 409, column: 2, scope: !5944, inlinedAt: !10795)
!10884 = !DILocation(line: 409, column: 2, scope: !5949, inlinedAt: !10795)
!10885 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !10795)
!10886 = !DILocation(line: 409, column: 2, scope: !5957, inlinedAt: !10795)
!10887 = !DILocation(line: 409, column: 2, scope: !5960, inlinedAt: !10795)
!10888 = !DILocation(line: 462, column: 19, scope: !10793)
!10889 = !DILocation(line: 462, column: 3, scope: !10793)
!10890 = !DILocation(line: 463, column: 17, scope: !10793)
!10891 = !DILocation(line: 463, column: 3, scope: !10793)
!10892 = !DILocation(line: 465, column: 3, scope: !10793)
!10893 = !DILocation(line: 465, column: 3, scope: !10792)
!10894 = !DILocalVariable(name: "__dummy", scope: !10895, file: !3, line: 465, type: !356)
!10895 = distinct !DILexicalBlock(scope: !10791, file: !3, line: 465, column: 3)
!10896 = !DILocation(line: 465, column: 3, scope: !10895)
!10897 = !DILocalVariable(name: "__dummy2", scope: !10895, file: !3, line: 465, type: !356)
!10898 = !DILocation(line: 465, column: 3, scope: !10791)
!10899 = !DILocation(line: 465, column: 3, scope: !10790)
!10900 = !DILocation(line: 465, column: 3, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 465, column: 3)
!10902 = !DILocalVariable(name: "__dummy", scope: !10903, file: !3, line: 465, type: !356)
!10903 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 465, column: 3)
!10904 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 465, column: 3)
!10905 = !DILocation(line: 465, column: 3, scope: !10903)
!10906 = !DILocalVariable(name: "__dummy2", scope: !10903, file: !3, line: 465, type: !356)
!10907 = !DILocation(line: 465, column: 3, scope: !10904)
!10908 = !DILocation(line: 465, column: 3, scope: !10789)
!10909 = !{i32 -2140951162}
!10910 = !DILocation(line: 465, column: 3, scope: !10788)
!10911 = !DILocation(line: 329, column: 10, scope: !5884, inlinedAt: !10787)
!10912 = !DILocation(line: 329, column: 16, scope: !5884, inlinedAt: !10787)
!10913 = !DILocation(line: 468, column: 30, scope: !10785)
!10914 = !DILocation(line: 468, column: 37, scope: !10785)
!10915 = !DILocation(line: 468, column: 2, scope: !10785)
!10916 = !DILocation(line: 469, column: 25, scope: !10785)
!10917 = !DILocation(line: 469, column: 32, scope: !10785)
!10918 = !DILocation(line: 469, column: 43, scope: !10785)
!10919 = !DILocation(line: 409, column: 2, scope: !5944, inlinedAt: !10798)
!10920 = !DILocation(line: 409, column: 2, scope: !5949, inlinedAt: !10798)
!10921 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !10798)
!10922 = !DILocation(line: 409, column: 2, scope: !5957, inlinedAt: !10798)
!10923 = !DILocation(line: 409, column: 2, scope: !5960, inlinedAt: !10798)
!10924 = !DILocation(line: 470, column: 1, scope: !10785)
!10925 = distinct !DISubprogram(name: "scsi_kick_queue", scope: !3, file: !3, line: 333, type: !3145, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10926 = !DILocalVariable(name: "q", arg: 1, scope: !10925, file: !3, line: 333, type: !2776)
!10927 = !DILocation(line: 333, column: 51, scope: !10925)
!10928 = !DILocation(line: 335, column: 23, scope: !10925)
!10929 = !DILocation(line: 335, column: 2, scope: !10925)
!10930 = !DILocation(line: 336, column: 1, scope: !10925)
!10931 = distinct !DISubprogram(name: "scsi_host_is_busy", scope: !3, file: !3, line: 404, type: !10932, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10932 = !DISubroutineType(types: !10933)
!10933 = !{!793, !297}
!10934 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !10935)
!10935 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !10936)
!10936 = distinct !DILocation(line: 406, column: 6, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 406, column: 6)
!10938 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !10939)
!10939 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !10936)
!10940 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !10939)
!10941 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !10936)
!10942 = !DILocalVariable(name: "shost", arg: 1, scope: !10931, file: !3, line: 404, type: !297)
!10943 = !DILocation(line: 404, column: 56, scope: !10931)
!10944 = !DILocation(line: 406, column: 19, scope: !10937)
!10945 = !DILocation(line: 406, column: 26, scope: !10937)
!10946 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !10936)
!10947 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !10939)
!10948 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !10939)
!10949 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !10939)
!10950 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !10939)
!10951 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !10936)
!10952 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !10935)
!10953 = !DILocation(line: 406, column: 40, scope: !10937)
!10954 = !DILocation(line: 406, column: 6, scope: !10931)
!10955 = !DILocation(line: 407, column: 3, scope: !10937)
!10956 = !DILocation(line: 408, column: 6, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 408, column: 6)
!10958 = !DILocation(line: 408, column: 13, scope: !10957)
!10959 = !DILocation(line: 408, column: 6, scope: !10931)
!10960 = !DILocation(line: 409, column: 3, scope: !10957)
!10961 = !DILocation(line: 410, column: 2, scope: !10931)
!10962 = !DILocation(line: 411, column: 1, scope: !10931)
!10963 = distinct !DISubprogram(name: "list_del_init", scope: !7203, file: !7203, line: 202, type: !7204, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10964 = !DILocalVariable(name: "entry", arg: 1, scope: !10963, file: !7203, line: 202, type: !305)
!10965 = !DILocation(line: 202, column: 52, scope: !10963)
!10966 = !DILocation(line: 204, column: 19, scope: !10963)
!10967 = !DILocation(line: 204, column: 2, scope: !10963)
!10968 = !DILocation(line: 205, column: 17, scope: !10963)
!10969 = !DILocation(line: 205, column: 2, scope: !10963)
!10970 = !DILocation(line: 206, column: 1, scope: !10963)
!10971 = distinct !DISubprogram(name: "scsi_target_is_busy", scope: !3, file: !3, line: 393, type: !10972, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!10972 = !DISubroutineType(types: !10973)
!10973 = !{!793, !4931}
!10974 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !10975)
!10975 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !10976)
!10976 = distinct !DILocation(line: 398, column: 7, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 398, column: 7)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 395, column: 30)
!10979 = distinct !DILexicalBlock(scope: !10971, file: !3, line: 395, column: 6)
!10980 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !10981)
!10981 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !10976)
!10982 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !10981)
!10983 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !10976)
!10984 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !10985)
!10985 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !10986)
!10986 = distinct !DILocation(line: 396, column: 7, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 396, column: 7)
!10988 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !10989)
!10989 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !10986)
!10990 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !10989)
!10991 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !10986)
!10992 = !DILocalVariable(name: "starget", arg: 1, scope: !10971, file: !3, line: 393, type: !4931)
!10993 = !DILocation(line: 393, column: 60, scope: !10971)
!10994 = !DILocation(line: 395, column: 6, scope: !10979)
!10995 = !DILocation(line: 395, column: 15, scope: !10979)
!10996 = !DILocation(line: 395, column: 25, scope: !10979)
!10997 = !DILocation(line: 395, column: 6, scope: !10971)
!10998 = !DILocation(line: 396, column: 20, scope: !10987)
!10999 = !DILocation(line: 396, column: 29, scope: !10987)
!11000 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !10986)
!11001 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !10989)
!11002 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !10989)
!11003 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !10989)
!11004 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !10989)
!11005 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !10986)
!11006 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !10985)
!11007 = !DILocation(line: 396, column: 45, scope: !10987)
!11008 = !DILocation(line: 396, column: 54, scope: !10987)
!11009 = !DILocation(line: 396, column: 42, scope: !10987)
!11010 = !DILocation(line: 396, column: 7, scope: !10978)
!11011 = !DILocation(line: 397, column: 4, scope: !10987)
!11012 = !DILocation(line: 398, column: 20, scope: !10977)
!11013 = !DILocation(line: 398, column: 29, scope: !10977)
!11014 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !10976)
!11015 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !10981)
!11016 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !10981)
!11017 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !10981)
!11018 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !10981)
!11019 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !10976)
!11020 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !10975)
!11021 = !DILocation(line: 398, column: 45, scope: !10977)
!11022 = !DILocation(line: 398, column: 7, scope: !10978)
!11023 = !DILocation(line: 399, column: 4, scope: !10977)
!11024 = !DILocation(line: 400, column: 2, scope: !10978)
!11025 = !DILocation(line: 401, column: 2, scope: !10971)
!11026 = !DILocation(line: 402, column: 1, scope: !10971)
!11027 = distinct !DISubprogram(name: "list_move_tail", scope: !7203, file: !7203, line: 224, type: !8874, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11028 = !DILocalVariable(name: "list", arg: 1, scope: !11027, file: !7203, line: 224, type: !305)
!11029 = !DILocation(line: 224, column: 53, scope: !11027)
!11030 = !DILocalVariable(name: "head", arg: 2, scope: !11027, file: !7203, line: 225, type: !305)
!11031 = !DILocation(line: 225, column: 25, scope: !11027)
!11032 = !DILocation(line: 227, column: 19, scope: !11027)
!11033 = !DILocation(line: 227, column: 2, scope: !11027)
!11034 = !DILocation(line: 228, column: 16, scope: !11027)
!11035 = !DILocation(line: 228, column: 22, scope: !11027)
!11036 = !DILocation(line: 228, column: 2, scope: !11027)
!11037 = !DILocation(line: 229, column: 1, scope: !11027)
!11038 = distinct !DISubprogram(name: "list_splice", scope: !7203, file: !7203, line: 452, type: !11039, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11039 = !DISubroutineType(types: !11040)
!11040 = !{null, !8897, !305}
!11041 = !DILocalVariable(name: "list", arg: 1, scope: !11038, file: !7203, line: 452, type: !8897)
!11042 = !DILocation(line: 452, column: 56, scope: !11038)
!11043 = !DILocalVariable(name: "head", arg: 2, scope: !11038, file: !7203, line: 453, type: !305)
!11044 = !DILocation(line: 453, column: 23, scope: !11038)
!11045 = !DILocation(line: 455, column: 18, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11038, file: !7203, line: 455, column: 6)
!11047 = !DILocation(line: 455, column: 7, scope: !11046)
!11048 = !DILocation(line: 455, column: 6, scope: !11038)
!11049 = !DILocation(line: 456, column: 17, scope: !11046)
!11050 = !DILocation(line: 456, column: 23, scope: !11046)
!11051 = !DILocation(line: 456, column: 29, scope: !11046)
!11052 = !DILocation(line: 456, column: 35, scope: !11046)
!11053 = !DILocation(line: 456, column: 3, scope: !11046)
!11054 = !DILocation(line: 457, column: 1, scope: !11038)
!11055 = distinct !DISubprogram(name: "__list_del_entry", scope: !7203, file: !7203, line: 130, type: !7204, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11056 = !DILocalVariable(name: "entry", arg: 1, scope: !11055, file: !7203, line: 130, type: !305)
!11057 = !DILocation(line: 130, column: 55, scope: !11055)
!11058 = !DILocation(line: 132, column: 30, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11055, file: !7203, line: 132, column: 6)
!11060 = !DILocation(line: 132, column: 7, scope: !11059)
!11061 = !DILocation(line: 132, column: 6, scope: !11055)
!11062 = !DILocation(line: 133, column: 3, scope: !11059)
!11063 = !DILocation(line: 135, column: 13, scope: !11055)
!11064 = !DILocation(line: 135, column: 20, scope: !11055)
!11065 = !DILocation(line: 135, column: 26, scope: !11055)
!11066 = !DILocation(line: 135, column: 33, scope: !11055)
!11067 = !DILocation(line: 135, column: 2, scope: !11055)
!11068 = !DILocation(line: 136, column: 1, scope: !11055)
!11069 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !7203, file: !7203, line: 51, type: !11070, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11070 = !DISubroutineType(types: !11071)
!11071 = !{!793, !305}
!11072 = !DILocalVariable(name: "entry", arg: 1, scope: !11069, file: !7203, line: 51, type: !305)
!11073 = !DILocation(line: 51, column: 61, scope: !11069)
!11074 = !DILocation(line: 53, column: 2, scope: !11069)
!11075 = distinct !DISubprogram(name: "__list_del", scope: !7203, file: !7203, line: 110, type: !8874, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11076 = !DILocalVariable(name: "prev", arg: 1, scope: !11075, file: !7203, line: 110, type: !305)
!11077 = !DILocation(line: 110, column: 50, scope: !11075)
!11078 = !DILocalVariable(name: "next", arg: 2, scope: !11075, file: !7203, line: 110, type: !305)
!11079 = !DILocation(line: 110, column: 75, scope: !11075)
!11080 = !DILocation(line: 112, column: 15, scope: !11075)
!11081 = !DILocation(line: 112, column: 2, scope: !11075)
!11082 = !DILocation(line: 112, column: 8, scope: !11075)
!11083 = !DILocation(line: 112, column: 13, scope: !11075)
!11084 = !DILocation(line: 113, column: 2, scope: !11075)
!11085 = !DILocation(line: 113, column: 2, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11075, file: !7203, line: 113, column: 2)
!11087 = !DILocation(line: 113, column: 2, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11086, file: !7203, line: 113, column: 2)
!11089 = !DILocation(line: 113, column: 2, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11086, file: !7203, line: 113, column: 2)
!11091 = !DILocation(line: 114, column: 1, scope: !11075)
!11092 = distinct !DISubprogram(name: "__list_splice", scope: !7203, file: !7203, line: 433, type: !11093, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11093 = !DISubroutineType(types: !11094)
!11094 = !{null, !8897, !305, !305}
!11095 = !DILocalVariable(name: "list", arg: 1, scope: !11092, file: !7203, line: 433, type: !8897)
!11096 = !DILocation(line: 433, column: 58, scope: !11092)
!11097 = !DILocalVariable(name: "prev", arg: 2, scope: !11092, file: !7203, line: 434, type: !305)
!11098 = !DILocation(line: 434, column: 24, scope: !11092)
!11099 = !DILocalVariable(name: "next", arg: 3, scope: !11092, file: !7203, line: 435, type: !305)
!11100 = !DILocation(line: 435, column: 24, scope: !11092)
!11101 = !DILocalVariable(name: "first", scope: !11092, file: !7203, line: 437, type: !305)
!11102 = !DILocation(line: 437, column: 20, scope: !11092)
!11103 = !DILocation(line: 437, column: 28, scope: !11092)
!11104 = !DILocation(line: 437, column: 34, scope: !11092)
!11105 = !DILocalVariable(name: "last", scope: !11092, file: !7203, line: 438, type: !305)
!11106 = !DILocation(line: 438, column: 20, scope: !11092)
!11107 = !DILocation(line: 438, column: 27, scope: !11092)
!11108 = !DILocation(line: 438, column: 33, scope: !11092)
!11109 = !DILocation(line: 440, column: 16, scope: !11092)
!11110 = !DILocation(line: 440, column: 2, scope: !11092)
!11111 = !DILocation(line: 440, column: 9, scope: !11092)
!11112 = !DILocation(line: 440, column: 14, scope: !11092)
!11113 = !DILocation(line: 441, column: 15, scope: !11092)
!11114 = !DILocation(line: 441, column: 2, scope: !11092)
!11115 = !DILocation(line: 441, column: 8, scope: !11092)
!11116 = !DILocation(line: 441, column: 13, scope: !11092)
!11117 = !DILocation(line: 443, column: 15, scope: !11092)
!11118 = !DILocation(line: 443, column: 2, scope: !11092)
!11119 = !DILocation(line: 443, column: 8, scope: !11092)
!11120 = !DILocation(line: 443, column: 13, scope: !11092)
!11121 = !DILocation(line: 444, column: 15, scope: !11092)
!11122 = !DILocation(line: 444, column: 2, scope: !11092)
!11123 = !DILocation(line: 444, column: 8, scope: !11092)
!11124 = !DILocation(line: 444, column: 13, scope: !11092)
!11125 = !DILocation(line: 445, column: 1, scope: !11092)
!11126 = distinct !DISubprogram(name: "scsi_sense_is_deferred", scope: !11127, file: !11127, line: 22, type: !8540, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11127 = !DIFile(filename: "./include/scsi/scsi_eh.h", directory: "/home/lizy2001/genbc/linux")
!11128 = !DILocalVariable(name: "sshdr", arg: 1, scope: !11126, file: !11127, line: 22, type: !8542)
!11129 = !DILocation(line: 22, column: 72, scope: !11126)
!11130 = !DILocation(line: 24, column: 11, scope: !11126)
!11131 = !DILocation(line: 24, column: 18, scope: !11126)
!11132 = !DILocation(line: 24, column: 32, scope: !11126)
!11133 = !DILocation(line: 24, column: 41, scope: !11126)
!11134 = !DILocation(line: 24, column: 45, scope: !11126)
!11135 = !DILocation(line: 24, column: 52, scope: !11126)
!11136 = !DILocation(line: 24, column: 66, scope: !11126)
!11137 = !DILocation(line: 0, scope: !11126)
!11138 = !DILocation(line: 24, column: 2, scope: !11126)
!11139 = distinct !DISubprogram(name: "scsi_result_to_blk_status", scope: !3, file: !3, line: 619, type: !11140, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11140 = !DISubroutineType(types: !11141)
!11141 = !{!2614, !268, !286}
!11142 = !DILocalVariable(name: "cmd", arg: 1, scope: !11139, file: !3, line: 619, type: !268)
!11143 = !DILocation(line: 619, column: 65, scope: !11139)
!11144 = !DILocalVariable(name: "result", arg: 2, scope: !11139, file: !3, line: 619, type: !286)
!11145 = !DILocation(line: 619, column: 74, scope: !11139)
!11146 = !DILocation(line: 621, column: 10, scope: !11139)
!11147 = !DILocation(line: 621, column: 2, scope: !11139)
!11148 = !DILocation(line: 628, column: 27, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 628, column: 7)
!11150 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 621, column: 29)
!11151 = !DILocation(line: 628, column: 7, scope: !11149)
!11152 = !DILocation(line: 628, column: 35, scope: !11149)
!11153 = !DILocation(line: 628, column: 39, scope: !11149)
!11154 = !DILocation(line: 628, column: 46, scope: !11149)
!11155 = !DILocation(line: 628, column: 55, scope: !11149)
!11156 = !DILocation(line: 628, column: 7, scope: !11150)
!11157 = !DILocation(line: 629, column: 4, scope: !11149)
!11158 = !DILocation(line: 630, column: 3, scope: !11150)
!11159 = !DILocation(line: 632, column: 3, scope: !11150)
!11160 = !DILocation(line: 634, column: 17, scope: !11150)
!11161 = !DILocation(line: 634, column: 3, scope: !11150)
!11162 = !DILocation(line: 635, column: 3, scope: !11150)
!11163 = !DILocation(line: 637, column: 17, scope: !11150)
!11164 = !DILocation(line: 637, column: 3, scope: !11150)
!11165 = !DILocation(line: 638, column: 3, scope: !11150)
!11166 = !DILocation(line: 640, column: 17, scope: !11150)
!11167 = !DILocation(line: 640, column: 3, scope: !11150)
!11168 = !DILocation(line: 641, column: 3, scope: !11150)
!11169 = !DILocation(line: 643, column: 17, scope: !11150)
!11170 = !DILocation(line: 643, column: 3, scope: !11150)
!11171 = !DILocation(line: 644, column: 3, scope: !11150)
!11172 = !DILocation(line: 646, column: 3, scope: !11150)
!11173 = !DILocation(line: 648, column: 1, scope: !11139)
!11174 = distinct !DISubprogram(name: "set_host_byte", scope: !270, file: !270, line: 316, type: !11175, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11175 = !DISubroutineType(types: !11176)
!11176 = !{null, !268, !750}
!11177 = !DILocalVariable(name: "cmd", arg: 1, scope: !11174, file: !270, line: 316, type: !268)
!11178 = !DILocation(line: 316, column: 52, scope: !11174)
!11179 = !DILocalVariable(name: "status", arg: 2, scope: !11174, file: !270, line: 316, type: !750)
!11180 = !DILocation(line: 316, column: 62, scope: !11174)
!11181 = !DILocation(line: 318, column: 17, scope: !11174)
!11182 = !DILocation(line: 318, column: 22, scope: !11174)
!11183 = !DILocation(line: 318, column: 29, scope: !11174)
!11184 = !DILocation(line: 318, column: 46, scope: !11174)
!11185 = !DILocation(line: 318, column: 53, scope: !11174)
!11186 = !DILocation(line: 318, column: 43, scope: !11174)
!11187 = !DILocation(line: 318, column: 2, scope: !11174)
!11188 = !DILocation(line: 318, column: 7, scope: !11174)
!11189 = !DILocation(line: 318, column: 14, scope: !11174)
!11190 = !DILocation(line: 319, column: 1, scope: !11174)
!11191 = distinct !DISubprogram(name: "blk_rq_is_private", scope: !68, file: !68, line: 265, type: !4976, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11192 = !DILocalVariable(name: "rq", arg: 1, scope: !11191, file: !68, line: 265, type: !2780)
!11193 = !DILocation(line: 265, column: 54, scope: !11191)
!11194 = !DILocation(line: 267, column: 27, scope: !11191)
!11195 = !DILocation(line: 267, column: 9, scope: !11191)
!11196 = !DILocation(line: 267, column: 2, scope: !11191)
!11197 = distinct !DISubprogram(name: "blk_op_is_private", scope: !68, file: !68, line: 255, type: !11198, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11198 = !DISubroutineType(types: !11199)
!11199 = !{!793, !7}
!11200 = !DILocalVariable(name: "op", arg: 1, scope: !11197, file: !68, line: 255, type: !7)
!11201 = !DILocation(line: 255, column: 51, scope: !11197)
!11202 = !DILocation(line: 257, column: 9, scope: !11197)
!11203 = !DILocation(line: 257, column: 12, scope: !11197)
!11204 = !DILocation(line: 257, column: 29, scope: !11197)
!11205 = !DILocation(line: 257, column: 32, scope: !11197)
!11206 = !DILocation(line: 257, column: 35, scope: !11197)
!11207 = !DILocation(line: 257, column: 2, scope: !11197)
!11208 = distinct !DISubprogram(name: "destroy_rcu_head", scope: !5903, file: !5903, line: 233, type: !981, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11209 = !DILocalVariable(name: "head", arg: 1, scope: !11208, file: !5903, line: 233, type: !978)
!11210 = !DILocation(line: 233, column: 54, scope: !11208)
!11211 = !DILocation(line: 233, column: 62, scope: !11208)
!11212 = distinct !DISubprogram(name: "scsi_mq_uninit_cmd", scope: !3, file: !3, line: 529, type: !5352, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11213 = !DILocalVariable(name: "cmd", arg: 1, scope: !11212, file: !3, line: 529, type: !268)
!11214 = !DILocation(line: 529, column: 50, scope: !11212)
!11215 = !DILocation(line: 531, column: 21, scope: !11212)
!11216 = !DILocation(line: 531, column: 2, scope: !11212)
!11217 = !DILocation(line: 532, column: 18, scope: !11212)
!11218 = !DILocation(line: 532, column: 2, scope: !11212)
!11219 = !DILocation(line: 533, column: 1, scope: !11212)
!11220 = distinct !DISubprogram(name: "percpu_ref_get", scope: !258, file: !258, line: 220, type: !1770, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11221 = !DILocalVariable(name: "ref", arg: 1, scope: !11220, file: !258, line: 220, type: !1772)
!11222 = !DILocation(line: 220, column: 54, scope: !11220)
!11223 = !DILocation(line: 222, column: 22, scope: !11220)
!11224 = !DILocation(line: 222, column: 2, scope: !11220)
!11225 = !DILocation(line: 223, column: 1, scope: !11220)
!11226 = distinct !DISubprogram(name: "scsi_run_queue_async", scope: !3, file: !3, line: 535, type: !4925, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11227 = !DILocalVariable(name: "v", arg: 1, scope: !11228, file: !5783, line: 194, type: !5786)
!11228 = distinct !DISubprogram(name: "arch_atomic_cmpxchg", scope: !5783, file: !5783, line: 194, type: !11229, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11229 = !DISubroutineType(types: !11230)
!11230 = !{!286, !5786, !286, !286}
!11231 = !DILocation(line: 194, column: 58, scope: !11228, inlinedAt: !11232)
!11232 = distinct !DILocation(line: 655, column: 9, scope: !11233, inlinedAt: !11234)
!11233 = distinct !DISubprogram(name: "atomic_cmpxchg", scope: !5790, file: !5790, line: 652, type: !11229, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11234 = distinct !DILocation(line: 556, column: 14, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 556, column: 7)
!11236 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 540, column: 9)
!11237 = distinct !DILexicalBlock(scope: !11226, file: !3, line: 537, column: 6)
!11238 = !DILocalVariable(name: "old", arg: 2, scope: !11228, file: !5783, line: 194, type: !286)
!11239 = !DILocation(line: 194, column: 65, scope: !11228, inlinedAt: !11232)
!11240 = !DILocalVariable(name: "new", arg: 3, scope: !11228, file: !5783, line: 194, type: !286)
!11241 = !DILocation(line: 194, column: 74, scope: !11228, inlinedAt: !11232)
!11242 = !DILocalVariable(name: "__ret", scope: !11243, file: !5783, line: 196, type: !286)
!11243 = distinct !DILexicalBlock(scope: !11228, file: !5783, line: 196, column: 9)
!11244 = !DILocation(line: 196, column: 9, scope: !11243, inlinedAt: !11232)
!11245 = !DILocalVariable(name: "__old", scope: !11243, file: !5783, line: 196, type: !286)
!11246 = !DILocalVariable(name: "__new", scope: !11243, file: !5783, line: 196, type: !286)
!11247 = !DILocalVariable(name: "__ptr", scope: !11243, file: !5783, line: 196, type: !5478)
!11248 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !11249)
!11249 = distinct !DILocation(line: 654, column: 2, scope: !11233, inlinedAt: !11234)
!11250 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !11249)
!11251 = !DILocalVariable(name: "v", arg: 1, scope: !11233, file: !5790, line: 652, type: !5786)
!11252 = !DILocation(line: 652, column: 26, scope: !11233, inlinedAt: !11234)
!11253 = !DILocalVariable(name: "old", arg: 2, scope: !11233, file: !5790, line: 652, type: !286)
!11254 = !DILocation(line: 652, column: 33, scope: !11233, inlinedAt: !11234)
!11255 = !DILocalVariable(name: "new", arg: 3, scope: !11233, file: !5790, line: 652, type: !286)
!11256 = !DILocation(line: 652, column: 42, scope: !11233, inlinedAt: !11234)
!11257 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !11258)
!11258 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !11259)
!11259 = distinct !DILocation(line: 546, column: 13, scope: !11236)
!11260 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !11261)
!11261 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !11259)
!11262 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !11261)
!11263 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !11259)
!11264 = !DILocalVariable(name: "sdev", arg: 1, scope: !11226, file: !3, line: 535, type: !293)
!11265 = !DILocation(line: 535, column: 54, scope: !11226)
!11266 = !DILocation(line: 537, column: 18, scope: !11237)
!11267 = !DILocation(line: 537, column: 6, scope: !11237)
!11268 = !DILocation(line: 537, column: 25, scope: !11237)
!11269 = !DILocation(line: 537, column: 36, scope: !11237)
!11270 = !DILocation(line: 538, column: 19, scope: !11237)
!11271 = !DILocation(line: 538, column: 25, scope: !11237)
!11272 = !DILocation(line: 538, column: 31, scope: !11237)
!11273 = !DILocation(line: 538, column: 7, scope: !11237)
!11274 = !DILocation(line: 537, column: 6, scope: !11226)
!11275 = !DILocation(line: 539, column: 26, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 538, column: 46)
!11277 = !DILocation(line: 539, column: 32, scope: !11276)
!11278 = !DILocation(line: 539, column: 3, scope: !11276)
!11279 = !DILocation(line: 540, column: 2, scope: !11276)
!11280 = !DILocalVariable(name: "old", scope: !11236, file: !3, line: 546, type: !286)
!11281 = !DILocation(line: 546, column: 7, scope: !11236)
!11282 = !DILocation(line: 546, column: 26, scope: !11236)
!11283 = !DILocation(line: 546, column: 32, scope: !11236)
!11284 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !11259)
!11285 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !11261)
!11286 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !11261)
!11287 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !11261)
!11288 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !11261)
!11289 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !11259)
!11290 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !11258)
!11291 = !DILocation(line: 556, column: 7, scope: !11235)
!11292 = !DILocation(line: 556, column: 11, scope: !11235)
!11293 = !DILocation(line: 556, column: 30, scope: !11235)
!11294 = !DILocation(line: 556, column: 36, scope: !11235)
!11295 = !DILocation(line: 556, column: 46, scope: !11235)
!11296 = !DILocation(line: 654, column: 31, scope: !11233, inlinedAt: !11234)
!11297 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !11249)
!11298 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !11249)
!11299 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !11249)
!11300 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !11249)
!11301 = !DILocation(line: 655, column: 29, scope: !11233, inlinedAt: !11234)
!11302 = !DILocation(line: 655, column: 32, scope: !11233, inlinedAt: !11234)
!11303 = !DILocation(line: 655, column: 37, scope: !11233, inlinedAt: !11234)
!11304 = !{i32 -2146266153}
!11305 = !DILocation(line: 556, column: 57, scope: !11235)
!11306 = !DILocation(line: 556, column: 54, scope: !11235)
!11307 = !DILocation(line: 556, column: 7, scope: !11236)
!11308 = !DILocation(line: 557, column: 25, scope: !11235)
!11309 = !DILocation(line: 557, column: 31, scope: !11235)
!11310 = !DILocation(line: 557, column: 4, scope: !11235)
!11311 = !DILocation(line: 559, column: 1, scope: !11226)
!11312 = distinct !DISubprogram(name: "percpu_ref_put", scope: !258, file: !258, line: 336, type: !1770, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11313 = !DILocalVariable(name: "ref", arg: 1, scope: !11312, file: !258, line: 336, type: !1772)
!11314 = !DILocation(line: 336, column: 54, scope: !11312)
!11315 = !DILocation(line: 338, column: 22, scope: !11312)
!11316 = !DILocation(line: 338, column: 2, scope: !11312)
!11317 = !DILocation(line: 339, column: 1, scope: !11312)
!11318 = distinct !DISubprogram(name: "scsi_uninit_cmd", scope: !3, file: !3, line: 508, type: !5352, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11319 = !DILocalVariable(name: "cmd", arg: 1, scope: !11318, file: !3, line: 508, type: !268)
!11320 = !DILocation(line: 508, column: 47, scope: !11318)
!11321 = !DILocation(line: 510, column: 29, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11318, file: !3, line: 510, column: 6)
!11323 = !DILocation(line: 510, column: 34, scope: !11322)
!11324 = !DILocation(line: 510, column: 7, scope: !11322)
!11325 = !DILocation(line: 510, column: 6, scope: !11318)
!11326 = !DILocalVariable(name: "drv", scope: !11327, file: !3, line: 511, type: !5457)
!11327 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 510, column: 44)
!11328 = !DILocation(line: 511, column: 23, scope: !11327)
!11329 = !DILocation(line: 511, column: 48, scope: !11327)
!11330 = !DILocation(line: 511, column: 29, scope: !11327)
!11331 = !DILocation(line: 513, column: 7, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 513, column: 7)
!11333 = !DILocation(line: 513, column: 12, scope: !11332)
!11334 = !DILocation(line: 513, column: 7, scope: !11327)
!11335 = !DILocation(line: 514, column: 4, scope: !11332)
!11336 = !DILocation(line: 514, column: 9, scope: !11332)
!11337 = !DILocation(line: 514, column: 24, scope: !11332)
!11338 = !DILocation(line: 515, column: 2, scope: !11327)
!11339 = !DILocation(line: 516, column: 1, scope: !11318)
!11340 = distinct !DISubprogram(name: "scsi_cmd_to_driver", scope: !270, file: !270, line: 157, type: !11341, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11341 = !DISubroutineType(types: !11342)
!11342 = !{!5457, !268}
!11343 = !DILocalVariable(name: "cmd", arg: 1, scope: !11340, file: !270, line: 157, type: !268)
!11344 = !DILocation(line: 157, column: 72, scope: !11340)
!11345 = !DILocation(line: 159, column: 33, scope: !11340)
!11346 = !DILocation(line: 159, column: 38, scope: !11340)
!11347 = !DILocation(line: 159, column: 47, scope: !11340)
!11348 = !DILocation(line: 159, column: 56, scope: !11340)
!11349 = !DILocation(line: 159, column: 10, scope: !11340)
!11350 = !DILocation(line: 159, column: 9, scope: !11340)
!11351 = !DILocation(line: 159, column: 2, scope: !11340)
!11352 = distinct !DISubprogram(name: "percpu_ref_get_many", scope: !258, file: !258, line: 198, type: !11353, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11353 = !DISubroutineType(types: !11354)
!11354 = !{null, !1772, !356}
!11355 = !DILocalVariable(name: "i", arg: 1, scope: !11356, file: !11357, line: 44, type: !338)
!11356 = distinct !DISubprogram(name: "arch_atomic64_add", scope: !11357, file: !11357, line: 44, type: !11358, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11357 = !DIFile(filename: "./arch/x86/include/asm/atomic64_64.h", directory: "/home/lizy2001/genbc/linux")
!11358 = !DISubroutineType(types: !11359)
!11359 = !{null, !338, !11360}
!11360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!11361 = !DILocation(line: 44, column: 51, scope: !11356, inlinedAt: !11362)
!11362 = distinct !DILocation(line: 874, column: 2, scope: !11363, inlinedAt: !11364)
!11363 = distinct !DISubprogram(name: "atomic64_add", scope: !5790, file: !5790, line: 871, type: !11358, scopeLine: 872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11364 = distinct !DILocation(line: 53, column: 2, scope: !11365, inlinedAt: !11368)
!11365 = distinct !DISubprogram(name: "atomic_long_add", scope: !333, file: !333, line: 51, type: !11366, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11366 = !DISubroutineType(types: !11367)
!11367 = !{null, !197, !3603}
!11368 = distinct !DILocation(line: 207, column: 3, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11352, file: !258, line: 204, column: 6)
!11370 = !DILocalVariable(name: "v", arg: 2, scope: !11356, file: !11357, line: 44, type: !11360)
!11371 = !DILocation(line: 44, column: 66, scope: !11356, inlinedAt: !11362)
!11372 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !11373)
!11373 = distinct !DILocation(line: 873, column: 2, scope: !11363, inlinedAt: !11364)
!11374 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !11373)
!11375 = !DILocalVariable(name: "i", arg: 1, scope: !11363, file: !5790, line: 871, type: !338)
!11376 = !DILocation(line: 871, column: 18, scope: !11363, inlinedAt: !11364)
!11377 = !DILocalVariable(name: "v", arg: 2, scope: !11363, file: !5790, line: 871, type: !11360)
!11378 = !DILocation(line: 871, column: 33, scope: !11363, inlinedAt: !11364)
!11379 = !DILocalVariable(name: "i", arg: 1, scope: !11365, file: !333, line: 51, type: !197)
!11380 = !DILocation(line: 51, column: 22, scope: !11365, inlinedAt: !11368)
!11381 = !DILocalVariable(name: "v", arg: 2, scope: !11365, file: !333, line: 51, type: !3603)
!11382 = !DILocation(line: 51, column: 40, scope: !11365, inlinedAt: !11368)
!11383 = !DILocalVariable(name: "ref", arg: 1, scope: !11352, file: !258, line: 198, type: !1772)
!11384 = !DILocation(line: 198, column: 59, scope: !11352)
!11385 = !DILocalVariable(name: "nr", arg: 2, scope: !11352, file: !258, line: 198, type: !356)
!11386 = !DILocation(line: 198, column: 78, scope: !11352)
!11387 = !DILocalVariable(name: "percpu_count", scope: !11352, file: !258, line: 200, type: !5474)
!11388 = !DILocation(line: 200, column: 26, scope: !11352)
!11389 = !DILocation(line: 639, column: 2, scope: !5902, inlinedAt: !11390)
!11390 = distinct !DILocation(line: 202, column: 2, scope: !11352)
!11391 = !DILocation(line: 204, column: 22, scope: !11369)
!11392 = !DILocation(line: 204, column: 6, scope: !11369)
!11393 = !DILocation(line: 204, column: 6, scope: !11352)
!11394 = !DILocation(line: 205, column: 3, scope: !11369)
!11395 = !DILocation(line: 205, column: 3, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11369, file: !258, line: 205, column: 3)
!11397 = !DILocalVariable(name: "__vpp_verify", scope: !11398, file: !258, line: 205, type: !1914)
!11398 = distinct !DILexicalBlock(scope: !11396, file: !258, line: 205, column: 3)
!11399 = !DILocation(line: 205, column: 3, scope: !11398)
!11400 = !DILocalVariable(name: "pao_ID__", scope: !11401, file: !258, line: 205, type: !11402)
!11401 = distinct !DILexicalBlock(scope: !11396, file: !258, line: 205, column: 3)
!11402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!11403 = !DILocation(line: 205, column: 3, scope: !11401)
!11404 = !DILocation(line: 205, column: 3, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11406, file: !258, line: 205, column: 3)
!11406 = distinct !DILexicalBlock(scope: !11401, file: !258, line: 205, column: 3)
!11407 = !DILocalVariable(name: "pto_val__", scope: !11408, file: !258, line: 205, type: !403)
!11408 = distinct !DILexicalBlock(scope: !11405, file: !258, line: 205, column: 3)
!11409 = !DILocation(line: 205, column: 3, scope: !11408)
!11410 = !{i32 -2143183803}
!11411 = !DILocation(line: 207, column: 19, scope: !11369)
!11412 = !DILocation(line: 207, column: 24, scope: !11369)
!11413 = !DILocation(line: 207, column: 29, scope: !11369)
!11414 = !DILocation(line: 207, column: 35, scope: !11369)
!11415 = !DILocation(line: 53, column: 15, scope: !11365, inlinedAt: !11368)
!11416 = !DILocation(line: 53, column: 18, scope: !11365, inlinedAt: !11368)
!11417 = !DILocation(line: 873, column: 31, scope: !11363, inlinedAt: !11364)
!11418 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !11373)
!11419 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !11373)
!11420 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !11373)
!11421 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !11373)
!11422 = !DILocation(line: 874, column: 20, scope: !11363, inlinedAt: !11364)
!11423 = !DILocation(line: 874, column: 23, scope: !11363, inlinedAt: !11364)
!11424 = !DILocation(line: 47, column: 16, scope: !11356, inlinedAt: !11362)
!11425 = !DILocation(line: 47, column: 19, scope: !11356, inlinedAt: !11362)
!11426 = !DILocation(line: 48, column: 16, scope: !11356, inlinedAt: !11362)
!11427 = !DILocation(line: 48, column: 25, scope: !11356, inlinedAt: !11362)
!11428 = !DILocation(line: 48, column: 28, scope: !11356, inlinedAt: !11362)
!11429 = !DILocation(line: 46, column: 2, scope: !11356, inlinedAt: !11362)
!11430 = !{i32 -2146252937}
!11431 = !DILocation(line: 209, column: 2, scope: !11352)
!11432 = !DILocation(line: 210, column: 1, scope: !11352)
!11433 = distinct !DISubprogram(name: "__ref_is_percpu", scope: !258, file: !258, line: 158, type: !11434, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11434 = !DISubroutineType(types: !11435)
!11435 = !{!793, !1772, !11436}
!11436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5474, size: 64)
!11437 = !DILocalVariable(name: "ref", arg: 1, scope: !11433, file: !258, line: 158, type: !1772)
!11438 = !DILocation(line: 158, column: 55, scope: !11433)
!11439 = !DILocalVariable(name: "percpu_countp", arg: 2, scope: !11433, file: !258, line: 159, type: !11436)
!11440 = !DILocation(line: 159, column: 33, scope: !11433)
!11441 = !DILocalVariable(name: "percpu_ptr", scope: !11433, file: !258, line: 161, type: !356)
!11442 = !DILocation(line: 161, column: 16, scope: !11433)
!11443 = !DILocation(line: 174, column: 15, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11433, file: !258, line: 174, column: 15)
!11445 = !DILocation(line: 174, column: 15, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11444, file: !258, line: 174, column: 15)
!11447 = !DILocation(line: 174, column: 13, scope: !11433)
!11448 = !DILocation(line: 182, column: 6, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11433, file: !258, line: 182, column: 6)
!11450 = !DILocation(line: 182, column: 6, scope: !11433)
!11451 = !DILocation(line: 183, column: 3, scope: !11449)
!11452 = !DILocation(line: 185, column: 45, scope: !11433)
!11453 = !DILocation(line: 185, column: 19, scope: !11433)
!11454 = !DILocation(line: 185, column: 3, scope: !11433)
!11455 = !DILocation(line: 185, column: 17, scope: !11433)
!11456 = !DILocation(line: 186, column: 2, scope: !11433)
!11457 = !DILocation(line: 187, column: 1, scope: !11433)
!11458 = distinct !DISubprogram(name: "percpu_ref_put_many", scope: !258, file: !258, line: 313, type: !11353, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11459 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !11460)
!11460 = distinct !DILocation(line: 1548, column: 2, scope: !11461, inlinedAt: !11464)
!11461 = distinct !DISubprogram(name: "atomic64_sub_and_test", scope: !5790, file: !5790, line: 1546, type: !11462, scopeLine: 1547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11462 = !DISubroutineType(types: !11463)
!11463 = !{!793, !338, !11360}
!11464 = distinct !DILocation(line: 461, column: 9, scope: !11465, inlinedAt: !11468)
!11465 = distinct !DISubprogram(name: "atomic_long_sub_and_test", scope: !333, file: !333, line: 459, type: !11466, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11466 = !DISubroutineType(types: !11467)
!11467 = !{!793, !197, !3603}
!11468 = distinct !DILocation(line: 321, column: 11, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !258, line: 321, column: 11)
!11470 = distinct !DILexicalBlock(scope: !11458, file: !258, line: 319, column: 6)
!11471 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !11460)
!11472 = !DILocalVariable(name: "i", arg: 1, scope: !11461, file: !5790, line: 1546, type: !338)
!11473 = !DILocation(line: 1546, column: 27, scope: !11461, inlinedAt: !11464)
!11474 = !DILocalVariable(name: "v", arg: 2, scope: !11461, file: !5790, line: 1546, type: !11360)
!11475 = !DILocation(line: 1546, column: 42, scope: !11461, inlinedAt: !11464)
!11476 = !DILocalVariable(name: "i", arg: 1, scope: !11465, file: !333, line: 459, type: !197)
!11477 = !DILocation(line: 459, column: 31, scope: !11465, inlinedAt: !11468)
!11478 = !DILocalVariable(name: "v", arg: 2, scope: !11465, file: !333, line: 459, type: !3603)
!11479 = !DILocation(line: 459, column: 49, scope: !11465, inlinedAt: !11468)
!11480 = !DILocalVariable(name: "ref", arg: 1, scope: !11458, file: !258, line: 313, type: !1772)
!11481 = !DILocation(line: 313, column: 59, scope: !11458)
!11482 = !DILocalVariable(name: "nr", arg: 2, scope: !11458, file: !258, line: 313, type: !356)
!11483 = !DILocation(line: 313, column: 78, scope: !11458)
!11484 = !DILocalVariable(name: "percpu_count", scope: !11458, file: !258, line: 315, type: !5474)
!11485 = !DILocation(line: 315, column: 26, scope: !11458)
!11486 = !DILocation(line: 639, column: 2, scope: !5902, inlinedAt: !11487)
!11487 = distinct !DILocation(line: 317, column: 2, scope: !11458)
!11488 = !DILocation(line: 319, column: 22, scope: !11470)
!11489 = !DILocation(line: 319, column: 6, scope: !11470)
!11490 = !DILocation(line: 319, column: 6, scope: !11458)
!11491 = !DILocation(line: 320, column: 3, scope: !11470)
!11492 = !DILocation(line: 320, column: 3, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11470, file: !258, line: 320, column: 3)
!11494 = !DILocalVariable(name: "__vpp_verify", scope: !11495, file: !258, line: 320, type: !1914)
!11495 = distinct !DILexicalBlock(scope: !11493, file: !258, line: 320, column: 3)
!11496 = !DILocation(line: 320, column: 3, scope: !11495)
!11497 = !DILocalVariable(name: "pao_ID__", scope: !11498, file: !258, line: 320, type: !11402)
!11498 = distinct !DILexicalBlock(scope: !11493, file: !258, line: 320, column: 3)
!11499 = !DILocation(line: 320, column: 3, scope: !11498)
!11500 = !DILocation(line: 320, column: 3, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !258, line: 320, column: 3)
!11502 = distinct !DILexicalBlock(scope: !11498, file: !258, line: 320, column: 3)
!11503 = !DILocalVariable(name: "pto_val__", scope: !11504, file: !258, line: 320, type: !403)
!11504 = distinct !DILexicalBlock(scope: !11501, file: !258, line: 320, column: 3)
!11505 = !DILocation(line: 320, column: 3, scope: !11504)
!11506 = !{i32 -2143158054}
!11507 = !DILocation(line: 321, column: 11, scope: !11469)
!11508 = !DILocation(line: 461, column: 31, scope: !11465, inlinedAt: !11468)
!11509 = !DILocation(line: 461, column: 34, scope: !11465, inlinedAt: !11468)
!11510 = !DILocation(line: 1548, column: 31, scope: !11461, inlinedAt: !11464)
!11511 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !11460)
!11512 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !11460)
!11513 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !11460)
!11514 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !11460)
!11515 = !DILocation(line: 1549, column: 36, scope: !11461, inlinedAt: !11464)
!11516 = !DILocation(line: 1549, column: 39, scope: !11461, inlinedAt: !11464)
!11517 = !DILocation(line: 1549, column: 9, scope: !11461, inlinedAt: !11464)
!11518 = !DILocation(line: 321, column: 11, scope: !11470)
!11519 = !DILocation(line: 322, column: 3, scope: !11469)
!11520 = !DILocation(line: 322, column: 8, scope: !11469)
!11521 = !DILocation(line: 322, column: 14, scope: !11469)
!11522 = !DILocation(line: 322, column: 22, scope: !11469)
!11523 = !DILocation(line: 324, column: 2, scope: !11458)
!11524 = !DILocation(line: 325, column: 1, scope: !11458)
!11525 = distinct !DISubprogram(name: "arch_atomic64_sub_and_test", scope: !11357, file: !11357, line: 74, type: !11462, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11526 = !DILocalVariable(name: "i", arg: 1, scope: !11525, file: !11357, line: 74, type: !338)
!11527 = !DILocation(line: 74, column: 51, scope: !11525)
!11528 = !DILocalVariable(name: "v", arg: 2, scope: !11525, file: !11357, line: 74, type: !11360)
!11529 = !DILocation(line: 74, column: 66, scope: !11525)
!11530 = !DILocalVariable(name: "c", scope: !11531, file: !11357, line: 76, type: !793)
!11531 = distinct !DILexicalBlock(scope: !11525, file: !11357, line: 76, column: 9)
!11532 = !DILocation(line: 76, column: 9, scope: !11531)
!11533 = !{i32 -2146251917, i32 -2146251825}
!11534 = !DILocation(line: 76, column: 2, scope: !11525)
!11535 = distinct !DISubprogram(name: "scsi_mq_requeue_cmd", scope: !3, file: !3, line: 154, type: !5352, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11536 = !DILocalVariable(name: "cmd", arg: 1, scope: !11535, file: !3, line: 154, type: !268)
!11537 = !DILocation(line: 154, column: 51, scope: !11535)
!11538 = !DILocation(line: 156, column: 6, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 156, column: 6)
!11540 = !DILocation(line: 156, column: 11, scope: !11539)
!11541 = !DILocation(line: 156, column: 20, scope: !11539)
!11542 = !DILocation(line: 156, column: 29, scope: !11539)
!11543 = !DILocation(line: 156, column: 6, scope: !11535)
!11544 = !DILocation(line: 157, column: 3, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 156, column: 45)
!11546 = !DILocation(line: 157, column: 8, scope: !11545)
!11547 = !DILocation(line: 157, column: 17, scope: !11545)
!11548 = !DILocation(line: 157, column: 26, scope: !11545)
!11549 = !DILocation(line: 158, column: 22, scope: !11545)
!11550 = !DILocation(line: 158, column: 3, scope: !11545)
!11551 = !DILocation(line: 159, column: 2, scope: !11545)
!11552 = !DILocalVariable(name: "__ret_warn_on", scope: !11553, file: !3, line: 160, type: !286)
!11553 = distinct !DILexicalBlock(scope: !11554, file: !3, line: 160, column: 3)
!11554 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 159, column: 9)
!11555 = !DILocation(line: 160, column: 3, scope: !11553)
!11556 = !DILocation(line: 160, column: 3, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 160, column: 3)
!11558 = !DILocation(line: 160, column: 3, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 160, column: 3)
!11560 = !DILocation(line: 160, column: 3, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 160, column: 3)
!11562 = !DILocation(line: 160, column: 3, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 160, column: 3)
!11564 = !{i32 -2140968089, i32 -2140968060, i32 -2140968014, i32 -2140967956, i32 -2140967902, i32 -2140967848, i32 -2140967793, i32 -2140967762}
!11565 = !DILocation(line: 160, column: 3, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 160, column: 3)
!11567 = !{i32 -2140967346, i32 -2140967339, i32 -2140967287, i32 -2140967256, i32 -2140967226}
!11568 = !DILocation(line: 160, column: 3, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 160, column: 3)
!11570 = !DILocation(line: 162, column: 25, scope: !11535)
!11571 = !DILocation(line: 162, column: 30, scope: !11535)
!11572 = !DILocation(line: 162, column: 2, scope: !11535)
!11573 = !DILocation(line: 163, column: 1, scope: !11535)
!11574 = distinct !DISubprogram(name: "scsi_cmd_runtime_exceeced", scope: !3, file: !3, line: 658, type: !11575, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11575 = !DISubroutineType(types: !11576)
!11576 = !{!793, !268}
!11577 = !DILocalVariable(name: "cmd", arg: 1, scope: !11574, file: !3, line: 658, type: !268)
!11578 = !DILocation(line: 658, column: 57, scope: !11574)
!11579 = !DILocalVariable(name: "req", scope: !11574, file: !3, line: 660, type: !2780)
!11580 = !DILocation(line: 660, column: 18, scope: !11574)
!11581 = !DILocation(line: 660, column: 24, scope: !11574)
!11582 = !DILocation(line: 660, column: 29, scope: !11574)
!11583 = !DILocalVariable(name: "wait_for", scope: !11574, file: !3, line: 661, type: !356)
!11584 = !DILocation(line: 661, column: 16, scope: !11574)
!11585 = !DILocation(line: 663, column: 6, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11574, file: !3, line: 663, column: 6)
!11587 = !DILocation(line: 663, column: 11, scope: !11586)
!11588 = !DILocation(line: 663, column: 19, scope: !11586)
!11589 = !DILocation(line: 663, column: 6, scope: !11574)
!11590 = !DILocation(line: 664, column: 3, scope: !11586)
!11591 = !DILocation(line: 666, column: 14, scope: !11574)
!11592 = !DILocation(line: 666, column: 19, scope: !11574)
!11593 = !DILocation(line: 666, column: 27, scope: !11574)
!11594 = !DILocation(line: 666, column: 34, scope: !11574)
!11595 = !DILocation(line: 666, column: 39, scope: !11574)
!11596 = !DILocation(line: 666, column: 32, scope: !11574)
!11597 = !DILocation(line: 666, column: 13, scope: !11574)
!11598 = !DILocation(line: 666, column: 11, scope: !11574)
!11599 = !DILocation(line: 667, column: 6, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11574, file: !3, line: 667, column: 6)
!11601 = !DILocation(line: 667, column: 6, scope: !11574)
!11602 = !DILocation(line: 668, column: 25, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11600, file: !3, line: 667, column: 62)
!11604 = !DILocation(line: 669, column: 8, scope: !11603)
!11605 = !DILocation(line: 669, column: 16, scope: !11603)
!11606 = !DILocation(line: 668, column: 3, scope: !11603)
!11607 = !DILocation(line: 670, column: 3, scope: !11603)
!11608 = !DILocation(line: 672, column: 2, scope: !11574)
!11609 = !DILocation(line: 673, column: 1, scope: !11574)
!11610 = distinct !DISubprogram(name: "op_is_write", scope: !169, file: !169, line: 459, type: !11198, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11611 = !DILocalVariable(name: "op", arg: 1, scope: !11610, file: !169, line: 459, type: !7)
!11612 = !DILocation(line: 459, column: 45, scope: !11610)
!11613 = !DILocation(line: 461, column: 10, scope: !11610)
!11614 = !DILocation(line: 461, column: 13, scope: !11610)
!11615 = !DILocation(line: 461, column: 9, scope: !11610)
!11616 = !DILocation(line: 461, column: 2, scope: !11610)
!11617 = distinct !DISubprogram(name: "sg_set_page", scope: !5330, file: !5330, line: 116, type: !11618, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11618 = !DISubroutineType(types: !11619)
!11619 = !{null, !5333, !629, !7, !7}
!11620 = !DILocalVariable(name: "sg", arg: 1, scope: !11617, file: !5330, line: 116, type: !5333)
!11621 = !DILocation(line: 116, column: 52, scope: !11617)
!11622 = !DILocalVariable(name: "page", arg: 2, scope: !11617, file: !5330, line: 116, type: !629)
!11623 = !DILocation(line: 116, column: 69, scope: !11617)
!11624 = !DILocalVariable(name: "len", arg: 3, scope: !11617, file: !5330, line: 117, type: !7)
!11625 = !DILocation(line: 117, column: 24, scope: !11617)
!11626 = !DILocalVariable(name: "offset", arg: 4, scope: !11617, file: !5330, line: 117, type: !7)
!11627 = !DILocation(line: 117, column: 42, scope: !11617)
!11628 = !DILocation(line: 119, column: 17, scope: !11617)
!11629 = !DILocation(line: 119, column: 21, scope: !11617)
!11630 = !DILocation(line: 119, column: 2, scope: !11617)
!11631 = !DILocation(line: 120, column: 15, scope: !11617)
!11632 = !DILocation(line: 120, column: 2, scope: !11617)
!11633 = !DILocation(line: 120, column: 6, scope: !11617)
!11634 = !DILocation(line: 120, column: 13, scope: !11617)
!11635 = !DILocation(line: 121, column: 15, scope: !11617)
!11636 = !DILocation(line: 121, column: 2, scope: !11617)
!11637 = !DILocation(line: 121, column: 6, scope: !11617)
!11638 = !DILocation(line: 121, column: 13, scope: !11617)
!11639 = !DILocation(line: 122, column: 1, scope: !11617)
!11640 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !11641, file: !11641, line: 18, type: !11642, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11641 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!11642 = !DISubroutineType(types: !11643)
!11643 = !{!356, !356}
!11644 = !DILocalVariable(name: "x", arg: 1, scope: !11640, file: !11641, line: 18, type: !356)
!11645 = !DILocation(line: 18, column: 63, scope: !11640)
!11646 = !DILocalVariable(name: "y", scope: !11640, file: !11641, line: 20, type: !356)
!11647 = !DILocation(line: 20, column: 16, scope: !11640)
!11648 = !DILocation(line: 20, column: 20, scope: !11640)
!11649 = !DILocation(line: 20, column: 22, scope: !11640)
!11650 = !DILocation(line: 23, column: 6, scope: !11640)
!11651 = !DILocation(line: 23, column: 12, scope: !11640)
!11652 = !DILocation(line: 23, column: 16, scope: !11640)
!11653 = !DILocation(line: 23, column: 14, scope: !11640)
!11654 = !DILocation(line: 23, column: 11, scope: !11640)
!11655 = !DILocation(line: 23, column: 21, scope: !11640)
!11656 = !DILocation(line: 23, column: 55, scope: !11640)
!11657 = !DILocation(line: 23, column: 53, scope: !11640)
!11658 = !DILocation(line: 23, column: 8, scope: !11640)
!11659 = !DILocation(line: 23, column: 4, scope: !11640)
!11660 = !DILocation(line: 25, column: 9, scope: !11640)
!11661 = !DILocation(line: 25, column: 2, scope: !11640)
!11662 = distinct !DISubprogram(name: "sg_assign_page", scope: !5330, file: !5330, line: 87, type: !11663, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11663 = !DISubroutineType(types: !11664)
!11664 = !{null, !5333, !629}
!11665 = !DILocalVariable(name: "sg", arg: 1, scope: !11662, file: !5330, line: 87, type: !5333)
!11666 = !DILocation(line: 87, column: 55, scope: !11662)
!11667 = !DILocalVariable(name: "page", arg: 2, scope: !11662, file: !5330, line: 87, type: !629)
!11668 = !DILocation(line: 87, column: 72, scope: !11662)
!11669 = !DILocalVariable(name: "page_link", scope: !11662, file: !5330, line: 89, type: !356)
!11670 = !DILocation(line: 89, column: 16, scope: !11662)
!11671 = !DILocation(line: 89, column: 28, scope: !11662)
!11672 = !DILocation(line: 89, column: 32, scope: !11662)
!11673 = !DILocation(line: 89, column: 42, scope: !11662)
!11674 = !DILocation(line: 95, column: 2, scope: !11662)
!11675 = !DILocation(line: 95, column: 2, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11677, file: !5330, line: 95, column: 2)
!11677 = distinct !DILexicalBlock(scope: !11662, file: !5330, line: 95, column: 2)
!11678 = !DILocation(line: 95, column: 2, scope: !11677)
!11679 = !DILocation(line: 95, column: 2, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11676, file: !5330, line: 95, column: 2)
!11681 = !DILocation(line: 95, column: 2, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11680, file: !5330, line: 95, column: 2)
!11683 = !DILocation(line: 95, column: 2, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11680, file: !5330, line: 95, column: 2)
!11685 = !{i32 -2141783746, i32 -2141783717, i32 -2141783671, i32 -2141783613, i32 -2141783559, i32 -2141783505, i32 -2141783450, i32 -2141783419}
!11686 = !DILocation(line: 95, column: 2, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11688, file: !5330, line: 95, column: 2)
!11688 = distinct !DILexicalBlock(scope: !11680, file: !5330, line: 95, column: 2)
!11689 = !{i32 -2141782970, i32 -2141782963, i32 -2141782909, i32 -2141782878, i32 -2141782848}
!11690 = !DILocation(line: 95, column: 2, scope: !11688)
!11691 = !DILocation(line: 99, column: 18, scope: !11662)
!11692 = !DILocation(line: 99, column: 46, scope: !11662)
!11693 = !DILocation(line: 99, column: 30, scope: !11662)
!11694 = !DILocation(line: 99, column: 28, scope: !11662)
!11695 = !DILocation(line: 99, column: 2, scope: !11662)
!11696 = !DILocation(line: 99, column: 6, scope: !11662)
!11697 = !DILocation(line: 99, column: 16, scope: !11662)
!11698 = !DILocation(line: 100, column: 1, scope: !11662)
!11699 = distinct !DISubprogram(name: "blk_op_is_scsi", scope: !68, file: !68, line: 250, type: !11198, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11700 = !DILocalVariable(name: "op", arg: 1, scope: !11699, file: !68, line: 250, type: !7)
!11701 = !DILocation(line: 250, column: 48, scope: !11699)
!11702 = !DILocation(line: 252, column: 9, scope: !11699)
!11703 = !DILocation(line: 252, column: 12, scope: !11699)
!11704 = !DILocation(line: 252, column: 30, scope: !11699)
!11705 = !DILocation(line: 252, column: 33, scope: !11699)
!11706 = !DILocation(line: 252, column: 36, scope: !11699)
!11707 = !DILocation(line: 252, column: 2, scope: !11699)
!11708 = distinct !DISubprogram(name: "init_rcu_head", scope: !5903, file: !5903, line: 232, type: !981, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11709 = !DILocalVariable(name: "head", arg: 1, scope: !11708, file: !5903, line: 232, type: !978)
!11710 = !DILocation(line: 232, column: 51, scope: !11708)
!11711 = !DILocation(line: 232, column: 59, scope: !11708)
!11712 = distinct !DISubprogram(name: "kasan_check_read", scope: !10525, file: !10525, line: 34, type: !10526, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11713 = !DILocalVariable(name: "p", arg: 1, scope: !11712, file: !10525, line: 34, type: !5797)
!11714 = !DILocation(line: 34, column: 58, scope: !11712)
!11715 = !DILocalVariable(name: "size", arg: 2, scope: !11712, file: !10525, line: 34, type: !7)
!11716 = !DILocation(line: 34, column: 74, scope: !11712)
!11717 = !DILocation(line: 36, column: 2, scope: !11712)
!11718 = distinct !DISubprogram(name: "scsi_queue_rq", scope: !3, file: !3, line: 1638, type: !3130, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11719 = !DILocation(line: 106, column: 55, scope: !5782, inlinedAt: !11720)
!11720 = distinct !DILocation(line: 331, column: 2, scope: !5789, inlinedAt: !11721)
!11721 = distinct !DILocation(line: 1698, column: 3, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 1697, column: 6)
!11723 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !11724)
!11724 = distinct !DILocation(line: 330, column: 2, scope: !5789, inlinedAt: !11721)
!11725 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !11724)
!11726 = !DILocation(line: 328, column: 22, scope: !5789, inlinedAt: !11721)
!11727 = !DILocalVariable(name: "hctx", arg: 1, scope: !11718, file: !3, line: 1638, type: !2788)
!11728 = !DILocation(line: 1638, column: 57, scope: !11718)
!11729 = !DILocalVariable(name: "bd", arg: 2, scope: !11718, file: !3, line: 1639, type: !3132)
!11730 = !DILocation(line: 1639, column: 37, scope: !11718)
!11731 = !DILocalVariable(name: "req", scope: !11718, file: !3, line: 1641, type: !2780)
!11732 = !DILocation(line: 1641, column: 18, scope: !11718)
!11733 = !DILocation(line: 1641, column: 24, scope: !11718)
!11734 = !DILocation(line: 1641, column: 28, scope: !11718)
!11735 = !DILocalVariable(name: "q", scope: !11718, file: !3, line: 1642, type: !2776)
!11736 = !DILocation(line: 1642, column: 24, scope: !11718)
!11737 = !DILocation(line: 1642, column: 28, scope: !11718)
!11738 = !DILocation(line: 1642, column: 33, scope: !11718)
!11739 = !DILocalVariable(name: "sdev", scope: !11718, file: !3, line: 1643, type: !293)
!11740 = !DILocation(line: 1643, column: 22, scope: !11718)
!11741 = !DILocation(line: 1643, column: 29, scope: !11718)
!11742 = !DILocation(line: 1643, column: 32, scope: !11718)
!11743 = !DILocalVariable(name: "shost", scope: !11718, file: !3, line: 1644, type: !297)
!11744 = !DILocation(line: 1644, column: 20, scope: !11718)
!11745 = !DILocation(line: 1644, column: 28, scope: !11718)
!11746 = !DILocation(line: 1644, column: 34, scope: !11718)
!11747 = !DILocalVariable(name: "cmd", scope: !11718, file: !3, line: 1645, type: !268)
!11748 = !DILocation(line: 1645, column: 20, scope: !11718)
!11749 = !DILocation(line: 1645, column: 43, scope: !11718)
!11750 = !DILocation(line: 1645, column: 26, scope: !11718)
!11751 = !DILocalVariable(name: "ret", scope: !11718, file: !3, line: 1646, type: !2614)
!11752 = !DILocation(line: 1646, column: 15, scope: !11718)
!11753 = !DILocalVariable(name: "reason", scope: !11718, file: !3, line: 1647, type: !286)
!11754 = !DILocation(line: 1647, column: 6, scope: !11718)
!11755 = !DILocation(line: 1653, column: 6, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 1653, column: 6)
!11757 = !DILocation(line: 1653, column: 6, scope: !11718)
!11758 = !DILocation(line: 1654, column: 33, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 1653, column: 50)
!11760 = !DILocation(line: 1654, column: 39, scope: !11759)
!11761 = !DILocation(line: 1654, column: 9, scope: !11759)
!11762 = !DILocation(line: 1654, column: 7, scope: !11759)
!11763 = !DILocation(line: 1655, column: 7, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 1655, column: 7)
!11765 = !DILocation(line: 1655, column: 11, scope: !11764)
!11766 = !DILocation(line: 1655, column: 7, scope: !11759)
!11767 = !DILocation(line: 1656, column: 4, scope: !11764)
!11768 = !DILocation(line: 1657, column: 2, scope: !11759)
!11769 = !DILocation(line: 1659, column: 6, scope: !11718)
!11770 = !DILocation(line: 1660, column: 31, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 1660, column: 6)
!11772 = !DILocation(line: 1660, column: 38, scope: !11771)
!11773 = !DILocation(line: 1660, column: 7, scope: !11771)
!11774 = !DILocation(line: 1660, column: 6, scope: !11718)
!11775 = !DILocation(line: 1661, column: 3, scope: !11771)
!11776 = !DILocation(line: 1662, column: 29, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 1662, column: 6)
!11778 = !DILocation(line: 1662, column: 32, scope: !11777)
!11779 = !DILocation(line: 1662, column: 39, scope: !11777)
!11780 = !DILocation(line: 1662, column: 45, scope: !11777)
!11781 = !DILocation(line: 1662, column: 7, scope: !11777)
!11782 = !DILocation(line: 1662, column: 6, scope: !11718)
!11783 = !DILocation(line: 1663, column: 3, scope: !11777)
!11784 = !DILocation(line: 1665, column: 8, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 1665, column: 6)
!11786 = !DILocation(line: 1665, column: 13, scope: !11785)
!11787 = !DILocation(line: 1665, column: 22, scope: !11785)
!11788 = !DILocation(line: 1665, column: 6, scope: !11718)
!11789 = !DILocation(line: 1666, column: 26, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 1665, column: 39)
!11791 = !DILocation(line: 1666, column: 9, scope: !11790)
!11792 = !DILocation(line: 1666, column: 7, scope: !11790)
!11793 = !DILocation(line: 1667, column: 7, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 1667, column: 7)
!11795 = !DILocation(line: 1667, column: 11, scope: !11794)
!11796 = !DILocation(line: 1667, column: 7, scope: !11790)
!11797 = !DILocation(line: 1668, column: 4, scope: !11794)
!11798 = !DILocation(line: 1669, column: 3, scope: !11790)
!11799 = !DILocation(line: 1669, column: 8, scope: !11790)
!11800 = !DILocation(line: 1669, column: 17, scope: !11790)
!11801 = !DILocation(line: 1670, column: 2, scope: !11790)
!11802 = !DILocation(line: 1671, column: 35, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 1670, column: 9)
!11804 = !DILocation(line: 1671, column: 40, scope: !11803)
!11805 = !DILocation(line: 1671, column: 3, scope: !11803)
!11806 = !DILocation(line: 1674, column: 2, scope: !11718)
!11807 = !DILocation(line: 1674, column: 7, scope: !11718)
!11808 = !DILocation(line: 1674, column: 13, scope: !11718)
!11809 = !DILocation(line: 1675, column: 6, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 1675, column: 6)
!11811 = !DILocation(line: 1675, column: 12, scope: !11810)
!11812 = !DILocation(line: 1675, column: 6, scope: !11718)
!11813 = !DILocation(line: 1676, column: 3, scope: !11810)
!11814 = !DILocation(line: 1676, column: 8, scope: !11810)
!11815 = !DILocation(line: 1676, column: 14, scope: !11810)
!11816 = !DILocation(line: 1677, column: 6, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 1677, column: 6)
!11818 = !DILocation(line: 1677, column: 10, scope: !11817)
!11819 = !DILocation(line: 1677, column: 6, scope: !11718)
!11820 = !DILocation(line: 1678, column: 3, scope: !11817)
!11821 = !DILocation(line: 1678, column: 8, scope: !11817)
!11822 = !DILocation(line: 1678, column: 14, scope: !11817)
!11823 = !DILocation(line: 1680, column: 17, scope: !11718)
!11824 = !DILocation(line: 1680, column: 2, scope: !11718)
!11825 = !DILocation(line: 1681, column: 9, scope: !11718)
!11826 = !DILocation(line: 1681, column: 14, scope: !11718)
!11827 = !DILocation(line: 1681, column: 2, scope: !11718)
!11828 = !DILocation(line: 1682, column: 2, scope: !11718)
!11829 = !DILocation(line: 1682, column: 7, scope: !11718)
!11830 = !DILocation(line: 1682, column: 17, scope: !11718)
!11831 = !DILocation(line: 1684, column: 23, scope: !11718)
!11832 = !DILocation(line: 1684, column: 2, scope: !11718)
!11833 = !DILocation(line: 1685, column: 29, scope: !11718)
!11834 = !DILocation(line: 1685, column: 11, scope: !11718)
!11835 = !DILocation(line: 1685, column: 9, scope: !11718)
!11836 = !DILocation(line: 1686, column: 6, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 1686, column: 6)
!11838 = !DILocation(line: 1686, column: 6, scope: !11718)
!11839 = !DILocation(line: 1687, column: 20, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 1686, column: 14)
!11841 = !DILocation(line: 1687, column: 25, scope: !11840)
!11842 = !DILocation(line: 1687, column: 3, scope: !11840)
!11843 = !DILocation(line: 1688, column: 7, scope: !11840)
!11844 = !DILocation(line: 1689, column: 3, scope: !11840)
!11845 = !DILocation(line: 1692, column: 2, scope: !11718)
!11846 = !DILabel(scope: !11718, name: "out_dec_host_busy", file: !3, line: 1694)
!11847 = !DILocation(line: 1694, column: 1, scope: !11718)
!11848 = !DILocation(line: 1695, column: 21, scope: !11718)
!11849 = !DILocation(line: 1695, column: 28, scope: !11718)
!11850 = !DILocation(line: 1695, column: 2, scope: !11718)
!11851 = !DILabel(scope: !11718, name: "out_dec_target_busy", file: !3, line: 1696)
!11852 = !DILocation(line: 1696, column: 1, scope: !11718)
!11853 = !DILocation(line: 1697, column: 18, scope: !11722)
!11854 = !DILocation(line: 1697, column: 6, scope: !11722)
!11855 = !DILocation(line: 1697, column: 25, scope: !11722)
!11856 = !DILocation(line: 1697, column: 35, scope: !11722)
!11857 = !DILocation(line: 1697, column: 6, scope: !11718)
!11858 = !DILocation(line: 1698, column: 27, scope: !11722)
!11859 = !DILocation(line: 1698, column: 15, scope: !11722)
!11860 = !DILocation(line: 1698, column: 34, scope: !11722)
!11861 = !DILocation(line: 330, column: 31, scope: !5789, inlinedAt: !11721)
!11862 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !11724)
!11863 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !11724)
!11864 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !11724)
!11865 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !11724)
!11866 = !DILocation(line: 331, column: 18, scope: !5789, inlinedAt: !11721)
!11867 = !DILocation(line: 109, column: 16, scope: !5782, inlinedAt: !11720)
!11868 = !DILocation(line: 109, column: 19, scope: !5782, inlinedAt: !11720)
!11869 = !DILocation(line: 108, column: 2, scope: !5782, inlinedAt: !11720)
!11870 = !DILocation(line: 1698, column: 3, scope: !11722)
!11871 = !DILocation(line: 1697, column: 37, scope: !11722)
!11872 = !DILabel(scope: !11718, name: "out_put_budget", file: !3, line: 1699)
!11873 = !DILocation(line: 1699, column: 1, scope: !11718)
!11874 = !DILocation(line: 1700, column: 21, scope: !11718)
!11875 = !DILocation(line: 1700, column: 2, scope: !11718)
!11876 = !DILocation(line: 1701, column: 10, scope: !11718)
!11877 = !DILocation(line: 1701, column: 2, scope: !11718)
!11878 = !DILocation(line: 1703, column: 3, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 1701, column: 15)
!11880 = !DILocation(line: 1706, column: 27, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 1706, column: 7)
!11882 = !DILocation(line: 1706, column: 7, scope: !11881)
!11883 = !DILocation(line: 1706, column: 7, scope: !11879)
!11884 = !DILocation(line: 1707, column: 8, scope: !11881)
!11885 = !DILocation(line: 1707, column: 4, scope: !11881)
!11886 = !DILocation(line: 1708, column: 3, scope: !11879)
!11887 = !DILocation(line: 1710, column: 7, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 1710, column: 7)
!11889 = !DILocation(line: 1710, column: 7, scope: !11879)
!11890 = !DILocation(line: 1711, column: 13, scope: !11888)
!11891 = !DILocation(line: 1711, column: 4, scope: !11888)
!11892 = !DILocation(line: 1711, column: 19, scope: !11888)
!11893 = !DILocation(line: 1711, column: 26, scope: !11888)
!11894 = !DILocation(line: 1713, column: 13, scope: !11888)
!11895 = !DILocation(line: 1713, column: 4, scope: !11888)
!11896 = !DILocation(line: 1713, column: 19, scope: !11888)
!11897 = !DILocation(line: 1713, column: 26, scope: !11888)
!11898 = !DILocation(line: 1719, column: 7, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11879, file: !3, line: 1719, column: 7)
!11900 = !DILocation(line: 1719, column: 12, scope: !11899)
!11901 = !DILocation(line: 1719, column: 21, scope: !11899)
!11902 = !DILocation(line: 1719, column: 7, scope: !11879)
!11903 = !DILocation(line: 1720, column: 23, scope: !11899)
!11904 = !DILocation(line: 1720, column: 4, scope: !11899)
!11905 = !DILocation(line: 1721, column: 24, scope: !11879)
!11906 = !DILocation(line: 1721, column: 3, scope: !11879)
!11907 = !DILocation(line: 1722, column: 3, scope: !11879)
!11908 = !DILocation(line: 1724, column: 9, scope: !11718)
!11909 = !DILocation(line: 1724, column: 2, scope: !11718)
!11910 = !DILocation(line: 1725, column: 1, scope: !11718)
!11911 = distinct !DISubprogram(name: "scsi_commit_rqs", scope: !3, file: !3, line: 1850, type: !3024, scopeLine: 1851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11912 = !DILocalVariable(name: "hctx", arg: 1, scope: !11911, file: !3, line: 1850, type: !2788)
!11913 = !DILocation(line: 1850, column: 51, scope: !11911)
!11914 = !DILocalVariable(name: "q", scope: !11911, file: !3, line: 1852, type: !2776)
!11915 = !DILocation(line: 1852, column: 24, scope: !11911)
!11916 = !DILocation(line: 1852, column: 28, scope: !11911)
!11917 = !DILocation(line: 1852, column: 34, scope: !11911)
!11918 = !DILocalVariable(name: "sdev", scope: !11911, file: !3, line: 1853, type: !293)
!11919 = !DILocation(line: 1853, column: 22, scope: !11911)
!11920 = !DILocation(line: 1853, column: 29, scope: !11911)
!11921 = !DILocation(line: 1853, column: 32, scope: !11911)
!11922 = !DILocalVariable(name: "shost", scope: !11911, file: !3, line: 1854, type: !297)
!11923 = !DILocation(line: 1854, column: 20, scope: !11911)
!11924 = !DILocation(line: 1854, column: 28, scope: !11911)
!11925 = !DILocation(line: 1854, column: 34, scope: !11911)
!11926 = !DILocation(line: 1856, column: 2, scope: !11911)
!11927 = !DILocation(line: 1856, column: 9, scope: !11911)
!11928 = !DILocation(line: 1856, column: 16, scope: !11911)
!11929 = !DILocation(line: 1856, column: 27, scope: !11911)
!11930 = !DILocation(line: 1856, column: 34, scope: !11911)
!11931 = !DILocation(line: 1856, column: 40, scope: !11911)
!11932 = !DILocation(line: 1857, column: 1, scope: !11911)
!11933 = distinct !DISubprogram(name: "scsi_mq_get_budget", scope: !3, file: !3, line: 1608, type: !3141, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11934 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !11935)
!11935 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !11936)
!11936 = distinct !DILocation(line: 1632, column: 6, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11933, file: !3, line: 1632, column: 6)
!11938 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !11939)
!11939 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !11936)
!11940 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !11939)
!11941 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !11936)
!11942 = !DILocation(line: 93, column: 55, scope: !9954, inlinedAt: !11943)
!11943 = distinct !DILocation(line: 241, column: 2, scope: !9957, inlinedAt: !11944)
!11944 = distinct !DILocation(line: 1615, column: 2, scope: !11933)
!11945 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !11946)
!11946 = distinct !DILocation(line: 240, column: 2, scope: !9957, inlinedAt: !11944)
!11947 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !11946)
!11948 = !DILocation(line: 238, column: 22, scope: !9957, inlinedAt: !11944)
!11949 = !DILocalVariable(name: "q", arg: 1, scope: !11933, file: !3, line: 1608, type: !2776)
!11950 = !DILocation(line: 1608, column: 54, scope: !11933)
!11951 = !DILocalVariable(name: "sdev", scope: !11933, file: !3, line: 1610, type: !293)
!11952 = !DILocation(line: 1610, column: 22, scope: !11933)
!11953 = !DILocation(line: 1610, column: 29, scope: !11933)
!11954 = !DILocation(line: 1610, column: 32, scope: !11933)
!11955 = !DILocation(line: 1612, column: 27, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11933, file: !3, line: 1612, column: 6)
!11957 = !DILocation(line: 1612, column: 30, scope: !11956)
!11958 = !DILocation(line: 1612, column: 6, scope: !11956)
!11959 = !DILocation(line: 1612, column: 6, scope: !11933)
!11960 = !DILocation(line: 1613, column: 3, scope: !11956)
!11961 = !DILocation(line: 1615, column: 14, scope: !11933)
!11962 = !DILocation(line: 1615, column: 20, scope: !11933)
!11963 = !DILocation(line: 240, column: 31, scope: !9957, inlinedAt: !11944)
!11964 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !11946)
!11965 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !11946)
!11966 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !11946)
!11967 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !11946)
!11968 = !DILocation(line: 241, column: 18, scope: !9957, inlinedAt: !11944)
!11969 = !DILocation(line: 96, column: 16, scope: !9954, inlinedAt: !11943)
!11970 = !DILocation(line: 96, column: 19, scope: !9954, inlinedAt: !11943)
!11971 = !DILocation(line: 95, column: 2, scope: !9954, inlinedAt: !11943)
!11972 = !DILocation(line: 1622, column: 2, scope: !11933)
!11973 = !{i32 -2140922556}
!11974 = !DILocation(line: 1632, column: 6, scope: !11937)
!11975 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !11936)
!11976 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !11939)
!11977 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !11939)
!11978 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !11939)
!11979 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !11939)
!11980 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !11936)
!11981 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !11935)
!11982 = !DILocation(line: 0, scope: !11937)
!11983 = !DILocation(line: 1632, column: 6, scope: !11933)
!11984 = !DILocation(line: 1634, column: 30, scope: !11937)
!11985 = !DILocation(line: 1634, column: 36, scope: !11937)
!11986 = !DILocation(line: 1634, column: 3, scope: !11937)
!11987 = !DILocation(line: 1635, column: 2, scope: !11933)
!11988 = !DILocation(line: 1636, column: 1, scope: !11933)
!11989 = distinct !DISubprogram(name: "scsi_mq_put_budget", scope: !3, file: !3, line: 1601, type: !3145, scopeLine: 1602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!11990 = !DILocation(line: 106, column: 55, scope: !5782, inlinedAt: !11991)
!11991 = distinct !DILocation(line: 331, column: 2, scope: !5789, inlinedAt: !11992)
!11992 = distinct !DILocation(line: 1605, column: 2, scope: !11989)
!11993 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !11994)
!11994 = distinct !DILocation(line: 330, column: 2, scope: !5789, inlinedAt: !11992)
!11995 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !11994)
!11996 = !DILocation(line: 328, column: 22, scope: !5789, inlinedAt: !11992)
!11997 = !DILocalVariable(name: "q", arg: 1, scope: !11989, file: !3, line: 1601, type: !2776)
!11998 = !DILocation(line: 1601, column: 54, scope: !11989)
!11999 = !DILocalVariable(name: "sdev", scope: !11989, file: !3, line: 1603, type: !293)
!12000 = !DILocation(line: 1603, column: 22, scope: !11989)
!12001 = !DILocation(line: 1603, column: 29, scope: !11989)
!12002 = !DILocation(line: 1603, column: 32, scope: !11989)
!12003 = !DILocation(line: 1605, column: 14, scope: !11989)
!12004 = !DILocation(line: 1605, column: 20, scope: !11989)
!12005 = !DILocation(line: 330, column: 31, scope: !5789, inlinedAt: !11992)
!12006 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !11994)
!12007 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !11994)
!12008 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !11994)
!12009 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !11994)
!12010 = !DILocation(line: 331, column: 18, scope: !5789, inlinedAt: !11992)
!12011 = !DILocation(line: 109, column: 16, scope: !5782, inlinedAt: !11991)
!12012 = !DILocation(line: 109, column: 19, scope: !5782, inlinedAt: !11991)
!12013 = !DILocation(line: 108, column: 2, scope: !5782, inlinedAt: !11991)
!12014 = !DILocation(line: 1606, column: 1, scope: !11989)
!12015 = distinct !DISubprogram(name: "scsi_timeout", scope: !3, file: !3, line: 1727, type: !3149, scopeLine: 1729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12016 = !DILocalVariable(name: "req", arg: 1, scope: !12015, file: !3, line: 1727, type: !2780)
!12017 = !DILocation(line: 1727, column: 62, scope: !12015)
!12018 = !DILocalVariable(name: "reserved", arg: 2, scope: !12015, file: !3, line: 1728, type: !793)
!12019 = !DILocation(line: 1728, column: 8, scope: !12015)
!12020 = !DILocation(line: 1730, column: 6, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12015, file: !3, line: 1730, column: 6)
!12022 = !DILocation(line: 1730, column: 6, scope: !12015)
!12023 = !DILocation(line: 1731, column: 3, scope: !12021)
!12024 = !DILocation(line: 1732, column: 24, scope: !12015)
!12025 = !DILocation(line: 1732, column: 9, scope: !12015)
!12026 = !DILocation(line: 1732, column: 2, scope: !12015)
!12027 = !DILocation(line: 1733, column: 1, scope: !12015)
!12028 = distinct !DISubprogram(name: "scsi_softirq_done", scope: !3, file: !3, line: 1424, type: !3055, scopeLine: 1425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12029 = !DILocation(line: 93, column: 55, scope: !9954, inlinedAt: !12030)
!12030 = distinct !DILocation(line: 241, column: 2, scope: !9957, inlinedAt: !12031)
!12031 = distinct !DILocation(line: 1433, column: 3, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12028, file: !3, line: 1432, column: 6)
!12033 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !12034)
!12034 = distinct !DILocation(line: 240, column: 2, scope: !9957, inlinedAt: !12031)
!12035 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !12034)
!12036 = !DILocation(line: 238, column: 22, scope: !9957, inlinedAt: !12031)
!12037 = !DILocation(line: 93, column: 55, scope: !9954, inlinedAt: !12038)
!12038 = distinct !DILocation(line: 241, column: 2, scope: !9957, inlinedAt: !12039)
!12039 = distinct !DILocation(line: 1431, column: 2, scope: !12028)
!12040 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !12041)
!12041 = distinct !DILocation(line: 240, column: 2, scope: !9957, inlinedAt: !12039)
!12042 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !12041)
!12043 = !DILocation(line: 238, column: 22, scope: !9957, inlinedAt: !12039)
!12044 = !DILocalVariable(name: "rq", arg: 1, scope: !12028, file: !3, line: 1424, type: !2780)
!12045 = !DILocation(line: 1424, column: 47, scope: !12028)
!12046 = !DILocalVariable(name: "cmd", scope: !12028, file: !3, line: 1426, type: !268)
!12047 = !DILocation(line: 1426, column: 20, scope: !12028)
!12048 = !DILocation(line: 1426, column: 43, scope: !12028)
!12049 = !DILocation(line: 1426, column: 26, scope: !12028)
!12050 = !DILocalVariable(name: "disposition", scope: !12028, file: !3, line: 1427, type: !286)
!12051 = !DILocation(line: 1427, column: 6, scope: !12028)
!12052 = !DILocation(line: 1429, column: 18, scope: !12028)
!12053 = !DILocation(line: 1429, column: 23, scope: !12028)
!12054 = !DILocation(line: 1429, column: 2, scope: !12028)
!12055 = !DILocation(line: 1431, column: 14, scope: !12028)
!12056 = !DILocation(line: 1431, column: 19, scope: !12028)
!12057 = !DILocation(line: 1431, column: 27, scope: !12028)
!12058 = !DILocation(line: 240, column: 31, scope: !9957, inlinedAt: !12039)
!12059 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !12041)
!12060 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !12041)
!12061 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !12041)
!12062 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !12041)
!12063 = !DILocation(line: 241, column: 18, scope: !9957, inlinedAt: !12039)
!12064 = !DILocation(line: 96, column: 16, scope: !9954, inlinedAt: !12038)
!12065 = !DILocation(line: 96, column: 19, scope: !9954, inlinedAt: !12038)
!12066 = !DILocation(line: 95, column: 2, scope: !9954, inlinedAt: !12038)
!12067 = !DILocation(line: 1432, column: 6, scope: !12032)
!12068 = !DILocation(line: 1432, column: 11, scope: !12032)
!12069 = !DILocation(line: 1432, column: 6, scope: !12028)
!12070 = !DILocation(line: 1433, column: 15, scope: !12032)
!12071 = !DILocation(line: 1433, column: 20, scope: !12032)
!12072 = !DILocation(line: 1433, column: 28, scope: !12032)
!12073 = !DILocation(line: 240, column: 31, scope: !9957, inlinedAt: !12031)
!12074 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !12034)
!12075 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !12034)
!12076 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !12034)
!12077 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !12034)
!12078 = !DILocation(line: 241, column: 18, scope: !9957, inlinedAt: !12031)
!12079 = !DILocation(line: 96, column: 16, scope: !9954, inlinedAt: !12030)
!12080 = !DILocation(line: 96, column: 19, scope: !9954, inlinedAt: !12030)
!12081 = !DILocation(line: 95, column: 2, scope: !9954, inlinedAt: !12030)
!12082 = !DILocation(line: 1433, column: 3, scope: !12032)
!12083 = !DILocation(line: 1435, column: 40, scope: !12028)
!12084 = !DILocation(line: 1435, column: 16, scope: !12028)
!12085 = !DILocation(line: 1435, column: 14, scope: !12028)
!12086 = !DILocation(line: 1436, column: 6, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12028, file: !3, line: 1436, column: 6)
!12088 = !DILocation(line: 1436, column: 18, scope: !12087)
!12089 = !DILocation(line: 1436, column: 29, scope: !12087)
!12090 = !DILocation(line: 1436, column: 58, scope: !12087)
!12091 = !DILocation(line: 1436, column: 32, scope: !12087)
!12092 = !DILocation(line: 1436, column: 6, scope: !12028)
!12093 = !DILocation(line: 1437, column: 15, scope: !12087)
!12094 = !DILocation(line: 1437, column: 3, scope: !12087)
!12095 = !DILocation(line: 1439, column: 22, scope: !12028)
!12096 = !DILocation(line: 1439, column: 27, scope: !12028)
!12097 = !DILocation(line: 1439, column: 2, scope: !12028)
!12098 = !DILocation(line: 1441, column: 10, scope: !12028)
!12099 = !DILocation(line: 1441, column: 2, scope: !12028)
!12100 = !DILocation(line: 1443, column: 23, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12028, file: !3, line: 1441, column: 23)
!12102 = !DILocation(line: 1443, column: 3, scope: !12101)
!12103 = !DILocation(line: 1444, column: 3, scope: !12101)
!12104 = !DILocation(line: 1446, column: 21, scope: !12101)
!12105 = !DILocation(line: 1446, column: 3, scope: !12101)
!12106 = !DILocation(line: 1447, column: 3, scope: !12101)
!12107 = !DILocation(line: 1449, column: 21, scope: !12101)
!12108 = !DILocation(line: 1449, column: 3, scope: !12101)
!12109 = !DILocation(line: 1450, column: 3, scope: !12101)
!12110 = !DILocation(line: 1452, column: 20, scope: !12101)
!12111 = !DILocation(line: 1452, column: 3, scope: !12101)
!12112 = !DILocation(line: 1453, column: 3, scope: !12101)
!12113 = !DILocation(line: 1455, column: 1, scope: !12028)
!12114 = distinct !DISubprogram(name: "scsi_mq_init_request", scope: !3, file: !3, line: 1735, type: !3163, scopeLine: 1737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12115 = !DILocalVariable(name: "set", arg: 1, scope: !12114, file: !3, line: 1735, type: !3165)
!12116 = !DILocation(line: 1735, column: 56, scope: !12114)
!12117 = !DILocalVariable(name: "rq", arg: 2, scope: !12114, file: !3, line: 1735, type: !2780)
!12118 = !DILocation(line: 1735, column: 77, scope: !12114)
!12119 = !DILocalVariable(name: "hctx_idx", arg: 3, scope: !12114, file: !3, line: 1736, type: !7)
!12120 = !DILocation(line: 1736, column: 18, scope: !12114)
!12121 = !DILocalVariable(name: "numa_node", arg: 4, scope: !12114, file: !3, line: 1736, type: !7)
!12122 = !DILocation(line: 1736, column: 41, scope: !12114)
!12123 = !DILocalVariable(name: "shost", scope: !12114, file: !3, line: 1738, type: !297)
!12124 = !DILocation(line: 1738, column: 20, scope: !12114)
!12125 = !DILocation(line: 1738, column: 28, scope: !12114)
!12126 = !DILocation(line: 1738, column: 33, scope: !12114)
!12127 = !DILocalVariable(name: "unchecked_isa_dma", scope: !12114, file: !3, line: 1739, type: !12128)
!12128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !793)
!12129 = !DILocation(line: 1739, column: 13, scope: !12114)
!12130 = !DILocation(line: 1739, column: 33, scope: !12114)
!12131 = !DILocation(line: 1739, column: 40, scope: !12114)
!12132 = !DILocalVariable(name: "cmd", scope: !12114, file: !3, line: 1740, type: !268)
!12133 = !DILocation(line: 1740, column: 20, scope: !12114)
!12134 = !DILocation(line: 1740, column: 43, scope: !12114)
!12135 = !DILocation(line: 1740, column: 26, scope: !12114)
!12136 = !DILocalVariable(name: "sg", scope: !12114, file: !3, line: 1741, type: !5333)
!12137 = !DILocation(line: 1741, column: 22, scope: !12114)
!12138 = !DILocalVariable(name: "ret", scope: !12114, file: !3, line: 1742, type: !286)
!12139 = !DILocation(line: 1742, column: 6, scope: !12114)
!12140 = !DILocation(line: 1744, column: 6, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 1744, column: 6)
!12142 = !DILocation(line: 1744, column: 6, scope: !12114)
!12143 = !DILocation(line: 1745, column: 3, scope: !12141)
!12144 = !DILocation(line: 1745, column: 8, scope: !12141)
!12145 = !DILocation(line: 1745, column: 14, scope: !12141)
!12146 = !DILocation(line: 1746, column: 46, scope: !12114)
!12147 = !DILocation(line: 1747, column: 23, scope: !12114)
!12148 = !DILocation(line: 1746, column: 22, scope: !12114)
!12149 = !DILocation(line: 1746, column: 2, scope: !12114)
!12150 = !DILocation(line: 1746, column: 7, scope: !12114)
!12151 = !DILocation(line: 1746, column: 20, scope: !12114)
!12152 = !DILocation(line: 1748, column: 7, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 1748, column: 6)
!12154 = !DILocation(line: 1748, column: 12, scope: !12153)
!12155 = !DILocation(line: 1748, column: 6, scope: !12114)
!12156 = !DILocation(line: 1749, column: 3, scope: !12153)
!12157 = !DILocation(line: 1750, column: 19, scope: !12114)
!12158 = !DILocation(line: 1750, column: 24, scope: !12114)
!12159 = !DILocation(line: 1750, column: 2, scope: !12114)
!12160 = !DILocation(line: 1750, column: 7, scope: !12114)
!12161 = !DILocation(line: 1750, column: 11, scope: !12114)
!12162 = !DILocation(line: 1750, column: 17, scope: !12114)
!12163 = !DILocation(line: 1752, column: 25, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 1752, column: 6)
!12165 = !DILocation(line: 1752, column: 6, scope: !12164)
!12166 = !DILocation(line: 1752, column: 6, scope: !12114)
!12167 = !DILocation(line: 1753, column: 16, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 1752, column: 33)
!12169 = !DILocation(line: 1753, column: 8, scope: !12168)
!12170 = !DILocation(line: 1753, column: 20, scope: !12168)
!12171 = !DILocation(line: 1754, column: 4, scope: !12168)
!12172 = !DILocation(line: 1754, column: 11, scope: !12168)
!12173 = !DILocation(line: 1754, column: 18, scope: !12168)
!12174 = !DILocation(line: 1753, column: 47, scope: !12168)
!12175 = !DILocation(line: 1753, column: 6, scope: !12168)
!12176 = !DILocation(line: 1755, column: 27, scope: !12168)
!12177 = !DILocation(line: 1755, column: 19, scope: !12168)
!12178 = !DILocation(line: 1755, column: 56, scope: !12168)
!12179 = !DILocation(line: 1755, column: 32, scope: !12168)
!12180 = !DILocation(line: 1755, column: 30, scope: !12168)
!12181 = !DILocation(line: 1755, column: 3, scope: !12168)
!12182 = !DILocation(line: 1755, column: 8, scope: !12168)
!12183 = !DILocation(line: 1755, column: 17, scope: !12168)
!12184 = !DILocation(line: 1756, column: 2, scope: !12168)
!12185 = !DILocation(line: 1758, column: 6, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 1758, column: 6)
!12187 = !DILocation(line: 1758, column: 13, scope: !12186)
!12188 = !DILocation(line: 1758, column: 20, scope: !12186)
!12189 = !DILocation(line: 1758, column: 6, scope: !12114)
!12190 = !DILocation(line: 1759, column: 9, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12186, file: !3, line: 1758, column: 35)
!12192 = !DILocation(line: 1759, column: 16, scope: !12191)
!12193 = !DILocation(line: 1759, column: 23, scope: !12191)
!12194 = !DILocation(line: 1759, column: 37, scope: !12191)
!12195 = !DILocation(line: 1759, column: 44, scope: !12191)
!12196 = !DILocation(line: 1759, column: 7, scope: !12191)
!12197 = !DILocation(line: 1760, column: 7, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 1760, column: 7)
!12199 = !DILocation(line: 1760, column: 11, scope: !12198)
!12200 = !DILocation(line: 1760, column: 7, scope: !12191)
!12201 = !DILocation(line: 1761, column: 27, scope: !12198)
!12202 = !DILocation(line: 1762, column: 13, scope: !12198)
!12203 = !DILocation(line: 1762, column: 18, scope: !12198)
!12204 = !DILocation(line: 1761, column: 4, scope: !12198)
!12205 = !DILocation(line: 1763, column: 2, scope: !12191)
!12206 = !DILocation(line: 1765, column: 9, scope: !12114)
!12207 = !DILocation(line: 1765, column: 2, scope: !12114)
!12208 = !DILocation(line: 1766, column: 1, scope: !12114)
!12209 = distinct !DISubprogram(name: "scsi_mq_exit_request", scope: !3, file: !3, line: 1768, type: !3210, scopeLine: 1770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12210 = !DILocalVariable(name: "set", arg: 1, scope: !12209, file: !3, line: 1768, type: !3165)
!12211 = !DILocation(line: 1768, column: 57, scope: !12209)
!12212 = !DILocalVariable(name: "rq", arg: 2, scope: !12209, file: !3, line: 1768, type: !2780)
!12213 = !DILocation(line: 1768, column: 78, scope: !12209)
!12214 = !DILocalVariable(name: "hctx_idx", arg: 3, scope: !12209, file: !3, line: 1769, type: !7)
!12215 = !DILocation(line: 1769, column: 19, scope: !12209)
!12216 = !DILocalVariable(name: "shost", scope: !12209, file: !3, line: 1771, type: !297)
!12217 = !DILocation(line: 1771, column: 20, scope: !12209)
!12218 = !DILocation(line: 1771, column: 28, scope: !12209)
!12219 = !DILocation(line: 1771, column: 33, scope: !12209)
!12220 = !DILocalVariable(name: "cmd", scope: !12209, file: !3, line: 1772, type: !268)
!12221 = !DILocation(line: 1772, column: 20, scope: !12209)
!12222 = !DILocation(line: 1772, column: 43, scope: !12209)
!12223 = !DILocation(line: 1772, column: 26, scope: !12209)
!12224 = !DILocation(line: 1774, column: 6, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12209, file: !3, line: 1774, column: 6)
!12226 = !DILocation(line: 1774, column: 13, scope: !12225)
!12227 = !DILocation(line: 1774, column: 20, scope: !12225)
!12228 = !DILocation(line: 1774, column: 6, scope: !12209)
!12229 = !DILocation(line: 1775, column: 3, scope: !12225)
!12230 = !DILocation(line: 1775, column: 10, scope: !12225)
!12231 = !DILocation(line: 1775, column: 17, scope: !12225)
!12232 = !DILocation(line: 1775, column: 31, scope: !12225)
!12233 = !DILocation(line: 1775, column: 38, scope: !12225)
!12234 = !DILocation(line: 1776, column: 25, scope: !12209)
!12235 = !DILocation(line: 1776, column: 30, scope: !12209)
!12236 = !DILocation(line: 1776, column: 36, scope: !12209)
!12237 = !DILocation(line: 1777, column: 11, scope: !12209)
!12238 = !DILocation(line: 1777, column: 16, scope: !12209)
!12239 = !DILocation(line: 1776, column: 2, scope: !12209)
!12240 = !DILocation(line: 1778, column: 1, scope: !12209)
!12241 = distinct !DISubprogram(name: "scsi_cleanup_rq", scope: !3, file: !3, line: 1123, type: !3055, scopeLine: 1124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12242 = !DILocalVariable(name: "rq", arg: 1, scope: !12241, file: !3, line: 1123, type: !2780)
!12243 = !DILocation(line: 1123, column: 45, scope: !12241)
!12244 = !DILocation(line: 1125, column: 6, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12241, file: !3, line: 1125, column: 6)
!12246 = !DILocation(line: 1125, column: 10, scope: !12245)
!12247 = !DILocation(line: 1125, column: 19, scope: !12245)
!12248 = !DILocation(line: 1125, column: 6, scope: !12241)
!12249 = !DILocation(line: 1126, column: 39, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 1125, column: 35)
!12251 = !DILocation(line: 1126, column: 22, scope: !12250)
!12252 = !DILocation(line: 1126, column: 3, scope: !12250)
!12253 = !DILocation(line: 1127, column: 3, scope: !12250)
!12254 = !DILocation(line: 1127, column: 7, scope: !12250)
!12255 = !DILocation(line: 1127, column: 16, scope: !12250)
!12256 = !DILocation(line: 1128, column: 2, scope: !12250)
!12257 = !DILocation(line: 1129, column: 1, scope: !12241)
!12258 = distinct !DISubprogram(name: "scsi_mq_lld_busy", scope: !3, file: !3, line: 1402, type: !3141, scopeLine: 1403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12259 = !DILocalVariable(name: "q", arg: 1, scope: !12258, file: !3, line: 1402, type: !2776)
!12260 = !DILocation(line: 1402, column: 52, scope: !12258)
!12261 = !DILocalVariable(name: "sdev", scope: !12258, file: !3, line: 1404, type: !293)
!12262 = !DILocation(line: 1404, column: 22, scope: !12258)
!12263 = !DILocation(line: 1404, column: 29, scope: !12258)
!12264 = !DILocation(line: 1404, column: 32, scope: !12258)
!12265 = !DILocalVariable(name: "shost", scope: !12258, file: !3, line: 1405, type: !297)
!12266 = !DILocation(line: 1405, column: 20, scope: !12258)
!12267 = !DILocation(line: 1407, column: 6, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 1407, column: 6)
!12269 = !DILocation(line: 1407, column: 6, scope: !12258)
!12270 = !DILocation(line: 1408, column: 3, scope: !12268)
!12271 = !DILocation(line: 1410, column: 10, scope: !12258)
!12272 = !DILocation(line: 1410, column: 16, scope: !12258)
!12273 = !DILocation(line: 1410, column: 8, scope: !12258)
!12274 = !DILocation(line: 1418, column: 28, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 1418, column: 6)
!12276 = !DILocation(line: 1418, column: 6, scope: !12275)
!12277 = !DILocation(line: 1418, column: 35, scope: !12275)
!12278 = !DILocation(line: 1418, column: 58, scope: !12275)
!12279 = !DILocation(line: 1418, column: 38, scope: !12275)
!12280 = !DILocation(line: 1418, column: 6, scope: !12258)
!12281 = !DILocation(line: 1419, column: 3, scope: !12275)
!12282 = !DILocation(line: 1421, column: 2, scope: !12258)
!12283 = !DILocation(line: 1422, column: 1, scope: !12258)
!12284 = distinct !DISubprogram(name: "scsi_map_queues", scope: !3, file: !3, line: 1780, type: !3217, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12285 = !DILocalVariable(name: "set", arg: 1, scope: !12284, file: !3, line: 1780, type: !3165)
!12286 = !DILocation(line: 1780, column: 51, scope: !12284)
!12287 = !DILocalVariable(name: "shost", scope: !12284, file: !3, line: 1782, type: !297)
!12288 = !DILocation(line: 1782, column: 20, scope: !12284)
!12289 = !DILocalVariable(name: "__mptr", scope: !12290, file: !3, line: 1782, type: !291)
!12290 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 1782, column: 28)
!12291 = !DILocation(line: 1782, column: 28, scope: !12290)
!12292 = !DILocation(line: 1782, column: 28, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 1782, column: 28)
!12294 = !DILocation(line: 1784, column: 6, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 1784, column: 6)
!12296 = !DILocation(line: 1784, column: 13, scope: !12295)
!12297 = !DILocation(line: 1784, column: 20, scope: !12295)
!12298 = !DILocation(line: 1784, column: 6, scope: !12284)
!12299 = !DILocation(line: 1785, column: 10, scope: !12295)
!12300 = !DILocation(line: 1785, column: 17, scope: !12295)
!12301 = !DILocation(line: 1785, column: 24, scope: !12295)
!12302 = !DILocation(line: 1785, column: 35, scope: !12295)
!12303 = !DILocation(line: 1785, column: 3, scope: !12295)
!12304 = !DILocation(line: 1786, column: 28, scope: !12284)
!12305 = !DILocation(line: 1786, column: 33, scope: !12284)
!12306 = !DILocation(line: 1786, column: 9, scope: !12284)
!12307 = !DILocation(line: 1786, column: 2, scope: !12284)
!12308 = !DILocation(line: 1787, column: 1, scope: !12284)
!12309 = distinct !DISubprogram(name: "scsi_device_state_check", scope: !3, file: !3, line: 1203, type: !5297, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12310 = !DILocalVariable(name: "sdev", arg: 1, scope: !12309, file: !3, line: 1203, type: !293)
!12311 = !DILocation(line: 1203, column: 45, scope: !12309)
!12312 = !DILocalVariable(name: "req", arg: 2, scope: !12309, file: !3, line: 1203, type: !2780)
!12313 = !DILocation(line: 1203, column: 67, scope: !12309)
!12314 = !DILocation(line: 1205, column: 10, scope: !12309)
!12315 = !DILocation(line: 1205, column: 16, scope: !12309)
!12316 = !DILocation(line: 1205, column: 2, scope: !12309)
!12317 = !DILocation(line: 1213, column: 8, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12319, file: !3, line: 1213, column: 7)
!12319 = distinct !DILexicalBlock(scope: !12309, file: !3, line: 1205, column: 28)
!12320 = !DILocation(line: 1213, column: 14, scope: !12318)
!12321 = !DILocation(line: 1213, column: 7, scope: !12319)
!12322 = !DILocation(line: 1214, column: 4, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12318, file: !3, line: 1213, column: 31)
!12324 = !DILocation(line: 1214, column: 10, scope: !12323)
!12325 = !DILocation(line: 1214, column: 26, scope: !12323)
!12326 = !DILocation(line: 1215, column: 4, scope: !12323)
!12327 = !DILocation(line: 1217, column: 3, scope: !12323)
!12328 = !DILocation(line: 1218, column: 3, scope: !12319)
!12329 = !DILocation(line: 1224, column: 3, scope: !12319)
!12330 = !DILocation(line: 1226, column: 3, scope: !12319)
!12331 = !DILocation(line: 1229, column: 3, scope: !12319)
!12332 = !DILocation(line: 1234, column: 7, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12319, file: !3, line: 1234, column: 7)
!12334 = !DILocation(line: 1234, column: 11, scope: !12333)
!12335 = !DILocation(line: 1234, column: 16, scope: !12333)
!12336 = !DILocation(line: 1234, column: 21, scope: !12333)
!12337 = !DILocation(line: 1234, column: 30, scope: !12333)
!12338 = !DILocation(line: 1234, column: 7, scope: !12319)
!12339 = !DILocation(line: 1235, column: 4, scope: !12333)
!12340 = !DILocation(line: 1236, column: 3, scope: !12319)
!12341 = !DILocation(line: 1243, column: 7, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12319, file: !3, line: 1243, column: 7)
!12343 = !DILocation(line: 1243, column: 11, scope: !12342)
!12344 = !DILocation(line: 1243, column: 16, scope: !12342)
!12345 = !DILocation(line: 1243, column: 21, scope: !12342)
!12346 = !DILocation(line: 1243, column: 30, scope: !12342)
!12347 = !DILocation(line: 1243, column: 7, scope: !12319)
!12348 = !DILocation(line: 1244, column: 4, scope: !12342)
!12349 = !DILocation(line: 1245, column: 3, scope: !12319)
!12350 = !DILocation(line: 1247, column: 1, scope: !12309)
!12351 = distinct !DISubprogram(name: "scsi_target_queue_ready", scope: !3, file: !3, line: 1287, type: !12352, scopeLine: 1289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12352 = !DISubroutineType(types: !12353)
!12353 = !{!286, !297, !293}
!12354 = !DILocation(line: 106, column: 55, scope: !5782, inlinedAt: !12355)
!12355 = distinct !DILocation(line: 331, column: 2, scope: !5789, inlinedAt: !12356)
!12356 = distinct !DILocation(line: 1333, column: 3, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 1332, column: 6)
!12358 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !12359)
!12359 = distinct !DILocation(line: 330, column: 2, scope: !5789, inlinedAt: !12356)
!12360 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !12359)
!12361 = !DILocation(line: 328, column: 22, scope: !5789, inlinedAt: !12356)
!12362 = !DILocalVariable(name: "lock", arg: 1, scope: !12363, file: !5874, line: 402, type: !326)
!12363 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !5874, file: !5874, line: 402, type: !12364, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12364 = !DISubroutineType(types: !12365)
!12365 = !{null, !326}
!12366 = !DILocation(line: 402, column: 57, scope: !12363, inlinedAt: !12367)
!12367 = distinct !DILocation(line: 1330, column: 2, scope: !12351)
!12368 = !DILocalVariable(name: "lock", arg: 1, scope: !12369, file: !5874, line: 377, type: !326)
!12369 = distinct !DISubprogram(name: "spin_lock_irq", scope: !5874, file: !5874, line: 377, type: !12364, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12370 = !DILocation(line: 377, column: 55, scope: !12369, inlinedAt: !12371)
!12371 = distinct !DILocation(line: 1328, column: 2, scope: !12351)
!12372 = !DILocalVariable(name: "i", arg: 1, scope: !12373, file: !5783, line: 163, type: !286)
!12373 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !5783, file: !5783, line: 163, type: !12374, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12374 = !DISubroutineType(types: !12375)
!12375 = !{!286, !286, !5786}
!12376 = !DILocation(line: 163, column: 55, scope: !12373, inlinedAt: !12377)
!12377 = distinct !DILocation(line: 178, column: 9, scope: !12378, inlinedAt: !12379)
!12378 = distinct !DISubprogram(name: "arch_atomic_sub_return", scope: !5783, file: !5783, line: 176, type: !12374, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12379 = distinct !DILocation(line: 457, column: 9, scope: !12380, inlinedAt: !12384)
!12380 = distinct !DISubprogram(name: "arch_atomic_dec_return", scope: !12381, file: !12381, line: 455, type: !12382, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12381 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!12382 = !DISubroutineType(types: !12383)
!12383 = !{!286, !5786}
!12384 = distinct !DILocation(line: 341, column: 9, scope: !12385, inlinedAt: !12386)
!12385 = distinct !DISubprogram(name: "atomic_dec_return", scope: !5790, file: !5790, line: 338, type: !12382, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12386 = distinct !DILocation(line: 1315, column: 7, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 1315, column: 7)
!12388 = distinct !DILexicalBlock(scope: !12389, file: !3, line: 1308, column: 49)
!12389 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 1308, column: 6)
!12390 = !DILocalVariable(name: "v", arg: 2, scope: !12373, file: !5783, line: 163, type: !5786)
!12391 = !DILocation(line: 163, column: 68, scope: !12373, inlinedAt: !12377)
!12392 = !DILocalVariable(name: "__ret", scope: !12393, file: !5783, line: 165, type: !286)
!12393 = distinct !DILexicalBlock(scope: !12373, file: !5783, line: 165, column: 13)
!12394 = !DILocation(line: 165, column: 13, scope: !12393, inlinedAt: !12377)
!12395 = !DILocalVariable(name: "i", arg: 1, scope: !12378, file: !5783, line: 176, type: !286)
!12396 = !DILocation(line: 176, column: 55, scope: !12378, inlinedAt: !12379)
!12397 = !DILocalVariable(name: "v", arg: 2, scope: !12378, file: !5783, line: 176, type: !5786)
!12398 = !DILocation(line: 176, column: 68, scope: !12378, inlinedAt: !12379)
!12399 = !DILocalVariable(name: "v", arg: 1, scope: !12380, file: !12381, line: 455, type: !5786)
!12400 = !DILocation(line: 455, column: 34, scope: !12380, inlinedAt: !12384)
!12401 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !12402)
!12402 = distinct !DILocation(line: 340, column: 2, scope: !12385, inlinedAt: !12386)
!12403 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !12402)
!12404 = !DILocalVariable(name: "v", arg: 1, scope: !12385, file: !5790, line: 338, type: !5786)
!12405 = !DILocation(line: 338, column: 29, scope: !12385, inlinedAt: !12386)
!12406 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !12407)
!12407 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !12408)
!12408 = distinct !DILocation(line: 1308, column: 6, scope: !12389)
!12409 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !12410)
!12410 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !12408)
!12411 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !12410)
!12412 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !12408)
!12413 = !DILocation(line: 163, column: 55, scope: !12373, inlinedAt: !12414)
!12414 = distinct !DILocation(line: 286, column: 9, scope: !12415, inlinedAt: !12416)
!12415 = distinct !DISubprogram(name: "arch_atomic_inc_return", scope: !12381, file: !12381, line: 284, type: !12382, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12416 = distinct !DILocation(line: 251, column: 9, scope: !12417, inlinedAt: !12418)
!12417 = distinct !DISubprogram(name: "atomic_inc_return", scope: !5790, file: !5790, line: 248, type: !12382, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12418 = distinct !DILocation(line: 1307, column: 9, scope: !12351)
!12419 = !DILocation(line: 163, column: 68, scope: !12373, inlinedAt: !12414)
!12420 = !DILocation(line: 165, column: 13, scope: !12393, inlinedAt: !12414)
!12421 = !DILocalVariable(name: "v", arg: 1, scope: !12415, file: !12381, line: 284, type: !5786)
!12422 = !DILocation(line: 284, column: 34, scope: !12415, inlinedAt: !12416)
!12423 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !12424)
!12424 = distinct !DILocation(line: 250, column: 2, scope: !12417, inlinedAt: !12418)
!12425 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !12424)
!12426 = !DILocalVariable(name: "v", arg: 1, scope: !12417, file: !5790, line: 248, type: !5786)
!12427 = !DILocation(line: 248, column: 29, scope: !12417, inlinedAt: !12418)
!12428 = !DILocation(line: 402, column: 57, scope: !12363, inlinedAt: !12429)
!12429 = distinct !DILocation(line: 1301, column: 3, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 1293, column: 27)
!12431 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 1293, column: 6)
!12432 = !DILocation(line: 402, column: 57, scope: !12363, inlinedAt: !12433)
!12433 = distinct !DILocation(line: 1297, column: 4, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 1296, column: 43)
!12435 = distinct !DILexicalBlock(scope: !12430, file: !3, line: 1295, column: 7)
!12436 = !DILocation(line: 377, column: 55, scope: !12369, inlinedAt: !12437)
!12437 = distinct !DILocation(line: 1294, column: 3, scope: !12430)
!12438 = !DILocalVariable(name: "shost", arg: 1, scope: !12351, file: !3, line: 1287, type: !297)
!12439 = !DILocation(line: 1287, column: 61, scope: !12351)
!12440 = !DILocalVariable(name: "sdev", arg: 2, scope: !12351, file: !3, line: 1288, type: !293)
!12441 = !DILocation(line: 1288, column: 29, scope: !12351)
!12442 = !DILocalVariable(name: "starget", scope: !12351, file: !3, line: 1290, type: !4931)
!12443 = !DILocation(line: 1290, column: 22, scope: !12351)
!12444 = !DILocation(line: 1290, column: 44, scope: !12351)
!12445 = !DILocation(line: 1290, column: 32, scope: !12351)
!12446 = !DILocalVariable(name: "busy", scope: !12351, file: !3, line: 1291, type: !7)
!12447 = !DILocation(line: 1291, column: 15, scope: !12351)
!12448 = !DILocation(line: 1293, column: 6, scope: !12431)
!12449 = !DILocation(line: 1293, column: 15, scope: !12431)
!12450 = !DILocation(line: 1293, column: 6, scope: !12351)
!12451 = !DILocation(line: 1294, column: 17, scope: !12430)
!12452 = !DILocation(line: 1294, column: 24, scope: !12430)
!12453 = !DILocation(line: 379, column: 2, scope: !12454, inlinedAt: !12437)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !5874, line: 379, column: 2)
!12455 = distinct !DILexicalBlock(scope: !12369, file: !5874, line: 379, column: 2)
!12456 = !DILocation(line: 379, column: 2, scope: !12457, inlinedAt: !12437)
!12457 = distinct !DILexicalBlock(scope: !12455, file: !5874, line: 379, column: 2)
!12458 = !{i32 -2145349074}
!12459 = !DILocation(line: 379, column: 2, scope: !12460, inlinedAt: !12437)
!12460 = distinct !DILexicalBlock(scope: !12457, file: !5874, line: 379, column: 2)
!12461 = !DILocation(line: 1295, column: 7, scope: !12435)
!12462 = !DILocation(line: 1295, column: 16, scope: !12435)
!12463 = !DILocation(line: 1295, column: 34, scope: !12435)
!12464 = !DILocation(line: 1296, column: 7, scope: !12435)
!12465 = !DILocation(line: 1296, column: 16, scope: !12435)
!12466 = !DILocation(line: 1296, column: 37, scope: !12435)
!12467 = !DILocation(line: 1296, column: 34, scope: !12435)
!12468 = !DILocation(line: 1295, column: 7, scope: !12430)
!12469 = !DILocation(line: 1297, column: 20, scope: !12434)
!12470 = !DILocation(line: 1297, column: 27, scope: !12434)
!12471 = !DILocation(line: 404, column: 2, scope: !12472, inlinedAt: !12433)
!12472 = distinct !DILexicalBlock(scope: !12473, file: !5874, line: 404, column: 2)
!12473 = distinct !DILexicalBlock(scope: !12363, file: !5874, line: 404, column: 2)
!12474 = !DILocation(line: 404, column: 2, scope: !12475, inlinedAt: !12433)
!12475 = distinct !DILexicalBlock(scope: !12473, file: !5874, line: 404, column: 2)
!12476 = !{i32 -2145347326}
!12477 = !DILocation(line: 404, column: 2, scope: !12478, inlinedAt: !12433)
!12478 = distinct !DILexicalBlock(scope: !12475, file: !5874, line: 404, column: 2)
!12479 = !DILocation(line: 1298, column: 4, scope: !12434)
!12480 = !DILocation(line: 1300, column: 32, scope: !12430)
!12481 = !DILocation(line: 1300, column: 3, scope: !12430)
!12482 = !DILocation(line: 1300, column: 12, scope: !12430)
!12483 = !DILocation(line: 1300, column: 30, scope: !12430)
!12484 = !DILocation(line: 1301, column: 19, scope: !12430)
!12485 = !DILocation(line: 1301, column: 26, scope: !12430)
!12486 = !DILocation(line: 404, column: 2, scope: !12472, inlinedAt: !12429)
!12487 = !DILocation(line: 404, column: 2, scope: !12475, inlinedAt: !12429)
!12488 = !DILocation(line: 404, column: 2, scope: !12478, inlinedAt: !12429)
!12489 = !DILocation(line: 1302, column: 2, scope: !12430)
!12490 = !DILocation(line: 1304, column: 6, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 1304, column: 6)
!12492 = !DILocation(line: 1304, column: 15, scope: !12491)
!12493 = !DILocation(line: 1304, column: 25, scope: !12491)
!12494 = !DILocation(line: 1304, column: 6, scope: !12351)
!12495 = !DILocation(line: 1305, column: 3, scope: !12491)
!12496 = !DILocation(line: 1307, column: 28, scope: !12351)
!12497 = !DILocation(line: 1307, column: 37, scope: !12351)
!12498 = !DILocation(line: 250, column: 31, scope: !12417, inlinedAt: !12418)
!12499 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !12424)
!12500 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !12424)
!12501 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !12424)
!12502 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !12424)
!12503 = !DILocation(line: 251, column: 32, scope: !12417, inlinedAt: !12418)
!12504 = !DILocation(line: 286, column: 35, scope: !12415, inlinedAt: !12416)
!12505 = !DILocation(line: 165, column: 9, scope: !12373, inlinedAt: !12414)
!12506 = !{i32 -2146270999}
!12507 = !DILocation(line: 165, column: 11, scope: !12373, inlinedAt: !12414)
!12508 = !DILocation(line: 1307, column: 50, scope: !12351)
!12509 = !DILocation(line: 1307, column: 7, scope: !12351)
!12510 = !DILocation(line: 1308, column: 19, scope: !12389)
!12511 = !DILocation(line: 1308, column: 28, scope: !12389)
!12512 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !12408)
!12513 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !12410)
!12514 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !12410)
!12515 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !12410)
!12516 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !12410)
!12517 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !12408)
!12518 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !12407)
!12519 = !DILocation(line: 1308, column: 44, scope: !12389)
!12520 = !DILocation(line: 1308, column: 6, scope: !12351)
!12521 = !DILocation(line: 1309, column: 7, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 1309, column: 7)
!12523 = !DILocation(line: 1309, column: 7, scope: !12388)
!12524 = !DILocation(line: 1310, column: 4, scope: !12522)
!12525 = !DILocation(line: 1315, column: 26, scope: !12387)
!12526 = !DILocation(line: 1315, column: 35, scope: !12387)
!12527 = !DILocation(line: 340, column: 31, scope: !12385, inlinedAt: !12386)
!12528 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !12402)
!12529 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !12402)
!12530 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !12402)
!12531 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !12402)
!12532 = !DILocation(line: 341, column: 32, scope: !12385, inlinedAt: !12386)
!12533 = !DILocation(line: 457, column: 35, scope: !12380, inlinedAt: !12384)
!12534 = !DILocation(line: 178, column: 33, scope: !12378, inlinedAt: !12379)
!12535 = !DILocation(line: 178, column: 32, scope: !12378, inlinedAt: !12379)
!12536 = !DILocation(line: 178, column: 36, scope: !12378, inlinedAt: !12379)
!12537 = !DILocation(line: 165, column: 9, scope: !12373, inlinedAt: !12377)
!12538 = !DILocation(line: 165, column: 11, scope: !12373, inlinedAt: !12377)
!12539 = !DILocation(line: 1315, column: 51, scope: !12387)
!12540 = !DILocation(line: 1315, column: 7, scope: !12388)
!12541 = !DILocation(line: 1316, column: 4, scope: !12387)
!12542 = !DILocation(line: 1318, column: 3, scope: !12388)
!12543 = !DILocation(line: 1318, column: 3, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 1318, column: 3)
!12545 = !DILocation(line: 1320, column: 2, scope: !12388)
!12546 = !DILocation(line: 1322, column: 6, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 1322, column: 6)
!12548 = !DILocation(line: 1322, column: 14, scope: !12547)
!12549 = !DILocation(line: 1322, column: 23, scope: !12547)
!12550 = !DILocation(line: 1322, column: 11, scope: !12547)
!12551 = !DILocation(line: 1322, column: 6, scope: !12351)
!12552 = !DILocation(line: 1323, column: 3, scope: !12547)
!12553 = !DILocation(line: 1325, column: 2, scope: !12351)
!12554 = !DILabel(scope: !12351, name: "starved", file: !3, line: 1327)
!12555 = !DILocation(line: 1327, column: 1, scope: !12351)
!12556 = !DILocation(line: 1328, column: 16, scope: !12351)
!12557 = !DILocation(line: 1328, column: 23, scope: !12351)
!12558 = !DILocation(line: 379, column: 2, scope: !12454, inlinedAt: !12371)
!12559 = !DILocation(line: 379, column: 2, scope: !12457, inlinedAt: !12371)
!12560 = !DILocation(line: 379, column: 2, scope: !12460, inlinedAt: !12371)
!12561 = !DILocation(line: 1329, column: 18, scope: !12351)
!12562 = !DILocation(line: 1329, column: 24, scope: !12351)
!12563 = !DILocation(line: 1329, column: 40, scope: !12351)
!12564 = !DILocation(line: 1329, column: 47, scope: !12351)
!12565 = !DILocation(line: 1329, column: 2, scope: !12351)
!12566 = !DILocation(line: 1330, column: 18, scope: !12351)
!12567 = !DILocation(line: 1330, column: 25, scope: !12351)
!12568 = !DILocation(line: 404, column: 2, scope: !12472, inlinedAt: !12367)
!12569 = !DILocation(line: 404, column: 2, scope: !12475, inlinedAt: !12367)
!12570 = !DILocation(line: 404, column: 2, scope: !12478, inlinedAt: !12367)
!12571 = !DILocation(line: 1330, column: 2, scope: !12351)
!12572 = !DILabel(scope: !12351, name: "out_dec", file: !3, line: 1331)
!12573 = !DILocation(line: 1331, column: 1, scope: !12351)
!12574 = !DILocation(line: 1332, column: 6, scope: !12357)
!12575 = !DILocation(line: 1332, column: 15, scope: !12357)
!12576 = !DILocation(line: 1332, column: 25, scope: !12357)
!12577 = !DILocation(line: 1332, column: 6, scope: !12351)
!12578 = !DILocation(line: 1333, column: 15, scope: !12357)
!12579 = !DILocation(line: 1333, column: 24, scope: !12357)
!12580 = !DILocation(line: 330, column: 31, scope: !5789, inlinedAt: !12356)
!12581 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !12359)
!12582 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !12359)
!12583 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !12359)
!12584 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !12359)
!12585 = !DILocation(line: 331, column: 18, scope: !5789, inlinedAt: !12356)
!12586 = !DILocation(line: 109, column: 16, scope: !5782, inlinedAt: !12355)
!12587 = !DILocation(line: 109, column: 19, scope: !5782, inlinedAt: !12355)
!12588 = !DILocation(line: 108, column: 2, scope: !5782, inlinedAt: !12355)
!12589 = !DILocation(line: 1333, column: 3, scope: !12357)
!12590 = !DILocation(line: 1334, column: 2, scope: !12351)
!12591 = !DILocation(line: 1335, column: 1, scope: !12351)
!12592 = distinct !DISubprogram(name: "scsi_host_queue_ready", scope: !3, file: !3, line: 1342, type: !12593, scopeLine: 1346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12593 = !DISubroutineType(types: !12594)
!12594 = !{!286, !2776, !297, !293, !268}
!12595 = !DILocation(line: 402, column: 57, scope: !12363, inlinedAt: !12596)
!12596 = distinct !DILocation(line: 1384, column: 2, scope: !12592)
!12597 = !DILocation(line: 377, column: 55, scope: !12369, inlinedAt: !12598)
!12598 = distinct !DILocation(line: 1381, column: 2, scope: !12592)
!12599 = !DILocation(line: 402, column: 57, scope: !12363, inlinedAt: !12600)
!12600 = distinct !DILocation(line: 1373, column: 3, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 1369, column: 41)
!12602 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 1369, column: 6)
!12603 = !DILocation(line: 377, column: 55, scope: !12369, inlinedAt: !12604)
!12604 = distinct !DILocation(line: 1370, column: 3, scope: !12601)
!12605 = !DILocation(line: 163, column: 55, scope: !12373, inlinedAt: !12606)
!12606 = distinct !DILocation(line: 178, column: 9, scope: !12378, inlinedAt: !12607)
!12607 = distinct !DILocation(line: 457, column: 9, scope: !12380, inlinedAt: !12608)
!12608 = distinct !DILocation(line: 341, column: 9, scope: !12385, inlinedAt: !12609)
!12609 = distinct !DILocation(line: 1357, column: 7, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12611, file: !3, line: 1357, column: 7)
!12611 = distinct !DILexicalBlock(scope: !12612, file: !3, line: 1350, column: 45)
!12612 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 1350, column: 6)
!12613 = !DILocation(line: 163, column: 68, scope: !12373, inlinedAt: !12606)
!12614 = !DILocation(line: 165, column: 13, scope: !12393, inlinedAt: !12606)
!12615 = !DILocation(line: 176, column: 55, scope: !12378, inlinedAt: !12607)
!12616 = !DILocation(line: 176, column: 68, scope: !12378, inlinedAt: !12607)
!12617 = !DILocation(line: 455, column: 34, scope: !12380, inlinedAt: !12608)
!12618 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !12619)
!12619 = distinct !DILocation(line: 340, column: 2, scope: !12385, inlinedAt: !12609)
!12620 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !12619)
!12621 = !DILocation(line: 338, column: 29, scope: !12385, inlinedAt: !12609)
!12622 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !12623)
!12623 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !12624)
!12624 = distinct !DILocation(line: 1350, column: 6, scope: !12612)
!12625 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !12626)
!12626 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !12624)
!12627 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !12626)
!12628 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !12624)
!12629 = !DILocalVariable(name: "q", arg: 1, scope: !12592, file: !3, line: 1342, type: !2776)
!12630 = !DILocation(line: 1342, column: 63, scope: !12592)
!12631 = !DILocalVariable(name: "shost", arg: 2, scope: !12592, file: !3, line: 1343, type: !297)
!12632 = !DILocation(line: 1343, column: 26, scope: !12592)
!12633 = !DILocalVariable(name: "sdev", arg: 3, scope: !12592, file: !3, line: 1344, type: !293)
!12634 = !DILocation(line: 1344, column: 28, scope: !12592)
!12635 = !DILocalVariable(name: "cmd", arg: 4, scope: !12592, file: !3, line: 1345, type: !268)
!12636 = !DILocation(line: 1345, column: 26, scope: !12592)
!12637 = !DILocation(line: 1347, column: 28, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 1347, column: 6)
!12639 = !DILocation(line: 1347, column: 6, scope: !12638)
!12640 = !DILocation(line: 1347, column: 6, scope: !12592)
!12641 = !DILocation(line: 1348, column: 3, scope: !12638)
!12642 = !DILocation(line: 1350, column: 19, scope: !12612)
!12643 = !DILocation(line: 1350, column: 26, scope: !12612)
!12644 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !12624)
!12645 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !12626)
!12646 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !12626)
!12647 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !12626)
!12648 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !12626)
!12649 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !12624)
!12650 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !12623)
!12651 = !DILocation(line: 1350, column: 40, scope: !12612)
!12652 = !DILocation(line: 1350, column: 6, scope: !12592)
!12653 = !DILocation(line: 1351, column: 22, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12611, file: !3, line: 1351, column: 7)
!12655 = !DILocation(line: 1351, column: 7, scope: !12654)
!12656 = !DILocation(line: 1351, column: 29, scope: !12654)
!12657 = !DILocation(line: 1351, column: 7, scope: !12611)
!12658 = !DILocation(line: 1352, column: 4, scope: !12654)
!12659 = !DILocation(line: 1357, column: 26, scope: !12610)
!12660 = !DILocation(line: 1357, column: 33, scope: !12610)
!12661 = !DILocation(line: 340, column: 31, scope: !12385, inlinedAt: !12609)
!12662 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !12619)
!12663 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !12619)
!12664 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !12619)
!12665 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !12619)
!12666 = !DILocation(line: 341, column: 32, scope: !12385, inlinedAt: !12609)
!12667 = !DILocation(line: 457, column: 35, scope: !12380, inlinedAt: !12608)
!12668 = !DILocation(line: 178, column: 33, scope: !12378, inlinedAt: !12607)
!12669 = !DILocation(line: 178, column: 32, scope: !12378, inlinedAt: !12607)
!12670 = !DILocation(line: 178, column: 36, scope: !12378, inlinedAt: !12607)
!12671 = !DILocation(line: 165, column: 9, scope: !12373, inlinedAt: !12606)
!12672 = !DILocation(line: 165, column: 11, scope: !12373, inlinedAt: !12606)
!12673 = !DILocation(line: 1357, column: 47, scope: !12610)
!12674 = !DILocation(line: 1357, column: 7, scope: !12611)
!12675 = !DILocation(line: 1358, column: 4, scope: !12610)
!12676 = !DILocation(line: 1360, column: 3, scope: !12611)
!12677 = !DILocation(line: 1360, column: 3, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12611, file: !3, line: 1360, column: 3)
!12679 = !DILocation(line: 1363, column: 2, scope: !12611)
!12680 = !DILocation(line: 1365, column: 6, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 1365, column: 6)
!12682 = !DILocation(line: 1365, column: 13, scope: !12681)
!12683 = !DILocation(line: 1365, column: 6, scope: !12592)
!12684 = !DILocation(line: 1366, column: 3, scope: !12681)
!12685 = !DILocation(line: 1369, column: 19, scope: !12602)
!12686 = !DILocation(line: 1369, column: 25, scope: !12602)
!12687 = !DILocation(line: 1369, column: 7, scope: !12602)
!12688 = !DILocation(line: 1369, column: 6, scope: !12592)
!12689 = !DILocation(line: 1370, column: 17, scope: !12601)
!12690 = !DILocation(line: 1370, column: 24, scope: !12601)
!12691 = !DILocation(line: 379, column: 2, scope: !12454, inlinedAt: !12604)
!12692 = !DILocation(line: 379, column: 2, scope: !12457, inlinedAt: !12604)
!12693 = !DILocation(line: 379, column: 2, scope: !12460, inlinedAt: !12604)
!12694 = !DILocation(line: 1371, column: 20, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12601, file: !3, line: 1371, column: 7)
!12696 = !DILocation(line: 1371, column: 26, scope: !12695)
!12697 = !DILocation(line: 1371, column: 8, scope: !12695)
!12698 = !DILocation(line: 1371, column: 7, scope: !12601)
!12699 = !DILocation(line: 1372, column: 19, scope: !12695)
!12700 = !DILocation(line: 1372, column: 25, scope: !12695)
!12701 = !DILocation(line: 1372, column: 4, scope: !12695)
!12702 = !DILocation(line: 1373, column: 19, scope: !12601)
!12703 = !DILocation(line: 1373, column: 26, scope: !12601)
!12704 = !DILocation(line: 404, column: 2, scope: !12472, inlinedAt: !12600)
!12705 = !DILocation(line: 404, column: 2, scope: !12475, inlinedAt: !12600)
!12706 = !DILocation(line: 404, column: 2, scope: !12478, inlinedAt: !12600)
!12707 = !DILocation(line: 1374, column: 2, scope: !12601)
!12708 = !DILocation(line: 1376, column: 34, scope: !12592)
!12709 = !DILocation(line: 1376, column: 39, scope: !12592)
!12710 = !DILocation(line: 1376, column: 2, scope: !12592)
!12711 = !DILocation(line: 1378, column: 2, scope: !12592)
!12712 = !DILabel(scope: !12592, name: "starved", file: !3, line: 1380)
!12713 = !DILocation(line: 1380, column: 1, scope: !12592)
!12714 = !DILocation(line: 1381, column: 16, scope: !12592)
!12715 = !DILocation(line: 1381, column: 23, scope: !12592)
!12716 = !DILocation(line: 379, column: 2, scope: !12454, inlinedAt: !12598)
!12717 = !DILocation(line: 379, column: 2, scope: !12457, inlinedAt: !12598)
!12718 = !DILocation(line: 379, column: 2, scope: !12460, inlinedAt: !12598)
!12719 = !DILocation(line: 1382, column: 18, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 1382, column: 6)
!12721 = !DILocation(line: 1382, column: 24, scope: !12720)
!12722 = !DILocation(line: 1382, column: 6, scope: !12720)
!12723 = !DILocation(line: 1382, column: 6, scope: !12592)
!12724 = !DILocation(line: 1383, column: 18, scope: !12720)
!12725 = !DILocation(line: 1383, column: 24, scope: !12720)
!12726 = !DILocation(line: 1383, column: 40, scope: !12720)
!12727 = !DILocation(line: 1383, column: 47, scope: !12720)
!12728 = !DILocation(line: 1383, column: 3, scope: !12720)
!12729 = !DILocation(line: 1384, column: 18, scope: !12592)
!12730 = !DILocation(line: 1384, column: 25, scope: !12592)
!12731 = !DILocation(line: 404, column: 2, scope: !12472, inlinedAt: !12596)
!12732 = !DILocation(line: 404, column: 2, scope: !12475, inlinedAt: !12596)
!12733 = !DILocation(line: 404, column: 2, scope: !12478, inlinedAt: !12596)
!12734 = !DILocation(line: 1384, column: 2, scope: !12592)
!12735 = !DILabel(scope: !12592, name: "out_dec", file: !3, line: 1385)
!12736 = !DILocation(line: 1385, column: 1, scope: !12592)
!12737 = !DILocation(line: 1386, column: 21, scope: !12592)
!12738 = !DILocation(line: 1386, column: 28, scope: !12592)
!12739 = !DILocation(line: 1386, column: 2, scope: !12592)
!12740 = !DILocation(line: 1387, column: 2, scope: !12592)
!12741 = !DILocation(line: 1388, column: 1, scope: !12592)
!12742 = distinct !DISubprogram(name: "scsi_prepare_cmd", scope: !3, file: !3, line: 1545, type: !12743, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12743 = !DISubroutineType(types: !12744)
!12744 = !{!2614, !2780}
!12745 = !DILocalVariable(name: "req", arg: 1, scope: !12742, file: !3, line: 1545, type: !2780)
!12746 = !DILocation(line: 1545, column: 54, scope: !12742)
!12747 = !DILocalVariable(name: "cmd", scope: !12742, file: !3, line: 1547, type: !268)
!12748 = !DILocation(line: 1547, column: 20, scope: !12742)
!12749 = !DILocation(line: 1547, column: 43, scope: !12742)
!12750 = !DILocation(line: 1547, column: 26, scope: !12742)
!12751 = !DILocalVariable(name: "sdev", scope: !12742, file: !3, line: 1548, type: !293)
!12752 = !DILocation(line: 1548, column: 22, scope: !12742)
!12753 = !DILocation(line: 1548, column: 29, scope: !12742)
!12754 = !DILocation(line: 1548, column: 34, scope: !12742)
!12755 = !DILocation(line: 1548, column: 37, scope: !12742)
!12756 = !DILocalVariable(name: "shost", scope: !12742, file: !3, line: 1549, type: !297)
!12757 = !DILocation(line: 1549, column: 20, scope: !12742)
!12758 = !DILocation(line: 1549, column: 28, scope: !12742)
!12759 = !DILocation(line: 1549, column: 34, scope: !12742)
!12760 = !DILocalVariable(name: "sg", scope: !12742, file: !3, line: 1550, type: !5333)
!12761 = !DILocation(line: 1550, column: 22, scope: !12742)
!12762 = !DILocation(line: 1552, column: 20, scope: !12742)
!12763 = !DILocation(line: 1552, column: 26, scope: !12742)
!12764 = !DILocation(line: 1552, column: 2, scope: !12742)
!12765 = !DILocation(line: 1554, column: 17, scope: !12742)
!12766 = !DILocation(line: 1554, column: 2, scope: !12742)
!12767 = !DILocation(line: 1554, column: 7, scope: !12742)
!12768 = !DILocation(line: 1554, column: 15, scope: !12742)
!12769 = !DILocation(line: 1555, column: 13, scope: !12742)
!12770 = !DILocation(line: 1555, column: 18, scope: !12742)
!12771 = !DILocation(line: 1555, column: 2, scope: !12742)
!12772 = !DILocation(line: 1555, column: 7, scope: !12742)
!12773 = !DILocation(line: 1555, column: 11, scope: !12742)
!12774 = !DILocation(line: 1556, column: 2, scope: !12742)
!12775 = !DILocation(line: 1556, column: 7, scope: !12742)
!12776 = !DILocation(line: 1556, column: 15, scope: !12742)
!12777 = !DILocation(line: 1557, column: 19, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12742, file: !3, line: 1557, column: 6)
!12779 = !DILocation(line: 1557, column: 6, scope: !12778)
!12780 = !DILocation(line: 1557, column: 6, scope: !12742)
!12781 = !DILocation(line: 1558, column: 28, scope: !12778)
!12782 = !DILocation(line: 1558, column: 3, scope: !12778)
!12783 = !DILocation(line: 1558, column: 8, scope: !12778)
!12784 = !DILocation(line: 1558, column: 26, scope: !12778)
!12785 = !DILocation(line: 1560, column: 3, scope: !12778)
!12786 = !DILocation(line: 1560, column: 8, scope: !12778)
!12787 = !DILocation(line: 1560, column: 26, scope: !12778)
!12788 = !DILocation(line: 1562, column: 15, scope: !12742)
!12789 = !DILocation(line: 1562, column: 7, scope: !12742)
!12790 = !DILocation(line: 1562, column: 19, scope: !12742)
!12791 = !DILocation(line: 1562, column: 48, scope: !12742)
!12792 = !DILocation(line: 1562, column: 55, scope: !12742)
!12793 = !DILocation(line: 1562, column: 62, scope: !12742)
!12794 = !DILocation(line: 1562, column: 46, scope: !12742)
!12795 = !DILocation(line: 1562, column: 5, scope: !12742)
!12796 = !DILocation(line: 1563, column: 23, scope: !12742)
!12797 = !DILocation(line: 1563, column: 2, scope: !12742)
!12798 = !DILocation(line: 1563, column: 7, scope: !12742)
!12799 = !DILocation(line: 1563, column: 11, scope: !12742)
!12800 = !DILocation(line: 1563, column: 17, scope: !12742)
!12801 = !DILocation(line: 1563, column: 21, scope: !12742)
!12802 = !DILocation(line: 1565, column: 25, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12742, file: !3, line: 1565, column: 6)
!12804 = !DILocation(line: 1565, column: 6, scope: !12803)
!12805 = !DILocation(line: 1565, column: 6, scope: !12742)
!12806 = !DILocation(line: 1566, column: 10, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 1565, column: 33)
!12808 = !DILocation(line: 1566, column: 15, scope: !12807)
!12809 = !DILocation(line: 1566, column: 3, scope: !12807)
!12810 = !DILocation(line: 1569, column: 27, scope: !12807)
!12811 = !DILocation(line: 1569, column: 32, scope: !12807)
!12812 = !DILocation(line: 1569, column: 41, scope: !12807)
!12813 = !DILocation(line: 1569, column: 4, scope: !12807)
!12814 = !DILocation(line: 1568, column: 3, scope: !12807)
!12815 = !DILocation(line: 1568, column: 8, scope: !12807)
!12816 = !DILocation(line: 1568, column: 18, scope: !12807)
!12817 = !DILocation(line: 1568, column: 24, scope: !12807)
!12818 = !DILocation(line: 1568, column: 28, scope: !12807)
!12819 = !DILocation(line: 1570, column: 2, scope: !12807)
!12820 = !DILocation(line: 1576, column: 21, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12742, file: !3, line: 1576, column: 6)
!12822 = !DILocation(line: 1576, column: 6, scope: !12821)
!12823 = !DILocation(line: 1576, column: 6, scope: !12742)
!12824 = !DILocation(line: 1577, column: 31, scope: !12821)
!12825 = !DILocation(line: 1577, column: 37, scope: !12821)
!12826 = !DILocation(line: 1577, column: 10, scope: !12821)
!12827 = !DILocation(line: 1577, column: 3, scope: !12821)
!12828 = !DILocation(line: 1579, column: 6, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12742, file: !3, line: 1579, column: 6)
!12830 = !DILocation(line: 1579, column: 12, scope: !12829)
!12831 = !DILocation(line: 1579, column: 20, scope: !12829)
!12832 = !DILocation(line: 1579, column: 23, scope: !12829)
!12833 = !DILocation(line: 1579, column: 29, scope: !12829)
!12834 = !DILocation(line: 1579, column: 38, scope: !12829)
!12835 = !DILocation(line: 1579, column: 6, scope: !12742)
!12836 = !DILocalVariable(name: "ret", scope: !12837, file: !3, line: 1580, type: !2614)
!12837 = distinct !DILexicalBlock(scope: !12829, file: !3, line: 1579, column: 47)
!12838 = !DILocation(line: 1580, column: 16, scope: !12837)
!12839 = !DILocation(line: 1580, column: 22, scope: !12837)
!12840 = !DILocation(line: 1580, column: 28, scope: !12837)
!12841 = !DILocation(line: 1580, column: 37, scope: !12837)
!12842 = !DILocation(line: 1580, column: 45, scope: !12837)
!12843 = !DILocation(line: 1580, column: 51, scope: !12837)
!12844 = !DILocation(line: 1582, column: 7, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12837, file: !3, line: 1582, column: 7)
!12846 = !DILocation(line: 1582, column: 11, scope: !12845)
!12847 = !DILocation(line: 1582, column: 7, scope: !12837)
!12848 = !DILocation(line: 1583, column: 11, scope: !12845)
!12849 = !DILocation(line: 1583, column: 4, scope: !12845)
!12850 = !DILocation(line: 1584, column: 2, scope: !12837)
!12851 = !DILocation(line: 1586, column: 44, scope: !12742)
!12852 = !DILocation(line: 1586, column: 35, scope: !12742)
!12853 = !DILocation(line: 1586, column: 50, scope: !12742)
!12854 = !DILocation(line: 1586, column: 23, scope: !12742)
!12855 = !DILocation(line: 1586, column: 14, scope: !12742)
!12856 = !DILocation(line: 1586, column: 29, scope: !12742)
!12857 = !DILocation(line: 1586, column: 33, scope: !12742)
!12858 = !DILocation(line: 1586, column: 2, scope: !12742)
!12859 = !DILocation(line: 1586, column: 7, scope: !12742)
!12860 = !DILocation(line: 1586, column: 12, scope: !12742)
!12861 = !DILocation(line: 1587, column: 9, scope: !12742)
!12862 = !DILocation(line: 1587, column: 14, scope: !12742)
!12863 = !DILocation(line: 1587, column: 2, scope: !12742)
!12864 = !DILocation(line: 1588, column: 28, scope: !12742)
!12865 = !DILocation(line: 1588, column: 9, scope: !12742)
!12866 = !DILocation(line: 1588, column: 34, scope: !12742)
!12867 = !DILocation(line: 1588, column: 47, scope: !12742)
!12868 = !DILocation(line: 1588, column: 2, scope: !12742)
!12869 = !DILocation(line: 1589, column: 1, scope: !12742)
!12870 = distinct !DISubprogram(name: "clear_bit", scope: !8808, file: !8808, line: 39, type: !7221, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12871 = !DILocalVariable(name: "nr", arg: 1, scope: !12872, file: !7149, line: 72, type: !197)
!12872 = distinct !DISubprogram(name: "arch_clear_bit", scope: !7149, file: !7149, line: 72, type: !7221, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12873 = !DILocation(line: 72, column: 21, scope: !12872, inlinedAt: !12874)
!12874 = distinct !DILocation(line: 42, column: 2, scope: !12870)
!12875 = !DILocalVariable(name: "addr", arg: 2, scope: !12872, file: !7149, line: 72, type: !7223)
!12876 = !DILocation(line: 72, column: 49, scope: !12872, inlinedAt: !12874)
!12877 = !DILocation(line: 84, column: 74, scope: !10437, inlinedAt: !12878)
!12878 = distinct !DILocation(line: 41, column: 2, scope: !12870)
!12879 = !DILocation(line: 84, column: 84, scope: !10437, inlinedAt: !12878)
!12880 = !DILocalVariable(name: "nr", arg: 1, scope: !12870, file: !8808, line: 39, type: !197)
!12881 = !DILocation(line: 39, column: 35, scope: !12870)
!12882 = !DILocalVariable(name: "addr", arg: 2, scope: !12870, file: !8808, line: 39, type: !7223)
!12883 = !DILocation(line: 39, column: 63, scope: !12870)
!12884 = !DILocation(line: 41, column: 26, scope: !12870)
!12885 = !DILocation(line: 41, column: 33, scope: !12870)
!12886 = !DILocation(line: 41, column: 31, scope: !12870)
!12887 = !DILocation(line: 86, column: 20, scope: !10437, inlinedAt: !12878)
!12888 = !DILocation(line: 86, column: 23, scope: !10437, inlinedAt: !12878)
!12889 = !DILocation(line: 86, column: 2, scope: !10437, inlinedAt: !12878)
!12890 = !DILocation(line: 87, column: 2, scope: !10437, inlinedAt: !12878)
!12891 = !DILocation(line: 42, column: 17, scope: !12870)
!12892 = !DILocation(line: 42, column: 21, scope: !12870)
!12893 = !DILocation(line: 74, column: 27, scope: !12894, inlinedAt: !12874)
!12894 = distinct !DILexicalBlock(scope: !12872, file: !7149, line: 74, column: 6)
!12895 = !DILocation(line: 74, column: 6, scope: !12894, inlinedAt: !12874)
!12896 = !DILocation(line: 74, column: 6, scope: !12872, inlinedAt: !12874)
!12897 = !DILocation(line: 76, column: 6, scope: !12898, inlinedAt: !12874)
!12898 = distinct !DILexicalBlock(scope: !12894, file: !7149, line: 74, column: 32)
!12899 = !DILocation(line: 77, column: 13, scope: !12898, inlinedAt: !12874)
!12900 = !DILocation(line: 77, column: 12, scope: !12898, inlinedAt: !12874)
!12901 = !DILocation(line: 75, column: 3, scope: !12898, inlinedAt: !12874)
!12902 = !{i32 -2146897794}
!12903 = !DILocation(line: 78, column: 2, scope: !12898, inlinedAt: !12874)
!12904 = !DILocation(line: 80, column: 8, scope: !12905, inlinedAt: !12874)
!12905 = distinct !DILexicalBlock(scope: !12894, file: !7149, line: 78, column: 9)
!12906 = !DILocation(line: 80, column: 32, scope: !12905, inlinedAt: !12874)
!12907 = !DILocation(line: 79, column: 3, scope: !12905, inlinedAt: !12874)
!12908 = !{i32 -2146897662}
!12909 = !DILocation(line: 43, column: 1, scope: !12870)
!12910 = distinct !DISubprogram(name: "scsi_set_resid", scope: !270, file: !270, line: 194, type: !5505, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12911 = !DILocalVariable(name: "cmd", arg: 1, scope: !12910, file: !270, line: 194, type: !268)
!12912 = !DILocation(line: 194, column: 53, scope: !12910)
!12913 = !DILocalVariable(name: "resid", arg: 2, scope: !12910, file: !270, line: 194, type: !7)
!12914 = !DILocation(line: 194, column: 71, scope: !12910)
!12915 = !DILocation(line: 196, column: 23, scope: !12910)
!12916 = !DILocation(line: 196, column: 2, scope: !12910)
!12917 = !DILocation(line: 196, column: 7, scope: !12910)
!12918 = !DILocation(line: 196, column: 11, scope: !12910)
!12919 = !DILocation(line: 196, column: 21, scope: !12910)
!12920 = !DILocation(line: 197, column: 1, scope: !12910)
!12921 = distinct !DISubprogram(name: "scsi_mq_done", scope: !3, file: !3, line: 1591, type: !5352, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12922 = !DILocalVariable(name: "cmd", arg: 1, scope: !12921, file: !3, line: 1591, type: !268)
!12923 = !DILocation(line: 1591, column: 44, scope: !12921)
!12924 = !DILocation(line: 1593, column: 6, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 1593, column: 6)
!12926 = !DILocation(line: 1593, column: 6, scope: !12921)
!12927 = !DILocation(line: 1594, column: 3, scope: !12925)
!12928 = !DILocation(line: 1595, column: 6, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 1595, column: 6)
!12930 = !DILocation(line: 1595, column: 6, scope: !12921)
!12931 = !DILocation(line: 1596, column: 3, scope: !12929)
!12932 = !DILocation(line: 1597, column: 31, scope: !12921)
!12933 = !DILocation(line: 1597, column: 2, scope: !12921)
!12934 = !DILocation(line: 1598, column: 26, scope: !12921)
!12935 = !DILocation(line: 1598, column: 31, scope: !12921)
!12936 = !DILocation(line: 1598, column: 2, scope: !12921)
!12937 = !DILocation(line: 1599, column: 1, scope: !12921)
!12938 = distinct !DISubprogram(name: "scsi_dispatch_cmd", scope: !3, file: !3, line: 1464, type: !4912, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!12939 = !DILocation(line: 93, column: 55, scope: !9954, inlinedAt: !12940)
!12940 = distinct !DILocation(line: 241, column: 2, scope: !9957, inlinedAt: !12941)
!12941 = distinct !DILocation(line: 1469, column: 2, scope: !12938)
!12942 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !12943)
!12943 = distinct !DILocation(line: 240, column: 2, scope: !9957, inlinedAt: !12941)
!12944 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !12943)
!12945 = !DILocation(line: 238, column: 22, scope: !9957, inlinedAt: !12941)
!12946 = !DILocalVariable(name: "cmd", arg: 1, scope: !12938, file: !3, line: 1464, type: !268)
!12947 = !DILocation(line: 1464, column: 48, scope: !12938)
!12948 = !DILocalVariable(name: "host", scope: !12938, file: !3, line: 1466, type: !297)
!12949 = !DILocation(line: 1466, column: 20, scope: !12938)
!12950 = !DILocation(line: 1466, column: 27, scope: !12938)
!12951 = !DILocation(line: 1466, column: 32, scope: !12938)
!12952 = !DILocation(line: 1466, column: 40, scope: !12938)
!12953 = !DILocalVariable(name: "rtn", scope: !12938, file: !3, line: 1467, type: !286)
!12954 = !DILocation(line: 1467, column: 6, scope: !12938)
!12955 = !DILocation(line: 1469, column: 14, scope: !12938)
!12956 = !DILocation(line: 1469, column: 19, scope: !12938)
!12957 = !DILocation(line: 1469, column: 27, scope: !12938)
!12958 = !DILocation(line: 240, column: 31, scope: !9957, inlinedAt: !12941)
!12959 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !12943)
!12960 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !12943)
!12961 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !12943)
!12962 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !12943)
!12963 = !DILocation(line: 241, column: 18, scope: !9957, inlinedAt: !12941)
!12964 = !DILocation(line: 96, column: 16, scope: !9954, inlinedAt: !12940)
!12965 = !DILocation(line: 96, column: 19, scope: !9954, inlinedAt: !12940)
!12966 = !DILocation(line: 95, column: 2, scope: !9954, inlinedAt: !12940)
!12967 = !DILocation(line: 1472, column: 6, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 1472, column: 6)
!12969 = !DILocation(line: 1472, column: 6, scope: !12938)
!12970 = !DILocation(line: 1476, column: 3, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12968, file: !3, line: 1472, column: 53)
!12972 = !DILocation(line: 1476, column: 8, scope: !12971)
!12973 = !DILocation(line: 1476, column: 15, scope: !12971)
!12974 = !DILocation(line: 1477, column: 3, scope: !12971)
!12975 = !DILocation(line: 1481, column: 6, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 1481, column: 6)
!12977 = !DILocation(line: 1481, column: 6, scope: !12938)
!12978 = !DILocation(line: 1489, column: 3, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12976, file: !3, line: 1481, column: 50)
!12980 = !DILocation(line: 1489, column: 3, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12979, file: !3, line: 1489, column: 3)
!12982 = !DILocation(line: 1491, column: 3, scope: !12979)
!12983 = !DILocation(line: 1495, column: 6, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 1495, column: 6)
!12985 = !DILocation(line: 1495, column: 11, scope: !12984)
!12986 = !DILocation(line: 1495, column: 19, scope: !12984)
!12987 = !DILocation(line: 1495, column: 6, scope: !12938)
!12988 = !DILocation(line: 1496, column: 19, scope: !12984)
!12989 = !DILocation(line: 1496, column: 24, scope: !12984)
!12990 = !DILocation(line: 1496, column: 32, scope: !12984)
!12991 = !DILocation(line: 1496, column: 18, scope: !12984)
!12992 = !DILocation(line: 1497, column: 12, scope: !12984)
!12993 = !DILocation(line: 1497, column: 17, scope: !12984)
!12994 = !DILocation(line: 1497, column: 25, scope: !12984)
!12995 = !DILocation(line: 1497, column: 29, scope: !12984)
!12996 = !DILocation(line: 1497, column: 34, scope: !12984)
!12997 = !DILocation(line: 1496, column: 40, scope: !12984)
!12998 = !DILocation(line: 1496, column: 3, scope: !12984)
!12999 = !DILocation(line: 1496, column: 8, scope: !12984)
!13000 = !DILocation(line: 1496, column: 16, scope: !12984)
!13001 = !DILocation(line: 1499, column: 16, scope: !12938)
!13002 = !DILocation(line: 1499, column: 2, scope: !12938)
!13003 = !DILocation(line: 1505, column: 6, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 1505, column: 6)
!13005 = !DILocation(line: 1505, column: 11, scope: !13004)
!13006 = !DILocation(line: 1505, column: 21, scope: !13004)
!13007 = !DILocation(line: 1505, column: 26, scope: !13004)
!13008 = !DILocation(line: 1505, column: 34, scope: !13004)
!13009 = !DILocation(line: 1505, column: 40, scope: !13004)
!13010 = !DILocation(line: 1505, column: 19, scope: !13004)
!13011 = !DILocation(line: 1505, column: 6, scope: !12938)
!13012 = !DILocation(line: 1506, column: 3, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13004, file: !3, line: 1505, column: 53)
!13014 = !DILocation(line: 1506, column: 3, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !13013, file: !3, line: 1506, column: 3)
!13016 = !DILocation(line: 1510, column: 3, scope: !13013)
!13017 = !DILocation(line: 1510, column: 8, scope: !13013)
!13018 = !DILocation(line: 1510, column: 15, scope: !13013)
!13019 = !DILocation(line: 1511, column: 3, scope: !13013)
!13020 = !DILocation(line: 1514, column: 6, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 1514, column: 6)
!13022 = !DILocation(line: 1514, column: 6, scope: !12938)
!13023 = !DILocation(line: 1515, column: 3, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13021, file: !3, line: 1514, column: 48)
!13025 = !DILocation(line: 1515, column: 8, scope: !13024)
!13026 = !DILocation(line: 1515, column: 15, scope: !13024)
!13027 = !DILocation(line: 1516, column: 3, scope: !13024)
!13028 = !DILocation(line: 1520, column: 32, scope: !12938)
!13029 = !DILocation(line: 1520, column: 2, scope: !12938)
!13030 = !DILocation(line: 1521, column: 8, scope: !12938)
!13031 = !DILocation(line: 1521, column: 14, scope: !12938)
!13032 = !DILocation(line: 1521, column: 21, scope: !12938)
!13033 = !DILocation(line: 1521, column: 34, scope: !12938)
!13034 = !DILocation(line: 1521, column: 40, scope: !12938)
!13035 = !DILocation(line: 1521, column: 6, scope: !12938)
!13036 = !DILocation(line: 1522, column: 6, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 1522, column: 6)
!13038 = !DILocation(line: 1522, column: 6, scope: !12938)
!13039 = !DILocation(line: 1523, column: 33, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13037, file: !3, line: 1522, column: 11)
!13041 = !DILocation(line: 1523, column: 38, scope: !13040)
!13042 = !DILocation(line: 1523, column: 3, scope: !13040)
!13043 = !DILocation(line: 1524, column: 7, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13040, file: !3, line: 1524, column: 7)
!13045 = !DILocation(line: 1524, column: 11, scope: !13044)
!13046 = !DILocation(line: 1524, column: 39, scope: !13044)
!13047 = !DILocation(line: 1525, column: 7, scope: !13044)
!13048 = !DILocation(line: 1525, column: 11, scope: !13044)
!13049 = !DILocation(line: 1524, column: 7, scope: !13040)
!13050 = !DILocation(line: 1526, column: 8, scope: !13044)
!13051 = !DILocation(line: 1526, column: 4, scope: !13044)
!13052 = !DILocation(line: 1528, column: 3, scope: !13040)
!13053 = !DILocation(line: 1528, column: 3, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13040, file: !3, line: 1528, column: 3)
!13055 = !DILocation(line: 1530, column: 2, scope: !13040)
!13056 = !DILocation(line: 1532, column: 9, scope: !12938)
!13057 = !DILocation(line: 1532, column: 2, scope: !12938)
!13058 = !DILabel(scope: !12938, name: "done", file: !3, line: 1533)
!13059 = !DILocation(line: 1533, column: 2, scope: !12938)
!13060 = !DILocation(line: 1534, column: 2, scope: !12938)
!13061 = !DILocation(line: 1534, column: 7, scope: !12938)
!13062 = !DILocation(line: 1534, column: 17, scope: !12938)
!13063 = !DILocation(line: 1535, column: 2, scope: !12938)
!13064 = !DILocation(line: 1536, column: 1, scope: !12938)
!13065 = distinct !DISubprogram(name: "scsi_device_blocked", scope: !128, file: !128, line: 504, type: !4920, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13066 = !DILocalVariable(name: "sdev", arg: 1, scope: !13065, file: !128, line: 504, type: !293)
!13067 = !DILocation(line: 504, column: 59, scope: !13065)
!13068 = !DILocation(line: 506, column: 9, scope: !13065)
!13069 = !DILocation(line: 506, column: 15, scope: !13065)
!13070 = !DILocation(line: 506, column: 26, scope: !13065)
!13071 = !DILocation(line: 506, column: 40, scope: !13065)
!13072 = !DILocation(line: 507, column: 3, scope: !13065)
!13073 = !DILocation(line: 507, column: 9, scope: !13065)
!13074 = !DILocation(line: 507, column: 20, scope: !13065)
!13075 = !DILocation(line: 506, column: 2, scope: !13065)
!13076 = distinct !DISubprogram(name: "scsi_device_online", scope: !128, file: !128, line: 498, type: !4920, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13077 = !DILocalVariable(name: "sdev", arg: 1, scope: !13076, file: !128, line: 498, type: !293)
!13078 = !DILocation(line: 498, column: 58, scope: !13076)
!13079 = !DILocation(line: 500, column: 10, scope: !13076)
!13080 = !DILocation(line: 500, column: 16, scope: !13076)
!13081 = !DILocation(line: 500, column: 27, scope: !13076)
!13082 = !DILocation(line: 500, column: 43, scope: !13076)
!13083 = !DILocation(line: 501, column: 3, scope: !13076)
!13084 = !DILocation(line: 501, column: 9, scope: !13076)
!13085 = !DILocation(line: 501, column: 20, scope: !13076)
!13086 = !DILocation(line: 501, column: 46, scope: !13076)
!13087 = !DILocation(line: 502, column: 3, scope: !13076)
!13088 = !DILocation(line: 502, column: 9, scope: !13076)
!13089 = !DILocation(line: 502, column: 20, scope: !13076)
!13090 = !DILocation(line: 0, scope: !13076)
!13091 = !DILocation(line: 500, column: 2, scope: !13076)
!13092 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !8863, file: !8863, line: 656, type: !4497, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13093 = !DILocalVariable(name: "__edi", scope: !13094, file: !8863, line: 658, type: !356)
!13094 = distinct !DILexicalBlock(scope: !13092, file: !8863, line: 658, column: 2)
!13095 = !DILocation(line: 658, column: 2, scope: !13094)
!13096 = !DILocalVariable(name: "__esi", scope: !13094, file: !8863, line: 658, type: !356)
!13097 = !DILocalVariable(name: "__edx", scope: !13094, file: !8863, line: 658, type: !356)
!13098 = !DILocalVariable(name: "__ecx", scope: !13094, file: !8863, line: 658, type: !356)
!13099 = !DILocalVariable(name: "__eax", scope: !13094, file: !8863, line: 658, type: !356)
!13100 = !{i32 -2145513046, i32 -2145512314, i32 -2145512080, i32 -2145512029, i32 -2145512001, i32 -2145511976, i32 -2145512292, i32 -2145512279, i32 -2145511841, i32 -2145511722, i32 -2145512187, i32 -2145512160, i32 -2145512132, i32 -2145512102}
!13101 = !DILocation(line: 659, column: 1, scope: !13092)
!13102 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !8863, file: !8863, line: 661, type: !4497, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13103 = !DILocalVariable(name: "__edi", scope: !13104, file: !8863, line: 663, type: !356)
!13104 = distinct !DILexicalBlock(scope: !13102, file: !8863, line: 663, column: 2)
!13105 = !DILocation(line: 663, column: 2, scope: !13104)
!13106 = !DILocalVariable(name: "__esi", scope: !13104, file: !8863, line: 663, type: !356)
!13107 = !DILocalVariable(name: "__edx", scope: !13104, file: !8863, line: 663, type: !356)
!13108 = !DILocalVariable(name: "__ecx", scope: !13104, file: !8863, line: 663, type: !356)
!13109 = !DILocalVariable(name: "__eax", scope: !13104, file: !8863, line: 663, type: !356)
!13110 = !{i32 -2145510462, i32 -2145509732, i32 -2145509498, i32 -2145509447, i32 -2145509419, i32 -2145509394, i32 -2145509710, i32 -2145509697, i32 -2145509259, i32 -2145509140, i32 -2145509605, i32 -2145509578, i32 -2145509550, i32 -2145509520}
!13111 = !DILocation(line: 664, column: 1, scope: !13102)
!13112 = distinct !DISubprogram(name: "scsi_setup_scsi_cmnd", scope: !3, file: !3, line: 1172, type: !5297, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13113 = !DILocalVariable(name: "sdev", arg: 1, scope: !13112, file: !3, line: 1172, type: !293)
!13114 = !DILocation(line: 1172, column: 62, scope: !13112)
!13115 = !DILocalVariable(name: "req", arg: 2, scope: !13112, file: !3, line: 1173, type: !2780)
!13116 = !DILocation(line: 1173, column: 19, scope: !13112)
!13117 = !DILocalVariable(name: "cmd", scope: !13112, file: !3, line: 1175, type: !268)
!13118 = !DILocation(line: 1175, column: 20, scope: !13112)
!13119 = !DILocation(line: 1175, column: 43, scope: !13112)
!13120 = !DILocation(line: 1175, column: 26, scope: !13112)
!13121 = !DILocation(line: 1183, column: 6, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 1183, column: 6)
!13123 = !DILocation(line: 1183, column: 11, scope: !13122)
!13124 = !DILocation(line: 1183, column: 6, scope: !13112)
!13125 = !DILocalVariable(name: "ret", scope: !13126, file: !3, line: 1184, type: !2614)
!13126 = distinct !DILexicalBlock(scope: !13122, file: !3, line: 1183, column: 16)
!13127 = !DILocation(line: 1184, column: 16, scope: !13126)
!13128 = !DILocation(line: 1184, column: 42, scope: !13126)
!13129 = !DILocation(line: 1184, column: 22, scope: !13126)
!13130 = !DILocation(line: 1185, column: 7, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13126, file: !3, line: 1185, column: 7)
!13132 = !DILocation(line: 1185, column: 7, scope: !13126)
!13133 = !DILocation(line: 1186, column: 11, scope: !13131)
!13134 = !DILocation(line: 1186, column: 4, scope: !13131)
!13135 = !DILocation(line: 1187, column: 2, scope: !13126)
!13136 = !DILocation(line: 1188, column: 3, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13122, file: !3, line: 1187, column: 9)
!13138 = !DILocation(line: 1188, column: 3, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13140, file: !3, line: 1188, column: 3)
!13140 = distinct !DILexicalBlock(scope: !13137, file: !3, line: 1188, column: 3)
!13141 = !DILocation(line: 1188, column: 3, scope: !13140)
!13142 = !DILocation(line: 1188, column: 3, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13139, file: !3, line: 1188, column: 3)
!13144 = !DILocation(line: 1188, column: 3, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13143, file: !3, line: 1188, column: 3)
!13146 = !DILocation(line: 1188, column: 3, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13143, file: !3, line: 1188, column: 3)
!13148 = !{i32 -2140928822, i32 -2140928793, i32 -2140928747, i32 -2140928689, i32 -2140928635, i32 -2140928581, i32 -2140928526, i32 -2140928495}
!13149 = !DILocation(line: 1188, column: 3, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13151, file: !3, line: 1188, column: 3)
!13151 = distinct !DILexicalBlock(scope: !13143, file: !3, line: 1188, column: 3)
!13152 = !{i32 -2140928048, i32 -2140928041, i32 -2140927987, i32 -2140927956, i32 -2140927926}
!13153 = !DILocation(line: 1188, column: 3, scope: !13151)
!13154 = !DILocation(line: 1190, column: 11, scope: !13137)
!13155 = !DILocation(line: 1190, column: 16, scope: !13137)
!13156 = !DILocation(line: 1190, column: 3, scope: !13137)
!13157 = !DILocation(line: 1193, column: 26, scope: !13112)
!13158 = !DILocation(line: 1193, column: 17, scope: !13112)
!13159 = !DILocation(line: 1193, column: 32, scope: !13112)
!13160 = !DILocation(line: 1193, column: 2, scope: !13112)
!13161 = !DILocation(line: 1193, column: 7, scope: !13112)
!13162 = !DILocation(line: 1193, column: 15, scope: !13112)
!13163 = !DILocation(line: 1194, column: 6, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 1194, column: 6)
!13165 = !DILocation(line: 1194, column: 11, scope: !13164)
!13166 = !DILocation(line: 1194, column: 19, scope: !13164)
!13167 = !DILocation(line: 1194, column: 6, scope: !13112)
!13168 = !DILocation(line: 1195, column: 36, scope: !13164)
!13169 = !DILocation(line: 1195, column: 41, scope: !13164)
!13170 = !DILocation(line: 1195, column: 18, scope: !13164)
!13171 = !DILocation(line: 1195, column: 3, scope: !13164)
!13172 = !DILocation(line: 1195, column: 8, scope: !13164)
!13173 = !DILocation(line: 1195, column: 16, scope: !13164)
!13174 = !DILocation(line: 1196, column: 23, scope: !13112)
!13175 = !DILocation(line: 1196, column: 14, scope: !13112)
!13176 = !DILocation(line: 1196, column: 29, scope: !13112)
!13177 = !DILocation(line: 1196, column: 2, scope: !13112)
!13178 = !DILocation(line: 1196, column: 7, scope: !13112)
!13179 = !DILocation(line: 1196, column: 12, scope: !13112)
!13180 = !DILocation(line: 1197, column: 35, scope: !13112)
!13181 = !DILocation(line: 1197, column: 22, scope: !13112)
!13182 = !DILocation(line: 1197, column: 2, scope: !13112)
!13183 = !DILocation(line: 1197, column: 7, scope: !13112)
!13184 = !DILocation(line: 1197, column: 20, scope: !13112)
!13185 = !DILocation(line: 1198, column: 26, scope: !13112)
!13186 = !DILocation(line: 1198, column: 17, scope: !13112)
!13187 = !DILocation(line: 1198, column: 32, scope: !13112)
!13188 = !DILocation(line: 1198, column: 2, scope: !13112)
!13189 = !DILocation(line: 1198, column: 7, scope: !13112)
!13190 = !DILocation(line: 1198, column: 15, scope: !13112)
!13191 = !DILocation(line: 1199, column: 2, scope: !13112)
!13192 = !DILocation(line: 1200, column: 1, scope: !13112)
!13193 = distinct !DISubprogram(name: "scsi_command_size", scope: !5275, file: !5275, line: 22, type: !13194, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13194 = !DISubroutineType(types: !13195)
!13195 = !{!7, !708}
!13196 = !DILocalVariable(name: "cmnd", arg: 1, scope: !13193, file: !5275, line: 22, type: !708)
!13197 = !DILocation(line: 22, column: 40, scope: !13193)
!13198 = !DILocation(line: 24, column: 10, scope: !13193)
!13199 = !DILocation(line: 24, column: 18, scope: !13193)
!13200 = !DILocation(line: 24, column: 9, scope: !13193)
!13201 = !DILocation(line: 25, column: 26, scope: !13193)
!13202 = !DILocation(line: 25, column: 3, scope: !13193)
!13203 = !DILocation(line: 25, column: 34, scope: !13193)
!13204 = !DILocation(line: 24, column: 2, scope: !13193)
!13205 = distinct !DISubprogram(name: "scsi_varlen_cdb_length", scope: !5275, file: !5275, line: 13, type: !13206, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13206 = !DISubroutineType(types: !13207)
!13207 = !{!7, !1914}
!13208 = !DILocalVariable(name: "hdr", arg: 1, scope: !13205, file: !5275, line: 13, type: !1914)
!13209 = !DILocation(line: 13, column: 36, scope: !13205)
!13210 = !DILocation(line: 15, column: 40, scope: !13205)
!13211 = !DILocation(line: 15, column: 10, scope: !13205)
!13212 = !DILocation(line: 15, column: 46, scope: !13205)
!13213 = !DILocation(line: 15, column: 9, scope: !13205)
!13214 = !DILocation(line: 15, column: 68, scope: !13205)
!13215 = !DILocation(line: 15, column: 2, scope: !13205)
!13216 = distinct !DISubprogram(name: "blk_should_fake_timeout", scope: !190, file: !190, line: 536, type: !3141, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13217 = !DILocalVariable(name: "q", arg: 1, scope: !13216, file: !190, line: 536, type: !2776)
!13218 = !DILocation(line: 536, column: 66, scope: !13216)
!13219 = !DILocation(line: 541, column: 2, scope: !13216)
!13220 = distinct !DISubprogram(name: "test_and_set_bit", scope: !8808, file: !8808, line: 68, type: !8809, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13221 = !DILocalVariable(name: "nr", arg: 1, scope: !13222, file: !7149, line: 136, type: !197)
!13222 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !7149, file: !7149, line: 136, type: !8809, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13223 = !DILocation(line: 136, column: 28, scope: !13222, inlinedAt: !13224)
!13224 = distinct !DILocation(line: 71, column: 9, scope: !13220)
!13225 = !DILocalVariable(name: "addr", arg: 2, scope: !13222, file: !7149, line: 136, type: !7223)
!13226 = !DILocation(line: 136, column: 56, scope: !13222, inlinedAt: !13224)
!13227 = !DILocalVariable(name: "c", scope: !13228, file: !7149, line: 138, type: !793)
!13228 = distinct !DILexicalBlock(scope: !13222, file: !7149, line: 138, column: 9)
!13229 = !DILocation(line: 138, column: 9, scope: !13228, inlinedAt: !13224)
!13230 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !13231)
!13231 = distinct !DILocation(line: 70, column: 2, scope: !13220)
!13232 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !13231)
!13233 = !DILocalVariable(name: "nr", arg: 1, scope: !13220, file: !8808, line: 68, type: !197)
!13234 = !DILocation(line: 68, column: 42, scope: !13220)
!13235 = !DILocalVariable(name: "addr", arg: 2, scope: !13220, file: !8808, line: 68, type: !7223)
!13236 = !DILocation(line: 68, column: 70, scope: !13220)
!13237 = !DILocation(line: 70, column: 31, scope: !13220)
!13238 = !DILocation(line: 70, column: 38, scope: !13220)
!13239 = !DILocation(line: 70, column: 36, scope: !13220)
!13240 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !13231)
!13241 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !13231)
!13242 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !13231)
!13243 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !13231)
!13244 = !DILocation(line: 71, column: 31, scope: !13220)
!13245 = !DILocation(line: 71, column: 35, scope: !13220)
!13246 = !{i32 -2146894262, i32 -2146894166}
!13247 = !DILocation(line: 71, column: 2, scope: !13220)
!13248 = distinct !DISubprogram(name: "trace_scsi_dispatch_cmd_done", scope: !13249, file: !13249, line: 336, type: !5352, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13249 = !DIFile(filename: "./include/trace/events/scsi.h", directory: "/home/lizy2001/genbc/linux")
!13250 = !DILocalVariable(name: "cmd", arg: 1, scope: !13248, file: !13249, line: 336, type: !268)
!13251 = !DILocation(line: 336, column: 1, scope: !13248)
!13252 = distinct !DISubprogram(name: "scsi_log_send", scope: !13253, file: !13253, line: 39, type: !5352, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13253 = !DIFile(filename: "drivers/scsi/scsi_priv.h", directory: "/home/lizy2001/genbc/linux")
!13254 = !DILocalVariable(name: "cmd", arg: 1, scope: !13252, file: !13253, line: 39, type: !268)
!13255 = !DILocation(line: 39, column: 52, scope: !13252)
!13256 = !DILocation(line: 40, column: 4, scope: !13252)
!13257 = distinct !DISubprogram(name: "trace_scsi_dispatch_cmd_start", scope: !13249, file: !13249, line: 200, type: !5352, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13258 = !DILocalVariable(name: "cmd", arg: 1, scope: !13257, file: !13249, line: 200, type: !268)
!13259 = !DILocation(line: 200, column: 1, scope: !13257)
!13260 = distinct !DISubprogram(name: "trace_scsi_dispatch_cmd_error", scope: !13249, file: !13249, line: 242, type: !266, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13261 = !DILocalVariable(name: "cmd", arg: 1, scope: !13260, file: !13249, line: 242, type: !268)
!13262 = !DILocation(line: 242, column: 1, scope: !13260)
!13263 = !DILocalVariable(name: "rtn", arg: 2, scope: !13260, file: !13249, line: 242, type: !286)
!13264 = distinct !DISubprogram(name: "scsi_dev_queue_ready", scope: !3, file: !3, line: 1255, type: !13265, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13265 = !DISubroutineType(types: !13266)
!13266 = !{!286, !2776, !293}
!13267 = !DILocation(line: 106, column: 55, scope: !5782, inlinedAt: !13268)
!13268 = distinct !DILocation(line: 331, column: 2, scope: !5789, inlinedAt: !13269)
!13269 = distinct !DILocation(line: 1279, column: 2, scope: !13264)
!13270 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !13271)
!13271 = distinct !DILocation(line: 330, column: 2, scope: !5789, inlinedAt: !13269)
!13272 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !13271)
!13273 = !DILocation(line: 328, column: 22, scope: !5789, inlinedAt: !13269)
!13274 = !DILocation(line: 163, column: 55, scope: !12373, inlinedAt: !13275)
!13275 = distinct !DILocation(line: 178, column: 9, scope: !12378, inlinedAt: !13276)
!13276 = distinct !DILocation(line: 457, column: 9, scope: !12380, inlinedAt: !13277)
!13277 = distinct !DILocation(line: 341, column: 9, scope: !12385, inlinedAt: !13278)
!13278 = distinct !DILocation(line: 1268, column: 7, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13280, file: !3, line: 1268, column: 7)
!13280 = distinct !DILexicalBlock(scope: !13281, file: !3, line: 1261, column: 42)
!13281 = distinct !DILexicalBlock(scope: !13264, file: !3, line: 1261, column: 6)
!13282 = !DILocation(line: 163, column: 68, scope: !12373, inlinedAt: !13275)
!13283 = !DILocation(line: 165, column: 13, scope: !12393, inlinedAt: !13275)
!13284 = !DILocation(line: 176, column: 55, scope: !12378, inlinedAt: !13276)
!13285 = !DILocation(line: 176, column: 68, scope: !12378, inlinedAt: !13276)
!13286 = !DILocation(line: 455, column: 34, scope: !12380, inlinedAt: !13277)
!13287 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !13288)
!13288 = distinct !DILocation(line: 340, column: 2, scope: !12385, inlinedAt: !13278)
!13289 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !13288)
!13290 = !DILocation(line: 338, column: 29, scope: !12385, inlinedAt: !13278)
!13291 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !13292)
!13292 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !13293)
!13293 = distinct !DILocation(line: 1261, column: 6, scope: !13281)
!13294 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !13295)
!13295 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !13293)
!13296 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !13295)
!13297 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !13293)
!13298 = !DILocation(line: 163, column: 55, scope: !12373, inlinedAt: !13299)
!13299 = distinct !DILocation(line: 286, column: 9, scope: !12415, inlinedAt: !13300)
!13300 = distinct !DILocation(line: 251, column: 9, scope: !12417, inlinedAt: !13301)
!13301 = distinct !DILocation(line: 1260, column: 9, scope: !13264)
!13302 = !DILocation(line: 163, column: 68, scope: !12373, inlinedAt: !13299)
!13303 = !DILocation(line: 165, column: 13, scope: !12393, inlinedAt: !13299)
!13304 = !DILocation(line: 284, column: 34, scope: !12415, inlinedAt: !13300)
!13305 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !13306)
!13306 = distinct !DILocation(line: 250, column: 2, scope: !12417, inlinedAt: !13301)
!13307 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !13306)
!13308 = !DILocation(line: 248, column: 29, scope: !12417, inlinedAt: !13301)
!13309 = !DILocalVariable(name: "q", arg: 1, scope: !13264, file: !3, line: 1255, type: !2776)
!13310 = !DILocation(line: 1255, column: 62, scope: !13264)
!13311 = !DILocalVariable(name: "sdev", arg: 2, scope: !13264, file: !3, line: 1256, type: !293)
!13312 = !DILocation(line: 1256, column: 27, scope: !13264)
!13313 = !DILocalVariable(name: "busy", scope: !13264, file: !3, line: 1258, type: !7)
!13314 = !DILocation(line: 1258, column: 15, scope: !13264)
!13315 = !DILocation(line: 1260, column: 28, scope: !13264)
!13316 = !DILocation(line: 1260, column: 34, scope: !13264)
!13317 = !DILocation(line: 250, column: 31, scope: !12417, inlinedAt: !13301)
!13318 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !13306)
!13319 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !13306)
!13320 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !13306)
!13321 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !13306)
!13322 = !DILocation(line: 251, column: 32, scope: !12417, inlinedAt: !13301)
!13323 = !DILocation(line: 286, column: 35, scope: !12415, inlinedAt: !13300)
!13324 = !DILocation(line: 165, column: 9, scope: !12373, inlinedAt: !13299)
!13325 = !DILocation(line: 165, column: 11, scope: !12373, inlinedAt: !13299)
!13326 = !DILocation(line: 1260, column: 47, scope: !13264)
!13327 = !DILocation(line: 1260, column: 7, scope: !13264)
!13328 = !DILocation(line: 1261, column: 19, scope: !13281)
!13329 = !DILocation(line: 1261, column: 25, scope: !13281)
!13330 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !13293)
!13331 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !13295)
!13332 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !13295)
!13333 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !13295)
!13334 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !13295)
!13335 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !13293)
!13336 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !13292)
!13337 = !DILocation(line: 1261, column: 6, scope: !13281)
!13338 = !DILocation(line: 1261, column: 6, scope: !13264)
!13339 = !DILocation(line: 1262, column: 7, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13280, file: !3, line: 1262, column: 7)
!13341 = !DILocation(line: 1262, column: 7, scope: !13280)
!13342 = !DILocation(line: 1263, column: 4, scope: !13340)
!13343 = !DILocation(line: 1268, column: 26, scope: !13279)
!13344 = !DILocation(line: 1268, column: 32, scope: !13279)
!13345 = !DILocation(line: 340, column: 31, scope: !12385, inlinedAt: !13278)
!13346 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !13288)
!13347 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !13288)
!13348 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !13288)
!13349 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !13288)
!13350 = !DILocation(line: 341, column: 32, scope: !12385, inlinedAt: !13278)
!13351 = !DILocation(line: 457, column: 35, scope: !12380, inlinedAt: !13277)
!13352 = !DILocation(line: 178, column: 33, scope: !12378, inlinedAt: !13276)
!13353 = !DILocation(line: 178, column: 32, scope: !12378, inlinedAt: !13276)
!13354 = !DILocation(line: 178, column: 36, scope: !12378, inlinedAt: !13276)
!13355 = !DILocation(line: 165, column: 9, scope: !12373, inlinedAt: !13275)
!13356 = !DILocation(line: 165, column: 11, scope: !12373, inlinedAt: !13275)
!13357 = !DILocation(line: 1268, column: 48, scope: !13279)
!13358 = !DILocation(line: 1268, column: 7, scope: !13280)
!13359 = !DILocation(line: 1269, column: 4, scope: !13279)
!13360 = !DILocation(line: 1270, column: 3, scope: !13280)
!13361 = !DILocation(line: 1270, column: 3, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13280, file: !3, line: 1270, column: 3)
!13363 = !DILocation(line: 1272, column: 2, scope: !13280)
!13364 = !DILocation(line: 1274, column: 6, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13264, file: !3, line: 1274, column: 6)
!13366 = !DILocation(line: 1274, column: 14, scope: !13365)
!13367 = !DILocation(line: 1274, column: 20, scope: !13365)
!13368 = !DILocation(line: 1274, column: 11, scope: !13365)
!13369 = !DILocation(line: 1274, column: 6, scope: !13264)
!13370 = !DILocation(line: 1275, column: 3, scope: !13365)
!13371 = !DILocation(line: 1277, column: 2, scope: !13264)
!13372 = !DILabel(scope: !13264, name: "out_dec", file: !3, line: 1278)
!13373 = !DILocation(line: 1278, column: 1, scope: !13264)
!13374 = !DILocation(line: 1279, column: 14, scope: !13264)
!13375 = !DILocation(line: 1279, column: 20, scope: !13264)
!13376 = !DILocation(line: 330, column: 31, scope: !5789, inlinedAt: !13269)
!13377 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !13271)
!13378 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !13271)
!13379 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !13271)
!13380 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !13271)
!13381 = !DILocation(line: 331, column: 18, scope: !5789, inlinedAt: !13269)
!13382 = !DILocation(line: 109, column: 16, scope: !5782, inlinedAt: !13268)
!13383 = !DILocation(line: 109, column: 19, scope: !5782, inlinedAt: !13268)
!13384 = !DILocation(line: 108, column: 2, scope: !5782, inlinedAt: !13268)
!13385 = !DILocation(line: 1280, column: 2, scope: !13264)
!13386 = !DILocation(line: 1281, column: 1, scope: !13264)
!13387 = distinct !DISubprogram(name: "scsi_log_completion", scope: !13253, file: !13253, line: 41, type: !266, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13388 = !DILocalVariable(name: "cmd", arg: 1, scope: !13387, file: !13253, line: 41, type: !268)
!13389 = !DILocation(line: 41, column: 58, scope: !13387)
!13390 = !DILocalVariable(name: "disposition", arg: 2, scope: !13387, file: !13253, line: 41, type: !286)
!13391 = !DILocation(line: 41, column: 67, scope: !13387)
!13392 = !DILocation(line: 42, column: 4, scope: !13387)
!13393 = distinct !DISubprogram(name: "scsi_alloc_sense_buffer", scope: !3, file: !3, line: 74, type: !13394, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13394 = !DISubroutineType(types: !13395)
!13395 = !{!282, !793, !605, !286}
!13396 = !DILocalVariable(name: "s", arg: 1, scope: !13397, file: !5426, line: 421, type: !2665)
!13397 = distinct !DISubprogram(name: "kmem_cache_alloc_node", scope: !5426, file: !5426, line: 421, type: !13398, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13398 = !DISubroutineType(types: !13399)
!13399 = !{!291, !2665, !605, !286}
!13400 = !DILocation(line: 421, column: 71, scope: !13397, inlinedAt: !13401)
!13401 = distinct !DILocation(line: 77, column: 9, scope: !13393)
!13402 = !DILocalVariable(name: "flags", arg: 2, scope: !13397, file: !5426, line: 421, type: !605)
!13403 = !DILocation(line: 421, column: 80, scope: !13397, inlinedAt: !13401)
!13404 = !DILocalVariable(name: "node", arg: 3, scope: !13397, file: !5426, line: 421, type: !286)
!13405 = !DILocation(line: 421, column: 91, scope: !13397, inlinedAt: !13401)
!13406 = !DILocalVariable(name: "unchecked_isa_dma", arg: 1, scope: !13393, file: !3, line: 74, type: !793)
!13407 = !DILocation(line: 74, column: 52, scope: !13393)
!13408 = !DILocalVariable(name: "gfp_mask", arg: 2, scope: !13393, file: !3, line: 75, type: !605)
!13409 = !DILocation(line: 75, column: 8, scope: !13393)
!13410 = !DILocalVariable(name: "numa_node", arg: 3, scope: !13393, file: !3, line: 75, type: !286)
!13411 = !DILocation(line: 75, column: 22, scope: !13393)
!13412 = !DILocation(line: 77, column: 55, scope: !13393)
!13413 = !DILocation(line: 77, column: 31, scope: !13393)
!13414 = !DILocation(line: 78, column: 10, scope: !13393)
!13415 = !DILocation(line: 78, column: 20, scope: !13393)
!13416 = !DILocation(line: 423, column: 26, scope: !13397, inlinedAt: !13401)
!13417 = !DILocation(line: 423, column: 29, scope: !13397, inlinedAt: !13401)
!13418 = !DILocation(line: 423, column: 9, scope: !13397, inlinedAt: !13401)
!13419 = !DILocation(line: 77, column: 2, scope: !13393)
!13420 = distinct !DISubprogram(name: "scsi_free_sense_buffer", scope: !3, file: !3, line: 67, type: !13421, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13421 = !DISubroutineType(types: !13422)
!13422 = !{null, !793, !282}
!13423 = !DILocalVariable(name: "unchecked_isa_dma", arg: 1, scope: !13420, file: !3, line: 67, type: !793)
!13424 = !DILocation(line: 67, column: 41, scope: !13420)
!13425 = !DILocalVariable(name: "sense_buffer", arg: 2, scope: !13420, file: !3, line: 68, type: !282)
!13426 = !DILocation(line: 68, column: 23, scope: !13420)
!13427 = !DILocation(line: 70, column: 42, scope: !13420)
!13428 = !DILocation(line: 70, column: 18, scope: !13420)
!13429 = !DILocation(line: 71, column: 4, scope: !13420)
!13430 = !DILocation(line: 70, column: 2, scope: !13420)
!13431 = !DILocation(line: 72, column: 1, scope: !13420)
!13432 = distinct !DISubprogram(name: "scsi_device_is_busy", scope: !3, file: !3, line: 384, type: !13433, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13433 = !DISubroutineType(types: !13434)
!13434 = !{!793, !293}
!13435 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !13436)
!13436 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !13437)
!13437 = distinct !DILocation(line: 388, column: 6, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 388, column: 6)
!13439 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !13440)
!13440 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !13437)
!13441 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !13440)
!13442 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !13437)
!13443 = !DILocation(line: 23, column: 61, scope: !9988, inlinedAt: !13444)
!13444 = distinct !DILocation(line: 28, column: 9, scope: !9995, inlinedAt: !13445)
!13445 = distinct !DILocation(line: 386, column: 6, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 386, column: 6)
!13447 = !DILocation(line: 69, column: 73, scope: !7163, inlinedAt: !13448)
!13448 = distinct !DILocation(line: 27, column: 2, scope: !9995, inlinedAt: !13445)
!13449 = !DILocation(line: 69, column: 83, scope: !7163, inlinedAt: !13448)
!13450 = !DILocation(line: 25, column: 29, scope: !9995, inlinedAt: !13445)
!13451 = !DILocalVariable(name: "sdev", arg: 1, scope: !13432, file: !3, line: 384, type: !293)
!13452 = !DILocation(line: 384, column: 60, scope: !13432)
!13453 = !DILocation(line: 386, column: 19, scope: !13446)
!13454 = !DILocation(line: 386, column: 25, scope: !13446)
!13455 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !13445)
!13456 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !13448)
!13457 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !13448)
!13458 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !13448)
!13459 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !13448)
!13460 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !13445)
!13461 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !13444)
!13462 = !DILocation(line: 386, column: 41, scope: !13446)
!13463 = !DILocation(line: 386, column: 47, scope: !13446)
!13464 = !DILocation(line: 386, column: 38, scope: !13446)
!13465 = !DILocation(line: 386, column: 6, scope: !13432)
!13466 = !DILocation(line: 387, column: 3, scope: !13446)
!13467 = !DILocation(line: 388, column: 19, scope: !13438)
!13468 = !DILocation(line: 388, column: 25, scope: !13438)
!13469 = !DILocation(line: 27, column: 25, scope: !9995, inlinedAt: !13437)
!13470 = !DILocation(line: 71, column: 19, scope: !7163, inlinedAt: !13440)
!13471 = !DILocation(line: 71, column: 22, scope: !7163, inlinedAt: !13440)
!13472 = !DILocation(line: 71, column: 2, scope: !7163, inlinedAt: !13440)
!13473 = !DILocation(line: 72, column: 2, scope: !7163, inlinedAt: !13440)
!13474 = !DILocation(line: 28, column: 26, scope: !9995, inlinedAt: !13437)
!13475 = !DILocation(line: 29, column: 9, scope: !9988, inlinedAt: !13436)
!13476 = !DILocation(line: 388, column: 41, scope: !13438)
!13477 = !DILocation(line: 388, column: 6, scope: !13432)
!13478 = !DILocation(line: 389, column: 3, scope: !13438)
!13479 = !DILocation(line: 390, column: 2, scope: !13432)
!13480 = !DILocation(line: 391, column: 1, scope: !13432)
!13481 = distinct !DISubprogram(name: "get_order", scope: !13482, file: !13482, line: 29, type: !9742, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13482 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!13483 = !DILocalVariable(name: "x", arg: 1, scope: !13484, file: !7149, line: 366, type: !404)
!13484 = distinct !DISubprogram(name: "fls64", scope: !7149, file: !7149, line: 366, type: !13485, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13485 = !DISubroutineType(types: !13486)
!13486 = !{!286, !404}
!13487 = !DILocation(line: 366, column: 40, scope: !13484, inlinedAt: !13488)
!13488 = distinct !DILocation(line: 46, column: 9, scope: !13481)
!13489 = !DILocalVariable(name: "bitpos", scope: !13484, file: !7149, line: 368, type: !286)
!13490 = !DILocation(line: 368, column: 6, scope: !13484, inlinedAt: !13488)
!13491 = !DILocalVariable(name: "size", arg: 1, scope: !13481, file: !13482, line: 29, type: !356)
!13492 = !DILocation(line: 29, column: 63, scope: !13481)
!13493 = !DILocation(line: 31, column: 27, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13481, file: !13482, line: 31, column: 6)
!13495 = !DILocation(line: 31, column: 6, scope: !13494)
!13496 = !DILocation(line: 31, column: 6, scope: !13481)
!13497 = !DILocation(line: 32, column: 8, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13499, file: !13482, line: 32, column: 7)
!13499 = distinct !DILexicalBlock(scope: !13494, file: !13482, line: 31, column: 34)
!13500 = !DILocation(line: 32, column: 7, scope: !13499)
!13501 = !DILocation(line: 33, column: 4, scope: !13498)
!13502 = !DILocation(line: 35, column: 7, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13499, file: !13482, line: 35, column: 7)
!13504 = !DILocation(line: 35, column: 12, scope: !13503)
!13505 = !DILocation(line: 35, column: 7, scope: !13499)
!13506 = !DILocation(line: 36, column: 4, scope: !13503)
!13507 = !DILocation(line: 38, column: 10, scope: !13499)
!13508 = !DILocation(line: 38, column: 28, scope: !13499)
!13509 = !DILocation(line: 38, column: 41, scope: !13499)
!13510 = !DILocation(line: 38, column: 3, scope: !13499)
!13511 = !DILocation(line: 41, column: 6, scope: !13481)
!13512 = !DILocation(line: 42, column: 7, scope: !13481)
!13513 = !DILocation(line: 46, column: 15, scope: !13481)
!13514 = !DILocation(line: 374, column: 2, scope: !13484, inlinedAt: !13488)
!13515 = !DILocation(line: 376, column: 14, scope: !13484, inlinedAt: !13488)
!13516 = !{i32 553473}
!13517 = !DILocation(line: 377, column: 9, scope: !13484, inlinedAt: !13488)
!13518 = !DILocation(line: 377, column: 16, scope: !13484, inlinedAt: !13488)
!13519 = !DILocation(line: 46, column: 2, scope: !13481)
!13520 = !DILocation(line: 48, column: 1, scope: !13481)
!13521 = distinct !DISubprogram(name: "__ilog2_u64", scope: !13522, file: !13522, line: 30, type: !13523, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13522 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!13523 = !DISubroutineType(types: !13524)
!13524 = !{!286, !403}
!13525 = !DILocation(line: 366, column: 40, scope: !13484, inlinedAt: !13526)
!13526 = distinct !DILocation(line: 32, column: 9, scope: !13521)
!13527 = !DILocation(line: 368, column: 6, scope: !13484, inlinedAt: !13526)
!13528 = !DILocalVariable(name: "n", arg: 1, scope: !13521, file: !13522, line: 30, type: !403)
!13529 = !DILocation(line: 30, column: 21, scope: !13521)
!13530 = !DILocation(line: 32, column: 15, scope: !13521)
!13531 = !DILocation(line: 374, column: 2, scope: !13484, inlinedAt: !13526)
!13532 = !DILocation(line: 376, column: 14, scope: !13484, inlinedAt: !13526)
!13533 = !DILocation(line: 377, column: 9, scope: !13484, inlinedAt: !13526)
!13534 = !DILocation(line: 377, column: 16, scope: !13484, inlinedAt: !13526)
!13535 = !DILocation(line: 32, column: 18, scope: !13521)
!13536 = !DILocation(line: 32, column: 2, scope: !13521)
!13537 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !13538, file: !13538, line: 137, type: !13539, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13538 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!13539 = !DISubroutineType(types: !13540)
!13540 = !{!291, !2665, !1914, !928, !605}
!13541 = !DILocalVariable(name: "s", arg: 1, scope: !13537, file: !13538, line: 137, type: !2665)
!13542 = !DILocation(line: 137, column: 54, scope: !13537)
!13543 = !DILocalVariable(name: "object", arg: 2, scope: !13537, file: !13538, line: 137, type: !1914)
!13544 = !DILocation(line: 137, column: 69, scope: !13537)
!13545 = !DILocalVariable(name: "size", arg: 3, scope: !13537, file: !13538, line: 138, type: !928)
!13546 = !DILocation(line: 138, column: 12, scope: !13537)
!13547 = !DILocalVariable(name: "flags", arg: 4, scope: !13537, file: !13538, line: 138, type: !605)
!13548 = !DILocation(line: 138, column: 24, scope: !13537)
!13549 = !DILocation(line: 140, column: 17, scope: !13537)
!13550 = !DILocation(line: 140, column: 2, scope: !13537)
!13551 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !8863, file: !8863, line: 651, type: !13552, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13552 = !DISubroutineType(types: !13553)
!13553 = !{null, !356}
!13554 = !DILocalVariable(name: "f", arg: 1, scope: !13551, file: !8863, line: 651, type: !356)
!13555 = !DILocation(line: 651, column: 65, scope: !13551)
!13556 = !DILocalVariable(name: "__edi", scope: !13557, file: !8863, line: 653, type: !356)
!13557 = distinct !DILexicalBlock(scope: !13551, file: !8863, line: 653, column: 2)
!13558 = !DILocation(line: 653, column: 2, scope: !13557)
!13559 = !DILocalVariable(name: "__esi", scope: !13557, file: !8863, line: 653, type: !356)
!13560 = !DILocalVariable(name: "__edx", scope: !13557, file: !8863, line: 653, type: !356)
!13561 = !DILocalVariable(name: "__ecx", scope: !13557, file: !8863, line: 653, type: !356)
!13562 = !DILocalVariable(name: "__eax", scope: !13557, file: !8863, line: 653, type: !356)
!13563 = !{i32 -2145515673, i32 -2145514923, i32 -2145514689, i32 -2145514638, i32 -2145514610, i32 -2145514585, i32 -2145514901, i32 -2145514888, i32 -2145514450, i32 -2145514331, i32 -2145514796, i32 -2145514769, i32 -2145514741, i32 -2145514711}
!13564 = !DILocation(line: 654, column: 1, scope: !13551)
!13565 = distinct !DISubprogram(name: "__list_add", scope: !7203, file: !7203, line: 63, type: !13566, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13566 = !DISubroutineType(types: !13567)
!13567 = !{null, !305, !305, !305}
!13568 = !DILocalVariable(name: "new", arg: 1, scope: !13565, file: !7203, line: 63, type: !305)
!13569 = !DILocation(line: 63, column: 49, scope: !13565)
!13570 = !DILocalVariable(name: "prev", arg: 2, scope: !13565, file: !7203, line: 64, type: !305)
!13571 = !DILocation(line: 64, column: 28, scope: !13565)
!13572 = !DILocalVariable(name: "next", arg: 3, scope: !13565, file: !7203, line: 65, type: !305)
!13573 = !DILocation(line: 65, column: 28, scope: !13565)
!13574 = !DILocation(line: 67, column: 24, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13565, file: !7203, line: 67, column: 6)
!13576 = !DILocation(line: 67, column: 29, scope: !13575)
!13577 = !DILocation(line: 67, column: 35, scope: !13575)
!13578 = !DILocation(line: 67, column: 7, scope: !13575)
!13579 = !DILocation(line: 67, column: 6, scope: !13565)
!13580 = !DILocation(line: 68, column: 3, scope: !13575)
!13581 = !DILocation(line: 70, column: 15, scope: !13565)
!13582 = !DILocation(line: 70, column: 2, scope: !13565)
!13583 = !DILocation(line: 70, column: 8, scope: !13565)
!13584 = !DILocation(line: 70, column: 13, scope: !13565)
!13585 = !DILocation(line: 71, column: 14, scope: !13565)
!13586 = !DILocation(line: 71, column: 2, scope: !13565)
!13587 = !DILocation(line: 71, column: 7, scope: !13565)
!13588 = !DILocation(line: 71, column: 12, scope: !13565)
!13589 = !DILocation(line: 72, column: 14, scope: !13565)
!13590 = !DILocation(line: 72, column: 2, scope: !13565)
!13591 = !DILocation(line: 72, column: 7, scope: !13565)
!13592 = !DILocation(line: 72, column: 12, scope: !13565)
!13593 = !DILocation(line: 73, column: 2, scope: !13565)
!13594 = !DILocation(line: 73, column: 2, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13565, file: !7203, line: 73, column: 2)
!13596 = !DILocation(line: 73, column: 2, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13595, file: !7203, line: 73, column: 2)
!13598 = !DILocation(line: 73, column: 2, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13595, file: !7203, line: 73, column: 2)
!13600 = !DILocation(line: 74, column: 1, scope: !13565)
!13601 = distinct !DISubprogram(name: "__list_add_valid", scope: !7203, file: !7203, line: 45, type: !13602, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13602 = !DISubroutineType(types: !13603)
!13603 = !{!793, !305, !305, !305}
!13604 = !DILocalVariable(name: "new", arg: 1, scope: !13601, file: !7203, line: 45, type: !305)
!13605 = !DILocation(line: 45, column: 55, scope: !13601)
!13606 = !DILocalVariable(name: "prev", arg: 2, scope: !13601, file: !7203, line: 46, type: !305)
!13607 = !DILocation(line: 46, column: 23, scope: !13601)
!13608 = !DILocalVariable(name: "next", arg: 3, scope: !13601, file: !7203, line: 47, type: !305)
!13609 = !DILocation(line: 47, column: 23, scope: !13601)
!13610 = !DILocation(line: 49, column: 2, scope: !13601)
!13611 = distinct !DISubprogram(name: "queue_work", scope: !196, file: !196, line: 504, type: !13612, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13612 = !DISubroutineType(types: !13613)
!13613 = !{!793, !2568, !2325}
!13614 = !DILocalVariable(name: "wq", arg: 1, scope: !13611, file: !196, line: 504, type: !2568)
!13615 = !DILocation(line: 504, column: 56, scope: !13611)
!13616 = !DILocalVariable(name: "work", arg: 2, scope: !13611, file: !196, line: 505, type: !2325)
!13617 = !DILocation(line: 505, column: 30, scope: !13611)
!13618 = !DILocation(line: 507, column: 41, scope: !13611)
!13619 = !DILocation(line: 507, column: 45, scope: !13611)
!13620 = !DILocation(line: 507, column: 9, scope: !13611)
!13621 = !DILocation(line: 507, column: 2, scope: !13611)
!13622 = distinct !DISubprogram(name: "scsi_internal_device_block", scope: !3, file: !3, line: 2669, type: !4920, scopeLine: 2670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13623 = !DILocalVariable(name: "sdev", arg: 1, scope: !13622, file: !3, line: 2669, type: !293)
!13624 = !DILocation(line: 2669, column: 59, scope: !13622)
!13625 = !DILocalVariable(name: "q", scope: !13622, file: !3, line: 2671, type: !2776)
!13626 = !DILocation(line: 2671, column: 24, scope: !13622)
!13627 = !DILocation(line: 2671, column: 28, scope: !13622)
!13628 = !DILocation(line: 2671, column: 34, scope: !13622)
!13629 = !DILocalVariable(name: "err", scope: !13622, file: !3, line: 2672, type: !286)
!13630 = !DILocation(line: 2672, column: 6, scope: !13622)
!13631 = !DILocation(line: 2674, column: 14, scope: !13622)
!13632 = !DILocation(line: 2674, column: 20, scope: !13622)
!13633 = !DILocation(line: 2674, column: 2, scope: !13622)
!13634 = !DILocation(line: 2675, column: 42, scope: !13622)
!13635 = !DILocation(line: 2675, column: 8, scope: !13622)
!13636 = !DILocation(line: 2675, column: 6, scope: !13622)
!13637 = !DILocation(line: 2676, column: 6, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13622, file: !3, line: 2676, column: 6)
!13639 = !DILocation(line: 2676, column: 10, scope: !13638)
!13640 = !DILocation(line: 2676, column: 6, scope: !13622)
!13641 = !DILocation(line: 2677, column: 24, scope: !13638)
!13642 = !DILocation(line: 2677, column: 3, scope: !13638)
!13643 = !DILocation(line: 2678, column: 16, scope: !13622)
!13644 = !DILocation(line: 2678, column: 22, scope: !13622)
!13645 = !DILocation(line: 2678, column: 2, scope: !13622)
!13646 = !DILocation(line: 2680, column: 9, scope: !13622)
!13647 = !DILocation(line: 2680, column: 2, scope: !13622)
!13648 = distinct !DISubprogram(name: "dev_name", scope: !47, file: !47, line: 609, type: !13649, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13649 = !DISubroutineType(types: !13650)
!13650 = !{!748, !2440}
!13651 = !DILocalVariable(name: "dev", arg: 1, scope: !13648, file: !47, line: 609, type: !2440)
!13652 = !DILocation(line: 609, column: 57, scope: !13648)
!13653 = !DILocation(line: 612, column: 6, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13648, file: !47, line: 612, column: 6)
!13655 = !DILocation(line: 612, column: 11, scope: !13654)
!13656 = !DILocation(line: 612, column: 6, scope: !13648)
!13657 = !DILocation(line: 613, column: 10, scope: !13654)
!13658 = !DILocation(line: 613, column: 15, scope: !13654)
!13659 = !DILocation(line: 613, column: 3, scope: !13654)
!13660 = !DILocation(line: 615, column: 23, scope: !13648)
!13661 = !DILocation(line: 615, column: 28, scope: !13648)
!13662 = !DILocation(line: 615, column: 9, scope: !13648)
!13663 = !DILocation(line: 615, column: 2, scope: !13648)
!13664 = !DILocation(line: 616, column: 1, scope: !13648)
!13665 = distinct !DISubprogram(name: "kobject_name", scope: !1783, file: !1783, line: 88, type: !13666, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13666 = !DISubroutineType(types: !13667)
!13667 = !{!748, !13668}
!13668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13669, size: 64)
!13669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1782)
!13670 = !DILocalVariable(name: "kobj", arg: 1, scope: !13665, file: !1783, line: 88, type: !13668)
!13671 = !DILocation(line: 88, column: 62, scope: !13665)
!13672 = !DILocation(line: 90, column: 9, scope: !13665)
!13673 = !DILocation(line: 90, column: 15, scope: !13665)
!13674 = !DILocation(line: 90, column: 2, scope: !13665)
!13675 = distinct !DISubprogram(name: "pagefault_disable", scope: !9940, file: !9940, line: 244, type: !4497, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13676 = !DILocation(line: 15, column: 9, scope: !9289, inlinedAt: !13677)
!13677 = distinct !DILocation(line: 229, column: 2, scope: !13678, inlinedAt: !13679)
!13678 = distinct !DISubprogram(name: "pagefault_disabled_inc", scope: !9940, file: !9940, line: 227, type: !4497, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13679 = distinct !DILocation(line: 246, column: 2, scope: !13675)
!13680 = !DILocation(line: 15, column: 9, scope: !9298, inlinedAt: !13677)
!13681 = !DILocation(line: 15, column: 9, scope: !9301, inlinedAt: !13677)
!13682 = !DILocation(line: 229, column: 11, scope: !13678, inlinedAt: !13679)
!13683 = !DILocation(line: 229, column: 29, scope: !13678, inlinedAt: !13679)
!13684 = !DILocation(line: 251, column: 2, scope: !13675)
!13685 = !{i32 -2143605062}
!13686 = !DILocation(line: 252, column: 1, scope: !13675)
!13687 = distinct !DISubprogram(name: "__rcu_read_lock", scope: !5903, file: !5903, line: 64, type: !4497, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13688 = !DILocation(line: 66, column: 2, scope: !13687)
!13689 = !{i32 -2145250581}
!13690 = !DILocation(line: 67, column: 1, scope: !13687)
!13691 = distinct !DISubprogram(name: "__rcu_read_unlock", scope: !5903, file: !5903, line: 69, type: !4497, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13692 = !DILocation(line: 71, column: 2, scope: !13691)
!13693 = !{i32 -2145250368}
!13694 = !DILocation(line: 72, column: 2, scope: !13691)
!13695 = !DILocation(line: 72, column: 2, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13691, file: !5903, line: 72, column: 2)
!13697 = !DILocation(line: 73, column: 1, scope: !13691)
!13698 = distinct !DISubprogram(name: "__fswab16", scope: !10309, file: !10309, line: 48, type: !13699, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !324)
!13699 = !DISubroutineType(types: !13700)
!13700 = !{!1024, !1024}
!13701 = !DILocalVariable(name: "val", arg: 1, scope: !13698, file: !10309, line: 48, type: !1024)
!13702 = !DILocation(line: 48, column: 57, scope: !13698)
!13703 = !DILocation(line: 53, column: 9, scope: !13698)
!13704 = !DILocation(line: 53, column: 2, scope: !13698)
