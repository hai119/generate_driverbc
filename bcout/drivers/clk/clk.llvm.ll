; ModuleID = '../bcout/drivers/clk/clk.llvm.bc'
source_filename = "drivers/clk/clk.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall7s.init\22, \22a\22\09"
module asm "__initcall_clk_disable_unused7s:\09\09\09"
module asm ".long\09clk_disable_unused - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.hlist_head = type { %struct.hlist_node* }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.obs_kernel_param = type { i8*, i32 (i8*)*, i32 }
%struct.clk_ops = type { i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64, i64*)*, i32 (%struct.clk_hw*, %struct.clk_rate_request*)*, i32 (%struct.clk_hw*, i8)*, i8 (%struct.clk_hw*)*, i32 (%struct.clk_hw*, i64, i64)*, i32 (%struct.clk_hw*, i64, i64, i8)*, i64 (%struct.clk_hw*, i64)*, i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*, i32)*, i32 (%struct.clk_hw*, %struct.clk_duty*)*, i32 (%struct.clk_hw*, %struct.clk_duty*)*, i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, void (%struct.clk_hw*, %struct.dentry*)* }
%struct.clk_hw = type { %struct.clk_core*, %struct.clk*, %struct.clk_init_data* }
%struct.clk_core = type { i8*, %struct.clk_ops*, %struct.clk_hw*, %struct.module*, %struct.device*, %struct.device_node*, %struct.clk_core*, %struct.clk_parent_map*, i8, i8, i64, i64, i64, %struct.clk_core*, %struct.clk_core*, i64, i8, i8, i32, i32, i32, i64, i64, i64, i32, %struct.clk_duty, %struct.hlist_head, %struct.hlist_node, %struct.hlist_head, i32, %struct.kref }
%struct.module = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.37, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.37 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type opaque
%struct.seq_file = type opaque
%struct.vm_operations_struct = type opaque
%struct.poll_table_struct = type opaque
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.36, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.17, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.0 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type opaque
%struct.key = type opaque
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type opaque
%struct.sighand_struct = type opaque
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.9 }
%struct.anon.9 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.16, i32, [12 x i8] }
%union.anon.16 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.17 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.page = type { i64, %union.anon.18, %union.anon.31, %struct.atomic_t, [8 x i8] }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type opaque
%union.anon.31 = type { %struct.atomic_t }
%struct.vm_struct = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.32, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.35 }
%union.anon.32 = type { %struct.anon.33 }
%struct.anon.33 = type { i64, i64 }
%union.anon.35 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.pgprot = type { i64 }
%struct.anon.36 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.atomic64_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.lock_class_key = type {}
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.clk_parent_map = type { %struct.clk_hw*, %struct.clk_core*, i8*, i8*, i32 }
%struct.clk_duty = type { i32, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.clk = type { %struct.clk_core*, %struct.device*, i8*, i8*, i64, i64, i32, %struct.hlist_node }
%struct.clk_init_data = type { i8*, %struct.clk_ops*, i8**, %struct.clk_parent_data*, %struct.clk_hw**, i8, i64 }
%struct.clk_parent_data = type { %struct.clk_hw*, i8*, i8*, i32 }
%struct.clk_rate_request = type { i64, i64, i64, i64, %struct.clk_hw* }
%struct.dentry = type opaque
%struct.kmem_cache = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.pte_t = type { i64 }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.clk_notifier = type { %struct.clk*, %struct.srcu_notifier_head, %struct.list_head }
%struct.srcu_notifier_head = type { %struct.mutex, %struct.srcu_struct, %struct.notifier_block* }
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.of_phandle_args = type { %struct.device_node*, i32, [16 x i32] }
%struct.clk_onecell_data = type { %struct.clk**, i32 }
%struct.clk_hw_onecell_data = type { i32, [0 x %struct.clk_hw*] }
%struct.of_clk_provider = type { %struct.list_head, %struct.device_node*, %struct.clk* (%struct.of_phandle_args*, i8*)*, %struct.clk_hw* (%struct.of_phandle_args*, i8*)*, i8* }
%struct.clock_provider = type { void (%struct.device_node*)*, %struct.device_node*, %struct.list_head }
%struct.clk_notifier_data = type { %struct.clk*, i64, i64 }

@.str = private unnamed_addr constant [18 x i8] c"drivers/clk/clk.c\00", align 1
@clk_root_list = internal global %struct.hlist_head zeroinitializer, align 8, !dbg !0
@clk_orphan_list = internal global %struct.hlist_head zeroinitializer, align 8, !dbg !2328
@__setup_str_clk_ignore_unused_setup = internal constant [18 x i8] c"clk_ignore_unused\00", section ".init.rodata", align 1, !dbg !2330
@__setup_clk_ignore_unused_setup = internal global %struct.obs_kernel_param { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__setup_str_clk_ignore_unused_setup, i32 0, i32 0), i32 (i8*)* @clk_ignore_unused_setup, i32 0 }, section ".init.setup", align 8, !dbg !2305
@__UNIQUE_ID___addressable_clk_disable_unused217 = internal global i8* bitcast (i32 ()* @clk_disable_unused to i8*), section ".discard.addressable", align 8, !dbg !2316
@.str.1 = private unnamed_addr constant [54 x i8] c"\013%s: clk %s dev %s con %s: invalid range [%lu, %lu]\0A\00", align 1
@__func__.clk_set_rate_range = private unnamed_addr constant [19 x i8] c"clk_set_rate_range\00", align 1
@clk_nodrv_ops = internal constant %struct.clk_ops { i32 (%struct.clk_hw*)* @clk_nodrv_prepare_enable, void (%struct.clk_hw*)* @clk_nodrv_disable_unprepare, i32 (%struct.clk_hw*)* null, void (%struct.clk_hw*)* null, i32 (%struct.clk_hw*)* @clk_nodrv_prepare_enable, void (%struct.clk_hw*)* @clk_nodrv_disable_unprepare, i32 (%struct.clk_hw*)* null, void (%struct.clk_hw*)* null, i32 (%struct.clk_hw*)* null, void (%struct.clk_hw*)* null, i64 (%struct.clk_hw*, i64)* null, i64 (%struct.clk_hw*, i64, i64*)* null, i32 (%struct.clk_hw*, %struct.clk_rate_request*)* null, i32 (%struct.clk_hw*, i8)* @clk_nodrv_set_parent, i8 (%struct.clk_hw*)* null, i32 (%struct.clk_hw*, i64, i64)* @clk_nodrv_set_rate, i32 (%struct.clk_hw*, i64, i64, i8)* null, i64 (%struct.clk_hw*, i64)* null, i32 (%struct.clk_hw*)* null, i32 (%struct.clk_hw*, i32)* null, i32 (%struct.clk_hw*, %struct.clk_duty*)* null, i32 (%struct.clk_hw*, %struct.clk_duty*)* null, i32 (%struct.clk_hw*)* null, void (%struct.clk_hw*)* null, void (%struct.clk_hw*, %struct.dentry*)* null }, align 8, !dbg !2337
@.str.2 = private unnamed_addr constant [30 x i8] c"\013%s: unregistered clock: %s\0A\00", align 1
@__func__.clk_unregister = private unnamed_addr constant [15 x i8] c"clk_unregister\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"\014%s: unregistering prepared clock: %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"\014%s: unregistering protected clock: %s\0A\00", align 1
@clk_notifier_list = internal global %struct.list_head { %struct.list_head* @clk_notifier_list, %struct.list_head* @clk_notifier_list }, align 8, !dbg !2347
@.str.5 = private unnamed_addr constant [30 x i8] c"\013%s: invalid clock index %u\0A\00", align 1
@__func__.of_clk_src_onecell_get = private unnamed_addr constant [23 x i8] c"of_clk_src_onecell_get\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"\013%s: invalid index %u\0A\00", align 1
@__func__.of_clk_hw_onecell_get = private unnamed_addr constant [22 x i8] c"of_clk_hw_onecell_get\00", align 1
@of_clk_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @of_clk_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @of_clk_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !2349
@of_clk_providers = internal global %struct.list_head { %struct.list_head* @of_clk_providers, %struct.list_head* @of_clk_providers }, align 8, !dbg !2351
@__func__.of_clk_get_from_provider = private unnamed_addr constant [25 x i8] c"of_clk_get_from_provider\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"clocks\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"#clock-cells\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"clock-indices\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"clock-output-names\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"clock-critical\00", align 1
@__clk_of_table = external dso_local global %struct.of_device_id, align 8
@__clk_of_table_sentinel = internal constant %struct.of_device_id zeroinitializer, section "__clk_of_table_end", align 8, !dbg !2318
@prepare_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @prepare_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @prepare_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !2320
@prepare_owner = internal global %struct.task_struct* null, align 8, !dbg !2322
@prepare_refcnt = internal global i32 0, align 4, !dbg !2324
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.12 = private unnamed_addr constant [24 x i8] c"%s already unprotected\0A\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"%s already unprepared\0A\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"Unpreparing critical %s\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"Unpreparing enabled %s\0A\00", align 1
@enable_lock = internal global %struct.spinlock undef, align 1, !dbg !2326
@.str.16 = private unnamed_addr constant [21 x i8] c"%s already disabled\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"Disabling critical %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"Enabling unprepared %s\0A\00", align 1
@clk_ignore_unused = internal global i8 0, section ".init.data", align 1, !dbg !2335
@.str.19 = private unnamed_addr constant [36 x i8] c"\014clk: Not disabling unused clocks\0A\00", align 1
@.str.20 = private unnamed_addr constant [40 x i8] c"%s: invalid NULL in %s's .parent_names\0A\00", align 1
@__func__.clk_core_populate_parent_map = private unnamed_addr constant [29 x i8] c"clk_core_populate_parent_map\00", align 1
@.str.21 = private unnamed_addr constant [41 x i8] c"Must specify parents if num_parents > 0\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.22 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.23 = private unnamed_addr constant [84 x i8] c"\013%s: %s must implement .round_rate or .determine_rate in addition to .recalc_rate\0A\00", align 1
@__func__.__clk_core_init = private unnamed_addr constant [16 x i8] c"__clk_core_init\00", align 1
@.str.24 = private unnamed_addr constant [51 x i8] c"\013%s: %s must implement .get_parent & .set_parent\0A\00", align 1
@.str.25 = private unnamed_addr constant [61 x i8] c"\013%s: %s must implement .get_parent as it has multi parents\0A\00", align 1
@.str.26 = private unnamed_addr constant [49 x i8] c"\013%s: %s must implement .set_parent & .set_rate\0A\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"\014%s: Failed to get phase for clk '%s'\0A\00", align 1
@.str.28 = private unnamed_addr constant [43 x i8] c"\014%s: critical clk '%s' failed to prepare\0A\00", align 1
@.str.29 = private unnamed_addr constant [42 x i8] c"\014%s: critical clk '%s' failed to enable\0A\00", align 1
@enable_owner = internal global %struct.task_struct* null, align 8, !dbg !2339
@enable_refcnt = internal global i32 0, align 4, !dbg !2341
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@all_lists = internal global [3 x %struct.hlist_head*] [%struct.hlist_head* @clk_root_list, %struct.hlist_head* @clk_orphan_list, %struct.hlist_head* null], align 16, !dbg !2343
@.str.30 = private unnamed_addr constant [12 x i8] c"clock-names\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"clock-ranges\00", align 1
@llvm.used = appending global [3 x i8*] [i8* bitcast (%struct.obs_kernel_param* @__setup_clk_ignore_unused_setup to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_clk_disable_unused217 to i8*), i8* getelementptr inbounds (%struct.of_device_id, %struct.of_device_id* @__clk_of_table_sentinel, i32 0, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @__clk_get_name(%struct.clk* %clk) #0 !dbg !2359 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !2364, metadata !DIExpression()), !dbg !2365
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !2366
  %tobool = icmp ne %struct.clk* %0, null, !dbg !2366
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2367

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2367

cond.false:                                       ; preds = %entry
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !2368
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !2369
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2369
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 0, !dbg !2370
  %3 = load i8*, i8** %name, align 8, !dbg !2370
  br label %cond.end, !dbg !2367

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %3, %cond.false ], !dbg !2367
  ret i8* %cond, !dbg !2371
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @clk_hw_get_name(%struct.clk_hw* %hw) #0 !dbg !2372 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2375, metadata !DIExpression()), !dbg !2376
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2377
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !2378
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2378
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 0, !dbg !2379
  %2 = load i8*, i8** %name, align 8, !dbg !2379
  ret i8* %2, !dbg !2380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk_hw* @__clk_get_hw(%struct.clk* %clk) #0 !dbg !2381 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !2384, metadata !DIExpression()), !dbg !2385
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !2386
  %tobool = icmp ne %struct.clk* %0, null, !dbg !2386
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2387

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2387

cond.false:                                       ; preds = %entry
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !2388
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !2389
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2389
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 2, !dbg !2390
  %3 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !2390
  br label %cond.end, !dbg !2387

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.clk_hw* [ null, %cond.true ], [ %3, %cond.false ], !dbg !2387
  ret %struct.clk_hw* %cond, !dbg !2391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_hw_get_num_parents(%struct.clk_hw* %hw) #0 !dbg !2392 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2395, metadata !DIExpression()), !dbg !2396
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2397
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !2398
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2398
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 8, !dbg !2399
  %2 = load i8, i8* %num_parents, align 8, !dbg !2399
  %conv = zext i8 %2 to i32, !dbg !2397
  ret i32 %conv, !dbg !2400
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk_hw* @clk_hw_get_parent(%struct.clk_hw* %hw) #0 !dbg !2401 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2404, metadata !DIExpression()), !dbg !2405
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2406
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !2407
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2407
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 6, !dbg !2408
  %2 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2408
  %tobool = icmp ne %struct.clk_core* %2, null, !dbg !2406
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2406

cond.true:                                        ; preds = %entry
  %3 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2409
  %core1 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %3, i32 0, i32 0, !dbg !2410
  %4 = load %struct.clk_core*, %struct.clk_core** %core1, align 8, !dbg !2410
  %parent2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 6, !dbg !2411
  %5 = load %struct.clk_core*, %struct.clk_core** %parent2, align 8, !dbg !2411
  %hw3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 2, !dbg !2412
  %6 = load %struct.clk_hw*, %struct.clk_hw** %hw3, align 8, !dbg !2412
  br label %cond.end, !dbg !2406

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2406

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.clk_hw* [ %6, %cond.true ], [ null, %cond.false ], !dbg !2406
  ret %struct.clk_hw* %cond, !dbg !2413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk_hw* @clk_hw_get_parent_by_index(%struct.clk_hw* %hw, i32 %index) #0 !dbg !2414 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %index.addr = alloca i32, align 4
  %parent = alloca %struct.clk_core*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2417, metadata !DIExpression()), !dbg !2418
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2419, metadata !DIExpression()), !dbg !2420
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent, metadata !2421, metadata !DIExpression()), !dbg !2422
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2423
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !2424
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2424
  %2 = load i32, i32* %index.addr, align 4, !dbg !2425
  %conv = trunc i32 %2 to i8, !dbg !2425
  %call = call %struct.clk_core* @clk_core_get_parent_by_index(%struct.clk_core* %1, i8 zeroext %conv) #11, !dbg !2426
  store %struct.clk_core* %call, %struct.clk_core** %parent, align 8, !dbg !2427
  %3 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2428
  %tobool = icmp ne %struct.clk_core* %3, null, !dbg !2428
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2429

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2429

cond.false:                                       ; preds = %entry
  %4 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2430
  %hw1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 2, !dbg !2431
  %5 = load %struct.clk_hw*, %struct.clk_hw** %hw1, align 8, !dbg !2431
  br label %cond.end, !dbg !2429

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.clk_hw* [ null, %cond.true ], [ %5, %cond.false ], !dbg !2429
  ret %struct.clk_hw* %cond, !dbg !2432
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk_core* @clk_core_get_parent_by_index(%struct.clk_core* %core, i8 zeroext %index) #0 !dbg !2433 {
entry:
  %retval = alloca %struct.clk_core*, align 8
  %core.addr = alloca %struct.clk_core*, align 8
  %index.addr = alloca i8, align 1
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !2436, metadata !DIExpression()), !dbg !2437
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !2438, metadata !DIExpression()), !dbg !2439
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2440
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !2440
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2442

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %index.addr, align 1, !dbg !2443
  %conv = zext i8 %1 to i32, !dbg !2443
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2444
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 8, !dbg !2445
  %3 = load i8, i8* %num_parents, align 8, !dbg !2445
  %conv1 = zext i8 %3 to i32, !dbg !2444
  %cmp = icmp sge i32 %conv, %conv1, !dbg !2446
  br i1 %cmp, label %if.then, label %lor.lhs.false3, !dbg !2447

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2448
  %parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 7, !dbg !2449
  %5 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !2449
  %tobool4 = icmp ne %struct.clk_parent_map* %5, null, !dbg !2448
  br i1 %tobool4, label %if.end, label %if.then, !dbg !2450

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !2451
  br label %return, !dbg !2451

if.end:                                           ; preds = %lor.lhs.false3
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2452
  %parents5 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 7, !dbg !2454
  %7 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents5, align 8, !dbg !2454
  %8 = load i8, i8* %index.addr, align 1, !dbg !2455
  %idxprom = zext i8 %8 to i64, !dbg !2452
  %arrayidx = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %7, i64 %idxprom, !dbg !2452
  %core6 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx, i32 0, i32 1, !dbg !2456
  %9 = load %struct.clk_core*, %struct.clk_core** %core6, align 8, !dbg !2456
  %tobool7 = icmp ne %struct.clk_core* %9, null, !dbg !2452
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !2457

if.then8:                                         ; preds = %if.end
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2458
  %11 = load i8, i8* %index.addr, align 1, !dbg !2459
  call void @clk_core_fill_parent_index(%struct.clk_core* %10, i8 zeroext %11) #11, !dbg !2460
  br label %if.end9, !dbg !2460

if.end9:                                          ; preds = %if.then8, %if.end
  %12 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2461
  %parents10 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %12, i32 0, i32 7, !dbg !2462
  %13 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents10, align 8, !dbg !2462
  %14 = load i8, i8* %index.addr, align 1, !dbg !2463
  %idxprom11 = zext i8 %14 to i64, !dbg !2461
  %arrayidx12 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %13, i64 %idxprom11, !dbg !2461
  %core13 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx12, i32 0, i32 1, !dbg !2464
  %15 = load %struct.clk_core*, %struct.clk_core** %core13, align 8, !dbg !2464
  store %struct.clk_core* %15, %struct.clk_core** %retval, align 8, !dbg !2465
  br label %return, !dbg !2465

return:                                           ; preds = %if.end9, %if.then
  %16 = load %struct.clk_core*, %struct.clk_core** %retval, align 8, !dbg !2466
  ret %struct.clk_core* %16, !dbg !2466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__clk_get_enable_count(%struct.clk* %clk) #0 !dbg !2467 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !2470, metadata !DIExpression()), !dbg !2471
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !2472
  %tobool = icmp ne %struct.clk* %0, null, !dbg !2472
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2473

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2473

cond.false:                                       ; preds = %entry
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !2474
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !2475
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2475
  %enable_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 18, !dbg !2476
  %3 = load i32, i32* %enable_count, align 4, !dbg !2476
  br label %cond.end, !dbg !2473

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %3, %cond.false ], !dbg !2473
  ret i32 %cond, !dbg !2477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @clk_hw_get_rate(%struct.clk_hw* %hw) #0 !dbg !2478 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2481, metadata !DIExpression()), !dbg !2482
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2483
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !2484
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2484
  %call = call i64 @clk_core_get_rate_nolock(%struct.clk_core* %1) #11, !dbg !2485
  ret i64 %call, !dbg !2486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @clk_core_get_rate_nolock(%struct.clk_core* %core) #0 !dbg !2487 {
entry:
  %retval = alloca i64, align 8
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !2490, metadata !DIExpression()), !dbg !2491
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2492
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !2492
  br i1 %tobool, label %if.end, label %if.then, !dbg !2494

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !2495
  br label %return, !dbg !2495

if.end:                                           ; preds = %entry
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2496
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 8, !dbg !2498
  %2 = load i8, i8* %num_parents, align 8, !dbg !2498
  %tobool1 = icmp ne i8 %2, 0, !dbg !2496
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !2499

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2500
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 6, !dbg !2501
  %4 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2501
  %tobool2 = icmp ne %struct.clk_core* %4, null, !dbg !2500
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !2502

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2503
  %rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 10, !dbg !2504
  %6 = load i64, i64* %rate, align 8, !dbg !2504
  store i64 %6, i64* %retval, align 8, !dbg !2505
  br label %return, !dbg !2505

if.end4:                                          ; preds = %lor.lhs.false
  store i64 0, i64* %retval, align 8, !dbg !2506
  br label %return, !dbg !2506

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %7 = load i64, i64* %retval, align 8, !dbg !2507
  ret i64 %7, !dbg !2507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @clk_hw_get_flags(%struct.clk_hw* %hw) #0 !dbg !2508 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2509, metadata !DIExpression()), !dbg !2510
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2511
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !2512
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2512
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 15, !dbg !2513
  %2 = load i64, i64* %flags, align 8, !dbg !2513
  ret i64 %2, !dbg !2514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @clk_hw_is_prepared(%struct.clk_hw* %hw) #0 !dbg !2515 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2518, metadata !DIExpression()), !dbg !2519
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2520
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !2521
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2521
  %call = call zeroext i1 @clk_core_is_prepared(%struct.clk_core* %1) #11, !dbg !2522
  ret i1 %call, !dbg !2523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @clk_core_is_prepared(%struct.clk_core* %core) #0 !dbg !2524 {
entry:
  %retval = alloca i1, align 1
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i8, align 1
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !2527, metadata !DIExpression()), !dbg !2528
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !2529, metadata !DIExpression()), !dbg !2530
  store i8 0, i8* %ret, align 1, !dbg !2530
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2531
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 1, !dbg !2533
  %1 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !2533
  %is_prepared = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %1, i32 0, i32 2, !dbg !2534
  %2 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %is_prepared, align 8, !dbg !2534
  %tobool = icmp ne i32 (%struct.clk_hw*)* %2, null, !dbg !2531
  br i1 %tobool, label %if.end, label %if.then, !dbg !2535

if.then:                                          ; preds = %entry
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2536
  %prepare_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 19, !dbg !2537
  %4 = load i32, i32* %prepare_count, align 8, !dbg !2537
  %tobool1 = icmp ne i32 %4, 0, !dbg !2536
  store i1 %tobool1, i1* %retval, align 1, !dbg !2538
  br label %return, !dbg !2538

if.end:                                           ; preds = %entry
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2539
  %call = call i32 @clk_pm_runtime_get(%struct.clk_core* %5) #11, !dbg !2541
  %tobool2 = icmp ne i32 %call, 0, !dbg !2541
  br i1 %tobool2, label %if.end8, label %if.then3, !dbg !2542

if.then3:                                         ; preds = %if.end
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2543
  %ops4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 1, !dbg !2545
  %7 = load %struct.clk_ops*, %struct.clk_ops** %ops4, align 8, !dbg !2545
  %is_prepared5 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %7, i32 0, i32 2, !dbg !2546
  %8 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %is_prepared5, align 8, !dbg !2546
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2547
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 2, !dbg !2548
  %10 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !2548
  %call6 = call i32 %8(%struct.clk_hw* %10) #11, !dbg !2543
  %tobool7 = icmp ne i32 %call6, 0, !dbg !2543
  %frombool = zext i1 %tobool7 to i8, !dbg !2549
  store i8 %frombool, i8* %ret, align 1, !dbg !2549
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2550
  call void @clk_pm_runtime_put(%struct.clk_core* %11) #11, !dbg !2551
  br label %if.end8, !dbg !2552

if.end8:                                          ; preds = %if.then3, %if.end
  %12 = load i8, i8* %ret, align 1, !dbg !2553
  %tobool9 = trunc i8 %12 to i1, !dbg !2553
  store i1 %tobool9, i1* %retval, align 1, !dbg !2554
  br label %return, !dbg !2554

return:                                           ; preds = %if.end8, %if.then
  %13 = load i1, i1* %retval, align 1, !dbg !2555
  ret i1 %13, !dbg !2555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @clk_hw_rate_is_protected(%struct.clk_hw* %hw) #0 !dbg !2556 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2557, metadata !DIExpression()), !dbg !2558
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2559
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !2560
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2560
  %call = call zeroext i1 @clk_core_rate_is_protected(%struct.clk_core* %1) #11, !dbg !2561
  ret i1 %call, !dbg !2562
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @clk_core_rate_is_protected(%struct.clk_core* %core) #0 !dbg !2563 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !2564, metadata !DIExpression()), !dbg !2565
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2566
  %protect_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 20, !dbg !2567
  %1 = load i32, i32* %protect_count, align 4, !dbg !2567
  %tobool = icmp ne i32 %1, 0, !dbg !2566
  ret i1 %tobool, !dbg !2568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @clk_hw_is_enabled(%struct.clk_hw* %hw) #0 !dbg !2569 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2570, metadata !DIExpression()), !dbg !2571
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2572
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !2573
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2573
  %call = call zeroext i1 @clk_core_is_enabled(%struct.clk_core* %1) #11, !dbg !2574
  ret i1 %call, !dbg !2575
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @clk_core_is_enabled(%struct.clk_core* %core) #0 !dbg !2576 {
entry:
  %retval = alloca i1, align 1
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i8, align 1
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !2577, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !2579, metadata !DIExpression()), !dbg !2580
  store i8 0, i8* %ret, align 1, !dbg !2580
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2581
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 1, !dbg !2583
  %1 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !2583
  %is_enabled = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %1, i32 0, i32 6, !dbg !2584
  %2 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %is_enabled, align 8, !dbg !2584
  %tobool = icmp ne i32 (%struct.clk_hw*)* %2, null, !dbg !2581
  br i1 %tobool, label %if.end, label %if.then, !dbg !2585

if.then:                                          ; preds = %entry
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2586
  %enable_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 18, !dbg !2587
  %4 = load i32, i32* %enable_count, align 4, !dbg !2587
  %tobool1 = icmp ne i32 %4, 0, !dbg !2586
  store i1 %tobool1, i1* %retval, align 1, !dbg !2588
  br label %return, !dbg !2588

if.end:                                           ; preds = %entry
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2589
  %rpm_enabled = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 17, !dbg !2591
  %6 = load i8, i8* %rpm_enabled, align 1, !dbg !2591
  %tobool2 = trunc i8 %6 to i1, !dbg !2591
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !2592

if.then3:                                         ; preds = %if.end
  %7 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2593
  %dev = getelementptr inbounds %struct.clk_core, %struct.clk_core* %7, i32 0, i32 4, !dbg !2595
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !2595
  call void @pm_runtime_get_noresume(%struct.device* %8) #11, !dbg !2596
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2597
  %dev4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 4, !dbg !2599
  %10 = load %struct.device*, %struct.device** %dev4, align 8, !dbg !2599
  %call = call zeroext i1 @pm_runtime_active(%struct.device* %10) #11, !dbg !2600
  br i1 %call, label %if.end6, label %if.then5, !dbg !2601

if.then5:                                         ; preds = %if.then3
  store i8 0, i8* %ret, align 1, !dbg !2602
  br label %done, !dbg !2604

if.end6:                                          ; preds = %if.then3
  br label %if.end7, !dbg !2605

if.end7:                                          ; preds = %if.end6, %if.end
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2606
  %ops8 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 1, !dbg !2607
  %12 = load %struct.clk_ops*, %struct.clk_ops** %ops8, align 8, !dbg !2607
  %is_enabled9 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %12, i32 0, i32 6, !dbg !2608
  %13 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %is_enabled9, align 8, !dbg !2608
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2609
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 2, !dbg !2610
  %15 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !2610
  %call10 = call i32 %13(%struct.clk_hw* %15) #11, !dbg !2606
  %tobool11 = icmp ne i32 %call10, 0, !dbg !2606
  %frombool = zext i1 %tobool11 to i8, !dbg !2611
  store i8 %frombool, i8* %ret, align 1, !dbg !2611
  br label %done, !dbg !2612

done:                                             ; preds = %if.end7, %if.then5
  call void @llvm.dbg.label(metadata !2613), !dbg !2614
  %16 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2615
  %rpm_enabled12 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %16, i32 0, i32 17, !dbg !2617
  %17 = load i8, i8* %rpm_enabled12, align 1, !dbg !2617
  %tobool13 = trunc i8 %17 to i1, !dbg !2617
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !2618

if.then14:                                        ; preds = %done
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !2619
  %dev15 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %18, i32 0, i32 4, !dbg !2620
  %19 = load %struct.device*, %struct.device** %dev15, align 8, !dbg !2620
  %call16 = call i32 @pm_runtime_put(%struct.device* %19) #11, !dbg !2621
  br label %if.end17, !dbg !2621

if.end17:                                         ; preds = %if.then14, %done
  %20 = load i8, i8* %ret, align 1, !dbg !2622
  %tobool18 = trunc i8 %20 to i1, !dbg !2622
  store i1 %tobool18, i1* %retval, align 1, !dbg !2623
  br label %return, !dbg !2623

return:                                           ; preds = %if.end17, %if.then
  %21 = load i1, i1* %retval, align 1, !dbg !2624
  ret i1 %21, !dbg !2624
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @__clk_is_enabled(%struct.clk* %clk) #0 !dbg !2625 {
entry:
  %retval = alloca i1, align 1
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !2628, metadata !DIExpression()), !dbg !2629
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !2630
  %tobool = icmp ne %struct.clk* %0, null, !dbg !2630
  br i1 %tobool, label %if.end, label %if.then, !dbg !2632

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !2633
  br label %return, !dbg !2633

if.end:                                           ; preds = %entry
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !2634
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !2635
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2635
  %call = call zeroext i1 @clk_core_is_enabled(%struct.clk_core* %2) #11, !dbg !2636
  store i1 %call, i1* %retval, align 1, !dbg !2637
  br label %return, !dbg !2637

return:                                           ; preds = %if.end, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !2638
  ret i1 %3, !dbg !2638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_mux_determine_rate_flags(%struct.clk_hw* %hw, %struct.clk_rate_request* %req, i64 %flags) #0 !dbg !2639 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.clk_hw*, align 8
  %req.addr = alloca %struct.clk_rate_request*, align 8
  %flags.addr = alloca i64, align 8
  %core = alloca %struct.clk_core*, align 8
  %parent = alloca %struct.clk_core*, align 8
  %best_parent = alloca %struct.clk_core*, align 8
  %i = alloca i32, align 4
  %num_parents = alloca i32, align 4
  %ret = alloca i32, align 4
  %best = alloca i64, align 8
  %parent_req = alloca %struct.clk_rate_request, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2642, metadata !DIExpression()), !dbg !2643
  store %struct.clk_rate_request* %req, %struct.clk_rate_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request** %req.addr, metadata !2644, metadata !DIExpression()), !dbg !2645
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !2646, metadata !DIExpression()), !dbg !2647
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core, metadata !2648, metadata !DIExpression()), !dbg !2649
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2650
  %core1 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !2651
  %1 = load %struct.clk_core*, %struct.clk_core** %core1, align 8, !dbg !2651
  store %struct.clk_core* %1, %struct.clk_core** %core, align 8, !dbg !2649
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent, metadata !2652, metadata !DIExpression()), !dbg !2653
  call void @llvm.dbg.declare(metadata %struct.clk_core** %best_parent, metadata !2654, metadata !DIExpression()), !dbg !2655
  store %struct.clk_core* null, %struct.clk_core** %best_parent, align 8, !dbg !2655
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2656, metadata !DIExpression()), !dbg !2657
  call void @llvm.dbg.declare(metadata i32* %num_parents, metadata !2658, metadata !DIExpression()), !dbg !2659
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2660, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.declare(metadata i64* %best, metadata !2662, metadata !DIExpression()), !dbg !2663
  store i64 0, i64* %best, align 8, !dbg !2663
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request* %parent_req, metadata !2664, metadata !DIExpression()), !dbg !2665
  %2 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !2666
  %3 = bitcast %struct.clk_rate_request* %parent_req to i8*, !dbg !2667
  %4 = bitcast %struct.clk_rate_request* %2 to i8*, !dbg !2667
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false), !dbg !2667
  %5 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2668
  %flags2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 15, !dbg !2670
  %6 = load i64, i64* %flags2, align 8, !dbg !2670
  %and = and i64 %6, 128, !dbg !2671
  %tobool = icmp ne i64 %and, 0, !dbg !2671
  br i1 %tobool, label %if.then, label %if.end19, !dbg !2672

if.then:                                          ; preds = %entry
  %7 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2673
  %parent3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %7, i32 0, i32 6, !dbg !2675
  %8 = load %struct.clk_core*, %struct.clk_core** %parent3, align 8, !dbg !2675
  store %struct.clk_core* %8, %struct.clk_core** %parent, align 8, !dbg !2676
  %9 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2677
  %flags4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 15, !dbg !2679
  %10 = load i64, i64* %flags4, align 8, !dbg !2679
  %and5 = and i64 %10, 4, !dbg !2680
  %tobool6 = icmp ne i64 %and5, 0, !dbg !2680
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !2681

if.then7:                                         ; preds = %if.then
  %11 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2682
  %tobool8 = icmp ne %struct.clk_core* %11, null, !dbg !2682
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !2682

cond.true:                                        ; preds = %if.then7
  %12 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2684
  %hw9 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %12, i32 0, i32 2, !dbg !2685
  %13 = load %struct.clk_hw*, %struct.clk_hw** %hw9, align 8, !dbg !2685
  br label %cond.end, !dbg !2682

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !2682

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.clk_hw* [ %13, %cond.true ], [ null, %cond.false ], !dbg !2682
  %call = call i32 @__clk_determine_rate(%struct.clk_hw* %cond, %struct.clk_rate_request* %parent_req) #11, !dbg !2686
  store i32 %call, i32* %ret, align 4, !dbg !2687
  %14 = load i32, i32* %ret, align 4, !dbg !2688
  %tobool10 = icmp ne i32 %14, 0, !dbg !2688
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !2690

if.then11:                                        ; preds = %cond.end
  %15 = load i32, i32* %ret, align 4, !dbg !2691
  store i32 %15, i32* %retval, align 4, !dbg !2692
  br label %return, !dbg !2692

if.end:                                           ; preds = %cond.end
  %rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %parent_req, i32 0, i32 0, !dbg !2693
  %16 = load i64, i64* %rate, align 8, !dbg !2693
  store i64 %16, i64* %best, align 8, !dbg !2694
  br label %if.end18, !dbg !2695

if.else:                                          ; preds = %if.then
  %17 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2696
  %tobool12 = icmp ne %struct.clk_core* %17, null, !dbg !2696
  br i1 %tobool12, label %if.then13, label %if.else15, !dbg !2698

if.then13:                                        ; preds = %if.else
  %18 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2699
  %call14 = call i64 @clk_core_get_rate_nolock(%struct.clk_core* %18) #11, !dbg !2701
  store i64 %call14, i64* %best, align 8, !dbg !2702
  br label %if.end17, !dbg !2703

if.else15:                                        ; preds = %if.else
  %19 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2704
  %call16 = call i64 @clk_core_get_rate_nolock(%struct.clk_core* %19) #11, !dbg !2706
  store i64 %call16, i64* %best, align 8, !dbg !2707
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.then13
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end
  br label %out, !dbg !2708

if.end19:                                         ; preds = %entry
  %20 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2709
  %num_parents20 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %20, i32 0, i32 8, !dbg !2710
  %21 = load i8, i8* %num_parents20, align 8, !dbg !2710
  %conv = zext i8 %21 to i32, !dbg !2709
  store i32 %conv, i32* %num_parents, align 4, !dbg !2711
  store i32 0, i32* %i, align 4, !dbg !2712
  br label %for.cond, !dbg !2714

for.cond:                                         ; preds = %for.inc, %if.end19
  %22 = load i32, i32* %i, align 4, !dbg !2715
  %23 = load i32, i32* %num_parents, align 4, !dbg !2717
  %cmp = icmp slt i32 %22, %23, !dbg !2718
  br i1 %cmp, label %for.body, label %for.end, !dbg !2719

for.body:                                         ; preds = %for.cond
  %24 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2720
  %25 = load i32, i32* %i, align 4, !dbg !2722
  %conv22 = trunc i32 %25 to i8, !dbg !2722
  %call23 = call %struct.clk_core* @clk_core_get_parent_by_index(%struct.clk_core* %24, i8 zeroext %conv22) #11, !dbg !2723
  store %struct.clk_core* %call23, %struct.clk_core** %parent, align 8, !dbg !2724
  %26 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2725
  %tobool24 = icmp ne %struct.clk_core* %26, null, !dbg !2725
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !2727

if.then25:                                        ; preds = %for.body
  br label %for.inc, !dbg !2728

if.end26:                                         ; preds = %for.body
  %27 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2729
  %flags27 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %27, i32 0, i32 15, !dbg !2731
  %28 = load i64, i64* %flags27, align 8, !dbg !2731
  %and28 = and i64 %28, 4, !dbg !2732
  %tobool29 = icmp ne i64 %and28, 0, !dbg !2732
  br i1 %tobool29, label %if.then30, label %if.else36, !dbg !2733

if.then30:                                        ; preds = %if.end26
  %29 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !2734
  %30 = bitcast %struct.clk_rate_request* %parent_req to i8*, !dbg !2736
  %31 = bitcast %struct.clk_rate_request* %29 to i8*, !dbg !2736
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 40, i1 false), !dbg !2736
  %32 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2737
  %hw31 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %32, i32 0, i32 2, !dbg !2738
  %33 = load %struct.clk_hw*, %struct.clk_hw** %hw31, align 8, !dbg !2738
  %call32 = call i32 @__clk_determine_rate(%struct.clk_hw* %33, %struct.clk_rate_request* %parent_req) #11, !dbg !2739
  store i32 %call32, i32* %ret, align 4, !dbg !2740
  %34 = load i32, i32* %ret, align 4, !dbg !2741
  %tobool33 = icmp ne i32 %34, 0, !dbg !2741
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !2743

if.then34:                                        ; preds = %if.then30
  br label %for.inc, !dbg !2744

if.end35:                                         ; preds = %if.then30
  br label %if.end39, !dbg !2745

if.else36:                                        ; preds = %if.end26
  %35 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2746
  %call37 = call i64 @clk_core_get_rate_nolock(%struct.clk_core* %35) #11, !dbg !2748
  %rate38 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %parent_req, i32 0, i32 0, !dbg !2749
  store i64 %call37, i64* %rate38, align 8, !dbg !2750
  br label %if.end39

if.end39:                                         ; preds = %if.else36, %if.end35
  %36 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !2751
  %rate40 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %36, i32 0, i32 0, !dbg !2753
  %37 = load i64, i64* %rate40, align 8, !dbg !2753
  %rate41 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %parent_req, i32 0, i32 0, !dbg !2754
  %38 = load i64, i64* %rate41, align 8, !dbg !2754
  %39 = load i64, i64* %best, align 8, !dbg !2755
  %40 = load i64, i64* %flags.addr, align 8, !dbg !2756
  %call42 = call zeroext i1 @mux_is_better_rate(i64 %37, i64 %38, i64 %39, i64 %40) #11, !dbg !2757
  br i1 %call42, label %if.then43, label %if.end45, !dbg !2758

if.then43:                                        ; preds = %if.end39
  %41 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !2759
  store %struct.clk_core* %41, %struct.clk_core** %best_parent, align 8, !dbg !2761
  %rate44 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %parent_req, i32 0, i32 0, !dbg !2762
  %42 = load i64, i64* %rate44, align 8, !dbg !2762
  store i64 %42, i64* %best, align 8, !dbg !2763
  br label %if.end45, !dbg !2764

if.end45:                                         ; preds = %if.then43, %if.end39
  br label %for.inc, !dbg !2765

for.inc:                                          ; preds = %if.end45, %if.then34, %if.then25
  %43 = load i32, i32* %i, align 4, !dbg !2766
  %inc = add i32 %43, 1, !dbg !2766
  store i32 %inc, i32* %i, align 4, !dbg !2766
  br label %for.cond, !dbg !2767, !llvm.loop !2768

for.end:                                          ; preds = %for.cond
  %44 = load %struct.clk_core*, %struct.clk_core** %best_parent, align 8, !dbg !2770
  %tobool46 = icmp ne %struct.clk_core* %44, null, !dbg !2770
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !2772

if.then47:                                        ; preds = %for.end
  store i32 -22, i32* %retval, align 4, !dbg !2773
  br label %return, !dbg !2773

if.end48:                                         ; preds = %for.end
  br label %out, !dbg !2770

out:                                              ; preds = %if.end48, %if.end18
  call void @llvm.dbg.label(metadata !2774), !dbg !2775
  %45 = load %struct.clk_core*, %struct.clk_core** %best_parent, align 8, !dbg !2776
  %tobool49 = icmp ne %struct.clk_core* %45, null, !dbg !2776
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !2778

if.then50:                                        ; preds = %out
  %46 = load %struct.clk_core*, %struct.clk_core** %best_parent, align 8, !dbg !2779
  %hw51 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %46, i32 0, i32 2, !dbg !2780
  %47 = load %struct.clk_hw*, %struct.clk_hw** %hw51, align 8, !dbg !2780
  %48 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !2781
  %best_parent_hw = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %48, i32 0, i32 4, !dbg !2782
  store %struct.clk_hw* %47, %struct.clk_hw** %best_parent_hw, align 8, !dbg !2783
  br label %if.end52, !dbg !2781

if.end52:                                         ; preds = %if.then50, %out
  %49 = load i64, i64* %best, align 8, !dbg !2784
  %50 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !2785
  %best_parent_rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %50, i32 0, i32 3, !dbg !2786
  store i64 %49, i64* %best_parent_rate, align 8, !dbg !2787
  %51 = load i64, i64* %best, align 8, !dbg !2788
  %52 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !2789
  %rate53 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %52, i32 0, i32 0, !dbg !2790
  store i64 %51, i64* %rate53, align 8, !dbg !2791
  store i32 0, i32* %retval, align 4, !dbg !2792
  br label %return, !dbg !2792

return:                                           ; preds = %if.end52, %if.then47, %if.then11
  %53 = load i32, i32* %retval, align 4, !dbg !2793
  ret i32 %53, !dbg !2793
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__clk_determine_rate(%struct.clk_hw* %hw, %struct.clk_rate_request* %req) #0 !dbg !2794 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.clk_hw*, align 8
  %req.addr = alloca %struct.clk_rate_request*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2795, metadata !DIExpression()), !dbg !2796
  store %struct.clk_rate_request* %req, %struct.clk_rate_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request** %req.addr, metadata !2797, metadata !DIExpression()), !dbg !2798
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2799
  %tobool = icmp ne %struct.clk_hw* %0, null, !dbg !2799
  br i1 %tobool, label %if.end, label %if.then, !dbg !2801

if.then:                                          ; preds = %entry
  %1 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !2802
  %rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %1, i32 0, i32 0, !dbg !2804
  store i64 0, i64* %rate, align 8, !dbg !2805
  store i32 0, i32* %retval, align 4, !dbg !2806
  br label %return, !dbg !2806

if.end:                                           ; preds = %entry
  %2 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2807
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %2, i32 0, i32 0, !dbg !2808
  %3 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2808
  %4 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !2809
  %call = call i32 @clk_core_round_rate_nolock(%struct.clk_core* %3, %struct.clk_rate_request* %4) #11, !dbg !2810
  store i32 %call, i32* %retval, align 4, !dbg !2811
  br label %return, !dbg !2811

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !2812
  ret i32 %5, !dbg !2812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mux_is_better_rate(i64 %rate, i64 %now, i64 %best, i64 %flags) #0 !dbg !2813 {
entry:
  %retval = alloca i1, align 1
  %rate.addr = alloca i64, align 8
  %now.addr = alloca i64, align 8
  %best.addr = alloca i64, align 8
  %flags.addr = alloca i64, align 8
  %__x = alloca i64, align 8
  %tmp = alloca i64, align 8
  %__x2 = alloca i64, align 8
  %tmp4 = alloca i64, align 8
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !2816, metadata !DIExpression()), !dbg !2817
  store i64 %now, i64* %now.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %now.addr, metadata !2818, metadata !DIExpression()), !dbg !2819
  store i64 %best, i64* %best.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %best.addr, metadata !2820, metadata !DIExpression()), !dbg !2821
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !2822, metadata !DIExpression()), !dbg !2823
  %0 = load i64, i64* %flags.addr, align 8, !dbg !2824
  %and = and i64 %0, 16, !dbg !2826
  %tobool = icmp ne i64 %and, 0, !dbg !2826
  br i1 %tobool, label %if.then, label %if.end, !dbg !2827

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__x, metadata !2828, metadata !DIExpression()), !dbg !2830
  %1 = load i64, i64* %now.addr, align 8, !dbg !2830
  %2 = load i64, i64* %rate.addr, align 8, !dbg !2830
  %sub = sub i64 %1, %2, !dbg !2830
  store i64 %sub, i64* %__x, align 8, !dbg !2830
  %3 = load i64, i64* %__x, align 8, !dbg !2830
  %cmp = icmp slt i64 %3, 0, !dbg !2830
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2830

cond.true:                                        ; preds = %if.then
  %4 = load i64, i64* %__x, align 8, !dbg !2830
  %sub1 = sub i64 0, %4, !dbg !2830
  br label %cond.end, !dbg !2830

cond.false:                                       ; preds = %if.then
  %5 = load i64, i64* %__x, align 8, !dbg !2830
  br label %cond.end, !dbg !2830

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub1, %cond.true ], [ %5, %cond.false ], !dbg !2830
  store i64 %cond, i64* %tmp, align 8, !dbg !2830
  %6 = load i64, i64* %tmp, align 8, !dbg !2830
  call void @llvm.dbg.declare(metadata i64* %__x2, metadata !2831, metadata !DIExpression()), !dbg !2833
  %7 = load i64, i64* %best.addr, align 8, !dbg !2833
  %8 = load i64, i64* %rate.addr, align 8, !dbg !2833
  %sub3 = sub i64 %7, %8, !dbg !2833
  store i64 %sub3, i64* %__x2, align 8, !dbg !2833
  %9 = load i64, i64* %__x2, align 8, !dbg !2833
  %cmp5 = icmp slt i64 %9, 0, !dbg !2833
  br i1 %cmp5, label %cond.true6, label %cond.false8, !dbg !2833

cond.true6:                                       ; preds = %cond.end
  %10 = load i64, i64* %__x2, align 8, !dbg !2833
  %sub7 = sub i64 0, %10, !dbg !2833
  br label %cond.end9, !dbg !2833

cond.false8:                                      ; preds = %cond.end
  %11 = load i64, i64* %__x2, align 8, !dbg !2833
  br label %cond.end9, !dbg !2833

cond.end9:                                        ; preds = %cond.false8, %cond.true6
  %cond10 = phi i64 [ %sub7, %cond.true6 ], [ %11, %cond.false8 ], !dbg !2833
  store i64 %cond10, i64* %tmp4, align 8, !dbg !2833
  %12 = load i64, i64* %tmp4, align 8, !dbg !2833
  %cmp11 = icmp slt i64 %6, %12, !dbg !2834
  store i1 %cmp11, i1* %retval, align 1, !dbg !2835
  br label %return, !dbg !2835

if.end:                                           ; preds = %entry
  %13 = load i64, i64* %now.addr, align 8, !dbg !2836
  %14 = load i64, i64* %rate.addr, align 8, !dbg !2837
  %cmp12 = icmp ule i64 %13, %14, !dbg !2838
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !2839

land.rhs:                                         ; preds = %if.end
  %15 = load i64, i64* %now.addr, align 8, !dbg !2840
  %16 = load i64, i64* %best.addr, align 8, !dbg !2841
  %cmp13 = icmp ugt i64 %15, %16, !dbg !2842
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %17 = phi i1 [ false, %if.end ], [ %cmp13, %land.rhs ], !dbg !2843
  store i1 %17, i1* %retval, align 1, !dbg !2844
  br label %return, !dbg !2844

return:                                           ; preds = %land.end, %cond.end9
  %18 = load i1, i1* %retval, align 1, !dbg !2845
  ret i1 %18, !dbg !2845
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk* @__clk_lookup(i8* %name) #0 !dbg !2846 {
entry:
  %name.addr = alloca i8*, align 8
  %core = alloca %struct.clk_core*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2849, metadata !DIExpression()), !dbg !2850
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core, metadata !2851, metadata !DIExpression()), !dbg !2852
  %0 = load i8*, i8** %name.addr, align 8, !dbg !2853
  %call = call %struct.clk_core* @clk_core_lookup(i8* %0) #11, !dbg !2854
  store %struct.clk_core* %call, %struct.clk_core** %core, align 8, !dbg !2852
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2855
  %tobool = icmp ne %struct.clk_core* %1, null, !dbg !2855
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2856

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2856

cond.false:                                       ; preds = %entry
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2857
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 2, !dbg !2858
  %3 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !2858
  %clk = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %3, i32 0, i32 1, !dbg !2859
  %4 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !2859
  br label %cond.end, !dbg !2856

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.clk* [ null, %cond.true ], [ %4, %cond.false ], !dbg !2856
  ret %struct.clk* %cond, !dbg !2860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk_core* @clk_core_lookup(i8* %name) #0 !dbg !2861 {
entry:
  %retval = alloca %struct.clk_core*, align 8
  %name.addr = alloca i8*, align 8
  %root_clk = alloca %struct.clk_core*, align 8
  %ret = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.clk_core*, align 8
  %____ptr7 = alloca %struct.hlist_node*, align 8
  %tmp8 = alloca %struct.clk_core*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp14 = alloca %struct.clk_core*, align 8
  %____ptr19 = alloca %struct.hlist_node*, align 8
  %tmp20 = alloca %struct.clk_core*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp26 = alloca %struct.clk_core*, align 8
  %____ptr39 = alloca %struct.hlist_node*, align 8
  %tmp42 = alloca %struct.clk_core*, align 8
  %__mptr45 = alloca i8*, align 8
  %tmp48 = alloca %struct.clk_core*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2864, metadata !DIExpression()), !dbg !2865
  call void @llvm.dbg.declare(metadata %struct.clk_core** %root_clk, metadata !2866, metadata !DIExpression()), !dbg !2867
  call void @llvm.dbg.declare(metadata %struct.clk_core** %ret, metadata !2868, metadata !DIExpression()), !dbg !2869
  %0 = load i8*, i8** %name.addr, align 8, !dbg !2870
  %tobool = icmp ne i8* %0, null, !dbg !2870
  br i1 %tobool, label %if.end, label %if.then, !dbg !2872

if.then:                                          ; preds = %entry
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !2873
  br label %return, !dbg !2873

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !2874, metadata !DIExpression()), !dbg !2877
  %1 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_root_list, i32 0, i32 0), align 8, !dbg !2877
  store %struct.hlist_node* %1, %struct.hlist_node** %____ptr, align 8, !dbg !2877
  %2 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !2877
  %tobool1 = icmp ne %struct.hlist_node* %2, null, !dbg !2877
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !2877

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !2878, metadata !DIExpression()), !dbg !2880
  %3 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !2880
  %4 = bitcast %struct.hlist_node* %3 to i8*, !dbg !2880
  store i8* %4, i8** %__mptr, align 8, !dbg !2880
  br label %do.body, !dbg !2880

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !2881

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !2880
  %add.ptr = getelementptr i8, i8* %5, i64 -184, !dbg !2880
  %6 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !2880
  store %struct.clk_core* %6, %struct.clk_core** %tmp2, align 8, !dbg !2881
  %7 = load %struct.clk_core*, %struct.clk_core** %tmp2, align 8, !dbg !2880
  br label %cond.end, !dbg !2877

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !2877

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %7, %do.end ], [ null, %cond.false ], !dbg !2877
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !2877
  %8 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !2877
  store %struct.clk_core* %8, %struct.clk_core** %root_clk, align 8, !dbg !2883
  br label %for.cond, !dbg !2883

for.cond:                                         ; preds = %cond.end17, %cond.end
  %9 = load %struct.clk_core*, %struct.clk_core** %root_clk, align 8, !dbg !2884
  %tobool3 = icmp ne %struct.clk_core* %9, null, !dbg !2883
  br i1 %tobool3, label %for.body, label %for.end, !dbg !2883

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %name.addr, align 8, !dbg !2886
  %11 = load %struct.clk_core*, %struct.clk_core** %root_clk, align 8, !dbg !2888
  %call = call %struct.clk_core* @__clk_lookup_subtree(i8* %10, %struct.clk_core* %11) #11, !dbg !2889
  store %struct.clk_core* %call, %struct.clk_core** %ret, align 8, !dbg !2890
  %12 = load %struct.clk_core*, %struct.clk_core** %ret, align 8, !dbg !2891
  %tobool4 = icmp ne %struct.clk_core* %12, null, !dbg !2891
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !2893

if.then5:                                         ; preds = %for.body
  %13 = load %struct.clk_core*, %struct.clk_core** %ret, align 8, !dbg !2894
  store %struct.clk_core* %13, %struct.clk_core** %retval, align 8, !dbg !2895
  br label %return, !dbg !2895

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !2896

for.inc:                                          ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr7, metadata !2897, metadata !DIExpression()), !dbg !2899
  %14 = load %struct.clk_core*, %struct.clk_core** %root_clk, align 8, !dbg !2899
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 27, !dbg !2899
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !2899
  %15 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !2899
  store %struct.hlist_node* %15, %struct.hlist_node** %____ptr7, align 8, !dbg !2899
  %16 = load %struct.hlist_node*, %struct.hlist_node** %____ptr7, align 8, !dbg !2899
  %tobool9 = icmp ne %struct.hlist_node* %16, null, !dbg !2899
  br i1 %tobool9, label %cond.true10, label %cond.false16, !dbg !2899

cond.true10:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !2900, metadata !DIExpression()), !dbg !2902
  %17 = load %struct.hlist_node*, %struct.hlist_node** %____ptr7, align 8, !dbg !2902
  %18 = bitcast %struct.hlist_node* %17 to i8*, !dbg !2902
  store i8* %18, i8** %__mptr11, align 8, !dbg !2902
  br label %do.body12, !dbg !2902

do.body12:                                        ; preds = %cond.true10
  br label %do.end13, !dbg !2903

do.end13:                                         ; preds = %do.body12
  %19 = load i8*, i8** %__mptr11, align 8, !dbg !2902
  %add.ptr15 = getelementptr i8, i8* %19, i64 -184, !dbg !2902
  %20 = bitcast i8* %add.ptr15 to %struct.clk_core*, !dbg !2902
  store %struct.clk_core* %20, %struct.clk_core** %tmp14, align 8, !dbg !2903
  %21 = load %struct.clk_core*, %struct.clk_core** %tmp14, align 8, !dbg !2902
  br label %cond.end17, !dbg !2899

cond.false16:                                     ; preds = %for.inc
  br label %cond.end17, !dbg !2899

cond.end17:                                       ; preds = %cond.false16, %do.end13
  %cond18 = phi %struct.clk_core* [ %21, %do.end13 ], [ null, %cond.false16 ], !dbg !2899
  store %struct.clk_core* %cond18, %struct.clk_core** %tmp8, align 8, !dbg !2899
  %22 = load %struct.clk_core*, %struct.clk_core** %tmp8, align 8, !dbg !2899
  store %struct.clk_core* %22, %struct.clk_core** %root_clk, align 8, !dbg !2884
  br label %for.cond, !dbg !2884, !llvm.loop !2905

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr19, metadata !2907, metadata !DIExpression()), !dbg !2910
  %23 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_orphan_list, i32 0, i32 0), align 8, !dbg !2910
  store %struct.hlist_node* %23, %struct.hlist_node** %____ptr19, align 8, !dbg !2910
  %24 = load %struct.hlist_node*, %struct.hlist_node** %____ptr19, align 8, !dbg !2910
  %tobool21 = icmp ne %struct.hlist_node* %24, null, !dbg !2910
  br i1 %tobool21, label %cond.true22, label %cond.false28, !dbg !2910

cond.true22:                                      ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !2911, metadata !DIExpression()), !dbg !2913
  %25 = load %struct.hlist_node*, %struct.hlist_node** %____ptr19, align 8, !dbg !2913
  %26 = bitcast %struct.hlist_node* %25 to i8*, !dbg !2913
  store i8* %26, i8** %__mptr23, align 8, !dbg !2913
  br label %do.body24, !dbg !2913

do.body24:                                        ; preds = %cond.true22
  br label %do.end25, !dbg !2914

do.end25:                                         ; preds = %do.body24
  %27 = load i8*, i8** %__mptr23, align 8, !dbg !2913
  %add.ptr27 = getelementptr i8, i8* %27, i64 -184, !dbg !2913
  %28 = bitcast i8* %add.ptr27 to %struct.clk_core*, !dbg !2913
  store %struct.clk_core* %28, %struct.clk_core** %tmp26, align 8, !dbg !2914
  %29 = load %struct.clk_core*, %struct.clk_core** %tmp26, align 8, !dbg !2913
  br label %cond.end29, !dbg !2910

cond.false28:                                     ; preds = %for.end
  br label %cond.end29, !dbg !2910

cond.end29:                                       ; preds = %cond.false28, %do.end25
  %cond30 = phi %struct.clk_core* [ %29, %do.end25 ], [ null, %cond.false28 ], !dbg !2910
  store %struct.clk_core* %cond30, %struct.clk_core** %tmp20, align 8, !dbg !2910
  %30 = load %struct.clk_core*, %struct.clk_core** %tmp20, align 8, !dbg !2910
  store %struct.clk_core* %30, %struct.clk_core** %root_clk, align 8, !dbg !2916
  br label %for.cond31, !dbg !2916

for.cond31:                                       ; preds = %cond.end51, %cond.end29
  %31 = load %struct.clk_core*, %struct.clk_core** %root_clk, align 8, !dbg !2917
  %tobool32 = icmp ne %struct.clk_core* %31, null, !dbg !2916
  br i1 %tobool32, label %for.body33, label %for.end53, !dbg !2916

for.body33:                                       ; preds = %for.cond31
  %32 = load i8*, i8** %name.addr, align 8, !dbg !2919
  %33 = load %struct.clk_core*, %struct.clk_core** %root_clk, align 8, !dbg !2921
  %call34 = call %struct.clk_core* @__clk_lookup_subtree(i8* %32, %struct.clk_core* %33) #11, !dbg !2922
  store %struct.clk_core* %call34, %struct.clk_core** %ret, align 8, !dbg !2923
  %34 = load %struct.clk_core*, %struct.clk_core** %ret, align 8, !dbg !2924
  %tobool35 = icmp ne %struct.clk_core* %34, null, !dbg !2924
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !2926

if.then36:                                        ; preds = %for.body33
  %35 = load %struct.clk_core*, %struct.clk_core** %ret, align 8, !dbg !2927
  store %struct.clk_core* %35, %struct.clk_core** %retval, align 8, !dbg !2928
  br label %return, !dbg !2928

if.end37:                                         ; preds = %for.body33
  br label %for.inc38, !dbg !2929

for.inc38:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr39, metadata !2930, metadata !DIExpression()), !dbg !2932
  %36 = load %struct.clk_core*, %struct.clk_core** %root_clk, align 8, !dbg !2932
  %child_node40 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %36, i32 0, i32 27, !dbg !2932
  %next41 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node40, i32 0, i32 0, !dbg !2932
  %37 = load %struct.hlist_node*, %struct.hlist_node** %next41, align 8, !dbg !2932
  store %struct.hlist_node* %37, %struct.hlist_node** %____ptr39, align 8, !dbg !2932
  %38 = load %struct.hlist_node*, %struct.hlist_node** %____ptr39, align 8, !dbg !2932
  %tobool43 = icmp ne %struct.hlist_node* %38, null, !dbg !2932
  br i1 %tobool43, label %cond.true44, label %cond.false50, !dbg !2932

cond.true44:                                      ; preds = %for.inc38
  call void @llvm.dbg.declare(metadata i8** %__mptr45, metadata !2933, metadata !DIExpression()), !dbg !2935
  %39 = load %struct.hlist_node*, %struct.hlist_node** %____ptr39, align 8, !dbg !2935
  %40 = bitcast %struct.hlist_node* %39 to i8*, !dbg !2935
  store i8* %40, i8** %__mptr45, align 8, !dbg !2935
  br label %do.body46, !dbg !2935

do.body46:                                        ; preds = %cond.true44
  br label %do.end47, !dbg !2936

do.end47:                                         ; preds = %do.body46
  %41 = load i8*, i8** %__mptr45, align 8, !dbg !2935
  %add.ptr49 = getelementptr i8, i8* %41, i64 -184, !dbg !2935
  %42 = bitcast i8* %add.ptr49 to %struct.clk_core*, !dbg !2935
  store %struct.clk_core* %42, %struct.clk_core** %tmp48, align 8, !dbg !2936
  %43 = load %struct.clk_core*, %struct.clk_core** %tmp48, align 8, !dbg !2935
  br label %cond.end51, !dbg !2932

cond.false50:                                     ; preds = %for.inc38
  br label %cond.end51, !dbg !2932

cond.end51:                                       ; preds = %cond.false50, %do.end47
  %cond52 = phi %struct.clk_core* [ %43, %do.end47 ], [ null, %cond.false50 ], !dbg !2932
  store %struct.clk_core* %cond52, %struct.clk_core** %tmp42, align 8, !dbg !2932
  %44 = load %struct.clk_core*, %struct.clk_core** %tmp42, align 8, !dbg !2932
  store %struct.clk_core* %44, %struct.clk_core** %root_clk, align 8, !dbg !2917
  br label %for.cond31, !dbg !2917, !llvm.loop !2938

for.end53:                                        ; preds = %for.cond31
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !2940
  br label %return, !dbg !2940

return:                                           ; preds = %for.end53, %if.then36, %if.then5, %if.then
  %45 = load %struct.clk_core*, %struct.clk_core** %retval, align 8, !dbg !2941
  ret %struct.clk_core* %45, !dbg !2941
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @clk_hw_set_rate_range(%struct.clk_hw* %hw, i64 %min_rate, i64 %max_rate) #0 !dbg !2942 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %min_rate.addr = alloca i64, align 8
  %max_rate.addr = alloca i64, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2945, metadata !DIExpression()), !dbg !2946
  store i64 %min_rate, i64* %min_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min_rate.addr, metadata !2947, metadata !DIExpression()), !dbg !2948
  store i64 %max_rate, i64* %max_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max_rate.addr, metadata !2949, metadata !DIExpression()), !dbg !2950
  %0 = load i64, i64* %min_rate.addr, align 8, !dbg !2951
  %1 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2952
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %1, i32 0, i32 0, !dbg !2953
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !2953
  %min_rate1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 21, !dbg !2954
  store i64 %0, i64* %min_rate1, align 8, !dbg !2955
  %3 = load i64, i64* %max_rate.addr, align 8, !dbg !2956
  %4 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2957
  %core2 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %4, i32 0, i32 0, !dbg !2958
  %5 = load %struct.clk_core*, %struct.clk_core** %core2, align 8, !dbg !2958
  %max_rate3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 22, !dbg !2959
  store i64 %3, i64* %max_rate3, align 8, !dbg !2960
  ret void, !dbg !2961
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__clk_mux_determine_rate(%struct.clk_hw* %hw, %struct.clk_rate_request* %req) #0 !dbg !2962 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %req.addr = alloca %struct.clk_rate_request*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2963, metadata !DIExpression()), !dbg !2964
  store %struct.clk_rate_request* %req, %struct.clk_rate_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request** %req.addr, metadata !2965, metadata !DIExpression()), !dbg !2966
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2967
  %1 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !2968
  %call = call i32 @clk_mux_determine_rate_flags(%struct.clk_hw* %0, %struct.clk_rate_request* %1, i64 0) #11, !dbg !2969
  ret i32 %call, !dbg !2970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__clk_mux_determine_rate_closest(%struct.clk_hw* %hw, %struct.clk_rate_request* %req) #0 !dbg !2971 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %req.addr = alloca %struct.clk_rate_request*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !2972, metadata !DIExpression()), !dbg !2973
  store %struct.clk_rate_request* %req, %struct.clk_rate_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request** %req.addr, metadata !2974, metadata !DIExpression()), !dbg !2975
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !2976
  %1 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !2977
  %call = call i32 @clk_mux_determine_rate_flags(%struct.clk_hw* %0, %struct.clk_rate_request* %1, i64 16) #11, !dbg !2978
  ret i32 %call, !dbg !2979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @clk_rate_exclusive_put(%struct.clk* %clk) #0 !dbg !2980 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !2983, metadata !DIExpression()), !dbg !2984
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !2985
  %tobool = icmp ne %struct.clk* %0, null, !dbg !2985
  br i1 %tobool, label %if.end, label %if.then, !dbg !2987

if.then:                                          ; preds = %entry
  br label %return, !dbg !2988

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !2989
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !2990, metadata !DIExpression()), !dbg !2993
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !2993
  %exclusive_count = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 6, !dbg !2993
  %2 = load i32, i32* %exclusive_count, align 8, !dbg !2993
  %cmp = icmp ule i32 %2, 0, !dbg !2993
  %lnot = xor i1 %cmp, true, !dbg !2993
  %lnot1 = xor i1 %lnot, true, !dbg !2993
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2993
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !2993
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !2994
  %tobool2 = icmp ne i32 %3, 0, !dbg !2994
  %lnot3 = xor i1 %tobool2, true, !dbg !2994
  %lnot5 = xor i1 %lnot3, true, !dbg !2994
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !2994
  %conv = sext i32 %lnot.ext6 to i64, !dbg !2994
  %tobool7 = icmp ne i64 %conv, 0, !dbg !2994
  br i1 %tobool7, label %if.then8, label %if.end15, !dbg !2993

if.then8:                                         ; preds = %if.end
  br label %do.body, !dbg !2994

do.body:                                          ; preds = %if.then8
  br label %do.body9, !dbg !2996

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !2998

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !2996

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 734, i32 2305, i64 12) #10, !dbg !3000, !srcloc !3002
  br label %do.end11, !dbg !3000

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 186) #10, !dbg !3003, !srcloc !3005
  br label %do.body12, !dbg !2996

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !3006

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !2996

do.end14:                                         ; preds = %do.end13
  br label %if.end15, !dbg !2996

if.end15:                                         ; preds = %do.end14, %if.end
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !2993
  %tobool16 = icmp ne i32 %4, 0, !dbg !2993
  %lnot17 = xor i1 %tobool16, true, !dbg !2993
  %lnot19 = xor i1 %lnot17, true, !dbg !2993
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !2993
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !2993
  store i64 %conv21, i64* %tmp, align 8, !dbg !2994
  %5 = load i64, i64* %tmp, align 8, !dbg !2993
  %tobool22 = icmp ne i64 %5, 0, !dbg !3008
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !3009

if.then23:                                        ; preds = %if.end15
  br label %out, !dbg !3010

if.end24:                                         ; preds = %if.end15
  %6 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3011
  %core = getelementptr inbounds %struct.clk, %struct.clk* %6, i32 0, i32 0, !dbg !3012
  %7 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3012
  call void @clk_core_rate_unprotect(%struct.clk_core* %7) #11, !dbg !3013
  %8 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3014
  %exclusive_count25 = getelementptr inbounds %struct.clk, %struct.clk* %8, i32 0, i32 6, !dbg !3015
  %9 = load i32, i32* %exclusive_count25, align 8, !dbg !3016
  %dec = add i32 %9, -1, !dbg !3016
  store i32 %dec, i32* %exclusive_count25, align 8, !dbg !3016
  br label %out, !dbg !3014

out:                                              ; preds = %if.end24, %if.then23
  call void @llvm.dbg.label(metadata !3017), !dbg !3018
  call void @clk_prepare_unlock() #11, !dbg !3019
  br label %return, !dbg !3020

return:                                           ; preds = %out, %if.then
  ret void, !dbg !3020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_prepare_lock() #0 !dbg !3021 {
entry:
  %pscr_ret__.i58 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i58, metadata !3024, metadata !DIExpression()), !dbg !3030
  %__vpp_verify.i59 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i59, metadata !3032, metadata !DIExpression()), !dbg !3034
  %pfo_val__.i60 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i60, metadata !3035, metadata !DIExpression()), !dbg !3037
  %tmp.i61 = alloca %struct.task_struct*, align 8
  %tmp1.i62 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !3024, metadata !DIExpression()), !dbg !3038
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !3032, metadata !DIExpression()), !dbg !3043
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !3035, metadata !DIExpression()), !dbg !3044
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on26 = alloca i32, align 4
  %tmp50 = alloca i64, align 8
  %call = call i32 @mutex_trylock(%struct.mutex* @prepare_lock) #11, !dbg !3045
  %tobool = icmp ne i32 %call, 0, !dbg !3045
  br i1 %tobool, label %if.end3, label %if.then, !dbg !3046

if.then:                                          ; preds = %entry
  %0 = load %struct.task_struct*, %struct.task_struct** @prepare_owner, align 8, !dbg !3047
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !3043
  %1 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !3043
  %2 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !3044, !srcloc !3048
  store i64 %2, i64* %pfo_val__.i, align 8, !dbg !3044
  %3 = load i64, i64* %pfo_val__.i, align 8, !dbg !3044
  %4 = inttoptr i64 %3 to %struct.task_struct*, !dbg !3044
  store %struct.task_struct* %4, %struct.task_struct** %tmp.i, align 8, !dbg !3044
  %5 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !3044
  store %struct.task_struct* %5, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !3038
  %6 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !3038
  store %struct.task_struct* %6, %struct.task_struct** %tmp1.i, align 8, !dbg !3038
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !3038
  %cmp = icmp eq %struct.task_struct* %0, %7, !dbg !3049
  br i1 %cmp, label %if.then2, label %if.end, !dbg !3050

if.then2:                                         ; preds = %if.then
  %8 = load i32, i32* @prepare_refcnt, align 4, !dbg !3051
  %inc = add i32 %8, 1, !dbg !3051
  store i32 %inc, i32* @prepare_refcnt, align 4, !dbg !3051
  br label %return, !dbg !3053

if.end:                                           ; preds = %if.then
  call void @mutex_lock(%struct.mutex* @prepare_lock) #11, !dbg !3054
  br label %if.end3, !dbg !3055

if.end3:                                          ; preds = %if.end, %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !3056, metadata !DIExpression()), !dbg !3058
  %9 = load %struct.task_struct*, %struct.task_struct** @prepare_owner, align 8, !dbg !3058
  %cmp4 = icmp ne %struct.task_struct* %9, null, !dbg !3058
  %lnot = xor i1 %cmp4, true, !dbg !3058
  %lnot5 = xor i1 %lnot, true, !dbg !3058
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !3058
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !3058
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !3059
  %tobool6 = icmp ne i32 %10, 0, !dbg !3059
  %lnot7 = xor i1 %tobool6, true, !dbg !3059
  %lnot9 = xor i1 %lnot7, true, !dbg !3059
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !3059
  %conv = sext i32 %lnot.ext10 to i64, !dbg !3059
  %tobool11 = icmp ne i64 %conv, 0, !dbg !3059
  br i1 %tobool11, label %if.then12, label %if.end19, !dbg !3058

if.then12:                                        ; preds = %if.end3
  br label %do.body, !dbg !3059

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !3061

do.body13:                                        ; preds = %do.body
  br label %do.end, !dbg !3063

do.end:                                           ; preds = %do.body13
  br label %do.body14, !dbg !3061

do.body14:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 142, i32 2307, i64 12) #10, !dbg !3065, !srcloc !3067
  br label %do.end15, !dbg !3065

do.end15:                                         ; preds = %do.body14
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 163) #10, !dbg !3068, !srcloc !3070
  br label %do.body16, !dbg !3061

do.body16:                                        ; preds = %do.end15
  br label %do.end17, !dbg !3071

do.end17:                                         ; preds = %do.body16
  br label %do.end18, !dbg !3061

do.end18:                                         ; preds = %do.end17
  br label %if.end19, !dbg !3061

if.end19:                                         ; preds = %do.end18, %if.end3
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !3058
  %tobool20 = icmp ne i32 %11, 0, !dbg !3058
  %lnot21 = xor i1 %tobool20, true, !dbg !3058
  %lnot23 = xor i1 %lnot21, true, !dbg !3058
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !3058
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !3058
  store i64 %conv25, i64* %tmp, align 8, !dbg !3059
  %12 = load i64, i64* %tmp, align 8, !dbg !3058
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on26, metadata !3073, metadata !DIExpression()), !dbg !3075
  %13 = load i32, i32* @prepare_refcnt, align 4, !dbg !3075
  %cmp27 = icmp ne i32 %13, 0, !dbg !3075
  %lnot29 = xor i1 %cmp27, true, !dbg !3075
  %lnot31 = xor i1 %lnot29, true, !dbg !3075
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !3075
  store i32 %lnot.ext32, i32* %__ret_warn_on26, align 4, !dbg !3075
  %14 = load i32, i32* %__ret_warn_on26, align 4, !dbg !3076
  %tobool33 = icmp ne i32 %14, 0, !dbg !3076
  %lnot34 = xor i1 %tobool33, true, !dbg !3076
  %lnot36 = xor i1 %lnot34, true, !dbg !3076
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !3076
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !3076
  %tobool39 = icmp ne i64 %conv38, 0, !dbg !3076
  br i1 %tobool39, label %if.then40, label %if.end49, !dbg !3075

if.then40:                                        ; preds = %if.end19
  br label %do.body41, !dbg !3076

do.body41:                                        ; preds = %if.then40
  br label %do.body42, !dbg !3078

do.body42:                                        ; preds = %do.body41
  br label %do.end43, !dbg !3080

do.end43:                                         ; preds = %do.body42
  br label %do.body44, !dbg !3078

do.body44:                                        ; preds = %do.end43
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 143, i32 2307, i64 12) #10, !dbg !3082, !srcloc !3084
  br label %do.end45, !dbg !3082

do.end45:                                         ; preds = %do.body44
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 164) #10, !dbg !3085, !srcloc !3087
  br label %do.body46, !dbg !3078

do.body46:                                        ; preds = %do.end45
  br label %do.end47, !dbg !3088

do.end47:                                         ; preds = %do.body46
  br label %do.end48, !dbg !3078

do.end48:                                         ; preds = %do.end47
  br label %if.end49, !dbg !3078

if.end49:                                         ; preds = %do.end48, %if.end19
  %15 = load i32, i32* %__ret_warn_on26, align 4, !dbg !3075
  %tobool51 = icmp ne i32 %15, 0, !dbg !3075
  %lnot52 = xor i1 %tobool51, true, !dbg !3075
  %lnot54 = xor i1 %lnot52, true, !dbg !3075
  %lnot.ext55 = zext i1 %lnot54 to i32, !dbg !3075
  %conv56 = sext i32 %lnot.ext55 to i64, !dbg !3075
  store i64 %conv56, i64* %tmp50, align 8, !dbg !3076
  %16 = load i64, i64* %tmp50, align 8, !dbg !3075
  store i8* null, i8** %__vpp_verify.i59, align 8, !dbg !3034
  %17 = load i8*, i8** %__vpp_verify.i59, align 8, !dbg !3034
  %18 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !3037, !srcloc !3048
  store i64 %18, i64* %pfo_val__.i60, align 8, !dbg !3037
  %19 = load i64, i64* %pfo_val__.i60, align 8, !dbg !3037
  %20 = inttoptr i64 %19 to %struct.task_struct*, !dbg !3037
  store %struct.task_struct* %20, %struct.task_struct** %tmp.i61, align 8, !dbg !3037
  %21 = load %struct.task_struct*, %struct.task_struct** %tmp.i61, align 8, !dbg !3037
  store %struct.task_struct* %21, %struct.task_struct** %pscr_ret__.i58, align 8, !dbg !3030
  %22 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i58, align 8, !dbg !3030
  store %struct.task_struct* %22, %struct.task_struct** %tmp1.i62, align 8, !dbg !3030
  %23 = load %struct.task_struct*, %struct.task_struct** %tmp1.i62, align 8, !dbg !3030
  store %struct.task_struct* %23, %struct.task_struct** @prepare_owner, align 8, !dbg !3090
  store i32 1, i32* @prepare_refcnt, align 4, !dbg !3091
  br label %return, !dbg !3092

return:                                           ; preds = %if.end49, %if.then2
  ret void, !dbg !3092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_rate_unprotect(%struct.clk_core* %core) #0 !dbg !3093 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3096, metadata !DIExpression()), !dbg !3097
  br label %do.body, !dbg !3098

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !3099

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3101
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !3101
  br i1 %tobool, label %if.end, label %if.then, !dbg !3103

if.then:                                          ; preds = %do.end
  br label %return, !dbg !3104

if.end:                                           ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !3105, metadata !DIExpression()), !dbg !3108
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3108
  %protect_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 20, !dbg !3108
  %2 = load i32, i32* %protect_count, align 4, !dbg !3108
  %cmp = icmp eq i32 %2, 0, !dbg !3108
  %lnot = xor i1 %cmp, true, !dbg !3108
  %lnot1 = xor i1 %lnot, true, !dbg !3108
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3108
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !3108
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !3109
  %tobool2 = icmp ne i32 %3, 0, !dbg !3109
  %lnot3 = xor i1 %tobool2, true, !dbg !3109
  %lnot5 = xor i1 %lnot3, true, !dbg !3109
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !3109
  %conv = sext i32 %lnot.ext6 to i64, !dbg !3109
  %tobool7 = icmp ne i64 %conv, 0, !dbg !3109
  br i1 %tobool7, label %if.then8, label %if.end23, !dbg !3108

if.then8:                                         ; preds = %if.end
  br label %do.body9, !dbg !3109

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !3111

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !3113

do.end11:                                         ; preds = %do.body10
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3111
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 0, !dbg !3111
  %5 = load i8*, i8** %name, align 8, !dbg !3111
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i8* %5) #11, !dbg !3111
  br label %do.body12, !dbg !3111

do.body12:                                        ; preds = %do.end11
  br label %do.body13, !dbg !3115

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !3117

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !3115

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 677, i32 2313, i64 12) #10, !dbg !3119, !srcloc !3121
  br label %do.end16, !dbg !3119

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 185) #10, !dbg !3122, !srcloc !3124
  br label %do.body17, !dbg !3115

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !3125

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !3115

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !3111

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !3127

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !3111

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !3111

if.end23:                                         ; preds = %do.end22, %if.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !3108
  %tobool24 = icmp ne i32 %6, 0, !dbg !3108
  %lnot25 = xor i1 %tobool24, true, !dbg !3108
  %lnot27 = xor i1 %lnot25, true, !dbg !3108
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !3108
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !3108
  store i64 %conv29, i64* %tmp, align 8, !dbg !3109
  %7 = load i64, i64* %tmp, align 8, !dbg !3108
  %tobool30 = icmp ne i64 %7, 0, !dbg !3129
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !3130

if.then31:                                        ; preds = %if.end23
  br label %return, !dbg !3131

if.end32:                                         ; preds = %if.end23
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3132
  %protect_count33 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 20, !dbg !3134
  %9 = load i32, i32* %protect_count33, align 4, !dbg !3135
  %dec = add i32 %9, -1, !dbg !3135
  store i32 %dec, i32* %protect_count33, align 4, !dbg !3135
  %cmp34 = icmp ugt i32 %dec, 0, !dbg !3136
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !3137

if.then36:                                        ; preds = %if.end32
  br label %return, !dbg !3138

if.end37:                                         ; preds = %if.end32
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3139
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 6, !dbg !3140
  %11 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !3140
  call void @clk_core_rate_unprotect(%struct.clk_core* %11) #11, !dbg !3141
  br label %return, !dbg !3142

return:                                           ; preds = %if.end37, %if.then36, %if.then31, %if.then
  ret void, !dbg !3142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_prepare_unlock() #0 !dbg !3143 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !3024, metadata !DIExpression()), !dbg !3144
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !3032, metadata !DIExpression()), !dbg !3147
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !3035, metadata !DIExpression()), !dbg !3148
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on19 = alloca i32, align 4
  %tmp43 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !3149, metadata !DIExpression()), !dbg !3150
  %0 = load %struct.task_struct*, %struct.task_struct** @prepare_owner, align 8, !dbg !3150
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !3147
  %1 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !3147
  %2 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !3148, !srcloc !3048
  store i64 %2, i64* %pfo_val__.i, align 8, !dbg !3148
  %3 = load i64, i64* %pfo_val__.i, align 8, !dbg !3148
  %4 = inttoptr i64 %3 to %struct.task_struct*, !dbg !3148
  store %struct.task_struct* %4, %struct.task_struct** %tmp.i, align 8, !dbg !3148
  %5 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !3148
  store %struct.task_struct* %5, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !3144
  %6 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !3144
  store %struct.task_struct* %6, %struct.task_struct** %tmp1.i, align 8, !dbg !3144
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !3144
  %cmp = icmp ne %struct.task_struct* %0, %7, !dbg !3150
  %lnot = xor i1 %cmp, true, !dbg !3150
  %lnot1 = xor i1 %lnot, true, !dbg !3150
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3150
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !3150
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !3151
  %tobool = icmp ne i32 %8, 0, !dbg !3151
  %lnot2 = xor i1 %tobool, true, !dbg !3151
  %lnot4 = xor i1 %lnot2, true, !dbg !3151
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !3151
  %conv = sext i32 %lnot.ext5 to i64, !dbg !3151
  %tobool6 = icmp ne i64 %conv, 0, !dbg !3151
  br i1 %tobool6, label %if.then, label %if.end, !dbg !3150

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3151

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !3153

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !3155

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !3153

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !3157, !srcloc !3159
  br label %do.end9, !dbg !3157

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 165) #10, !dbg !3160, !srcloc !3162
  br label %do.body10, !dbg !3153

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !3163

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !3153

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !3153

if.end:                                           ; preds = %do.end12, %entry
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !3150
  %tobool13 = icmp ne i32 %9, 0, !dbg !3150
  %lnot14 = xor i1 %tobool13, true, !dbg !3150
  %lnot16 = xor i1 %lnot14, true, !dbg !3150
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !3150
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !3150
  store i64 %conv18, i64* %tmp, align 8, !dbg !3151
  %10 = load i64, i64* %tmp, align 8, !dbg !3150
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on19, metadata !3165, metadata !DIExpression()), !dbg !3167
  %11 = load i32, i32* @prepare_refcnt, align 4, !dbg !3167
  %cmp20 = icmp eq i32 %11, 0, !dbg !3167
  %lnot22 = xor i1 %cmp20, true, !dbg !3167
  %lnot24 = xor i1 %lnot22, true, !dbg !3167
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !3167
  store i32 %lnot.ext25, i32* %__ret_warn_on19, align 4, !dbg !3167
  %12 = load i32, i32* %__ret_warn_on19, align 4, !dbg !3168
  %tobool26 = icmp ne i32 %12, 0, !dbg !3168
  %lnot27 = xor i1 %tobool26, true, !dbg !3168
  %lnot29 = xor i1 %lnot27, true, !dbg !3168
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !3168
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !3168
  %tobool32 = icmp ne i64 %conv31, 0, !dbg !3168
  br i1 %tobool32, label %if.then33, label %if.end42, !dbg !3167

if.then33:                                        ; preds = %if.end
  br label %do.body34, !dbg !3168

do.body34:                                        ; preds = %if.then33
  br label %do.body35, !dbg !3170

do.body35:                                        ; preds = %do.body34
  br label %do.end36, !dbg !3172

do.end36:                                         ; preds = %do.body35
  br label %do.body37, !dbg !3170

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 151, i32 2307, i64 12) #10, !dbg !3174, !srcloc !3176
  br label %do.end38, !dbg !3174

do.end38:                                         ; preds = %do.body37
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 166) #10, !dbg !3177, !srcloc !3179
  br label %do.body39, !dbg !3170

do.body39:                                        ; preds = %do.end38
  br label %do.end40, !dbg !3180

do.end40:                                         ; preds = %do.body39
  br label %do.end41, !dbg !3170

do.end41:                                         ; preds = %do.end40
  br label %if.end42, !dbg !3170

if.end42:                                         ; preds = %do.end41, %if.end
  %13 = load i32, i32* %__ret_warn_on19, align 4, !dbg !3167
  %tobool44 = icmp ne i32 %13, 0, !dbg !3167
  %lnot45 = xor i1 %tobool44, true, !dbg !3167
  %lnot47 = xor i1 %lnot45, true, !dbg !3167
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !3167
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !3167
  store i64 %conv49, i64* %tmp43, align 8, !dbg !3168
  %14 = load i64, i64* %tmp43, align 8, !dbg !3167
  %15 = load i32, i32* @prepare_refcnt, align 4, !dbg !3182
  %dec = add i32 %15, -1, !dbg !3182
  store i32 %dec, i32* @prepare_refcnt, align 4, !dbg !3182
  %tobool50 = icmp ne i32 %dec, 0, !dbg !3182
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !3184

if.then51:                                        ; preds = %if.end42
  br label %return, !dbg !3185

if.end52:                                         ; preds = %if.end42
  store %struct.task_struct* null, %struct.task_struct** @prepare_owner, align 8, !dbg !3186
  call void @mutex_unlock(%struct.mutex* @prepare_lock) #11, !dbg !3187
  br label %return, !dbg !3188

return:                                           ; preds = %if.end52, %if.then51
  ret void, !dbg !3188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_rate_exclusive_get(%struct.clk* %clk) #0 !dbg !3189 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !3192, metadata !DIExpression()), !dbg !3193
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3194
  %tobool = icmp ne %struct.clk* %0, null, !dbg !3194
  br i1 %tobool, label %if.end, label %if.then, !dbg !3196

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3197
  br label %return, !dbg !3197

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !3198
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3199
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !3200
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3200
  call void @clk_core_rate_protect(%struct.clk_core* %2) #11, !dbg !3201
  %3 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3202
  %exclusive_count = getelementptr inbounds %struct.clk, %struct.clk* %3, i32 0, i32 6, !dbg !3203
  %4 = load i32, i32* %exclusive_count, align 8, !dbg !3204
  %inc = add i32 %4, 1, !dbg !3204
  store i32 %inc, i32* %exclusive_count, align 8, !dbg !3204
  call void @clk_prepare_unlock() #11, !dbg !3205
  store i32 0, i32* %retval, align 4, !dbg !3206
  br label %return, !dbg !3206

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !3207
  ret i32 %5, !dbg !3207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_rate_protect(%struct.clk_core* %core) #0 !dbg !3208 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3209, metadata !DIExpression()), !dbg !3210
  br label %do.body, !dbg !3211

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !3212

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3214
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !3214
  br i1 %tobool, label %if.end, label %if.then, !dbg !3216

if.then:                                          ; preds = %do.end
  br label %return, !dbg !3217

if.end:                                           ; preds = %do.end
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3218
  %protect_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 20, !dbg !3220
  %2 = load i32, i32* %protect_count, align 4, !dbg !3220
  %cmp = icmp eq i32 %2, 0, !dbg !3221
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !3222

if.then1:                                         ; preds = %if.end
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3223
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 6, !dbg !3224
  %4 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !3224
  call void @clk_core_rate_protect(%struct.clk_core* %4) #11, !dbg !3225
  br label %if.end2, !dbg !3225

if.end2:                                          ; preds = %if.then1, %if.end
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3226
  %protect_count3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 20, !dbg !3227
  %6 = load i32, i32* %protect_count3, align 4, !dbg !3228
  %inc = add i32 %6, 1, !dbg !3228
  store i32 %inc, i32* %protect_count3, align 4, !dbg !3228
  br label %return, !dbg !3229

return:                                           ; preds = %if.end2, %if.then
  ret void, !dbg !3229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @clk_unprepare(%struct.clk* %clk) #0 !dbg !3230 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !3231, metadata !DIExpression()), !dbg !3232
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3233
  %1 = bitcast %struct.clk* %0 to i8*, !dbg !3233
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #11, !dbg !3235
  br i1 %call, label %if.then, label %if.end, !dbg !3236

if.then:                                          ; preds = %entry
  br label %return, !dbg !3237

if.end:                                           ; preds = %entry
  %2 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3238
  %core = getelementptr inbounds %struct.clk, %struct.clk* %2, i32 0, i32 0, !dbg !3239
  %3 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3239
  call void @clk_core_unprepare_lock(%struct.clk_core* %3) #11, !dbg !3240
  br label %return, !dbg !3241

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !3242 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3246, metadata !DIExpression()), !dbg !3247
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !3248
  %tobool = icmp ne i8* %0, null, !dbg !3248
  %lnot = xor i1 %tobool, true, !dbg !3248
  %lnot1 = xor i1 %lnot, true, !dbg !3248
  %lnot2 = xor i1 %lnot1, true, !dbg !3248
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3248
  %conv = sext i32 %lnot.ext to i64, !dbg !3248
  %tobool3 = icmp ne i64 %conv, 0, !dbg !3248
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !3249

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !3250
  %2 = ptrtoint i8* %1 to i64, !dbg !3250
  %3 = inttoptr i64 %2 to i8*, !dbg !3250
  %4 = ptrtoint i8* %3 to i64, !dbg !3250
  %cmp = icmp uge i64 %4, -4095, !dbg !3250
  %lnot5 = xor i1 %cmp, true, !dbg !3250
  %lnot7 = xor i1 %lnot5, true, !dbg !3250
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !3250
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !3250
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !3249
  br label %lor.end, !dbg !3249

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !3251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_unprepare_lock(%struct.clk_core* %core) #0 !dbg !3252 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3253, metadata !DIExpression()), !dbg !3254
  call void @clk_prepare_lock() #11, !dbg !3255
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3256
  call void @clk_core_unprepare(%struct.clk_core* %0) #11, !dbg !3257
  call void @clk_prepare_unlock() #11, !dbg !3258
  ret void, !dbg !3259
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_prepare(%struct.clk* %clk) #0 !dbg !3260 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !3261, metadata !DIExpression()), !dbg !3262
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3263
  %tobool = icmp ne %struct.clk* %0, null, !dbg !3263
  br i1 %tobool, label %if.end, label %if.then, !dbg !3265

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3266
  br label %return, !dbg !3266

if.end:                                           ; preds = %entry
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3267
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !3268
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3268
  %call = call i32 @clk_core_prepare_lock(%struct.clk_core* %2) #11, !dbg !3269
  store i32 %call, i32* %retval, align 4, !dbg !3270
  br label %return, !dbg !3270

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !3271
  ret i32 %3, !dbg !3271
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_prepare_lock(%struct.clk_core* %core) #0 !dbg !3272 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3275, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3277, metadata !DIExpression()), !dbg !3278
  call void @clk_prepare_lock() #11, !dbg !3279
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3280
  %call = call i32 @clk_core_prepare(%struct.clk_core* %0) #11, !dbg !3281
  store i32 %call, i32* %ret, align 4, !dbg !3282
  call void @clk_prepare_unlock() #11, !dbg !3283
  %1 = load i32, i32* %ret, align 4, !dbg !3284
  ret i32 %1, !dbg !3285
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @clk_disable(%struct.clk* %clk) #0 !dbg !3286 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !3287, metadata !DIExpression()), !dbg !3288
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3289
  %1 = bitcast %struct.clk* %0 to i8*, !dbg !3289
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #11, !dbg !3291
  br i1 %call, label %if.then, label %if.end, !dbg !3292

if.then:                                          ; preds = %entry
  br label %return, !dbg !3293

if.end:                                           ; preds = %entry
  %2 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3294
  %core = getelementptr inbounds %struct.clk, %struct.clk* %2, i32 0, i32 0, !dbg !3295
  %3 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3295
  call void @clk_core_disable_lock(%struct.clk_core* %3) #11, !dbg !3296
  br label %return, !dbg !3297

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_disable_lock(%struct.clk_core* %core) #0 !dbg !3298 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %flags = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3299, metadata !DIExpression()), !dbg !3300
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !3301, metadata !DIExpression()), !dbg !3302
  %call = call i64 @clk_enable_lock() #11, !dbg !3303
  store i64 %call, i64* %flags, align 8, !dbg !3304
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3305
  call void @clk_core_disable(%struct.clk_core* %0) #11, !dbg !3306
  %1 = load i64, i64* %flags, align 8, !dbg !3307
  call void @clk_enable_unlock(i64 %1) #11, !dbg !3308
  ret void, !dbg !3309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @clk_gate_restore_context(%struct.clk_hw* %hw) #0 !dbg !3310 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %core = alloca %struct.clk_core*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !3311, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core, metadata !3313, metadata !DIExpression()), !dbg !3314
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !3315
  %core1 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !3316
  %1 = load %struct.clk_core*, %struct.clk_core** %core1, align 8, !dbg !3316
  store %struct.clk_core* %1, %struct.clk_core** %core, align 8, !dbg !3314
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3317
  %enable_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 18, !dbg !3319
  %3 = load i32, i32* %enable_count, align 4, !dbg !3319
  %tobool = icmp ne i32 %3, 0, !dbg !3317
  br i1 %tobool, label %if.then, label %if.else, !dbg !3320

if.then:                                          ; preds = %entry
  %4 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3321
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 1, !dbg !3322
  %5 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !3322
  %enable = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %5, i32 0, i32 4, !dbg !3323
  %6 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %enable, align 8, !dbg !3323
  %7 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !3324
  %call = call i32 %6(%struct.clk_hw* %7) #11, !dbg !3321
  br label %if.end, !dbg !3321

if.else:                                          ; preds = %entry
  %8 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3325
  %ops2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 1, !dbg !3326
  %9 = load %struct.clk_ops*, %struct.clk_ops** %ops2, align 8, !dbg !3326
  %disable = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %9, i32 0, i32 5, !dbg !3327
  %10 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %disable, align 8, !dbg !3327
  %11 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !3328
  call void %10(%struct.clk_hw* %11) #11, !dbg !3325
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_save_context() #0 !dbg !3330 {
entry:
  %retval = alloca i32, align 4
  %clk = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.clk_core*, align 8
  %____ptr3 = alloca %struct.hlist_node*, align 8
  %tmp4 = alloca %struct.clk_core*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp10 = alloca %struct.clk_core*, align 8
  %____ptr15 = alloca %struct.hlist_node*, align 8
  %tmp16 = alloca %struct.clk_core*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp22 = alloca %struct.clk_core*, align 8
  %____ptr35 = alloca %struct.hlist_node*, align 8
  %tmp38 = alloca %struct.clk_core*, align 8
  %__mptr41 = alloca i8*, align 8
  %tmp44 = alloca %struct.clk_core*, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %clk, metadata !3333, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3335, metadata !DIExpression()), !dbg !3336
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !3337, metadata !DIExpression()), !dbg !3340
  %0 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_root_list, i32 0, i32 0), align 8, !dbg !3340
  store %struct.hlist_node* %0, %struct.hlist_node** %____ptr, align 8, !dbg !3340
  %1 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3340
  %tobool = icmp ne %struct.hlist_node* %1, null, !dbg !3340
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3340

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !3341, metadata !DIExpression()), !dbg !3343
  %2 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3343
  %3 = bitcast %struct.hlist_node* %2 to i8*, !dbg !3343
  store i8* %3, i8** %__mptr, align 8, !dbg !3343
  br label %do.body, !dbg !3343

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !3344

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !3343
  %add.ptr = getelementptr i8, i8* %4, i64 -184, !dbg !3343
  %5 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !3343
  store %struct.clk_core* %5, %struct.clk_core** %tmp1, align 8, !dbg !3344
  %6 = load %struct.clk_core*, %struct.clk_core** %tmp1, align 8, !dbg !3343
  br label %cond.end, !dbg !3340

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3340

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %6, %do.end ], [ null, %cond.false ], !dbg !3340
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !3340
  %7 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !3340
  store %struct.clk_core* %7, %struct.clk_core** %clk, align 8, !dbg !3346
  br label %for.cond, !dbg !3346

for.cond:                                         ; preds = %cond.end13, %cond.end
  %8 = load %struct.clk_core*, %struct.clk_core** %clk, align 8, !dbg !3347
  %tobool2 = icmp ne %struct.clk_core* %8, null, !dbg !3346
  br i1 %tobool2, label %for.body, label %for.end, !dbg !3346

for.body:                                         ; preds = %for.cond
  %9 = load %struct.clk_core*, %struct.clk_core** %clk, align 8, !dbg !3349
  %call = call i32 @clk_core_save_context(%struct.clk_core* %9) #11, !dbg !3351
  store i32 %call, i32* %ret, align 4, !dbg !3352
  %10 = load i32, i32* %ret, align 4, !dbg !3353
  %cmp = icmp slt i32 %10, 0, !dbg !3355
  br i1 %cmp, label %if.then, label %if.end, !dbg !3356

if.then:                                          ; preds = %for.body
  %11 = load i32, i32* %ret, align 4, !dbg !3357
  store i32 %11, i32* %retval, align 4, !dbg !3358
  br label %return, !dbg !3358

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3359

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr3, metadata !3360, metadata !DIExpression()), !dbg !3362
  %12 = load %struct.clk_core*, %struct.clk_core** %clk, align 8, !dbg !3362
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %12, i32 0, i32 27, !dbg !3362
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !3362
  %13 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !3362
  store %struct.hlist_node* %13, %struct.hlist_node** %____ptr3, align 8, !dbg !3362
  %14 = load %struct.hlist_node*, %struct.hlist_node** %____ptr3, align 8, !dbg !3362
  %tobool5 = icmp ne %struct.hlist_node* %14, null, !dbg !3362
  br i1 %tobool5, label %cond.true6, label %cond.false12, !dbg !3362

cond.true6:                                       ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !3363, metadata !DIExpression()), !dbg !3365
  %15 = load %struct.hlist_node*, %struct.hlist_node** %____ptr3, align 8, !dbg !3365
  %16 = bitcast %struct.hlist_node* %15 to i8*, !dbg !3365
  store i8* %16, i8** %__mptr7, align 8, !dbg !3365
  br label %do.body8, !dbg !3365

do.body8:                                         ; preds = %cond.true6
  br label %do.end9, !dbg !3366

do.end9:                                          ; preds = %do.body8
  %17 = load i8*, i8** %__mptr7, align 8, !dbg !3365
  %add.ptr11 = getelementptr i8, i8* %17, i64 -184, !dbg !3365
  %18 = bitcast i8* %add.ptr11 to %struct.clk_core*, !dbg !3365
  store %struct.clk_core* %18, %struct.clk_core** %tmp10, align 8, !dbg !3366
  %19 = load %struct.clk_core*, %struct.clk_core** %tmp10, align 8, !dbg !3365
  br label %cond.end13, !dbg !3362

cond.false12:                                     ; preds = %for.inc
  br label %cond.end13, !dbg !3362

cond.end13:                                       ; preds = %cond.false12, %do.end9
  %cond14 = phi %struct.clk_core* [ %19, %do.end9 ], [ null, %cond.false12 ], !dbg !3362
  store %struct.clk_core* %cond14, %struct.clk_core** %tmp4, align 8, !dbg !3362
  %20 = load %struct.clk_core*, %struct.clk_core** %tmp4, align 8, !dbg !3362
  store %struct.clk_core* %20, %struct.clk_core** %clk, align 8, !dbg !3347
  br label %for.cond, !dbg !3347, !llvm.loop !3368

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr15, metadata !3370, metadata !DIExpression()), !dbg !3373
  %21 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_orphan_list, i32 0, i32 0), align 8, !dbg !3373
  store %struct.hlist_node* %21, %struct.hlist_node** %____ptr15, align 8, !dbg !3373
  %22 = load %struct.hlist_node*, %struct.hlist_node** %____ptr15, align 8, !dbg !3373
  %tobool17 = icmp ne %struct.hlist_node* %22, null, !dbg !3373
  br i1 %tobool17, label %cond.true18, label %cond.false24, !dbg !3373

cond.true18:                                      ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !3374, metadata !DIExpression()), !dbg !3376
  %23 = load %struct.hlist_node*, %struct.hlist_node** %____ptr15, align 8, !dbg !3376
  %24 = bitcast %struct.hlist_node* %23 to i8*, !dbg !3376
  store i8* %24, i8** %__mptr19, align 8, !dbg !3376
  br label %do.body20, !dbg !3376

do.body20:                                        ; preds = %cond.true18
  br label %do.end21, !dbg !3377

do.end21:                                         ; preds = %do.body20
  %25 = load i8*, i8** %__mptr19, align 8, !dbg !3376
  %add.ptr23 = getelementptr i8, i8* %25, i64 -184, !dbg !3376
  %26 = bitcast i8* %add.ptr23 to %struct.clk_core*, !dbg !3376
  store %struct.clk_core* %26, %struct.clk_core** %tmp22, align 8, !dbg !3377
  %27 = load %struct.clk_core*, %struct.clk_core** %tmp22, align 8, !dbg !3376
  br label %cond.end25, !dbg !3373

cond.false24:                                     ; preds = %for.end
  br label %cond.end25, !dbg !3373

cond.end25:                                       ; preds = %cond.false24, %do.end21
  %cond26 = phi %struct.clk_core* [ %27, %do.end21 ], [ null, %cond.false24 ], !dbg !3373
  store %struct.clk_core* %cond26, %struct.clk_core** %tmp16, align 8, !dbg !3373
  %28 = load %struct.clk_core*, %struct.clk_core** %tmp16, align 8, !dbg !3373
  store %struct.clk_core* %28, %struct.clk_core** %clk, align 8, !dbg !3379
  br label %for.cond27, !dbg !3379

for.cond27:                                       ; preds = %cond.end47, %cond.end25
  %29 = load %struct.clk_core*, %struct.clk_core** %clk, align 8, !dbg !3380
  %tobool28 = icmp ne %struct.clk_core* %29, null, !dbg !3379
  br i1 %tobool28, label %for.body29, label %for.end49, !dbg !3379

for.body29:                                       ; preds = %for.cond27
  %30 = load %struct.clk_core*, %struct.clk_core** %clk, align 8, !dbg !3382
  %call30 = call i32 @clk_core_save_context(%struct.clk_core* %30) #11, !dbg !3384
  store i32 %call30, i32* %ret, align 4, !dbg !3385
  %31 = load i32, i32* %ret, align 4, !dbg !3386
  %cmp31 = icmp slt i32 %31, 0, !dbg !3388
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !3389

if.then32:                                        ; preds = %for.body29
  %32 = load i32, i32* %ret, align 4, !dbg !3390
  store i32 %32, i32* %retval, align 4, !dbg !3391
  br label %return, !dbg !3391

if.end33:                                         ; preds = %for.body29
  br label %for.inc34, !dbg !3392

for.inc34:                                        ; preds = %if.end33
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr35, metadata !3393, metadata !DIExpression()), !dbg !3395
  %33 = load %struct.clk_core*, %struct.clk_core** %clk, align 8, !dbg !3395
  %child_node36 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %33, i32 0, i32 27, !dbg !3395
  %next37 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node36, i32 0, i32 0, !dbg !3395
  %34 = load %struct.hlist_node*, %struct.hlist_node** %next37, align 8, !dbg !3395
  store %struct.hlist_node* %34, %struct.hlist_node** %____ptr35, align 8, !dbg !3395
  %35 = load %struct.hlist_node*, %struct.hlist_node** %____ptr35, align 8, !dbg !3395
  %tobool39 = icmp ne %struct.hlist_node* %35, null, !dbg !3395
  br i1 %tobool39, label %cond.true40, label %cond.false46, !dbg !3395

cond.true40:                                      ; preds = %for.inc34
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !3396, metadata !DIExpression()), !dbg !3398
  %36 = load %struct.hlist_node*, %struct.hlist_node** %____ptr35, align 8, !dbg !3398
  %37 = bitcast %struct.hlist_node* %36 to i8*, !dbg !3398
  store i8* %37, i8** %__mptr41, align 8, !dbg !3398
  br label %do.body42, !dbg !3398

do.body42:                                        ; preds = %cond.true40
  br label %do.end43, !dbg !3399

do.end43:                                         ; preds = %do.body42
  %38 = load i8*, i8** %__mptr41, align 8, !dbg !3398
  %add.ptr45 = getelementptr i8, i8* %38, i64 -184, !dbg !3398
  %39 = bitcast i8* %add.ptr45 to %struct.clk_core*, !dbg !3398
  store %struct.clk_core* %39, %struct.clk_core** %tmp44, align 8, !dbg !3399
  %40 = load %struct.clk_core*, %struct.clk_core** %tmp44, align 8, !dbg !3398
  br label %cond.end47, !dbg !3395

cond.false46:                                     ; preds = %for.inc34
  br label %cond.end47, !dbg !3395

cond.end47:                                       ; preds = %cond.false46, %do.end43
  %cond48 = phi %struct.clk_core* [ %40, %do.end43 ], [ null, %cond.false46 ], !dbg !3395
  store %struct.clk_core* %cond48, %struct.clk_core** %tmp38, align 8, !dbg !3395
  %41 = load %struct.clk_core*, %struct.clk_core** %tmp38, align 8, !dbg !3395
  store %struct.clk_core* %41, %struct.clk_core** %clk, align 8, !dbg !3380
  br label %for.cond27, !dbg !3380, !llvm.loop !3401

for.end49:                                        ; preds = %for.cond27
  store i32 0, i32* %retval, align 4, !dbg !3403
  br label %return, !dbg !3403

return:                                           ; preds = %for.end49, %if.then32, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !3404
  ret i32 %42, !dbg !3404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_save_context(%struct.clk_core* %core) #0 !dbg !3405 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %child = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.clk_core*, align 8
  %____ptr3 = alloca %struct.hlist_node*, align 8
  %tmp4 = alloca %struct.clk_core*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp10 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3406, metadata !DIExpression()), !dbg !3407
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !3408, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3410, metadata !DIExpression()), !dbg !3411
  store i32 0, i32* %ret, align 4, !dbg !3411
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !3412, metadata !DIExpression()), !dbg !3415
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3415
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 26, !dbg !3415
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !3415
  %1 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !3415
  store %struct.hlist_node* %1, %struct.hlist_node** %____ptr, align 8, !dbg !3415
  %2 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3415
  %tobool = icmp ne %struct.hlist_node* %2, null, !dbg !3415
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3415

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !3416, metadata !DIExpression()), !dbg !3418
  %3 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3418
  %4 = bitcast %struct.hlist_node* %3 to i8*, !dbg !3418
  store i8* %4, i8** %__mptr, align 8, !dbg !3418
  br label %do.body, !dbg !3418

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !3419

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !3418
  %add.ptr = getelementptr i8, i8* %5, i64 -184, !dbg !3418
  %6 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !3418
  store %struct.clk_core* %6, %struct.clk_core** %tmp1, align 8, !dbg !3419
  %7 = load %struct.clk_core*, %struct.clk_core** %tmp1, align 8, !dbg !3418
  br label %cond.end, !dbg !3415

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3415

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %7, %do.end ], [ null, %cond.false ], !dbg !3415
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !3415
  %8 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !3415
  store %struct.clk_core* %8, %struct.clk_core** %child, align 8, !dbg !3421
  br label %for.cond, !dbg !3421

for.cond:                                         ; preds = %cond.end13, %cond.end
  %9 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !3422
  %tobool2 = icmp ne %struct.clk_core* %9, null, !dbg !3421
  br i1 %tobool2, label %for.body, label %for.end, !dbg !3421

for.body:                                         ; preds = %for.cond
  %10 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !3424
  %call = call i32 @clk_core_save_context(%struct.clk_core* %10) #11, !dbg !3426
  store i32 %call, i32* %ret, align 4, !dbg !3427
  %11 = load i32, i32* %ret, align 4, !dbg !3428
  %cmp = icmp slt i32 %11, 0, !dbg !3430
  br i1 %cmp, label %if.then, label %if.end, !dbg !3431

if.then:                                          ; preds = %for.body
  %12 = load i32, i32* %ret, align 4, !dbg !3432
  store i32 %12, i32* %retval, align 4, !dbg !3433
  br label %return, !dbg !3433

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3434

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr3, metadata !3435, metadata !DIExpression()), !dbg !3437
  %13 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !3437
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %13, i32 0, i32 27, !dbg !3437
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !3437
  %14 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !3437
  store %struct.hlist_node* %14, %struct.hlist_node** %____ptr3, align 8, !dbg !3437
  %15 = load %struct.hlist_node*, %struct.hlist_node** %____ptr3, align 8, !dbg !3437
  %tobool5 = icmp ne %struct.hlist_node* %15, null, !dbg !3437
  br i1 %tobool5, label %cond.true6, label %cond.false12, !dbg !3437

cond.true6:                                       ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !3438, metadata !DIExpression()), !dbg !3440
  %16 = load %struct.hlist_node*, %struct.hlist_node** %____ptr3, align 8, !dbg !3440
  %17 = bitcast %struct.hlist_node* %16 to i8*, !dbg !3440
  store i8* %17, i8** %__mptr7, align 8, !dbg !3440
  br label %do.body8, !dbg !3440

do.body8:                                         ; preds = %cond.true6
  br label %do.end9, !dbg !3441

do.end9:                                          ; preds = %do.body8
  %18 = load i8*, i8** %__mptr7, align 8, !dbg !3440
  %add.ptr11 = getelementptr i8, i8* %18, i64 -184, !dbg !3440
  %19 = bitcast i8* %add.ptr11 to %struct.clk_core*, !dbg !3440
  store %struct.clk_core* %19, %struct.clk_core** %tmp10, align 8, !dbg !3441
  %20 = load %struct.clk_core*, %struct.clk_core** %tmp10, align 8, !dbg !3440
  br label %cond.end13, !dbg !3437

cond.false12:                                     ; preds = %for.inc
  br label %cond.end13, !dbg !3437

cond.end13:                                       ; preds = %cond.false12, %do.end9
  %cond14 = phi %struct.clk_core* [ %20, %do.end9 ], [ null, %cond.false12 ], !dbg !3437
  store %struct.clk_core* %cond14, %struct.clk_core** %tmp4, align 8, !dbg !3437
  %21 = load %struct.clk_core*, %struct.clk_core** %tmp4, align 8, !dbg !3437
  store %struct.clk_core* %21, %struct.clk_core** %child, align 8, !dbg !3422
  br label %for.cond, !dbg !3422, !llvm.loop !3443

for.end:                                          ; preds = %for.cond
  %22 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3445
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %22, i32 0, i32 1, !dbg !3447
  %23 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !3447
  %tobool15 = icmp ne %struct.clk_ops* %23, null, !dbg !3445
  br i1 %tobool15, label %land.lhs.true, label %if.end22, !dbg !3448

land.lhs.true:                                    ; preds = %for.end
  %24 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3449
  %ops16 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %24, i32 0, i32 1, !dbg !3450
  %25 = load %struct.clk_ops*, %struct.clk_ops** %ops16, align 8, !dbg !3450
  %save_context = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %25, i32 0, i32 8, !dbg !3451
  %26 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %save_context, align 8, !dbg !3451
  %tobool17 = icmp ne i32 (%struct.clk_hw*)* %26, null, !dbg !3449
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !3452

if.then18:                                        ; preds = %land.lhs.true
  %27 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3453
  %ops19 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %27, i32 0, i32 1, !dbg !3454
  %28 = load %struct.clk_ops*, %struct.clk_ops** %ops19, align 8, !dbg !3454
  %save_context20 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %28, i32 0, i32 8, !dbg !3455
  %29 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %save_context20, align 8, !dbg !3455
  %30 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3456
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %30, i32 0, i32 2, !dbg !3457
  %31 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !3457
  %call21 = call i32 %29(%struct.clk_hw* %31) #11, !dbg !3453
  store i32 %call21, i32* %ret, align 4, !dbg !3458
  br label %if.end22, !dbg !3459

if.end22:                                         ; preds = %if.then18, %land.lhs.true, %for.end
  %32 = load i32, i32* %ret, align 4, !dbg !3460
  store i32 %32, i32* %retval, align 4, !dbg !3461
  br label %return, !dbg !3461

return:                                           ; preds = %if.end22, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !3462
  ret i32 %33, !dbg !3462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @clk_restore_context() #0 !dbg !3463 {
entry:
  %core = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.clk_core*, align 8
  %____ptr3 = alloca %struct.hlist_node*, align 8
  %tmp4 = alloca %struct.clk_core*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp10 = alloca %struct.clk_core*, align 8
  %____ptr15 = alloca %struct.hlist_node*, align 8
  %tmp16 = alloca %struct.clk_core*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp22 = alloca %struct.clk_core*, align 8
  %____ptr31 = alloca %struct.hlist_node*, align 8
  %tmp34 = alloca %struct.clk_core*, align 8
  %__mptr37 = alloca i8*, align 8
  %tmp40 = alloca %struct.clk_core*, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core, metadata !3464, metadata !DIExpression()), !dbg !3465
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !3466, metadata !DIExpression()), !dbg !3469
  %0 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_root_list, i32 0, i32 0), align 8, !dbg !3469
  store %struct.hlist_node* %0, %struct.hlist_node** %____ptr, align 8, !dbg !3469
  %1 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3469
  %tobool = icmp ne %struct.hlist_node* %1, null, !dbg !3469
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3469

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !3470, metadata !DIExpression()), !dbg !3472
  %2 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3472
  %3 = bitcast %struct.hlist_node* %2 to i8*, !dbg !3472
  store i8* %3, i8** %__mptr, align 8, !dbg !3472
  br label %do.body, !dbg !3472

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !3473

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !3472
  %add.ptr = getelementptr i8, i8* %4, i64 -184, !dbg !3472
  %5 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !3472
  store %struct.clk_core* %5, %struct.clk_core** %tmp1, align 8, !dbg !3473
  %6 = load %struct.clk_core*, %struct.clk_core** %tmp1, align 8, !dbg !3472
  br label %cond.end, !dbg !3469

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3469

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %6, %do.end ], [ null, %cond.false ], !dbg !3469
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !3469
  %7 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !3469
  store %struct.clk_core* %7, %struct.clk_core** %core, align 8, !dbg !3475
  br label %for.cond, !dbg !3475

for.cond:                                         ; preds = %cond.end13, %cond.end
  %8 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3476
  %tobool2 = icmp ne %struct.clk_core* %8, null, !dbg !3475
  br i1 %tobool2, label %for.body, label %for.end, !dbg !3475

for.body:                                         ; preds = %for.cond
  %9 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3478
  call void @clk_core_restore_context(%struct.clk_core* %9) #11, !dbg !3479
  br label %for.inc, !dbg !3479

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr3, metadata !3480, metadata !DIExpression()), !dbg !3482
  %10 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3482
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 27, !dbg !3482
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !3482
  %11 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !3482
  store %struct.hlist_node* %11, %struct.hlist_node** %____ptr3, align 8, !dbg !3482
  %12 = load %struct.hlist_node*, %struct.hlist_node** %____ptr3, align 8, !dbg !3482
  %tobool5 = icmp ne %struct.hlist_node* %12, null, !dbg !3482
  br i1 %tobool5, label %cond.true6, label %cond.false12, !dbg !3482

cond.true6:                                       ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !3483, metadata !DIExpression()), !dbg !3485
  %13 = load %struct.hlist_node*, %struct.hlist_node** %____ptr3, align 8, !dbg !3485
  %14 = bitcast %struct.hlist_node* %13 to i8*, !dbg !3485
  store i8* %14, i8** %__mptr7, align 8, !dbg !3485
  br label %do.body8, !dbg !3485

do.body8:                                         ; preds = %cond.true6
  br label %do.end9, !dbg !3486

do.end9:                                          ; preds = %do.body8
  %15 = load i8*, i8** %__mptr7, align 8, !dbg !3485
  %add.ptr11 = getelementptr i8, i8* %15, i64 -184, !dbg !3485
  %16 = bitcast i8* %add.ptr11 to %struct.clk_core*, !dbg !3485
  store %struct.clk_core* %16, %struct.clk_core** %tmp10, align 8, !dbg !3486
  %17 = load %struct.clk_core*, %struct.clk_core** %tmp10, align 8, !dbg !3485
  br label %cond.end13, !dbg !3482

cond.false12:                                     ; preds = %for.inc
  br label %cond.end13, !dbg !3482

cond.end13:                                       ; preds = %cond.false12, %do.end9
  %cond14 = phi %struct.clk_core* [ %17, %do.end9 ], [ null, %cond.false12 ], !dbg !3482
  store %struct.clk_core* %cond14, %struct.clk_core** %tmp4, align 8, !dbg !3482
  %18 = load %struct.clk_core*, %struct.clk_core** %tmp4, align 8, !dbg !3482
  store %struct.clk_core* %18, %struct.clk_core** %core, align 8, !dbg !3476
  br label %for.cond, !dbg !3476, !llvm.loop !3488

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr15, metadata !3490, metadata !DIExpression()), !dbg !3493
  %19 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_orphan_list, i32 0, i32 0), align 8, !dbg !3493
  store %struct.hlist_node* %19, %struct.hlist_node** %____ptr15, align 8, !dbg !3493
  %20 = load %struct.hlist_node*, %struct.hlist_node** %____ptr15, align 8, !dbg !3493
  %tobool17 = icmp ne %struct.hlist_node* %20, null, !dbg !3493
  br i1 %tobool17, label %cond.true18, label %cond.false24, !dbg !3493

cond.true18:                                      ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !3494, metadata !DIExpression()), !dbg !3496
  %21 = load %struct.hlist_node*, %struct.hlist_node** %____ptr15, align 8, !dbg !3496
  %22 = bitcast %struct.hlist_node* %21 to i8*, !dbg !3496
  store i8* %22, i8** %__mptr19, align 8, !dbg !3496
  br label %do.body20, !dbg !3496

do.body20:                                        ; preds = %cond.true18
  br label %do.end21, !dbg !3497

do.end21:                                         ; preds = %do.body20
  %23 = load i8*, i8** %__mptr19, align 8, !dbg !3496
  %add.ptr23 = getelementptr i8, i8* %23, i64 -184, !dbg !3496
  %24 = bitcast i8* %add.ptr23 to %struct.clk_core*, !dbg !3496
  store %struct.clk_core* %24, %struct.clk_core** %tmp22, align 8, !dbg !3497
  %25 = load %struct.clk_core*, %struct.clk_core** %tmp22, align 8, !dbg !3496
  br label %cond.end25, !dbg !3493

cond.false24:                                     ; preds = %for.end
  br label %cond.end25, !dbg !3493

cond.end25:                                       ; preds = %cond.false24, %do.end21
  %cond26 = phi %struct.clk_core* [ %25, %do.end21 ], [ null, %cond.false24 ], !dbg !3493
  store %struct.clk_core* %cond26, %struct.clk_core** %tmp16, align 8, !dbg !3493
  %26 = load %struct.clk_core*, %struct.clk_core** %tmp16, align 8, !dbg !3493
  store %struct.clk_core* %26, %struct.clk_core** %core, align 8, !dbg !3499
  br label %for.cond27, !dbg !3499

for.cond27:                                       ; preds = %cond.end43, %cond.end25
  %27 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3500
  %tobool28 = icmp ne %struct.clk_core* %27, null, !dbg !3499
  br i1 %tobool28, label %for.body29, label %for.end45, !dbg !3499

for.body29:                                       ; preds = %for.cond27
  %28 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3502
  call void @clk_core_restore_context(%struct.clk_core* %28) #11, !dbg !3503
  br label %for.inc30, !dbg !3503

for.inc30:                                        ; preds = %for.body29
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr31, metadata !3504, metadata !DIExpression()), !dbg !3506
  %29 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3506
  %child_node32 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %29, i32 0, i32 27, !dbg !3506
  %next33 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node32, i32 0, i32 0, !dbg !3506
  %30 = load %struct.hlist_node*, %struct.hlist_node** %next33, align 8, !dbg !3506
  store %struct.hlist_node* %30, %struct.hlist_node** %____ptr31, align 8, !dbg !3506
  %31 = load %struct.hlist_node*, %struct.hlist_node** %____ptr31, align 8, !dbg !3506
  %tobool35 = icmp ne %struct.hlist_node* %31, null, !dbg !3506
  br i1 %tobool35, label %cond.true36, label %cond.false42, !dbg !3506

cond.true36:                                      ; preds = %for.inc30
  call void @llvm.dbg.declare(metadata i8** %__mptr37, metadata !3507, metadata !DIExpression()), !dbg !3509
  %32 = load %struct.hlist_node*, %struct.hlist_node** %____ptr31, align 8, !dbg !3509
  %33 = bitcast %struct.hlist_node* %32 to i8*, !dbg !3509
  store i8* %33, i8** %__mptr37, align 8, !dbg !3509
  br label %do.body38, !dbg !3509

do.body38:                                        ; preds = %cond.true36
  br label %do.end39, !dbg !3510

do.end39:                                         ; preds = %do.body38
  %34 = load i8*, i8** %__mptr37, align 8, !dbg !3509
  %add.ptr41 = getelementptr i8, i8* %34, i64 -184, !dbg !3509
  %35 = bitcast i8* %add.ptr41 to %struct.clk_core*, !dbg !3509
  store %struct.clk_core* %35, %struct.clk_core** %tmp40, align 8, !dbg !3510
  %36 = load %struct.clk_core*, %struct.clk_core** %tmp40, align 8, !dbg !3509
  br label %cond.end43, !dbg !3506

cond.false42:                                     ; preds = %for.inc30
  br label %cond.end43, !dbg !3506

cond.end43:                                       ; preds = %cond.false42, %do.end39
  %cond44 = phi %struct.clk_core* [ %36, %do.end39 ], [ null, %cond.false42 ], !dbg !3506
  store %struct.clk_core* %cond44, %struct.clk_core** %tmp34, align 8, !dbg !3506
  %37 = load %struct.clk_core*, %struct.clk_core** %tmp34, align 8, !dbg !3506
  store %struct.clk_core* %37, %struct.clk_core** %core, align 8, !dbg !3500
  br label %for.cond27, !dbg !3500, !llvm.loop !3512

for.end45:                                        ; preds = %for.cond27
  ret void, !dbg !3514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_restore_context(%struct.clk_core* %core) #0 !dbg !3515 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %child = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp6 = alloca %struct.clk_core*, align 8
  %____ptr8 = alloca %struct.hlist_node*, align 8
  %tmp9 = alloca %struct.clk_core*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp15 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3516, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !3518, metadata !DIExpression()), !dbg !3519
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3520
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 1, !dbg !3522
  %1 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !3522
  %tobool = icmp ne %struct.clk_ops* %1, null, !dbg !3520
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3523

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3524
  %ops1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 1, !dbg !3525
  %3 = load %struct.clk_ops*, %struct.clk_ops** %ops1, align 8, !dbg !3525
  %restore_context = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %3, i32 0, i32 9, !dbg !3526
  %4 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %restore_context, align 8, !dbg !3526
  %tobool2 = icmp ne void (%struct.clk_hw*)* %4, null, !dbg !3524
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3527

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3528
  %ops3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 1, !dbg !3529
  %6 = load %struct.clk_ops*, %struct.clk_ops** %ops3, align 8, !dbg !3529
  %restore_context4 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %6, i32 0, i32 9, !dbg !3530
  %7 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %restore_context4, align 8, !dbg !3530
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3531
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 2, !dbg !3532
  %9 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !3532
  call void %7(%struct.clk_hw* %9) #11, !dbg !3528
  br label %if.end, !dbg !3528

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !3533, metadata !DIExpression()), !dbg !3536
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3536
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 26, !dbg !3536
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !3536
  %11 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !3536
  store %struct.hlist_node* %11, %struct.hlist_node** %____ptr, align 8, !dbg !3536
  %12 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3536
  %tobool5 = icmp ne %struct.hlist_node* %12, null, !dbg !3536
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !3536

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !3537, metadata !DIExpression()), !dbg !3539
  %13 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3539
  %14 = bitcast %struct.hlist_node* %13 to i8*, !dbg !3539
  store i8* %14, i8** %__mptr, align 8, !dbg !3539
  br label %do.body, !dbg !3539

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !3540

do.end:                                           ; preds = %do.body
  %15 = load i8*, i8** %__mptr, align 8, !dbg !3539
  %add.ptr = getelementptr i8, i8* %15, i64 -184, !dbg !3539
  %16 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !3539
  store %struct.clk_core* %16, %struct.clk_core** %tmp6, align 8, !dbg !3540
  %17 = load %struct.clk_core*, %struct.clk_core** %tmp6, align 8, !dbg !3539
  br label %cond.end, !dbg !3536

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !3536

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %17, %do.end ], [ null, %cond.false ], !dbg !3536
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !3536
  %18 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !3536
  store %struct.clk_core* %18, %struct.clk_core** %child, align 8, !dbg !3542
  br label %for.cond, !dbg !3542

for.cond:                                         ; preds = %cond.end18, %cond.end
  %19 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !3543
  %tobool7 = icmp ne %struct.clk_core* %19, null, !dbg !3542
  br i1 %tobool7, label %for.body, label %for.end, !dbg !3542

for.body:                                         ; preds = %for.cond
  %20 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !3545
  call void @clk_core_restore_context(%struct.clk_core* %20) #11, !dbg !3546
  br label %for.inc, !dbg !3546

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr8, metadata !3547, metadata !DIExpression()), !dbg !3549
  %21 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !3549
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %21, i32 0, i32 27, !dbg !3549
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !3549
  %22 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !3549
  store %struct.hlist_node* %22, %struct.hlist_node** %____ptr8, align 8, !dbg !3549
  %23 = load %struct.hlist_node*, %struct.hlist_node** %____ptr8, align 8, !dbg !3549
  %tobool10 = icmp ne %struct.hlist_node* %23, null, !dbg !3549
  br i1 %tobool10, label %cond.true11, label %cond.false17, !dbg !3549

cond.true11:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !3550, metadata !DIExpression()), !dbg !3552
  %24 = load %struct.hlist_node*, %struct.hlist_node** %____ptr8, align 8, !dbg !3552
  %25 = bitcast %struct.hlist_node* %24 to i8*, !dbg !3552
  store i8* %25, i8** %__mptr12, align 8, !dbg !3552
  br label %do.body13, !dbg !3552

do.body13:                                        ; preds = %cond.true11
  br label %do.end14, !dbg !3553

do.end14:                                         ; preds = %do.body13
  %26 = load i8*, i8** %__mptr12, align 8, !dbg !3552
  %add.ptr16 = getelementptr i8, i8* %26, i64 -184, !dbg !3552
  %27 = bitcast i8* %add.ptr16 to %struct.clk_core*, !dbg !3552
  store %struct.clk_core* %27, %struct.clk_core** %tmp15, align 8, !dbg !3553
  %28 = load %struct.clk_core*, %struct.clk_core** %tmp15, align 8, !dbg !3552
  br label %cond.end18, !dbg !3549

cond.false17:                                     ; preds = %for.inc
  br label %cond.end18, !dbg !3549

cond.end18:                                       ; preds = %cond.false17, %do.end14
  %cond19 = phi %struct.clk_core* [ %28, %do.end14 ], [ null, %cond.false17 ], !dbg !3549
  store %struct.clk_core* %cond19, %struct.clk_core** %tmp9, align 8, !dbg !3549
  %29 = load %struct.clk_core*, %struct.clk_core** %tmp9, align 8, !dbg !3549
  store %struct.clk_core* %29, %struct.clk_core** %child, align 8, !dbg !3543
  br label %for.cond, !dbg !3543, !llvm.loop !3555

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_enable(%struct.clk* %clk) #0 !dbg !3558 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !3559, metadata !DIExpression()), !dbg !3560
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3561
  %tobool = icmp ne %struct.clk* %0, null, !dbg !3561
  br i1 %tobool, label %if.end, label %if.then, !dbg !3563

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3564
  br label %return, !dbg !3564

if.end:                                           ; preds = %entry
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3565
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !3566
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3566
  %call = call i32 @clk_core_enable_lock(%struct.clk_core* %2) #11, !dbg !3567
  store i32 %call, i32* %retval, align 4, !dbg !3568
  br label %return, !dbg !3568

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !3569
  ret i32 %3, !dbg !3569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_enable_lock(%struct.clk_core* %core) #0 !dbg !3570 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3571, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3575, metadata !DIExpression()), !dbg !3576
  %call = call i64 @clk_enable_lock() #11, !dbg !3577
  store i64 %call, i64* %flags, align 8, !dbg !3578
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3579
  %call1 = call i32 @clk_core_enable(%struct.clk_core* %0) #11, !dbg !3580
  store i32 %call1, i32* %ret, align 4, !dbg !3581
  %1 = load i64, i64* %flags, align 8, !dbg !3582
  call void @clk_enable_unlock(i64 %1) #11, !dbg !3583
  %2 = load i32, i32* %ret, align 4, !dbg !3584
  ret i32 %2, !dbg !3585
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_ignore_unused_setup(i8* %__unused) #3 section ".init.text" !dbg !3586 {
entry:
  %__unused.addr = alloca i8*, align 8
  store i8* %__unused, i8** %__unused.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__unused.addr, metadata !3587, metadata !DIExpression()), !dbg !3588
  store i8 1, i8* @clk_ignore_unused, align 1, !dbg !3589
  ret i32 1, !dbg !3590
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_disable_unused() #3 section ".init.text" !dbg !3591 {
entry:
  %retval = alloca i32, align 4
  %core = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.clk_core*, align 8
  %____ptr4 = alloca %struct.hlist_node*, align 8
  %tmp5 = alloca %struct.clk_core*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp11 = alloca %struct.clk_core*, align 8
  %____ptr16 = alloca %struct.hlist_node*, align 8
  %tmp17 = alloca %struct.clk_core*, align 8
  %__mptr20 = alloca i8*, align 8
  %tmp23 = alloca %struct.clk_core*, align 8
  %____ptr32 = alloca %struct.hlist_node*, align 8
  %tmp35 = alloca %struct.clk_core*, align 8
  %__mptr38 = alloca i8*, align 8
  %tmp41 = alloca %struct.clk_core*, align 8
  %____ptr47 = alloca %struct.hlist_node*, align 8
  %tmp48 = alloca %struct.clk_core*, align 8
  %__mptr51 = alloca i8*, align 8
  %tmp54 = alloca %struct.clk_core*, align 8
  %____ptr63 = alloca %struct.hlist_node*, align 8
  %tmp66 = alloca %struct.clk_core*, align 8
  %__mptr69 = alloca i8*, align 8
  %tmp72 = alloca %struct.clk_core*, align 8
  %____ptr78 = alloca %struct.hlist_node*, align 8
  %tmp79 = alloca %struct.clk_core*, align 8
  %__mptr82 = alloca i8*, align 8
  %tmp85 = alloca %struct.clk_core*, align 8
  %____ptr94 = alloca %struct.hlist_node*, align 8
  %tmp97 = alloca %struct.clk_core*, align 8
  %__mptr100 = alloca i8*, align 8
  %tmp103 = alloca %struct.clk_core*, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core, metadata !3592, metadata !DIExpression()), !dbg !3593
  %0 = load i8, i8* @clk_ignore_unused, align 1, !dbg !3594
  %tobool = trunc i8 %0 to i1, !dbg !3594
  br i1 %tobool, label %if.then, label %if.end, !dbg !3596

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19, i64 0, i64 0)) #13, !dbg !3597
  store i32 0, i32* %retval, align 4, !dbg !3599
  br label %return, !dbg !3599

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !3600
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !3601, metadata !DIExpression()), !dbg !3604
  %1 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_root_list, i32 0, i32 0), align 8, !dbg !3604
  store %struct.hlist_node* %1, %struct.hlist_node** %____ptr, align 8, !dbg !3604
  %2 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3604
  %tobool1 = icmp ne %struct.hlist_node* %2, null, !dbg !3604
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !3604

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !3605, metadata !DIExpression()), !dbg !3607
  %3 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3607
  %4 = bitcast %struct.hlist_node* %3 to i8*, !dbg !3607
  store i8* %4, i8** %__mptr, align 8, !dbg !3607
  br label %do.body, !dbg !3607

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !3608

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !3607
  %add.ptr = getelementptr i8, i8* %5, i64 -184, !dbg !3607
  %6 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !3607
  store %struct.clk_core* %6, %struct.clk_core** %tmp2, align 8, !dbg !3608
  %7 = load %struct.clk_core*, %struct.clk_core** %tmp2, align 8, !dbg !3607
  br label %cond.end, !dbg !3604

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !3604

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %7, %do.end ], [ null, %cond.false ], !dbg !3604
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !3604
  %8 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !3604
  store %struct.clk_core* %8, %struct.clk_core** %core, align 8, !dbg !3610
  br label %for.cond, !dbg !3610

for.cond:                                         ; preds = %cond.end14, %cond.end
  %9 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3611
  %tobool3 = icmp ne %struct.clk_core* %9, null, !dbg !3610
  br i1 %tobool3, label %for.body, label %for.end, !dbg !3610

for.body:                                         ; preds = %for.cond
  %10 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3613
  call void @clk_disable_unused_subtree(%struct.clk_core* %10) #13, !dbg !3614
  br label %for.inc, !dbg !3614

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr4, metadata !3615, metadata !DIExpression()), !dbg !3617
  %11 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3617
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 27, !dbg !3617
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !3617
  %12 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !3617
  store %struct.hlist_node* %12, %struct.hlist_node** %____ptr4, align 8, !dbg !3617
  %13 = load %struct.hlist_node*, %struct.hlist_node** %____ptr4, align 8, !dbg !3617
  %tobool6 = icmp ne %struct.hlist_node* %13, null, !dbg !3617
  br i1 %tobool6, label %cond.true7, label %cond.false13, !dbg !3617

cond.true7:                                       ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !3618, metadata !DIExpression()), !dbg !3620
  %14 = load %struct.hlist_node*, %struct.hlist_node** %____ptr4, align 8, !dbg !3620
  %15 = bitcast %struct.hlist_node* %14 to i8*, !dbg !3620
  store i8* %15, i8** %__mptr8, align 8, !dbg !3620
  br label %do.body9, !dbg !3620

do.body9:                                         ; preds = %cond.true7
  br label %do.end10, !dbg !3621

do.end10:                                         ; preds = %do.body9
  %16 = load i8*, i8** %__mptr8, align 8, !dbg !3620
  %add.ptr12 = getelementptr i8, i8* %16, i64 -184, !dbg !3620
  %17 = bitcast i8* %add.ptr12 to %struct.clk_core*, !dbg !3620
  store %struct.clk_core* %17, %struct.clk_core** %tmp11, align 8, !dbg !3621
  %18 = load %struct.clk_core*, %struct.clk_core** %tmp11, align 8, !dbg !3620
  br label %cond.end14, !dbg !3617

cond.false13:                                     ; preds = %for.inc
  br label %cond.end14, !dbg !3617

cond.end14:                                       ; preds = %cond.false13, %do.end10
  %cond15 = phi %struct.clk_core* [ %18, %do.end10 ], [ null, %cond.false13 ], !dbg !3617
  store %struct.clk_core* %cond15, %struct.clk_core** %tmp5, align 8, !dbg !3617
  %19 = load %struct.clk_core*, %struct.clk_core** %tmp5, align 8, !dbg !3617
  store %struct.clk_core* %19, %struct.clk_core** %core, align 8, !dbg !3611
  br label %for.cond, !dbg !3611, !llvm.loop !3623

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr16, metadata !3625, metadata !DIExpression()), !dbg !3628
  %20 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_orphan_list, i32 0, i32 0), align 8, !dbg !3628
  store %struct.hlist_node* %20, %struct.hlist_node** %____ptr16, align 8, !dbg !3628
  %21 = load %struct.hlist_node*, %struct.hlist_node** %____ptr16, align 8, !dbg !3628
  %tobool18 = icmp ne %struct.hlist_node* %21, null, !dbg !3628
  br i1 %tobool18, label %cond.true19, label %cond.false25, !dbg !3628

cond.true19:                                      ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr20, metadata !3629, metadata !DIExpression()), !dbg !3631
  %22 = load %struct.hlist_node*, %struct.hlist_node** %____ptr16, align 8, !dbg !3631
  %23 = bitcast %struct.hlist_node* %22 to i8*, !dbg !3631
  store i8* %23, i8** %__mptr20, align 8, !dbg !3631
  br label %do.body21, !dbg !3631

do.body21:                                        ; preds = %cond.true19
  br label %do.end22, !dbg !3632

do.end22:                                         ; preds = %do.body21
  %24 = load i8*, i8** %__mptr20, align 8, !dbg !3631
  %add.ptr24 = getelementptr i8, i8* %24, i64 -184, !dbg !3631
  %25 = bitcast i8* %add.ptr24 to %struct.clk_core*, !dbg !3631
  store %struct.clk_core* %25, %struct.clk_core** %tmp23, align 8, !dbg !3632
  %26 = load %struct.clk_core*, %struct.clk_core** %tmp23, align 8, !dbg !3631
  br label %cond.end26, !dbg !3628

cond.false25:                                     ; preds = %for.end
  br label %cond.end26, !dbg !3628

cond.end26:                                       ; preds = %cond.false25, %do.end22
  %cond27 = phi %struct.clk_core* [ %26, %do.end22 ], [ null, %cond.false25 ], !dbg !3628
  store %struct.clk_core* %cond27, %struct.clk_core** %tmp17, align 8, !dbg !3628
  %27 = load %struct.clk_core*, %struct.clk_core** %tmp17, align 8, !dbg !3628
  store %struct.clk_core* %27, %struct.clk_core** %core, align 8, !dbg !3634
  br label %for.cond28, !dbg !3634

for.cond28:                                       ; preds = %cond.end44, %cond.end26
  %28 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3635
  %tobool29 = icmp ne %struct.clk_core* %28, null, !dbg !3634
  br i1 %tobool29, label %for.body30, label %for.end46, !dbg !3634

for.body30:                                       ; preds = %for.cond28
  %29 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3637
  call void @clk_disable_unused_subtree(%struct.clk_core* %29) #13, !dbg !3638
  br label %for.inc31, !dbg !3638

for.inc31:                                        ; preds = %for.body30
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr32, metadata !3639, metadata !DIExpression()), !dbg !3641
  %30 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3641
  %child_node33 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %30, i32 0, i32 27, !dbg !3641
  %next34 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node33, i32 0, i32 0, !dbg !3641
  %31 = load %struct.hlist_node*, %struct.hlist_node** %next34, align 8, !dbg !3641
  store %struct.hlist_node* %31, %struct.hlist_node** %____ptr32, align 8, !dbg !3641
  %32 = load %struct.hlist_node*, %struct.hlist_node** %____ptr32, align 8, !dbg !3641
  %tobool36 = icmp ne %struct.hlist_node* %32, null, !dbg !3641
  br i1 %tobool36, label %cond.true37, label %cond.false43, !dbg !3641

cond.true37:                                      ; preds = %for.inc31
  call void @llvm.dbg.declare(metadata i8** %__mptr38, metadata !3642, metadata !DIExpression()), !dbg !3644
  %33 = load %struct.hlist_node*, %struct.hlist_node** %____ptr32, align 8, !dbg !3644
  %34 = bitcast %struct.hlist_node* %33 to i8*, !dbg !3644
  store i8* %34, i8** %__mptr38, align 8, !dbg !3644
  br label %do.body39, !dbg !3644

do.body39:                                        ; preds = %cond.true37
  br label %do.end40, !dbg !3645

do.end40:                                         ; preds = %do.body39
  %35 = load i8*, i8** %__mptr38, align 8, !dbg !3644
  %add.ptr42 = getelementptr i8, i8* %35, i64 -184, !dbg !3644
  %36 = bitcast i8* %add.ptr42 to %struct.clk_core*, !dbg !3644
  store %struct.clk_core* %36, %struct.clk_core** %tmp41, align 8, !dbg !3645
  %37 = load %struct.clk_core*, %struct.clk_core** %tmp41, align 8, !dbg !3644
  br label %cond.end44, !dbg !3641

cond.false43:                                     ; preds = %for.inc31
  br label %cond.end44, !dbg !3641

cond.end44:                                       ; preds = %cond.false43, %do.end40
  %cond45 = phi %struct.clk_core* [ %37, %do.end40 ], [ null, %cond.false43 ], !dbg !3641
  store %struct.clk_core* %cond45, %struct.clk_core** %tmp35, align 8, !dbg !3641
  %38 = load %struct.clk_core*, %struct.clk_core** %tmp35, align 8, !dbg !3641
  store %struct.clk_core* %38, %struct.clk_core** %core, align 8, !dbg !3635
  br label %for.cond28, !dbg !3635, !llvm.loop !3647

for.end46:                                        ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr47, metadata !3649, metadata !DIExpression()), !dbg !3652
  %39 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_root_list, i32 0, i32 0), align 8, !dbg !3652
  store %struct.hlist_node* %39, %struct.hlist_node** %____ptr47, align 8, !dbg !3652
  %40 = load %struct.hlist_node*, %struct.hlist_node** %____ptr47, align 8, !dbg !3652
  %tobool49 = icmp ne %struct.hlist_node* %40, null, !dbg !3652
  br i1 %tobool49, label %cond.true50, label %cond.false56, !dbg !3652

cond.true50:                                      ; preds = %for.end46
  call void @llvm.dbg.declare(metadata i8** %__mptr51, metadata !3653, metadata !DIExpression()), !dbg !3655
  %41 = load %struct.hlist_node*, %struct.hlist_node** %____ptr47, align 8, !dbg !3655
  %42 = bitcast %struct.hlist_node* %41 to i8*, !dbg !3655
  store i8* %42, i8** %__mptr51, align 8, !dbg !3655
  br label %do.body52, !dbg !3655

do.body52:                                        ; preds = %cond.true50
  br label %do.end53, !dbg !3656

do.end53:                                         ; preds = %do.body52
  %43 = load i8*, i8** %__mptr51, align 8, !dbg !3655
  %add.ptr55 = getelementptr i8, i8* %43, i64 -184, !dbg !3655
  %44 = bitcast i8* %add.ptr55 to %struct.clk_core*, !dbg !3655
  store %struct.clk_core* %44, %struct.clk_core** %tmp54, align 8, !dbg !3656
  %45 = load %struct.clk_core*, %struct.clk_core** %tmp54, align 8, !dbg !3655
  br label %cond.end57, !dbg !3652

cond.false56:                                     ; preds = %for.end46
  br label %cond.end57, !dbg !3652

cond.end57:                                       ; preds = %cond.false56, %do.end53
  %cond58 = phi %struct.clk_core* [ %45, %do.end53 ], [ null, %cond.false56 ], !dbg !3652
  store %struct.clk_core* %cond58, %struct.clk_core** %tmp48, align 8, !dbg !3652
  %46 = load %struct.clk_core*, %struct.clk_core** %tmp48, align 8, !dbg !3652
  store %struct.clk_core* %46, %struct.clk_core** %core, align 8, !dbg !3658
  br label %for.cond59, !dbg !3658

for.cond59:                                       ; preds = %cond.end75, %cond.end57
  %47 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3659
  %tobool60 = icmp ne %struct.clk_core* %47, null, !dbg !3658
  br i1 %tobool60, label %for.body61, label %for.end77, !dbg !3658

for.body61:                                       ; preds = %for.cond59
  %48 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3661
  call void @clk_unprepare_unused_subtree(%struct.clk_core* %48) #13, !dbg !3662
  br label %for.inc62, !dbg !3662

for.inc62:                                        ; preds = %for.body61
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr63, metadata !3663, metadata !DIExpression()), !dbg !3665
  %49 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3665
  %child_node64 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %49, i32 0, i32 27, !dbg !3665
  %next65 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node64, i32 0, i32 0, !dbg !3665
  %50 = load %struct.hlist_node*, %struct.hlist_node** %next65, align 8, !dbg !3665
  store %struct.hlist_node* %50, %struct.hlist_node** %____ptr63, align 8, !dbg !3665
  %51 = load %struct.hlist_node*, %struct.hlist_node** %____ptr63, align 8, !dbg !3665
  %tobool67 = icmp ne %struct.hlist_node* %51, null, !dbg !3665
  br i1 %tobool67, label %cond.true68, label %cond.false74, !dbg !3665

cond.true68:                                      ; preds = %for.inc62
  call void @llvm.dbg.declare(metadata i8** %__mptr69, metadata !3666, metadata !DIExpression()), !dbg !3668
  %52 = load %struct.hlist_node*, %struct.hlist_node** %____ptr63, align 8, !dbg !3668
  %53 = bitcast %struct.hlist_node* %52 to i8*, !dbg !3668
  store i8* %53, i8** %__mptr69, align 8, !dbg !3668
  br label %do.body70, !dbg !3668

do.body70:                                        ; preds = %cond.true68
  br label %do.end71, !dbg !3669

do.end71:                                         ; preds = %do.body70
  %54 = load i8*, i8** %__mptr69, align 8, !dbg !3668
  %add.ptr73 = getelementptr i8, i8* %54, i64 -184, !dbg !3668
  %55 = bitcast i8* %add.ptr73 to %struct.clk_core*, !dbg !3668
  store %struct.clk_core* %55, %struct.clk_core** %tmp72, align 8, !dbg !3669
  %56 = load %struct.clk_core*, %struct.clk_core** %tmp72, align 8, !dbg !3668
  br label %cond.end75, !dbg !3665

cond.false74:                                     ; preds = %for.inc62
  br label %cond.end75, !dbg !3665

cond.end75:                                       ; preds = %cond.false74, %do.end71
  %cond76 = phi %struct.clk_core* [ %56, %do.end71 ], [ null, %cond.false74 ], !dbg !3665
  store %struct.clk_core* %cond76, %struct.clk_core** %tmp66, align 8, !dbg !3665
  %57 = load %struct.clk_core*, %struct.clk_core** %tmp66, align 8, !dbg !3665
  store %struct.clk_core* %57, %struct.clk_core** %core, align 8, !dbg !3659
  br label %for.cond59, !dbg !3659, !llvm.loop !3671

for.end77:                                        ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr78, metadata !3673, metadata !DIExpression()), !dbg !3676
  %58 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_orphan_list, i32 0, i32 0), align 8, !dbg !3676
  store %struct.hlist_node* %58, %struct.hlist_node** %____ptr78, align 8, !dbg !3676
  %59 = load %struct.hlist_node*, %struct.hlist_node** %____ptr78, align 8, !dbg !3676
  %tobool80 = icmp ne %struct.hlist_node* %59, null, !dbg !3676
  br i1 %tobool80, label %cond.true81, label %cond.false87, !dbg !3676

cond.true81:                                      ; preds = %for.end77
  call void @llvm.dbg.declare(metadata i8** %__mptr82, metadata !3677, metadata !DIExpression()), !dbg !3679
  %60 = load %struct.hlist_node*, %struct.hlist_node** %____ptr78, align 8, !dbg !3679
  %61 = bitcast %struct.hlist_node* %60 to i8*, !dbg !3679
  store i8* %61, i8** %__mptr82, align 8, !dbg !3679
  br label %do.body83, !dbg !3679

do.body83:                                        ; preds = %cond.true81
  br label %do.end84, !dbg !3680

do.end84:                                         ; preds = %do.body83
  %62 = load i8*, i8** %__mptr82, align 8, !dbg !3679
  %add.ptr86 = getelementptr i8, i8* %62, i64 -184, !dbg !3679
  %63 = bitcast i8* %add.ptr86 to %struct.clk_core*, !dbg !3679
  store %struct.clk_core* %63, %struct.clk_core** %tmp85, align 8, !dbg !3680
  %64 = load %struct.clk_core*, %struct.clk_core** %tmp85, align 8, !dbg !3679
  br label %cond.end88, !dbg !3676

cond.false87:                                     ; preds = %for.end77
  br label %cond.end88, !dbg !3676

cond.end88:                                       ; preds = %cond.false87, %do.end84
  %cond89 = phi %struct.clk_core* [ %64, %do.end84 ], [ null, %cond.false87 ], !dbg !3676
  store %struct.clk_core* %cond89, %struct.clk_core** %tmp79, align 8, !dbg !3676
  %65 = load %struct.clk_core*, %struct.clk_core** %tmp79, align 8, !dbg !3676
  store %struct.clk_core* %65, %struct.clk_core** %core, align 8, !dbg !3682
  br label %for.cond90, !dbg !3682

for.cond90:                                       ; preds = %cond.end106, %cond.end88
  %66 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3683
  %tobool91 = icmp ne %struct.clk_core* %66, null, !dbg !3682
  br i1 %tobool91, label %for.body92, label %for.end108, !dbg !3682

for.body92:                                       ; preds = %for.cond90
  %67 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3685
  call void @clk_unprepare_unused_subtree(%struct.clk_core* %67) #13, !dbg !3686
  br label %for.inc93, !dbg !3686

for.inc93:                                        ; preds = %for.body92
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr94, metadata !3687, metadata !DIExpression()), !dbg !3689
  %68 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3689
  %child_node95 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %68, i32 0, i32 27, !dbg !3689
  %next96 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node95, i32 0, i32 0, !dbg !3689
  %69 = load %struct.hlist_node*, %struct.hlist_node** %next96, align 8, !dbg !3689
  store %struct.hlist_node* %69, %struct.hlist_node** %____ptr94, align 8, !dbg !3689
  %70 = load %struct.hlist_node*, %struct.hlist_node** %____ptr94, align 8, !dbg !3689
  %tobool98 = icmp ne %struct.hlist_node* %70, null, !dbg !3689
  br i1 %tobool98, label %cond.true99, label %cond.false105, !dbg !3689

cond.true99:                                      ; preds = %for.inc93
  call void @llvm.dbg.declare(metadata i8** %__mptr100, metadata !3690, metadata !DIExpression()), !dbg !3692
  %71 = load %struct.hlist_node*, %struct.hlist_node** %____ptr94, align 8, !dbg !3692
  %72 = bitcast %struct.hlist_node* %71 to i8*, !dbg !3692
  store i8* %72, i8** %__mptr100, align 8, !dbg !3692
  br label %do.body101, !dbg !3692

do.body101:                                       ; preds = %cond.true99
  br label %do.end102, !dbg !3693

do.end102:                                        ; preds = %do.body101
  %73 = load i8*, i8** %__mptr100, align 8, !dbg !3692
  %add.ptr104 = getelementptr i8, i8* %73, i64 -184, !dbg !3692
  %74 = bitcast i8* %add.ptr104 to %struct.clk_core*, !dbg !3692
  store %struct.clk_core* %74, %struct.clk_core** %tmp103, align 8, !dbg !3693
  %75 = load %struct.clk_core*, %struct.clk_core** %tmp103, align 8, !dbg !3692
  br label %cond.end106, !dbg !3689

cond.false105:                                    ; preds = %for.inc93
  br label %cond.end106, !dbg !3689

cond.end106:                                      ; preds = %cond.false105, %do.end102
  %cond107 = phi %struct.clk_core* [ %75, %do.end102 ], [ null, %cond.false105 ], !dbg !3689
  store %struct.clk_core* %cond107, %struct.clk_core** %tmp97, align 8, !dbg !3689
  %76 = load %struct.clk_core*, %struct.clk_core** %tmp97, align 8, !dbg !3689
  store %struct.clk_core* %76, %struct.clk_core** %core, align 8, !dbg !3683
  br label %for.cond90, !dbg !3683, !llvm.loop !3695

for.end108:                                       ; preds = %for.cond90
  call void @clk_prepare_unlock() #11, !dbg !3697
  store i32 0, i32* %retval, align 4, !dbg !3698
  br label %return, !dbg !3698

return:                                           ; preds = %for.end108, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !3699
  ret i32 %77, !dbg !3699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_round_rate_nolock(%struct.clk_core* %core, %struct.clk_rate_request* %req) #0 !dbg !3700 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %req.addr = alloca %struct.clk_rate_request*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3703, metadata !DIExpression()), !dbg !3704
  store %struct.clk_rate_request* %req, %struct.clk_rate_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request** %req.addr, metadata !3705, metadata !DIExpression()), !dbg !3706
  br label %do.body, !dbg !3707

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !3708

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3710
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !3710
  br i1 %tobool, label %if.end, label %if.then, !dbg !3712

if.then:                                          ; preds = %do.end
  %1 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !3713
  %rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %1, i32 0, i32 0, !dbg !3715
  store i64 0, i64* %rate, align 8, !dbg !3716
  store i32 0, i32* %retval, align 4, !dbg !3717
  br label %return, !dbg !3717

if.end:                                           ; preds = %do.end
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3718
  %3 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !3719
  call void @clk_core_init_rate_req(%struct.clk_core* %2, %struct.clk_rate_request* %3) #11, !dbg !3720
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3721
  %call = call zeroext i1 @clk_core_can_round(%struct.clk_core* %4) #11, !dbg !3723
  br i1 %call, label %if.then1, label %if.else, !dbg !3724

if.then1:                                         ; preds = %if.end
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3725
  %6 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !3726
  %call2 = call i32 @clk_core_determine_round_nolock(%struct.clk_core* %5, %struct.clk_rate_request* %6) #11, !dbg !3727
  store i32 %call2, i32* %retval, align 4, !dbg !3728
  br label %return, !dbg !3728

if.else:                                          ; preds = %if.end
  %7 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3729
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %7, i32 0, i32 15, !dbg !3731
  %8 = load i64, i64* %flags, align 8, !dbg !3731
  %and = and i64 %8, 4, !dbg !3732
  %tobool3 = icmp ne i64 %and, 0, !dbg !3732
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !3733

if.then4:                                         ; preds = %if.else
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3734
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 6, !dbg !3735
  %10 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !3735
  %11 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !3736
  %call5 = call i32 @clk_core_round_rate_nolock(%struct.clk_core* %10, %struct.clk_rate_request* %11) #11, !dbg !3737
  store i32 %call5, i32* %retval, align 4, !dbg !3738
  br label %return, !dbg !3738

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  %12 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3739
  %rate8 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %12, i32 0, i32 10, !dbg !3740
  %13 = load i64, i64* %rate8, align 8, !dbg !3740
  %14 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !3741
  %rate9 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %14, i32 0, i32 0, !dbg !3742
  store i64 %13, i64* %rate9, align 8, !dbg !3743
  store i32 0, i32* %retval, align 4, !dbg !3744
  br label %return, !dbg !3744

return:                                           ; preds = %if.end7, %if.then4, %if.then1, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !3745
  ret i32 %15, !dbg !3745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @clk_hw_round_rate(%struct.clk_hw* %hw, i64 %rate) #0 !dbg !3746 {
entry:
  %retval = alloca i64, align 8
  %hw.addr = alloca %struct.clk_hw*, align 8
  %rate.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %req = alloca %struct.clk_rate_request, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !3747, metadata !DIExpression()), !dbg !3748
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !3749, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3751, metadata !DIExpression()), !dbg !3752
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request* %req, metadata !3753, metadata !DIExpression()), !dbg !3754
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !3755
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !3756
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3756
  %min_rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 1, !dbg !3757
  %max_rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 2, !dbg !3758
  call void @clk_core_get_boundaries(%struct.clk_core* %1, i64* %min_rate, i64* %max_rate) #11, !dbg !3759
  %2 = load i64, i64* %rate.addr, align 8, !dbg !3760
  %rate1 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 0, !dbg !3761
  store i64 %2, i64* %rate1, align 8, !dbg !3762
  %3 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !3763
  %core2 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %3, i32 0, i32 0, !dbg !3764
  %4 = load %struct.clk_core*, %struct.clk_core** %core2, align 8, !dbg !3764
  %call = call i32 @clk_core_round_rate_nolock(%struct.clk_core* %4, %struct.clk_rate_request* %req) #11, !dbg !3765
  store i32 %call, i32* %ret, align 4, !dbg !3766
  %5 = load i32, i32* %ret, align 4, !dbg !3767
  %tobool = icmp ne i32 %5, 0, !dbg !3767
  br i1 %tobool, label %if.then, label %if.end, !dbg !3769

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !3770
  br label %return, !dbg !3770

if.end:                                           ; preds = %entry
  %rate3 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 0, !dbg !3771
  %6 = load i64, i64* %rate3, align 8, !dbg !3771
  store i64 %6, i64* %retval, align 8, !dbg !3772
  br label %return, !dbg !3772

return:                                           ; preds = %if.end, %if.then
  %7 = load i64, i64* %retval, align 8, !dbg !3773
  ret i64 %7, !dbg !3773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_get_boundaries(%struct.clk_core* %core, i64* %min_rate, i64* %max_rate) #0 !dbg !3774 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %min_rate.addr = alloca i64*, align 8
  %max_rate.addr = alloca i64*, align 8
  %clk_user = alloca %struct.clk*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp5 = alloca %struct.clk*, align 8
  %__UNIQUE_ID___x179 = alloca i64, align 8
  %__UNIQUE_ID___y180 = alloca i64, align 8
  %tmp8 = alloca i64, align 8
  %____ptr13 = alloca %struct.hlist_node*, align 8
  %tmp14 = alloca %struct.clk*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp20 = alloca %struct.clk*, align 8
  %____ptr25 = alloca %struct.hlist_node*, align 8
  %tmp28 = alloca %struct.clk*, align 8
  %__mptr31 = alloca i8*, align 8
  %tmp34 = alloca %struct.clk*, align 8
  %__UNIQUE_ID___x183 = alloca i64, align 8
  %__UNIQUE_ID___y184 = alloca i64, align 8
  %tmp43 = alloca i64, align 8
  %____ptr50 = alloca %struct.hlist_node*, align 8
  %tmp53 = alloca %struct.clk*, align 8
  %__mptr56 = alloca i8*, align 8
  %tmp59 = alloca %struct.clk*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3777, metadata !DIExpression()), !dbg !3778
  store i64* %min_rate, i64** %min_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %min_rate.addr, metadata !3779, metadata !DIExpression()), !dbg !3780
  store i64* %max_rate, i64** %max_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %max_rate.addr, metadata !3781, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.declare(metadata %struct.clk** %clk_user, metadata !3783, metadata !DIExpression()), !dbg !3784
  br label %do.body, !dbg !3785

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !3786

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3788
  %min_rate1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 21, !dbg !3789
  %1 = load i64, i64* %min_rate1, align 8, !dbg !3789
  %2 = load i64*, i64** %min_rate.addr, align 8, !dbg !3790
  store i64 %1, i64* %2, align 8, !dbg !3791
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3792
  %max_rate2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 22, !dbg !3793
  %4 = load i64, i64* %max_rate2, align 8, !dbg !3793
  %5 = load i64*, i64** %max_rate.addr, align 8, !dbg !3794
  store i64 %4, i64* %5, align 8, !dbg !3795
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !3796, metadata !DIExpression()), !dbg !3799
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3799
  %clks = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 28, !dbg !3799
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %clks, i32 0, i32 0, !dbg !3799
  %7 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !3799
  store %struct.hlist_node* %7, %struct.hlist_node** %____ptr, align 8, !dbg !3799
  %8 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3799
  %tobool = icmp ne %struct.hlist_node* %8, null, !dbg !3799
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3799

cond.true:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !3800, metadata !DIExpression()), !dbg !3802
  %9 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !3802
  %10 = bitcast %struct.hlist_node* %9 to i8*, !dbg !3802
  store i8* %10, i8** %__mptr, align 8, !dbg !3802
  br label %do.body3, !dbg !3802

do.body3:                                         ; preds = %cond.true
  br label %do.end4, !dbg !3803

do.end4:                                          ; preds = %do.body3
  %11 = load i8*, i8** %__mptr, align 8, !dbg !3802
  %add.ptr = getelementptr i8, i8* %11, i64 -56, !dbg !3802
  %12 = bitcast i8* %add.ptr to %struct.clk*, !dbg !3802
  store %struct.clk* %12, %struct.clk** %tmp5, align 8, !dbg !3803
  %13 = load %struct.clk*, %struct.clk** %tmp5, align 8, !dbg !3802
  br label %cond.end, !dbg !3799

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !3799

cond.end:                                         ; preds = %cond.false, %do.end4
  %cond = phi %struct.clk* [ %13, %do.end4 ], [ null, %cond.false ], !dbg !3799
  store %struct.clk* %cond, %struct.clk** %tmp, align 8, !dbg !3799
  %14 = load %struct.clk*, %struct.clk** %tmp, align 8, !dbg !3799
  store %struct.clk* %14, %struct.clk** %clk_user, align 8, !dbg !3805
  br label %for.cond, !dbg !3805

for.cond:                                         ; preds = %cond.end23, %cond.end
  %15 = load %struct.clk*, %struct.clk** %clk_user, align 8, !dbg !3806
  %tobool6 = icmp ne %struct.clk* %15, null, !dbg !3805
  br i1 %tobool6, label %for.body, label %for.end, !dbg !3805

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x179, metadata !3808, metadata !DIExpression()), !dbg !3810
  %16 = load i64*, i64** %min_rate.addr, align 8, !dbg !3810
  %17 = load i64, i64* %16, align 8, !dbg !3810
  store i64 %17, i64* %__UNIQUE_ID___x179, align 8, !dbg !3810
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y180, metadata !3811, metadata !DIExpression()), !dbg !3810
  %18 = load %struct.clk*, %struct.clk** %clk_user, align 8, !dbg !3810
  %min_rate7 = getelementptr inbounds %struct.clk, %struct.clk* %18, i32 0, i32 4, !dbg !3810
  %19 = load i64, i64* %min_rate7, align 8, !dbg !3810
  store i64 %19, i64* %__UNIQUE_ID___y180, align 8, !dbg !3810
  %20 = load i64, i64* %__UNIQUE_ID___x179, align 8, !dbg !3810
  %21 = load i64, i64* %__UNIQUE_ID___y180, align 8, !dbg !3810
  %cmp = icmp ugt i64 %20, %21, !dbg !3810
  br i1 %cmp, label %cond.true9, label %cond.false10, !dbg !3810

cond.true9:                                       ; preds = %for.body
  %22 = load i64, i64* %__UNIQUE_ID___x179, align 8, !dbg !3810
  br label %cond.end11, !dbg !3810

cond.false10:                                     ; preds = %for.body
  %23 = load i64, i64* %__UNIQUE_ID___y180, align 8, !dbg !3810
  br label %cond.end11, !dbg !3810

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond12 = phi i64 [ %22, %cond.true9 ], [ %23, %cond.false10 ], !dbg !3810
  store i64 %cond12, i64* %tmp8, align 8, !dbg !3810
  %24 = load i64, i64* %tmp8, align 8, !dbg !3810
  %25 = load i64*, i64** %min_rate.addr, align 8, !dbg !3812
  store i64 %24, i64* %25, align 8, !dbg !3813
  br label %for.inc, !dbg !3814

for.inc:                                          ; preds = %cond.end11
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr13, metadata !3815, metadata !DIExpression()), !dbg !3817
  %26 = load %struct.clk*, %struct.clk** %clk_user, align 8, !dbg !3817
  %clks_node = getelementptr inbounds %struct.clk, %struct.clk* %26, i32 0, i32 7, !dbg !3817
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %clks_node, i32 0, i32 0, !dbg !3817
  %27 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !3817
  store %struct.hlist_node* %27, %struct.hlist_node** %____ptr13, align 8, !dbg !3817
  %28 = load %struct.hlist_node*, %struct.hlist_node** %____ptr13, align 8, !dbg !3817
  %tobool15 = icmp ne %struct.hlist_node* %28, null, !dbg !3817
  br i1 %tobool15, label %cond.true16, label %cond.false22, !dbg !3817

cond.true16:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !3818, metadata !DIExpression()), !dbg !3820
  %29 = load %struct.hlist_node*, %struct.hlist_node** %____ptr13, align 8, !dbg !3820
  %30 = bitcast %struct.hlist_node* %29 to i8*, !dbg !3820
  store i8* %30, i8** %__mptr17, align 8, !dbg !3820
  br label %do.body18, !dbg !3820

do.body18:                                        ; preds = %cond.true16
  br label %do.end19, !dbg !3821

do.end19:                                         ; preds = %do.body18
  %31 = load i8*, i8** %__mptr17, align 8, !dbg !3820
  %add.ptr21 = getelementptr i8, i8* %31, i64 -56, !dbg !3820
  %32 = bitcast i8* %add.ptr21 to %struct.clk*, !dbg !3820
  store %struct.clk* %32, %struct.clk** %tmp20, align 8, !dbg !3821
  %33 = load %struct.clk*, %struct.clk** %tmp20, align 8, !dbg !3820
  br label %cond.end23, !dbg !3817

cond.false22:                                     ; preds = %for.inc
  br label %cond.end23, !dbg !3817

cond.end23:                                       ; preds = %cond.false22, %do.end19
  %cond24 = phi %struct.clk* [ %33, %do.end19 ], [ null, %cond.false22 ], !dbg !3817
  store %struct.clk* %cond24, %struct.clk** %tmp14, align 8, !dbg !3817
  %34 = load %struct.clk*, %struct.clk** %tmp14, align 8, !dbg !3817
  store %struct.clk* %34, %struct.clk** %clk_user, align 8, !dbg !3806
  br label %for.cond, !dbg !3806, !llvm.loop !3823

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr25, metadata !3825, metadata !DIExpression()), !dbg !3828
  %35 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3828
  %clks26 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %35, i32 0, i32 28, !dbg !3828
  %first27 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %clks26, i32 0, i32 0, !dbg !3828
  %36 = load %struct.hlist_node*, %struct.hlist_node** %first27, align 8, !dbg !3828
  store %struct.hlist_node* %36, %struct.hlist_node** %____ptr25, align 8, !dbg !3828
  %37 = load %struct.hlist_node*, %struct.hlist_node** %____ptr25, align 8, !dbg !3828
  %tobool29 = icmp ne %struct.hlist_node* %37, null, !dbg !3828
  br i1 %tobool29, label %cond.true30, label %cond.false36, !dbg !3828

cond.true30:                                      ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr31, metadata !3829, metadata !DIExpression()), !dbg !3831
  %38 = load %struct.hlist_node*, %struct.hlist_node** %____ptr25, align 8, !dbg !3831
  %39 = bitcast %struct.hlist_node* %38 to i8*, !dbg !3831
  store i8* %39, i8** %__mptr31, align 8, !dbg !3831
  br label %do.body32, !dbg !3831

do.body32:                                        ; preds = %cond.true30
  br label %do.end33, !dbg !3832

do.end33:                                         ; preds = %do.body32
  %40 = load i8*, i8** %__mptr31, align 8, !dbg !3831
  %add.ptr35 = getelementptr i8, i8* %40, i64 -56, !dbg !3831
  %41 = bitcast i8* %add.ptr35 to %struct.clk*, !dbg !3831
  store %struct.clk* %41, %struct.clk** %tmp34, align 8, !dbg !3832
  %42 = load %struct.clk*, %struct.clk** %tmp34, align 8, !dbg !3831
  br label %cond.end37, !dbg !3828

cond.false36:                                     ; preds = %for.end
  br label %cond.end37, !dbg !3828

cond.end37:                                       ; preds = %cond.false36, %do.end33
  %cond38 = phi %struct.clk* [ %42, %do.end33 ], [ null, %cond.false36 ], !dbg !3828
  store %struct.clk* %cond38, %struct.clk** %tmp28, align 8, !dbg !3828
  %43 = load %struct.clk*, %struct.clk** %tmp28, align 8, !dbg !3828
  store %struct.clk* %43, %struct.clk** %clk_user, align 8, !dbg !3834
  br label %for.cond39, !dbg !3834

for.cond39:                                       ; preds = %cond.end62, %cond.end37
  %44 = load %struct.clk*, %struct.clk** %clk_user, align 8, !dbg !3835
  %tobool40 = icmp ne %struct.clk* %44, null, !dbg !3834
  br i1 %tobool40, label %for.body41, label %for.end64, !dbg !3834

for.body41:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x183, metadata !3837, metadata !DIExpression()), !dbg !3839
  %45 = load i64*, i64** %max_rate.addr, align 8, !dbg !3839
  %46 = load i64, i64* %45, align 8, !dbg !3839
  store i64 %46, i64* %__UNIQUE_ID___x183, align 8, !dbg !3839
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y184, metadata !3840, metadata !DIExpression()), !dbg !3839
  %47 = load %struct.clk*, %struct.clk** %clk_user, align 8, !dbg !3839
  %max_rate42 = getelementptr inbounds %struct.clk, %struct.clk* %47, i32 0, i32 5, !dbg !3839
  %48 = load i64, i64* %max_rate42, align 8, !dbg !3839
  store i64 %48, i64* %__UNIQUE_ID___y184, align 8, !dbg !3839
  %49 = load i64, i64* %__UNIQUE_ID___x183, align 8, !dbg !3839
  %50 = load i64, i64* %__UNIQUE_ID___y184, align 8, !dbg !3839
  %cmp44 = icmp ult i64 %49, %50, !dbg !3839
  br i1 %cmp44, label %cond.true45, label %cond.false46, !dbg !3839

cond.true45:                                      ; preds = %for.body41
  %51 = load i64, i64* %__UNIQUE_ID___x183, align 8, !dbg !3839
  br label %cond.end47, !dbg !3839

cond.false46:                                     ; preds = %for.body41
  %52 = load i64, i64* %__UNIQUE_ID___y184, align 8, !dbg !3839
  br label %cond.end47, !dbg !3839

cond.end47:                                       ; preds = %cond.false46, %cond.true45
  %cond48 = phi i64 [ %51, %cond.true45 ], [ %52, %cond.false46 ], !dbg !3839
  store i64 %cond48, i64* %tmp43, align 8, !dbg !3839
  %53 = load i64, i64* %tmp43, align 8, !dbg !3839
  %54 = load i64*, i64** %max_rate.addr, align 8, !dbg !3841
  store i64 %53, i64* %54, align 8, !dbg !3842
  br label %for.inc49, !dbg !3843

for.inc49:                                        ; preds = %cond.end47
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr50, metadata !3844, metadata !DIExpression()), !dbg !3846
  %55 = load %struct.clk*, %struct.clk** %clk_user, align 8, !dbg !3846
  %clks_node51 = getelementptr inbounds %struct.clk, %struct.clk* %55, i32 0, i32 7, !dbg !3846
  %next52 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %clks_node51, i32 0, i32 0, !dbg !3846
  %56 = load %struct.hlist_node*, %struct.hlist_node** %next52, align 8, !dbg !3846
  store %struct.hlist_node* %56, %struct.hlist_node** %____ptr50, align 8, !dbg !3846
  %57 = load %struct.hlist_node*, %struct.hlist_node** %____ptr50, align 8, !dbg !3846
  %tobool54 = icmp ne %struct.hlist_node* %57, null, !dbg !3846
  br i1 %tobool54, label %cond.true55, label %cond.false61, !dbg !3846

cond.true55:                                      ; preds = %for.inc49
  call void @llvm.dbg.declare(metadata i8** %__mptr56, metadata !3847, metadata !DIExpression()), !dbg !3849
  %58 = load %struct.hlist_node*, %struct.hlist_node** %____ptr50, align 8, !dbg !3849
  %59 = bitcast %struct.hlist_node* %58 to i8*, !dbg !3849
  store i8* %59, i8** %__mptr56, align 8, !dbg !3849
  br label %do.body57, !dbg !3849

do.body57:                                        ; preds = %cond.true55
  br label %do.end58, !dbg !3850

do.end58:                                         ; preds = %do.body57
  %60 = load i8*, i8** %__mptr56, align 8, !dbg !3849
  %add.ptr60 = getelementptr i8, i8* %60, i64 -56, !dbg !3849
  %61 = bitcast i8* %add.ptr60 to %struct.clk*, !dbg !3849
  store %struct.clk* %61, %struct.clk** %tmp59, align 8, !dbg !3850
  %62 = load %struct.clk*, %struct.clk** %tmp59, align 8, !dbg !3849
  br label %cond.end62, !dbg !3846

cond.false61:                                     ; preds = %for.inc49
  br label %cond.end62, !dbg !3846

cond.end62:                                       ; preds = %cond.false61, %do.end58
  %cond63 = phi %struct.clk* [ %62, %do.end58 ], [ null, %cond.false61 ], !dbg !3846
  store %struct.clk* %cond63, %struct.clk** %tmp53, align 8, !dbg !3846
  %63 = load %struct.clk*, %struct.clk** %tmp53, align 8, !dbg !3846
  store %struct.clk* %63, %struct.clk** %clk_user, align 8, !dbg !3835
  br label %for.cond39, !dbg !3835, !llvm.loop !3852

for.end64:                                        ; preds = %for.cond39
  ret void, !dbg !3854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @clk_round_rate(%struct.clk* %clk, i64 %rate) #0 !dbg !3855 {
entry:
  %retval = alloca i64, align 8
  %clk.addr = alloca %struct.clk*, align 8
  %rate.addr = alloca i64, align 8
  %req = alloca %struct.clk_rate_request, align 8
  %ret = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !3858, metadata !DIExpression()), !dbg !3859
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !3860, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request* %req, metadata !3862, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3864, metadata !DIExpression()), !dbg !3865
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3866
  %tobool = icmp ne %struct.clk* %0, null, !dbg !3866
  br i1 %tobool, label %if.end, label %if.then, !dbg !3868

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !3869
  br label %return, !dbg !3869

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !3870
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3871
  %exclusive_count = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 6, !dbg !3873
  %2 = load i32, i32* %exclusive_count, align 8, !dbg !3873
  %tobool1 = icmp ne i32 %2, 0, !dbg !3871
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !3874

if.then2:                                         ; preds = %if.end
  %3 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3875
  %core = getelementptr inbounds %struct.clk, %struct.clk* %3, i32 0, i32 0, !dbg !3876
  %4 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3876
  call void @clk_core_rate_unprotect(%struct.clk_core* %4) #11, !dbg !3877
  br label %if.end3, !dbg !3877

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3878
  %core4 = getelementptr inbounds %struct.clk, %struct.clk* %5, i32 0, i32 0, !dbg !3879
  %6 = load %struct.clk_core*, %struct.clk_core** %core4, align 8, !dbg !3879
  %min_rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 1, !dbg !3880
  %max_rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 2, !dbg !3881
  call void @clk_core_get_boundaries(%struct.clk_core* %6, i64* %min_rate, i64* %max_rate) #11, !dbg !3882
  %7 = load i64, i64* %rate.addr, align 8, !dbg !3883
  %rate5 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 0, !dbg !3884
  store i64 %7, i64* %rate5, align 8, !dbg !3885
  %8 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3886
  %core6 = getelementptr inbounds %struct.clk, %struct.clk* %8, i32 0, i32 0, !dbg !3887
  %9 = load %struct.clk_core*, %struct.clk_core** %core6, align 8, !dbg !3887
  %call = call i32 @clk_core_round_rate_nolock(%struct.clk_core* %9, %struct.clk_rate_request* %req) #11, !dbg !3888
  store i32 %call, i32* %ret, align 4, !dbg !3889
  %10 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3890
  %exclusive_count7 = getelementptr inbounds %struct.clk, %struct.clk* %10, i32 0, i32 6, !dbg !3892
  %11 = load i32, i32* %exclusive_count7, align 8, !dbg !3892
  %tobool8 = icmp ne i32 %11, 0, !dbg !3890
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !3893

if.then9:                                         ; preds = %if.end3
  %12 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3894
  %core10 = getelementptr inbounds %struct.clk, %struct.clk* %12, i32 0, i32 0, !dbg !3895
  %13 = load %struct.clk_core*, %struct.clk_core** %core10, align 8, !dbg !3895
  call void @clk_core_rate_protect(%struct.clk_core* %13) #11, !dbg !3896
  br label %if.end11, !dbg !3896

if.end11:                                         ; preds = %if.then9, %if.end3
  call void @clk_prepare_unlock() #11, !dbg !3897
  %14 = load i32, i32* %ret, align 4, !dbg !3898
  %tobool12 = icmp ne i32 %14, 0, !dbg !3898
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !3900

if.then13:                                        ; preds = %if.end11
  %15 = load i32, i32* %ret, align 4, !dbg !3901
  %conv = sext i32 %15 to i64, !dbg !3901
  store i64 %conv, i64* %retval, align 8, !dbg !3902
  br label %return, !dbg !3902

if.end14:                                         ; preds = %if.end11
  %rate15 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 0, !dbg !3903
  %16 = load i64, i64* %rate15, align 8, !dbg !3903
  store i64 %16, i64* %retval, align 8, !dbg !3904
  br label %return, !dbg !3904

return:                                           ; preds = %if.end14, %if.then13, %if.then
  %17 = load i64, i64* %retval, align 8, !dbg !3905
  ret i64 %17, !dbg !3905
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @clk_get_accuracy(%struct.clk* %clk) #0 !dbg !3906 {
entry:
  %retval = alloca i64, align 8
  %clk.addr = alloca %struct.clk*, align 8
  %accuracy = alloca i64, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !3909, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.declare(metadata i64* %accuracy, metadata !3911, metadata !DIExpression()), !dbg !3912
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3913
  %tobool = icmp ne %struct.clk* %0, null, !dbg !3913
  br i1 %tobool, label %if.end, label %if.then, !dbg !3915

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !3916
  br label %return, !dbg !3916

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !3917
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3918
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !3919
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3919
  %call = call i64 @clk_core_get_accuracy_recalc(%struct.clk_core* %2) #11, !dbg !3920
  store i64 %call, i64* %accuracy, align 8, !dbg !3921
  call void @clk_prepare_unlock() #11, !dbg !3922
  %3 = load i64, i64* %accuracy, align 8, !dbg !3923
  store i64 %3, i64* %retval, align 8, !dbg !3924
  br label %return, !dbg !3924

return:                                           ; preds = %if.end, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !3925
  ret i64 %4, !dbg !3925
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @clk_core_get_accuracy_recalc(%struct.clk_core* %core) #0 !dbg !3926 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3929, metadata !DIExpression()), !dbg !3930
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3931
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !3931
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3933

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3934
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 15, !dbg !3935
  %2 = load i64, i64* %flags, align 8, !dbg !3935
  %and = and i64 %2, 256, !dbg !3936
  %tobool1 = icmp ne i64 %and, 0, !dbg !3936
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3937

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3938
  call void @__clk_recalc_accuracies(%struct.clk_core* %3) #11, !dbg !3939
  br label %if.end, !dbg !3939

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3940
  %call = call i64 @clk_core_get_accuracy_no_lock(%struct.clk_core* %4) #11, !dbg !3941
  ret i64 %call, !dbg !3942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @clk_get_rate(%struct.clk* %clk) #0 !dbg !3943 {
entry:
  %retval = alloca i64, align 8
  %clk.addr = alloca %struct.clk*, align 8
  %rate = alloca i64, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !3946, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.declare(metadata i64* %rate, metadata !3948, metadata !DIExpression()), !dbg !3949
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3950
  %tobool = icmp ne %struct.clk* %0, null, !dbg !3950
  br i1 %tobool, label %if.end, label %if.then, !dbg !3952

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !3953
  br label %return, !dbg !3953

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !3954
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !3955
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !3956
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !3956
  %call = call i64 @clk_core_get_rate_recalc(%struct.clk_core* %2) #11, !dbg !3957
  store i64 %call, i64* %rate, align 8, !dbg !3958
  call void @clk_prepare_unlock() #11, !dbg !3959
  %3 = load i64, i64* %rate, align 8, !dbg !3960
  store i64 %3, i64* %retval, align 8, !dbg !3961
  br label %return, !dbg !3961

return:                                           ; preds = %if.end, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !3962
  ret i64 %4, !dbg !3962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @clk_core_get_rate_recalc(%struct.clk_core* %core) #0 !dbg !3963 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !3964, metadata !DIExpression()), !dbg !3965
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3966
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !3966
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3968

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3969
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 15, !dbg !3970
  %2 = load i64, i64* %flags, align 8, !dbg !3970
  %and = and i64 %2, 64, !dbg !3971
  %tobool1 = icmp ne i64 %and, 0, !dbg !3971
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3972

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3973
  call void @__clk_recalc_rates(%struct.clk_core* %3, i64 0) #11, !dbg !3974
  br label %if.end, !dbg !3974

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !3975
  %call = call i64 @clk_core_get_rate_nolock(%struct.clk_core* %4) #11, !dbg !3976
  ret i64 %call, !dbg !3977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_hw_get_parent_index(%struct.clk_hw* %hw) #0 !dbg !3978 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.clk_hw*, align 8
  %parent = alloca %struct.clk_hw*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !3979, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %parent, metadata !3981, metadata !DIExpression()), !dbg !3982
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !3983
  %call = call %struct.clk_hw* @clk_hw_get_parent(%struct.clk_hw* %0) #11, !dbg !3984
  store %struct.clk_hw* %call, %struct.clk_hw** %parent, align 8, !dbg !3982
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !3985, metadata !DIExpression()), !dbg !3988
  %1 = load %struct.clk_hw*, %struct.clk_hw** %parent, align 8, !dbg !3988
  %cmp = icmp eq %struct.clk_hw* %1, null, !dbg !3988
  %lnot = xor i1 %cmp, true, !dbg !3988
  %lnot1 = xor i1 %lnot, true, !dbg !3988
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3988
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !3988
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !3989
  %tobool = icmp ne i32 %2, 0, !dbg !3989
  %lnot2 = xor i1 %tobool, true, !dbg !3989
  %lnot4 = xor i1 %lnot2, true, !dbg !3989
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !3989
  %conv = sext i32 %lnot.ext5 to i64, !dbg !3989
  %tobool6 = icmp ne i64 %conv, 0, !dbg !3989
  br i1 %tobool6, label %if.then, label %if.end, !dbg !3988

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3989

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !3991

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !3993

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !3991

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1700, i32 2305, i64 12) #10, !dbg !3995, !srcloc !3997
  br label %do.end9, !dbg !3995

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 225) #10, !dbg !3998, !srcloc !4000
  br label %do.body10, !dbg !3991

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !4001

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !3991

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !3991

if.end:                                           ; preds = %do.end12, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !3988
  %tobool13 = icmp ne i32 %3, 0, !dbg !3988
  %lnot14 = xor i1 %tobool13, true, !dbg !3988
  %lnot16 = xor i1 %lnot14, true, !dbg !3988
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !3988
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !3988
  store i64 %conv18, i64* %tmp, align 8, !dbg !3989
  %4 = load i64, i64* %tmp, align 8, !dbg !3988
  %tobool19 = icmp ne i64 %4, 0, !dbg !4003
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !4004

if.then20:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !4005
  br label %return, !dbg !4005

if.end21:                                         ; preds = %if.end
  %5 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !4006
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %5, i32 0, i32 0, !dbg !4007
  %6 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4007
  %7 = load %struct.clk_hw*, %struct.clk_hw** %parent, align 8, !dbg !4008
  %core22 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %7, i32 0, i32 0, !dbg !4009
  %8 = load %struct.clk_core*, %struct.clk_core** %core22, align 8, !dbg !4009
  %call23 = call i32 @clk_fetch_parent_index(%struct.clk_core* %6, %struct.clk_core* %8) #11, !dbg !4010
  store i32 %call23, i32* %retval, align 4, !dbg !4011
  br label %return, !dbg !4011

return:                                           ; preds = %if.end21, %if.then20
  %9 = load i32, i32* %retval, align 4, !dbg !4012
  ret i32 %9, !dbg !4012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_fetch_parent_index(%struct.clk_core* %core, %struct.clk_core* %parent) #0 !dbg !4013 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %parent.addr = alloca %struct.clk_core*, align 8
  %i = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !4016, metadata !DIExpression()), !dbg !4017
  store %struct.clk_core* %parent, %struct.clk_core** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent.addr, metadata !4018, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4020, metadata !DIExpression()), !dbg !4021
  %0 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4022
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !4022
  br i1 %tobool, label %if.end, label %if.then, !dbg !4024

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4025
  br label %return, !dbg !4025

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4026
  br label %for.cond, !dbg !4028

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !4029
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4031
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 8, !dbg !4032
  %3 = load i8, i8* %num_parents, align 8, !dbg !4032
  %conv = zext i8 %3 to i32, !dbg !4031
  %cmp = icmp slt i32 %1, %conv, !dbg !4033
  br i1 %cmp, label %for.body, label %for.end, !dbg !4034

for.body:                                         ; preds = %for.cond
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4035
  %parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 7, !dbg !4038
  %5 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !4038
  %6 = load i32, i32* %i, align 4, !dbg !4039
  %idxprom = sext i32 %6 to i64, !dbg !4035
  %arrayidx = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %5, i64 %idxprom, !dbg !4035
  %core2 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx, i32 0, i32 1, !dbg !4040
  %7 = load %struct.clk_core*, %struct.clk_core** %core2, align 8, !dbg !4040
  %8 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4041
  %cmp3 = icmp eq %struct.clk_core* %7, %8, !dbg !4042
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !4043

if.then5:                                         ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !4044
  store i32 %9, i32* %retval, align 4, !dbg !4045
  br label %return, !dbg !4045

if.end6:                                          ; preds = %for.body
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4046
  %parents7 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 7, !dbg !4048
  %11 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents7, align 8, !dbg !4048
  %12 = load i32, i32* %i, align 4, !dbg !4049
  %idxprom8 = sext i32 %12 to i64, !dbg !4046
  %arrayidx9 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %11, i64 %idxprom8, !dbg !4046
  %core10 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx9, i32 0, i32 1, !dbg !4050
  %13 = load %struct.clk_core*, %struct.clk_core** %core10, align 8, !dbg !4050
  %tobool11 = icmp ne %struct.clk_core* %13, null, !dbg !4046
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !4051

if.then12:                                        ; preds = %if.end6
  br label %for.inc, !dbg !4052

if.end13:                                         ; preds = %if.end6
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4053
  %parents14 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 7, !dbg !4055
  %15 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents14, align 8, !dbg !4055
  %16 = load i32, i32* %i, align 4, !dbg !4056
  %idxprom15 = sext i32 %16 to i64, !dbg !4053
  %arrayidx16 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %15, i64 %idxprom15, !dbg !4053
  %hw = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx16, i32 0, i32 0, !dbg !4057
  %17 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !4057
  %tobool17 = icmp ne %struct.clk_hw* %17, null, !dbg !4053
  br i1 %tobool17, label %if.then18, label %if.end28, !dbg !4058

if.then18:                                        ; preds = %if.end13
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4059
  %parents19 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %18, i32 0, i32 7, !dbg !4062
  %19 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents19, align 8, !dbg !4062
  %20 = load i32, i32* %i, align 4, !dbg !4063
  %idxprom20 = sext i32 %20 to i64, !dbg !4059
  %arrayidx21 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %19, i64 %idxprom20, !dbg !4059
  %hw22 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx21, i32 0, i32 0, !dbg !4064
  %21 = load %struct.clk_hw*, %struct.clk_hw** %hw22, align 8, !dbg !4064
  %22 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4065
  %hw23 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %22, i32 0, i32 2, !dbg !4066
  %23 = load %struct.clk_hw*, %struct.clk_hw** %hw23, align 8, !dbg !4066
  %cmp24 = icmp eq %struct.clk_hw* %21, %23, !dbg !4067
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !4068

if.then26:                                        ; preds = %if.then18
  br label %for.end, !dbg !4069

if.end27:                                         ; preds = %if.then18
  br label %for.inc, !dbg !4070

if.end28:                                         ; preds = %if.end13
  %24 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4071
  %25 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4073
  %26 = load i32, i32* %i, align 4, !dbg !4074
  %conv29 = trunc i32 %26 to i8, !dbg !4074
  %call = call %struct.clk_core* @clk_core_get(%struct.clk_core* %25, i8 zeroext %conv29) #11, !dbg !4075
  %cmp30 = icmp eq %struct.clk_core* %24, %call, !dbg !4076
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4077

if.then32:                                        ; preds = %if.end28
  br label %for.end, !dbg !4078

if.end33:                                         ; preds = %if.end28
  %27 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4079
  %parents34 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %27, i32 0, i32 7, !dbg !4081
  %28 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents34, align 8, !dbg !4081
  %29 = load i32, i32* %i, align 4, !dbg !4082
  %idxprom35 = sext i32 %29 to i64, !dbg !4079
  %arrayidx36 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %28, i64 %idxprom35, !dbg !4079
  %name = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx36, i32 0, i32 3, !dbg !4083
  %30 = load i8*, i8** %name, align 8, !dbg !4083
  %tobool37 = icmp ne i8* %30, null, !dbg !4079
  br i1 %tobool37, label %land.lhs.true, label %if.end46, !dbg !4084

land.lhs.true:                                    ; preds = %if.end33
  %31 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4085
  %name38 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %31, i32 0, i32 0, !dbg !4086
  %32 = load i8*, i8** %name38, align 8, !dbg !4086
  %33 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4087
  %parents39 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %33, i32 0, i32 7, !dbg !4088
  %34 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents39, align 8, !dbg !4088
  %35 = load i32, i32* %i, align 4, !dbg !4089
  %idxprom40 = sext i32 %35 to i64, !dbg !4087
  %arrayidx41 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %34, i64 %idxprom40, !dbg !4087
  %name42 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx41, i32 0, i32 3, !dbg !4090
  %36 = load i8*, i8** %name42, align 8, !dbg !4090
  %call43 = call i32 @strcmp(i8* %32, i8* %36) #11, !dbg !4091
  %tobool44 = icmp ne i32 %call43, 0, !dbg !4091
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !4092

if.then45:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !4093

if.end46:                                         ; preds = %land.lhs.true, %if.end33
  br label %for.inc, !dbg !4094

for.inc:                                          ; preds = %if.end46, %if.end27, %if.then12
  %37 = load i32, i32* %i, align 4, !dbg !4095
  %inc = add i32 %37, 1, !dbg !4095
  store i32 %inc, i32* %i, align 4, !dbg !4095
  br label %for.cond, !dbg !4096, !llvm.loop !4097

for.end:                                          ; preds = %if.then45, %if.then32, %if.then26, %for.cond
  %38 = load i32, i32* %i, align 4, !dbg !4099
  %39 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4101
  %num_parents47 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %39, i32 0, i32 8, !dbg !4102
  %40 = load i8, i8* %num_parents47, align 8, !dbg !4102
  %conv48 = zext i8 %40 to i32, !dbg !4101
  %cmp49 = icmp eq i32 %38, %conv48, !dbg !4103
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !4104

if.then51:                                        ; preds = %for.end
  store i32 -22, i32* %retval, align 4, !dbg !4105
  br label %return, !dbg !4105

if.end52:                                         ; preds = %for.end
  %41 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4106
  %42 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4107
  %parents53 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %42, i32 0, i32 7, !dbg !4108
  %43 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents53, align 8, !dbg !4108
  %44 = load i32, i32* %i, align 4, !dbg !4109
  %idxprom54 = sext i32 %44 to i64, !dbg !4107
  %arrayidx55 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %43, i64 %idxprom54, !dbg !4107
  %core56 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx55, i32 0, i32 1, !dbg !4110
  store %struct.clk_core* %41, %struct.clk_core** %core56, align 8, !dbg !4111
  %45 = load i32, i32* %i, align 4, !dbg !4112
  store i32 %45, i32* %retval, align 4, !dbg !4113
  br label %return, !dbg !4113

return:                                           ; preds = %if.end52, %if.then51, %if.then5, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !4114
  ret i32 %46, !dbg !4114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_set_rate(%struct.clk* %clk, i64 %rate) #0 !dbg !4115 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %rate.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4118, metadata !DIExpression()), !dbg !4119
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !4120, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4122, metadata !DIExpression()), !dbg !4123
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4124
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4124
  br i1 %tobool, label %if.end, label %if.then, !dbg !4126

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4127
  br label %return, !dbg !4127

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !4128
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4129
  %exclusive_count = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 6, !dbg !4131
  %2 = load i32, i32* %exclusive_count, align 8, !dbg !4131
  %tobool1 = icmp ne i32 %2, 0, !dbg !4129
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !4132

if.then2:                                         ; preds = %if.end
  %3 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4133
  %core = getelementptr inbounds %struct.clk, %struct.clk* %3, i32 0, i32 0, !dbg !4134
  %4 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4134
  call void @clk_core_rate_unprotect(%struct.clk_core* %4) #11, !dbg !4135
  br label %if.end3, !dbg !4135

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4136
  %core4 = getelementptr inbounds %struct.clk, %struct.clk* %5, i32 0, i32 0, !dbg !4137
  %6 = load %struct.clk_core*, %struct.clk_core** %core4, align 8, !dbg !4137
  %7 = load i64, i64* %rate.addr, align 8, !dbg !4138
  %call = call i32 @clk_core_set_rate_nolock(%struct.clk_core* %6, i64 %7) #11, !dbg !4139
  store i32 %call, i32* %ret, align 4, !dbg !4140
  %8 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4141
  %exclusive_count5 = getelementptr inbounds %struct.clk, %struct.clk* %8, i32 0, i32 6, !dbg !4143
  %9 = load i32, i32* %exclusive_count5, align 8, !dbg !4143
  %tobool6 = icmp ne i32 %9, 0, !dbg !4141
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !4144

if.then7:                                         ; preds = %if.end3
  %10 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4145
  %core8 = getelementptr inbounds %struct.clk, %struct.clk* %10, i32 0, i32 0, !dbg !4146
  %11 = load %struct.clk_core*, %struct.clk_core** %core8, align 8, !dbg !4146
  call void @clk_core_rate_protect(%struct.clk_core* %11) #11, !dbg !4147
  br label %if.end9, !dbg !4147

if.end9:                                          ; preds = %if.then7, %if.end3
  call void @clk_prepare_unlock() #11, !dbg !4148
  %12 = load i32, i32* %ret, align 4, !dbg !4149
  store i32 %12, i32* %retval, align 4, !dbg !4150
  br label %return, !dbg !4150

return:                                           ; preds = %if.end9, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !4151
  ret i32 %13, !dbg !4151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_set_rate_nolock(%struct.clk_core* %core, i64 %req_rate) #0 !dbg !4152 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %req_rate.addr = alloca i64, align 8
  %top = alloca %struct.clk_core*, align 8
  %fail_clk = alloca %struct.clk_core*, align 8
  %rate = alloca i64, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !4155, metadata !DIExpression()), !dbg !4156
  store i64 %req_rate, i64* %req_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %req_rate.addr, metadata !4157, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.declare(metadata %struct.clk_core** %top, metadata !4159, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.declare(metadata %struct.clk_core** %fail_clk, metadata !4161, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.declare(metadata i64* %rate, metadata !4163, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4165, metadata !DIExpression()), !dbg !4166
  store i32 0, i32* %ret, align 4, !dbg !4166
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4167
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !4167
  br i1 %tobool, label %if.end, label %if.then, !dbg !4169

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4170
  br label %return, !dbg !4170

if.end:                                           ; preds = %entry
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4171
  %2 = load i64, i64* %req_rate.addr, align 8, !dbg !4172
  %call = call i64 @clk_core_req_round_rate_nolock(%struct.clk_core* %1, i64 %2) #11, !dbg !4173
  store i64 %call, i64* %rate, align 8, !dbg !4174
  %3 = load i64, i64* %rate, align 8, !dbg !4175
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4177
  %call1 = call i64 @clk_core_get_rate_nolock(%struct.clk_core* %4) #11, !dbg !4178
  %cmp = icmp eq i64 %3, %call1, !dbg !4179
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4180

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4181
  br label %return, !dbg !4181

if.end3:                                          ; preds = %if.end
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4182
  %call4 = call zeroext i1 @clk_core_rate_is_protected(%struct.clk_core* %5) #11, !dbg !4184
  br i1 %call4, label %if.then5, label %if.end6, !dbg !4185

if.then5:                                         ; preds = %if.end3
  store i32 -16, i32* %retval, align 4, !dbg !4186
  br label %return, !dbg !4186

if.end6:                                          ; preds = %if.end3
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4187
  %7 = load i64, i64* %req_rate.addr, align 8, !dbg !4188
  %call7 = call %struct.clk_core* @clk_calc_new_rates(%struct.clk_core* %6, i64 %7) #11, !dbg !4189
  store %struct.clk_core* %call7, %struct.clk_core** %top, align 8, !dbg !4190
  %8 = load %struct.clk_core*, %struct.clk_core** %top, align 8, !dbg !4191
  %tobool8 = icmp ne %struct.clk_core* %8, null, !dbg !4191
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !4193

if.then9:                                         ; preds = %if.end6
  store i32 -22, i32* %retval, align 4, !dbg !4194
  br label %return, !dbg !4194

if.end10:                                         ; preds = %if.end6
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4195
  %call11 = call i32 @clk_pm_runtime_get(%struct.clk_core* %9) #11, !dbg !4196
  store i32 %call11, i32* %ret, align 4, !dbg !4197
  %10 = load i32, i32* %ret, align 4, !dbg !4198
  %tobool12 = icmp ne i32 %10, 0, !dbg !4198
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !4200

if.then13:                                        ; preds = %if.end10
  %11 = load i32, i32* %ret, align 4, !dbg !4201
  store i32 %11, i32* %retval, align 4, !dbg !4202
  br label %return, !dbg !4202

if.end14:                                         ; preds = %if.end10
  %12 = load %struct.clk_core*, %struct.clk_core** %top, align 8, !dbg !4203
  %call15 = call %struct.clk_core* @clk_propagate_rate_change(%struct.clk_core* %12, i64 1) #11, !dbg !4204
  store %struct.clk_core* %call15, %struct.clk_core** %fail_clk, align 8, !dbg !4205
  %13 = load %struct.clk_core*, %struct.clk_core** %fail_clk, align 8, !dbg !4206
  %tobool16 = icmp ne %struct.clk_core* %13, null, !dbg !4206
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !4208

if.then17:                                        ; preds = %if.end14
  store i32 0, i32* %tmp, align 4, !dbg !4209
  %14 = load i32, i32* %tmp, align 4, !dbg !4213
  %15 = load %struct.clk_core*, %struct.clk_core** %top, align 8, !dbg !4214
  %call18 = call %struct.clk_core* @clk_propagate_rate_change(%struct.clk_core* %15, i64 4) #11, !dbg !4215
  store i32 -16, i32* %ret, align 4, !dbg !4216
  br label %err, !dbg !4217

if.end19:                                         ; preds = %if.end14
  %16 = load %struct.clk_core*, %struct.clk_core** %top, align 8, !dbg !4218
  call void @clk_change_rate(%struct.clk_core* %16) #11, !dbg !4219
  %17 = load i64, i64* %req_rate.addr, align 8, !dbg !4220
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4221
  %req_rate20 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %18, i32 0, i32 11, !dbg !4222
  store i64 %17, i64* %req_rate20, align 8, !dbg !4223
  br label %err, !dbg !4221

err:                                              ; preds = %if.end19, %if.then17
  call void @llvm.dbg.label(metadata !4224), !dbg !4225
  %19 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4226
  call void @clk_pm_runtime_put(%struct.clk_core* %19) #11, !dbg !4227
  %20 = load i32, i32* %ret, align 4, !dbg !4228
  store i32 %20, i32* %retval, align 4, !dbg !4229
  br label %return, !dbg !4229

return:                                           ; preds = %err, %if.then13, %if.then9, %if.then5, %if.then2, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !4230
  ret i32 %21, !dbg !4230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_set_rate_exclusive(%struct.clk* %clk, i64 %rate) #0 !dbg !4231 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %rate.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4232, metadata !DIExpression()), !dbg !4233
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !4234, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4236, metadata !DIExpression()), !dbg !4237
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4238
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4238
  br i1 %tobool, label %if.end, label %if.then, !dbg !4240

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4241
  br label %return, !dbg !4241

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !4242
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4243
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !4244
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4244
  %3 = load i64, i64* %rate.addr, align 8, !dbg !4245
  %call = call i32 @clk_core_set_rate_nolock(%struct.clk_core* %2, i64 %3) #11, !dbg !4246
  store i32 %call, i32* %ret, align 4, !dbg !4247
  %4 = load i32, i32* %ret, align 4, !dbg !4248
  %tobool1 = icmp ne i32 %4, 0, !dbg !4248
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !4250

if.then2:                                         ; preds = %if.end
  %5 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4251
  %core3 = getelementptr inbounds %struct.clk, %struct.clk* %5, i32 0, i32 0, !dbg !4253
  %6 = load %struct.clk_core*, %struct.clk_core** %core3, align 8, !dbg !4253
  call void @clk_core_rate_protect(%struct.clk_core* %6) #11, !dbg !4254
  %7 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4255
  %exclusive_count = getelementptr inbounds %struct.clk, %struct.clk* %7, i32 0, i32 6, !dbg !4256
  %8 = load i32, i32* %exclusive_count, align 8, !dbg !4257
  %inc = add i32 %8, 1, !dbg !4257
  store i32 %inc, i32* %exclusive_count, align 8, !dbg !4257
  br label %if.end4, !dbg !4258

if.end4:                                          ; preds = %if.then2, %if.end
  call void @clk_prepare_unlock() #11, !dbg !4259
  %9 = load i32, i32* %ret, align 4, !dbg !4260
  store i32 %9, i32* %retval, align 4, !dbg !4261
  br label %return, !dbg !4261

return:                                           ; preds = %if.end4, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4262
  ret i32 %10, !dbg !4262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_set_rate_range(%struct.clk* %clk, i64 %min, i64 %max) #0 !dbg !4263 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %min.addr = alloca i64, align 8
  %max.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %old_min = alloca i64, align 8
  %old_max = alloca i64, align 8
  %rate = alloca i64, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4266, metadata !DIExpression()), !dbg !4267
  store i64 %min, i64* %min.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !4268, metadata !DIExpression()), !dbg !4269
  store i64 %max, i64* %max.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max.addr, metadata !4270, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4272, metadata !DIExpression()), !dbg !4273
  store i32 0, i32* %ret, align 4, !dbg !4273
  call void @llvm.dbg.declare(metadata i64* %old_min, metadata !4274, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.declare(metadata i64* %old_max, metadata !4276, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.declare(metadata i64* %rate, metadata !4278, metadata !DIExpression()), !dbg !4279
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4280
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4280
  br i1 %tobool, label %if.end, label %if.then, !dbg !4282

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4283
  br label %return, !dbg !4283

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %min.addr, align 8, !dbg !4284
  %2 = load i64, i64* %max.addr, align 8, !dbg !4286
  %cmp = icmp ugt i64 %1, %2, !dbg !4287
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !4288

if.then1:                                         ; preds = %if.end
  %3 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4289
  %core = getelementptr inbounds %struct.clk, %struct.clk* %3, i32 0, i32 0, !dbg !4289
  %4 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4289
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 0, !dbg !4289
  %5 = load i8*, i8** %name, align 8, !dbg !4289
  %6 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4289
  %dev_id = getelementptr inbounds %struct.clk, %struct.clk* %6, i32 0, i32 2, !dbg !4289
  %7 = load i8*, i8** %dev_id, align 8, !dbg !4289
  %8 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4289
  %con_id = getelementptr inbounds %struct.clk, %struct.clk* %8, i32 0, i32 3, !dbg !4289
  %9 = load i8*, i8** %con_id, align 8, !dbg !4289
  %10 = load i64, i64* %min.addr, align 8, !dbg !4289
  %11 = load i64, i64* %max.addr, align 8, !dbg !4289
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.clk_set_rate_range, i64 0, i64 0), i8* %5, i8* %7, i8* %9, i64 %10, i64 %11) #13, !dbg !4289
  store i32 -22, i32* %retval, align 4, !dbg !4291
  br label %return, !dbg !4291

if.end2:                                          ; preds = %if.end
  call void @clk_prepare_lock() #11, !dbg !4292
  %12 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4293
  %exclusive_count = getelementptr inbounds %struct.clk, %struct.clk* %12, i32 0, i32 6, !dbg !4295
  %13 = load i32, i32* %exclusive_count, align 8, !dbg !4295
  %tobool3 = icmp ne i32 %13, 0, !dbg !4293
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !4296

if.then4:                                         ; preds = %if.end2
  %14 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4297
  %core5 = getelementptr inbounds %struct.clk, %struct.clk* %14, i32 0, i32 0, !dbg !4298
  %15 = load %struct.clk_core*, %struct.clk_core** %core5, align 8, !dbg !4298
  call void @clk_core_rate_unprotect(%struct.clk_core* %15) #11, !dbg !4299
  br label %if.end6, !dbg !4299

if.end6:                                          ; preds = %if.then4, %if.end2
  %16 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4300
  %min_rate = getelementptr inbounds %struct.clk, %struct.clk* %16, i32 0, i32 4, !dbg !4301
  %17 = load i64, i64* %min_rate, align 8, !dbg !4301
  store i64 %17, i64* %old_min, align 8, !dbg !4302
  %18 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4303
  %max_rate = getelementptr inbounds %struct.clk, %struct.clk* %18, i32 0, i32 5, !dbg !4304
  %19 = load i64, i64* %max_rate, align 8, !dbg !4304
  store i64 %19, i64* %old_max, align 8, !dbg !4305
  %20 = load i64, i64* %min.addr, align 8, !dbg !4306
  %21 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4307
  %min_rate7 = getelementptr inbounds %struct.clk, %struct.clk* %21, i32 0, i32 4, !dbg !4308
  store i64 %20, i64* %min_rate7, align 8, !dbg !4309
  %22 = load i64, i64* %max.addr, align 8, !dbg !4310
  %23 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4311
  %max_rate8 = getelementptr inbounds %struct.clk, %struct.clk* %23, i32 0, i32 5, !dbg !4312
  store i64 %22, i64* %max_rate8, align 8, !dbg !4313
  %24 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4314
  %core9 = getelementptr inbounds %struct.clk, %struct.clk* %24, i32 0, i32 0, !dbg !4315
  %25 = load %struct.clk_core*, %struct.clk_core** %core9, align 8, !dbg !4315
  %call10 = call i64 @clk_core_get_rate_nolock(%struct.clk_core* %25) #11, !dbg !4316
  store i64 %call10, i64* %rate, align 8, !dbg !4317
  %26 = load i64, i64* %rate, align 8, !dbg !4318
  %27 = load i64, i64* %min.addr, align 8, !dbg !4320
  %cmp11 = icmp ult i64 %26, %27, !dbg !4321
  br i1 %cmp11, label %if.then13, label %lor.lhs.false, !dbg !4322

lor.lhs.false:                                    ; preds = %if.end6
  %28 = load i64, i64* %rate, align 8, !dbg !4323
  %29 = load i64, i64* %max.addr, align 8, !dbg !4324
  %cmp12 = icmp ugt i64 %28, %29, !dbg !4325
  br i1 %cmp12, label %if.then13, label %if.end24, !dbg !4326

if.then13:                                        ; preds = %lor.lhs.false, %if.end6
  %30 = load i64, i64* %rate, align 8, !dbg !4327
  %31 = load i64, i64* %min.addr, align 8, !dbg !4330
  %cmp14 = icmp ult i64 %30, %31, !dbg !4331
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !4332

if.then15:                                        ; preds = %if.then13
  %32 = load i64, i64* %min.addr, align 8, !dbg !4333
  store i64 %32, i64* %rate, align 8, !dbg !4334
  br label %if.end16, !dbg !4335

if.else:                                          ; preds = %if.then13
  %33 = load i64, i64* %max.addr, align 8, !dbg !4336
  store i64 %33, i64* %rate, align 8, !dbg !4337
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then15
  %34 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4338
  %core17 = getelementptr inbounds %struct.clk, %struct.clk* %34, i32 0, i32 0, !dbg !4339
  %35 = load %struct.clk_core*, %struct.clk_core** %core17, align 8, !dbg !4339
  %36 = load i64, i64* %rate, align 8, !dbg !4340
  %call18 = call i32 @clk_core_set_rate_nolock(%struct.clk_core* %35, i64 %36) #11, !dbg !4341
  store i32 %call18, i32* %ret, align 4, !dbg !4342
  %37 = load i32, i32* %ret, align 4, !dbg !4343
  %tobool19 = icmp ne i32 %37, 0, !dbg !4343
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !4345

if.then20:                                        ; preds = %if.end16
  %38 = load i64, i64* %old_min, align 8, !dbg !4346
  %39 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4348
  %min_rate21 = getelementptr inbounds %struct.clk, %struct.clk* %39, i32 0, i32 4, !dbg !4349
  store i64 %38, i64* %min_rate21, align 8, !dbg !4350
  %40 = load i64, i64* %old_max, align 8, !dbg !4351
  %41 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4352
  %max_rate22 = getelementptr inbounds %struct.clk, %struct.clk* %41, i32 0, i32 5, !dbg !4353
  store i64 %40, i64* %max_rate22, align 8, !dbg !4354
  br label %if.end23, !dbg !4355

if.end23:                                         ; preds = %if.then20, %if.end16
  br label %if.end24, !dbg !4356

if.end24:                                         ; preds = %if.end23, %lor.lhs.false
  %42 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4357
  %exclusive_count25 = getelementptr inbounds %struct.clk, %struct.clk* %42, i32 0, i32 6, !dbg !4359
  %43 = load i32, i32* %exclusive_count25, align 8, !dbg !4359
  %tobool26 = icmp ne i32 %43, 0, !dbg !4357
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !4360

if.then27:                                        ; preds = %if.end24
  %44 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4361
  %core28 = getelementptr inbounds %struct.clk, %struct.clk* %44, i32 0, i32 0, !dbg !4362
  %45 = load %struct.clk_core*, %struct.clk_core** %core28, align 8, !dbg !4362
  call void @clk_core_rate_protect(%struct.clk_core* %45) #11, !dbg !4363
  br label %if.end29, !dbg !4363

if.end29:                                         ; preds = %if.then27, %if.end24
  call void @clk_prepare_unlock() #11, !dbg !4364
  %46 = load i32, i32* %ret, align 4, !dbg !4365
  store i32 %46, i32* %retval, align 4, !dbg !4366
  br label %return, !dbg !4366

return:                                           ; preds = %if.end29, %if.then1, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !4367
  ret i32 %47, !dbg !4367
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_set_min_rate(%struct.clk* %clk, i64 %rate) #0 !dbg !4368 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %rate.addr = alloca i64, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4369, metadata !DIExpression()), !dbg !4370
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !4371, metadata !DIExpression()), !dbg !4372
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4373
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4373
  br i1 %tobool, label %if.end, label %if.then, !dbg !4375

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4376
  br label %return, !dbg !4376

if.end:                                           ; preds = %entry
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4377
  %2 = load i64, i64* %rate.addr, align 8, !dbg !4378
  %3 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4379
  %max_rate = getelementptr inbounds %struct.clk, %struct.clk* %3, i32 0, i32 5, !dbg !4380
  %4 = load i64, i64* %max_rate, align 8, !dbg !4380
  %call = call i32 @clk_set_rate_range(%struct.clk* %1, i64 %2, i64 %4) #11, !dbg !4381
  store i32 %call, i32* %retval, align 4, !dbg !4382
  br label %return, !dbg !4382

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !4383
  ret i32 %5, !dbg !4383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_set_max_rate(%struct.clk* %clk, i64 %rate) #0 !dbg !4384 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %rate.addr = alloca i64, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4385, metadata !DIExpression()), !dbg !4386
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !4387, metadata !DIExpression()), !dbg !4388
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4389
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4389
  br i1 %tobool, label %if.end, label %if.then, !dbg !4391

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4392
  br label %return, !dbg !4392

if.end:                                           ; preds = %entry
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4393
  %2 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4394
  %min_rate = getelementptr inbounds %struct.clk, %struct.clk* %2, i32 0, i32 4, !dbg !4395
  %3 = load i64, i64* %min_rate, align 8, !dbg !4395
  %4 = load i64, i64* %rate.addr, align 8, !dbg !4396
  %call = call i32 @clk_set_rate_range(%struct.clk* %1, i64 %3, i64 %4) #11, !dbg !4397
  store i32 %call, i32* %retval, align 4, !dbg !4398
  br label %return, !dbg !4398

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !4399
  ret i32 %5, !dbg !4399
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk* @clk_get_parent(%struct.clk* %clk) #0 !dbg !4400 {
entry:
  %retval = alloca %struct.clk*, align 8
  %clk.addr = alloca %struct.clk*, align 8
  %parent = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4403, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.declare(metadata %struct.clk** %parent, metadata !4405, metadata !DIExpression()), !dbg !4406
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4407
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4407
  br i1 %tobool, label %if.end, label %if.then, !dbg !4409

if.then:                                          ; preds = %entry
  store %struct.clk* null, %struct.clk** %retval, align 8, !dbg !4410
  br label %return, !dbg !4410

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !4411
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4412
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !4413
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4413
  %parent1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 6, !dbg !4414
  %3 = load %struct.clk_core*, %struct.clk_core** %parent1, align 8, !dbg !4414
  %tobool2 = icmp ne %struct.clk_core* %3, null, !dbg !4412
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !4415

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !4415

cond.false:                                       ; preds = %if.end
  %4 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4416
  %core3 = getelementptr inbounds %struct.clk, %struct.clk* %4, i32 0, i32 0, !dbg !4417
  %5 = load %struct.clk_core*, %struct.clk_core** %core3, align 8, !dbg !4417
  %parent4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 6, !dbg !4418
  %6 = load %struct.clk_core*, %struct.clk_core** %parent4, align 8, !dbg !4418
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 2, !dbg !4419
  %7 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !4419
  %clk5 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %7, i32 0, i32 1, !dbg !4420
  %8 = load %struct.clk*, %struct.clk** %clk5, align 8, !dbg !4420
  br label %cond.end, !dbg !4415

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.clk* [ null, %cond.true ], [ %8, %cond.false ], !dbg !4415
  store %struct.clk* %cond, %struct.clk** %parent, align 8, !dbg !4421
  call void @clk_prepare_unlock() #11, !dbg !4422
  %9 = load %struct.clk*, %struct.clk** %parent, align 8, !dbg !4423
  store %struct.clk* %9, %struct.clk** %retval, align 8, !dbg !4424
  br label %return, !dbg !4424

return:                                           ; preds = %cond.end, %if.then
  %10 = load %struct.clk*, %struct.clk** %retval, align 8, !dbg !4425
  ret %struct.clk* %10, !dbg !4425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @clk_hw_reparent(%struct.clk_hw* %hw, %struct.clk_hw* %new_parent) #0 !dbg !4426 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %new_parent.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !4429, metadata !DIExpression()), !dbg !4430
  store %struct.clk_hw* %new_parent, %struct.clk_hw** %new_parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %new_parent.addr, metadata !4431, metadata !DIExpression()), !dbg !4432
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !4433
  %tobool = icmp ne %struct.clk_hw* %0, null, !dbg !4433
  br i1 %tobool, label %if.end, label %if.then, !dbg !4435

if.then:                                          ; preds = %entry
  br label %return, !dbg !4436

if.end:                                           ; preds = %entry
  %1 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !4437
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %1, i32 0, i32 0, !dbg !4438
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4438
  %3 = load %struct.clk_hw*, %struct.clk_hw** %new_parent.addr, align 8, !dbg !4439
  %tobool1 = icmp ne %struct.clk_hw* %3, null, !dbg !4439
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !4440

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !4440

cond.false:                                       ; preds = %if.end
  %4 = load %struct.clk_hw*, %struct.clk_hw** %new_parent.addr, align 8, !dbg !4441
  %core2 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %4, i32 0, i32 0, !dbg !4442
  %5 = load %struct.clk_core*, %struct.clk_core** %core2, align 8, !dbg !4442
  br label %cond.end, !dbg !4440

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.clk_core* [ null, %cond.true ], [ %5, %cond.false ], !dbg !4440
  call void @clk_core_reparent(%struct.clk_core* %2, %struct.clk_core* %cond) #11, !dbg !4443
  br label %return, !dbg !4444

return:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !4444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_reparent(%struct.clk_core* %core, %struct.clk_core* %new_parent) #0 !dbg !4445 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %new_parent.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !4448, metadata !DIExpression()), !dbg !4449
  store %struct.clk_core* %new_parent, %struct.clk_core** %new_parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %new_parent.addr, metadata !4450, metadata !DIExpression()), !dbg !4451
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4452
  %1 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !4453
  call void @clk_reparent(%struct.clk_core* %0, %struct.clk_core* %1) #11, !dbg !4454
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4455
  call void @__clk_recalc_accuracies(%struct.clk_core* %2) #11, !dbg !4456
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4457
  call void @__clk_recalc_rates(%struct.clk_core* %3, i64 2) #11, !dbg !4458
  ret void, !dbg !4459
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @clk_has_parent(%struct.clk* %clk, %struct.clk* %parent) #0 !dbg !4460 {
entry:
  %retval = alloca i1, align 1
  %clk.addr = alloca %struct.clk*, align 8
  %parent.addr = alloca %struct.clk*, align 8
  %core = alloca %struct.clk_core*, align 8
  %parent_core = alloca %struct.clk_core*, align 8
  %i = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4463, metadata !DIExpression()), !dbg !4464
  store %struct.clk* %parent, %struct.clk** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %parent.addr, metadata !4465, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core, metadata !4467, metadata !DIExpression()), !dbg !4468
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent_core, metadata !4469, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4471, metadata !DIExpression()), !dbg !4472
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4473
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4473
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4475

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.clk*, %struct.clk** %parent.addr, align 8, !dbg !4476
  %tobool1 = icmp ne %struct.clk* %1, null, !dbg !4476
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4477

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1, !dbg !4478
  br label %return, !dbg !4478

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4479
  %core2 = getelementptr inbounds %struct.clk, %struct.clk* %2, i32 0, i32 0, !dbg !4480
  %3 = load %struct.clk_core*, %struct.clk_core** %core2, align 8, !dbg !4480
  store %struct.clk_core* %3, %struct.clk_core** %core, align 8, !dbg !4481
  %4 = load %struct.clk*, %struct.clk** %parent.addr, align 8, !dbg !4482
  %core3 = getelementptr inbounds %struct.clk, %struct.clk* %4, i32 0, i32 0, !dbg !4483
  %5 = load %struct.clk_core*, %struct.clk_core** %core3, align 8, !dbg !4483
  store %struct.clk_core* %5, %struct.clk_core** %parent_core, align 8, !dbg !4484
  %6 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4485
  %parent4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 6, !dbg !4487
  %7 = load %struct.clk_core*, %struct.clk_core** %parent4, align 8, !dbg !4487
  %8 = load %struct.clk_core*, %struct.clk_core** %parent_core, align 8, !dbg !4488
  %cmp = icmp eq %struct.clk_core* %7, %8, !dbg !4489
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !4490

if.then5:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !4491
  br label %return, !dbg !4491

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !4492
  br label %for.cond, !dbg !4494

for.cond:                                         ; preds = %for.inc, %if.end6
  %9 = load i32, i32* %i, align 4, !dbg !4495
  %10 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4497
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 8, !dbg !4498
  %11 = load i8, i8* %num_parents, align 8, !dbg !4498
  %conv = zext i8 %11 to i32, !dbg !4497
  %cmp7 = icmp slt i32 %9, %conv, !dbg !4499
  br i1 %cmp7, label %for.body, label %for.end, !dbg !4500

for.body:                                         ; preds = %for.cond
  %12 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4501
  %parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %12, i32 0, i32 7, !dbg !4503
  %13 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !4503
  %14 = load i32, i32* %i, align 4, !dbg !4504
  %idxprom = sext i32 %14 to i64, !dbg !4501
  %arrayidx = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %13, i64 %idxprom, !dbg !4501
  %name = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx, i32 0, i32 3, !dbg !4505
  %15 = load i8*, i8** %name, align 8, !dbg !4505
  %16 = load %struct.clk_core*, %struct.clk_core** %parent_core, align 8, !dbg !4506
  %name9 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %16, i32 0, i32 0, !dbg !4507
  %17 = load i8*, i8** %name9, align 8, !dbg !4507
  %call = call i32 @strcmp(i8* %15, i8* %17) #11, !dbg !4508
  %tobool10 = icmp ne i32 %call, 0, !dbg !4508
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !4509

if.then11:                                        ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !4510
  br label %return, !dbg !4510

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !4511

for.inc:                                          ; preds = %if.end12
  %18 = load i32, i32* %i, align 4, !dbg !4512
  %inc = add i32 %18, 1, !dbg !4512
  store i32 %inc, i32* %i, align 4, !dbg !4512
  br label %for.cond, !dbg !4513, !llvm.loop !4514

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !4516
  br label %return, !dbg !4516

return:                                           ; preds = %for.end, %if.then11, %if.then5, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !4517
  ret i1 %19, !dbg !4517
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_hw_set_parent(%struct.clk_hw* %hw, %struct.clk_hw* %parent) #0 !dbg !4518 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %parent.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !4521, metadata !DIExpression()), !dbg !4522
  store %struct.clk_hw* %parent, %struct.clk_hw** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %parent.addr, metadata !4523, metadata !DIExpression()), !dbg !4524
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !4525
  %core = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 0, !dbg !4526
  %1 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4526
  %2 = load %struct.clk_hw*, %struct.clk_hw** %parent.addr, align 8, !dbg !4527
  %core1 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %2, i32 0, i32 0, !dbg !4528
  %3 = load %struct.clk_core*, %struct.clk_core** %core1, align 8, !dbg !4528
  %call = call i32 @clk_core_set_parent_nolock(%struct.clk_core* %1, %struct.clk_core* %3) #11, !dbg !4529
  ret i32 %call, !dbg !4530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_set_parent_nolock(%struct.clk_core* %core, %struct.clk_core* %parent) #0 !dbg !4531 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %parent.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  %p_index = alloca i32, align 4
  %p_rate = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !4532, metadata !DIExpression()), !dbg !4533
  store %struct.clk_core* %parent, %struct.clk_core** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent.addr, metadata !4534, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4536, metadata !DIExpression()), !dbg !4537
  store i32 0, i32* %ret, align 4, !dbg !4537
  call void @llvm.dbg.declare(metadata i32* %p_index, metadata !4538, metadata !DIExpression()), !dbg !4539
  store i32 0, i32* %p_index, align 4, !dbg !4539
  call void @llvm.dbg.declare(metadata i64* %p_rate, metadata !4540, metadata !DIExpression()), !dbg !4541
  store i64 0, i64* %p_rate, align 8, !dbg !4541
  br label %do.body, !dbg !4542

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4543

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4545
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !4545
  br i1 %tobool, label %if.end, label %if.then, !dbg !4547

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !4548
  br label %return, !dbg !4548

if.end:                                           ; preds = %do.end
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4549
  %parent1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 6, !dbg !4551
  %2 = load %struct.clk_core*, %struct.clk_core** %parent1, align 8, !dbg !4551
  %3 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4552
  %cmp = icmp eq %struct.clk_core* %2, %3, !dbg !4553
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4554

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4555
  br label %return, !dbg !4555

if.end3:                                          ; preds = %if.end
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4556
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 8, !dbg !4558
  %5 = load i8, i8* %num_parents, align 8, !dbg !4558
  %conv = zext i8 %5 to i32, !dbg !4556
  %cmp4 = icmp sgt i32 %conv, 1, !dbg !4559
  br i1 %cmp4, label %land.lhs.true, label %if.end8, !dbg !4560

land.lhs.true:                                    ; preds = %if.end3
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4561
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 1, !dbg !4562
  %7 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !4562
  %set_parent = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %7, i32 0, i32 13, !dbg !4563
  %8 = load i32 (%struct.clk_hw*, i8)*, i32 (%struct.clk_hw*, i8)** %set_parent, align 8, !dbg !4563
  %tobool6 = icmp ne i32 (%struct.clk_hw*, i8)* %8, null, !dbg !4561
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !4564

if.then7:                                         ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !4565
  br label %return, !dbg !4565

if.end8:                                          ; preds = %land.lhs.true, %if.end3
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4566
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 15, !dbg !4568
  %10 = load i64, i64* %flags, align 8, !dbg !4568
  %and = and i64 %10, 2, !dbg !4569
  %tobool9 = icmp ne i64 %and, 0, !dbg !4569
  br i1 %tobool9, label %land.lhs.true10, label %if.end13, !dbg !4570

land.lhs.true10:                                  ; preds = %if.end8
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4571
  %prepare_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 19, !dbg !4572
  %12 = load i32, i32* %prepare_count, align 8, !dbg !4572
  %tobool11 = icmp ne i32 %12, 0, !dbg !4571
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !4573

if.then12:                                        ; preds = %land.lhs.true10
  store i32 -16, i32* %retval, align 4, !dbg !4574
  br label %return, !dbg !4574

if.end13:                                         ; preds = %land.lhs.true10, %if.end8
  %13 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4575
  %call = call zeroext i1 @clk_core_rate_is_protected(%struct.clk_core* %13) #11, !dbg !4577
  br i1 %call, label %if.then14, label %if.end15, !dbg !4578

if.then14:                                        ; preds = %if.end13
  store i32 -16, i32* %retval, align 4, !dbg !4579
  br label %return, !dbg !4579

if.end15:                                         ; preds = %if.end13
  %14 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4580
  %tobool16 = icmp ne %struct.clk_core* %14, null, !dbg !4580
  br i1 %tobool16, label %if.then17, label %if.end23, !dbg !4582

if.then17:                                        ; preds = %if.end15
  %15 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4583
  %16 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4585
  %call18 = call i32 @clk_fetch_parent_index(%struct.clk_core* %15, %struct.clk_core* %16) #11, !dbg !4586
  store i32 %call18, i32* %p_index, align 4, !dbg !4587
  %17 = load i32, i32* %p_index, align 4, !dbg !4588
  %cmp19 = icmp slt i32 %17, 0, !dbg !4590
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !4591

if.then21:                                        ; preds = %if.then17
  store i32 0, i32* %tmp, align 4, !dbg !4592
  %18 = load i32, i32* %tmp, align 4, !dbg !4596
  %19 = load i32, i32* %p_index, align 4, !dbg !4597
  store i32 %19, i32* %retval, align 4, !dbg !4598
  br label %return, !dbg !4598

if.end22:                                         ; preds = %if.then17
  %20 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4599
  %rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %20, i32 0, i32 10, !dbg !4600
  %21 = load i64, i64* %rate, align 8, !dbg !4600
  store i64 %21, i64* %p_rate, align 8, !dbg !4601
  br label %if.end23, !dbg !4602

if.end23:                                         ; preds = %if.end22, %if.end15
  %22 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4603
  %call24 = call i32 @clk_pm_runtime_get(%struct.clk_core* %22) #11, !dbg !4604
  store i32 %call24, i32* %ret, align 4, !dbg !4605
  %23 = load i32, i32* %ret, align 4, !dbg !4606
  %tobool25 = icmp ne i32 %23, 0, !dbg !4606
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !4608

if.then26:                                        ; preds = %if.end23
  %24 = load i32, i32* %ret, align 4, !dbg !4609
  store i32 %24, i32* %retval, align 4, !dbg !4610
  br label %return, !dbg !4610

if.end27:                                         ; preds = %if.end23
  %25 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4611
  %26 = load i64, i64* %p_rate, align 8, !dbg !4612
  %call28 = call i32 @__clk_speculate_rates(%struct.clk_core* %25, i64 %26) #11, !dbg !4613
  store i32 %call28, i32* %ret, align 4, !dbg !4614
  %27 = load i32, i32* %ret, align 4, !dbg !4615
  %and29 = and i32 %27, 32768, !dbg !4617
  %tobool30 = icmp ne i32 %and29, 0, !dbg !4617
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !4618

if.then31:                                        ; preds = %if.end27
  br label %runtime_put, !dbg !4619

if.end32:                                         ; preds = %if.end27
  %28 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4620
  %29 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !4621
  %30 = load i32, i32* %p_index, align 4, !dbg !4622
  %conv33 = trunc i32 %30 to i8, !dbg !4622
  %call34 = call i32 @__clk_set_parent(%struct.clk_core* %28, %struct.clk_core* %29, i8 zeroext %conv33) #11, !dbg !4623
  store i32 %call34, i32* %ret, align 4, !dbg !4624
  %31 = load i32, i32* %ret, align 4, !dbg !4625
  %tobool35 = icmp ne i32 %31, 0, !dbg !4625
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !4627

if.then36:                                        ; preds = %if.end32
  %32 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4628
  call void @__clk_recalc_rates(%struct.clk_core* %32, i64 4) #11, !dbg !4630
  br label %if.end37, !dbg !4631

if.else:                                          ; preds = %if.end32
  %33 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4632
  call void @__clk_recalc_rates(%struct.clk_core* %33, i64 2) #11, !dbg !4634
  %34 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4635
  call void @__clk_recalc_accuracies(%struct.clk_core* %34) #11, !dbg !4636
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then36
  br label %runtime_put, !dbg !4625

runtime_put:                                      ; preds = %if.end37, %if.then31
  call void @llvm.dbg.label(metadata !4637), !dbg !4638
  %35 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4639
  call void @clk_pm_runtime_put(%struct.clk_core* %35) #11, !dbg !4640
  %36 = load i32, i32* %ret, align 4, !dbg !4641
  store i32 %36, i32* %retval, align 4, !dbg !4642
  br label %return, !dbg !4642

return:                                           ; preds = %runtime_put, %if.then26, %if.then21, %if.then14, %if.then12, %if.then7, %if.then2, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !4643
  ret i32 %37, !dbg !4643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_set_parent(%struct.clk* %clk, %struct.clk* %parent) #0 !dbg !4644 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %parent.addr = alloca %struct.clk*, align 8
  %ret = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4647, metadata !DIExpression()), !dbg !4648
  store %struct.clk* %parent, %struct.clk** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %parent.addr, metadata !4649, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4651, metadata !DIExpression()), !dbg !4652
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4653
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4653
  br i1 %tobool, label %if.end, label %if.then, !dbg !4655

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4656
  br label %return, !dbg !4656

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !4657
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4658
  %exclusive_count = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 6, !dbg !4660
  %2 = load i32, i32* %exclusive_count, align 8, !dbg !4660
  %tobool1 = icmp ne i32 %2, 0, !dbg !4658
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !4661

if.then2:                                         ; preds = %if.end
  %3 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4662
  %core = getelementptr inbounds %struct.clk, %struct.clk* %3, i32 0, i32 0, !dbg !4663
  %4 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4663
  call void @clk_core_rate_unprotect(%struct.clk_core* %4) #11, !dbg !4664
  br label %if.end3, !dbg !4664

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4665
  %core4 = getelementptr inbounds %struct.clk, %struct.clk* %5, i32 0, i32 0, !dbg !4666
  %6 = load %struct.clk_core*, %struct.clk_core** %core4, align 8, !dbg !4666
  %7 = load %struct.clk*, %struct.clk** %parent.addr, align 8, !dbg !4667
  %tobool5 = icmp ne %struct.clk* %7, null, !dbg !4667
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !4667

cond.true:                                        ; preds = %if.end3
  %8 = load %struct.clk*, %struct.clk** %parent.addr, align 8, !dbg !4668
  %core6 = getelementptr inbounds %struct.clk, %struct.clk* %8, i32 0, i32 0, !dbg !4669
  %9 = load %struct.clk_core*, %struct.clk_core** %core6, align 8, !dbg !4669
  br label %cond.end, !dbg !4667

cond.false:                                       ; preds = %if.end3
  br label %cond.end, !dbg !4667

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.clk_core* [ %9, %cond.true ], [ null, %cond.false ], !dbg !4667
  %call = call i32 @clk_core_set_parent_nolock(%struct.clk_core* %6, %struct.clk_core* %cond) #11, !dbg !4670
  store i32 %call, i32* %ret, align 4, !dbg !4671
  %10 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4672
  %exclusive_count7 = getelementptr inbounds %struct.clk, %struct.clk* %10, i32 0, i32 6, !dbg !4674
  %11 = load i32, i32* %exclusive_count7, align 8, !dbg !4674
  %tobool8 = icmp ne i32 %11, 0, !dbg !4672
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !4675

if.then9:                                         ; preds = %cond.end
  %12 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4676
  %core10 = getelementptr inbounds %struct.clk, %struct.clk* %12, i32 0, i32 0, !dbg !4677
  %13 = load %struct.clk_core*, %struct.clk_core** %core10, align 8, !dbg !4677
  call void @clk_core_rate_protect(%struct.clk_core* %13) #11, !dbg !4678
  br label %if.end11, !dbg !4678

if.end11:                                         ; preds = %if.then9, %cond.end
  call void @clk_prepare_unlock() #11, !dbg !4679
  %14 = load i32, i32* %ret, align 4, !dbg !4680
  store i32 %14, i32* %retval, align 4, !dbg !4681
  br label %return, !dbg !4681

return:                                           ; preds = %if.end11, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !4682
  ret i32 %15, !dbg !4682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_set_phase(%struct.clk* %clk, i32 %degrees) #0 !dbg !4683 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %degrees.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4686, metadata !DIExpression()), !dbg !4687
  store i32 %degrees, i32* %degrees.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %degrees.addr, metadata !4688, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4690, metadata !DIExpression()), !dbg !4691
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4692
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4692
  br i1 %tobool, label %if.end, label %if.then, !dbg !4694

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4695
  br label %return, !dbg !4695

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %degrees.addr, align 4, !dbg !4696
  %rem = srem i32 %1, 360, !dbg !4696
  store i32 %rem, i32* %degrees.addr, align 4, !dbg !4696
  %2 = load i32, i32* %degrees.addr, align 4, !dbg !4697
  %cmp = icmp slt i32 %2, 0, !dbg !4699
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !4700

if.then1:                                         ; preds = %if.end
  %3 = load i32, i32* %degrees.addr, align 4, !dbg !4701
  %add = add i32 %3, 360, !dbg !4701
  store i32 %add, i32* %degrees.addr, align 4, !dbg !4701
  br label %if.end2, !dbg !4702

if.end2:                                          ; preds = %if.then1, %if.end
  call void @clk_prepare_lock() #11, !dbg !4703
  %4 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4704
  %exclusive_count = getelementptr inbounds %struct.clk, %struct.clk* %4, i32 0, i32 6, !dbg !4706
  %5 = load i32, i32* %exclusive_count, align 8, !dbg !4706
  %tobool3 = icmp ne i32 %5, 0, !dbg !4704
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4707

if.then4:                                         ; preds = %if.end2
  %6 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4708
  %core = getelementptr inbounds %struct.clk, %struct.clk* %6, i32 0, i32 0, !dbg !4709
  %7 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4709
  call void @clk_core_rate_unprotect(%struct.clk_core* %7) #11, !dbg !4710
  br label %if.end5, !dbg !4710

if.end5:                                          ; preds = %if.then4, %if.end2
  %8 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4711
  %core6 = getelementptr inbounds %struct.clk, %struct.clk* %8, i32 0, i32 0, !dbg !4712
  %9 = load %struct.clk_core*, %struct.clk_core** %core6, align 8, !dbg !4712
  %10 = load i32, i32* %degrees.addr, align 4, !dbg !4713
  %call = call i32 @clk_core_set_phase_nolock(%struct.clk_core* %9, i32 %10) #11, !dbg !4714
  store i32 %call, i32* %ret, align 4, !dbg !4715
  %11 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4716
  %exclusive_count7 = getelementptr inbounds %struct.clk, %struct.clk* %11, i32 0, i32 6, !dbg !4718
  %12 = load i32, i32* %exclusive_count7, align 8, !dbg !4718
  %tobool8 = icmp ne i32 %12, 0, !dbg !4716
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !4719

if.then9:                                         ; preds = %if.end5
  %13 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4720
  %core10 = getelementptr inbounds %struct.clk, %struct.clk* %13, i32 0, i32 0, !dbg !4721
  %14 = load %struct.clk_core*, %struct.clk_core** %core10, align 8, !dbg !4721
  call void @clk_core_rate_protect(%struct.clk_core* %14) #11, !dbg !4722
  br label %if.end11, !dbg !4722

if.end11:                                         ; preds = %if.then9, %if.end5
  call void @clk_prepare_unlock() #11, !dbg !4723
  %15 = load i32, i32* %ret, align 4, !dbg !4724
  store i32 %15, i32* %retval, align 4, !dbg !4725
  br label %return, !dbg !4725

return:                                           ; preds = %if.end11, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !4726
  ret i32 %16, !dbg !4726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_set_phase_nolock(%struct.clk_core* %core, i32 %degrees) #0 !dbg !4727 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %degrees.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !4730, metadata !DIExpression()), !dbg !4731
  store i32 %degrees, i32* %degrees.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %degrees.addr, metadata !4732, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4734, metadata !DIExpression()), !dbg !4735
  store i32 -22, i32* %ret, align 4, !dbg !4735
  br label %do.body, !dbg !4736

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4737

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4739
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !4739
  br i1 %tobool, label %if.end, label %if.then, !dbg !4741

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !4742
  br label %return, !dbg !4742

if.end:                                           ; preds = %do.end
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4743
  %call = call zeroext i1 @clk_core_rate_is_protected(%struct.clk_core* %1) #11, !dbg !4745
  br i1 %call, label %if.then1, label %if.end2, !dbg !4746

if.then1:                                         ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !4747
  br label %return, !dbg !4747

if.end2:                                          ; preds = %if.end
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4748
  %3 = load i32, i32* %degrees.addr, align 4, !dbg !4749
  call void @trace_clk_set_phase(%struct.clk_core* %2, i32 %3) #11, !dbg !4750
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4751
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 1, !dbg !4753
  %5 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !4753
  %set_phase = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %5, i32 0, i32 19, !dbg !4754
  %6 = load i32 (%struct.clk_hw*, i32)*, i32 (%struct.clk_hw*, i32)** %set_phase, align 8, !dbg !4754
  %tobool3 = icmp ne i32 (%struct.clk_hw*, i32)* %6, null, !dbg !4751
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !4755

if.then4:                                         ; preds = %if.end2
  %7 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4756
  %ops5 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %7, i32 0, i32 1, !dbg !4758
  %8 = load %struct.clk_ops*, %struct.clk_ops** %ops5, align 8, !dbg !4758
  %set_phase6 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %8, i32 0, i32 19, !dbg !4759
  %9 = load i32 (%struct.clk_hw*, i32)*, i32 (%struct.clk_hw*, i32)** %set_phase6, align 8, !dbg !4759
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4760
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 2, !dbg !4761
  %11 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !4761
  %12 = load i32, i32* %degrees.addr, align 4, !dbg !4762
  %call7 = call i32 %9(%struct.clk_hw* %11, i32 %12) #11, !dbg !4756
  store i32 %call7, i32* %ret, align 4, !dbg !4763
  %13 = load i32, i32* %ret, align 4, !dbg !4764
  %tobool8 = icmp ne i32 %13, 0, !dbg !4764
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !4766

if.then9:                                         ; preds = %if.then4
  %14 = load i32, i32* %degrees.addr, align 4, !dbg !4767
  %15 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4768
  %phase = getelementptr inbounds %struct.clk_core, %struct.clk_core* %15, i32 0, i32 24, !dbg !4769
  store i32 %14, i32* %phase, align 8, !dbg !4770
  br label %if.end10, !dbg !4768

if.end10:                                         ; preds = %if.then9, %if.then4
  br label %if.end11, !dbg !4771

if.end11:                                         ; preds = %if.end10, %if.end2
  %16 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4772
  %17 = load i32, i32* %degrees.addr, align 4, !dbg !4773
  call void @trace_clk_set_phase_complete(%struct.clk_core* %16, i32 %17) #11, !dbg !4774
  %18 = load i32, i32* %ret, align 4, !dbg !4775
  store i32 %18, i32* %retval, align 4, !dbg !4776
  br label %return, !dbg !4776

return:                                           ; preds = %if.end11, %if.then1, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !4777
  ret i32 %19, !dbg !4777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_get_phase(%struct.clk* %clk) #0 !dbg !4778 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %ret = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4779, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4781, metadata !DIExpression()), !dbg !4782
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4783
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4783
  br i1 %tobool, label %if.end, label %if.then, !dbg !4785

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4786
  br label %return, !dbg !4786

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !4787
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4788
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !4789
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4789
  %call = call i32 @clk_core_get_phase(%struct.clk_core* %2) #11, !dbg !4790
  store i32 %call, i32* %ret, align 4, !dbg !4791
  call void @clk_prepare_unlock() #11, !dbg !4792
  %3 = load i32, i32* %ret, align 4, !dbg !4793
  store i32 %3, i32* %retval, align 4, !dbg !4794
  br label %return, !dbg !4794

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4795
  ret i32 %4, !dbg !4795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_get_phase(%struct.clk_core* %core) #0 !dbg !4796 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !4797, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4799, metadata !DIExpression()), !dbg !4800
  br label %do.body, !dbg !4801

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4802

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4804
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 1, !dbg !4806
  %1 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !4806
  %get_phase = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %1, i32 0, i32 18, !dbg !4807
  %2 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %get_phase, align 8, !dbg !4807
  %tobool = icmp ne i32 (%struct.clk_hw*)* %2, null, !dbg !4804
  br i1 %tobool, label %if.end, label %if.then, !dbg !4808

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !4809
  br label %return, !dbg !4809

if.end:                                           ; preds = %do.end
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4810
  %ops1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 1, !dbg !4811
  %4 = load %struct.clk_ops*, %struct.clk_ops** %ops1, align 8, !dbg !4811
  %get_phase2 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %4, i32 0, i32 18, !dbg !4812
  %5 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %get_phase2, align 8, !dbg !4812
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4813
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 2, !dbg !4814
  %7 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !4814
  %call = call i32 %5(%struct.clk_hw* %7) #11, !dbg !4810
  store i32 %call, i32* %ret, align 4, !dbg !4815
  %8 = load i32, i32* %ret, align 4, !dbg !4816
  %cmp = icmp sge i32 %8, 0, !dbg !4818
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !4819

if.then3:                                         ; preds = %if.end
  %9 = load i32, i32* %ret, align 4, !dbg !4820
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4821
  %phase = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 24, !dbg !4822
  store i32 %9, i32* %phase, align 8, !dbg !4823
  br label %if.end4, !dbg !4821

if.end4:                                          ; preds = %if.then3, %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !4824
  store i32 %11, i32* %retval, align 4, !dbg !4825
  br label %return, !dbg !4825

return:                                           ; preds = %if.end4, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !4826
  ret i32 %12, !dbg !4826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_set_duty_cycle(%struct.clk* %clk, i32 %num, i32 %den) #0 !dbg !4827 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %num.addr = alloca i32, align 4
  %den.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %duty = alloca %struct.clk_duty, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4830, metadata !DIExpression()), !dbg !4831
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !4832, metadata !DIExpression()), !dbg !4833
  store i32 %den, i32* %den.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %den.addr, metadata !4834, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4836, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.declare(metadata %struct.clk_duty* %duty, metadata !4838, metadata !DIExpression()), !dbg !4839
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4840
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4840
  br i1 %tobool, label %if.end, label %if.then, !dbg !4842

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4843
  br label %return, !dbg !4843

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %den.addr, align 4, !dbg !4844
  %cmp = icmp eq i32 %1, 0, !dbg !4846
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !4847

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i32, i32* %num.addr, align 4, !dbg !4848
  %3 = load i32, i32* %den.addr, align 4, !dbg !4849
  %cmp1 = icmp ugt i32 %2, %3, !dbg !4850
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4851

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !4852
  br label %return, !dbg !4852

if.end3:                                          ; preds = %lor.lhs.false
  %4 = load i32, i32* %num.addr, align 4, !dbg !4853
  %num4 = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %duty, i32 0, i32 0, !dbg !4854
  store i32 %4, i32* %num4, align 4, !dbg !4855
  %5 = load i32, i32* %den.addr, align 4, !dbg !4856
  %den5 = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %duty, i32 0, i32 1, !dbg !4857
  store i32 %5, i32* %den5, align 4, !dbg !4858
  call void @clk_prepare_lock() #11, !dbg !4859
  %6 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4860
  %exclusive_count = getelementptr inbounds %struct.clk, %struct.clk* %6, i32 0, i32 6, !dbg !4862
  %7 = load i32, i32* %exclusive_count, align 8, !dbg !4862
  %tobool6 = icmp ne i32 %7, 0, !dbg !4860
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !4863

if.then7:                                         ; preds = %if.end3
  %8 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4864
  %core = getelementptr inbounds %struct.clk, %struct.clk* %8, i32 0, i32 0, !dbg !4865
  %9 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4865
  call void @clk_core_rate_unprotect(%struct.clk_core* %9) #11, !dbg !4866
  br label %if.end8, !dbg !4866

if.end8:                                          ; preds = %if.then7, %if.end3
  %10 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4867
  %core9 = getelementptr inbounds %struct.clk, %struct.clk* %10, i32 0, i32 0, !dbg !4868
  %11 = load %struct.clk_core*, %struct.clk_core** %core9, align 8, !dbg !4868
  %call = call i32 @clk_core_set_duty_cycle_nolock(%struct.clk_core* %11, %struct.clk_duty* %duty) #11, !dbg !4869
  store i32 %call, i32* %ret, align 4, !dbg !4870
  %12 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4871
  %exclusive_count10 = getelementptr inbounds %struct.clk, %struct.clk* %12, i32 0, i32 6, !dbg !4873
  %13 = load i32, i32* %exclusive_count10, align 8, !dbg !4873
  %tobool11 = icmp ne i32 %13, 0, !dbg !4871
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !4874

if.then12:                                        ; preds = %if.end8
  %14 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4875
  %core13 = getelementptr inbounds %struct.clk, %struct.clk* %14, i32 0, i32 0, !dbg !4876
  %15 = load %struct.clk_core*, %struct.clk_core** %core13, align 8, !dbg !4876
  call void @clk_core_rate_protect(%struct.clk_core* %15) #11, !dbg !4877
  br label %if.end14, !dbg !4877

if.end14:                                         ; preds = %if.then12, %if.end8
  call void @clk_prepare_unlock() #11, !dbg !4878
  %16 = load i32, i32* %ret, align 4, !dbg !4879
  store i32 %16, i32* %retval, align 4, !dbg !4880
  br label %return, !dbg !4880

return:                                           ; preds = %if.end14, %if.then2, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !4881
  ret i32 %17, !dbg !4881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_set_duty_cycle_nolock(%struct.clk_core* %core, %struct.clk_duty* %duty) #0 !dbg !4882 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %duty.addr = alloca %struct.clk_duty*, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !4885, metadata !DIExpression()), !dbg !4886
  store %struct.clk_duty* %duty, %struct.clk_duty** %duty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_duty** %duty.addr, metadata !4887, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4889, metadata !DIExpression()), !dbg !4890
  br label %do.body, !dbg !4891

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4892

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4894
  %call = call zeroext i1 @clk_core_rate_is_protected(%struct.clk_core* %0) #11, !dbg !4896
  br i1 %call, label %if.then, label %if.end, !dbg !4897

if.then:                                          ; preds = %do.end
  store i32 -16, i32* %retval, align 4, !dbg !4898
  br label %return, !dbg !4898

if.end:                                           ; preds = %do.end
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4899
  %2 = load %struct.clk_duty*, %struct.clk_duty** %duty.addr, align 8, !dbg !4900
  call void @trace_clk_set_duty_cycle(%struct.clk_core* %1, %struct.clk_duty* %2) #11, !dbg !4901
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4902
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 1, !dbg !4904
  %4 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !4904
  %set_duty_cycle = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %4, i32 0, i32 21, !dbg !4905
  %5 = load i32 (%struct.clk_hw*, %struct.clk_duty*)*, i32 (%struct.clk_hw*, %struct.clk_duty*)** %set_duty_cycle, align 8, !dbg !4905
  %tobool = icmp ne i32 (%struct.clk_hw*, %struct.clk_duty*)* %5, null, !dbg !4902
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !4906

if.then1:                                         ; preds = %if.end
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4907
  %7 = load %struct.clk_duty*, %struct.clk_duty** %duty.addr, align 8, !dbg !4908
  %call2 = call i32 @clk_core_set_duty_cycle_parent_nolock(%struct.clk_core* %6, %struct.clk_duty* %7) #11, !dbg !4909
  store i32 %call2, i32* %retval, align 4, !dbg !4910
  br label %return, !dbg !4910

if.end3:                                          ; preds = %if.end
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4911
  %ops4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 1, !dbg !4912
  %9 = load %struct.clk_ops*, %struct.clk_ops** %ops4, align 8, !dbg !4912
  %set_duty_cycle5 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %9, i32 0, i32 21, !dbg !4913
  %10 = load i32 (%struct.clk_hw*, %struct.clk_duty*)*, i32 (%struct.clk_hw*, %struct.clk_duty*)** %set_duty_cycle5, align 8, !dbg !4913
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4914
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 2, !dbg !4915
  %12 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !4915
  %13 = load %struct.clk_duty*, %struct.clk_duty** %duty.addr, align 8, !dbg !4916
  %call6 = call i32 %10(%struct.clk_hw* %12, %struct.clk_duty* %13) #11, !dbg !4911
  store i32 %call6, i32* %ret, align 4, !dbg !4917
  %14 = load i32, i32* %ret, align 4, !dbg !4918
  %tobool7 = icmp ne i32 %14, 0, !dbg !4918
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !4920

if.then8:                                         ; preds = %if.end3
  %15 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4921
  %duty9 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %15, i32 0, i32 25, !dbg !4922
  %16 = bitcast %struct.clk_duty* %duty9 to i8*, !dbg !4923
  %17 = load %struct.clk_duty*, %struct.clk_duty** %duty.addr, align 8, !dbg !4924
  %18 = bitcast %struct.clk_duty* %17 to i8*, !dbg !4923
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %18, i64 8, i1 false), !dbg !4923
  br label %if.end10, !dbg !4923

if.end10:                                         ; preds = %if.then8, %if.end3
  %19 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4925
  %20 = load %struct.clk_duty*, %struct.clk_duty** %duty.addr, align 8, !dbg !4926
  call void @trace_clk_set_duty_cycle_complete(%struct.clk_core* %19, %struct.clk_duty* %20) #11, !dbg !4927
  %21 = load i32, i32* %ret, align 4, !dbg !4928
  store i32 %21, i32* %retval, align 4, !dbg !4929
  br label %return, !dbg !4929

return:                                           ; preds = %if.end10, %if.then1, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !4930
  ret i32 %22, !dbg !4930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_get_scaled_duty_cycle(%struct.clk* %clk, i32 %scale) #0 !dbg !4931 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %scale.addr = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !4934, metadata !DIExpression()), !dbg !4935
  store i32 %scale, i32* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale.addr, metadata !4936, metadata !DIExpression()), !dbg !4937
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4938
  %tobool = icmp ne %struct.clk* %0, null, !dbg !4938
  br i1 %tobool, label %if.end, label %if.then, !dbg !4940

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4941
  br label %return, !dbg !4941

if.end:                                           ; preds = %entry
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !4942
  %core = getelementptr inbounds %struct.clk, %struct.clk* %1, i32 0, i32 0, !dbg !4943
  %2 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4943
  %3 = load i32, i32* %scale.addr, align 4, !dbg !4944
  %call = call i32 @clk_core_get_scaled_duty_cycle(%struct.clk_core* %2, i32 %3) #11, !dbg !4945
  store i32 %call, i32* %retval, align 4, !dbg !4946
  br label %return, !dbg !4946

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4947
  ret i32 %4, !dbg !4947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_get_scaled_duty_cycle(%struct.clk_core* %core, i32 %scale) #0 !dbg !4948 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %scale.addr = alloca i32, align 4
  %duty = alloca %struct.clk_duty*, align 8
  %ret = alloca i32, align 4
  %quot = alloca i32, align 4
  %rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !4951, metadata !DIExpression()), !dbg !4952
  store i32 %scale, i32* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale.addr, metadata !4953, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.declare(metadata %struct.clk_duty** %duty, metadata !4955, metadata !DIExpression()), !dbg !4956
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4957
  %duty1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 25, !dbg !4958
  store %struct.clk_duty* %duty1, %struct.clk_duty** %duty, align 8, !dbg !4956
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4959, metadata !DIExpression()), !dbg !4960
  call void @clk_prepare_lock() #11, !dbg !4961
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !4962
  %call = call i32 @clk_core_update_duty_cycle_nolock(%struct.clk_core* %1) #11, !dbg !4963
  store i32 %call, i32* %ret, align 4, !dbg !4964
  %2 = load i32, i32* %ret, align 4, !dbg !4965
  %tobool = icmp ne i32 %2, 0, !dbg !4965
  br i1 %tobool, label %if.end, label %if.then, !dbg !4967

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %quot, metadata !4968, metadata !DIExpression()), !dbg !4970
  %3 = load i32, i32* %scale.addr, align 4, !dbg !4970
  %4 = load %struct.clk_duty*, %struct.clk_duty** %duty, align 8, !dbg !4970
  %den = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %4, i32 0, i32 1, !dbg !4970
  %5 = load i32, i32* %den, align 4, !dbg !4970
  %div = udiv i32 %3, %5, !dbg !4970
  store i32 %div, i32* %quot, align 4, !dbg !4970
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !4971, metadata !DIExpression()), !dbg !4970
  %6 = load i32, i32* %scale.addr, align 4, !dbg !4970
  %7 = load %struct.clk_duty*, %struct.clk_duty** %duty, align 8, !dbg !4970
  %den2 = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %7, i32 0, i32 1, !dbg !4970
  %8 = load i32, i32* %den2, align 4, !dbg !4970
  %rem3 = urem i32 %6, %8, !dbg !4970
  store i32 %rem3, i32* %rem, align 4, !dbg !4970
  %9 = load i32, i32* %quot, align 4, !dbg !4970
  %10 = load %struct.clk_duty*, %struct.clk_duty** %duty, align 8, !dbg !4970
  %num = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %10, i32 0, i32 0, !dbg !4970
  %11 = load i32, i32* %num, align 4, !dbg !4970
  %mul = mul i32 %9, %11, !dbg !4970
  %12 = load i32, i32* %rem, align 4, !dbg !4970
  %13 = load %struct.clk_duty*, %struct.clk_duty** %duty, align 8, !dbg !4970
  %num4 = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %13, i32 0, i32 0, !dbg !4970
  %14 = load i32, i32* %num4, align 4, !dbg !4970
  %mul5 = mul i32 %12, %14, !dbg !4970
  %15 = load %struct.clk_duty*, %struct.clk_duty** %duty, align 8, !dbg !4970
  %den6 = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %15, i32 0, i32 1, !dbg !4970
  %16 = load i32, i32* %den6, align 4, !dbg !4970
  %div7 = udiv i32 %mul5, %16, !dbg !4970
  %add = add i32 %mul, %div7, !dbg !4970
  store i32 %add, i32* %tmp, align 4, !dbg !4970
  %17 = load i32, i32* %tmp, align 4, !dbg !4970
  store i32 %17, i32* %ret, align 4, !dbg !4972
  br label %if.end, !dbg !4973

if.end:                                           ; preds = %if.then, %entry
  call void @clk_prepare_unlock() #11, !dbg !4974
  %18 = load i32, i32* %ret, align 4, !dbg !4975
  ret i32 %18, !dbg !4976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @clk_is_match(%struct.clk* %p, %struct.clk* %q) #0 !dbg !4977 {
entry:
  %retval = alloca i1, align 1
  %p.addr = alloca %struct.clk*, align 8
  %q.addr = alloca %struct.clk*, align 8
  store %struct.clk* %p, %struct.clk** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %p.addr, metadata !4980, metadata !DIExpression()), !dbg !4981
  store %struct.clk* %q, %struct.clk** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %q.addr, metadata !4982, metadata !DIExpression()), !dbg !4983
  %0 = load %struct.clk*, %struct.clk** %p.addr, align 8, !dbg !4984
  %1 = load %struct.clk*, %struct.clk** %q.addr, align 8, !dbg !4986
  %cmp = icmp eq %struct.clk* %0, %1, !dbg !4987
  br i1 %cmp, label %if.then, label %if.end, !dbg !4988

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !4989
  br label %return, !dbg !4989

if.end:                                           ; preds = %entry
  %2 = load %struct.clk*, %struct.clk** %p.addr, align 8, !dbg !4990
  %3 = bitcast %struct.clk* %2 to i8*, !dbg !4990
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %3) #11, !dbg !4992
  br i1 %call, label %if.end7, label %land.lhs.true, !dbg !4993

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.clk*, %struct.clk** %q.addr, align 8, !dbg !4994
  %5 = bitcast %struct.clk* %4 to i8*, !dbg !4994
  %call1 = call zeroext i1 @IS_ERR_OR_NULL(i8* %5) #11, !dbg !4995
  br i1 %call1, label %if.end7, label %if.then2, !dbg !4996

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.clk*, %struct.clk** %p.addr, align 8, !dbg !4997
  %core = getelementptr inbounds %struct.clk, %struct.clk* %6, i32 0, i32 0, !dbg !4999
  %7 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !4999
  %8 = load %struct.clk*, %struct.clk** %q.addr, align 8, !dbg !5000
  %core3 = getelementptr inbounds %struct.clk, %struct.clk* %8, i32 0, i32 0, !dbg !5001
  %9 = load %struct.clk_core*, %struct.clk_core** %core3, align 8, !dbg !5001
  %cmp4 = icmp eq %struct.clk_core* %7, %9, !dbg !5002
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5003

if.then5:                                         ; preds = %if.then2
  store i1 true, i1* %retval, align 1, !dbg !5004
  br label %return, !dbg !5004

if.end6:                                          ; preds = %if.then2
  br label %if.end7, !dbg !5001

if.end7:                                          ; preds = %if.end6, %land.lhs.true, %if.end
  store i1 false, i1* %retval, align 1, !dbg !5005
  br label %return, !dbg !5005

return:                                           ; preds = %if.end7, %if.then5, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !5006
  ret i1 %10, !dbg !5006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk* @clk_hw_create_clk(%struct.device* %dev, %struct.clk_hw* %hw, i8* %dev_id, i8* %con_id) #0 !dbg !5007 {
entry:
  %retval = alloca %struct.clk*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %hw.addr = alloca %struct.clk_hw*, align 8
  %dev_id.addr = alloca i8*, align 8
  %con_id.addr = alloca i8*, align 8
  %clk = alloca %struct.clk*, align 8
  %core = alloca %struct.clk_core*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5010, metadata !DIExpression()), !dbg !5011
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !5012, metadata !DIExpression()), !dbg !5013
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !5014, metadata !DIExpression()), !dbg !5015
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !5016, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.declare(metadata %struct.clk** %clk, metadata !5018, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core, metadata !5020, metadata !DIExpression()), !dbg !5021
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5022
  %1 = bitcast %struct.clk_hw* %0 to i8*, !dbg !5022
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #11, !dbg !5024
  br i1 %call, label %if.then, label %if.end, !dbg !5025

if.then:                                          ; preds = %entry
  %2 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5026
  %3 = bitcast %struct.clk_hw* %2 to i8*, !dbg !5026
  %call1 = call i8* @ERR_CAST(i8* %3) #11, !dbg !5027
  %4 = bitcast i8* %call1 to %struct.clk*, !dbg !5027
  store %struct.clk* %4, %struct.clk** %retval, align 8, !dbg !5028
  br label %return, !dbg !5028

if.end:                                           ; preds = %entry
  %5 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5029
  %core2 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %5, i32 0, i32 0, !dbg !5030
  %6 = load %struct.clk_core*, %struct.clk_core** %core2, align 8, !dbg !5030
  store %struct.clk_core* %6, %struct.clk_core** %core, align 8, !dbg !5031
  %7 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5032
  %8 = load i8*, i8** %dev_id.addr, align 8, !dbg !5033
  %9 = load i8*, i8** %con_id.addr, align 8, !dbg !5034
  %call3 = call %struct.clk* @alloc_clk(%struct.clk_core* %7, i8* %8, i8* %9) #11, !dbg !5035
  store %struct.clk* %call3, %struct.clk** %clk, align 8, !dbg !5036
  %10 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5037
  %11 = bitcast %struct.clk* %10 to i8*, !dbg !5037
  %call4 = call zeroext i1 @IS_ERR(i8* %11) #11, !dbg !5039
  br i1 %call4, label %if.then5, label %if.end6, !dbg !5040

if.then5:                                         ; preds = %if.end
  %12 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5041
  store %struct.clk* %12, %struct.clk** %retval, align 8, !dbg !5042
  br label %return, !dbg !5042

if.end6:                                          ; preds = %if.end
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5043
  %14 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5044
  %dev7 = getelementptr inbounds %struct.clk, %struct.clk* %14, i32 0, i32 1, !dbg !5045
  store %struct.device* %13, %struct.device** %dev7, align 8, !dbg !5046
  %15 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5047
  %owner = getelementptr inbounds %struct.clk_core, %struct.clk_core* %15, i32 0, i32 3, !dbg !5049
  %16 = load %struct.module*, %struct.module** %owner, align 8, !dbg !5049
  %call8 = call zeroext i1 @try_module_get(%struct.module* %16) #11, !dbg !5050
  br i1 %call8, label %if.end11, label %if.then9, !dbg !5051

if.then9:                                         ; preds = %if.end6
  %17 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5052
  call void @free_clk(%struct.clk* %17) #11, !dbg !5054
  %call10 = call i8* @ERR_PTR(i64 -2) #11, !dbg !5055
  %18 = bitcast i8* %call10 to %struct.clk*, !dbg !5055
  store %struct.clk* %18, %struct.clk** %retval, align 8, !dbg !5056
  br label %return, !dbg !5056

if.end11:                                         ; preds = %if.end6
  %19 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5057
  %ref = getelementptr inbounds %struct.clk_core, %struct.clk_core* %19, i32 0, i32 30, !dbg !5058
  call void @kref_get(%struct.kref* %ref) #11, !dbg !5059
  %20 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5060
  %21 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5061
  call void @clk_core_link_consumer(%struct.clk_core* %20, %struct.clk* %21) #11, !dbg !5062
  %22 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5063
  store %struct.clk* %22, %struct.clk** %retval, align 8, !dbg !5064
  br label %return, !dbg !5064

return:                                           ; preds = %if.end11, %if.then9, %if.then5, %if.then
  %23 = load %struct.clk*, %struct.clk** %retval, align 8, !dbg !5065
  ret %struct.clk* %23, !dbg !5065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_CAST(i8* %ptr) #0 !dbg !5066 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5069, metadata !DIExpression()), !dbg !5070
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5071
  ret i8* %0, !dbg !5072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk* @alloc_clk(%struct.clk_core* %core, i8* %dev_id, i8* %con_id) #0 !dbg !5073 {
entry:
  %retval = alloca %struct.clk*, align 8
  %core.addr = alloca %struct.clk_core*, align 8
  %dev_id.addr = alloca i8*, align 8
  %con_id.addr = alloca i8*, align 8
  %clk = alloca %struct.clk*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !5076, metadata !DIExpression()), !dbg !5077
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !5078, metadata !DIExpression()), !dbg !5079
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !5080, metadata !DIExpression()), !dbg !5081
  call void @llvm.dbg.declare(metadata %struct.clk** %clk, metadata !5082, metadata !DIExpression()), !dbg !5083
  %call = call i8* @kzalloc(i64 72, i32 3264) #11, !dbg !5084
  %0 = bitcast i8* %call to %struct.clk*, !dbg !5084
  store %struct.clk* %0, %struct.clk** %clk, align 8, !dbg !5085
  %1 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5086
  %tobool = icmp ne %struct.clk* %1, null, !dbg !5086
  br i1 %tobool, label %if.end, label %if.then, !dbg !5088

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #11, !dbg !5089
  %2 = bitcast i8* %call1 to %struct.clk*, !dbg !5089
  store %struct.clk* %2, %struct.clk** %retval, align 8, !dbg !5090
  br label %return, !dbg !5090

if.end:                                           ; preds = %entry
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !5091
  %4 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5092
  %core2 = getelementptr inbounds %struct.clk, %struct.clk* %4, i32 0, i32 0, !dbg !5093
  store %struct.clk_core* %3, %struct.clk_core** %core2, align 8, !dbg !5094
  %5 = load i8*, i8** %dev_id.addr, align 8, !dbg !5095
  %6 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5096
  %dev_id3 = getelementptr inbounds %struct.clk, %struct.clk* %6, i32 0, i32 2, !dbg !5097
  store i8* %5, i8** %dev_id3, align 8, !dbg !5098
  %7 = load i8*, i8** %con_id.addr, align 8, !dbg !5099
  %call4 = call i8* @kstrdup_const(i8* %7, i32 3264) #11, !dbg !5100
  %8 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5101
  %con_id5 = getelementptr inbounds %struct.clk, %struct.clk* %8, i32 0, i32 3, !dbg !5102
  store i8* %call4, i8** %con_id5, align 8, !dbg !5103
  %9 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5104
  %max_rate = getelementptr inbounds %struct.clk, %struct.clk* %9, i32 0, i32 5, !dbg !5105
  store i64 -1, i64* %max_rate, align 8, !dbg !5106
  %10 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5107
  store %struct.clk* %10, %struct.clk** %retval, align 8, !dbg !5108
  br label %return, !dbg !5108

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct.clk*, %struct.clk** %retval, align 8, !dbg !5109
  ret %struct.clk* %11, !dbg !5109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5110 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5111, metadata !DIExpression()), !dbg !5112
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5113
  %1 = ptrtoint i8* %0 to i64, !dbg !5113
  %2 = inttoptr i64 %1 to i8*, !dbg !5113
  %3 = ptrtoint i8* %2 to i64, !dbg !5113
  %cmp = icmp uge i64 %3, -4095, !dbg !5113
  %lnot = xor i1 %cmp, true, !dbg !5113
  %lnot1 = xor i1 %lnot, true, !dbg !5113
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5113
  %conv = sext i32 %lnot.ext to i64, !dbg !5113
  %tobool = icmp ne i64 %conv, 0, !dbg !5113
  ret i1 %tobool, !dbg !5114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #0 !dbg !5115 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !5119, metadata !DIExpression()), !dbg !5120
  ret i1 true, !dbg !5121
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_clk(%struct.clk* %clk) #0 !dbg !5122 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !5123, metadata !DIExpression()), !dbg !5124
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5125
  %con_id = getelementptr inbounds %struct.clk, %struct.clk* %0, i32 0, i32 3, !dbg !5126
  %1 = load i8*, i8** %con_id, align 8, !dbg !5126
  call void @kfree_const(i8* %1) #11, !dbg !5127
  %2 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5128
  %3 = bitcast %struct.clk* %2 to i8*, !dbg !5128
  call void @kfree(i8* %3) #11, !dbg !5129
  ret void, !dbg !5130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !5131 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !5134, metadata !DIExpression()), !dbg !5135
  %0 = load i64, i64* %error.addr, align 8, !dbg !5136
  %1 = inttoptr i64 %0 to i8*, !dbg !5137
  ret i8* %1, !dbg !5138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #0 !dbg !5139 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !5143, metadata !DIExpression()), !dbg !5144
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !5145
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !5146
  call void @refcount_inc(%struct.refcount_struct* %refcount) #11, !dbg !5147
  ret void, !dbg !5148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_link_consumer(%struct.clk_core* %core, %struct.clk* %clk) #0 !dbg !5149 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !5152, metadata !DIExpression()), !dbg !5153
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !5154, metadata !DIExpression()), !dbg !5155
  call void @clk_prepare_lock() #11, !dbg !5156
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5157
  %clks_node = getelementptr inbounds %struct.clk, %struct.clk* %0, i32 0, i32 7, !dbg !5158
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !5159
  %clks = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 28, !dbg !5160
  call void @hlist_add_head(%struct.hlist_node* %clks_node, %struct.hlist_head* %clks) #11, !dbg !5161
  call void @clk_prepare_unlock() #11, !dbg !5162
  ret void, !dbg !5163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk* @clk_register(%struct.device* %dev, %struct.clk_hw* %hw) #0 !dbg !5164 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5167, metadata !DIExpression()), !dbg !5168
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !5169, metadata !DIExpression()), !dbg !5170
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5171
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5172
  %call = call %struct.device_node* @dev_or_parent_of_node(%struct.device* %1) #11, !dbg !5173
  %2 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5174
  %call1 = call %struct.clk* @__clk_register(%struct.device* %0, %struct.device_node* %call, %struct.clk_hw* %2) #11, !dbg !5175
  ret %struct.clk* %call1, !dbg !5176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk* @__clk_register(%struct.device* %dev, %struct.device_node* %np, %struct.clk_hw* %hw) #0 !dbg !5177 {
entry:
  %retval = alloca %struct.clk*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %hw.addr = alloca %struct.clk_hw*, align 8
  %ret = alloca i32, align 4
  %core = alloca %struct.clk_core*, align 8
  %init = alloca %struct.clk_init_data*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5180, metadata !DIExpression()), !dbg !5181
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !5182, metadata !DIExpression()), !dbg !5183
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !5184, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5186, metadata !DIExpression()), !dbg !5187
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core, metadata !5188, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.declare(metadata %struct.clk_init_data** %init, metadata !5190, metadata !DIExpression()), !dbg !5191
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5192
  %init1 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 2, !dbg !5193
  %1 = load %struct.clk_init_data*, %struct.clk_init_data** %init1, align 8, !dbg !5193
  store %struct.clk_init_data* %1, %struct.clk_init_data** %init, align 8, !dbg !5191
  %2 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5194
  %init2 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %2, i32 0, i32 2, !dbg !5195
  store %struct.clk_init_data* null, %struct.clk_init_data** %init2, align 8, !dbg !5196
  %call = call i8* @kzalloc(i64 216, i32 3264) #11, !dbg !5197
  %3 = bitcast i8* %call to %struct.clk_core*, !dbg !5197
  store %struct.clk_core* %3, %struct.clk_core** %core, align 8, !dbg !5198
  %4 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5199
  %tobool = icmp ne %struct.clk_core* %4, null, !dbg !5199
  br i1 %tobool, label %if.end, label %if.then, !dbg !5201

if.then:                                          ; preds = %entry
  store i32 -12, i32* %ret, align 4, !dbg !5202
  br label %fail_out, !dbg !5204

if.end:                                           ; preds = %entry
  %5 = load %struct.clk_init_data*, %struct.clk_init_data** %init, align 8, !dbg !5205
  %name = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %5, i32 0, i32 0, !dbg !5206
  %6 = load i8*, i8** %name, align 8, !dbg !5206
  %call3 = call i8* @kstrdup_const(i8* %6, i32 3264) #11, !dbg !5207
  %7 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5208
  %name4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %7, i32 0, i32 0, !dbg !5209
  store i8* %call3, i8** %name4, align 8, !dbg !5210
  %8 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5211
  %name5 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 0, !dbg !5213
  %9 = load i8*, i8** %name5, align 8, !dbg !5213
  %tobool6 = icmp ne i8* %9, null, !dbg !5211
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !5214

if.then7:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !5215
  br label %fail_name, !dbg !5217

if.end8:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5218, metadata !DIExpression()), !dbg !5221
  %10 = load %struct.clk_init_data*, %struct.clk_init_data** %init, align 8, !dbg !5221
  %ops = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %10, i32 0, i32 1, !dbg !5221
  %11 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !5221
  %tobool9 = icmp ne %struct.clk_ops* %11, null, !dbg !5221
  %lnot = xor i1 %tobool9, true, !dbg !5221
  %lnot10 = xor i1 %lnot, true, !dbg !5221
  %lnot11 = xor i1 %lnot10, true, !dbg !5221
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !5221
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5221
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !5222
  %tobool12 = icmp ne i32 %12, 0, !dbg !5222
  %lnot13 = xor i1 %tobool12, true, !dbg !5222
  %lnot15 = xor i1 %lnot13, true, !dbg !5222
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !5222
  %conv = sext i32 %lnot.ext16 to i64, !dbg !5222
  %tobool17 = icmp ne i64 %conv, 0, !dbg !5222
  br i1 %tobool17, label %if.then18, label %if.end25, !dbg !5221

if.then18:                                        ; preds = %if.end8
  br label %do.body, !dbg !5222

do.body:                                          ; preds = %if.then18
  br label %do.body19, !dbg !5224

do.body19:                                        ; preds = %do.body
  br label %do.end, !dbg !5226

do.end:                                           ; preds = %do.body19
  br label %do.body20, !dbg !5224

do.body20:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 3790, i32 2305, i64 12) #10, !dbg !5228, !srcloc !5230
  br label %do.end21, !dbg !5228

do.end21:                                         ; preds = %do.body20
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 240) #10, !dbg !5231, !srcloc !5233
  br label %do.body22, !dbg !5224

do.body22:                                        ; preds = %do.end21
  br label %do.end23, !dbg !5234

do.end23:                                         ; preds = %do.body22
  br label %do.end24, !dbg !5224

do.end24:                                         ; preds = %do.end23
  br label %if.end25, !dbg !5224

if.end25:                                         ; preds = %do.end24, %if.end8
  %13 = load i32, i32* %__ret_warn_on, align 4, !dbg !5221
  %tobool26 = icmp ne i32 %13, 0, !dbg !5221
  %lnot27 = xor i1 %tobool26, true, !dbg !5221
  %lnot29 = xor i1 %lnot27, true, !dbg !5221
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !5221
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !5221
  store i64 %conv31, i64* %tmp, align 8, !dbg !5222
  %14 = load i64, i64* %tmp, align 8, !dbg !5221
  %tobool32 = icmp ne i64 %14, 0, !dbg !5236
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !5237

if.then33:                                        ; preds = %if.end25
  store i32 -22, i32* %ret, align 4, !dbg !5238
  br label %fail_ops, !dbg !5240

if.end34:                                         ; preds = %if.end25
  %15 = load %struct.clk_init_data*, %struct.clk_init_data** %init, align 8, !dbg !5241
  %ops35 = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %15, i32 0, i32 1, !dbg !5242
  %16 = load %struct.clk_ops*, %struct.clk_ops** %ops35, align 8, !dbg !5242
  %17 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5243
  %ops36 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %17, i32 0, i32 1, !dbg !5244
  store %struct.clk_ops* %16, %struct.clk_ops** %ops36, align 8, !dbg !5245
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5246
  %tobool37 = icmp ne %struct.device* %18, null, !dbg !5246
  br i1 %tobool37, label %land.lhs.true, label %if.end41, !dbg !5248

land.lhs.true:                                    ; preds = %if.end34
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5249
  %call38 = call zeroext i1 @pm_runtime_enabled(%struct.device* %19) #11, !dbg !5250
  br i1 %call38, label %if.then40, label %if.end41, !dbg !5251

if.then40:                                        ; preds = %land.lhs.true
  %20 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5252
  %rpm_enabled = getelementptr inbounds %struct.clk_core, %struct.clk_core* %20, i32 0, i32 17, !dbg !5253
  store i8 1, i8* %rpm_enabled, align 1, !dbg !5254
  br label %if.end41, !dbg !5252

if.end41:                                         ; preds = %if.then40, %land.lhs.true, %if.end34
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5255
  %22 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5256
  %dev42 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %22, i32 0, i32 4, !dbg !5257
  store %struct.device* %21, %struct.device** %dev42, align 8, !dbg !5258
  %23 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !5259
  %24 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5260
  %of_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %24, i32 0, i32 5, !dbg !5261
  store %struct.device_node* %23, %struct.device_node** %of_node, align 8, !dbg !5262
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5263
  %tobool43 = icmp ne %struct.device* %25, null, !dbg !5263
  br i1 %tobool43, label %land.lhs.true44, label %if.end49, !dbg !5265

land.lhs.true44:                                  ; preds = %if.end41
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5266
  %driver = getelementptr inbounds %struct.device, %struct.device* %26, i32 0, i32 6, !dbg !5267
  %27 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !5267
  %tobool45 = icmp ne %struct.device_driver* %27, null, !dbg !5266
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !5268

if.then46:                                        ; preds = %land.lhs.true44
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5269
  %driver47 = getelementptr inbounds %struct.device, %struct.device* %28, i32 0, i32 6, !dbg !5270
  %29 = load %struct.device_driver*, %struct.device_driver** %driver47, align 8, !dbg !5270
  %owner = getelementptr inbounds %struct.device_driver, %struct.device_driver* %29, i32 0, i32 2, !dbg !5271
  %30 = load %struct.module*, %struct.module** %owner, align 8, !dbg !5271
  %31 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5272
  %owner48 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %31, i32 0, i32 3, !dbg !5273
  store %struct.module* %30, %struct.module** %owner48, align 8, !dbg !5274
  br label %if.end49, !dbg !5272

if.end49:                                         ; preds = %if.then46, %land.lhs.true44, %if.end41
  %32 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5275
  %33 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5276
  %hw50 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %33, i32 0, i32 2, !dbg !5277
  store %struct.clk_hw* %32, %struct.clk_hw** %hw50, align 8, !dbg !5278
  %34 = load %struct.clk_init_data*, %struct.clk_init_data** %init, align 8, !dbg !5279
  %flags = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %34, i32 0, i32 6, !dbg !5280
  %35 = load i64, i64* %flags, align 8, !dbg !5280
  %36 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5281
  %flags51 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %36, i32 0, i32 15, !dbg !5282
  store i64 %35, i64* %flags51, align 8, !dbg !5283
  %37 = load %struct.clk_init_data*, %struct.clk_init_data** %init, align 8, !dbg !5284
  %num_parents = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %37, i32 0, i32 5, !dbg !5285
  %38 = load i8, i8* %num_parents, align 8, !dbg !5285
  %39 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5286
  %num_parents52 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %39, i32 0, i32 8, !dbg !5287
  store i8 %38, i8* %num_parents52, align 8, !dbg !5288
  %40 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5289
  %min_rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %40, i32 0, i32 21, !dbg !5290
  store i64 0, i64* %min_rate, align 8, !dbg !5291
  %41 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5292
  %max_rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %41, i32 0, i32 22, !dbg !5293
  store i64 -1, i64* %max_rate, align 8, !dbg !5294
  %42 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5295
  %43 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5296
  %core53 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %43, i32 0, i32 0, !dbg !5297
  store %struct.clk_core* %42, %struct.clk_core** %core53, align 8, !dbg !5298
  %44 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5299
  %45 = load %struct.clk_init_data*, %struct.clk_init_data** %init, align 8, !dbg !5300
  %call54 = call i32 @clk_core_populate_parent_map(%struct.clk_core* %44, %struct.clk_init_data* %45) #11, !dbg !5301
  store i32 %call54, i32* %ret, align 4, !dbg !5302
  %46 = load i32, i32* %ret, align 4, !dbg !5303
  %tobool55 = icmp ne i32 %46, 0, !dbg !5303
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !5305

if.then56:                                        ; preds = %if.end49
  br label %fail_parents, !dbg !5306

if.end57:                                         ; preds = %if.end49
  %47 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5307
  %clks = getelementptr inbounds %struct.clk_core, %struct.clk_core* %47, i32 0, i32 28, !dbg !5307
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %clks, i32 0, i32 0, !dbg !5307
  store %struct.hlist_node* null, %struct.hlist_node** %first, align 8, !dbg !5307
  %48 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5308
  %call58 = call %struct.clk* @alloc_clk(%struct.clk_core* %48, i8* null, i8* null) #11, !dbg !5309
  %49 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5310
  %clk = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %49, i32 0, i32 1, !dbg !5311
  store %struct.clk* %call58, %struct.clk** %clk, align 8, !dbg !5312
  %50 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5313
  %clk59 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %50, i32 0, i32 1, !dbg !5315
  %51 = load %struct.clk*, %struct.clk** %clk59, align 8, !dbg !5315
  %52 = bitcast %struct.clk* %51 to i8*, !dbg !5313
  %call60 = call zeroext i1 @IS_ERR(i8* %52) #11, !dbg !5316
  br i1 %call60, label %if.then61, label %if.end65, !dbg !5317

if.then61:                                        ; preds = %if.end57
  %53 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5318
  %clk62 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %53, i32 0, i32 1, !dbg !5320
  %54 = load %struct.clk*, %struct.clk** %clk62, align 8, !dbg !5320
  %55 = bitcast %struct.clk* %54 to i8*, !dbg !5318
  %call63 = call i64 @PTR_ERR(i8* %55) #11, !dbg !5321
  %conv64 = trunc i64 %call63 to i32, !dbg !5321
  store i32 %conv64, i32* %ret, align 4, !dbg !5322
  br label %fail_create_clk, !dbg !5323

if.end65:                                         ; preds = %if.end57
  %56 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5324
  %core66 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %56, i32 0, i32 0, !dbg !5325
  %57 = load %struct.clk_core*, %struct.clk_core** %core66, align 8, !dbg !5325
  %58 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5326
  %clk67 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %58, i32 0, i32 1, !dbg !5327
  %59 = load %struct.clk*, %struct.clk** %clk67, align 8, !dbg !5327
  call void @clk_core_link_consumer(%struct.clk_core* %57, %struct.clk* %59) #11, !dbg !5328
  %60 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5329
  %call68 = call i32 @__clk_core_init(%struct.clk_core* %60) #11, !dbg !5330
  store i32 %call68, i32* %ret, align 4, !dbg !5331
  %61 = load i32, i32* %ret, align 4, !dbg !5332
  %tobool69 = icmp ne i32 %61, 0, !dbg !5332
  br i1 %tobool69, label %if.end72, label %if.then70, !dbg !5334

if.then70:                                        ; preds = %if.end65
  %62 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5335
  %clk71 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %62, i32 0, i32 1, !dbg !5336
  %63 = load %struct.clk*, %struct.clk** %clk71, align 8, !dbg !5336
  store %struct.clk* %63, %struct.clk** %retval, align 8, !dbg !5337
  br label %return, !dbg !5337

if.end72:                                         ; preds = %if.end65
  call void @clk_prepare_lock() #11, !dbg !5338
  %64 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5339
  %clk73 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %64, i32 0, i32 1, !dbg !5340
  %65 = load %struct.clk*, %struct.clk** %clk73, align 8, !dbg !5340
  call void @clk_core_unlink_consumer(%struct.clk* %65) #11, !dbg !5341
  call void @clk_prepare_unlock() #11, !dbg !5342
  %66 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5343
  %clk74 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %66, i32 0, i32 1, !dbg !5344
  %67 = load %struct.clk*, %struct.clk** %clk74, align 8, !dbg !5344
  call void @free_clk(%struct.clk* %67) #11, !dbg !5345
  %68 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5346
  %clk75 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %68, i32 0, i32 1, !dbg !5347
  store %struct.clk* null, %struct.clk** %clk75, align 8, !dbg !5348
  br label %fail_create_clk, !dbg !5346

fail_create_clk:                                  ; preds = %if.end72, %if.then61
  call void @llvm.dbg.label(metadata !5349), !dbg !5350
  %69 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5351
  call void @clk_core_free_parent_map(%struct.clk_core* %69) #11, !dbg !5352
  br label %fail_parents, !dbg !5352

fail_parents:                                     ; preds = %fail_create_clk, %if.then56
  call void @llvm.dbg.label(metadata !5353), !dbg !5354
  br label %fail_ops, !dbg !5352

fail_ops:                                         ; preds = %fail_parents, %if.then33
  call void @llvm.dbg.label(metadata !5355), !dbg !5356
  %70 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5357
  %name76 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %70, i32 0, i32 0, !dbg !5358
  %71 = load i8*, i8** %name76, align 8, !dbg !5358
  call void @kfree_const(i8* %71) #11, !dbg !5359
  br label %fail_name, !dbg !5359

fail_name:                                        ; preds = %fail_ops, %if.then7
  call void @llvm.dbg.label(metadata !5360), !dbg !5361
  %72 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5362
  %73 = bitcast %struct.clk_core* %72 to i8*, !dbg !5362
  call void @kfree(i8* %73) #11, !dbg !5363
  br label %fail_out, !dbg !5363

fail_out:                                         ; preds = %fail_name, %if.then
  call void @llvm.dbg.label(metadata !5364), !dbg !5365
  %74 = load i32, i32* %ret, align 4, !dbg !5366
  %conv77 = sext i32 %74 to i64, !dbg !5366
  %call78 = call i8* @ERR_PTR(i64 %conv77) #11, !dbg !5367
  %75 = bitcast i8* %call78 to %struct.clk*, !dbg !5367
  store %struct.clk* %75, %struct.clk** %retval, align 8, !dbg !5368
  br label %return, !dbg !5368

return:                                           ; preds = %fail_out, %if.then70
  %76 = load %struct.clk*, %struct.clk** %retval, align 8, !dbg !5369
  ret %struct.clk* %76, !dbg !5369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @dev_or_parent_of_node(%struct.device* %dev) #0 !dbg !5370 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %np = alloca %struct.device_node*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5373, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !5375, metadata !DIExpression()), !dbg !5376
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5377
  %tobool = icmp ne %struct.device* %0, null, !dbg !5377
  br i1 %tobool, label %if.end, label %if.then, !dbg !5379

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !5380
  br label %return, !dbg !5380

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5381
  %call = call %struct.device_node* @dev_of_node(%struct.device* %1) #11, !dbg !5382
  store %struct.device_node* %call, %struct.device_node** %np, align 8, !dbg !5383
  %2 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5384
  %tobool1 = icmp ne %struct.device_node* %2, null, !dbg !5384
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !5386

if.then2:                                         ; preds = %if.end
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5387
  %parent = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 1, !dbg !5388
  %4 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5388
  %call3 = call %struct.device_node* @dev_of_node(%struct.device* %4) #11, !dbg !5389
  store %struct.device_node* %call3, %struct.device_node** %np, align 8, !dbg !5390
  br label %if.end4, !dbg !5391

if.end4:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5392
  store %struct.device_node* %5, %struct.device_node** %retval, align 8, !dbg !5393
  br label %return, !dbg !5393

return:                                           ; preds = %if.end4, %if.then
  %6 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !5394
  ret %struct.device_node* %6, !dbg !5394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_hw_register(%struct.device* %dev, %struct.clk_hw* %hw) #0 !dbg !5395 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5398, metadata !DIExpression()), !dbg !5399
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !5400, metadata !DIExpression()), !dbg !5401
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5402
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5403
  %call = call %struct.device_node* @dev_or_parent_of_node(%struct.device* %1) #11, !dbg !5404
  %2 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5405
  %call1 = call %struct.clk* @__clk_register(%struct.device* %0, %struct.device_node* %call, %struct.clk_hw* %2) #11, !dbg !5406
  %3 = bitcast %struct.clk* %call1 to i8*, !dbg !5406
  %call2 = call i32 @PTR_ERR_OR_ZERO(i8* %3) #11, !dbg !5407
  ret i32 %call2, !dbg !5408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @PTR_ERR_OR_ZERO(i8* %ptr) #0 !dbg !5409 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5412, metadata !DIExpression()), !dbg !5413
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5414
  %call = call zeroext i1 @IS_ERR(i8* %0) #11, !dbg !5416
  br i1 %call, label %if.then, label %if.else, !dbg !5417

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !5418
  %call1 = call i64 @PTR_ERR(i8* %1) #11, !dbg !5419
  %conv = trunc i64 %call1 to i32, !dbg !5419
  store i32 %conv, i32* %retval, align 4, !dbg !5420
  br label %return, !dbg !5420

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5421
  br label %return, !dbg !5421

return:                                           ; preds = %if.else, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !5422
  ret i32 %2, !dbg !5422
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_clk_hw_register(%struct.device_node* %node, %struct.clk_hw* %hw) #0 !dbg !5423 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !5426, metadata !DIExpression()), !dbg !5427
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !5428, metadata !DIExpression()), !dbg !5429
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5430
  %1 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5431
  %call = call %struct.clk* @__clk_register(%struct.device* null, %struct.device_node* %0, %struct.clk_hw* %1) #11, !dbg !5432
  %2 = bitcast %struct.clk* %call to i8*, !dbg !5432
  %call1 = call i32 @PTR_ERR_OR_ZERO(i8* %2) #11, !dbg !5433
  ret i32 %call1, !dbg !5434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @clk_unregister(%struct.clk* %clk) #0 !dbg !5435 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  %flags = alloca i64, align 8
  %ops = alloca %struct.clk_ops*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %child = alloca %struct.clk_core*, align 8
  %t = alloca %struct.hlist_node*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp44 = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp48 = alloca %struct.clk_core*, align 8
  %tmp50 = alloca i32, align 4
  %____ptr53 = alloca %struct.hlist_node*, align 8
  %tmp54 = alloca %struct.clk_core*, align 8
  %__mptr57 = alloca i8*, align 8
  %tmp60 = alloca %struct.clk_core*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !5436, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5438, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.declare(metadata %struct.clk_ops** %ops, metadata !5440, metadata !DIExpression()), !dbg !5441
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5442
  %tobool = icmp ne %struct.clk* %0, null, !dbg !5442
  br i1 %tobool, label %lor.lhs.false, label %if.then21, !dbg !5444

lor.lhs.false:                                    ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5445, metadata !DIExpression()), !dbg !5447
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5447
  %2 = bitcast %struct.clk* %1 to i8*, !dbg !5447
  %call = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !5447
  %lnot = xor i1 %call, true, !dbg !5447
  %lnot1 = xor i1 %lnot, true, !dbg !5447
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5447
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5447
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !5448
  %tobool2 = icmp ne i32 %3, 0, !dbg !5448
  %lnot3 = xor i1 %tobool2, true, !dbg !5448
  %lnot5 = xor i1 %lnot3, true, !dbg !5448
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !5448
  %conv = sext i32 %lnot.ext6 to i64, !dbg !5448
  %tobool7 = icmp ne i64 %conv, 0, !dbg !5448
  br i1 %tobool7, label %if.then, label %if.end, !dbg !5447

if.then:                                          ; preds = %lor.lhs.false
  br label %do.body, !dbg !5448

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !5450

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !5452

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !5450

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 4008, i32 2307, i64 12) #10, !dbg !5454, !srcloc !5456
  br label %do.end10, !dbg !5454

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 247) #10, !dbg !5457, !srcloc !5459
  br label %do.body11, !dbg !5450

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !5460

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !5450

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !5450

if.end:                                           ; preds = %do.end13, %lor.lhs.false
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !5447
  %tobool14 = icmp ne i32 %4, 0, !dbg !5447
  %lnot15 = xor i1 %tobool14, true, !dbg !5447
  %lnot17 = xor i1 %lnot15, true, !dbg !5447
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !5447
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !5447
  store i64 %conv19, i64* %tmp, align 8, !dbg !5448
  %5 = load i64, i64* %tmp, align 8, !dbg !5447
  %tobool20 = icmp ne i64 %5, 0, !dbg !5462
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !5463

if.then21:                                        ; preds = %if.end, %entry
  br label %return, !dbg !5464

if.end22:                                         ; preds = %if.end
  %6 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5465
  %core = getelementptr inbounds %struct.clk, %struct.clk* %6, i32 0, i32 0, !dbg !5466
  %7 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5466
  call void @clk_debug_unregister(%struct.clk_core* %7) #11, !dbg !5467
  call void @clk_prepare_lock() #11, !dbg !5468
  %8 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5469
  %core23 = getelementptr inbounds %struct.clk, %struct.clk* %8, i32 0, i32 0, !dbg !5470
  %9 = load %struct.clk_core*, %struct.clk_core** %core23, align 8, !dbg !5470
  %ops24 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 1, !dbg !5471
  %10 = load %struct.clk_ops*, %struct.clk_ops** %ops24, align 8, !dbg !5471
  store %struct.clk_ops* %10, %struct.clk_ops** %ops, align 8, !dbg !5472
  %11 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !5473
  %cmp = icmp eq %struct.clk_ops* %11, @clk_nodrv_ops, !dbg !5475
  br i1 %cmp, label %if.then26, label %if.end29, !dbg !5476

if.then26:                                        ; preds = %if.end22
  %12 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5477
  %core27 = getelementptr inbounds %struct.clk, %struct.clk* %12, i32 0, i32 0, !dbg !5477
  %13 = load %struct.clk_core*, %struct.clk_core** %core27, align 8, !dbg !5477
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %13, i32 0, i32 0, !dbg !5477
  %14 = load i8*, i8** %name, align 8, !dbg !5477
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.clk_unregister, i64 0, i64 0), i8* %14) #13, !dbg !5477
  br label %unlock, !dbg !5479

if.end29:                                         ; preds = %if.end22
  %call30 = call i64 @clk_enable_lock() #11, !dbg !5480
  store i64 %call30, i64* %flags, align 8, !dbg !5481
  %15 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5482
  %core31 = getelementptr inbounds %struct.clk, %struct.clk* %15, i32 0, i32 0, !dbg !5483
  %16 = load %struct.clk_core*, %struct.clk_core** %core31, align 8, !dbg !5483
  %ops32 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %16, i32 0, i32 1, !dbg !5484
  store %struct.clk_ops* @clk_nodrv_ops, %struct.clk_ops** %ops32, align 8, !dbg !5485
  %17 = load i64, i64* %flags, align 8, !dbg !5486
  call void @clk_enable_unlock(i64 %17) #11, !dbg !5487
  %18 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !5488
  %terminate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %18, i32 0, i32 23, !dbg !5490
  %19 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %terminate, align 8, !dbg !5490
  %tobool33 = icmp ne void (%struct.clk_hw*)* %19, null, !dbg !5488
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !5491

if.then34:                                        ; preds = %if.end29
  %20 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !5492
  %terminate35 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %20, i32 0, i32 23, !dbg !5493
  %21 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %terminate35, align 8, !dbg !5493
  %22 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5494
  %core36 = getelementptr inbounds %struct.clk, %struct.clk* %22, i32 0, i32 0, !dbg !5495
  %23 = load %struct.clk_core*, %struct.clk_core** %core36, align 8, !dbg !5495
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %23, i32 0, i32 2, !dbg !5496
  %24 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !5496
  call void %21(%struct.clk_hw* %24) #11, !dbg !5492
  br label %if.end37, !dbg !5492

if.end37:                                         ; preds = %if.then34, %if.end29
  %25 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5497
  %core38 = getelementptr inbounds %struct.clk, %struct.clk* %25, i32 0, i32 0, !dbg !5499
  %26 = load %struct.clk_core*, %struct.clk_core** %core38, align 8, !dbg !5499
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %26, i32 0, i32 26, !dbg !5500
  %call39 = call i32 @hlist_empty(%struct.hlist_head* %children) #11, !dbg !5501
  %tobool40 = icmp ne i32 %call39, 0, !dbg !5501
  br i1 %tobool40, label %if.end65, label %if.then41, !dbg !5502

if.then41:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !5503, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %t, metadata !5506, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !5508, metadata !DIExpression()), !dbg !5511
  %27 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5511
  %core42 = getelementptr inbounds %struct.clk, %struct.clk* %27, i32 0, i32 0, !dbg !5511
  %28 = load %struct.clk_core*, %struct.clk_core** %core42, align 8, !dbg !5511
  %children43 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %28, i32 0, i32 26, !dbg !5511
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children43, i32 0, i32 0, !dbg !5511
  %29 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !5511
  store %struct.hlist_node* %29, %struct.hlist_node** %____ptr, align 8, !dbg !5511
  %30 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !5511
  %tobool45 = icmp ne %struct.hlist_node* %30, null, !dbg !5511
  br i1 %tobool45, label %cond.true, label %cond.false, !dbg !5511

cond.true:                                        ; preds = %if.then41
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5512, metadata !DIExpression()), !dbg !5514
  %31 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !5514
  %32 = bitcast %struct.hlist_node* %31 to i8*, !dbg !5514
  store i8* %32, i8** %__mptr, align 8, !dbg !5514
  br label %do.body46, !dbg !5514

do.body46:                                        ; preds = %cond.true
  br label %do.end47, !dbg !5515

do.end47:                                         ; preds = %do.body46
  %33 = load i8*, i8** %__mptr, align 8, !dbg !5514
  %add.ptr = getelementptr i8, i8* %33, i64 -184, !dbg !5514
  %34 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !5514
  store %struct.clk_core* %34, %struct.clk_core** %tmp48, align 8, !dbg !5515
  %35 = load %struct.clk_core*, %struct.clk_core** %tmp48, align 8, !dbg !5514
  br label %cond.end, !dbg !5511

cond.false:                                       ; preds = %if.then41
  br label %cond.end, !dbg !5511

cond.end:                                         ; preds = %cond.false, %do.end47
  %cond = phi %struct.clk_core* [ %35, %do.end47 ], [ null, %cond.false ], !dbg !5511
  store %struct.clk_core* %cond, %struct.clk_core** %tmp44, align 8, !dbg !5511
  %36 = load %struct.clk_core*, %struct.clk_core** %tmp44, align 8, !dbg !5511
  store %struct.clk_core* %36, %struct.clk_core** %child, align 8, !dbg !5517
  br label %for.cond, !dbg !5517

for.cond:                                         ; preds = %cond.end63, %cond.end
  %37 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !5518
  %tobool49 = icmp ne %struct.clk_core* %37, null, !dbg !5518
  br i1 %tobool49, label %land.rhs, label %land.end, !dbg !5518

land.rhs:                                         ; preds = %for.cond
  %38 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !5520
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %38, i32 0, i32 27, !dbg !5520
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !5520
  %39 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !5520
  store %struct.hlist_node* %39, %struct.hlist_node** %t, align 8, !dbg !5520
  store i32 1, i32* %tmp50, align 4, !dbg !5520
  %40 = load i32, i32* %tmp50, align 4, !dbg !5520
  %tobool51 = icmp ne i32 %40, 0, !dbg !5518
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %41 = phi i1 [ false, %for.cond ], [ %tobool51, %land.rhs ], !dbg !5522
  br i1 %41, label %for.body, label %for.end, !dbg !5517

for.body:                                         ; preds = %land.end
  %42 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !5523
  %call52 = call i32 @clk_core_set_parent_nolock(%struct.clk_core* %42, %struct.clk_core* null) #11, !dbg !5524
  br label %for.inc, !dbg !5524

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr53, metadata !5525, metadata !DIExpression()), !dbg !5527
  %43 = load %struct.hlist_node*, %struct.hlist_node** %t, align 8, !dbg !5527
  store %struct.hlist_node* %43, %struct.hlist_node** %____ptr53, align 8, !dbg !5527
  %44 = load %struct.hlist_node*, %struct.hlist_node** %____ptr53, align 8, !dbg !5527
  %tobool55 = icmp ne %struct.hlist_node* %44, null, !dbg !5527
  br i1 %tobool55, label %cond.true56, label %cond.false62, !dbg !5527

cond.true56:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr57, metadata !5528, metadata !DIExpression()), !dbg !5530
  %45 = load %struct.hlist_node*, %struct.hlist_node** %____ptr53, align 8, !dbg !5530
  %46 = bitcast %struct.hlist_node* %45 to i8*, !dbg !5530
  store i8* %46, i8** %__mptr57, align 8, !dbg !5530
  br label %do.body58, !dbg !5530

do.body58:                                        ; preds = %cond.true56
  br label %do.end59, !dbg !5531

do.end59:                                         ; preds = %do.body58
  %47 = load i8*, i8** %__mptr57, align 8, !dbg !5530
  %add.ptr61 = getelementptr i8, i8* %47, i64 -184, !dbg !5530
  %48 = bitcast i8* %add.ptr61 to %struct.clk_core*, !dbg !5530
  store %struct.clk_core* %48, %struct.clk_core** %tmp60, align 8, !dbg !5531
  %49 = load %struct.clk_core*, %struct.clk_core** %tmp60, align 8, !dbg !5530
  br label %cond.end63, !dbg !5527

cond.false62:                                     ; preds = %for.inc
  br label %cond.end63, !dbg !5527

cond.end63:                                       ; preds = %cond.false62, %do.end59
  %cond64 = phi %struct.clk_core* [ %49, %do.end59 ], [ null, %cond.false62 ], !dbg !5527
  store %struct.clk_core* %cond64, %struct.clk_core** %tmp54, align 8, !dbg !5527
  %50 = load %struct.clk_core*, %struct.clk_core** %tmp54, align 8, !dbg !5527
  store %struct.clk_core* %50, %struct.clk_core** %child, align 8, !dbg !5518
  br label %for.cond, !dbg !5518, !llvm.loop !5533

for.end:                                          ; preds = %land.end
  br label %if.end65, !dbg !5535

if.end65:                                         ; preds = %for.end, %if.end37
  %51 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5536
  %core66 = getelementptr inbounds %struct.clk, %struct.clk* %51, i32 0, i32 0, !dbg !5537
  %52 = load %struct.clk_core*, %struct.clk_core** %core66, align 8, !dbg !5537
  call void @clk_core_evict_parent_cache(%struct.clk_core* %52) #11, !dbg !5538
  %53 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5539
  %core67 = getelementptr inbounds %struct.clk, %struct.clk* %53, i32 0, i32 0, !dbg !5540
  %54 = load %struct.clk_core*, %struct.clk_core** %core67, align 8, !dbg !5540
  %child_node68 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %54, i32 0, i32 27, !dbg !5541
  call void @hlist_del_init(%struct.hlist_node* %child_node68) #11, !dbg !5542
  %55 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5543
  %core69 = getelementptr inbounds %struct.clk, %struct.clk* %55, i32 0, i32 0, !dbg !5545
  %56 = load %struct.clk_core*, %struct.clk_core** %core69, align 8, !dbg !5545
  %prepare_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %56, i32 0, i32 19, !dbg !5546
  %57 = load i32, i32* %prepare_count, align 8, !dbg !5546
  %tobool70 = icmp ne i32 %57, 0, !dbg !5543
  br i1 %tobool70, label %if.then71, label %if.end75, !dbg !5547

if.then71:                                        ; preds = %if.end65
  %58 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5548
  %core72 = getelementptr inbounds %struct.clk, %struct.clk* %58, i32 0, i32 0, !dbg !5548
  %59 = load %struct.clk_core*, %struct.clk_core** %core72, align 8, !dbg !5548
  %name73 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %59, i32 0, i32 0, !dbg !5548
  %60 = load i8*, i8** %name73, align 8, !dbg !5548
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.clk_unregister, i64 0, i64 0), i8* %60) #13, !dbg !5548
  br label %if.end75, !dbg !5548

if.end75:                                         ; preds = %if.then71, %if.end65
  %61 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5549
  %core76 = getelementptr inbounds %struct.clk, %struct.clk* %61, i32 0, i32 0, !dbg !5551
  %62 = load %struct.clk_core*, %struct.clk_core** %core76, align 8, !dbg !5551
  %protect_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %62, i32 0, i32 20, !dbg !5552
  %63 = load i32, i32* %protect_count, align 4, !dbg !5552
  %tobool77 = icmp ne i32 %63, 0, !dbg !5549
  br i1 %tobool77, label %if.then78, label %if.end82, !dbg !5553

if.then78:                                        ; preds = %if.end75
  %64 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5554
  %core79 = getelementptr inbounds %struct.clk, %struct.clk* %64, i32 0, i32 0, !dbg !5554
  %65 = load %struct.clk_core*, %struct.clk_core** %core79, align 8, !dbg !5554
  %name80 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %65, i32 0, i32 0, !dbg !5554
  %66 = load i8*, i8** %name80, align 8, !dbg !5554
  %call81 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.clk_unregister, i64 0, i64 0), i8* %66) #13, !dbg !5554
  br label %if.end82, !dbg !5554

if.end82:                                         ; preds = %if.then78, %if.end75
  %67 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5555
  %core83 = getelementptr inbounds %struct.clk, %struct.clk* %67, i32 0, i32 0, !dbg !5556
  %68 = load %struct.clk_core*, %struct.clk_core** %core83, align 8, !dbg !5556
  %ref = getelementptr inbounds %struct.clk_core, %struct.clk_core* %68, i32 0, i32 30, !dbg !5557
  %call84 = call i32 @kref_put(%struct.kref* %ref, void (%struct.kref*)* @__clk_release) #11, !dbg !5558
  %69 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5559
  call void @free_clk(%struct.clk* %69) #11, !dbg !5560
  br label %unlock, !dbg !5560

unlock:                                           ; preds = %if.end82, %if.then26
  call void @llvm.dbg.label(metadata !5561), !dbg !5562
  call void @clk_prepare_unlock() #11, !dbg !5563
  br label %return, !dbg !5564

return:                                           ; preds = %unlock, %if.then21
  ret void, !dbg !5564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_debug_unregister(%struct.clk_core* %core) #0 !dbg !5565 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !5566, metadata !DIExpression()), !dbg !5567
  ret void, !dbg !5568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @clk_enable_lock() #0 !dbg !5569 {
entry:
  %pscr_ret__.i87 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i87, metadata !3024, metadata !DIExpression()), !dbg !5572
  %__vpp_verify.i88 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i88, metadata !3032, metadata !DIExpression()), !dbg !5574
  %pfo_val__.i89 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i89, metadata !3035, metadata !DIExpression()), !dbg !5575
  %tmp.i90 = alloca %struct.task_struct*, align 8
  %tmp1.i91 = alloca %struct.task_struct*, align 8
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5576, metadata !DIExpression()), !dbg !5583
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !3024, metadata !DIExpression()), !dbg !5592
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !3032, metadata !DIExpression()), !dbg !5595
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !3035, metadata !DIExpression()), !dbg !5596
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp48 = alloca i64, align 8
  %__ret_warn_on55 = alloca i32, align 4
  %tmp79 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5597, metadata !DIExpression()), !dbg !5598
  %0 = load %struct.task_struct*, %struct.task_struct** @enable_owner, align 8, !dbg !5599
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !5595
  %1 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !5595
  %2 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !5596, !srcloc !3048
  store i64 %2, i64* %pfo_val__.i, align 8, !dbg !5596
  %3 = load i64, i64* %pfo_val__.i, align 8, !dbg !5596
  %4 = inttoptr i64 %3 to %struct.task_struct*, !dbg !5596
  store %struct.task_struct* %4, %struct.task_struct** %tmp.i, align 8, !dbg !5596
  %5 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !5596
  store %struct.task_struct* %5, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !5592
  %6 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !5592
  store %struct.task_struct* %6, %struct.task_struct** %tmp1.i, align 8, !dbg !5592
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !5592
  %cmp = icmp eq %struct.task_struct* %0, %7, !dbg !5600
  br i1 %cmp, label %if.then, label %if.end, !dbg !5601

if.then:                                          ; preds = %entry
  %8 = load i32, i32* @enable_refcnt, align 4, !dbg !5602
  %inc = add i32 %8, 1, !dbg !5602
  store i32 %inc, i32* @enable_refcnt, align 4, !dbg !5602
  br label %do.body, !dbg !5604

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5606, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5610, metadata !DIExpression()), !dbg !5609
  %cmp1 = icmp eq i64* %__dummy, %__dummy2, !dbg !5609
  %conv = zext i1 %cmp1 to i32, !dbg !5609
  store i32 1, i32* %tmp, align 4, !dbg !5609
  %9 = load i32, i32* %tmp, align 4, !dbg !5609
  %call2 = call i64 @arch_local_save_flags() #11, !dbg !5611
  store i64 %call2, i64* %flags, align 8, !dbg !5611
  br label %do.end, !dbg !5611

do.end:                                           ; preds = %do.body
  %10 = load i64, i64* %flags, align 8, !dbg !5612
  store i64 %10, i64* %retval, align 8, !dbg !5613
  br label %return, !dbg !5613

if.end:                                           ; preds = %entry
  br label %do.body3, !dbg !5614

do.body3:                                         ; preds = %if.end
  br label %do.body4, !dbg !5615

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5616, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5619, metadata !DIExpression()), !dbg !5618
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5618
  %conv8 = zext i1 %cmp7 to i32, !dbg !5618
  store i32 1, i32* %tmp9, align 4, !dbg !5618
  %11 = load i32, i32* %tmp9, align 4, !dbg !5618
  br label %do.body10, !dbg !5620

do.body10:                                        ; preds = %do.body4
  br label %do.body11, !dbg !5621

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !5622

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !5624, metadata !DIExpression()), !dbg !5627
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !5628, metadata !DIExpression()), !dbg !5627
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !5627
  %conv16 = zext i1 %cmp15 to i32, !dbg !5627
  store i32 1, i32* %tmp17, align 4, !dbg !5627
  %12 = load i32, i32* %tmp17, align 4, !dbg !5627
  %call18 = call i64 @arch_local_irq_save() #11, !dbg !5629
  store i64 %call18, i64* %flags, align 8, !dbg !5629
  br label %do.end19, !dbg !5629

do.end19:                                         ; preds = %do.body12
  br label %do.end20, !dbg !5622

do.end20:                                         ; preds = %do.end19
  br label %do.body21, !dbg !5621

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5630, !srcloc !5631
  br label %do.body22, !dbg !5630

do.body22:                                        ; preds = %do.body21
  store %struct.spinlock* @enable_lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5632
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !5633
  %rlock.i = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !5633
  br label %do.end24, !dbg !5634

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !5630

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !5621

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !5620

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !5615

do.end28:                                         ; preds = %do.end27
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5635, metadata !DIExpression()), !dbg !5637
  %15 = load %struct.task_struct*, %struct.task_struct** @enable_owner, align 8, !dbg !5637
  %cmp29 = icmp ne %struct.task_struct* %15, null, !dbg !5637
  %lnot = xor i1 %cmp29, true, !dbg !5637
  %lnot31 = xor i1 %lnot, true, !dbg !5637
  %lnot.ext = zext i1 %lnot31 to i32, !dbg !5637
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5637
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !5638
  %tobool = icmp ne i32 %16, 0, !dbg !5638
  %lnot32 = xor i1 %tobool, true, !dbg !5638
  %lnot34 = xor i1 %lnot32, true, !dbg !5638
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !5638
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !5638
  %tobool37 = icmp ne i64 %conv36, 0, !dbg !5638
  br i1 %tobool37, label %if.then38, label %if.end47, !dbg !5637

if.then38:                                        ; preds = %do.end28
  br label %do.body39, !dbg !5638

do.body39:                                        ; preds = %if.then38
  br label %do.body40, !dbg !5640

do.body40:                                        ; preds = %do.body39
  br label %do.end41, !dbg !5642

do.end41:                                         ; preds = %do.body40
  br label %do.body42, !dbg !5640

do.body42:                                        ; preds = %do.end41
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 180, i32 2307, i64 12) #10, !dbg !5644, !srcloc !5646
  br label %do.end43, !dbg !5644

do.end43:                                         ; preds = %do.body42
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 167) #10, !dbg !5647, !srcloc !5649
  br label %do.body44, !dbg !5640

do.body44:                                        ; preds = %do.end43
  br label %do.end45, !dbg !5650

do.end45:                                         ; preds = %do.body44
  br label %do.end46, !dbg !5640

do.end46:                                         ; preds = %do.end45
  br label %if.end47, !dbg !5640

if.end47:                                         ; preds = %do.end46, %do.end28
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !5637
  %tobool49 = icmp ne i32 %17, 0, !dbg !5637
  %lnot50 = xor i1 %tobool49, true, !dbg !5637
  %lnot52 = xor i1 %lnot50, true, !dbg !5637
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !5637
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !5637
  store i64 %conv54, i64* %tmp48, align 8, !dbg !5638
  %18 = load i64, i64* %tmp48, align 8, !dbg !5637
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on55, metadata !5652, metadata !DIExpression()), !dbg !5654
  %19 = load i32, i32* @enable_refcnt, align 4, !dbg !5654
  %cmp56 = icmp ne i32 %19, 0, !dbg !5654
  %lnot58 = xor i1 %cmp56, true, !dbg !5654
  %lnot60 = xor i1 %lnot58, true, !dbg !5654
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !5654
  store i32 %lnot.ext61, i32* %__ret_warn_on55, align 4, !dbg !5654
  %20 = load i32, i32* %__ret_warn_on55, align 4, !dbg !5655
  %tobool62 = icmp ne i32 %20, 0, !dbg !5655
  %lnot63 = xor i1 %tobool62, true, !dbg !5655
  %lnot65 = xor i1 %lnot63, true, !dbg !5655
  %lnot.ext66 = zext i1 %lnot65 to i32, !dbg !5655
  %conv67 = sext i32 %lnot.ext66 to i64, !dbg !5655
  %tobool68 = icmp ne i64 %conv67, 0, !dbg !5655
  br i1 %tobool68, label %if.then69, label %if.end78, !dbg !5654

if.then69:                                        ; preds = %if.end47
  br label %do.body70, !dbg !5655

do.body70:                                        ; preds = %if.then69
  br label %do.body71, !dbg !5657

do.body71:                                        ; preds = %do.body70
  br label %do.end72, !dbg !5659

do.end72:                                         ; preds = %do.body71
  br label %do.body73, !dbg !5657

do.body73:                                        ; preds = %do.end72
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 181, i32 2307, i64 12) #10, !dbg !5661, !srcloc !5663
  br label %do.end74, !dbg !5661

do.end74:                                         ; preds = %do.body73
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 168) #10, !dbg !5664, !srcloc !5666
  br label %do.body75, !dbg !5657

do.body75:                                        ; preds = %do.end74
  br label %do.end76, !dbg !5667

do.end76:                                         ; preds = %do.body75
  br label %do.end77, !dbg !5657

do.end77:                                         ; preds = %do.end76
  br label %if.end78, !dbg !5657

if.end78:                                         ; preds = %do.end77, %if.end47
  %21 = load i32, i32* %__ret_warn_on55, align 4, !dbg !5654
  %tobool80 = icmp ne i32 %21, 0, !dbg !5654
  %lnot81 = xor i1 %tobool80, true, !dbg !5654
  %lnot83 = xor i1 %lnot81, true, !dbg !5654
  %lnot.ext84 = zext i1 %lnot83 to i32, !dbg !5654
  %conv85 = sext i32 %lnot.ext84 to i64, !dbg !5654
  store i64 %conv85, i64* %tmp79, align 8, !dbg !5655
  %22 = load i64, i64* %tmp79, align 8, !dbg !5654
  store i8* null, i8** %__vpp_verify.i88, align 8, !dbg !5574
  %23 = load i8*, i8** %__vpp_verify.i88, align 8, !dbg !5574
  %24 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !5575, !srcloc !3048
  store i64 %24, i64* %pfo_val__.i89, align 8, !dbg !5575
  %25 = load i64, i64* %pfo_val__.i89, align 8, !dbg !5575
  %26 = inttoptr i64 %25 to %struct.task_struct*, !dbg !5575
  store %struct.task_struct* %26, %struct.task_struct** %tmp.i90, align 8, !dbg !5575
  %27 = load %struct.task_struct*, %struct.task_struct** %tmp.i90, align 8, !dbg !5575
  store %struct.task_struct* %27, %struct.task_struct** %pscr_ret__.i87, align 8, !dbg !5572
  %28 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i87, align 8, !dbg !5572
  store %struct.task_struct* %28, %struct.task_struct** %tmp1.i91, align 8, !dbg !5572
  %29 = load %struct.task_struct*, %struct.task_struct** %tmp1.i91, align 8, !dbg !5572
  store %struct.task_struct* %29, %struct.task_struct** @enable_owner, align 8, !dbg !5669
  store i32 1, i32* @enable_refcnt, align 4, !dbg !5670
  %30 = load i64, i64* %flags, align 8, !dbg !5671
  store i64 %30, i64* %retval, align 8, !dbg !5672
  br label %return, !dbg !5672

return:                                           ; preds = %if.end78, %do.end
  %31 = load i64, i64* %retval, align 8, !dbg !5673
  ret i64 %31, !dbg !5673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_enable_unlock(i64 %flags) #0 !dbg !5674 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5677, metadata !DIExpression()), !dbg !5681
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5683, metadata !DIExpression()), !dbg !5684
  %tmp.i53 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !3024, metadata !DIExpression()), !dbg !5685
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !3032, metadata !DIExpression()), !dbg !5688
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !3035, metadata !DIExpression()), !dbg !5689
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %flags.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on19 = alloca i32, align 4
  %tmp43 = alloca i64, align 8
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !5690, metadata !DIExpression()), !dbg !5691
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5692, metadata !DIExpression()), !dbg !5693
  %0 = load %struct.task_struct*, %struct.task_struct** @enable_owner, align 8, !dbg !5693
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !5688
  %1 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !5688
  %2 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !5689, !srcloc !3048
  store i64 %2, i64* %pfo_val__.i, align 8, !dbg !5689
  %3 = load i64, i64* %pfo_val__.i, align 8, !dbg !5689
  %4 = inttoptr i64 %3 to %struct.task_struct*, !dbg !5689
  store %struct.task_struct* %4, %struct.task_struct** %tmp.i, align 8, !dbg !5689
  %5 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !5689
  store %struct.task_struct* %5, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !5685
  %6 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !5685
  store %struct.task_struct* %6, %struct.task_struct** %tmp1.i, align 8, !dbg !5685
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !5685
  %cmp = icmp ne %struct.task_struct* %0, %7, !dbg !5693
  %lnot = xor i1 %cmp, true, !dbg !5693
  %lnot1 = xor i1 %lnot, true, !dbg !5693
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5693
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5693
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !5694
  %tobool = icmp ne i32 %8, 0, !dbg !5694
  %lnot2 = xor i1 %tobool, true, !dbg !5694
  %lnot4 = xor i1 %lnot2, true, !dbg !5694
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !5694
  %conv = sext i32 %lnot.ext5 to i64, !dbg !5694
  %tobool6 = icmp ne i64 %conv, 0, !dbg !5694
  br i1 %tobool6, label %if.then, label %if.end, !dbg !5693

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5694

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !5696

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !5698

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !5696

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 190, i32 2307, i64 12) #10, !dbg !5700, !srcloc !5702
  br label %do.end9, !dbg !5700

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 169) #10, !dbg !5703, !srcloc !5705
  br label %do.body10, !dbg !5696

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !5706

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !5696

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !5696

if.end:                                           ; preds = %do.end12, %entry
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !5693
  %tobool13 = icmp ne i32 %9, 0, !dbg !5693
  %lnot14 = xor i1 %tobool13, true, !dbg !5693
  %lnot16 = xor i1 %lnot14, true, !dbg !5693
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !5693
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !5693
  store i64 %conv18, i64* %tmp, align 8, !dbg !5694
  %10 = load i64, i64* %tmp, align 8, !dbg !5693
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on19, metadata !5708, metadata !DIExpression()), !dbg !5710
  %11 = load i32, i32* @enable_refcnt, align 4, !dbg !5710
  %cmp20 = icmp eq i32 %11, 0, !dbg !5710
  %lnot22 = xor i1 %cmp20, true, !dbg !5710
  %lnot24 = xor i1 %lnot22, true, !dbg !5710
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !5710
  store i32 %lnot.ext25, i32* %__ret_warn_on19, align 4, !dbg !5710
  %12 = load i32, i32* %__ret_warn_on19, align 4, !dbg !5711
  %tobool26 = icmp ne i32 %12, 0, !dbg !5711
  %lnot27 = xor i1 %tobool26, true, !dbg !5711
  %lnot29 = xor i1 %lnot27, true, !dbg !5711
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !5711
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !5711
  %tobool32 = icmp ne i64 %conv31, 0, !dbg !5711
  br i1 %tobool32, label %if.then33, label %if.end42, !dbg !5710

if.then33:                                        ; preds = %if.end
  br label %do.body34, !dbg !5711

do.body34:                                        ; preds = %if.then33
  br label %do.body35, !dbg !5713

do.body35:                                        ; preds = %do.body34
  br label %do.end36, !dbg !5715

do.end36:                                         ; preds = %do.body35
  br label %do.body37, !dbg !5713

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 191, i32 2307, i64 12) #10, !dbg !5717, !srcloc !5719
  br label %do.end38, !dbg !5717

do.end38:                                         ; preds = %do.body37
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 170) #10, !dbg !5720, !srcloc !5722
  br label %do.body39, !dbg !5713

do.body39:                                        ; preds = %do.end38
  br label %do.end40, !dbg !5723

do.end40:                                         ; preds = %do.body39
  br label %do.end41, !dbg !5713

do.end41:                                         ; preds = %do.end40
  br label %if.end42, !dbg !5713

if.end42:                                         ; preds = %do.end41, %if.end
  %13 = load i32, i32* %__ret_warn_on19, align 4, !dbg !5710
  %tobool44 = icmp ne i32 %13, 0, !dbg !5710
  %lnot45 = xor i1 %tobool44, true, !dbg !5710
  %lnot47 = xor i1 %lnot45, true, !dbg !5710
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !5710
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !5710
  store i64 %conv49, i64* %tmp43, align 8, !dbg !5711
  %14 = load i64, i64* %tmp43, align 8, !dbg !5710
  %15 = load i32, i32* @enable_refcnt, align 4, !dbg !5725
  %dec = add i32 %15, -1, !dbg !5725
  store i32 %dec, i32* @enable_refcnt, align 4, !dbg !5725
  %tobool50 = icmp ne i32 %dec, 0, !dbg !5725
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !5727

if.then51:                                        ; preds = %if.end42
  br label %return, !dbg !5728

if.end52:                                         ; preds = %if.end42
  store %struct.task_struct* null, %struct.task_struct** @enable_owner, align 8, !dbg !5730
  %16 = load i64, i64* %flags.addr, align 8, !dbg !5731
  store %struct.spinlock* @enable_lock, %struct.spinlock** %lock.addr.i, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !137, metadata !5732, metadata !DIExpression()) #10, !dbg !5735
  call void @llvm.dbg.declare(metadata !137, metadata !5736, metadata !DIExpression()) #10, !dbg !5735
  store i32 1, i32* %tmp.i53, align 4, !dbg !5735
  %17 = load i32, i32* %tmp.i53, align 4, !dbg !5735
  call void @llvm.dbg.declare(metadata !137, metadata !5737, metadata !DIExpression()) #10, !dbg !5742
  call void @llvm.dbg.declare(metadata !137, metadata !5743, metadata !DIExpression()) #10, !dbg !5742
  store i32 1, i32* %tmp8.i, align 4, !dbg !5742
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !5742
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !5744
  call void @arch_local_irq_restore(i64 %19) #14, !dbg !5744
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5745, !srcloc !5747
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5748
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !5748
  %rlock.i = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !5748
  br label %return, !dbg !5750

return:                                           ; preds = %if.end52, %if.then51
  ret void, !dbg !5750
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hlist_empty(%struct.hlist_head* %h) #0 !dbg !5751 {
entry:
  %h.addr = alloca %struct.hlist_head*, align 8
  %tmp = alloca %struct.hlist_node*, align 8
  store %struct.hlist_head* %h, %struct.hlist_head** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %h.addr, metadata !5757, metadata !DIExpression()), !dbg !5758
  br label %do.body, !dbg !5759

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5761

do.end:                                           ; preds = %do.body
  %0 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !5759
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %0, i32 0, i32 0, !dbg !5759
  %1 = load volatile %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !5759
  store %struct.hlist_node* %1, %struct.hlist_node** %tmp, align 8, !dbg !5761
  %2 = load %struct.hlist_node*, %struct.hlist_node** %tmp, align 8, !dbg !5759
  %tobool = icmp ne %struct.hlist_node* %2, null, !dbg !5763
  %lnot = xor i1 %tobool, true, !dbg !5763
  %lnot.ext = zext i1 %lnot to i32, !dbg !5763
  ret i32 %lnot.ext, !dbg !5764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_evict_parent_cache(%struct.clk_core* %core) #0 !dbg !5765 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %lists = alloca %struct.hlist_head**, align 8
  %root = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp4 = alloca %struct.clk_core*, align 8
  %____ptr8 = alloca %struct.hlist_node*, align 8
  %tmp9 = alloca %struct.clk_core*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp15 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !5766, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.declare(metadata %struct.hlist_head*** %lists, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.declare(metadata %struct.clk_core** %root, metadata !5771, metadata !DIExpression()), !dbg !5772
  br label %do.body, !dbg !5773

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5774

do.end:                                           ; preds = %do.body
  store %struct.hlist_head** getelementptr inbounds ([3 x %struct.hlist_head*], [3 x %struct.hlist_head*]* @all_lists, i64 0, i64 0), %struct.hlist_head*** %lists, align 8, !dbg !5776
  br label %for.cond, !dbg !5778

for.cond:                                         ; preds = %for.inc20, %do.end
  %0 = load %struct.hlist_head**, %struct.hlist_head*** %lists, align 8, !dbg !5779
  %1 = load %struct.hlist_head*, %struct.hlist_head** %0, align 8, !dbg !5781
  %tobool = icmp ne %struct.hlist_head* %1, null, !dbg !5782
  br i1 %tobool, label %for.body, label %for.end21, !dbg !5782

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !5783, metadata !DIExpression()), !dbg !5786
  %2 = load %struct.hlist_head**, %struct.hlist_head*** %lists, align 8, !dbg !5786
  %3 = load %struct.hlist_head*, %struct.hlist_head** %2, align 8, !dbg !5786
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %3, i32 0, i32 0, !dbg !5786
  %4 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !5786
  store %struct.hlist_node* %4, %struct.hlist_node** %____ptr, align 8, !dbg !5786
  %5 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !5786
  %tobool1 = icmp ne %struct.hlist_node* %5, null, !dbg !5786
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !5786

cond.true:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5787, metadata !DIExpression()), !dbg !5789
  %6 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !5789
  %7 = bitcast %struct.hlist_node* %6 to i8*, !dbg !5789
  store i8* %7, i8** %__mptr, align 8, !dbg !5789
  br label %do.body2, !dbg !5789

do.body2:                                         ; preds = %cond.true
  br label %do.end3, !dbg !5790

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr, align 8, !dbg !5789
  %add.ptr = getelementptr i8, i8* %8, i64 -184, !dbg !5789
  %9 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !5789
  store %struct.clk_core* %9, %struct.clk_core** %tmp4, align 8, !dbg !5790
  %10 = load %struct.clk_core*, %struct.clk_core** %tmp4, align 8, !dbg !5789
  br label %cond.end, !dbg !5786

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5786

cond.end:                                         ; preds = %cond.false, %do.end3
  %cond = phi %struct.clk_core* [ %10, %do.end3 ], [ null, %cond.false ], !dbg !5786
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !5786
  %11 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !5786
  store %struct.clk_core* %11, %struct.clk_core** %root, align 8, !dbg !5792
  br label %for.cond5, !dbg !5792

for.cond5:                                        ; preds = %cond.end18, %cond.end
  %12 = load %struct.clk_core*, %struct.clk_core** %root, align 8, !dbg !5793
  %tobool6 = icmp ne %struct.clk_core* %12, null, !dbg !5792
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !5792

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.clk_core*, %struct.clk_core** %root, align 8, !dbg !5795
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !5796
  call void @clk_core_evict_parent_cache_subtree(%struct.clk_core* %13, %struct.clk_core* %14) #11, !dbg !5797
  br label %for.inc, !dbg !5797

for.inc:                                          ; preds = %for.body7
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr8, metadata !5798, metadata !DIExpression()), !dbg !5800
  %15 = load %struct.clk_core*, %struct.clk_core** %root, align 8, !dbg !5800
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %15, i32 0, i32 27, !dbg !5800
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !5800
  %16 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !5800
  store %struct.hlist_node* %16, %struct.hlist_node** %____ptr8, align 8, !dbg !5800
  %17 = load %struct.hlist_node*, %struct.hlist_node** %____ptr8, align 8, !dbg !5800
  %tobool10 = icmp ne %struct.hlist_node* %17, null, !dbg !5800
  br i1 %tobool10, label %cond.true11, label %cond.false17, !dbg !5800

cond.true11:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !5801, metadata !DIExpression()), !dbg !5803
  %18 = load %struct.hlist_node*, %struct.hlist_node** %____ptr8, align 8, !dbg !5803
  %19 = bitcast %struct.hlist_node* %18 to i8*, !dbg !5803
  store i8* %19, i8** %__mptr12, align 8, !dbg !5803
  br label %do.body13, !dbg !5803

do.body13:                                        ; preds = %cond.true11
  br label %do.end14, !dbg !5804

do.end14:                                         ; preds = %do.body13
  %20 = load i8*, i8** %__mptr12, align 8, !dbg !5803
  %add.ptr16 = getelementptr i8, i8* %20, i64 -184, !dbg !5803
  %21 = bitcast i8* %add.ptr16 to %struct.clk_core*, !dbg !5803
  store %struct.clk_core* %21, %struct.clk_core** %tmp15, align 8, !dbg !5804
  %22 = load %struct.clk_core*, %struct.clk_core** %tmp15, align 8, !dbg !5803
  br label %cond.end18, !dbg !5800

cond.false17:                                     ; preds = %for.inc
  br label %cond.end18, !dbg !5800

cond.end18:                                       ; preds = %cond.false17, %do.end14
  %cond19 = phi %struct.clk_core* [ %22, %do.end14 ], [ null, %cond.false17 ], !dbg !5800
  store %struct.clk_core* %cond19, %struct.clk_core** %tmp9, align 8, !dbg !5800
  %23 = load %struct.clk_core*, %struct.clk_core** %tmp9, align 8, !dbg !5800
  store %struct.clk_core* %23, %struct.clk_core** %root, align 8, !dbg !5793
  br label %for.cond5, !dbg !5793, !llvm.loop !5806

for.end:                                          ; preds = %for.cond5
  br label %for.inc20, !dbg !5807

for.inc20:                                        ; preds = %for.end
  %24 = load %struct.hlist_head**, %struct.hlist_head*** %lists, align 8, !dbg !5808
  %incdec.ptr = getelementptr %struct.hlist_head*, %struct.hlist_head** %24, i32 1, !dbg !5808
  store %struct.hlist_head** %incdec.ptr, %struct.hlist_head*** %lists, align 8, !dbg !5808
  br label %for.cond, !dbg !5809, !llvm.loop !5810

for.end21:                                        ; preds = %for.cond
  ret void, !dbg !5812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hlist_del_init(%struct.hlist_node* %n) #0 !dbg !5813 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !5816, metadata !DIExpression()), !dbg !5817
  %0 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !5818
  %call = call i32 @hlist_unhashed(%struct.hlist_node* %0) #11, !dbg !5820
  %tobool = icmp ne i32 %call, 0, !dbg !5820
  br i1 %tobool, label %if.end, label %if.then, !dbg !5821

if.then:                                          ; preds = %entry
  %1 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !5822
  call void @__hlist_del(%struct.hlist_node* %1) #11, !dbg !5824
  %2 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !5825
  call void @INIT_HLIST_NODE(%struct.hlist_node* %2) #11, !dbg !5826
  br label %if.end, !dbg !5827

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #0 !dbg !5829 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !5833, metadata !DIExpression()), !dbg !5834
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !5835, metadata !DIExpression()), !dbg !5836
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !5837
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !5839
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #11, !dbg !5840
  br i1 %call, label %if.then, label %if.end, !dbg !5841

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !5842
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !5844
  call void %1(%struct.kref* %2) #11, !dbg !5842
  store i32 1, i32* %retval, align 4, !dbg !5845
  br label %return, !dbg !5845

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5846
  br label %return, !dbg !5846

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !5847
  ret i32 %3, !dbg !5847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clk_release(%struct.kref* %ref) #0 !dbg !5848 {
entry:
  %ref.addr = alloca %struct.kref*, align 8
  %core = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  store %struct.kref* %ref, %struct.kref** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %ref.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core, metadata !5851, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5853, metadata !DIExpression()), !dbg !5855
  %0 = load %struct.kref*, %struct.kref** %ref.addr, align 8, !dbg !5855
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !5855
  store i8* %1, i8** %__mptr, align 8, !dbg !5855
  br label %do.body, !dbg !5855

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5856

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5855
  %add.ptr = getelementptr i8, i8* %2, i64 -212, !dbg !5855
  %3 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !5855
  store %struct.clk_core* %3, %struct.clk_core** %tmp, align 8, !dbg !5856
  %4 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !5855
  store %struct.clk_core* %4, %struct.clk_core** %core, align 8, !dbg !5852
  br label %do.body1, !dbg !5858

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !5859

do.end2:                                          ; preds = %do.body1
  %5 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5861
  call void @clk_core_free_parent_map(%struct.clk_core* %5) #11, !dbg !5862
  %6 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5863
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 0, !dbg !5864
  %7 = load i8*, i8** %name, align 8, !dbg !5864
  call void @kfree_const(i8* %7) #11, !dbg !5865
  %8 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !5866
  %9 = bitcast %struct.clk_core* %8 to i8*, !dbg !5866
  call void @kfree(i8* %9) #11, !dbg !5867
  ret void, !dbg !5868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @clk_hw_unregister(%struct.clk_hw* %hw) #0 !dbg !5869 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !5870, metadata !DIExpression()), !dbg !5871
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5872
  %clk = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %0, i32 0, i32 1, !dbg !5873
  %1 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5873
  call void @clk_unregister(%struct.clk* %1) #11, !dbg !5874
  ret void, !dbg !5875
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk* @devm_clk_register(%struct.device* %dev, %struct.clk_hw* %hw) #0 !dbg !5876 {
entry:
  %retval = alloca %struct.clk*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %hw.addr = alloca %struct.clk_hw*, align 8
  %clk = alloca %struct.clk*, align 8
  %clkp = alloca %struct.clk**, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5877, metadata !DIExpression()), !dbg !5878
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !5879, metadata !DIExpression()), !dbg !5880
  call void @llvm.dbg.declare(metadata %struct.clk** %clk, metadata !5881, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.declare(metadata %struct.clk*** %clkp, metadata !5883, metadata !DIExpression()), !dbg !5884
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_clk_release, i64 8, i32 3264) #11, !dbg !5885
  %0 = bitcast i8* %call to %struct.clk**, !dbg !5885
  store %struct.clk** %0, %struct.clk*** %clkp, align 8, !dbg !5886
  %1 = load %struct.clk**, %struct.clk*** %clkp, align 8, !dbg !5887
  %tobool = icmp ne %struct.clk** %1, null, !dbg !5887
  br i1 %tobool, label %if.end, label %if.then, !dbg !5889

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #11, !dbg !5890
  %2 = bitcast i8* %call1 to %struct.clk*, !dbg !5890
  store %struct.clk* %2, %struct.clk** %retval, align 8, !dbg !5891
  br label %return, !dbg !5891

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5892
  %4 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5893
  %call2 = call %struct.clk* @clk_register(%struct.device* %3, %struct.clk_hw* %4) #11, !dbg !5894
  store %struct.clk* %call2, %struct.clk** %clk, align 8, !dbg !5895
  %5 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5896
  %6 = bitcast %struct.clk* %5 to i8*, !dbg !5896
  %call3 = call zeroext i1 @IS_ERR(i8* %6) #11, !dbg !5898
  br i1 %call3, label %if.else, label %if.then4, !dbg !5899

if.then4:                                         ; preds = %if.end
  %7 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5900
  %8 = load %struct.clk**, %struct.clk*** %clkp, align 8, !dbg !5902
  store %struct.clk* %7, %struct.clk** %8, align 8, !dbg !5903
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5904
  %10 = load %struct.clk**, %struct.clk*** %clkp, align 8, !dbg !5905
  %11 = bitcast %struct.clk** %10 to i8*, !dbg !5905
  call void @devres_add(%struct.device* %9, i8* %11) #11, !dbg !5906
  br label %if.end5, !dbg !5907

if.else:                                          ; preds = %if.end
  %12 = load %struct.clk**, %struct.clk*** %clkp, align 8, !dbg !5908
  %13 = bitcast %struct.clk** %12 to i8*, !dbg !5908
  call void @devres_free(i8* %13) #11, !dbg !5910
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %14 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !5911
  store %struct.clk* %14, %struct.clk** %retval, align 8, !dbg !5912
  br label %return, !dbg !5912

return:                                           ; preds = %if.end5, %if.then
  %15 = load %struct.clk*, %struct.clk** %retval, align 8, !dbg !5913
  ret %struct.clk* %15, !dbg !5913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devres_alloc(void (%struct.device*, i8*)* %release, i64 %size, i32 %gfp) #0 !dbg !5914 {
entry:
  %release.addr = alloca void (%struct.device*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store void (%struct.device*, i8*)* %release, void (%struct.device*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, i8*)** %release.addr, metadata !5921, metadata !DIExpression()), !dbg !5922
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5923, metadata !DIExpression()), !dbg !5924
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !5925, metadata !DIExpression()), !dbg !5926
  %0 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %release.addr, align 8, !dbg !5927
  %1 = load i64, i64* %size.addr, align 8, !dbg !5928
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !5929
  %call = call noalias i8* @devres_alloc_node(void (%struct.device*, i8*)* %0, i64 %1, i32 %2, i32 -1) #11, !dbg !5930
  ret i8* %call, !dbg !5931
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_clk_release(%struct.device* %dev, i8* %res) #0 !dbg !5932 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5933, metadata !DIExpression()), !dbg !5934
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !5935, metadata !DIExpression()), !dbg !5936
  %0 = load i8*, i8** %res.addr, align 8, !dbg !5937
  %1 = bitcast i8* %0 to %struct.clk**, !dbg !5938
  %2 = load %struct.clk*, %struct.clk** %1, align 8, !dbg !5939
  call void @clk_unregister(%struct.clk* %2) #11, !dbg !5940
  ret void, !dbg !5941
}

; Function Attrs: noredzone
declare dso_local void @devres_add(%struct.device*, i8*) #5

; Function Attrs: noredzone
declare dso_local void @devres_free(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devm_clk_hw_register(%struct.device* %dev, %struct.clk_hw* %hw) #0 !dbg !5942 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %hw.addr = alloca %struct.clk_hw*, align 8
  %hwp = alloca %struct.clk_hw**, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5943, metadata !DIExpression()), !dbg !5944
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.declare(metadata %struct.clk_hw*** %hwp, metadata !5947, metadata !DIExpression()), !dbg !5948
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5949, metadata !DIExpression()), !dbg !5950
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_clk_hw_release, i64 8, i32 3264) #11, !dbg !5951
  %0 = bitcast i8* %call to %struct.clk_hw**, !dbg !5951
  store %struct.clk_hw** %0, %struct.clk_hw*** %hwp, align 8, !dbg !5952
  %1 = load %struct.clk_hw**, %struct.clk_hw*** %hwp, align 8, !dbg !5953
  %tobool = icmp ne %struct.clk_hw** %1, null, !dbg !5953
  br i1 %tobool, label %if.end, label %if.then, !dbg !5955

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5956
  br label %return, !dbg !5956

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5957
  %3 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5958
  %call1 = call i32 @clk_hw_register(%struct.device* %2, %struct.clk_hw* %3) #11, !dbg !5959
  store i32 %call1, i32* %ret, align 4, !dbg !5960
  %4 = load i32, i32* %ret, align 4, !dbg !5961
  %tobool2 = icmp ne i32 %4, 0, !dbg !5961
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !5963

if.then3:                                         ; preds = %if.end
  %5 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !5964
  %6 = load %struct.clk_hw**, %struct.clk_hw*** %hwp, align 8, !dbg !5966
  store %struct.clk_hw* %5, %struct.clk_hw** %6, align 8, !dbg !5967
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5968
  %8 = load %struct.clk_hw**, %struct.clk_hw*** %hwp, align 8, !dbg !5969
  %9 = bitcast %struct.clk_hw** %8 to i8*, !dbg !5969
  call void @devres_add(%struct.device* %7, i8* %9) #11, !dbg !5970
  br label %if.end4, !dbg !5971

if.else:                                          ; preds = %if.end
  %10 = load %struct.clk_hw**, %struct.clk_hw*** %hwp, align 8, !dbg !5972
  %11 = bitcast %struct.clk_hw** %10 to i8*, !dbg !5972
  call void @devres_free(i8* %11) #11, !dbg !5974
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  %12 = load i32, i32* %ret, align 4, !dbg !5975
  store i32 %12, i32* %retval, align 4, !dbg !5976
  br label %return, !dbg !5976

return:                                           ; preds = %if.end4, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !5977
  ret i32 %13, !dbg !5977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_clk_hw_release(%struct.device* %dev, i8* %res) #0 !dbg !5978 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5979, metadata !DIExpression()), !dbg !5980
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !5981, metadata !DIExpression()), !dbg !5982
  %0 = load i8*, i8** %res.addr, align 8, !dbg !5983
  %1 = bitcast i8* %0 to %struct.clk_hw**, !dbg !5984
  %2 = load %struct.clk_hw*, %struct.clk_hw** %1, align 8, !dbg !5985
  call void @clk_hw_unregister(%struct.clk_hw* %2) #11, !dbg !5986
  ret void, !dbg !5987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devm_clk_unregister(%struct.device* %dev, %struct.clk* %clk) #0 !dbg !5988 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %clk.addr = alloca %struct.clk*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5991, metadata !DIExpression()), !dbg !5992
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !5993, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5995, metadata !DIExpression()), !dbg !5997
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5997
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !5997
  %2 = bitcast %struct.clk* %1 to i8*, !dbg !5997
  %call = call i32 @devres_release(%struct.device* %0, void (%struct.device*, i8*)* @devm_clk_release, i32 (%struct.device*, i8*, i8*)* @devm_clk_match, i8* %2) #11, !dbg !5997
  %tobool = icmp ne i32 %call, 0, !dbg !5997
  %lnot = xor i1 %tobool, true, !dbg !5997
  %lnot1 = xor i1 %lnot, true, !dbg !5997
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5997
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5997
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !5998
  %tobool2 = icmp ne i32 %3, 0, !dbg !5998
  %lnot3 = xor i1 %tobool2, true, !dbg !5998
  %lnot5 = xor i1 %lnot3, true, !dbg !5998
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !5998
  %conv = sext i32 %lnot.ext6 to i64, !dbg !5998
  %tobool7 = icmp ne i64 %conv, 0, !dbg !5998
  br i1 %tobool7, label %if.then, label %if.end, !dbg !5997

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5998

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !6000

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !6002

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !6000

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 4170, i32 2305, i64 12) #10, !dbg !6004, !srcloc !6006
  br label %do.end10, !dbg !6004

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 252) #10, !dbg !6007, !srcloc !6009
  br label %do.body11, !dbg !6000

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !6010

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !6000

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !6000

if.end:                                           ; preds = %do.end13, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !5997
  %tobool14 = icmp ne i32 %4, 0, !dbg !5997
  %lnot15 = xor i1 %tobool14, true, !dbg !5997
  %lnot17 = xor i1 %lnot15, true, !dbg !5997
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !5997
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !5997
  store i64 %conv19, i64* %tmp, align 8, !dbg !5998
  %5 = load i64, i64* %tmp, align 8, !dbg !5997
  ret void, !dbg !6012
}

; Function Attrs: noredzone
declare dso_local i32 @devres_release(%struct.device*, void (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_clk_match(%struct.device* %dev, i8* %res, i8* %data) #0 !dbg !6013 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %c = alloca %struct.clk*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6016, metadata !DIExpression()), !dbg !6017
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6018, metadata !DIExpression()), !dbg !6019
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6020, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.declare(metadata %struct.clk** %c, metadata !6022, metadata !DIExpression()), !dbg !6023
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6024
  %1 = bitcast i8* %0 to %struct.clk*, !dbg !6024
  store %struct.clk* %1, %struct.clk** %c, align 8, !dbg !6023
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6025, metadata !DIExpression()), !dbg !6028
  %2 = load %struct.clk*, %struct.clk** %c, align 8, !dbg !6028
  %tobool = icmp ne %struct.clk* %2, null, !dbg !6028
  %lnot = xor i1 %tobool, true, !dbg !6028
  %lnot1 = xor i1 %lnot, true, !dbg !6028
  %lnot2 = xor i1 %lnot1, true, !dbg !6028
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6028
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6028
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !6029
  %tobool3 = icmp ne i32 %3, 0, !dbg !6029
  %lnot4 = xor i1 %tobool3, true, !dbg !6029
  %lnot6 = xor i1 %lnot4, true, !dbg !6029
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !6029
  %conv = sext i32 %lnot.ext7 to i64, !dbg !6029
  %tobool8 = icmp ne i64 %conv, 0, !dbg !6029
  br i1 %tobool8, label %if.then, label %if.end, !dbg !6028

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6029

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !6031

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !6033

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !6031

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 4145, i32 2305, i64 12) #10, !dbg !6035, !srcloc !6037
  br label %do.end11, !dbg !6035

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 250) #10, !dbg !6038, !srcloc !6040
  br label %do.body12, !dbg !6031

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !6041

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !6031

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !6031

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !6028
  %tobool15 = icmp ne i32 %4, 0, !dbg !6028
  %lnot16 = xor i1 %tobool15, true, !dbg !6028
  %lnot18 = xor i1 %lnot16, true, !dbg !6028
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !6028
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !6028
  store i64 %conv20, i64* %tmp, align 8, !dbg !6029
  %5 = load i64, i64* %tmp, align 8, !dbg !6028
  %tobool21 = icmp ne i64 %5, 0, !dbg !6043
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !6044

if.then22:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6045
  br label %return, !dbg !6045

if.end23:                                         ; preds = %if.end
  %6 = load %struct.clk*, %struct.clk** %c, align 8, !dbg !6046
  %7 = load i8*, i8** %data.addr, align 8, !dbg !6047
  %8 = bitcast i8* %7 to %struct.clk*, !dbg !6047
  %cmp = icmp eq %struct.clk* %6, %8, !dbg !6048
  %conv24 = zext i1 %cmp to i32, !dbg !6048
  store i32 %conv24, i32* %retval, align 4, !dbg !6049
  br label %return, !dbg !6049

return:                                           ; preds = %if.end23, %if.then22
  %9 = load i32, i32* %retval, align 4, !dbg !6050
  ret i32 %9, !dbg !6050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devm_clk_hw_unregister(%struct.device* %dev, %struct.clk_hw* %hw) #0 !dbg !6051 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %hw.addr = alloca %struct.clk_hw*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6054, metadata !DIExpression()), !dbg !6055
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !6056, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6058, metadata !DIExpression()), !dbg !6060
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6060
  %1 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !6060
  %2 = bitcast %struct.clk_hw* %1 to i8*, !dbg !6060
  %call = call i32 @devres_release(%struct.device* %0, void (%struct.device*, i8*)* @devm_clk_hw_release, i32 (%struct.device*, i8*, i8*)* @devm_clk_hw_match, i8* %2) #11, !dbg !6060
  %tobool = icmp ne i32 %call, 0, !dbg !6060
  %lnot = xor i1 %tobool, true, !dbg !6060
  %lnot1 = xor i1 %lnot, true, !dbg !6060
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6060
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6060
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !6061
  %tobool2 = icmp ne i32 %3, 0, !dbg !6061
  %lnot3 = xor i1 %tobool2, true, !dbg !6061
  %lnot5 = xor i1 %lnot3, true, !dbg !6061
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !6061
  %conv = sext i32 %lnot.ext6 to i64, !dbg !6061
  %tobool7 = icmp ne i64 %conv, 0, !dbg !6061
  br i1 %tobool7, label %if.then, label %if.end, !dbg !6060

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6061

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !6063

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !6065

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !6063

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 4186, i32 2305, i64 12) #10, !dbg !6067, !srcloc !6069
  br label %do.end10, !dbg !6067

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 253) #10, !dbg !6070, !srcloc !6072
  br label %do.body11, !dbg !6063

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !6073

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !6063

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !6063

if.end:                                           ; preds = %do.end13, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !6060
  %tobool14 = icmp ne i32 %4, 0, !dbg !6060
  %lnot15 = xor i1 %tobool14, true, !dbg !6060
  %lnot17 = xor i1 %lnot15, true, !dbg !6060
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !6060
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !6060
  store i64 %conv19, i64* %tmp, align 8, !dbg !6061
  %5 = load i64, i64* %tmp, align 8, !dbg !6060
  ret void, !dbg !6075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_clk_hw_match(%struct.device* %dev, i8* %res, i8* %data) #0 !dbg !6076 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %hw = alloca %struct.clk_hw*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6077, metadata !DIExpression()), !dbg !6078
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6079, metadata !DIExpression()), !dbg !6080
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6081, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw, metadata !6083, metadata !DIExpression()), !dbg !6084
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6085
  %1 = bitcast i8* %0 to %struct.clk_hw*, !dbg !6085
  store %struct.clk_hw* %1, %struct.clk_hw** %hw, align 8, !dbg !6084
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6086, metadata !DIExpression()), !dbg !6089
  %2 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !6089
  %tobool = icmp ne %struct.clk_hw* %2, null, !dbg !6089
  %lnot = xor i1 %tobool, true, !dbg !6089
  %lnot1 = xor i1 %lnot, true, !dbg !6089
  %lnot2 = xor i1 %lnot1, true, !dbg !6089
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6089
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6089
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !6090
  %tobool3 = icmp ne i32 %3, 0, !dbg !6090
  %lnot4 = xor i1 %tobool3, true, !dbg !6090
  %lnot6 = xor i1 %lnot4, true, !dbg !6090
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !6090
  %conv = sext i32 %lnot.ext7 to i64, !dbg !6090
  %tobool8 = icmp ne i64 %conv, 0, !dbg !6090
  br i1 %tobool8, label %if.then, label %if.end, !dbg !6089

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6090

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !6092

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !6094

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !6092

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 4154, i32 2305, i64 12) #10, !dbg !6096, !srcloc !6098
  br label %do.end11, !dbg !6096

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 251) #10, !dbg !6099, !srcloc !6101
  br label %do.body12, !dbg !6092

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !6102

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !6092

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !6092

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !6089
  %tobool15 = icmp ne i32 %4, 0, !dbg !6089
  %lnot16 = xor i1 %tobool15, true, !dbg !6089
  %lnot18 = xor i1 %lnot16, true, !dbg !6089
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !6089
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !6089
  store i64 %conv20, i64* %tmp, align 8, !dbg !6090
  %5 = load i64, i64* %tmp, align 8, !dbg !6089
  %tobool21 = icmp ne i64 %5, 0, !dbg !6104
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !6105

if.then22:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6106
  br label %return, !dbg !6106

if.end23:                                         ; preds = %if.end
  %6 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !6107
  %7 = load i8*, i8** %data.addr, align 8, !dbg !6108
  %8 = bitcast i8* %7 to %struct.clk_hw*, !dbg !6108
  %cmp = icmp eq %struct.clk_hw* %6, %8, !dbg !6109
  %conv24 = zext i1 %cmp to i32, !dbg !6109
  store i32 %conv24, i32* %retval, align 4, !dbg !6110
  br label %return, !dbg !6110

return:                                           ; preds = %if.end23, %if.then22
  %9 = load i32, i32* %retval, align 4, !dbg !6111
  ret i32 %9, !dbg !6111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__clk_put(%struct.clk* %clk) #0 !dbg !6112 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  %owner = alloca %struct.module*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on23 = alloca i32, align 4
  %tmp46 = alloca i64, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !6113, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.declare(metadata %struct.module** %owner, metadata !6115, metadata !DIExpression()), !dbg !6116
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6117
  %tobool = icmp ne %struct.clk* %0, null, !dbg !6117
  br i1 %tobool, label %lor.lhs.false, label %if.then21, !dbg !6119

lor.lhs.false:                                    ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6120, metadata !DIExpression()), !dbg !6122
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6122
  %2 = bitcast %struct.clk* %1 to i8*, !dbg !6122
  %call = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !6122
  %lnot = xor i1 %call, true, !dbg !6122
  %lnot1 = xor i1 %lnot, true, !dbg !6122
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6122
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6122
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !6123
  %tobool2 = icmp ne i32 %3, 0, !dbg !6123
  %lnot3 = xor i1 %tobool2, true, !dbg !6123
  %lnot5 = xor i1 %lnot3, true, !dbg !6123
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !6123
  %conv = sext i32 %lnot.ext6 to i64, !dbg !6123
  %tobool7 = icmp ne i64 %conv, 0, !dbg !6123
  br i1 %tobool7, label %if.then, label %if.end, !dbg !6122

if.then:                                          ; preds = %lor.lhs.false
  br label %do.body, !dbg !6123

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !6125

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !6127

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !6125

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 4198, i32 2307, i64 12) #10, !dbg !6129, !srcloc !6131
  br label %do.end10, !dbg !6129

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 254) #10, !dbg !6132, !srcloc !6134
  br label %do.body11, !dbg !6125

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !6135

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !6125

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !6125

if.end:                                           ; preds = %do.end13, %lor.lhs.false
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !6122
  %tobool14 = icmp ne i32 %4, 0, !dbg !6122
  %lnot15 = xor i1 %tobool14, true, !dbg !6122
  %lnot17 = xor i1 %lnot15, true, !dbg !6122
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !6122
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !6122
  store i64 %conv19, i64* %tmp, align 8, !dbg !6123
  %5 = load i64, i64* %tmp, align 8, !dbg !6122
  %tobool20 = icmp ne i64 %5, 0, !dbg !6137
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !6138

if.then21:                                        ; preds = %if.end, %entry
  br label %return, !dbg !6139

if.end22:                                         ; preds = %if.end
  call void @clk_prepare_lock() #11, !dbg !6140
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on23, metadata !6141, metadata !DIExpression()), !dbg !6144
  %6 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6144
  %exclusive_count = getelementptr inbounds %struct.clk, %struct.clk* %6, i32 0, i32 6, !dbg !6144
  %7 = load i32, i32* %exclusive_count, align 8, !dbg !6144
  %tobool24 = icmp ne i32 %7, 0, !dbg !6144
  %lnot25 = xor i1 %tobool24, true, !dbg !6144
  %lnot27 = xor i1 %lnot25, true, !dbg !6144
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !6144
  store i32 %lnot.ext28, i32* %__ret_warn_on23, align 4, !dbg !6144
  %8 = load i32, i32* %__ret_warn_on23, align 4, !dbg !6145
  %tobool29 = icmp ne i32 %8, 0, !dbg !6145
  %lnot30 = xor i1 %tobool29, true, !dbg !6145
  %lnot32 = xor i1 %lnot30, true, !dbg !6145
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !6145
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !6145
  %tobool35 = icmp ne i64 %conv34, 0, !dbg !6145
  br i1 %tobool35, label %if.then36, label %if.end45, !dbg !6144

if.then36:                                        ; preds = %if.end22
  br label %do.body37, !dbg !6145

do.body37:                                        ; preds = %if.then36
  br label %do.body38, !dbg !6147

do.body38:                                        ; preds = %do.body37
  br label %do.end39, !dbg !6149

do.end39:                                         ; preds = %do.body38
  br label %do.body40, !dbg !6147

do.body40:                                        ; preds = %do.end39
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 4208, i32 2305, i64 12) #10, !dbg !6151, !srcloc !6153
  br label %do.end41, !dbg !6151

do.end41:                                         ; preds = %do.body40
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 255) #10, !dbg !6154, !srcloc !6156
  br label %do.body42, !dbg !6147

do.body42:                                        ; preds = %do.end41
  br label %do.end43, !dbg !6157

do.end43:                                         ; preds = %do.body42
  br label %do.end44, !dbg !6147

do.end44:                                         ; preds = %do.end43
  br label %if.end45, !dbg !6147

if.end45:                                         ; preds = %do.end44, %if.end22
  %9 = load i32, i32* %__ret_warn_on23, align 4, !dbg !6144
  %tobool47 = icmp ne i32 %9, 0, !dbg !6144
  %lnot48 = xor i1 %tobool47, true, !dbg !6144
  %lnot50 = xor i1 %lnot48, true, !dbg !6144
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !6144
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !6144
  store i64 %conv52, i64* %tmp46, align 8, !dbg !6145
  %10 = load i64, i64* %tmp46, align 8, !dbg !6144
  %tobool53 = icmp ne i64 %10, 0, !dbg !6159
  br i1 %tobool53, label %if.then54, label %if.end59, !dbg !6160

if.then54:                                        ; preds = %if.end45
  %11 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6161
  %exclusive_count55 = getelementptr inbounds %struct.clk, %struct.clk* %11, i32 0, i32 6, !dbg !6163
  %12 = load i32, i32* %exclusive_count55, align 8, !dbg !6163
  %sub = sub i32 %12, 1, !dbg !6164
  %13 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6165
  %core = getelementptr inbounds %struct.clk, %struct.clk* %13, i32 0, i32 0, !dbg !6166
  %14 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !6166
  %protect_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 20, !dbg !6167
  %15 = load i32, i32* %protect_count, align 4, !dbg !6168
  %sub56 = sub i32 %15, %sub, !dbg !6168
  store i32 %sub56, i32* %protect_count, align 4, !dbg !6168
  %16 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6169
  %core57 = getelementptr inbounds %struct.clk, %struct.clk* %16, i32 0, i32 0, !dbg !6170
  %17 = load %struct.clk_core*, %struct.clk_core** %core57, align 8, !dbg !6170
  call void @clk_core_rate_unprotect(%struct.clk_core* %17) #11, !dbg !6171
  %18 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6172
  %exclusive_count58 = getelementptr inbounds %struct.clk, %struct.clk* %18, i32 0, i32 6, !dbg !6173
  store i32 0, i32* %exclusive_count58, align 8, !dbg !6174
  br label %if.end59, !dbg !6175

if.end59:                                         ; preds = %if.then54, %if.end45
  %19 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6176
  %clks_node = getelementptr inbounds %struct.clk, %struct.clk* %19, i32 0, i32 7, !dbg !6177
  call void @hlist_del(%struct.hlist_node* %clks_node) #11, !dbg !6178
  %20 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6179
  %min_rate = getelementptr inbounds %struct.clk, %struct.clk* %20, i32 0, i32 4, !dbg !6181
  %21 = load i64, i64* %min_rate, align 8, !dbg !6181
  %22 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6182
  %core60 = getelementptr inbounds %struct.clk, %struct.clk* %22, i32 0, i32 0, !dbg !6183
  %23 = load %struct.clk_core*, %struct.clk_core** %core60, align 8, !dbg !6183
  %req_rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %23, i32 0, i32 11, !dbg !6184
  %24 = load i64, i64* %req_rate, align 8, !dbg !6184
  %cmp = icmp ugt i64 %21, %24, !dbg !6185
  br i1 %cmp, label %if.then67, label %lor.lhs.false62, !dbg !6186

lor.lhs.false62:                                  ; preds = %if.end59
  %25 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6187
  %max_rate = getelementptr inbounds %struct.clk, %struct.clk* %25, i32 0, i32 5, !dbg !6188
  %26 = load i64, i64* %max_rate, align 8, !dbg !6188
  %27 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6189
  %core63 = getelementptr inbounds %struct.clk, %struct.clk* %27, i32 0, i32 0, !dbg !6190
  %28 = load %struct.clk_core*, %struct.clk_core** %core63, align 8, !dbg !6190
  %req_rate64 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %28, i32 0, i32 11, !dbg !6191
  %29 = load i64, i64* %req_rate64, align 8, !dbg !6191
  %cmp65 = icmp ult i64 %26, %29, !dbg !6192
  br i1 %cmp65, label %if.then67, label %if.end72, !dbg !6193

if.then67:                                        ; preds = %lor.lhs.false62, %if.end59
  %30 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6194
  %core68 = getelementptr inbounds %struct.clk, %struct.clk* %30, i32 0, i32 0, !dbg !6195
  %31 = load %struct.clk_core*, %struct.clk_core** %core68, align 8, !dbg !6195
  %32 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6196
  %core69 = getelementptr inbounds %struct.clk, %struct.clk* %32, i32 0, i32 0, !dbg !6197
  %33 = load %struct.clk_core*, %struct.clk_core** %core69, align 8, !dbg !6197
  %req_rate70 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %33, i32 0, i32 11, !dbg !6198
  %34 = load i64, i64* %req_rate70, align 8, !dbg !6198
  %call71 = call i32 @clk_core_set_rate_nolock(%struct.clk_core* %31, i64 %34) #11, !dbg !6199
  br label %if.end72, !dbg !6199

if.end72:                                         ; preds = %if.then67, %lor.lhs.false62
  %35 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6200
  %core73 = getelementptr inbounds %struct.clk, %struct.clk* %35, i32 0, i32 0, !dbg !6201
  %36 = load %struct.clk_core*, %struct.clk_core** %core73, align 8, !dbg !6201
  %owner74 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %36, i32 0, i32 3, !dbg !6202
  %37 = load %struct.module*, %struct.module** %owner74, align 8, !dbg !6202
  store %struct.module* %37, %struct.module** %owner, align 8, !dbg !6203
  %38 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6204
  %core75 = getelementptr inbounds %struct.clk, %struct.clk* %38, i32 0, i32 0, !dbg !6205
  %39 = load %struct.clk_core*, %struct.clk_core** %core75, align 8, !dbg !6205
  %ref = getelementptr inbounds %struct.clk_core, %struct.clk_core* %39, i32 0, i32 30, !dbg !6206
  %call76 = call i32 @kref_put(%struct.kref* %ref, void (%struct.kref*)* @__clk_release) #11, !dbg !6207
  call void @clk_prepare_unlock() #11, !dbg !6208
  %40 = load %struct.module*, %struct.module** %owner, align 8, !dbg !6209
  call void @module_put(%struct.module* %40) #11, !dbg !6210
  %41 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6211
  call void @free_clk(%struct.clk* %41) #11, !dbg !6212
  br label %return, !dbg !6213

return:                                           ; preds = %if.end72, %if.then21
  ret void, !dbg !6213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hlist_del(%struct.hlist_node* %n) #0 !dbg !6214 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !6215, metadata !DIExpression()), !dbg !6216
  %0 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !6217
  call void @__hlist_del(%struct.hlist_node* %0) #11, !dbg !6218
  %1 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !6219
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %1, i32 0, i32 0, !dbg !6220
  store %struct.hlist_node* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.hlist_node*), %struct.hlist_node** %next, align 8, !dbg !6221
  %2 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !6222
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %2, i32 0, i32 1, !dbg !6223
  store %struct.hlist_node** bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.hlist_node**), %struct.hlist_node*** %pprev, align 8, !dbg !6224
  ret void, !dbg !6225
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #0 !dbg !6226 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !6229, metadata !DIExpression()), !dbg !6230
  ret void, !dbg !6231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_notifier_register(%struct.clk* %clk, %struct.notifier_block* %nb) #0 !dbg !6232 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %cn = alloca %struct.clk_notifier*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.clk_notifier*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp10 = alloca %struct.clk_notifier*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !6235, metadata !DIExpression()), !dbg !6236
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !6237, metadata !DIExpression()), !dbg !6238
  call void @llvm.dbg.declare(metadata %struct.clk_notifier** %cn, metadata !6239, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6241, metadata !DIExpression()), !dbg !6242
  store i32 -12, i32* %ret, align 4, !dbg !6242
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6243
  %tobool = icmp ne %struct.clk* %0, null, !dbg !6243
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6245

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !6246
  %tobool1 = icmp ne %struct.notifier_block* %1, null, !dbg !6246
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6247

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !6248
  br label %return, !dbg !6248

if.end:                                           ; preds = %lor.lhs.false
  call void @clk_prepare_lock() #11, !dbg !6249
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6250, metadata !DIExpression()), !dbg !6253
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @clk_notifier_list, i32 0, i32 0), align 8, !dbg !6253
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !6253
  store i8* %3, i8** %__mptr, align 8, !dbg !6253
  br label %do.body, !dbg !6253

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6254

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6253
  %add.ptr = getelementptr i8, i8* %4, i64 -112, !dbg !6253
  %5 = bitcast i8* %add.ptr to %struct.clk_notifier*, !dbg !6253
  store %struct.clk_notifier* %5, %struct.clk_notifier** %tmp, align 8, !dbg !6254
  %6 = load %struct.clk_notifier*, %struct.clk_notifier** %tmp, align 8, !dbg !6253
  store %struct.clk_notifier* %6, %struct.clk_notifier** %cn, align 8, !dbg !6256
  br label %for.cond, !dbg !6256

for.cond:                                         ; preds = %do.end9, %do.end
  %7 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6257
  %node = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %7, i32 0, i32 2, !dbg !6257
  %cmp = icmp eq %struct.list_head* %node, @clk_notifier_list, !dbg !6257
  %lnot = xor i1 %cmp, true, !dbg !6257
  br i1 %lnot, label %for.body, label %for.end, !dbg !6256

for.body:                                         ; preds = %for.cond
  %8 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6259
  %clk2 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %8, i32 0, i32 0, !dbg !6261
  %9 = load %struct.clk*, %struct.clk** %clk2, align 8, !dbg !6261
  %10 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6262
  %cmp3 = icmp eq %struct.clk* %9, %10, !dbg !6263
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6264

if.then4:                                         ; preds = %for.body
  br label %for.end, !dbg !6265

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !6262

for.inc:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !6266, metadata !DIExpression()), !dbg !6268
  %11 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6268
  %node7 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %11, i32 0, i32 2, !dbg !6268
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node7, i32 0, i32 0, !dbg !6268
  %12 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6268
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !6268
  store i8* %13, i8** %__mptr6, align 8, !dbg !6268
  br label %do.body8, !dbg !6268

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !6269

do.end9:                                          ; preds = %do.body8
  %14 = load i8*, i8** %__mptr6, align 8, !dbg !6268
  %add.ptr11 = getelementptr i8, i8* %14, i64 -112, !dbg !6268
  %15 = bitcast i8* %add.ptr11 to %struct.clk_notifier*, !dbg !6268
  store %struct.clk_notifier* %15, %struct.clk_notifier** %tmp10, align 8, !dbg !6269
  %16 = load %struct.clk_notifier*, %struct.clk_notifier** %tmp10, align 8, !dbg !6268
  store %struct.clk_notifier* %16, %struct.clk_notifier** %cn, align 8, !dbg !6257
  br label %for.cond, !dbg !6257, !llvm.loop !6271

for.end:                                          ; preds = %if.then4, %for.cond
  %17 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6273
  %clk12 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %17, i32 0, i32 0, !dbg !6275
  %18 = load %struct.clk*, %struct.clk** %clk12, align 8, !dbg !6275
  %19 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6276
  %cmp13 = icmp ne %struct.clk* %18, %19, !dbg !6277
  br i1 %cmp13, label %if.then14, label %if.end20, !dbg !6278

if.then14:                                        ; preds = %for.end
  %call = call i8* @kzalloc(i64 128, i32 3264) #11, !dbg !6279
  %20 = bitcast i8* %call to %struct.clk_notifier*, !dbg !6279
  store %struct.clk_notifier* %20, %struct.clk_notifier** %cn, align 8, !dbg !6281
  %21 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6282
  %tobool15 = icmp ne %struct.clk_notifier* %21, null, !dbg !6282
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !6284

if.then16:                                        ; preds = %if.then14
  br label %out, !dbg !6285

if.end17:                                         ; preds = %if.then14
  %22 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6286
  %23 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6287
  %clk18 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %23, i32 0, i32 0, !dbg !6288
  store %struct.clk* %22, %struct.clk** %clk18, align 8, !dbg !6289
  %24 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6290
  %notifier_head = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %24, i32 0, i32 1, !dbg !6291
  call void @srcu_init_notifier_head(%struct.srcu_notifier_head* %notifier_head) #11, !dbg !6292
  %25 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6293
  %node19 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %25, i32 0, i32 2, !dbg !6294
  call void @list_add(%struct.list_head* %node19, %struct.list_head* @clk_notifier_list) #11, !dbg !6295
  br label %if.end20, !dbg !6296

if.end20:                                         ; preds = %if.end17, %for.end
  %26 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6297
  %notifier_head21 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %26, i32 0, i32 1, !dbg !6298
  %27 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !6299
  %call22 = call i32 @srcu_notifier_chain_register(%struct.srcu_notifier_head* %notifier_head21, %struct.notifier_block* %27) #11, !dbg !6300
  store i32 %call22, i32* %ret, align 4, !dbg !6301
  %28 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6302
  %core = getelementptr inbounds %struct.clk, %struct.clk* %28, i32 0, i32 0, !dbg !6303
  %29 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !6303
  %notifier_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %29, i32 0, i32 29, !dbg !6304
  %30 = load i32, i32* %notifier_count, align 8, !dbg !6305
  %inc = add i32 %30, 1, !dbg !6305
  store i32 %inc, i32* %notifier_count, align 8, !dbg !6305
  br label %out, !dbg !6302

out:                                              ; preds = %if.end20, %if.then16
  call void @llvm.dbg.label(metadata !6306), !dbg !6307
  call void @clk_prepare_unlock() #11, !dbg !6308
  %31 = load i32, i32* %ret, align 4, !dbg !6309
  store i32 %31, i32* %retval, align 4, !dbg !6310
  br label %return, !dbg !6310

return:                                           ; preds = %out, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !6311
  ret i32 %32, !dbg !6311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !6312 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6315, metadata !DIExpression()), !dbg !6319
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6325, metadata !DIExpression()), !dbg !6326
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6327, metadata !DIExpression()), !dbg !6328
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6329, metadata !DIExpression()), !dbg !6330
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6331, metadata !DIExpression()), !dbg !6335
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6337, metadata !DIExpression()), !dbg !6341
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6343, metadata !DIExpression()), !dbg !6347
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6352, metadata !DIExpression()), !dbg !6353
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6354, metadata !DIExpression()), !dbg !6355
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6356, metadata !DIExpression()), !dbg !6357
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6358, metadata !DIExpression()), !dbg !6359
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6360, metadata !DIExpression()), !dbg !6361
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6362, metadata !DIExpression()), !dbg !6363
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6364, metadata !DIExpression()), !dbg !6365
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6366, metadata !DIExpression()), !dbg !6367
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6368, metadata !DIExpression()), !dbg !6369
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6370, metadata !DIExpression()), !dbg !6371
  %0 = load i64, i64* %size.addr, align 8, !dbg !6372
  %1 = load i32, i32* %flags.addr, align 4, !dbg !6373
  %or = or i32 %1, 256, !dbg !6374
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !6375
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !6376
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !6377

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6378
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !6379
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6380

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !6381
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !6382
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6383
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !6384
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6361
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !6385
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6386
  %10 = load i32, i32* %order.i.i, align 4, !dbg !6387
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6388
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6389
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6390
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !6391
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6391
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6391
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6391
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !6391
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6392
  br label %kmalloc.exit, !dbg !6392

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !6393
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6394
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !6394
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6396

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6397
  br label %kmalloc_index.exit.i, !dbg !6397

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6398
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !6400
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6401

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6402
  br label %kmalloc_index.exit.i, !dbg !6402

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6403
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !6405
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6406

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6407
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !6408
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6409

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6410
  br label %kmalloc_index.exit.i, !dbg !6410

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6411
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !6413
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6414

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6415
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !6416
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6417

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6418
  br label %kmalloc_index.exit.i, !dbg !6418

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6419
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !6421
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6422

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6423
  br label %kmalloc_index.exit.i, !dbg !6423

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6424
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !6426
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6427

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6428
  br label %kmalloc_index.exit.i, !dbg !6428

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6429
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !6431
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6432

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6433
  br label %kmalloc_index.exit.i, !dbg !6433

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6434
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !6436
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6437

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6438
  br label %kmalloc_index.exit.i, !dbg !6438

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6439
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !6441
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6442

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6443
  br label %kmalloc_index.exit.i, !dbg !6443

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6444
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !6446
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6447

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6448
  br label %kmalloc_index.exit.i, !dbg !6448

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6449
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !6451
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6452

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6453
  br label %kmalloc_index.exit.i, !dbg !6453

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6454
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !6456
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6457

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6458
  br label %kmalloc_index.exit.i, !dbg !6458

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6459
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !6461
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6462

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6463
  br label %kmalloc_index.exit.i, !dbg !6463

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6464
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !6466
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6467

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6468
  br label %kmalloc_index.exit.i, !dbg !6468

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6469
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !6471
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6472

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6473
  br label %kmalloc_index.exit.i, !dbg !6473

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6474
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !6476
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6477

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6478
  br label %kmalloc_index.exit.i, !dbg !6478

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6479
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !6481
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6482

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6483
  br label %kmalloc_index.exit.i, !dbg !6483

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6484
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !6486
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6487

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6488
  br label %kmalloc_index.exit.i, !dbg !6488

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6489
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !6491
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6492

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6493
  br label %kmalloc_index.exit.i, !dbg !6493

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6494
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !6496
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6497

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6498
  br label %kmalloc_index.exit.i, !dbg !6498

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6499
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !6501
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6502

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6503
  br label %kmalloc_index.exit.i, !dbg !6503

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6504
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !6506
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6507

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6508
  br label %kmalloc_index.exit.i, !dbg !6508

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6509
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !6511
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6512

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6513
  br label %kmalloc_index.exit.i, !dbg !6513

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6514
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !6516
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6517

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6518
  br label %kmalloc_index.exit.i, !dbg !6518

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6519
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !6521
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6522

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6523
  br label %kmalloc_index.exit.i, !dbg !6523

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6524
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !6526
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6527

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6528
  br label %kmalloc_index.exit.i, !dbg !6528

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6529
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !6531
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6532

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6533
  br label %kmalloc_index.exit.i, !dbg !6533

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6534
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !6536
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6537

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6538
  br label %kmalloc_index.exit.i, !dbg !6538

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !6539, !srcloc !6542
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !6543, !srcloc !6546
  unreachable, !dbg !6547

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !6548
  store i32 %45, i32* %index.i, align 4, !dbg !6549
  %46 = load i32, i32* %index.i, align 4, !dbg !6550
  %tobool.i = icmp ne i32 %46, 0, !dbg !6550
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6552

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6553
  br label %kmalloc.exit, !dbg !6553

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !6554
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6555
  %and.i.i = and i32 %48, 17, !dbg !6555
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6555
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6555
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6555
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6555
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6557

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6558
  br label %kmalloc_type.exit.i, !dbg !6558

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6559
  %and2.i.i = and i32 %49, 1, !dbg !6560
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6559
  %50 = zext i1 %tobool3.i.i to i64, !dbg !6559
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6559
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6561
  br label %kmalloc_type.exit.i, !dbg !6561

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !6562
  %idxprom.i = zext i32 %51 to i64, !dbg !6563
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6563
  %52 = load i32, i32* %index.i, align 4, !dbg !6564
  %idxprom6.i = zext i32 %52 to i64, !dbg !6563
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6563
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6563
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !6565
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !6566
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6567
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6568
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !6569
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6569
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6569
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6569
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !6569
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6330
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6570
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !6571
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6572
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6573
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !6574
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6575
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !6576
  store i8* %62, i8** %retval.i, align 8, !dbg !6577
  br label %kmalloc.exit, !dbg !6577

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !6578
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !6579
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !6580
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6580
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6580
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6580
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !6580
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6581
  br label %kmalloc.exit, !dbg !6581

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !6582
  ret i8* %65, !dbg !6583
}

; Function Attrs: noredzone
declare dso_local void @srcu_init_notifier_head(%struct.srcu_notifier_head*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !6584 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6587, metadata !DIExpression()), !dbg !6588
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6589, metadata !DIExpression()), !dbg !6590
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6591
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6592
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6593
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !6594
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6594
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !6595
  ret void, !dbg !6596
}

; Function Attrs: noredzone
declare dso_local i32 @srcu_notifier_chain_register(%struct.srcu_notifier_head*, %struct.notifier_block*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @clk_notifier_unregister(%struct.clk* %clk, %struct.notifier_block* %nb) #0 !dbg !6597 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %cn = alloca %struct.clk_notifier*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.clk_notifier*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp10 = alloca %struct.clk_notifier*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !6598, metadata !DIExpression()), !dbg !6599
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !6600, metadata !DIExpression()), !dbg !6601
  call void @llvm.dbg.declare(metadata %struct.clk_notifier** %cn, metadata !6602, metadata !DIExpression()), !dbg !6603
  store %struct.clk_notifier* null, %struct.clk_notifier** %cn, align 8, !dbg !6603
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6604, metadata !DIExpression()), !dbg !6605
  store i32 -22, i32* %ret, align 4, !dbg !6605
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6606
  %tobool = icmp ne %struct.clk* %0, null, !dbg !6606
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6608

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !6609
  %tobool1 = icmp ne %struct.notifier_block* %1, null, !dbg !6609
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6610

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !6611
  br label %return, !dbg !6611

if.end:                                           ; preds = %lor.lhs.false
  call void @clk_prepare_lock() #11, !dbg !6612
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6613, metadata !DIExpression()), !dbg !6616
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @clk_notifier_list, i32 0, i32 0), align 8, !dbg !6616
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !6616
  store i8* %3, i8** %__mptr, align 8, !dbg !6616
  br label %do.body, !dbg !6616

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6617

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6616
  %add.ptr = getelementptr i8, i8* %4, i64 -112, !dbg !6616
  %5 = bitcast i8* %add.ptr to %struct.clk_notifier*, !dbg !6616
  store %struct.clk_notifier* %5, %struct.clk_notifier** %tmp, align 8, !dbg !6617
  %6 = load %struct.clk_notifier*, %struct.clk_notifier** %tmp, align 8, !dbg !6616
  store %struct.clk_notifier* %6, %struct.clk_notifier** %cn, align 8, !dbg !6619
  br label %for.cond, !dbg !6619

for.cond:                                         ; preds = %do.end9, %do.end
  %7 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6620
  %node = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %7, i32 0, i32 2, !dbg !6620
  %cmp = icmp eq %struct.list_head* %node, @clk_notifier_list, !dbg !6620
  %lnot = xor i1 %cmp, true, !dbg !6620
  br i1 %lnot, label %for.body, label %for.end, !dbg !6619

for.body:                                         ; preds = %for.cond
  %8 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6622
  %clk2 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %8, i32 0, i32 0, !dbg !6624
  %9 = load %struct.clk*, %struct.clk** %clk2, align 8, !dbg !6624
  %10 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6625
  %cmp3 = icmp eq %struct.clk* %9, %10, !dbg !6626
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6627

if.then4:                                         ; preds = %for.body
  br label %for.end, !dbg !6628

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !6625

for.inc:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !6629, metadata !DIExpression()), !dbg !6631
  %11 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6631
  %node7 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %11, i32 0, i32 2, !dbg !6631
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node7, i32 0, i32 0, !dbg !6631
  %12 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6631
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !6631
  store i8* %13, i8** %__mptr6, align 8, !dbg !6631
  br label %do.body8, !dbg !6631

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !6632

do.end9:                                          ; preds = %do.body8
  %14 = load i8*, i8** %__mptr6, align 8, !dbg !6631
  %add.ptr11 = getelementptr i8, i8* %14, i64 -112, !dbg !6631
  %15 = bitcast i8* %add.ptr11 to %struct.clk_notifier*, !dbg !6631
  store %struct.clk_notifier* %15, %struct.clk_notifier** %tmp10, align 8, !dbg !6632
  %16 = load %struct.clk_notifier*, %struct.clk_notifier** %tmp10, align 8, !dbg !6631
  store %struct.clk_notifier* %16, %struct.clk_notifier** %cn, align 8, !dbg !6620
  br label %for.cond, !dbg !6620, !llvm.loop !6634

for.end:                                          ; preds = %if.then4, %for.cond
  %17 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6636
  %clk12 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %17, i32 0, i32 0, !dbg !6638
  %18 = load %struct.clk*, %struct.clk** %clk12, align 8, !dbg !6638
  %19 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6639
  %cmp13 = icmp eq %struct.clk* %18, %19, !dbg !6640
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !6641

if.then14:                                        ; preds = %for.end
  %20 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6642
  %notifier_head = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %20, i32 0, i32 1, !dbg !6644
  %21 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !6645
  %call = call i32 @srcu_notifier_chain_unregister(%struct.srcu_notifier_head* %notifier_head, %struct.notifier_block* %21) #11, !dbg !6646
  store i32 %call, i32* %ret, align 4, !dbg !6647
  %22 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6648
  %core = getelementptr inbounds %struct.clk, %struct.clk* %22, i32 0, i32 0, !dbg !6649
  %23 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !6649
  %notifier_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %23, i32 0, i32 29, !dbg !6650
  %24 = load i32, i32* %notifier_count, align 8, !dbg !6651
  %dec = add i32 %24, -1, !dbg !6651
  store i32 %dec, i32* %notifier_count, align 8, !dbg !6651
  %25 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6652
  %notifier_head15 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %25, i32 0, i32 1, !dbg !6654
  %head = getelementptr inbounds %struct.srcu_notifier_head, %struct.srcu_notifier_head* %notifier_head15, i32 0, i32 2, !dbg !6655
  %26 = load %struct.notifier_block*, %struct.notifier_block** %head, align 8, !dbg !6655
  %tobool16 = icmp ne %struct.notifier_block* %26, null, !dbg !6652
  br i1 %tobool16, label %if.end20, label %if.then17, !dbg !6656

if.then17:                                        ; preds = %if.then14
  %27 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6657
  %notifier_head18 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %27, i32 0, i32 1, !dbg !6657
  %srcu = getelementptr inbounds %struct.srcu_notifier_head, %struct.srcu_notifier_head* %notifier_head18, i32 0, i32 1, !dbg !6657
  call void @cleanup_srcu_struct(%struct.srcu_struct* %srcu) #11, !dbg !6657
  %28 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6659
  %node19 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %28, i32 0, i32 2, !dbg !6660
  call void @list_del(%struct.list_head* %node19) #11, !dbg !6661
  %29 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !6662
  %30 = bitcast %struct.clk_notifier* %29 to i8*, !dbg !6662
  call void @kfree(i8* %30) #11, !dbg !6663
  br label %if.end20, !dbg !6664

if.end20:                                         ; preds = %if.then17, %if.then14
  br label %if.end21, !dbg !6665

if.else:                                          ; preds = %for.end
  store i32 -2, i32* %ret, align 4, !dbg !6666
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.end20
  call void @clk_prepare_unlock() #11, !dbg !6668
  %31 = load i32, i32* %ret, align 4, !dbg !6669
  store i32 %31, i32* %retval, align 4, !dbg !6670
  br label %return, !dbg !6670

return:                                           ; preds = %if.end21, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !6671
  ret i32 %32, !dbg !6671
}

; Function Attrs: noredzone
declare dso_local i32 @srcu_notifier_chain_unregister(%struct.srcu_notifier_head*, %struct.notifier_block*) #5

; Function Attrs: noredzone
declare dso_local void @cleanup_srcu_struct(%struct.srcu_struct*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !6672 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6675, metadata !DIExpression()), !dbg !6676
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6677
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !6678
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6679
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6680
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !6681
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6682
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !6683
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !6684
  ret void, !dbg !6685
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk* @of_clk_src_simple_get(%struct.of_phandle_args* %clkspec, i8* %data) #0 !dbg !6686 {
entry:
  %clkspec.addr = alloca %struct.of_phandle_args*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.of_phandle_args* %clkspec, %struct.of_phandle_args** %clkspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %clkspec.addr, metadata !6687, metadata !DIExpression()), !dbg !6688
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6689, metadata !DIExpression()), !dbg !6690
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6691
  %1 = bitcast i8* %0 to %struct.clk*, !dbg !6691
  ret %struct.clk* %1, !dbg !6692
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk_hw* @of_clk_hw_simple_get(%struct.of_phandle_args* %clkspec, i8* %data) #0 !dbg !6693 {
entry:
  %clkspec.addr = alloca %struct.of_phandle_args*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.of_phandle_args* %clkspec, %struct.of_phandle_args** %clkspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %clkspec.addr, metadata !6694, metadata !DIExpression()), !dbg !6695
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6696, metadata !DIExpression()), !dbg !6697
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6698
  %1 = bitcast i8* %0 to %struct.clk_hw*, !dbg !6698
  ret %struct.clk_hw* %1, !dbg !6699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk* @of_clk_src_onecell_get(%struct.of_phandle_args* %clkspec, i8* %data) #0 !dbg !6700 {
entry:
  %retval = alloca %struct.clk*, align 8
  %clkspec.addr = alloca %struct.of_phandle_args*, align 8
  %data.addr = alloca i8*, align 8
  %clk_data = alloca %struct.clk_onecell_data*, align 8
  %idx = alloca i32, align 4
  store %struct.of_phandle_args* %clkspec, %struct.of_phandle_args** %clkspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %clkspec.addr, metadata !6701, metadata !DIExpression()), !dbg !6702
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6703, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.declare(metadata %struct.clk_onecell_data** %clk_data, metadata !6705, metadata !DIExpression()), !dbg !6711
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6712
  %1 = bitcast i8* %0 to %struct.clk_onecell_data*, !dbg !6712
  store %struct.clk_onecell_data* %1, %struct.clk_onecell_data** %clk_data, align 8, !dbg !6711
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6713, metadata !DIExpression()), !dbg !6714
  %2 = load %struct.of_phandle_args*, %struct.of_phandle_args** %clkspec.addr, align 8, !dbg !6715
  %args = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %2, i32 0, i32 2, !dbg !6716
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %args, i64 0, i64 0, !dbg !6715
  %3 = load i32, i32* %arrayidx, align 4, !dbg !6715
  store i32 %3, i32* %idx, align 4, !dbg !6714
  %4 = load i32, i32* %idx, align 4, !dbg !6717
  %5 = load %struct.clk_onecell_data*, %struct.clk_onecell_data** %clk_data, align 8, !dbg !6719
  %clk_num = getelementptr inbounds %struct.clk_onecell_data, %struct.clk_onecell_data* %5, i32 0, i32 1, !dbg !6720
  %6 = load i32, i32* %clk_num, align 8, !dbg !6720
  %cmp = icmp uge i32 %4, %6, !dbg !6721
  br i1 %cmp, label %if.then, label %if.end, !dbg !6722

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %idx, align 4, !dbg !6723
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.of_clk_src_onecell_get, i64 0, i64 0), i32 %7) #13, !dbg !6723
  %call1 = call i8* @ERR_PTR(i64 -22) #11, !dbg !6725
  %8 = bitcast i8* %call1 to %struct.clk*, !dbg !6725
  store %struct.clk* %8, %struct.clk** %retval, align 8, !dbg !6726
  br label %return, !dbg !6726

if.end:                                           ; preds = %entry
  %9 = load %struct.clk_onecell_data*, %struct.clk_onecell_data** %clk_data, align 8, !dbg !6727
  %clks = getelementptr inbounds %struct.clk_onecell_data, %struct.clk_onecell_data* %9, i32 0, i32 0, !dbg !6728
  %10 = load %struct.clk**, %struct.clk*** %clks, align 8, !dbg !6728
  %11 = load i32, i32* %idx, align 4, !dbg !6729
  %idxprom = zext i32 %11 to i64, !dbg !6727
  %arrayidx2 = getelementptr %struct.clk*, %struct.clk** %10, i64 %idxprom, !dbg !6727
  %12 = load %struct.clk*, %struct.clk** %arrayidx2, align 8, !dbg !6727
  store %struct.clk* %12, %struct.clk** %retval, align 8, !dbg !6730
  br label %return, !dbg !6730

return:                                           ; preds = %if.end, %if.then
  %13 = load %struct.clk*, %struct.clk** %retval, align 8, !dbg !6731
  ret %struct.clk* %13, !dbg !6731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk_hw* @of_clk_hw_onecell_get(%struct.of_phandle_args* %clkspec, i8* %data) #0 !dbg !6732 {
entry:
  %retval = alloca %struct.clk_hw*, align 8
  %clkspec.addr = alloca %struct.of_phandle_args*, align 8
  %data.addr = alloca i8*, align 8
  %hw_data = alloca %struct.clk_hw_onecell_data*, align 8
  %idx = alloca i32, align 4
  store %struct.of_phandle_args* %clkspec, %struct.of_phandle_args** %clkspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %clkspec.addr, metadata !6733, metadata !DIExpression()), !dbg !6734
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6735, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.declare(metadata %struct.clk_hw_onecell_data** %hw_data, metadata !6737, metadata !DIExpression()), !dbg !6744
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6745
  %1 = bitcast i8* %0 to %struct.clk_hw_onecell_data*, !dbg !6745
  store %struct.clk_hw_onecell_data* %1, %struct.clk_hw_onecell_data** %hw_data, align 8, !dbg !6744
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6746, metadata !DIExpression()), !dbg !6747
  %2 = load %struct.of_phandle_args*, %struct.of_phandle_args** %clkspec.addr, align 8, !dbg !6748
  %args = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %2, i32 0, i32 2, !dbg !6749
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %args, i64 0, i64 0, !dbg !6748
  %3 = load i32, i32* %arrayidx, align 4, !dbg !6748
  store i32 %3, i32* %idx, align 4, !dbg !6747
  %4 = load i32, i32* %idx, align 4, !dbg !6750
  %5 = load %struct.clk_hw_onecell_data*, %struct.clk_hw_onecell_data** %hw_data, align 8, !dbg !6752
  %num = getelementptr inbounds %struct.clk_hw_onecell_data, %struct.clk_hw_onecell_data* %5, i32 0, i32 0, !dbg !6753
  %6 = load i32, i32* %num, align 8, !dbg !6753
  %cmp = icmp uge i32 %4, %6, !dbg !6754
  br i1 %cmp, label %if.then, label %if.end, !dbg !6755

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %idx, align 4, !dbg !6756
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.of_clk_hw_onecell_get, i64 0, i64 0), i32 %7) #13, !dbg !6756
  %call1 = call i8* @ERR_PTR(i64 -22) #11, !dbg !6758
  %8 = bitcast i8* %call1 to %struct.clk_hw*, !dbg !6758
  store %struct.clk_hw* %8, %struct.clk_hw** %retval, align 8, !dbg !6759
  br label %return, !dbg !6759

if.end:                                           ; preds = %entry
  %9 = load %struct.clk_hw_onecell_data*, %struct.clk_hw_onecell_data** %hw_data, align 8, !dbg !6760
  %hws = getelementptr inbounds %struct.clk_hw_onecell_data, %struct.clk_hw_onecell_data* %9, i32 0, i32 1, !dbg !6761
  %10 = load i32, i32* %idx, align 4, !dbg !6762
  %idxprom = zext i32 %10 to i64, !dbg !6760
  %arrayidx2 = getelementptr [0 x %struct.clk_hw*], [0 x %struct.clk_hw*]* %hws, i64 0, i64 %idxprom, !dbg !6760
  %11 = load %struct.clk_hw*, %struct.clk_hw** %arrayidx2, align 8, !dbg !6760
  store %struct.clk_hw* %11, %struct.clk_hw** %retval, align 8, !dbg !6763
  br label %return, !dbg !6763

return:                                           ; preds = %if.end, %if.then
  %12 = load %struct.clk_hw*, %struct.clk_hw** %retval, align 8, !dbg !6764
  ret %struct.clk_hw* %12, !dbg !6764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_clk_add_provider(%struct.device_node* %np, %struct.clk* (%struct.of_phandle_args*, i8*)* %clk_src_get, i8* %data) #0 !dbg !6765 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %clk_src_get.addr = alloca %struct.clk* (%struct.of_phandle_args*, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %cp = alloca %struct.of_clk_provider*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !6768, metadata !DIExpression()), !dbg !6769
  store %struct.clk* (%struct.of_phandle_args*, i8*)* %clk_src_get, %struct.clk* (%struct.of_phandle_args*, i8*)** %clk_src_get.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk* (%struct.of_phandle_args*, i8*)** %clk_src_get.addr, metadata !6770, metadata !DIExpression()), !dbg !6771
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6772, metadata !DIExpression()), !dbg !6773
  call void @llvm.dbg.declare(metadata %struct.of_clk_provider** %cp, metadata !6774, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6776, metadata !DIExpression()), !dbg !6777
  %call = call i8* @kzalloc(i64 48, i32 3264) #11, !dbg !6778
  %0 = bitcast i8* %call to %struct.of_clk_provider*, !dbg !6778
  store %struct.of_clk_provider* %0, %struct.of_clk_provider** %cp, align 8, !dbg !6779
  %1 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6780
  %tobool = icmp ne %struct.of_clk_provider* %1, null, !dbg !6780
  br i1 %tobool, label %if.end, label %if.then, !dbg !6782

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6783
  br label %return, !dbg !6783

if.end:                                           ; preds = %entry
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6784
  %call1 = call %struct.device_node* @of_node_get(%struct.device_node* %2) #11, !dbg !6785
  %3 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6786
  %node = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %3, i32 0, i32 1, !dbg !6787
  store %struct.device_node* %call1, %struct.device_node** %node, align 8, !dbg !6788
  %4 = load i8*, i8** %data.addr, align 8, !dbg !6789
  %5 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6790
  %data2 = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %5, i32 0, i32 4, !dbg !6791
  store i8* %4, i8** %data2, align 8, !dbg !6792
  %6 = load %struct.clk* (%struct.of_phandle_args*, i8*)*, %struct.clk* (%struct.of_phandle_args*, i8*)** %clk_src_get.addr, align 8, !dbg !6793
  %7 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6794
  %get = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %7, i32 0, i32 2, !dbg !6795
  store %struct.clk* (%struct.of_phandle_args*, i8*)* %6, %struct.clk* (%struct.of_phandle_args*, i8*)** %get, align 8, !dbg !6796
  call void @mutex_lock(%struct.mutex* @of_clk_mutex) #11, !dbg !6797
  %8 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6798
  %link = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %8, i32 0, i32 0, !dbg !6799
  call void @list_add(%struct.list_head* %link, %struct.list_head* @of_clk_providers) #11, !dbg !6800
  call void @mutex_unlock(%struct.mutex* @of_clk_mutex) #11, !dbg !6801
  store i32 0, i32* %tmp, align 4, !dbg !6802
  %9 = load i32, i32* %tmp, align 4, !dbg !6805
  call void @clk_core_reparent_orphans() #11, !dbg !6806
  %10 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6807
  %call3 = call i32 @of_clk_set_defaults(%struct.device_node* %10, i1 zeroext true) #11, !dbg !6808
  store i32 %call3, i32* %ret, align 4, !dbg !6809
  %11 = load i32, i32* %ret, align 4, !dbg !6810
  %cmp = icmp slt i32 %11, 0, !dbg !6812
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !6813

if.then4:                                         ; preds = %if.end
  %12 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6814
  call void @of_clk_del_provider(%struct.device_node* %12) #11, !dbg !6815
  br label %if.end5, !dbg !6815

if.end5:                                          ; preds = %if.then4, %if.end
  %13 = load i32, i32* %ret, align 4, !dbg !6816
  store i32 %13, i32* %retval, align 4, !dbg !6817
  br label %return, !dbg !6817

return:                                           ; preds = %if.end5, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !6818
  ret i32 %14, !dbg !6818
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @of_node_get(%struct.device_node* %node) #0 !dbg !6819 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !6824
  ret %struct.device_node* %0, !dbg !6825
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #5

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_reparent_orphans() #0 !dbg !6826 {
entry:
  call void @clk_prepare_lock() #11, !dbg !6827
  call void @clk_core_reparent_orphans_nolock() #11, !dbg !6828
  call void @clk_prepare_unlock() #11, !dbg !6829
  ret void, !dbg !6830
}

; Function Attrs: noredzone
declare dso_local i32 @of_clk_set_defaults(%struct.device_node*, i1 zeroext) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @of_clk_del_provider(%struct.device_node* %np) #0 !dbg !6831 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %cp = alloca %struct.of_clk_provider*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.of_clk_provider*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp8 = alloca %struct.of_clk_provider*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !6832, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.declare(metadata %struct.of_clk_provider** %cp, metadata !6834, metadata !DIExpression()), !dbg !6835
  call void @mutex_lock(%struct.mutex* @of_clk_mutex) #11, !dbg !6836
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6837, metadata !DIExpression()), !dbg !6840
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @of_clk_providers, i32 0, i32 0), align 8, !dbg !6840
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !6840
  store i8* %1, i8** %__mptr, align 8, !dbg !6840
  br label %do.body, !dbg !6840

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6841

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6840
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6840
  %3 = bitcast i8* %add.ptr to %struct.of_clk_provider*, !dbg !6840
  store %struct.of_clk_provider* %3, %struct.of_clk_provider** %tmp, align 8, !dbg !6841
  %4 = load %struct.of_clk_provider*, %struct.of_clk_provider** %tmp, align 8, !dbg !6840
  store %struct.of_clk_provider* %4, %struct.of_clk_provider** %cp, align 8, !dbg !6843
  br label %for.cond, !dbg !6843

for.cond:                                         ; preds = %do.end7, %do.end
  %5 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6844
  %link = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %5, i32 0, i32 0, !dbg !6844
  %cmp = icmp eq %struct.list_head* %link, @of_clk_providers, !dbg !6844
  %lnot = xor i1 %cmp, true, !dbg !6844
  br i1 %lnot, label %for.body, label %for.end, !dbg !6843

for.body:                                         ; preds = %for.cond
  %6 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6846
  %node = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %6, i32 0, i32 1, !dbg !6849
  %7 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !6849
  %8 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6850
  %cmp1 = icmp eq %struct.device_node* %7, %8, !dbg !6851
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6852

if.then:                                          ; preds = %for.body
  %9 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6853
  %link2 = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %9, i32 0, i32 0, !dbg !6855
  call void @list_del(%struct.list_head* %link2) #11, !dbg !6856
  %10 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6857
  %node3 = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %10, i32 0, i32 1, !dbg !6858
  %11 = load %struct.device_node*, %struct.device_node** %node3, align 8, !dbg !6858
  call void @of_node_put(%struct.device_node* %11) #11, !dbg !6859
  %12 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6860
  %13 = bitcast %struct.of_clk_provider* %12 to i8*, !dbg !6860
  call void @kfree(i8* %13) #11, !dbg !6861
  br label %for.end, !dbg !6862

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6863

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !6864, metadata !DIExpression()), !dbg !6866
  %14 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6866
  %link5 = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %14, i32 0, i32 0, !dbg !6866
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %link5, i32 0, i32 0, !dbg !6866
  %15 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6866
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !6866
  store i8* %16, i8** %__mptr4, align 8, !dbg !6866
  br label %do.body6, !dbg !6866

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !6867

do.end7:                                          ; preds = %do.body6
  %17 = load i8*, i8** %__mptr4, align 8, !dbg !6866
  %add.ptr9 = getelementptr i8, i8* %17, i64 0, !dbg !6866
  %18 = bitcast i8* %add.ptr9 to %struct.of_clk_provider*, !dbg !6866
  store %struct.of_clk_provider* %18, %struct.of_clk_provider** %tmp8, align 8, !dbg !6867
  %19 = load %struct.of_clk_provider*, %struct.of_clk_provider** %tmp8, align 8, !dbg !6866
  store %struct.of_clk_provider* %19, %struct.of_clk_provider** %cp, align 8, !dbg !6844
  br label %for.cond, !dbg !6844, !llvm.loop !6869

for.end:                                          ; preds = %if.then, %for.cond
  call void @mutex_unlock(%struct.mutex* @of_clk_mutex) #11, !dbg !6871
  ret void, !dbg !6872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_clk_add_hw_provider(%struct.device_node* %np, %struct.clk_hw* (%struct.of_phandle_args*, i8*)* %get, i8* %data) #0 !dbg !6873 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %get.addr = alloca %struct.clk_hw* (%struct.of_phandle_args*, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %cp = alloca %struct.of_clk_provider*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !6876, metadata !DIExpression()), !dbg !6877
  store %struct.clk_hw* (%struct.of_phandle_args*, i8*)* %get, %struct.clk_hw* (%struct.of_phandle_args*, i8*)** %get.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw* (%struct.of_phandle_args*, i8*)** %get.addr, metadata !6878, metadata !DIExpression()), !dbg !6879
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6880, metadata !DIExpression()), !dbg !6881
  call void @llvm.dbg.declare(metadata %struct.of_clk_provider** %cp, metadata !6882, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6884, metadata !DIExpression()), !dbg !6885
  %call = call i8* @kzalloc(i64 48, i32 3264) #11, !dbg !6886
  %0 = bitcast i8* %call to %struct.of_clk_provider*, !dbg !6886
  store %struct.of_clk_provider* %0, %struct.of_clk_provider** %cp, align 8, !dbg !6887
  %1 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6888
  %tobool = icmp ne %struct.of_clk_provider* %1, null, !dbg !6888
  br i1 %tobool, label %if.end, label %if.then, !dbg !6890

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6891
  br label %return, !dbg !6891

if.end:                                           ; preds = %entry
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6892
  %call1 = call %struct.device_node* @of_node_get(%struct.device_node* %2) #11, !dbg !6893
  %3 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6894
  %node = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %3, i32 0, i32 1, !dbg !6895
  store %struct.device_node* %call1, %struct.device_node** %node, align 8, !dbg !6896
  %4 = load i8*, i8** %data.addr, align 8, !dbg !6897
  %5 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6898
  %data2 = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %5, i32 0, i32 4, !dbg !6899
  store i8* %4, i8** %data2, align 8, !dbg !6900
  %6 = load %struct.clk_hw* (%struct.of_phandle_args*, i8*)*, %struct.clk_hw* (%struct.of_phandle_args*, i8*)** %get.addr, align 8, !dbg !6901
  %7 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6902
  %get_hw = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %7, i32 0, i32 3, !dbg !6903
  store %struct.clk_hw* (%struct.of_phandle_args*, i8*)* %6, %struct.clk_hw* (%struct.of_phandle_args*, i8*)** %get_hw, align 8, !dbg !6904
  call void @mutex_lock(%struct.mutex* @of_clk_mutex) #11, !dbg !6905
  %8 = load %struct.of_clk_provider*, %struct.of_clk_provider** %cp, align 8, !dbg !6906
  %link = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %8, i32 0, i32 0, !dbg !6907
  call void @list_add(%struct.list_head* %link, %struct.list_head* @of_clk_providers) #11, !dbg !6908
  call void @mutex_unlock(%struct.mutex* @of_clk_mutex) #11, !dbg !6909
  store i32 0, i32* %tmp, align 4, !dbg !6910
  %9 = load i32, i32* %tmp, align 4, !dbg !6913
  call void @clk_core_reparent_orphans() #11, !dbg !6914
  %10 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6915
  %call3 = call i32 @of_clk_set_defaults(%struct.device_node* %10, i1 zeroext true) #11, !dbg !6916
  store i32 %call3, i32* %ret, align 4, !dbg !6917
  %11 = load i32, i32* %ret, align 4, !dbg !6918
  %cmp = icmp slt i32 %11, 0, !dbg !6920
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !6921

if.then4:                                         ; preds = %if.end
  %12 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6922
  call void @of_clk_del_provider(%struct.device_node* %12) #11, !dbg !6923
  br label %if.end5, !dbg !6923

if.end5:                                          ; preds = %if.then4, %if.end
  %13 = load i32, i32* %ret, align 4, !dbg !6924
  store i32 %13, i32* %retval, align 4, !dbg !6925
  br label %return, !dbg !6925

return:                                           ; preds = %if.end5, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !6926
  ret i32 %14, !dbg !6926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devm_of_clk_add_hw_provider(%struct.device* %dev, %struct.clk_hw* (%struct.of_phandle_args*, i8*)* %get, i8* %data) #0 !dbg !6927 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %get.addr = alloca %struct.clk_hw* (%struct.of_phandle_args*, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %ptr = alloca %struct.device_node**, align 8
  %np = alloca %struct.device_node*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6930, metadata !DIExpression()), !dbg !6931
  store %struct.clk_hw* (%struct.of_phandle_args*, i8*)* %get, %struct.clk_hw* (%struct.of_phandle_args*, i8*)** %get.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw* (%struct.of_phandle_args*, i8*)** %get.addr, metadata !6932, metadata !DIExpression()), !dbg !6933
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6934, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.declare(metadata %struct.device_node*** %ptr, metadata !6936, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !6938, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6940, metadata !DIExpression()), !dbg !6941
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_of_clk_release_provider, i64 8, i32 3264) #11, !dbg !6942
  %0 = bitcast i8* %call to %struct.device_node**, !dbg !6942
  store %struct.device_node** %0, %struct.device_node*** %ptr, align 8, !dbg !6943
  %1 = load %struct.device_node**, %struct.device_node*** %ptr, align 8, !dbg !6944
  %tobool = icmp ne %struct.device_node** %1, null, !dbg !6944
  br i1 %tobool, label %if.end, label %if.then, !dbg !6946

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6947
  br label %return, !dbg !6947

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6948
  %call1 = call %struct.device_node* @get_clk_provider_node(%struct.device* %2) #11, !dbg !6949
  store %struct.device_node* %call1, %struct.device_node** %np, align 8, !dbg !6950
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6951
  %4 = load %struct.clk_hw* (%struct.of_phandle_args*, i8*)*, %struct.clk_hw* (%struct.of_phandle_args*, i8*)** %get.addr, align 8, !dbg !6952
  %5 = load i8*, i8** %data.addr, align 8, !dbg !6953
  %call2 = call i32 @of_clk_add_hw_provider(%struct.device_node* %3, %struct.clk_hw* (%struct.of_phandle_args*, i8*)* %4, i8* %5) #11, !dbg !6954
  store i32 %call2, i32* %ret, align 4, !dbg !6955
  %6 = load i32, i32* %ret, align 4, !dbg !6956
  %tobool3 = icmp ne i32 %6, 0, !dbg !6956
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !6958

if.then4:                                         ; preds = %if.end
  %7 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6959
  %8 = load %struct.device_node**, %struct.device_node*** %ptr, align 8, !dbg !6961
  store %struct.device_node* %7, %struct.device_node** %8, align 8, !dbg !6962
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6963
  %10 = load %struct.device_node**, %struct.device_node*** %ptr, align 8, !dbg !6964
  %11 = bitcast %struct.device_node** %10 to i8*, !dbg !6964
  call void @devres_add(%struct.device* %9, i8* %11) #11, !dbg !6965
  br label %if.end5, !dbg !6966

if.else:                                          ; preds = %if.end
  %12 = load %struct.device_node**, %struct.device_node*** %ptr, align 8, !dbg !6967
  %13 = bitcast %struct.device_node** %12 to i8*, !dbg !6967
  call void @devres_free(i8* %13) #11, !dbg !6969
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %14 = load i32, i32* %ret, align 4, !dbg !6970
  store i32 %14, i32* %retval, align 4, !dbg !6971
  br label %return, !dbg !6971

return:                                           ; preds = %if.end5, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !6972
  ret i32 %15, !dbg !6972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_of_clk_release_provider(%struct.device* %dev, i8* %res) #0 !dbg !6973 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6974, metadata !DIExpression()), !dbg !6975
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6976, metadata !DIExpression()), !dbg !6977
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6978
  %1 = bitcast i8* %0 to %struct.device_node**, !dbg !6979
  %2 = load %struct.device_node*, %struct.device_node** %1, align 8, !dbg !6980
  call void @of_clk_del_provider(%struct.device_node* %2) #11, !dbg !6981
  ret void, !dbg !6982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @get_clk_provider_node(%struct.device* %dev) #0 !dbg !6983 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %np = alloca %struct.device_node*, align 8
  %parent_np = alloca %struct.device_node*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6984, metadata !DIExpression()), !dbg !6985
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !6986, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.declare(metadata %struct.device_node** %parent_np, metadata !6988, metadata !DIExpression()), !dbg !6989
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6990
  %of_node = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 23, !dbg !6991
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !6991
  store %struct.device_node* %1, %struct.device_node** %np, align 8, !dbg !6992
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6993
  %parent = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 1, !dbg !6994
  %3 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6994
  %tobool = icmp ne %struct.device* %3, null, !dbg !6993
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6993

cond.true:                                        ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6995
  %parent1 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 1, !dbg !6996
  %5 = load %struct.device*, %struct.device** %parent1, align 8, !dbg !6996
  %of_node2 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 23, !dbg !6997
  %6 = load %struct.device_node*, %struct.device_node** %of_node2, align 8, !dbg !6997
  br label %cond.end, !dbg !6993

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6993

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.device_node* [ %6, %cond.true ], [ null, %cond.false ], !dbg !6993
  store %struct.device_node* %cond, %struct.device_node** %parent_np, align 8, !dbg !6998
  %7 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6999
  %call = call %struct.property* @of_find_property(%struct.device_node* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i32* null) #11, !dbg !7001
  %tobool3 = icmp ne %struct.property* %call, null, !dbg !7001
  br i1 %tobool3, label %if.end7, label %if.then, !dbg !7002

if.then:                                          ; preds = %cond.end
  %8 = load %struct.device_node*, %struct.device_node** %parent_np, align 8, !dbg !7003
  %call4 = call %struct.property* @of_find_property(%struct.device_node* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i32* null) #11, !dbg !7005
  %tobool5 = icmp ne %struct.property* %call4, null, !dbg !7005
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !7006

if.then6:                                         ; preds = %if.then
  %9 = load %struct.device_node*, %struct.device_node** %parent_np, align 8, !dbg !7007
  store %struct.device_node* %9, %struct.device_node** %np, align 8, !dbg !7008
  br label %if.end, !dbg !7009

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end7, !dbg !7010

if.end7:                                          ; preds = %if.end, %cond.end
  %10 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7011
  ret %struct.device_node* %10, !dbg !7012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_put(%struct.device_node* %node) #0 !dbg !7013 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !7014, metadata !DIExpression()), !dbg !7015
  ret void, !dbg !7016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @devm_of_clk_del_provider(%struct.device* %dev) #0 !dbg !7017 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  %np = alloca %struct.device_node*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7018, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7020, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !7022, metadata !DIExpression()), !dbg !7023
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7024
  %call = call %struct.device_node* @get_clk_provider_node(%struct.device* %0) #11, !dbg !7025
  store %struct.device_node* %call, %struct.device_node** %np, align 8, !dbg !7023
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7026
  %2 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7027
  %3 = bitcast %struct.device_node* %2 to i8*, !dbg !7027
  %call1 = call i32 @devres_release(%struct.device* %1, void (%struct.device*, i8*)* @devm_of_clk_release_provider, i32 (%struct.device*, i8*, i8*)* @devm_clk_provider_match, i8* %3) #11, !dbg !7028
  store i32 %call1, i32* %ret, align 4, !dbg !7029
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7030, metadata !DIExpression()), !dbg !7032
  %4 = load i32, i32* %ret, align 4, !dbg !7032
  %tobool = icmp ne i32 %4, 0, !dbg !7032
  %lnot = xor i1 %tobool, true, !dbg !7032
  %lnot2 = xor i1 %lnot, true, !dbg !7032
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7032
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7032
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !7033
  %tobool3 = icmp ne i32 %5, 0, !dbg !7033
  %lnot4 = xor i1 %tobool3, true, !dbg !7033
  %lnot6 = xor i1 %lnot4, true, !dbg !7033
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !7033
  %conv = sext i32 %lnot.ext7 to i64, !dbg !7033
  %tobool8 = icmp ne i64 %conv, 0, !dbg !7033
  br i1 %tobool8, label %if.then, label %if.end, !dbg !7032

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7033

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !7035

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !7037

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !7035

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 4596, i32 2305, i64 12) #10, !dbg !7039, !srcloc !7041
  br label %do.end11, !dbg !7039

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 263) #10, !dbg !7042, !srcloc !7044
  br label %do.body12, !dbg !7035

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !7045

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !7035

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !7035

if.end:                                           ; preds = %do.end14, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7032
  %tobool15 = icmp ne i32 %6, 0, !dbg !7032
  %lnot16 = xor i1 %tobool15, true, !dbg !7032
  %lnot18 = xor i1 %lnot16, true, !dbg !7032
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7032
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !7032
  store i64 %conv20, i64* %tmp, align 8, !dbg !7033
  %7 = load i64, i64* %tmp, align 8, !dbg !7032
  ret void, !dbg !7047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_clk_provider_match(%struct.device* %dev, i8* %res, i8* %data) #0 !dbg !7048 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %np = alloca %struct.device_node**, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7049, metadata !DIExpression()), !dbg !7050
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !7051, metadata !DIExpression()), !dbg !7052
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7053, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.declare(metadata %struct.device_node*** %np, metadata !7055, metadata !DIExpression()), !dbg !7056
  %0 = load i8*, i8** %res.addr, align 8, !dbg !7057
  %1 = bitcast i8* %0 to %struct.device_node**, !dbg !7057
  store %struct.device_node** %1, %struct.device_node*** %np, align 8, !dbg !7056
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7058, metadata !DIExpression()), !dbg !7061
  %2 = load %struct.device_node**, %struct.device_node*** %np, align 8, !dbg !7061
  %tobool = icmp ne %struct.device_node** %2, null, !dbg !7061
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7061

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.device_node**, %struct.device_node*** %np, align 8, !dbg !7061
  %4 = load %struct.device_node*, %struct.device_node** %3, align 8, !dbg !7061
  %tobool1 = icmp ne %struct.device_node* %4, null, !dbg !7061
  %lnot = xor i1 %tobool1, true, !dbg !7061
  br label %lor.end, !dbg !7061

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %5, true, !dbg !7061
  %lnot3 = xor i1 %lnot2, true, !dbg !7061
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7061
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7061
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7062
  %tobool4 = icmp ne i32 %6, 0, !dbg !7062
  %lnot5 = xor i1 %tobool4, true, !dbg !7062
  %lnot7 = xor i1 %lnot5, true, !dbg !7062
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7062
  %conv = sext i32 %lnot.ext8 to i64, !dbg !7062
  %tobool9 = icmp ne i64 %conv, 0, !dbg !7062
  br i1 %tobool9, label %if.then, label %if.end, !dbg !7061

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !7062

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !7064

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !7066

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !7064

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 4578, i32 2305, i64 12) #10, !dbg !7068, !srcloc !7070
  br label %do.end12, !dbg !7068

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 262) #10, !dbg !7071, !srcloc !7073
  br label %do.body13, !dbg !7064

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !7074

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !7064

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !7064

if.end:                                           ; preds = %do.end15, %lor.end
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !7061
  %tobool16 = icmp ne i32 %7, 0, !dbg !7061
  %lnot17 = xor i1 %tobool16, true, !dbg !7061
  %lnot19 = xor i1 %lnot17, true, !dbg !7061
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !7061
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !7061
  store i64 %conv21, i64* %tmp, align 8, !dbg !7062
  %8 = load i64, i64* %tmp, align 8, !dbg !7061
  %tobool22 = icmp ne i64 %8, 0, !dbg !7076
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !7077

if.then23:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7078
  br label %return, !dbg !7078

if.end24:                                         ; preds = %if.end
  %9 = load %struct.device_node**, %struct.device_node*** %np, align 8, !dbg !7079
  %10 = load %struct.device_node*, %struct.device_node** %9, align 8, !dbg !7080
  %11 = load i8*, i8** %data.addr, align 8, !dbg !7081
  %12 = bitcast i8* %11 to %struct.device_node*, !dbg !7081
  %cmp = icmp eq %struct.device_node* %10, %12, !dbg !7082
  %conv25 = zext i1 %cmp to i32, !dbg !7082
  store i32 %conv25, i32* %retval, align 4, !dbg !7083
  br label %return, !dbg !7083

return:                                           ; preds = %if.end24, %if.then23
  %13 = load i32, i32* %retval, align 4, !dbg !7084
  ret i32 %13, !dbg !7084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk* @of_clk_get_from_provider(%struct.of_phandle_args* %clkspec) #0 !dbg !7085 {
entry:
  %clkspec.addr = alloca %struct.of_phandle_args*, align 8
  %hw = alloca %struct.clk_hw*, align 8
  store %struct.of_phandle_args* %clkspec, %struct.of_phandle_args** %clkspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %clkspec.addr, metadata !7088, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw, metadata !7090, metadata !DIExpression()), !dbg !7091
  %0 = load %struct.of_phandle_args*, %struct.of_phandle_args** %clkspec.addr, align 8, !dbg !7092
  %call = call %struct.clk_hw* @of_clk_get_hw_from_clkspec(%struct.of_phandle_args* %0) #11, !dbg !7093
  store %struct.clk_hw* %call, %struct.clk_hw** %hw, align 8, !dbg !7091
  %1 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !7094
  %call1 = call %struct.clk* @clk_hw_create_clk(%struct.device* null, %struct.clk_hw* %1, i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.of_clk_get_from_provider, i64 0, i64 0)) #11, !dbg !7095
  ret %struct.clk* %call1, !dbg !7096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk_hw* @of_clk_get_hw_from_clkspec(%struct.of_phandle_args* %clkspec) #0 !dbg !7097 {
entry:
  %retval = alloca %struct.clk_hw*, align 8
  %clkspec.addr = alloca %struct.of_phandle_args*, align 8
  %provider = alloca %struct.of_clk_provider*, align 8
  %hw = alloca %struct.clk_hw*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.of_clk_provider*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp13 = alloca %struct.of_clk_provider*, align 8
  store %struct.of_phandle_args* %clkspec, %struct.of_phandle_args** %clkspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %clkspec.addr, metadata !7100, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.declare(metadata %struct.of_clk_provider** %provider, metadata !7102, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw, metadata !7104, metadata !DIExpression()), !dbg !7105
  %call = call i8* @ERR_PTR(i64 -517) #11, !dbg !7106
  %0 = bitcast i8* %call to %struct.clk_hw*, !dbg !7106
  store %struct.clk_hw* %0, %struct.clk_hw** %hw, align 8, !dbg !7105
  %1 = load %struct.of_phandle_args*, %struct.of_phandle_args** %clkspec.addr, align 8, !dbg !7107
  %tobool = icmp ne %struct.of_phandle_args* %1, null, !dbg !7107
  br i1 %tobool, label %if.end, label %if.then, !dbg !7109

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -22) #11, !dbg !7110
  %2 = bitcast i8* %call1 to %struct.clk_hw*, !dbg !7110
  store %struct.clk_hw* %2, %struct.clk_hw** %retval, align 8, !dbg !7111
  br label %return, !dbg !7111

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @of_clk_mutex) #11, !dbg !7112
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7113, metadata !DIExpression()), !dbg !7116
  %3 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @of_clk_providers, i32 0, i32 0), align 8, !dbg !7116
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !7116
  store i8* %4, i8** %__mptr, align 8, !dbg !7116
  br label %do.body, !dbg !7116

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7117

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !7116
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !7116
  %6 = bitcast i8* %add.ptr to %struct.of_clk_provider*, !dbg !7116
  store %struct.of_clk_provider* %6, %struct.of_clk_provider** %tmp, align 8, !dbg !7117
  %7 = load %struct.of_clk_provider*, %struct.of_clk_provider** %tmp, align 8, !dbg !7116
  store %struct.of_clk_provider* %7, %struct.of_clk_provider** %provider, align 8, !dbg !7119
  br label %for.cond, !dbg !7119

for.cond:                                         ; preds = %do.end12, %do.end
  %8 = load %struct.of_clk_provider*, %struct.of_clk_provider** %provider, align 8, !dbg !7120
  %link = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %8, i32 0, i32 0, !dbg !7120
  %cmp = icmp eq %struct.list_head* %link, @of_clk_providers, !dbg !7120
  %lnot = xor i1 %cmp, true, !dbg !7120
  br i1 %lnot, label %for.body, label %for.end, !dbg !7119

for.body:                                         ; preds = %for.cond
  %9 = load %struct.of_clk_provider*, %struct.of_clk_provider** %provider, align 8, !dbg !7122
  %node = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %9, i32 0, i32 1, !dbg !7125
  %10 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !7125
  %11 = load %struct.of_phandle_args*, %struct.of_phandle_args** %clkspec.addr, align 8, !dbg !7126
  %np = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %11, i32 0, i32 0, !dbg !7127
  %12 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7127
  %cmp2 = icmp eq %struct.device_node* %10, %12, !dbg !7128
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !7129

if.then3:                                         ; preds = %for.body
  %13 = load %struct.of_clk_provider*, %struct.of_clk_provider** %provider, align 8, !dbg !7130
  %14 = load %struct.of_phandle_args*, %struct.of_phandle_args** %clkspec.addr, align 8, !dbg !7132
  %call4 = call %struct.clk_hw* @__of_clk_get_hw_from_provider(%struct.of_clk_provider* %13, %struct.of_phandle_args* %14) #11, !dbg !7133
  store %struct.clk_hw* %call4, %struct.clk_hw** %hw, align 8, !dbg !7134
  %15 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !7135
  %16 = bitcast %struct.clk_hw* %15 to i8*, !dbg !7135
  %call5 = call zeroext i1 @IS_ERR(i8* %16) #11, !dbg !7137
  br i1 %call5, label %if.end7, label %if.then6, !dbg !7138

if.then6:                                         ; preds = %if.then3
  br label %for.end, !dbg !7139

if.end7:                                          ; preds = %if.then3
  br label %if.end8, !dbg !7140

if.end8:                                          ; preds = %if.end7, %for.body
  br label %for.inc, !dbg !7141

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !7142, metadata !DIExpression()), !dbg !7144
  %17 = load %struct.of_clk_provider*, %struct.of_clk_provider** %provider, align 8, !dbg !7144
  %link10 = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %17, i32 0, i32 0, !dbg !7144
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %link10, i32 0, i32 0, !dbg !7144
  %18 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7144
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !7144
  store i8* %19, i8** %__mptr9, align 8, !dbg !7144
  br label %do.body11, !dbg !7144

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !7145

do.end12:                                         ; preds = %do.body11
  %20 = load i8*, i8** %__mptr9, align 8, !dbg !7144
  %add.ptr14 = getelementptr i8, i8* %20, i64 0, !dbg !7144
  %21 = bitcast i8* %add.ptr14 to %struct.of_clk_provider*, !dbg !7144
  store %struct.of_clk_provider* %21, %struct.of_clk_provider** %tmp13, align 8, !dbg !7145
  %22 = load %struct.of_clk_provider*, %struct.of_clk_provider** %tmp13, align 8, !dbg !7144
  store %struct.of_clk_provider* %22, %struct.of_clk_provider** %provider, align 8, !dbg !7120
  br label %for.cond, !dbg !7120, !llvm.loop !7147

for.end:                                          ; preds = %if.then6, %for.cond
  call void @mutex_unlock(%struct.mutex* @of_clk_mutex) #11, !dbg !7149
  %23 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !7150
  store %struct.clk_hw* %23, %struct.clk_hw** %retval, align 8, !dbg !7151
  br label %return, !dbg !7151

return:                                           ; preds = %for.end, %if.then
  %24 = load %struct.clk_hw*, %struct.clk_hw** %retval, align 8, !dbg !7152
  ret %struct.clk_hw* %24, !dbg !7152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk_hw* @of_clk_get_hw(%struct.device_node* %np, i32 %index, i8* %con_id) #0 !dbg !7153 {
entry:
  %retval = alloca %struct.clk_hw*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %index.addr = alloca i32, align 4
  %con_id.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %hw = alloca %struct.clk_hw*, align 8
  %clkspec = alloca %struct.of_phandle_args, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7156, metadata !DIExpression()), !dbg !7157
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7158, metadata !DIExpression()), !dbg !7159
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !7160, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7162, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw, metadata !7164, metadata !DIExpression()), !dbg !7165
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args* %clkspec, metadata !7166, metadata !DIExpression()), !dbg !7167
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7168
  %1 = load i32, i32* %index.addr, align 4, !dbg !7169
  %2 = load i8*, i8** %con_id.addr, align 8, !dbg !7170
  %call = call i32 @of_parse_clkspec(%struct.device_node* %0, i32 %1, i8* %2, %struct.of_phandle_args* %clkspec) #11, !dbg !7171
  store i32 %call, i32* %ret, align 4, !dbg !7172
  %3 = load i32, i32* %ret, align 4, !dbg !7173
  %tobool = icmp ne i32 %3, 0, !dbg !7173
  br i1 %tobool, label %if.then, label %if.end, !dbg !7175

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !7176
  %conv = sext i32 %4 to i64, !dbg !7176
  %call1 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !7177
  %5 = bitcast i8* %call1 to %struct.clk_hw*, !dbg !7177
  store %struct.clk_hw* %5, %struct.clk_hw** %retval, align 8, !dbg !7178
  br label %return, !dbg !7178

if.end:                                           ; preds = %entry
  %call2 = call %struct.clk_hw* @of_clk_get_hw_from_clkspec(%struct.of_phandle_args* %clkspec) #11, !dbg !7179
  store %struct.clk_hw* %call2, %struct.clk_hw** %hw, align 8, !dbg !7180
  %np3 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %clkspec, i32 0, i32 0, !dbg !7181
  %6 = load %struct.device_node*, %struct.device_node** %np3, align 8, !dbg !7181
  call void @of_node_put(%struct.device_node* %6) #11, !dbg !7182
  %7 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !7183
  store %struct.clk_hw* %7, %struct.clk_hw** %retval, align 8, !dbg !7184
  br label %return, !dbg !7184

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct.clk_hw*, %struct.clk_hw** %retval, align 8, !dbg !7185
  ret %struct.clk_hw* %8, !dbg !7185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_parse_clkspec(%struct.device_node* %np, i32 %index, i8* %name, %struct.of_phandle_args* %out_args) #0 !dbg !7186 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %index.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %out_args.addr = alloca %struct.of_phandle_args*, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7191, metadata !DIExpression()), !dbg !7192
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7193, metadata !DIExpression()), !dbg !7194
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7195, metadata !DIExpression()), !dbg !7196
  store %struct.of_phandle_args* %out_args, %struct.of_phandle_args** %out_args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %out_args.addr, metadata !7197, metadata !DIExpression()), !dbg !7198
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7199, metadata !DIExpression()), !dbg !7200
  store i32 -2, i32* %ret, align 4, !dbg !7200
  br label %while.cond, !dbg !7201

while.cond:                                       ; preds = %if.end14, %entry
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7202
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !7201
  br i1 %tobool, label %while.body, label %while.end, !dbg !7201

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %name.addr, align 8, !dbg !7203
  %tobool1 = icmp ne i8* %1, null, !dbg !7203
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7206

if.then:                                          ; preds = %while.body
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7207
  %3 = load i8*, i8** %name.addr, align 8, !dbg !7208
  %call = call i32 @of_property_match_string(%struct.device_node* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0), i8* %3) #11, !dbg !7209
  store i32 %call, i32* %index.addr, align 4, !dbg !7210
  br label %if.end, !dbg !7211

if.end:                                           ; preds = %if.then, %while.body
  %4 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7212
  %5 = load i32, i32* %index.addr, align 4, !dbg !7213
  %6 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !7214
  %call2 = call i32 @of_parse_phandle_with_args(%struct.device_node* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i32 %5, %struct.of_phandle_args* %6) #11, !dbg !7215
  store i32 %call2, i32* %ret, align 4, !dbg !7216
  %7 = load i32, i32* %ret, align 4, !dbg !7217
  %tobool3 = icmp ne i32 %7, 0, !dbg !7217
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !7219

if.then4:                                         ; preds = %if.end
  br label %while.end, !dbg !7220

if.end5:                                          ; preds = %if.end
  %8 = load i8*, i8** %name.addr, align 8, !dbg !7221
  %tobool6 = icmp ne i8* %8, null, !dbg !7221
  br i1 %tobool6, label %land.lhs.true, label %if.end8, !dbg !7223

land.lhs.true:                                    ; preds = %if.end5
  %9 = load i32, i32* %index.addr, align 4, !dbg !7224
  %cmp = icmp sge i32 %9, 0, !dbg !7225
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !7226

if.then7:                                         ; preds = %land.lhs.true
  br label %while.end, !dbg !7227

if.end8:                                          ; preds = %land.lhs.true, %if.end5
  %10 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7228
  %parent = getelementptr inbounds %struct.device_node, %struct.device_node* %10, i32 0, i32 6, !dbg !7229
  %11 = load %struct.device_node*, %struct.device_node** %parent, align 8, !dbg !7229
  store %struct.device_node* %11, %struct.device_node** %np.addr, align 8, !dbg !7230
  %12 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7231
  %tobool9 = icmp ne %struct.device_node* %12, null, !dbg !7231
  br i1 %tobool9, label %land.lhs.true10, label %if.end14, !dbg !7233

land.lhs.true10:                                  ; preds = %if.end8
  %13 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7234
  %call11 = call i8* @of_get_property(%struct.device_node* %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i32* null) #11, !dbg !7235
  %tobool12 = icmp ne i8* %call11, null, !dbg !7235
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7236

if.then13:                                        ; preds = %land.lhs.true10
  br label %while.end, !dbg !7237

if.end14:                                         ; preds = %land.lhs.true10, %if.end8
  store i32 0, i32* %index.addr, align 4, !dbg !7238
  br label %while.cond, !dbg !7201, !llvm.loop !7239

while.end:                                        ; preds = %if.then13, %if.then7, %if.then4, %while.cond
  %14 = load i32, i32* %ret, align 4, !dbg !7241
  ret i32 %14, !dbg !7242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk* @of_clk_get(%struct.device_node* %np, i32 %index) #0 !dbg !7243 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %index.addr = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7246, metadata !DIExpression()), !dbg !7247
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7248, metadata !DIExpression()), !dbg !7249
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7250
  %1 = load i32, i32* %index.addr, align 4, !dbg !7251
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7252
  %full_name = getelementptr inbounds %struct.device_node, %struct.device_node* %2, i32 0, i32 2, !dbg !7253
  %3 = load i8*, i8** %full_name, align 8, !dbg !7253
  %call = call %struct.clk* @__of_clk_get(%struct.device_node* %0, i32 %1, i8* %3, i8* null) #11, !dbg !7254
  ret %struct.clk* %call, !dbg !7255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk* @__of_clk_get(%struct.device_node* %np, i32 %index, i8* %dev_id, i8* %con_id) #0 !dbg !7256 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %index.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %con_id.addr = alloca i8*, align 8
  %hw = alloca %struct.clk_hw*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7259, metadata !DIExpression()), !dbg !7260
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7261, metadata !DIExpression()), !dbg !7262
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !7263, metadata !DIExpression()), !dbg !7264
  store i8* %con_id, i8** %con_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con_id.addr, metadata !7265, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw, metadata !7267, metadata !DIExpression()), !dbg !7268
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7269
  %1 = load i32, i32* %index.addr, align 4, !dbg !7270
  %2 = load i8*, i8** %con_id.addr, align 8, !dbg !7271
  %call = call %struct.clk_hw* @of_clk_get_hw(%struct.device_node* %0, i32 %1, i8* %2) #11, !dbg !7272
  store %struct.clk_hw* %call, %struct.clk_hw** %hw, align 8, !dbg !7268
  %3 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !7273
  %4 = load i8*, i8** %dev_id.addr, align 8, !dbg !7274
  %5 = load i8*, i8** %con_id.addr, align 8, !dbg !7275
  %call1 = call %struct.clk* @clk_hw_create_clk(%struct.device* null, %struct.clk_hw* %3, i8* %4, i8* %5) #11, !dbg !7276
  ret %struct.clk* %call1, !dbg !7277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.clk* @of_clk_get_by_name(%struct.device_node* %np, i8* %name) #0 !dbg !7278 {
entry:
  %retval = alloca %struct.clk*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7281, metadata !DIExpression()), !dbg !7282
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7283, metadata !DIExpression()), !dbg !7284
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7285
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !7285
  br i1 %tobool, label %if.end, label %if.then, !dbg !7287

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -2) #11, !dbg !7288
  %1 = bitcast i8* %call to %struct.clk*, !dbg !7288
  store %struct.clk* %1, %struct.clk** %retval, align 8, !dbg !7289
  br label %return, !dbg !7289

if.end:                                           ; preds = %entry
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7290
  %3 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7291
  %full_name = getelementptr inbounds %struct.device_node, %struct.device_node* %3, i32 0, i32 2, !dbg !7292
  %4 = load i8*, i8** %full_name, align 8, !dbg !7292
  %5 = load i8*, i8** %name.addr, align 8, !dbg !7293
  %call1 = call %struct.clk* @__of_clk_get(%struct.device_node* %2, i32 0, i8* %4, i8* %5) #11, !dbg !7294
  store %struct.clk* %call1, %struct.clk** %retval, align 8, !dbg !7295
  br label %return, !dbg !7295

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.clk*, %struct.clk** %retval, align 8, !dbg !7296
  ret %struct.clk* %6, !dbg !7296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_clk_get_parent_count(%struct.device_node* %np) #0 !dbg !7297 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %count = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7300, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7302, metadata !DIExpression()), !dbg !7303
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7304
  %call = call i32 @of_count_phandle_with_args(%struct.device_node* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !7305
  store i32 %call, i32* %count, align 4, !dbg !7306
  %1 = load i32, i32* %count, align 4, !dbg !7307
  %cmp = icmp slt i32 %1, 0, !dbg !7309
  br i1 %cmp, label %if.then, label %if.end, !dbg !7310

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7311
  br label %return, !dbg !7311

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %count, align 4, !dbg !7312
  store i32 %2, i32* %retval, align 4, !dbg !7313
  br label %return, !dbg !7313

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !7314
  ret i32 %3, !dbg !7314
}

; Function Attrs: noredzone
declare dso_local i32 @of_count_phandle_with_args(%struct.device_node*, i8*, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @of_clk_get_parent_name(%struct.device_node* %np, i32 %index) #0 !dbg !7315 {
entry:
  %retval = alloca i8*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %index.addr = alloca i32, align 4
  %clkspec = alloca %struct.of_phandle_args, align 8
  %prop = alloca %struct.property*, align 8
  %clk_name = alloca i8*, align 8
  %vp = alloca i32*, align 8
  %pv = alloca i32, align 4
  %rc = alloca i32, align 4
  %count = alloca i32, align 4
  %clk = alloca %struct.clk*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7318, metadata !DIExpression()), !dbg !7319
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7320, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args* %clkspec, metadata !7322, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.declare(metadata %struct.property** %prop, metadata !7324, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.declare(metadata i8** %clk_name, metadata !7326, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.declare(metadata i32** %vp, metadata !7328, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.declare(metadata i32* %pv, metadata !7333, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7335, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7337, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.declare(metadata %struct.clk** %clk, metadata !7339, metadata !DIExpression()), !dbg !7340
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7341
  %1 = load i32, i32* %index.addr, align 4, !dbg !7342
  %call = call i32 @of_parse_phandle_with_args(%struct.device_node* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i32 %1, %struct.of_phandle_args* %clkspec) #11, !dbg !7343
  store i32 %call, i32* %rc, align 4, !dbg !7344
  %2 = load i32, i32* %rc, align 4, !dbg !7345
  %tobool = icmp ne i32 %2, 0, !dbg !7345
  br i1 %tobool, label %if.then, label %if.end, !dbg !7347

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !7348
  br label %return, !dbg !7348

if.end:                                           ; preds = %entry
  %args_count = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %clkspec, i32 0, i32 1, !dbg !7349
  %3 = load i32, i32* %args_count, align 8, !dbg !7349
  %tobool1 = icmp ne i32 %3, 0, !dbg !7350
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !7350

cond.true:                                        ; preds = %if.end
  %args = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %clkspec, i32 0, i32 2, !dbg !7351
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %args, i64 0, i64 0, !dbg !7352
  %4 = load i32, i32* %arrayidx, align 4, !dbg !7352
  br label %cond.end, !dbg !7350

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !7350

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 0, %cond.false ], !dbg !7350
  store i32 %cond, i32* %index.addr, align 4, !dbg !7353
  store i32 0, i32* %count, align 4, !dbg !7354
  %np2 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %clkspec, i32 0, i32 0, !dbg !7355
  %5 = load %struct.device_node*, %struct.device_node** %np2, align 8, !dbg !7355
  %call3 = call %struct.property* @of_find_property(%struct.device_node* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i32* null) #11, !dbg !7355
  store %struct.property* %call3, %struct.property** %prop, align 8, !dbg !7355
  %6 = load %struct.property*, %struct.property** %prop, align 8, !dbg !7355
  %call4 = call i32* @of_prop_next_u32(%struct.property* %6, i32* null, i32* %pv) #11, !dbg !7355
  store i32* %call4, i32** %vp, align 8, !dbg !7355
  br label %for.cond, !dbg !7355

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i32*, i32** %vp, align 8, !dbg !7357
  %tobool5 = icmp ne i32* %7, null, !dbg !7355
  br i1 %tobool5, label %for.body, label %for.end, !dbg !7355

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %index.addr, align 4, !dbg !7359
  %9 = load i32, i32* %pv, align 4, !dbg !7362
  %cmp = icmp eq i32 %8, %9, !dbg !7363
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !7364

if.then6:                                         ; preds = %for.body
  %10 = load i32, i32* %count, align 4, !dbg !7365
  store i32 %10, i32* %index.addr, align 4, !dbg !7367
  br label %for.end, !dbg !7368

if.end7:                                          ; preds = %for.body
  %11 = load i32, i32* %count, align 4, !dbg !7369
  %inc = add i32 %11, 1, !dbg !7369
  store i32 %inc, i32* %count, align 4, !dbg !7369
  br label %for.inc, !dbg !7370

for.inc:                                          ; preds = %if.end7
  %12 = load %struct.property*, %struct.property** %prop, align 8, !dbg !7357
  %13 = load i32*, i32** %vp, align 8, !dbg !7357
  %call8 = call i32* @of_prop_next_u32(%struct.property* %12, i32* %13, i32* %pv) #11, !dbg !7357
  store i32* %call8, i32** %vp, align 8, !dbg !7357
  br label %for.cond, !dbg !7357, !llvm.loop !7371

for.end:                                          ; preds = %if.then6, %for.cond
  %14 = load %struct.property*, %struct.property** %prop, align 8, !dbg !7373
  %tobool9 = icmp ne %struct.property* %14, null, !dbg !7373
  br i1 %tobool9, label %land.lhs.true, label %if.end12, !dbg !7375

land.lhs.true:                                    ; preds = %for.end
  %15 = load i32*, i32** %vp, align 8, !dbg !7376
  %tobool10 = icmp ne i32* %15, null, !dbg !7376
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !7377

if.then11:                                        ; preds = %land.lhs.true
  store i8* null, i8** %retval, align 8, !dbg !7378
  br label %return, !dbg !7378

if.end12:                                         ; preds = %land.lhs.true, %for.end
  %np13 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %clkspec, i32 0, i32 0, !dbg !7379
  %16 = load %struct.device_node*, %struct.device_node** %np13, align 8, !dbg !7379
  %17 = load i32, i32* %index.addr, align 4, !dbg !7381
  %call14 = call i32 @of_property_read_string_index(%struct.device_node* %16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i32 %17, i8** %clk_name) #11, !dbg !7382
  %cmp15 = icmp slt i32 %call14, 0, !dbg !7383
  br i1 %cmp15, label %if.then16, label %if.end28, !dbg !7384

if.then16:                                        ; preds = %if.end12
  %call17 = call %struct.clk* @of_clk_get_from_provider(%struct.of_phandle_args* %clkspec) #11, !dbg !7385
  store %struct.clk* %call17, %struct.clk** %clk, align 8, !dbg !7387
  %18 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !7388
  %19 = bitcast %struct.clk* %18 to i8*, !dbg !7388
  %call18 = call zeroext i1 @IS_ERR(i8* %19) #11, !dbg !7390
  br i1 %call18, label %if.then19, label %if.else25, !dbg !7391

if.then19:                                        ; preds = %if.then16
  %args_count20 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %clkspec, i32 0, i32 1, !dbg !7392
  %20 = load i32, i32* %args_count20, align 8, !dbg !7392
  %cmp21 = icmp eq i32 %20, 0, !dbg !7395
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !7396

if.then22:                                        ; preds = %if.then19
  %np23 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %clkspec, i32 0, i32 0, !dbg !7397
  %21 = load %struct.device_node*, %struct.device_node** %np23, align 8, !dbg !7397
  %name = getelementptr inbounds %struct.device_node, %struct.device_node* %21, i32 0, i32 0, !dbg !7398
  %22 = load i8*, i8** %name, align 8, !dbg !7398
  store i8* %22, i8** %clk_name, align 8, !dbg !7399
  br label %if.end24, !dbg !7400

if.else:                                          ; preds = %if.then19
  store i8* null, i8** %clk_name, align 8, !dbg !7401
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then22
  br label %if.end27, !dbg !7402

if.else25:                                        ; preds = %if.then16
  %23 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !7403
  %call26 = call i8* @__clk_get_name(%struct.clk* %23) #11, !dbg !7405
  store i8* %call26, i8** %clk_name, align 8, !dbg !7406
  %24 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !7407
  call void @clk_put(%struct.clk* %24) #11, !dbg !7408
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.end24
  br label %if.end28, !dbg !7409

if.end28:                                         ; preds = %if.end27, %if.end12
  %np29 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %clkspec, i32 0, i32 0, !dbg !7410
  %25 = load %struct.device_node*, %struct.device_node** %np29, align 8, !dbg !7410
  call void @of_node_put(%struct.device_node* %25) #11, !dbg !7411
  %26 = load i8*, i8** %clk_name, align 8, !dbg !7412
  store i8* %26, i8** %retval, align 8, !dbg !7413
  br label %return, !dbg !7413

return:                                           ; preds = %if.end28, %if.then11, %if.then
  %27 = load i8*, i8** %retval, align 8, !dbg !7414
  ret i8* %27, !dbg !7414
}

; Function Attrs: noredzone
declare dso_local i32 @of_parse_phandle_with_args(%struct.device_node*, i8*, i8*, i32, %struct.of_phandle_args*) #5

; Function Attrs: noredzone
declare dso_local %struct.property* @of_find_property(%struct.device_node*, i8*, i32*) #5

; Function Attrs: noredzone
declare dso_local i32* @of_prop_next_u32(%struct.property*, i32*, i32*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_string_index(%struct.device_node* %np, i8* %propname, i32 %index, i8** %output) #0 !dbg !7415 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %output.addr = alloca i8**, align 8
  %rc = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7418, metadata !DIExpression()), !dbg !7419
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !7420, metadata !DIExpression()), !dbg !7421
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7422, metadata !DIExpression()), !dbg !7423
  store i8** %output, i8*** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %output.addr, metadata !7424, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7426, metadata !DIExpression()), !dbg !7427
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7428
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !7429
  %2 = load i8**, i8*** %output.addr, align 8, !dbg !7430
  %3 = load i32, i32* %index.addr, align 4, !dbg !7431
  %call = call i32 @of_property_read_string_helper(%struct.device_node* %0, i8* %1, i8** %2, i64 1, i32 %3) #11, !dbg !7432
  store i32 %call, i32* %rc, align 4, !dbg !7427
  %4 = load i32, i32* %rc, align 4, !dbg !7433
  %cmp = icmp slt i32 %4, 0, !dbg !7434
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7433

cond.true:                                        ; preds = %entry
  %5 = load i32, i32* %rc, align 4, !dbg !7435
  br label %cond.end, !dbg !7433

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7433

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %cond.false ], !dbg !7433
  ret i32 %cond, !dbg !7436
}

; Function Attrs: noredzone
declare dso_local void @clk_put(%struct.clk*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_clk_parent_fill(%struct.device_node* %np, i8** %parents, i32 %size) #0 !dbg !7437 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %parents.addr = alloca i8**, align 8
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7440, metadata !DIExpression()), !dbg !7441
  store i8** %parents, i8*** %parents.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %parents.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7444, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7446, metadata !DIExpression()), !dbg !7447
  store i32 0, i32* %i, align 4, !dbg !7447
  br label %while.cond, !dbg !7448

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7449
  %1 = load i32, i32* %size.addr, align 4, !dbg !7450
  %cmp = icmp ult i32 %0, %1, !dbg !7451
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7452

land.rhs:                                         ; preds = %while.cond
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7453
  %3 = load i32, i32* %i, align 4, !dbg !7454
  %call = call i8* @of_clk_get_parent_name(%struct.device_node* %2, i32 %3) #11, !dbg !7455
  %4 = load i8**, i8*** %parents.addr, align 8, !dbg !7456
  %5 = load i32, i32* %i, align 4, !dbg !7457
  %idxprom = zext i32 %5 to i64, !dbg !7456
  %arrayidx = getelementptr i8*, i8** %4, i64 %idxprom, !dbg !7456
  store i8* %call, i8** %arrayidx, align 8, !dbg !7458
  %cmp1 = icmp ne i8* %call, null, !dbg !7459
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ], !dbg !7460
  br i1 %6, label %while.body, label %while.end, !dbg !7448

while.body:                                       ; preds = %land.end
  %7 = load i32, i32* %i, align 4, !dbg !7461
  %inc = add i32 %7, 1, !dbg !7461
  store i32 %inc, i32* %i, align 4, !dbg !7461
  br label %while.cond, !dbg !7448, !llvm.loop !7462

while.end:                                        ; preds = %land.end
  %8 = load i32, i32* %i, align 4, !dbg !7463
  ret i32 %8, !dbg !7464
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_clk_detect_critical(%struct.device_node* %np, i32 %index, i64* %flags) #0 !dbg !7465 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %index.addr = alloca i32, align 4
  %flags.addr = alloca i64*, align 8
  %prop = alloca %struct.property*, align 8
  %cur = alloca i32*, align 8
  %idx = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7468, metadata !DIExpression()), !dbg !7469
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7470, metadata !DIExpression()), !dbg !7471
  store i64* %flags, i64** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %flags.addr, metadata !7472, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.declare(metadata %struct.property** %prop, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.declare(metadata i32** %cur, metadata !7476, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !7478, metadata !DIExpression()), !dbg !7479
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7480
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !7480
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7482

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64*, i64** %flags.addr, align 8, !dbg !7483
  %tobool1 = icmp ne i64* %1, null, !dbg !7483
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7484

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !7485
  br label %return, !dbg !7485

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7486
  %call = call %struct.property* @of_find_property(%struct.device_node* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i32* null) #11, !dbg !7486
  store %struct.property* %call, %struct.property** %prop, align 8, !dbg !7486
  %3 = load %struct.property*, %struct.property** %prop, align 8, !dbg !7486
  %call2 = call i32* @of_prop_next_u32(%struct.property* %3, i32* null, i32* %idx) #11, !dbg !7486
  store i32* %call2, i32** %cur, align 8, !dbg !7486
  br label %for.cond, !dbg !7486

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32*, i32** %cur, align 8, !dbg !7488
  %tobool3 = icmp ne i32* %4, null, !dbg !7486
  br i1 %tobool3, label %for.body, label %for.end, !dbg !7486

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %index.addr, align 4, !dbg !7490
  %6 = load i32, i32* %idx, align 4, !dbg !7492
  %cmp = icmp eq i32 %5, %6, !dbg !7493
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !7494

if.then4:                                         ; preds = %for.body
  %7 = load i64*, i64** %flags.addr, align 8, !dbg !7495
  %8 = load i64, i64* %7, align 8, !dbg !7496
  %or = or i64 %8, 2048, !dbg !7496
  store i64 %or, i64* %7, align 8, !dbg !7496
  br label %if.end5, !dbg !7497

if.end5:                                          ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !7492

for.inc:                                          ; preds = %if.end5
  %9 = load %struct.property*, %struct.property** %prop, align 8, !dbg !7488
  %10 = load i32*, i32** %cur, align 8, !dbg !7488
  %call6 = call i32* @of_prop_next_u32(%struct.property* %9, i32* %10, i32* %idx) #11, !dbg !7488
  store i32* %call6, i32** %cur, align 8, !dbg !7488
  br label %for.cond, !dbg !7488, !llvm.loop !7498

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7500
  br label %return, !dbg !7500

return:                                           ; preds = %for.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !7501
  ret i32 %11, !dbg !7501
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @of_clk_init(%struct.of_device_id* %matches) #3 section ".init.text" !dbg !7502 {
entry:
  %matches.addr = alloca %struct.of_device_id*, align 8
  %match = alloca %struct.of_device_id*, align 8
  %np = alloca %struct.device_node*, align 8
  %clk_provider = alloca %struct.clock_provider*, align 8
  %next = alloca %struct.clock_provider*, align 8
  %is_init_done = alloca i8, align 1
  %force = alloca i8, align 1
  %clk_provider_list = alloca %struct.list_head, align 8
  %parent = alloca %struct.clock_provider*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.clock_provider*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp14 = alloca %struct.clock_provider*, align 8
  %__mptr21 = alloca i8*, align 8
  %tmp26 = alloca %struct.clock_provider*, align 8
  %__mptr38 = alloca i8*, align 8
  %tmp42 = alloca %struct.clock_provider*, align 8
  %__mptr44 = alloca i8*, align 8
  %tmp49 = alloca %struct.clock_provider*, align 8
  %__mptr70 = alloca i8*, align 8
  %tmp75 = alloca %struct.clock_provider*, align 8
  store %struct.of_device_id* %matches, %struct.of_device_id** %matches.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %matches.addr, metadata !7505, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %match, metadata !7507, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !7509, metadata !DIExpression()), !dbg !7510
  call void @llvm.dbg.declare(metadata %struct.clock_provider** %clk_provider, metadata !7511, metadata !DIExpression()), !dbg !7512
  call void @llvm.dbg.declare(metadata %struct.clock_provider** %next, metadata !7513, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.declare(metadata i8* %is_init_done, metadata !7515, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.declare(metadata i8* %force, metadata !7517, metadata !DIExpression()), !dbg !7518
  store i8 0, i8* %force, align 1, !dbg !7518
  call void @llvm.dbg.declare(metadata %struct.list_head* %clk_provider_list, metadata !7519, metadata !DIExpression()), !dbg !7520
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %clk_provider_list, i32 0, i32 0, !dbg !7520
  store %struct.list_head* %clk_provider_list, %struct.list_head** %next1, align 8, !dbg !7520
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %clk_provider_list, i32 0, i32 1, !dbg !7520
  store %struct.list_head* %clk_provider_list, %struct.list_head** %prev, align 8, !dbg !7520
  %0 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !7521
  %tobool = icmp ne %struct.of_device_id* %0, null, !dbg !7521
  br i1 %tobool, label %if.end, label %if.then, !dbg !7523

if.then:                                          ; preds = %entry
  store %struct.of_device_id* @__clk_of_table, %struct.of_device_id** %matches.addr, align 8, !dbg !7524
  br label %if.end, !dbg !7525

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !7526
  %call = call %struct.device_node* @of_find_matching_node_and_match(%struct.device_node* null, %struct.of_device_id* %1, %struct.of_device_id** %match) #11, !dbg !7526
  store %struct.device_node* %call, %struct.device_node** %np, align 8, !dbg !7526
  br label %for.cond, !dbg !7526

for.cond:                                         ; preds = %for.inc32, %if.end
  %2 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7528
  %tobool2 = icmp ne %struct.device_node* %2, null, !dbg !7526
  br i1 %tobool2, label %for.body, label %for.end34, !dbg !7526

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.clock_provider** %parent, metadata !7530, metadata !DIExpression()), !dbg !7532
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7533
  %call3 = call zeroext i1 @of_device_is_available(%struct.device_node* %3) #11, !dbg !7535
  br i1 %call3, label %if.end5, label %if.then4, !dbg !7536

if.then4:                                         ; preds = %for.body
  br label %for.inc32, !dbg !7537

if.end5:                                          ; preds = %for.body
  %call6 = call i8* @kzalloc(i64 32, i32 3264) #11, !dbg !7538
  %4 = bitcast i8* %call6 to %struct.clock_provider*, !dbg !7538
  store %struct.clock_provider* %4, %struct.clock_provider** %parent, align 8, !dbg !7539
  %5 = load %struct.clock_provider*, %struct.clock_provider** %parent, align 8, !dbg !7540
  %tobool7 = icmp ne %struct.clock_provider* %5, null, !dbg !7540
  br i1 %tobool7, label %if.end28, label %if.then8, !dbg !7542

if.then8:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7543, metadata !DIExpression()), !dbg !7547
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %clk_provider_list, i32 0, i32 0, !dbg !7547
  %6 = load %struct.list_head*, %struct.list_head** %next9, align 8, !dbg !7547
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !7547
  store i8* %7, i8** %__mptr, align 8, !dbg !7547
  br label %do.body, !dbg !7547

do.body:                                          ; preds = %if.then8
  br label %do.end, !dbg !7548

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !7547
  %add.ptr = getelementptr i8, i8* %8, i64 -16, !dbg !7547
  %9 = bitcast i8* %add.ptr to %struct.clock_provider*, !dbg !7547
  store %struct.clock_provider* %9, %struct.clock_provider** %tmp, align 8, !dbg !7548
  %10 = load %struct.clock_provider*, %struct.clock_provider** %tmp, align 8, !dbg !7547
  store %struct.clock_provider* %10, %struct.clock_provider** %clk_provider, align 8, !dbg !7550
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !7551, metadata !DIExpression()), !dbg !7553
  %11 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7553
  %node = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %11, i32 0, i32 2, !dbg !7553
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %node, i32 0, i32 0, !dbg !7553
  %12 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !7553
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !7553
  store i8* %13, i8** %__mptr10, align 8, !dbg !7553
  br label %do.body12, !dbg !7553

do.body12:                                        ; preds = %do.end
  br label %do.end13, !dbg !7554

do.end13:                                         ; preds = %do.body12
  %14 = load i8*, i8** %__mptr10, align 8, !dbg !7553
  %add.ptr15 = getelementptr i8, i8* %14, i64 -16, !dbg !7553
  %15 = bitcast i8* %add.ptr15 to %struct.clock_provider*, !dbg !7553
  store %struct.clock_provider* %15, %struct.clock_provider** %tmp14, align 8, !dbg !7554
  %16 = load %struct.clock_provider*, %struct.clock_provider** %tmp14, align 8, !dbg !7553
  store %struct.clock_provider* %16, %struct.clock_provider** %next, align 8, !dbg !7550
  br label %for.cond16, !dbg !7550

for.cond16:                                       ; preds = %do.end25, %do.end13
  %17 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7556
  %node17 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %17, i32 0, i32 2, !dbg !7556
  %cmp = icmp eq %struct.list_head* %node17, %clk_provider_list, !dbg !7556
  %lnot = xor i1 %cmp, true, !dbg !7556
  br i1 %lnot, label %for.body18, label %for.end, !dbg !7550

for.body18:                                       ; preds = %for.cond16
  %18 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7558
  %node19 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %18, i32 0, i32 2, !dbg !7560
  call void @list_del(%struct.list_head* %node19) #11, !dbg !7561
  %19 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7562
  %np20 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %19, i32 0, i32 1, !dbg !7563
  %20 = load %struct.device_node*, %struct.device_node** %np20, align 8, !dbg !7563
  call void @of_node_put(%struct.device_node* %20) #11, !dbg !7564
  %21 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7565
  %22 = bitcast %struct.clock_provider* %21 to i8*, !dbg !7565
  call void @kfree(i8* %22) #11, !dbg !7566
  br label %for.inc, !dbg !7567

for.inc:                                          ; preds = %for.body18
  %23 = load %struct.clock_provider*, %struct.clock_provider** %next, align 8, !dbg !7556
  store %struct.clock_provider* %23, %struct.clock_provider** %clk_provider, align 8, !dbg !7556
  call void @llvm.dbg.declare(metadata i8** %__mptr21, metadata !7568, metadata !DIExpression()), !dbg !7570
  %24 = load %struct.clock_provider*, %struct.clock_provider** %next, align 8, !dbg !7570
  %node22 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %24, i32 0, i32 2, !dbg !7570
  %next23 = getelementptr inbounds %struct.list_head, %struct.list_head* %node22, i32 0, i32 0, !dbg !7570
  %25 = load %struct.list_head*, %struct.list_head** %next23, align 8, !dbg !7570
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !7570
  store i8* %26, i8** %__mptr21, align 8, !dbg !7570
  br label %do.body24, !dbg !7570

do.body24:                                        ; preds = %for.inc
  br label %do.end25, !dbg !7571

do.end25:                                         ; preds = %do.body24
  %27 = load i8*, i8** %__mptr21, align 8, !dbg !7570
  %add.ptr27 = getelementptr i8, i8* %27, i64 -16, !dbg !7570
  %28 = bitcast i8* %add.ptr27 to %struct.clock_provider*, !dbg !7570
  store %struct.clock_provider* %28, %struct.clock_provider** %tmp26, align 8, !dbg !7571
  %29 = load %struct.clock_provider*, %struct.clock_provider** %tmp26, align 8, !dbg !7570
  store %struct.clock_provider* %29, %struct.clock_provider** %next, align 8, !dbg !7556
  br label %for.cond16, !dbg !7556, !llvm.loop !7573

for.end:                                          ; preds = %for.cond16
  %30 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7575
  call void @of_node_put(%struct.device_node* %30) #11, !dbg !7576
  br label %while.end, !dbg !7577

if.end28:                                         ; preds = %if.end5
  %31 = load %struct.of_device_id*, %struct.of_device_id** %match, align 8, !dbg !7578
  %data = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %31, i32 0, i32 3, !dbg !7579
  %32 = load i8*, i8** %data, align 8, !dbg !7579
  %33 = bitcast i8* %32 to void (%struct.device_node*)*, !dbg !7578
  %34 = load %struct.clock_provider*, %struct.clock_provider** %parent, align 8, !dbg !7580
  %clk_init_cb = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %34, i32 0, i32 0, !dbg !7581
  store void (%struct.device_node*)* %33, void (%struct.device_node*)** %clk_init_cb, align 8, !dbg !7582
  %35 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7583
  %call29 = call %struct.device_node* @of_node_get(%struct.device_node* %35) #11, !dbg !7584
  %36 = load %struct.clock_provider*, %struct.clock_provider** %parent, align 8, !dbg !7585
  %np30 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %36, i32 0, i32 1, !dbg !7586
  store %struct.device_node* %call29, %struct.device_node** %np30, align 8, !dbg !7587
  %37 = load %struct.clock_provider*, %struct.clock_provider** %parent, align 8, !dbg !7588
  %node31 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %37, i32 0, i32 2, !dbg !7589
  call void @list_add_tail(%struct.list_head* %node31, %struct.list_head* %clk_provider_list) #11, !dbg !7590
  br label %for.inc32, !dbg !7591

for.inc32:                                        ; preds = %if.end28, %if.then4
  %38 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7528
  %39 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !7528
  %call33 = call %struct.device_node* @of_find_matching_node_and_match(%struct.device_node* %38, %struct.of_device_id* %39, %struct.of_device_id** %match) #11, !dbg !7528
  store %struct.device_node* %call33, %struct.device_node** %np, align 8, !dbg !7528
  br label %for.cond, !dbg !7528, !llvm.loop !7592

for.end34:                                        ; preds = %for.cond
  br label %while.cond, !dbg !7594

while.cond:                                       ; preds = %if.end80, %for.end34
  %call35 = call i32 @list_empty(%struct.list_head* %clk_provider_list) #11, !dbg !7595
  %tobool36 = icmp ne i32 %call35, 0, !dbg !7596
  %lnot37 = xor i1 %tobool36, true, !dbg !7596
  br i1 %lnot37, label %while.body, label %while.end, !dbg !7594

while.body:                                       ; preds = %while.cond
  store i8 0, i8* %is_init_done, align 1, !dbg !7597
  call void @llvm.dbg.declare(metadata i8** %__mptr38, metadata !7599, metadata !DIExpression()), !dbg !7602
  %next39 = getelementptr inbounds %struct.list_head, %struct.list_head* %clk_provider_list, i32 0, i32 0, !dbg !7602
  %40 = load %struct.list_head*, %struct.list_head** %next39, align 8, !dbg !7602
  %41 = bitcast %struct.list_head* %40 to i8*, !dbg !7602
  store i8* %41, i8** %__mptr38, align 8, !dbg !7602
  br label %do.body40, !dbg !7602

do.body40:                                        ; preds = %while.body
  br label %do.end41, !dbg !7603

do.end41:                                         ; preds = %do.body40
  %42 = load i8*, i8** %__mptr38, align 8, !dbg !7602
  %add.ptr43 = getelementptr i8, i8* %42, i64 -16, !dbg !7602
  %43 = bitcast i8* %add.ptr43 to %struct.clock_provider*, !dbg !7602
  store %struct.clock_provider* %43, %struct.clock_provider** %tmp42, align 8, !dbg !7603
  %44 = load %struct.clock_provider*, %struct.clock_provider** %tmp42, align 8, !dbg !7602
  store %struct.clock_provider* %44, %struct.clock_provider** %clk_provider, align 8, !dbg !7605
  call void @llvm.dbg.declare(metadata i8** %__mptr44, metadata !7606, metadata !DIExpression()), !dbg !7608
  %45 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7608
  %node45 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %45, i32 0, i32 2, !dbg !7608
  %next46 = getelementptr inbounds %struct.list_head, %struct.list_head* %node45, i32 0, i32 0, !dbg !7608
  %46 = load %struct.list_head*, %struct.list_head** %next46, align 8, !dbg !7608
  %47 = bitcast %struct.list_head* %46 to i8*, !dbg !7608
  store i8* %47, i8** %__mptr44, align 8, !dbg !7608
  br label %do.body47, !dbg !7608

do.body47:                                        ; preds = %do.end41
  br label %do.end48, !dbg !7609

do.end48:                                         ; preds = %do.body47
  %48 = load i8*, i8** %__mptr44, align 8, !dbg !7608
  %add.ptr50 = getelementptr i8, i8* %48, i64 -16, !dbg !7608
  %49 = bitcast i8* %add.ptr50 to %struct.clock_provider*, !dbg !7608
  store %struct.clock_provider* %49, %struct.clock_provider** %tmp49, align 8, !dbg !7609
  %50 = load %struct.clock_provider*, %struct.clock_provider** %tmp49, align 8, !dbg !7608
  store %struct.clock_provider* %50, %struct.clock_provider** %next, align 8, !dbg !7605
  br label %for.cond51, !dbg !7605

for.cond51:                                       ; preds = %do.end74, %do.end48
  %51 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7611
  %node52 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %51, i32 0, i32 2, !dbg !7611
  %cmp53 = icmp eq %struct.list_head* %node52, %clk_provider_list, !dbg !7611
  %lnot54 = xor i1 %cmp53, true, !dbg !7611
  br i1 %lnot54, label %for.body55, label %for.end77, !dbg !7605

for.body55:                                       ; preds = %for.cond51
  %52 = load i8, i8* %force, align 1, !dbg !7613
  %tobool56 = trunc i8 %52 to i1, !dbg !7613
  br i1 %tobool56, label %if.then60, label %lor.lhs.false, !dbg !7616

lor.lhs.false:                                    ; preds = %for.body55
  %53 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7617
  %np57 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %53, i32 0, i32 1, !dbg !7618
  %54 = load %struct.device_node*, %struct.device_node** %np57, align 8, !dbg !7618
  %call58 = call i32 @parent_ready(%struct.device_node* %54) #11, !dbg !7619
  %tobool59 = icmp ne i32 %call58, 0, !dbg !7619
  br i1 %tobool59, label %if.then60, label %if.end68, !dbg !7620

if.then60:                                        ; preds = %lor.lhs.false, %for.body55
  %55 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7621
  %np61 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %55, i32 0, i32 1, !dbg !7623
  %56 = load %struct.device_node*, %struct.device_node** %np61, align 8, !dbg !7623
  call void @of_node_set_flag(%struct.device_node* %56, i64 3) #11, !dbg !7624
  %57 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7625
  %clk_init_cb62 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %57, i32 0, i32 0, !dbg !7626
  %58 = load void (%struct.device_node*)*, void (%struct.device_node*)** %clk_init_cb62, align 8, !dbg !7626
  %59 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7627
  %np63 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %59, i32 0, i32 1, !dbg !7628
  %60 = load %struct.device_node*, %struct.device_node** %np63, align 8, !dbg !7628
  call void %58(%struct.device_node* %60) #11, !dbg !7625
  %61 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7629
  %np64 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %61, i32 0, i32 1, !dbg !7630
  %62 = load %struct.device_node*, %struct.device_node** %np64, align 8, !dbg !7630
  %call65 = call i32 @of_clk_set_defaults(%struct.device_node* %62, i1 zeroext true) #11, !dbg !7631
  %63 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7632
  %node66 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %63, i32 0, i32 2, !dbg !7633
  call void @list_del(%struct.list_head* %node66) #11, !dbg !7634
  %64 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7635
  %np67 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %64, i32 0, i32 1, !dbg !7636
  %65 = load %struct.device_node*, %struct.device_node** %np67, align 8, !dbg !7636
  call void @of_node_put(%struct.device_node* %65) #11, !dbg !7637
  %66 = load %struct.clock_provider*, %struct.clock_provider** %clk_provider, align 8, !dbg !7638
  %67 = bitcast %struct.clock_provider* %66 to i8*, !dbg !7638
  call void @kfree(i8* %67) #11, !dbg !7639
  store i8 1, i8* %is_init_done, align 1, !dbg !7640
  br label %if.end68, !dbg !7641

if.end68:                                         ; preds = %if.then60, %lor.lhs.false
  br label %for.inc69, !dbg !7642

for.inc69:                                        ; preds = %if.end68
  %68 = load %struct.clock_provider*, %struct.clock_provider** %next, align 8, !dbg !7611
  store %struct.clock_provider* %68, %struct.clock_provider** %clk_provider, align 8, !dbg !7611
  call void @llvm.dbg.declare(metadata i8** %__mptr70, metadata !7643, metadata !DIExpression()), !dbg !7645
  %69 = load %struct.clock_provider*, %struct.clock_provider** %next, align 8, !dbg !7645
  %node71 = getelementptr inbounds %struct.clock_provider, %struct.clock_provider* %69, i32 0, i32 2, !dbg !7645
  %next72 = getelementptr inbounds %struct.list_head, %struct.list_head* %node71, i32 0, i32 0, !dbg !7645
  %70 = load %struct.list_head*, %struct.list_head** %next72, align 8, !dbg !7645
  %71 = bitcast %struct.list_head* %70 to i8*, !dbg !7645
  store i8* %71, i8** %__mptr70, align 8, !dbg !7645
  br label %do.body73, !dbg !7645

do.body73:                                        ; preds = %for.inc69
  br label %do.end74, !dbg !7646

do.end74:                                         ; preds = %do.body73
  %72 = load i8*, i8** %__mptr70, align 8, !dbg !7645
  %add.ptr76 = getelementptr i8, i8* %72, i64 -16, !dbg !7645
  %73 = bitcast i8* %add.ptr76 to %struct.clock_provider*, !dbg !7645
  store %struct.clock_provider* %73, %struct.clock_provider** %tmp75, align 8, !dbg !7646
  %74 = load %struct.clock_provider*, %struct.clock_provider** %tmp75, align 8, !dbg !7645
  store %struct.clock_provider* %74, %struct.clock_provider** %next, align 8, !dbg !7611
  br label %for.cond51, !dbg !7611, !llvm.loop !7648

for.end77:                                        ; preds = %for.cond51
  %75 = load i8, i8* %is_init_done, align 1, !dbg !7650
  %tobool78 = trunc i8 %75 to i1, !dbg !7650
  br i1 %tobool78, label %if.end80, label %if.then79, !dbg !7652

if.then79:                                        ; preds = %for.end77
  store i8 1, i8* %force, align 1, !dbg !7653
  br label %if.end80, !dbg !7654

if.end80:                                         ; preds = %if.then79, %for.end77
  br label %while.cond, !dbg !7594, !llvm.loop !7655

while.end:                                        ; preds = %for.end, %while.cond
  ret void, !dbg !7657
}

; Function Attrs: noredzone
declare dso_local %struct.device_node* @of_find_matching_node_and_match(%struct.device_node*, %struct.of_device_id*, %struct.of_device_id**) #5

; Function Attrs: noredzone
declare dso_local zeroext i1 @of_device_is_available(%struct.device_node*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !7658 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7659, metadata !DIExpression()), !dbg !7660
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7661, metadata !DIExpression()), !dbg !7662
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7663
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7664
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7665
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7665
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7666
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !7667
  ret void, !dbg !7668
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !7669 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  br label %do.body, !dbg !7676

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7678

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7676
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7676
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7676
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !7678
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !7676
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7680
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !7681
  %conv = zext i1 %cmp to i32, !dbg !7681
  ret i32 %conv, !dbg !7682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parent_ready(%struct.device_node* %np) #0 !dbg !7683 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %i = alloca i32, align 4
  %clk = alloca %struct.clk*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7686, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7688, metadata !DIExpression()), !dbg !7689
  store i32 0, i32* %i, align 4, !dbg !7689
  br label %while.body, !dbg !7690

while.body:                                       ; preds = %entry, %if.then
  call void @llvm.dbg.declare(metadata %struct.clk** %clk, metadata !7691, metadata !DIExpression()), !dbg !7693
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7694
  %1 = load i32, i32* %i, align 4, !dbg !7695
  %call = call %struct.clk* @of_clk_get(%struct.device_node* %0, i32 %1) #11, !dbg !7696
  store %struct.clk* %call, %struct.clk** %clk, align 8, !dbg !7693
  %2 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !7697
  %3 = bitcast %struct.clk* %2 to i8*, !dbg !7697
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #11, !dbg !7699
  br i1 %call1, label %if.end, label %if.then, !dbg !7700

if.then:                                          ; preds = %while.body
  %4 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !7701
  call void @clk_put(%struct.clk* %4) #11, !dbg !7703
  %5 = load i32, i32* %i, align 4, !dbg !7704
  %inc = add i32 %5, 1, !dbg !7704
  store i32 %inc, i32* %i, align 4, !dbg !7704
  br label %while.body, !dbg !7705, !llvm.loop !7706

if.end:                                           ; preds = %while.body
  %6 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !7708
  %7 = bitcast %struct.clk* %6 to i8*, !dbg !7708
  %call2 = call i64 @PTR_ERR(i8* %7) #11, !dbg !7710
  %cmp = icmp eq i64 %call2, -517, !dbg !7711
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !7712

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7713
  br label %return, !dbg !7713

if.end4:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !7714
  br label %return, !dbg !7714

return:                                           ; preds = %if.end4, %if.then3
  %8 = load i32, i32* %retval, align 4, !dbg !7715
  ret i32 %8, !dbg !7715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_set_flag(%struct.device_node* %n, i64 %flag) #0 !dbg !7716 {
entry:
  %n.addr = alloca %struct.device_node*, align 8
  %flag.addr = alloca i64, align 8
  store %struct.device_node* %n, %struct.device_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %n.addr, metadata !7719, metadata !DIExpression()), !dbg !7720
  store i64 %flag, i64* %flag.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flag.addr, metadata !7721, metadata !DIExpression()), !dbg !7722
  %0 = load i64, i64* %flag.addr, align 8, !dbg !7723
  %1 = load %struct.device_node*, %struct.device_node** %n.addr, align 8, !dbg !7724
  %_flags = getelementptr inbounds %struct.device_node, %struct.device_node* %1, i32 0, i32 10, !dbg !7725
  call void @set_bit(i64 %0, i64* %_flags) #11, !dbg !7726
  ret void, !dbg !7727
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_fill_parent_index(%struct.clk_core* %core, i8 zeroext %index) #0 !dbg !7728 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %index.addr = alloca i8, align 1
  %entry1 = alloca %struct.clk_parent_map*, align 8
  %parent = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !7731, metadata !DIExpression()), !dbg !7732
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !7733, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.declare(metadata %struct.clk_parent_map** %entry1, metadata !7735, metadata !DIExpression()), !dbg !7736
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7737
  %parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 7, !dbg !7738
  %1 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !7738
  %2 = load i8, i8* %index.addr, align 1, !dbg !7739
  %idxprom = zext i8 %2 to i64, !dbg !7737
  %arrayidx = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %1, i64 %idxprom, !dbg !7737
  store %struct.clk_parent_map* %arrayidx, %struct.clk_parent_map** %entry1, align 8, !dbg !7736
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent, metadata !7740, metadata !DIExpression()), !dbg !7741
  %call = call i8* @ERR_PTR(i64 -2) #11, !dbg !7742
  %3 = bitcast i8* %call to %struct.clk_core*, !dbg !7742
  store %struct.clk_core* %3, %struct.clk_core** %parent, align 8, !dbg !7741
  %4 = load %struct.clk_parent_map*, %struct.clk_parent_map** %entry1, align 8, !dbg !7743
  %hw = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %4, i32 0, i32 0, !dbg !7745
  %5 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !7745
  %tobool = icmp ne %struct.clk_hw* %5, null, !dbg !7743
  br i1 %tobool, label %if.then, label %if.else, !dbg !7746

if.then:                                          ; preds = %entry
  %6 = load %struct.clk_parent_map*, %struct.clk_parent_map** %entry1, align 8, !dbg !7747
  %hw2 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %6, i32 0, i32 0, !dbg !7749
  %7 = load %struct.clk_hw*, %struct.clk_hw** %hw2, align 8, !dbg !7749
  %core3 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %7, i32 0, i32 0, !dbg !7750
  %8 = load %struct.clk_core*, %struct.clk_core** %core3, align 8, !dbg !7750
  store %struct.clk_core* %8, %struct.clk_core** %parent, align 8, !dbg !7751
  %9 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !7752
  %tobool4 = icmp ne %struct.clk_core* %9, null, !dbg !7752
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !7754

if.then5:                                         ; preds = %if.then
  %call6 = call i8* @ERR_PTR(i64 -517) #11, !dbg !7755
  %10 = bitcast i8* %call6 to %struct.clk_core*, !dbg !7755
  store %struct.clk_core* %10, %struct.clk_core** %parent, align 8, !dbg !7756
  br label %if.end, !dbg !7757

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end14, !dbg !7758

if.else:                                          ; preds = %entry
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7759
  %12 = load i8, i8* %index.addr, align 1, !dbg !7761
  %call7 = call %struct.clk_core* @clk_core_get(%struct.clk_core* %11, i8 zeroext %12) #11, !dbg !7762
  store %struct.clk_core* %call7, %struct.clk_core** %parent, align 8, !dbg !7763
  %13 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !7764
  %14 = bitcast %struct.clk_core* %13 to i8*, !dbg !7764
  %call8 = call i64 @PTR_ERR(i8* %14) #11, !dbg !7766
  %cmp = icmp eq i64 %call8, -2, !dbg !7767
  br i1 %cmp, label %land.lhs.true, label %if.end13, !dbg !7768

land.lhs.true:                                    ; preds = %if.else
  %15 = load %struct.clk_parent_map*, %struct.clk_parent_map** %entry1, align 8, !dbg !7769
  %name = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %15, i32 0, i32 3, !dbg !7770
  %16 = load i8*, i8** %name, align 8, !dbg !7770
  %tobool9 = icmp ne i8* %16, null, !dbg !7769
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !7771

if.then10:                                        ; preds = %land.lhs.true
  %17 = load %struct.clk_parent_map*, %struct.clk_parent_map** %entry1, align 8, !dbg !7772
  %name11 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %17, i32 0, i32 3, !dbg !7773
  %18 = load i8*, i8** %name11, align 8, !dbg !7773
  %call12 = call %struct.clk_core* @clk_core_lookup(i8* %18) #11, !dbg !7774
  store %struct.clk_core* %call12, %struct.clk_core** %parent, align 8, !dbg !7775
  br label %if.end13, !dbg !7776

if.end13:                                         ; preds = %if.then10, %land.lhs.true, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end
  %19 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !7777
  %20 = bitcast %struct.clk_core* %19 to i8*, !dbg !7777
  %call15 = call zeroext i1 @IS_ERR(i8* %20) #11, !dbg !7779
  br i1 %call15, label %if.end18, label %if.then16, !dbg !7780

if.then16:                                        ; preds = %if.end14
  %21 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !7781
  %22 = load %struct.clk_parent_map*, %struct.clk_parent_map** %entry1, align 8, !dbg !7782
  %core17 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %22, i32 0, i32 1, !dbg !7783
  store %struct.clk_core* %21, %struct.clk_core** %core17, align 8, !dbg !7784
  br label %if.end18, !dbg !7782

if.end18:                                         ; preds = %if.then16, %if.end14
  ret void, !dbg !7785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk_core* @clk_core_get(%struct.clk_core* %core, i8 zeroext %p_index) #0 !dbg !7786 {
entry:
  %retval = alloca %struct.clk_core*, align 8
  %core.addr = alloca %struct.clk_core*, align 8
  %p_index.addr = alloca i8, align 1
  %name = alloca i8*, align 8
  %index = alloca i32, align 4
  %hw = alloca %struct.clk_hw*, align 8
  %dev = alloca %struct.device*, align 8
  %dev_id = alloca i8*, align 8
  %np = alloca %struct.device_node*, align 8
  %clkspec = alloca %struct.of_phandle_args, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !7787, metadata !DIExpression()), !dbg !7788
  store i8 %p_index, i8* %p_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %p_index.addr, metadata !7789, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.declare(metadata i8** %name, metadata !7791, metadata !DIExpression()), !dbg !7792
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7793
  %parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 7, !dbg !7794
  %1 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !7794
  %2 = load i8, i8* %p_index.addr, align 1, !dbg !7795
  %idxprom = zext i8 %2 to i64, !dbg !7793
  %arrayidx = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %1, i64 %idxprom, !dbg !7793
  %fw_name = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx, i32 0, i32 2, !dbg !7796
  %3 = load i8*, i8** %fw_name, align 8, !dbg !7796
  store i8* %3, i8** %name, align 8, !dbg !7792
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7797, metadata !DIExpression()), !dbg !7798
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7799
  %parents1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 7, !dbg !7800
  %5 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents1, align 8, !dbg !7800
  %6 = load i8, i8* %p_index.addr, align 1, !dbg !7801
  %idxprom2 = zext i8 %6 to i64, !dbg !7799
  %arrayidx3 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %5, i64 %idxprom2, !dbg !7799
  %index4 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx3, i32 0, i32 4, !dbg !7802
  %7 = load i32, i32* %index4, align 8, !dbg !7802
  store i32 %7, i32* %index, align 4, !dbg !7798
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw, metadata !7803, metadata !DIExpression()), !dbg !7804
  %call = call i8* @ERR_PTR(i64 -2) #11, !dbg !7805
  %8 = bitcast i8* %call to %struct.clk_hw*, !dbg !7805
  store %struct.clk_hw* %8, %struct.clk_hw** %hw, align 8, !dbg !7804
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !7806, metadata !DIExpression()), !dbg !7807
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7808
  %dev5 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 4, !dbg !7809
  %10 = load %struct.device*, %struct.device** %dev5, align 8, !dbg !7809
  store %struct.device* %10, %struct.device** %dev, align 8, !dbg !7807
  call void @llvm.dbg.declare(metadata i8** %dev_id, metadata !7810, metadata !DIExpression()), !dbg !7811
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7812
  %tobool = icmp ne %struct.device* %11, null, !dbg !7812
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7812

cond.true:                                        ; preds = %entry
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7813
  %call6 = call i8* @dev_name(%struct.device* %12) #11, !dbg !7814
  br label %cond.end, !dbg !7812

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7812

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call6, %cond.true ], [ null, %cond.false ], !dbg !7812
  store i8* %cond, i8** %dev_id, align 8, !dbg !7811
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !7815, metadata !DIExpression()), !dbg !7816
  %13 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7817
  %of_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %13, i32 0, i32 5, !dbg !7818
  %14 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !7818
  store %struct.device_node* %14, %struct.device_node** %np, align 8, !dbg !7816
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args* %clkspec, metadata !7819, metadata !DIExpression()), !dbg !7820
  %15 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7821
  %tobool7 = icmp ne %struct.device_node* %15, null, !dbg !7821
  br i1 %tobool7, label %land.lhs.true, label %if.else, !dbg !7823

land.lhs.true:                                    ; preds = %cond.end
  %16 = load i8*, i8** %name, align 8, !dbg !7824
  %tobool8 = icmp ne i8* %16, null, !dbg !7824
  br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !7825

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load i32, i32* %index, align 4, !dbg !7826
  %cmp = icmp sge i32 %17, 0, !dbg !7827
  br i1 %cmp, label %land.lhs.true9, label %if.else, !dbg !7828

land.lhs.true9:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %18 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7829
  %19 = load i32, i32* %index, align 4, !dbg !7830
  %20 = load i8*, i8** %name, align 8, !dbg !7831
  %call10 = call i32 @of_parse_clkspec(%struct.device_node* %18, i32 %19, i8* %20, %struct.of_phandle_args* %clkspec) #11, !dbg !7832
  %tobool11 = icmp ne i32 %call10, 0, !dbg !7832
  br i1 %tobool11, label %if.else, label %if.then, !dbg !7833

if.then:                                          ; preds = %land.lhs.true9
  %call12 = call %struct.clk_hw* @of_clk_get_hw_from_clkspec(%struct.of_phandle_args* %clkspec) #11, !dbg !7834
  store %struct.clk_hw* %call12, %struct.clk_hw** %hw, align 8, !dbg !7836
  %np13 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %clkspec, i32 0, i32 0, !dbg !7837
  %21 = load %struct.device_node*, %struct.device_node** %np13, align 8, !dbg !7837
  call void @of_node_put(%struct.device_node* %21) #11, !dbg !7838
  br label %if.end17, !dbg !7839

if.else:                                          ; preds = %land.lhs.true9, %lor.lhs.false, %cond.end
  %22 = load i8*, i8** %name, align 8, !dbg !7840
  %tobool14 = icmp ne i8* %22, null, !dbg !7840
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !7842

if.then15:                                        ; preds = %if.else
  %23 = load i8*, i8** %dev_id, align 8, !dbg !7843
  %24 = load i8*, i8** %name, align 8, !dbg !7845
  %call16 = call %struct.clk_hw* @clk_find_hw(i8* %23, i8* %24) #11, !dbg !7846
  store %struct.clk_hw* %call16, %struct.clk_hw** %hw, align 8, !dbg !7847
  br label %if.end, !dbg !7848

if.end:                                           ; preds = %if.then15, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  %25 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !7849
  %26 = bitcast %struct.clk_hw* %25 to i8*, !dbg !7849
  %call18 = call zeroext i1 @IS_ERR(i8* %26) #11, !dbg !7851
  br i1 %call18, label %if.then19, label %if.end21, !dbg !7852

if.then19:                                        ; preds = %if.end17
  %27 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !7853
  %28 = bitcast %struct.clk_hw* %27 to i8*, !dbg !7853
  %call20 = call i8* @ERR_CAST(i8* %28) #11, !dbg !7854
  %29 = bitcast i8* %call20 to %struct.clk_core*, !dbg !7854
  store %struct.clk_core* %29, %struct.clk_core** %retval, align 8, !dbg !7855
  br label %return, !dbg !7855

if.end21:                                         ; preds = %if.end17
  %30 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !7856
  %core22 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %30, i32 0, i32 0, !dbg !7857
  %31 = load %struct.clk_core*, %struct.clk_core** %core22, align 8, !dbg !7857
  store %struct.clk_core* %31, %struct.clk_core** %retval, align 8, !dbg !7858
  br label %return, !dbg !7858

return:                                           ; preds = %if.end21, %if.then19
  %32 = load %struct.clk_core*, %struct.clk_core** %retval, align 8, !dbg !7859
  ret %struct.clk_core* %32, !dbg !7859
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !7860 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7863, metadata !DIExpression()), !dbg !7864
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7865
  %1 = ptrtoint i8* %0 to i64, !dbg !7866
  ret i64 %1, !dbg !7867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !7868 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7871, metadata !DIExpression()), !dbg !7872
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7873
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !7875
  %1 = load i8*, i8** %init_name, align 8, !dbg !7875
  %tobool = icmp ne i8* %1, null, !dbg !7873
  br i1 %tobool, label %if.then, label %if.end, !dbg !7876

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7877
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !7878
  %3 = load i8*, i8** %init_name1, align 8, !dbg !7878
  store i8* %3, i8** %retval, align 8, !dbg !7879
  br label %return, !dbg !7879

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7880
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !7881
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !7882
  store i8* %call, i8** %retval, align 8, !dbg !7883
  br label %return, !dbg !7883

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !7884
  ret i8* %5, !dbg !7884
}

; Function Attrs: noredzone
declare dso_local %struct.clk_hw* @clk_find_hw(i8*, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !7885 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !7890, metadata !DIExpression()), !dbg !7891
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !7892
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !7893
  %1 = load i8*, i8** %name, align 8, !dbg !7893
  ret i8* %1, !dbg !7894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_pm_runtime_get(%struct.clk_core* %core) #0 !dbg !7895 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !7896, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7898, metadata !DIExpression()), !dbg !7899
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7900
  %rpm_enabled = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 17, !dbg !7902
  %1 = load i8, i8* %rpm_enabled, align 1, !dbg !7902
  %tobool = trunc i8 %1 to i1, !dbg !7902
  br i1 %tobool, label %if.end, label %if.then, !dbg !7903

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7904
  br label %return, !dbg !7904

if.end:                                           ; preds = %entry
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7905
  %dev = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 4, !dbg !7906
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7906
  %call = call i32 @pm_runtime_get_sync(%struct.device* %3) #11, !dbg !7907
  store i32 %call, i32* %ret, align 4, !dbg !7908
  %4 = load i32, i32* %ret, align 4, !dbg !7909
  %cmp = icmp slt i32 %4, 0, !dbg !7911
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !7912

if.then1:                                         ; preds = %if.end
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7913
  %dev2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 4, !dbg !7915
  %6 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !7915
  call void @pm_runtime_put_noidle(%struct.device* %6) #11, !dbg !7916
  %7 = load i32, i32* %ret, align 4, !dbg !7917
  store i32 %7, i32* %retval, align 4, !dbg !7918
  br label %return, !dbg !7918

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7919
  br label %return, !dbg !7919

return:                                           ; preds = %if.end3, %if.then1, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7920
  ret i32 %8, !dbg !7920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_pm_runtime_put(%struct.clk_core* %core) #0 !dbg !7921 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !7922, metadata !DIExpression()), !dbg !7923
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7924
  %rpm_enabled = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 17, !dbg !7926
  %1 = load i8, i8* %rpm_enabled, align 1, !dbg !7926
  %tobool = trunc i8 %1 to i1, !dbg !7926
  br i1 %tobool, label %if.end, label %if.then, !dbg !7927

if.then:                                          ; preds = %entry
  br label %return, !dbg !7928

if.end:                                           ; preds = %entry
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !7929
  %dev = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 4, !dbg !7930
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7930
  %call = call i32 @pm_runtime_put_sync(%struct.device* %3) #11, !dbg !7931
  br label %return, !dbg !7932

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #0 !dbg !7933 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7935, metadata !DIExpression()), !dbg !7936
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7937
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #11, !dbg !7938
  ret i32 %call, !dbg !7939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_put_noidle(%struct.device* %dev) #0 !dbg !7940 {
entry:
  %v.addr.i5.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i, metadata !7941, metadata !DIExpression()), !dbg !7947
  %old.addr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i, metadata !7961, metadata !DIExpression()), !dbg !7962
  %new.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i, metadata !7963, metadata !DIExpression()), !dbg !7964
  %success.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i, metadata !7965, metadata !DIExpression()), !dbg !7967
  %_old.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i, metadata !7968, metadata !DIExpression()), !dbg !7967
  %__old.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i, metadata !7969, metadata !DIExpression()), !dbg !7967
  %__new.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i, metadata !7970, metadata !DIExpression()), !dbg !7967
  %__ptr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i, metadata !7971, metadata !DIExpression()), !dbg !7967
  %tmp.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !7972, metadata !DIExpression()), !dbg !7978
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !7980, metadata !DIExpression()), !dbg !7981
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !7982, metadata !DIExpression()), !dbg !7983
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !7984, metadata !DIExpression()), !dbg !7985
  %c.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i, metadata !7986, metadata !DIExpression()), !dbg !7987
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7988, metadata !DIExpression()), !dbg !7989
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !7990, metadata !DIExpression()), !dbg !7991
  %u.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i, metadata !7992, metadata !DIExpression()), !dbg !7993
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7994, metadata !DIExpression()), !dbg !8002
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8004, metadata !DIExpression()), !dbg !8005
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8006, metadata !DIExpression()), !dbg !8007
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !8008, metadata !DIExpression()), !dbg !8009
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !8010, metadata !DIExpression()), !dbg !8011
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8012, metadata !DIExpression()), !dbg !8013
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8014
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !8015
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !8016
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 -1, i32* %a.addr.i, align 4
  store i32 0, i32* %u.addr.i, align 4
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8017
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !8017
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8018
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !8019
  %conv.i.i = trunc i64 %4 to i32, !dbg !8019
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #14, !dbg !8020
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8021
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !8021
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !8021
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8022
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !8023
  %9 = load i32, i32* %u.addr.i, align 4, !dbg !8024
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %8, i32* %a.addr.i.i, align 4
  store i32 %9, i32* %u.addr.i.i, align 4
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8025
  %11 = load i32, i32* %a.addr.i.i, align 4, !dbg !8026
  %12 = load i32, i32* %u.addr.i.i, align 4, !dbg !8027
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 %11, i32* %a.addr.i.i.i, align 4
  store i32 %12, i32* %u.addr.i.i.i, align 4
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !8028
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !8029
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !8029
  %15 = load volatile i32, i32* %counter.i.i.i.i, align 4, !dbg !8029
  store i32 %15, i32* %c.i.i.i, align 4, !dbg !7987
  br label %do.body.i.i.i, !dbg !8030

do.body.i.i.i:                                    ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i, %entry
  %16 = load i32, i32* %c.i.i.i, align 4, !dbg !8031
  %17 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !8031
  %cmp.i.i.i = icmp eq i32 %16, %17, !dbg !8031
  %lnot.i.i.i = xor i1 %cmp.i.i.i, true, !dbg !8031
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i to i32, !dbg !8031
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !8031
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i, !dbg !8034

if.then.i.i.i:                                    ; preds = %do.body.i.i.i
  br label %atomic_add_unless.exit, !dbg !8035

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !8036
  %19 = load i32, i32* %c.i.i.i, align 4, !dbg !8037
  %20 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !8038
  %add.i.i.i = add i32 %19, %20, !dbg !8039
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i5.i.i.i, align 8
  store i32* %c.i.i.i, i32** %old.addr.i.i.i.i, align 8
  store i32 %add.i.i.i, i32* %new.addr.i.i.i.i, align 4
  %21 = load i32*, i32** %old.addr.i.i.i.i, align 8, !dbg !7967
  store i32* %21, i32** %_old.i.i.i.i, align 8, !dbg !7967
  %22 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !7967
  %23 = load i32, i32* %22, align 4, !dbg !7967
  store i32 %23, i32* %__old.i.i.i.i, align 4, !dbg !7967
  %24 = load i32, i32* %new.addr.i.i.i.i, align 4, !dbg !7967
  store i32 %24, i32* %__new.i.i.i.i, align 4, !dbg !7967
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i, align 8, !dbg !7967
  %counter.i6.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !7967
  store i32* %counter.i6.i.i.i, i32** %__ptr.i.i.i.i, align 8, !dbg !7967
  %26 = load i32*, i32** %__ptr.i.i.i.i, align 8, !dbg !7967
  %27 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !7967
  %28 = load i32, i32* %__new.i.i.i.i, align 4, !dbg !7967
  %29 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %26, i32 %28, i32* %26, i32 %27) #10, !dbg !7967, !srcloc !8040
  %asmresult.i.i.i.i = extractvalue { i8, i32 } %29, 0, !dbg !7967
  %asmresult1.i.i.i.i = extractvalue { i8, i32 } %29, 1, !dbg !7967
  store i8 %asmresult.i.i.i.i, i8* %success.i.i.i.i, align 1, !dbg !7967
  store i32 %asmresult1.i.i.i.i, i32* %__old.i.i.i.i, align 4, !dbg !7967
  %30 = load i8, i8* %success.i.i.i.i, align 1, !dbg !8041
  %tobool.i.i.i.i = trunc i8 %30 to i1, !dbg !8041
  %lnot.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !8041
  %lnot3.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !8041
  %lnot.ext.i.i.i.i = zext i1 %lnot3.i.i.i.i to i32, !dbg !8041
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !8041
  br i1 %lnot3.i.i.i.i, label %if.then.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !7967

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  %31 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !8041
  %32 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !8041
  store i32 %31, i32* %32, align 4, !dbg !8041
  br label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !8041

arch_atomic_try_cmpxchg.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %33 = load i8, i8* %success.i.i.i.i, align 1, !dbg !7967
  %tobool5.i.i.i.i = trunc i8 %33 to i1, !dbg !7967
  %lnot6.i.i.i.i = xor i1 %tobool5.i.i.i.i, true, !dbg !7967
  %lnot.ext9.i.i.i.i = zext i1 %tobool5.i.i.i.i to i32, !dbg !7967
  %conv10.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i to i64, !dbg !7967
  store i64 %conv10.i.i.i.i, i64* %tmp.i.i.i.i, align 8, !dbg !8041
  %34 = load i64, i64* %tmp.i.i.i.i, align 8, !dbg !7967
  %tobool11.i.i.i.i = icmp ne i64 %34, 0, !dbg !8043
  %lnot3.i.i.i = xor i1 %tobool11.i.i.i.i, true, !dbg !8044
  br i1 %lnot3.i.i.i, label %do.body.i.i.i, label %atomic_add_unless.exit, !dbg !8045, !llvm.loop !8046

atomic_add_unless.exit:                           ; preds = %if.then.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i
  %35 = load i32, i32* %c.i.i.i, align 4, !dbg !8048
  %36 = load i32, i32* %u.addr.i.i, align 4, !dbg !8049
  %cmp.i.i = icmp ne i32 %35, %36, !dbg !8050
  ret void, !dbg !8051
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !8052 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8056, metadata !DIExpression()), !dbg !8057
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  ret i1 true, !dbg !8060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !8061 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8065, metadata !DIExpression()), !dbg !8066
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8067, metadata !DIExpression()), !dbg !8068
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8069, metadata !DIExpression()), !dbg !8070
  ret void, !dbg !8071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put_sync(%struct.device* %dev) #0 !dbg !8072 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8073, metadata !DIExpression()), !dbg !8074
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8075
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 4) #11, !dbg !8076
  ret i32 %call, !dbg !8077
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_idle(%struct.device*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_get_noresume(%struct.device* %dev) #0 !dbg !8078 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8079, metadata !DIExpression()), !dbg !8083
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7994, metadata !DIExpression()), !dbg !8087
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8004, metadata !DIExpression()), !dbg !8089
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8090, metadata !DIExpression()), !dbg !8091
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8094
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !8095
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !8096
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8097
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !8097
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8098
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !8099
  %conv.i.i = trunc i64 %4 to i32, !dbg !8099
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #14, !dbg !8100
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8101
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !8101
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !8101
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8102
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8103
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !8104
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #10, !dbg !8105, !srcloc !8106
  ret void, !dbg !8107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_active(%struct.device* %dev) #0 !dbg !8108 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8111, metadata !DIExpression()), !dbg !8112
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8113
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !8114
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !8115
  %1 = load i32, i32* %runtime_status, align 4, !dbg !8115
  %cmp = icmp eq i32 %1, 0, !dbg !8116
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8117

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8118
  %power1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !8119
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !8120
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !8120
  %bf.clear = and i16 %bf.load, 7, !dbg !8120
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8120
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8117
  br label %lor.end, !dbg !8117

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]
  ret i1 %3, !dbg !8121
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put(%struct.device* %dev) #0 !dbg !8122 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8123, metadata !DIExpression()), !dbg !8124
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8125
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 5) #11, !dbg !8126
  ret i32 %call, !dbg !8127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk_core* @__clk_lookup_subtree(i8* %name, %struct.clk_core* %core) #0 !dbg !8128 {
entry:
  %retval = alloca %struct.clk_core*, align 8
  %name.addr = alloca i8*, align 8
  %core.addr = alloca %struct.clk_core*, align 8
  %child = alloca %struct.clk_core*, align 8
  %ret = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.clk_core*, align 8
  %____ptr9 = alloca %struct.hlist_node*, align 8
  %tmp10 = alloca %struct.clk_core*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp16 = alloca %struct.clk_core*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8131, metadata !DIExpression()), !dbg !8132
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8133, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !8135, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.declare(metadata %struct.clk_core** %ret, metadata !8137, metadata !DIExpression()), !dbg !8138
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8139
  %name1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 0, !dbg !8141
  %1 = load i8*, i8** %name1, align 8, !dbg !8141
  %2 = load i8*, i8** %name.addr, align 8, !dbg !8142
  %call = call i32 @strcmp(i8* %1, i8* %2) #11, !dbg !8143
  %tobool = icmp ne i32 %call, 0, !dbg !8143
  br i1 %tobool, label %if.end, label %if.then, !dbg !8144

if.then:                                          ; preds = %entry
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8145
  store %struct.clk_core* %3, %struct.clk_core** %retval, align 8, !dbg !8146
  br label %return, !dbg !8146

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !8147, metadata !DIExpression()), !dbg !8150
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8150
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 26, !dbg !8150
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !8150
  %5 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !8150
  store %struct.hlist_node* %5, %struct.hlist_node** %____ptr, align 8, !dbg !8150
  %6 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !8150
  %tobool2 = icmp ne %struct.hlist_node* %6, null, !dbg !8150
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !8150

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8151, metadata !DIExpression()), !dbg !8153
  %7 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !8153
  %8 = bitcast %struct.hlist_node* %7 to i8*, !dbg !8153
  store i8* %8, i8** %__mptr, align 8, !dbg !8153
  br label %do.body, !dbg !8153

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !8154

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !8153
  %add.ptr = getelementptr i8, i8* %9, i64 -184, !dbg !8153
  %10 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !8153
  store %struct.clk_core* %10, %struct.clk_core** %tmp3, align 8, !dbg !8154
  %11 = load %struct.clk_core*, %struct.clk_core** %tmp3, align 8, !dbg !8153
  br label %cond.end, !dbg !8150

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !8150

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %11, %do.end ], [ null, %cond.false ], !dbg !8150
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !8150
  %12 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !8150
  store %struct.clk_core* %12, %struct.clk_core** %child, align 8, !dbg !8156
  br label %for.cond, !dbg !8156

for.cond:                                         ; preds = %cond.end19, %cond.end
  %13 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8157
  %tobool4 = icmp ne %struct.clk_core* %13, null, !dbg !8156
  br i1 %tobool4, label %for.body, label %for.end, !dbg !8156

for.body:                                         ; preds = %for.cond
  %14 = load i8*, i8** %name.addr, align 8, !dbg !8159
  %15 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8161
  %call5 = call %struct.clk_core* @__clk_lookup_subtree(i8* %14, %struct.clk_core* %15) #11, !dbg !8162
  store %struct.clk_core* %call5, %struct.clk_core** %ret, align 8, !dbg !8163
  %16 = load %struct.clk_core*, %struct.clk_core** %ret, align 8, !dbg !8164
  %tobool6 = icmp ne %struct.clk_core* %16, null, !dbg !8164
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8166

if.then7:                                         ; preds = %for.body
  %17 = load %struct.clk_core*, %struct.clk_core** %ret, align 8, !dbg !8167
  store %struct.clk_core* %17, %struct.clk_core** %retval, align 8, !dbg !8168
  br label %return, !dbg !8168

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !8169

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr9, metadata !8170, metadata !DIExpression()), !dbg !8172
  %18 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8172
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %18, i32 0, i32 27, !dbg !8172
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !8172
  %19 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !8172
  store %struct.hlist_node* %19, %struct.hlist_node** %____ptr9, align 8, !dbg !8172
  %20 = load %struct.hlist_node*, %struct.hlist_node** %____ptr9, align 8, !dbg !8172
  %tobool11 = icmp ne %struct.hlist_node* %20, null, !dbg !8172
  br i1 %tobool11, label %cond.true12, label %cond.false18, !dbg !8172

cond.true12:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !8173, metadata !DIExpression()), !dbg !8175
  %21 = load %struct.hlist_node*, %struct.hlist_node** %____ptr9, align 8, !dbg !8175
  %22 = bitcast %struct.hlist_node* %21 to i8*, !dbg !8175
  store i8* %22, i8** %__mptr13, align 8, !dbg !8175
  br label %do.body14, !dbg !8175

do.body14:                                        ; preds = %cond.true12
  br label %do.end15, !dbg !8176

do.end15:                                         ; preds = %do.body14
  %23 = load i8*, i8** %__mptr13, align 8, !dbg !8175
  %add.ptr17 = getelementptr i8, i8* %23, i64 -184, !dbg !8175
  %24 = bitcast i8* %add.ptr17 to %struct.clk_core*, !dbg !8175
  store %struct.clk_core* %24, %struct.clk_core** %tmp16, align 8, !dbg !8176
  %25 = load %struct.clk_core*, %struct.clk_core** %tmp16, align 8, !dbg !8175
  br label %cond.end19, !dbg !8172

cond.false18:                                     ; preds = %for.inc
  br label %cond.end19, !dbg !8172

cond.end19:                                       ; preds = %cond.false18, %do.end15
  %cond20 = phi %struct.clk_core* [ %25, %do.end15 ], [ null, %cond.false18 ], !dbg !8172
  store %struct.clk_core* %cond20, %struct.clk_core** %tmp10, align 8, !dbg !8172
  %26 = load %struct.clk_core*, %struct.clk_core** %tmp10, align 8, !dbg !8172
  store %struct.clk_core* %26, %struct.clk_core** %child, align 8, !dbg !8157
  br label %for.cond, !dbg !8157, !llvm.loop !8178

for.end:                                          ; preds = %for.cond
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !8180
  br label %return, !dbg !8180

return:                                           ; preds = %for.end, %if.then7, %if.then
  %27 = load %struct.clk_core*, %struct.clk_core** %retval, align 8, !dbg !8181
  ret %struct.clk_core* %27, !dbg !8181
}

; Function Attrs: noredzone
declare dso_local i32 @mutex_trylock(%struct.mutex*) #5

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_unprepare(%struct.clk_core* %core) #0 !dbg !8182 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on33 = alloca i32, align 4
  %tmp66 = alloca i64, align 8
  %__ret_warn_on86 = alloca i32, align 4
  %tmp117 = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8183, metadata !DIExpression()), !dbg !8184
  br label %do.body, !dbg !8185

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8186

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8188
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !8188
  br i1 %tobool, label %if.end, label %if.then, !dbg !8190

if.then:                                          ; preds = %do.end
  br label %return, !dbg !8191

if.end:                                           ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8192, metadata !DIExpression()), !dbg !8195
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8195
  %prepare_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 19, !dbg !8195
  %2 = load i32, i32* %prepare_count, align 8, !dbg !8195
  %cmp = icmp eq i32 %2, 0, !dbg !8195
  %lnot = xor i1 %cmp, true, !dbg !8195
  %lnot1 = xor i1 %lnot, true, !dbg !8195
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8195
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8195
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8196
  %tobool2 = icmp ne i32 %3, 0, !dbg !8196
  %lnot3 = xor i1 %tobool2, true, !dbg !8196
  %lnot5 = xor i1 %lnot3, true, !dbg !8196
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !8196
  %conv = sext i32 %lnot.ext6 to i64, !dbg !8196
  %tobool7 = icmp ne i64 %conv, 0, !dbg !8196
  br i1 %tobool7, label %if.then8, label %if.end23, !dbg !8195

if.then8:                                         ; preds = %if.end
  br label %do.body9, !dbg !8196

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !8198

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !8200

do.end11:                                         ; preds = %do.body10
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8198
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 0, !dbg !8198
  %5 = load i8*, i8** %name, align 8, !dbg !8198
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %5) #11, !dbg !8198
  br label %do.body12, !dbg !8198

do.body12:                                        ; preds = %do.end11
  br label %do.body13, !dbg !8202

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !8204

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !8202

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 811, i32 2313, i64 12) #10, !dbg !8206, !srcloc !8208
  br label %do.end16, !dbg !8206

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 187) #10, !dbg !8209, !srcloc !8211
  br label %do.body17, !dbg !8202

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !8212

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !8202

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !8198

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !8214

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !8198

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !8198

if.end23:                                         ; preds = %do.end22, %if.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !8195
  %tobool24 = icmp ne i32 %6, 0, !dbg !8195
  %lnot25 = xor i1 %tobool24, true, !dbg !8195
  %lnot27 = xor i1 %lnot25, true, !dbg !8195
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !8195
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !8195
  store i64 %conv29, i64* %tmp, align 8, !dbg !8196
  %7 = load i64, i64* %tmp, align 8, !dbg !8195
  %tobool30 = icmp ne i64 %7, 0, !dbg !8216
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !8217

if.then31:                                        ; preds = %if.end23
  br label %return, !dbg !8218

if.end32:                                         ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on33, metadata !8219, metadata !DIExpression()), !dbg !8222
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8222
  %prepare_count34 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 19, !dbg !8222
  %9 = load i32, i32* %prepare_count34, align 8, !dbg !8222
  %cmp35 = icmp eq i32 %9, 1, !dbg !8222
  br i1 %cmp35, label %land.rhs, label %land.end, !dbg !8222

land.rhs:                                         ; preds = %if.end32
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8222
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 15, !dbg !8222
  %11 = load i64, i64* %flags, align 8, !dbg !8222
  %and = and i64 %11, 2048, !dbg !8222
  %tobool37 = icmp ne i64 %and, 0, !dbg !8222
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %12 = phi i1 [ false, %if.end32 ], [ %tobool37, %land.rhs ], !dbg !8223
  %lnot38 = xor i1 %12, true, !dbg !8222
  %lnot40 = xor i1 %lnot38, true, !dbg !8222
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !8222
  store i32 %lnot.ext41, i32* %__ret_warn_on33, align 4, !dbg !8222
  %13 = load i32, i32* %__ret_warn_on33, align 4, !dbg !8224
  %tobool42 = icmp ne i32 %13, 0, !dbg !8224
  %lnot43 = xor i1 %tobool42, true, !dbg !8224
  %lnot45 = xor i1 %lnot43, true, !dbg !8224
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !8224
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !8224
  %tobool48 = icmp ne i64 %conv47, 0, !dbg !8224
  br i1 %tobool48, label %if.then49, label %if.end65, !dbg !8222

if.then49:                                        ; preds = %land.end
  br label %do.body50, !dbg !8224

do.body50:                                        ; preds = %if.then49
  br label %do.body51, !dbg !8226

do.body51:                                        ; preds = %do.body50
  br label %do.end52, !dbg !8228

do.end52:                                         ; preds = %do.body51
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8226
  %name53 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 0, !dbg !8226
  %15 = load i8*, i8** %name53, align 8, !dbg !8226
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i8* %15) #11, !dbg !8226
  br label %do.body54, !dbg !8226

do.body54:                                        ; preds = %do.end52
  br label %do.body55, !dbg !8230

do.body55:                                        ; preds = %do.body54
  br label %do.end56, !dbg !8232

do.end56:                                         ; preds = %do.body55
  br label %do.body57, !dbg !8230

do.body57:                                        ; preds = %do.end56
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 815, i32 2313, i64 12) #10, !dbg !8234, !srcloc !8236
  br label %do.end58, !dbg !8234

do.end58:                                         ; preds = %do.body57
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 188) #10, !dbg !8237, !srcloc !8239
  br label %do.body59, !dbg !8230

do.body59:                                        ; preds = %do.end58
  br label %do.end60, !dbg !8240

do.end60:                                         ; preds = %do.body59
  br label %do.end61, !dbg !8230

do.end61:                                         ; preds = %do.end60
  br label %do.body62, !dbg !8226

do.body62:                                        ; preds = %do.end61
  br label %do.end63, !dbg !8242

do.end63:                                         ; preds = %do.body62
  br label %do.end64, !dbg !8226

do.end64:                                         ; preds = %do.end63
  br label %if.end65, !dbg !8226

if.end65:                                         ; preds = %do.end64, %land.end
  %16 = load i32, i32* %__ret_warn_on33, align 4, !dbg !8222
  %tobool67 = icmp ne i32 %16, 0, !dbg !8222
  %lnot68 = xor i1 %tobool67, true, !dbg !8222
  %lnot70 = xor i1 %lnot68, true, !dbg !8222
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !8222
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !8222
  store i64 %conv72, i64* %tmp66, align 8, !dbg !8224
  %17 = load i64, i64* %tmp66, align 8, !dbg !8222
  %tobool73 = icmp ne i64 %17, 0, !dbg !8244
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !8245

if.then74:                                        ; preds = %if.end65
  br label %return, !dbg !8246

if.end75:                                         ; preds = %if.end65
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8247
  %flags76 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %18, i32 0, i32 15, !dbg !8249
  %19 = load i64, i64* %flags76, align 8, !dbg !8249
  %and77 = and i64 %19, 1, !dbg !8250
  %tobool78 = icmp ne i64 %and77, 0, !dbg !8250
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !8251

if.then79:                                        ; preds = %if.end75
  %20 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8252
  call void @clk_core_rate_unprotect(%struct.clk_core* %20) #11, !dbg !8253
  br label %if.end80, !dbg !8253

if.end80:                                         ; preds = %if.then79, %if.end75
  %21 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8254
  %prepare_count81 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %21, i32 0, i32 19, !dbg !8256
  %22 = load i32, i32* %prepare_count81, align 8, !dbg !8257
  %dec = add i32 %22, -1, !dbg !8257
  store i32 %dec, i32* %prepare_count81, align 8, !dbg !8257
  %cmp82 = icmp ugt i32 %dec, 0, !dbg !8258
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !8259

if.then84:                                        ; preds = %if.end80
  br label %return, !dbg !8260

if.end85:                                         ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on86, metadata !8261, metadata !DIExpression()), !dbg !8263
  %23 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8263
  %enable_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %23, i32 0, i32 18, !dbg !8263
  %24 = load i32, i32* %enable_count, align 4, !dbg !8263
  %cmp87 = icmp ugt i32 %24, 0, !dbg !8263
  %lnot89 = xor i1 %cmp87, true, !dbg !8263
  %lnot91 = xor i1 %lnot89, true, !dbg !8263
  %lnot.ext92 = zext i1 %lnot91 to i32, !dbg !8263
  store i32 %lnot.ext92, i32* %__ret_warn_on86, align 4, !dbg !8263
  %25 = load i32, i32* %__ret_warn_on86, align 4, !dbg !8264
  %tobool93 = icmp ne i32 %25, 0, !dbg !8264
  %lnot94 = xor i1 %tobool93, true, !dbg !8264
  %lnot96 = xor i1 %lnot94, true, !dbg !8264
  %lnot.ext97 = zext i1 %lnot96 to i32, !dbg !8264
  %conv98 = sext i32 %lnot.ext97 to i64, !dbg !8264
  %tobool99 = icmp ne i64 %conv98, 0, !dbg !8264
  br i1 %tobool99, label %if.then100, label %if.end116, !dbg !8263

if.then100:                                       ; preds = %if.end85
  br label %do.body101, !dbg !8264

do.body101:                                       ; preds = %if.then100
  br label %do.body102, !dbg !8266

do.body102:                                       ; preds = %do.body101
  br label %do.end103, !dbg !8268

do.end103:                                        ; preds = %do.body102
  %26 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8266
  %name104 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %26, i32 0, i32 0, !dbg !8266
  %27 = load i8*, i8** %name104, align 8, !dbg !8266
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8* %27) #11, !dbg !8266
  br label %do.body105, !dbg !8266

do.body105:                                       ; preds = %do.end103
  br label %do.body106, !dbg !8270

do.body106:                                       ; preds = %do.body105
  br label %do.end107, !dbg !8272

do.end107:                                        ; preds = %do.body106
  br label %do.body108, !dbg !8270

do.body108:                                       ; preds = %do.end107
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 824, i32 2313, i64 12) #10, !dbg !8274, !srcloc !8276
  br label %do.end109, !dbg !8274

do.end109:                                        ; preds = %do.body108
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 189) #10, !dbg !8277, !srcloc !8279
  br label %do.body110, !dbg !8270

do.body110:                                       ; preds = %do.end109
  br label %do.end111, !dbg !8280

do.end111:                                        ; preds = %do.body110
  br label %do.end112, !dbg !8270

do.end112:                                        ; preds = %do.end111
  br label %do.body113, !dbg !8266

do.body113:                                       ; preds = %do.end112
  br label %do.end114, !dbg !8282

do.end114:                                        ; preds = %do.body113
  br label %do.end115, !dbg !8266

do.end115:                                        ; preds = %do.end114
  br label %if.end116, !dbg !8266

if.end116:                                        ; preds = %do.end115, %if.end85
  %28 = load i32, i32* %__ret_warn_on86, align 4, !dbg !8263
  %tobool118 = icmp ne i32 %28, 0, !dbg !8263
  %lnot119 = xor i1 %tobool118, true, !dbg !8263
  %lnot121 = xor i1 %lnot119, true, !dbg !8263
  %lnot.ext122 = zext i1 %lnot121 to i32, !dbg !8263
  %conv123 = sext i32 %lnot.ext122 to i64, !dbg !8263
  store i64 %conv123, i64* %tmp117, align 8, !dbg !8264
  %29 = load i64, i64* %tmp117, align 8, !dbg !8263
  %30 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8284
  call void @trace_clk_unprepare(%struct.clk_core* %30) #11, !dbg !8285
  %31 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8286
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %31, i32 0, i32 1, !dbg !8288
  %32 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !8288
  %unprepare = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %32, i32 0, i32 1, !dbg !8289
  %33 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %unprepare, align 8, !dbg !8289
  %tobool124 = icmp ne void (%struct.clk_hw*)* %33, null, !dbg !8286
  br i1 %tobool124, label %if.then125, label %if.end128, !dbg !8290

if.then125:                                       ; preds = %if.end116
  %34 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8291
  %ops126 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %34, i32 0, i32 1, !dbg !8292
  %35 = load %struct.clk_ops*, %struct.clk_ops** %ops126, align 8, !dbg !8292
  %unprepare127 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %35, i32 0, i32 1, !dbg !8293
  %36 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %unprepare127, align 8, !dbg !8293
  %37 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8294
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %37, i32 0, i32 2, !dbg !8295
  %38 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !8295
  call void %36(%struct.clk_hw* %38) #11, !dbg !8291
  br label %if.end128, !dbg !8291

if.end128:                                        ; preds = %if.then125, %if.end116
  %39 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8296
  call void @clk_pm_runtime_put(%struct.clk_core* %39) #11, !dbg !8297
  %40 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8298
  call void @trace_clk_unprepare_complete(%struct.clk_core* %40) #11, !dbg !8299
  %41 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8300
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %41, i32 0, i32 6, !dbg !8301
  %42 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !8301
  call void @clk_core_unprepare(%struct.clk_core* %42) #11, !dbg !8302
  br label %return, !dbg !8303

return:                                           ; preds = %if.end128, %if.then84, %if.then74, %if.then31, %if.then
  ret void, !dbg !8303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_unprepare(%struct.clk_core* %core) #0 !dbg !8304 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8306, metadata !DIExpression()), !dbg !8307
  ret void, !dbg !8307
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_unprepare_complete(%struct.clk_core* %core) #0 !dbg !8308 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8309, metadata !DIExpression()), !dbg !8310
  ret void, !dbg !8310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_prepare(%struct.clk_core* %core) #0 !dbg !8311 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8314, metadata !DIExpression()), !dbg !8315
  store i32 0, i32* %ret, align 4, !dbg !8315
  br label %do.body, !dbg !8316

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8317

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8319
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !8319
  br i1 %tobool, label %if.end, label %if.then, !dbg !8321

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !8322
  br label %return, !dbg !8322

if.end:                                           ; preds = %do.end
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8323
  %prepare_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 19, !dbg !8325
  %2 = load i32, i32* %prepare_count, align 8, !dbg !8325
  %cmp = icmp eq i32 %2, 0, !dbg !8326
  br i1 %cmp, label %if.then1, label %if.end18, !dbg !8327

if.then1:                                         ; preds = %if.end
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8328
  %call = call i32 @clk_pm_runtime_get(%struct.clk_core* %3) #11, !dbg !8330
  store i32 %call, i32* %ret, align 4, !dbg !8331
  %4 = load i32, i32* %ret, align 4, !dbg !8332
  %tobool2 = icmp ne i32 %4, 0, !dbg !8332
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8334

if.then3:                                         ; preds = %if.then1
  %5 = load i32, i32* %ret, align 4, !dbg !8335
  store i32 %5, i32* %retval, align 4, !dbg !8336
  br label %return, !dbg !8336

if.end4:                                          ; preds = %if.then1
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8337
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 6, !dbg !8338
  %7 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !8338
  %call5 = call i32 @clk_core_prepare(%struct.clk_core* %7) #11, !dbg !8339
  store i32 %call5, i32* %ret, align 4, !dbg !8340
  %8 = load i32, i32* %ret, align 4, !dbg !8341
  %tobool6 = icmp ne i32 %8, 0, !dbg !8341
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8343

if.then7:                                         ; preds = %if.end4
  br label %runtime_put, !dbg !8344

if.end8:                                          ; preds = %if.end4
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8345
  call void @trace_clk_prepare(%struct.clk_core* %9) #11, !dbg !8346
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8347
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 1, !dbg !8349
  %11 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !8349
  %prepare = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %11, i32 0, i32 0, !dbg !8350
  %12 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %prepare, align 8, !dbg !8350
  %tobool9 = icmp ne i32 (%struct.clk_hw*)* %12, null, !dbg !8347
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !8351

if.then10:                                        ; preds = %if.end8
  %13 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8352
  %ops11 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %13, i32 0, i32 1, !dbg !8353
  %14 = load %struct.clk_ops*, %struct.clk_ops** %ops11, align 8, !dbg !8353
  %prepare12 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %14, i32 0, i32 0, !dbg !8354
  %15 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %prepare12, align 8, !dbg !8354
  %16 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8355
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %16, i32 0, i32 2, !dbg !8356
  %17 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !8356
  %call13 = call i32 %15(%struct.clk_hw* %17) #11, !dbg !8352
  store i32 %call13, i32* %ret, align 4, !dbg !8357
  br label %if.end14, !dbg !8358

if.end14:                                         ; preds = %if.then10, %if.end8
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8359
  call void @trace_clk_prepare_complete(%struct.clk_core* %18) #11, !dbg !8360
  %19 = load i32, i32* %ret, align 4, !dbg !8361
  %tobool15 = icmp ne i32 %19, 0, !dbg !8361
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8363

if.then16:                                        ; preds = %if.end14
  br label %unprepare, !dbg !8364

if.end17:                                         ; preds = %if.end14
  br label %if.end18, !dbg !8365

if.end18:                                         ; preds = %if.end17, %if.end
  %20 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8366
  %prepare_count19 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %20, i32 0, i32 19, !dbg !8367
  %21 = load i32, i32* %prepare_count19, align 8, !dbg !8368
  %inc = add i32 %21, 1, !dbg !8368
  store i32 %inc, i32* %prepare_count19, align 8, !dbg !8368
  %22 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8369
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %22, i32 0, i32 15, !dbg !8371
  %23 = load i64, i64* %flags, align 8, !dbg !8371
  %and = and i64 %23, 1, !dbg !8372
  %tobool20 = icmp ne i64 %and, 0, !dbg !8372
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !8373

if.then21:                                        ; preds = %if.end18
  %24 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8374
  call void @clk_core_rate_protect(%struct.clk_core* %24) #11, !dbg !8375
  br label %if.end22, !dbg !8375

if.end22:                                         ; preds = %if.then21, %if.end18
  store i32 0, i32* %retval, align 4, !dbg !8376
  br label %return, !dbg !8376

unprepare:                                        ; preds = %if.then16
  call void @llvm.dbg.label(metadata !8377), !dbg !8378
  %25 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8379
  %parent23 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %25, i32 0, i32 6, !dbg !8380
  %26 = load %struct.clk_core*, %struct.clk_core** %parent23, align 8, !dbg !8380
  call void @clk_core_unprepare(%struct.clk_core* %26) #11, !dbg !8381
  br label %runtime_put, !dbg !8381

runtime_put:                                      ; preds = %unprepare, %if.then7
  call void @llvm.dbg.label(metadata !8382), !dbg !8383
  %27 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8384
  call void @clk_pm_runtime_put(%struct.clk_core* %27) #11, !dbg !8385
  %28 = load i32, i32* %ret, align 4, !dbg !8386
  store i32 %28, i32* %retval, align 4, !dbg !8387
  br label %return, !dbg !8387

return:                                           ; preds = %runtime_put, %if.end22, %if.then3, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !8388
  ret i32 %29, !dbg !8388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_prepare(%struct.clk_core* %core) #0 !dbg !8389 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8390, metadata !DIExpression()), !dbg !8391
  ret void, !dbg !8391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_prepare_complete(%struct.clk_core* %core) #0 !dbg !8392 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  ret void, !dbg !8394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_disable(%struct.clk_core* %core) #0 !dbg !8395 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on33 = alloca i32, align 4
  %tmp66 = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8396, metadata !DIExpression()), !dbg !8397
  br label %do.body, !dbg !8398

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8399

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8401
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !8401
  br i1 %tobool, label %if.end, label %if.then, !dbg !8403

if.then:                                          ; preds = %do.end
  br label %return, !dbg !8404

if.end:                                           ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8405, metadata !DIExpression()), !dbg !8408
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8408
  %enable_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 18, !dbg !8408
  %2 = load i32, i32* %enable_count, align 4, !dbg !8408
  %cmp = icmp eq i32 %2, 0, !dbg !8408
  %lnot = xor i1 %cmp, true, !dbg !8408
  %lnot1 = xor i1 %lnot, true, !dbg !8408
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8408
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8408
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8409
  %tobool2 = icmp ne i32 %3, 0, !dbg !8409
  %lnot3 = xor i1 %tobool2, true, !dbg !8409
  %lnot5 = xor i1 %lnot3, true, !dbg !8409
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !8409
  %conv = sext i32 %lnot.ext6 to i64, !dbg !8409
  %tobool7 = icmp ne i64 %conv, 0, !dbg !8409
  br i1 %tobool7, label %if.then8, label %if.end23, !dbg !8408

if.then8:                                         ; preds = %if.end
  br label %do.body9, !dbg !8409

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !8411

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !8413

do.end11:                                         ; preds = %do.body10
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8411
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 0, !dbg !8411
  %5 = load i8*, i8** %name, align 8, !dbg !8411
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i8* %5) #11, !dbg !8411
  br label %do.body12, !dbg !8411

do.body12:                                        ; preds = %do.end11
  br label %do.body13, !dbg !8415

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !8417

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !8415

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 952, i32 2313, i64 12) #10, !dbg !8419, !srcloc !8421
  br label %do.end16, !dbg !8419

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 190) #10, !dbg !8422, !srcloc !8424
  br label %do.body17, !dbg !8415

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !8425

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !8415

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !8411

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !8427

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !8411

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !8411

if.end23:                                         ; preds = %do.end22, %if.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !8408
  %tobool24 = icmp ne i32 %6, 0, !dbg !8408
  %lnot25 = xor i1 %tobool24, true, !dbg !8408
  %lnot27 = xor i1 %lnot25, true, !dbg !8408
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !8408
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !8408
  store i64 %conv29, i64* %tmp, align 8, !dbg !8409
  %7 = load i64, i64* %tmp, align 8, !dbg !8408
  %tobool30 = icmp ne i64 %7, 0, !dbg !8429
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !8430

if.then31:                                        ; preds = %if.end23
  br label %return, !dbg !8431

if.end32:                                         ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on33, metadata !8432, metadata !DIExpression()), !dbg !8435
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8435
  %enable_count34 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 18, !dbg !8435
  %9 = load i32, i32* %enable_count34, align 4, !dbg !8435
  %cmp35 = icmp eq i32 %9, 1, !dbg !8435
  br i1 %cmp35, label %land.rhs, label %land.end, !dbg !8435

land.rhs:                                         ; preds = %if.end32
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8435
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 15, !dbg !8435
  %11 = load i64, i64* %flags, align 8, !dbg !8435
  %and = and i64 %11, 2048, !dbg !8435
  %tobool37 = icmp ne i64 %and, 0, !dbg !8435
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %12 = phi i1 [ false, %if.end32 ], [ %tobool37, %land.rhs ], !dbg !8436
  %lnot38 = xor i1 %12, true, !dbg !8435
  %lnot40 = xor i1 %lnot38, true, !dbg !8435
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !8435
  store i32 %lnot.ext41, i32* %__ret_warn_on33, align 4, !dbg !8435
  %13 = load i32, i32* %__ret_warn_on33, align 4, !dbg !8437
  %tobool42 = icmp ne i32 %13, 0, !dbg !8437
  %lnot43 = xor i1 %tobool42, true, !dbg !8437
  %lnot45 = xor i1 %lnot43, true, !dbg !8437
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !8437
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !8437
  %tobool48 = icmp ne i64 %conv47, 0, !dbg !8437
  br i1 %tobool48, label %if.then49, label %if.end65, !dbg !8435

if.then49:                                        ; preds = %land.end
  br label %do.body50, !dbg !8437

do.body50:                                        ; preds = %if.then49
  br label %do.body51, !dbg !8439

do.body51:                                        ; preds = %do.body50
  br label %do.end52, !dbg !8441

do.end52:                                         ; preds = %do.body51
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8439
  %name53 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 0, !dbg !8439
  %15 = load i8*, i8** %name53, align 8, !dbg !8439
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* %15) #11, !dbg !8439
  br label %do.body54, !dbg !8439

do.body54:                                        ; preds = %do.end52
  br label %do.body55, !dbg !8443

do.body55:                                        ; preds = %do.body54
  br label %do.end56, !dbg !8445

do.end56:                                         ; preds = %do.body55
  br label %do.body57, !dbg !8443

do.body57:                                        ; preds = %do.end56
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 956, i32 2313, i64 12) #10, !dbg !8447, !srcloc !8449
  br label %do.end58, !dbg !8447

do.end58:                                         ; preds = %do.body57
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 191) #10, !dbg !8450, !srcloc !8452
  br label %do.body59, !dbg !8443

do.body59:                                        ; preds = %do.end58
  br label %do.end60, !dbg !8453

do.end60:                                         ; preds = %do.body59
  br label %do.end61, !dbg !8443

do.end61:                                         ; preds = %do.end60
  br label %do.body62, !dbg !8439

do.body62:                                        ; preds = %do.end61
  br label %do.end63, !dbg !8455

do.end63:                                         ; preds = %do.body62
  br label %do.end64, !dbg !8439

do.end64:                                         ; preds = %do.end63
  br label %if.end65, !dbg !8439

if.end65:                                         ; preds = %do.end64, %land.end
  %16 = load i32, i32* %__ret_warn_on33, align 4, !dbg !8435
  %tobool67 = icmp ne i32 %16, 0, !dbg !8435
  %lnot68 = xor i1 %tobool67, true, !dbg !8435
  %lnot70 = xor i1 %lnot68, true, !dbg !8435
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !8435
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !8435
  store i64 %conv72, i64* %tmp66, align 8, !dbg !8437
  %17 = load i64, i64* %tmp66, align 8, !dbg !8435
  %tobool73 = icmp ne i64 %17, 0, !dbg !8457
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !8458

if.then74:                                        ; preds = %if.end65
  br label %return, !dbg !8459

if.end75:                                         ; preds = %if.end65
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8460
  %enable_count76 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %18, i32 0, i32 18, !dbg !8462
  %19 = load i32, i32* %enable_count76, align 4, !dbg !8463
  %dec = add i32 %19, -1, !dbg !8463
  store i32 %dec, i32* %enable_count76, align 4, !dbg !8463
  %cmp77 = icmp ugt i32 %dec, 0, !dbg !8464
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !8465

if.then79:                                        ; preds = %if.end75
  br label %return, !dbg !8466

if.end80:                                         ; preds = %if.end75
  %20 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8467
  call void @trace_clk_disable_rcuidle(%struct.clk_core* %20) #11, !dbg !8468
  %21 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8469
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %21, i32 0, i32 1, !dbg !8471
  %22 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !8471
  %disable = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %22, i32 0, i32 5, !dbg !8472
  %23 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %disable, align 8, !dbg !8472
  %tobool81 = icmp ne void (%struct.clk_hw*)* %23, null, !dbg !8469
  br i1 %tobool81, label %if.then82, label %if.end85, !dbg !8473

if.then82:                                        ; preds = %if.end80
  %24 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8474
  %ops83 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %24, i32 0, i32 1, !dbg !8475
  %25 = load %struct.clk_ops*, %struct.clk_ops** %ops83, align 8, !dbg !8475
  %disable84 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %25, i32 0, i32 5, !dbg !8476
  %26 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %disable84, align 8, !dbg !8476
  %27 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8477
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %27, i32 0, i32 2, !dbg !8478
  %28 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !8478
  call void %26(%struct.clk_hw* %28) #11, !dbg !8474
  br label %if.end85, !dbg !8474

if.end85:                                         ; preds = %if.then82, %if.end80
  %29 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8479
  call void @trace_clk_disable_complete_rcuidle(%struct.clk_core* %29) #11, !dbg !8480
  %30 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8481
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %30, i32 0, i32 6, !dbg !8482
  %31 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !8482
  call void @clk_core_disable(%struct.clk_core* %31) #11, !dbg !8483
  br label %return, !dbg !8484

return:                                           ; preds = %if.end85, %if.then79, %if.then74, %if.then31, %if.then
  ret void, !dbg !8484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_disable_rcuidle(%struct.clk_core* %core) #0 !dbg !8485 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8486, metadata !DIExpression()), !dbg !8487
  ret void, !dbg !8487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_disable_complete_rcuidle(%struct.clk_core* %core) #0 !dbg !8488 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8489, metadata !DIExpression()), !dbg !8490
  ret void, !dbg !8490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_enable(%struct.clk_core* %core) #0 !dbg !8491 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8492, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8494, metadata !DIExpression()), !dbg !8495
  store i32 0, i32* %ret, align 4, !dbg !8495
  br label %do.body, !dbg !8496

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8497

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8499
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !8499
  br i1 %tobool, label %if.end, label %if.then, !dbg !8501

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !8502
  br label %return, !dbg !8502

if.end:                                           ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8503, metadata !DIExpression()), !dbg !8506
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8506
  %prepare_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 19, !dbg !8506
  %2 = load i32, i32* %prepare_count, align 8, !dbg !8506
  %cmp = icmp eq i32 %2, 0, !dbg !8506
  %lnot = xor i1 %cmp, true, !dbg !8506
  %lnot1 = xor i1 %lnot, true, !dbg !8506
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8506
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8506
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8507
  %tobool2 = icmp ne i32 %3, 0, !dbg !8507
  %lnot3 = xor i1 %tobool2, true, !dbg !8507
  %lnot5 = xor i1 %lnot3, true, !dbg !8507
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !8507
  %conv = sext i32 %lnot.ext6 to i64, !dbg !8507
  %tobool7 = icmp ne i64 %conv, 0, !dbg !8507
  br i1 %tobool7, label %if.then8, label %if.end23, !dbg !8506

if.then8:                                         ; preds = %if.end
  br label %do.body9, !dbg !8507

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !8509

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !8511

do.end11:                                         ; preds = %do.body10
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8509
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 0, !dbg !8509
  %5 = load i8*, i8** %name, align 8, !dbg !8509
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0), i8* %5) #11, !dbg !8509
  br label %do.body12, !dbg !8509

do.body12:                                        ; preds = %do.end11
  br label %do.body13, !dbg !8513

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !8515

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !8513

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1012, i32 2313, i64 12) #10, !dbg !8517, !srcloc !8519
  br label %do.end16, !dbg !8517

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 192) #10, !dbg !8520, !srcloc !8522
  br label %do.body17, !dbg !8513

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !8523

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !8513

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !8509

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !8525

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !8509

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !8509

if.end23:                                         ; preds = %do.end22, %if.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !8506
  %tobool24 = icmp ne i32 %6, 0, !dbg !8506
  %lnot25 = xor i1 %tobool24, true, !dbg !8506
  %lnot27 = xor i1 %lnot25, true, !dbg !8506
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !8506
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !8506
  store i64 %conv29, i64* %tmp, align 8, !dbg !8507
  %7 = load i64, i64* %tmp, align 8, !dbg !8506
  %tobool30 = icmp ne i64 %7, 0, !dbg !8527
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !8528

if.then31:                                        ; preds = %if.end23
  store i32 -108, i32* %retval, align 4, !dbg !8529
  br label %return, !dbg !8529

if.end32:                                         ; preds = %if.end23
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8530
  %enable_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 18, !dbg !8532
  %9 = load i32, i32* %enable_count, align 4, !dbg !8532
  %cmp33 = icmp eq i32 %9, 0, !dbg !8533
  br i1 %cmp33, label %if.then35, label %if.end49, !dbg !8534

if.then35:                                        ; preds = %if.end32
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8535
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 6, !dbg !8537
  %11 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !8537
  %call = call i32 @clk_core_enable(%struct.clk_core* %11) #11, !dbg !8538
  store i32 %call, i32* %ret, align 4, !dbg !8539
  %12 = load i32, i32* %ret, align 4, !dbg !8540
  %tobool36 = icmp ne i32 %12, 0, !dbg !8540
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !8542

if.then37:                                        ; preds = %if.then35
  %13 = load i32, i32* %ret, align 4, !dbg !8543
  store i32 %13, i32* %retval, align 4, !dbg !8544
  br label %return, !dbg !8544

if.end38:                                         ; preds = %if.then35
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8545
  call void @trace_clk_enable_rcuidle(%struct.clk_core* %14) #11, !dbg !8546
  %15 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8547
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %15, i32 0, i32 1, !dbg !8549
  %16 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !8549
  %enable = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %16, i32 0, i32 4, !dbg !8550
  %17 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %enable, align 8, !dbg !8550
  %tobool39 = icmp ne i32 (%struct.clk_hw*)* %17, null, !dbg !8547
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !8551

if.then40:                                        ; preds = %if.end38
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8552
  %ops41 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %18, i32 0, i32 1, !dbg !8553
  %19 = load %struct.clk_ops*, %struct.clk_ops** %ops41, align 8, !dbg !8553
  %enable42 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %19, i32 0, i32 4, !dbg !8554
  %20 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %enable42, align 8, !dbg !8554
  %21 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8555
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %21, i32 0, i32 2, !dbg !8556
  %22 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !8556
  %call43 = call i32 %20(%struct.clk_hw* %22) #11, !dbg !8552
  store i32 %call43, i32* %ret, align 4, !dbg !8557
  br label %if.end44, !dbg !8558

if.end44:                                         ; preds = %if.then40, %if.end38
  %23 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8559
  call void @trace_clk_enable_complete_rcuidle(%struct.clk_core* %23) #11, !dbg !8560
  %24 = load i32, i32* %ret, align 4, !dbg !8561
  %tobool45 = icmp ne i32 %24, 0, !dbg !8561
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !8563

if.then46:                                        ; preds = %if.end44
  %25 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8564
  %parent47 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %25, i32 0, i32 6, !dbg !8566
  %26 = load %struct.clk_core*, %struct.clk_core** %parent47, align 8, !dbg !8566
  call void @clk_core_disable(%struct.clk_core* %26) #11, !dbg !8567
  %27 = load i32, i32* %ret, align 4, !dbg !8568
  store i32 %27, i32* %retval, align 4, !dbg !8569
  br label %return, !dbg !8569

if.end48:                                         ; preds = %if.end44
  br label %if.end49, !dbg !8570

if.end49:                                         ; preds = %if.end48, %if.end32
  %28 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8571
  %enable_count50 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %28, i32 0, i32 18, !dbg !8572
  %29 = load i32, i32* %enable_count50, align 4, !dbg !8573
  %inc = add i32 %29, 1, !dbg !8573
  store i32 %inc, i32* %enable_count50, align 4, !dbg !8573
  store i32 0, i32* %retval, align 4, !dbg !8574
  br label %return, !dbg !8574

return:                                           ; preds = %if.end49, %if.then46, %if.then37, %if.then31, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !8575
  ret i32 %30, !dbg !8575
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_enable_rcuidle(%struct.clk_core* %core) #0 !dbg !8576 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8577, metadata !DIExpression()), !dbg !8578
  ret void, !dbg !8578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_enable_complete_rcuidle(%struct.clk_core* %core) #0 !dbg !8579 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8580, metadata !DIExpression()), !dbg !8581
  ret void, !dbg !8581
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @clk_disable_unused_subtree(%struct.clk_core* %core) #3 section ".init.text" !dbg !8582 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %child = alloca %struct.clk_core*, align 8
  %flags = alloca i64, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.clk_core*, align 8
  %____ptr5 = alloca %struct.hlist_node*, align 8
  %tmp6 = alloca %struct.clk_core*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp12 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8583, metadata !DIExpression()), !dbg !8584
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !8585, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8587, metadata !DIExpression()), !dbg !8588
  br label %do.body, !dbg !8589

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8590

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !8592, metadata !DIExpression()), !dbg !8595
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8595
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 26, !dbg !8595
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !8595
  %1 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !8595
  store %struct.hlist_node* %1, %struct.hlist_node** %____ptr, align 8, !dbg !8595
  %2 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !8595
  %tobool = icmp ne %struct.hlist_node* %2, null, !dbg !8595
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8595

cond.true:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8596, metadata !DIExpression()), !dbg !8598
  %3 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !8598
  %4 = bitcast %struct.hlist_node* %3 to i8*, !dbg !8598
  store i8* %4, i8** %__mptr, align 8, !dbg !8598
  br label %do.body1, !dbg !8598

do.body1:                                         ; preds = %cond.true
  br label %do.end2, !dbg !8599

do.end2:                                          ; preds = %do.body1
  %5 = load i8*, i8** %__mptr, align 8, !dbg !8598
  %add.ptr = getelementptr i8, i8* %5, i64 -184, !dbg !8598
  %6 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !8598
  store %struct.clk_core* %6, %struct.clk_core** %tmp3, align 8, !dbg !8599
  %7 = load %struct.clk_core*, %struct.clk_core** %tmp3, align 8, !dbg !8598
  br label %cond.end, !dbg !8595

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !8595

cond.end:                                         ; preds = %cond.false, %do.end2
  %cond = phi %struct.clk_core* [ %7, %do.end2 ], [ null, %cond.false ], !dbg !8595
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !8595
  %8 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !8595
  store %struct.clk_core* %8, %struct.clk_core** %child, align 8, !dbg !8601
  br label %for.cond, !dbg !8601

for.cond:                                         ; preds = %cond.end15, %cond.end
  %9 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8602
  %tobool4 = icmp ne %struct.clk_core* %9, null, !dbg !8601
  br i1 %tobool4, label %for.body, label %for.end, !dbg !8601

for.body:                                         ; preds = %for.cond
  %10 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8604
  call void @clk_disable_unused_subtree(%struct.clk_core* %10) #13, !dbg !8605
  br label %for.inc, !dbg !8605

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr5, metadata !8606, metadata !DIExpression()), !dbg !8608
  %11 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8608
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 27, !dbg !8608
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !8608
  %12 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !8608
  store %struct.hlist_node* %12, %struct.hlist_node** %____ptr5, align 8, !dbg !8608
  %13 = load %struct.hlist_node*, %struct.hlist_node** %____ptr5, align 8, !dbg !8608
  %tobool7 = icmp ne %struct.hlist_node* %13, null, !dbg !8608
  br i1 %tobool7, label %cond.true8, label %cond.false14, !dbg !8608

cond.true8:                                       ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !8609, metadata !DIExpression()), !dbg !8611
  %14 = load %struct.hlist_node*, %struct.hlist_node** %____ptr5, align 8, !dbg !8611
  %15 = bitcast %struct.hlist_node* %14 to i8*, !dbg !8611
  store i8* %15, i8** %__mptr9, align 8, !dbg !8611
  br label %do.body10, !dbg !8611

do.body10:                                        ; preds = %cond.true8
  br label %do.end11, !dbg !8612

do.end11:                                         ; preds = %do.body10
  %16 = load i8*, i8** %__mptr9, align 8, !dbg !8611
  %add.ptr13 = getelementptr i8, i8* %16, i64 -184, !dbg !8611
  %17 = bitcast i8* %add.ptr13 to %struct.clk_core*, !dbg !8611
  store %struct.clk_core* %17, %struct.clk_core** %tmp12, align 8, !dbg !8612
  %18 = load %struct.clk_core*, %struct.clk_core** %tmp12, align 8, !dbg !8611
  br label %cond.end15, !dbg !8608

cond.false14:                                     ; preds = %for.inc
  br label %cond.end15, !dbg !8608

cond.end15:                                       ; preds = %cond.false14, %do.end11
  %cond16 = phi %struct.clk_core* [ %18, %do.end11 ], [ null, %cond.false14 ], !dbg !8608
  store %struct.clk_core* %cond16, %struct.clk_core** %tmp6, align 8, !dbg !8608
  %19 = load %struct.clk_core*, %struct.clk_core** %tmp6, align 8, !dbg !8608
  store %struct.clk_core* %19, %struct.clk_core** %child, align 8, !dbg !8602
  br label %for.cond, !dbg !8602, !llvm.loop !8614

for.end:                                          ; preds = %for.cond
  %20 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8616
  %flags17 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %20, i32 0, i32 15, !dbg !8618
  %21 = load i64, i64* %flags17, align 8, !dbg !8618
  %and = and i64 %21, 4096, !dbg !8619
  %tobool18 = icmp ne i64 %and, 0, !dbg !8619
  br i1 %tobool18, label %if.then, label %if.end, !dbg !8620

if.then:                                          ; preds = %for.end
  %22 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8621
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %22, i32 0, i32 6, !dbg !8622
  %23 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !8622
  %call = call i32 @clk_core_prepare_enable(%struct.clk_core* %23) #11, !dbg !8623
  br label %if.end, !dbg !8623

if.end:                                           ; preds = %if.then, %for.end
  %24 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8624
  %call19 = call i32 @clk_pm_runtime_get(%struct.clk_core* %24) #11, !dbg !8626
  %tobool20 = icmp ne i32 %call19, 0, !dbg !8626
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !8627

if.then21:                                        ; preds = %if.end
  br label %unprepare_out, !dbg !8628

if.end22:                                         ; preds = %if.end
  %call23 = call i64 @clk_enable_lock() #11, !dbg !8629
  store i64 %call23, i64* %flags, align 8, !dbg !8630
  %25 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8631
  %enable_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %25, i32 0, i32 18, !dbg !8633
  %26 = load i32, i32* %enable_count, align 4, !dbg !8633
  %tobool24 = icmp ne i32 %26, 0, !dbg !8631
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !8634

if.then25:                                        ; preds = %if.end22
  br label %unlock_out, !dbg !8635

if.end26:                                         ; preds = %if.end22
  %27 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8636
  %flags27 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %27, i32 0, i32 15, !dbg !8638
  %28 = load i64, i64* %flags27, align 8, !dbg !8638
  %and28 = and i64 %28, 8, !dbg !8639
  %tobool29 = icmp ne i64 %and28, 0, !dbg !8639
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !8640

if.then30:                                        ; preds = %if.end26
  br label %unlock_out, !dbg !8641

if.end31:                                         ; preds = %if.end26
  %29 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8642
  %call32 = call zeroext i1 @clk_core_is_enabled(%struct.clk_core* %29) #11, !dbg !8644
  br i1 %call32, label %if.then33, label %if.end46, !dbg !8645

if.then33:                                        ; preds = %if.end31
  %30 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8646
  call void @trace_clk_disable(%struct.clk_core* %30) #11, !dbg !8648
  %31 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8649
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %31, i32 0, i32 1, !dbg !8651
  %32 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !8651
  %disable_unused = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %32, i32 0, i32 7, !dbg !8652
  %33 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %disable_unused, align 8, !dbg !8652
  %tobool34 = icmp ne void (%struct.clk_hw*)* %33, null, !dbg !8649
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !8653

if.then35:                                        ; preds = %if.then33
  %34 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8654
  %ops36 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %34, i32 0, i32 1, !dbg !8655
  %35 = load %struct.clk_ops*, %struct.clk_ops** %ops36, align 8, !dbg !8655
  %disable_unused37 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %35, i32 0, i32 7, !dbg !8656
  %36 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %disable_unused37, align 8, !dbg !8656
  %37 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8657
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %37, i32 0, i32 2, !dbg !8658
  %38 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !8658
  call void %36(%struct.clk_hw* %38) #11, !dbg !8654
  br label %if.end45, !dbg !8654

if.else:                                          ; preds = %if.then33
  %39 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8659
  %ops38 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %39, i32 0, i32 1, !dbg !8661
  %40 = load %struct.clk_ops*, %struct.clk_ops** %ops38, align 8, !dbg !8661
  %disable = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %40, i32 0, i32 5, !dbg !8662
  %41 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %disable, align 8, !dbg !8662
  %tobool39 = icmp ne void (%struct.clk_hw*)* %41, null, !dbg !8659
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !8663

if.then40:                                        ; preds = %if.else
  %42 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8664
  %ops41 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %42, i32 0, i32 1, !dbg !8665
  %43 = load %struct.clk_ops*, %struct.clk_ops** %ops41, align 8, !dbg !8665
  %disable42 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %43, i32 0, i32 5, !dbg !8666
  %44 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %disable42, align 8, !dbg !8666
  %45 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8667
  %hw43 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %45, i32 0, i32 2, !dbg !8668
  %46 = load %struct.clk_hw*, %struct.clk_hw** %hw43, align 8, !dbg !8668
  call void %44(%struct.clk_hw* %46) #11, !dbg !8664
  br label %if.end44, !dbg !8664

if.end44:                                         ; preds = %if.then40, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then35
  %47 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8669
  call void @trace_clk_disable_complete(%struct.clk_core* %47) #11, !dbg !8670
  br label %if.end46, !dbg !8671

if.end46:                                         ; preds = %if.end45, %if.end31
  br label %unlock_out, !dbg !8672

unlock_out:                                       ; preds = %if.end46, %if.then30, %if.then25
  call void @llvm.dbg.label(metadata !8673), !dbg !8674
  %48 = load i64, i64* %flags, align 8, !dbg !8675
  call void @clk_enable_unlock(i64 %48) #11, !dbg !8676
  %49 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8677
  call void @clk_pm_runtime_put(%struct.clk_core* %49) #11, !dbg !8678
  br label %unprepare_out, !dbg !8678

unprepare_out:                                    ; preds = %unlock_out, %if.then21
  call void @llvm.dbg.label(metadata !8679), !dbg !8680
  %50 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8681
  %flags47 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %50, i32 0, i32 15, !dbg !8683
  %51 = load i64, i64* %flags47, align 8, !dbg !8683
  %and48 = and i64 %51, 4096, !dbg !8684
  %tobool49 = icmp ne i64 %and48, 0, !dbg !8684
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !8685

if.then50:                                        ; preds = %unprepare_out
  %52 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8686
  %parent51 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %52, i32 0, i32 6, !dbg !8687
  %53 = load %struct.clk_core*, %struct.clk_core** %parent51, align 8, !dbg !8687
  call void @clk_core_disable_unprepare(%struct.clk_core* %53) #11, !dbg !8688
  br label %if.end52, !dbg !8688

if.end52:                                         ; preds = %if.then50, %unprepare_out
  ret void, !dbg !8689
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @clk_unprepare_unused_subtree(%struct.clk_core* %core) #3 section ".init.text" !dbg !8690 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %child = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.clk_core*, align 8
  %____ptr5 = alloca %struct.hlist_node*, align 8
  %tmp6 = alloca %struct.clk_core*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp12 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8691, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !8693, metadata !DIExpression()), !dbg !8694
  br label %do.body, !dbg !8695

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8696

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !8698, metadata !DIExpression()), !dbg !8701
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8701
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 26, !dbg !8701
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !8701
  %1 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !8701
  store %struct.hlist_node* %1, %struct.hlist_node** %____ptr, align 8, !dbg !8701
  %2 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !8701
  %tobool = icmp ne %struct.hlist_node* %2, null, !dbg !8701
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8701

cond.true:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8702, metadata !DIExpression()), !dbg !8704
  %3 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !8704
  %4 = bitcast %struct.hlist_node* %3 to i8*, !dbg !8704
  store i8* %4, i8** %__mptr, align 8, !dbg !8704
  br label %do.body1, !dbg !8704

do.body1:                                         ; preds = %cond.true
  br label %do.end2, !dbg !8705

do.end2:                                          ; preds = %do.body1
  %5 = load i8*, i8** %__mptr, align 8, !dbg !8704
  %add.ptr = getelementptr i8, i8* %5, i64 -184, !dbg !8704
  %6 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !8704
  store %struct.clk_core* %6, %struct.clk_core** %tmp3, align 8, !dbg !8705
  %7 = load %struct.clk_core*, %struct.clk_core** %tmp3, align 8, !dbg !8704
  br label %cond.end, !dbg !8701

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !8701

cond.end:                                         ; preds = %cond.false, %do.end2
  %cond = phi %struct.clk_core* [ %7, %do.end2 ], [ null, %cond.false ], !dbg !8701
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !8701
  %8 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !8701
  store %struct.clk_core* %8, %struct.clk_core** %child, align 8, !dbg !8707
  br label %for.cond, !dbg !8707

for.cond:                                         ; preds = %cond.end15, %cond.end
  %9 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8708
  %tobool4 = icmp ne %struct.clk_core* %9, null, !dbg !8707
  br i1 %tobool4, label %for.body, label %for.end, !dbg !8707

for.body:                                         ; preds = %for.cond
  %10 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8710
  call void @clk_unprepare_unused_subtree(%struct.clk_core* %10) #13, !dbg !8711
  br label %for.inc, !dbg !8711

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr5, metadata !8712, metadata !DIExpression()), !dbg !8714
  %11 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8714
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 27, !dbg !8714
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !8714
  %12 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !8714
  store %struct.hlist_node* %12, %struct.hlist_node** %____ptr5, align 8, !dbg !8714
  %13 = load %struct.hlist_node*, %struct.hlist_node** %____ptr5, align 8, !dbg !8714
  %tobool7 = icmp ne %struct.hlist_node* %13, null, !dbg !8714
  br i1 %tobool7, label %cond.true8, label %cond.false14, !dbg !8714

cond.true8:                                       ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !8715, metadata !DIExpression()), !dbg !8717
  %14 = load %struct.hlist_node*, %struct.hlist_node** %____ptr5, align 8, !dbg !8717
  %15 = bitcast %struct.hlist_node* %14 to i8*, !dbg !8717
  store i8* %15, i8** %__mptr9, align 8, !dbg !8717
  br label %do.body10, !dbg !8717

do.body10:                                        ; preds = %cond.true8
  br label %do.end11, !dbg !8718

do.end11:                                         ; preds = %do.body10
  %16 = load i8*, i8** %__mptr9, align 8, !dbg !8717
  %add.ptr13 = getelementptr i8, i8* %16, i64 -184, !dbg !8717
  %17 = bitcast i8* %add.ptr13 to %struct.clk_core*, !dbg !8717
  store %struct.clk_core* %17, %struct.clk_core** %tmp12, align 8, !dbg !8718
  %18 = load %struct.clk_core*, %struct.clk_core** %tmp12, align 8, !dbg !8717
  br label %cond.end15, !dbg !8714

cond.false14:                                     ; preds = %for.inc
  br label %cond.end15, !dbg !8714

cond.end15:                                       ; preds = %cond.false14, %do.end11
  %cond16 = phi %struct.clk_core* [ %18, %do.end11 ], [ null, %cond.false14 ], !dbg !8714
  store %struct.clk_core* %cond16, %struct.clk_core** %tmp6, align 8, !dbg !8714
  %19 = load %struct.clk_core*, %struct.clk_core** %tmp6, align 8, !dbg !8714
  store %struct.clk_core* %19, %struct.clk_core** %child, align 8, !dbg !8708
  br label %for.cond, !dbg !8708, !llvm.loop !8720

for.end:                                          ; preds = %for.cond
  %20 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8722
  %prepare_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %20, i32 0, i32 19, !dbg !8724
  %21 = load i32, i32* %prepare_count, align 8, !dbg !8724
  %tobool17 = icmp ne i32 %21, 0, !dbg !8722
  br i1 %tobool17, label %if.then, label %if.end, !dbg !8725

if.then:                                          ; preds = %for.end
  br label %return, !dbg !8726

if.end:                                           ; preds = %for.end
  %22 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8727
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %22, i32 0, i32 15, !dbg !8729
  %23 = load i64, i64* %flags, align 8, !dbg !8729
  %and = and i64 %23, 8, !dbg !8730
  %tobool18 = icmp ne i64 %and, 0, !dbg !8730
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !8731

if.then19:                                        ; preds = %if.end
  br label %return, !dbg !8732

if.end20:                                         ; preds = %if.end
  %24 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8733
  %call = call i32 @clk_pm_runtime_get(%struct.clk_core* %24) #11, !dbg !8735
  %tobool21 = icmp ne i32 %call, 0, !dbg !8735
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !8736

if.then22:                                        ; preds = %if.end20
  br label %return, !dbg !8737

if.end23:                                         ; preds = %if.end20
  %25 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8738
  %call24 = call zeroext i1 @clk_core_is_prepared(%struct.clk_core* %25) #11, !dbg !8740
  br i1 %call24, label %if.then25, label %if.end38, !dbg !8741

if.then25:                                        ; preds = %if.end23
  %26 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8742
  call void @trace_clk_unprepare(%struct.clk_core* %26) #11, !dbg !8744
  %27 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8745
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %27, i32 0, i32 1, !dbg !8747
  %28 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !8747
  %unprepare_unused = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %28, i32 0, i32 3, !dbg !8748
  %29 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %unprepare_unused, align 8, !dbg !8748
  %tobool26 = icmp ne void (%struct.clk_hw*)* %29, null, !dbg !8745
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !8749

if.then27:                                        ; preds = %if.then25
  %30 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8750
  %ops28 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %30, i32 0, i32 1, !dbg !8751
  %31 = load %struct.clk_ops*, %struct.clk_ops** %ops28, align 8, !dbg !8751
  %unprepare_unused29 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %31, i32 0, i32 3, !dbg !8752
  %32 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %unprepare_unused29, align 8, !dbg !8752
  %33 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8753
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %33, i32 0, i32 2, !dbg !8754
  %34 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !8754
  call void %32(%struct.clk_hw* %34) #11, !dbg !8750
  br label %if.end37, !dbg !8750

if.else:                                          ; preds = %if.then25
  %35 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8755
  %ops30 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %35, i32 0, i32 1, !dbg !8757
  %36 = load %struct.clk_ops*, %struct.clk_ops** %ops30, align 8, !dbg !8757
  %unprepare = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %36, i32 0, i32 1, !dbg !8758
  %37 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %unprepare, align 8, !dbg !8758
  %tobool31 = icmp ne void (%struct.clk_hw*)* %37, null, !dbg !8755
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !8759

if.then32:                                        ; preds = %if.else
  %38 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8760
  %ops33 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %38, i32 0, i32 1, !dbg !8761
  %39 = load %struct.clk_ops*, %struct.clk_ops** %ops33, align 8, !dbg !8761
  %unprepare34 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %39, i32 0, i32 1, !dbg !8762
  %40 = load void (%struct.clk_hw*)*, void (%struct.clk_hw*)** %unprepare34, align 8, !dbg !8762
  %41 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8763
  %hw35 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %41, i32 0, i32 2, !dbg !8764
  %42 = load %struct.clk_hw*, %struct.clk_hw** %hw35, align 8, !dbg !8764
  call void %40(%struct.clk_hw* %42) #11, !dbg !8760
  br label %if.end36, !dbg !8760

if.end36:                                         ; preds = %if.then32, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then27
  %43 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8765
  call void @trace_clk_unprepare_complete(%struct.clk_core* %43) #11, !dbg !8766
  br label %if.end38, !dbg !8767

if.end38:                                         ; preds = %if.end37, %if.end23
  %44 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8768
  call void @clk_pm_runtime_put(%struct.clk_core* %44) #11, !dbg !8769
  br label %return, !dbg !8770

return:                                           ; preds = %if.end38, %if.then22, %if.then19, %if.then
  ret void, !dbg !8770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_prepare_enable(%struct.clk_core* %core) #0 !dbg !8771 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8772, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8774, metadata !DIExpression()), !dbg !8775
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8776
  %call = call i32 @clk_core_prepare_lock(%struct.clk_core* %0) #11, !dbg !8777
  store i32 %call, i32* %ret, align 4, !dbg !8778
  %1 = load i32, i32* %ret, align 4, !dbg !8779
  %tobool = icmp ne i32 %1, 0, !dbg !8779
  br i1 %tobool, label %if.then, label %if.end, !dbg !8781

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !8782
  store i32 %2, i32* %retval, align 4, !dbg !8783
  br label %return, !dbg !8783

if.end:                                           ; preds = %entry
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8784
  %call1 = call i32 @clk_core_enable_lock(%struct.clk_core* %3) #11, !dbg !8785
  store i32 %call1, i32* %ret, align 4, !dbg !8786
  %4 = load i32, i32* %ret, align 4, !dbg !8787
  %tobool2 = icmp ne i32 %4, 0, !dbg !8787
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8789

if.then3:                                         ; preds = %if.end
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8790
  call void @clk_core_unprepare_lock(%struct.clk_core* %5) #11, !dbg !8791
  br label %if.end4, !dbg !8791

if.end4:                                          ; preds = %if.then3, %if.end
  %6 = load i32, i32* %ret, align 4, !dbg !8792
  store i32 %6, i32* %retval, align 4, !dbg !8793
  br label %return, !dbg !8793

return:                                           ; preds = %if.end4, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !8794
  ret i32 %7, !dbg !8794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_disable(%struct.clk_core* %core) #0 !dbg !8795 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8796, metadata !DIExpression()), !dbg !8797
  ret void, !dbg !8797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_disable_complete(%struct.clk_core* %core) #0 !dbg !8798 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8799, metadata !DIExpression()), !dbg !8800
  ret void, !dbg !8800
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_disable_unprepare(%struct.clk_core* %core) #0 !dbg !8801 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8802, metadata !DIExpression()), !dbg !8803
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8804
  call void @clk_core_disable_lock(%struct.clk_core* %0) #11, !dbg !8805
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8806
  call void @clk_core_unprepare_lock(%struct.clk_core* %1) #11, !dbg !8807
  ret void, !dbg !8808
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_init_rate_req(%struct.clk_core* %core, %struct.clk_rate_request* %req) #0 !dbg !8809 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %req.addr = alloca %struct.clk_rate_request*, align 8
  %parent = alloca %struct.clk_core*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8813, metadata !DIExpression()), !dbg !8814
  store %struct.clk_rate_request* %req, %struct.clk_rate_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request** %req.addr, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent, metadata !8817, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8819, metadata !DIExpression()), !dbg !8822
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8822
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !8822
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !8822

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !8822
  %tobool1 = icmp ne %struct.clk_rate_request* %1, null, !dbg !8822
  %lnot = xor i1 %tobool1, true, !dbg !8822
  br label %lor.end, !dbg !8822

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %2, true, !dbg !8822
  %lnot3 = xor i1 %lnot2, true, !dbg !8822
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !8822
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8822
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8823
  %tobool4 = icmp ne i32 %3, 0, !dbg !8823
  %lnot5 = xor i1 %tobool4, true, !dbg !8823
  %lnot7 = xor i1 %lnot5, true, !dbg !8823
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !8823
  %conv = sext i32 %lnot.ext8 to i64, !dbg !8823
  %tobool9 = icmp ne i64 %conv, 0, !dbg !8823
  br i1 %tobool9, label %if.then, label %if.end, !dbg !8822

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !8823

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !8825

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !8827

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !8825

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1340, i32 2305, i64 12) #10, !dbg !8829, !srcloc !8831
  br label %do.end12, !dbg !8829

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 218) #10, !dbg !8832, !srcloc !8834
  br label %do.body13, !dbg !8825

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !8835

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !8825

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !8825

if.end:                                           ; preds = %do.end15, %lor.end
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !8822
  %tobool16 = icmp ne i32 %4, 0, !dbg !8822
  %lnot17 = xor i1 %tobool16, true, !dbg !8822
  %lnot19 = xor i1 %lnot17, true, !dbg !8822
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !8822
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !8822
  store i64 %conv21, i64* %tmp, align 8, !dbg !8823
  %5 = load i64, i64* %tmp, align 8, !dbg !8822
  %tobool22 = icmp ne i64 %5, 0, !dbg !8837
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !8838

if.then23:                                        ; preds = %if.end
  br label %if.end30, !dbg !8839

if.end24:                                         ; preds = %if.end
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8840
  %parent25 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 6, !dbg !8841
  %7 = load %struct.clk_core*, %struct.clk_core** %parent25, align 8, !dbg !8841
  store %struct.clk_core* %7, %struct.clk_core** %parent, align 8, !dbg !8842
  %8 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !8843
  %tobool26 = icmp ne %struct.clk_core* %8, null, !dbg !8843
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !8845

if.then27:                                        ; preds = %if.end24
  %9 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !8846
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 2, !dbg !8848
  %10 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !8848
  %11 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !8849
  %best_parent_hw = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %11, i32 0, i32 4, !dbg !8850
  store %struct.clk_hw* %10, %struct.clk_hw** %best_parent_hw, align 8, !dbg !8851
  %12 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !8852
  %rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %12, i32 0, i32 10, !dbg !8853
  %13 = load i64, i64* %rate, align 8, !dbg !8853
  %14 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !8854
  %best_parent_rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %14, i32 0, i32 3, !dbg !8855
  store i64 %13, i64* %best_parent_rate, align 8, !dbg !8856
  br label %if.end30, !dbg !8857

if.else:                                          ; preds = %if.end24
  %15 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !8858
  %best_parent_hw28 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %15, i32 0, i32 4, !dbg !8860
  store %struct.clk_hw* null, %struct.clk_hw** %best_parent_hw28, align 8, !dbg !8861
  %16 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !8862
  %best_parent_rate29 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %16, i32 0, i32 3, !dbg !8863
  store i64 0, i64* %best_parent_rate29, align 8, !dbg !8864
  br label %if.end30

if.end30:                                         ; preds = %if.then23, %if.else, %if.then27
  ret void, !dbg !8865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @clk_core_can_round(%struct.clk_core* %core) #0 !dbg !8866 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8869, metadata !DIExpression()), !dbg !8870
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8871
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 1, !dbg !8872
  %1 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !8872
  %determine_rate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %1, i32 0, i32 12, !dbg !8873
  %2 = load i32 (%struct.clk_hw*, %struct.clk_rate_request*)*, i32 (%struct.clk_hw*, %struct.clk_rate_request*)** %determine_rate, align 8, !dbg !8873
  %tobool = icmp ne i32 (%struct.clk_hw*, %struct.clk_rate_request*)* %2, null, !dbg !8871
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !8874

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8875
  %ops1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 1, !dbg !8876
  %4 = load %struct.clk_ops*, %struct.clk_ops** %ops1, align 8, !dbg !8876
  %round_rate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %4, i32 0, i32 11, !dbg !8877
  %5 = load i64 (%struct.clk_hw*, i64, i64*)*, i64 (%struct.clk_hw*, i64, i64*)** %round_rate, align 8, !dbg !8877
  %tobool2 = icmp ne i64 (%struct.clk_hw*, i64, i64*)* %5, null, !dbg !8874
  br label %lor.end, !dbg !8874

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  ret i1 %6, !dbg !8878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_determine_round_nolock(%struct.clk_core* %core, %struct.clk_rate_request* %req) #0 !dbg !8879 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %req.addr = alloca %struct.clk_rate_request*, align 8
  %rate = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8880, metadata !DIExpression()), !dbg !8881
  store %struct.clk_rate_request* %req, %struct.clk_rate_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request** %req.addr, metadata !8882, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.declare(metadata i64* %rate, metadata !8884, metadata !DIExpression()), !dbg !8885
  br label %do.body, !dbg !8886

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8887

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8889
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !8889
  br i1 %tobool, label %if.end, label %if.then, !dbg !8891

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !8892
  br label %return, !dbg !8892

if.end:                                           ; preds = %do.end
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8893
  %call = call zeroext i1 @clk_core_rate_is_protected(%struct.clk_core* %1) #11, !dbg !8895
  br i1 %call, label %if.then1, label %if.else, !dbg !8896

if.then1:                                         ; preds = %if.end
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8897
  %rate2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 10, !dbg !8899
  %3 = load i64, i64* %rate2, align 8, !dbg !8899
  %4 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !8900
  %rate3 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %4, i32 0, i32 0, !dbg !8901
  store i64 %3, i64* %rate3, align 8, !dbg !8902
  br label %if.end24, !dbg !8903

if.else:                                          ; preds = %if.end
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8904
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 1, !dbg !8906
  %6 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !8906
  %determine_rate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %6, i32 0, i32 12, !dbg !8907
  %7 = load i32 (%struct.clk_hw*, %struct.clk_rate_request*)*, i32 (%struct.clk_hw*, %struct.clk_rate_request*)** %determine_rate, align 8, !dbg !8907
  %tobool4 = icmp ne i32 (%struct.clk_hw*, %struct.clk_rate_request*)* %7, null, !dbg !8904
  br i1 %tobool4, label %if.then5, label %if.else9, !dbg !8908

if.then5:                                         ; preds = %if.else
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8909
  %ops6 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 1, !dbg !8911
  %9 = load %struct.clk_ops*, %struct.clk_ops** %ops6, align 8, !dbg !8911
  %determine_rate7 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %9, i32 0, i32 12, !dbg !8912
  %10 = load i32 (%struct.clk_hw*, %struct.clk_rate_request*)*, i32 (%struct.clk_hw*, %struct.clk_rate_request*)** %determine_rate7, align 8, !dbg !8912
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8913
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 2, !dbg !8914
  %12 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !8914
  %13 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !8915
  %call8 = call i32 %10(%struct.clk_hw* %12, %struct.clk_rate_request* %13) #11, !dbg !8909
  store i32 %call8, i32* %retval, align 4, !dbg !8916
  br label %return, !dbg !8916

if.else9:                                         ; preds = %if.else
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8917
  %ops10 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 1, !dbg !8919
  %15 = load %struct.clk_ops*, %struct.clk_ops** %ops10, align 8, !dbg !8919
  %round_rate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %15, i32 0, i32 11, !dbg !8920
  %16 = load i64 (%struct.clk_hw*, i64, i64*)*, i64 (%struct.clk_hw*, i64, i64*)** %round_rate, align 8, !dbg !8920
  %tobool11 = icmp ne i64 (%struct.clk_hw*, i64, i64*)* %16, null, !dbg !8917
  br i1 %tobool11, label %if.then12, label %if.else21, !dbg !8921

if.then12:                                        ; preds = %if.else9
  %17 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8922
  %ops13 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %17, i32 0, i32 1, !dbg !8924
  %18 = load %struct.clk_ops*, %struct.clk_ops** %ops13, align 8, !dbg !8924
  %round_rate14 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %18, i32 0, i32 11, !dbg !8925
  %19 = load i64 (%struct.clk_hw*, i64, i64*)*, i64 (%struct.clk_hw*, i64, i64*)** %round_rate14, align 8, !dbg !8925
  %20 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8926
  %hw15 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %20, i32 0, i32 2, !dbg !8927
  %21 = load %struct.clk_hw*, %struct.clk_hw** %hw15, align 8, !dbg !8927
  %22 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !8928
  %rate16 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %22, i32 0, i32 0, !dbg !8929
  %23 = load i64, i64* %rate16, align 8, !dbg !8929
  %24 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !8930
  %best_parent_rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %24, i32 0, i32 3, !dbg !8931
  %call17 = call i64 %19(%struct.clk_hw* %21, i64 %23, i64* %best_parent_rate) #11, !dbg !8922
  store i64 %call17, i64* %rate, align 8, !dbg !8932
  %25 = load i64, i64* %rate, align 8, !dbg !8933
  %cmp = icmp slt i64 %25, 0, !dbg !8935
  br i1 %cmp, label %if.then18, label %if.end19, !dbg !8936

if.then18:                                        ; preds = %if.then12
  %26 = load i64, i64* %rate, align 8, !dbg !8937
  %conv = trunc i64 %26 to i32, !dbg !8937
  store i32 %conv, i32* %retval, align 4, !dbg !8938
  br label %return, !dbg !8938

if.end19:                                         ; preds = %if.then12
  %27 = load i64, i64* %rate, align 8, !dbg !8939
  %28 = load %struct.clk_rate_request*, %struct.clk_rate_request** %req.addr, align 8, !dbg !8940
  %rate20 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %28, i32 0, i32 0, !dbg !8941
  store i64 %27, i64* %rate20, align 8, !dbg !8942
  br label %if.end22, !dbg !8943

if.else21:                                        ; preds = %if.else9
  store i32 -22, i32* %retval, align 4, !dbg !8944
  br label %return, !dbg !8944

if.end22:                                         ; preds = %if.end19
  br label %if.end23

if.end23:                                         ; preds = %if.end22
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then1
  store i32 0, i32* %retval, align 4, !dbg !8946
  br label %return, !dbg !8946

return:                                           ; preds = %if.end24, %if.else21, %if.then18, %if.then5, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !8947
  ret i32 %29, !dbg !8947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clk_recalc_accuracies(%struct.clk_core* %core) #0 !dbg !8948 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %parent_accuracy = alloca i64, align 8
  %child = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp12 = alloca %struct.clk_core*, align 8
  %____ptr14 = alloca %struct.hlist_node*, align 8
  %tmp15 = alloca %struct.clk_core*, align 8
  %__mptr18 = alloca i8*, align 8
  %tmp21 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.declare(metadata i64* %parent_accuracy, metadata !8951, metadata !DIExpression()), !dbg !8952
  store i64 0, i64* %parent_accuracy, align 8, !dbg !8952
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !8953, metadata !DIExpression()), !dbg !8954
  br label %do.body, !dbg !8955

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8956

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8958
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 6, !dbg !8960
  %1 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !8960
  %tobool = icmp ne %struct.clk_core* %1, null, !dbg !8958
  br i1 %tobool, label %if.then, label %if.end, !dbg !8961

if.then:                                          ; preds = %do.end
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8962
  %parent1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 6, !dbg !8963
  %3 = load %struct.clk_core*, %struct.clk_core** %parent1, align 8, !dbg !8963
  %accuracy = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 23, !dbg !8964
  %4 = load i64, i64* %accuracy, align 8, !dbg !8964
  store i64 %4, i64* %parent_accuracy, align 8, !dbg !8965
  br label %if.end, !dbg !8966

if.end:                                           ; preds = %if.then, %do.end
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8967
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 1, !dbg !8969
  %6 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !8969
  %recalc_accuracy = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %6, i32 0, i32 17, !dbg !8970
  %7 = load i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64)** %recalc_accuracy, align 8, !dbg !8970
  %tobool2 = icmp ne i64 (%struct.clk_hw*, i64)* %7, null, !dbg !8967
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !8971

if.then3:                                         ; preds = %if.end
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8972
  %ops4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 1, !dbg !8973
  %9 = load %struct.clk_ops*, %struct.clk_ops** %ops4, align 8, !dbg !8973
  %recalc_accuracy5 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %9, i32 0, i32 17, !dbg !8974
  %10 = load i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64)** %recalc_accuracy5, align 8, !dbg !8974
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8975
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 2, !dbg !8976
  %12 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !8976
  %13 = load i64, i64* %parent_accuracy, align 8, !dbg !8977
  %call = call i64 %10(%struct.clk_hw* %12, i64 %13) #11, !dbg !8972
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8978
  %accuracy6 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 23, !dbg !8979
  store i64 %call, i64* %accuracy6, align 8, !dbg !8980
  br label %if.end8, !dbg !8978

if.else:                                          ; preds = %if.end
  %15 = load i64, i64* %parent_accuracy, align 8, !dbg !8981
  %16 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8982
  %accuracy7 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %16, i32 0, i32 23, !dbg !8983
  store i64 %15, i64* %accuracy7, align 8, !dbg !8984
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then3
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !8985, metadata !DIExpression()), !dbg !8988
  %17 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !8988
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %17, i32 0, i32 26, !dbg !8988
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !8988
  %18 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !8988
  store %struct.hlist_node* %18, %struct.hlist_node** %____ptr, align 8, !dbg !8988
  %19 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !8988
  %tobool9 = icmp ne %struct.hlist_node* %19, null, !dbg !8988
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !8988

cond.true:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8989, metadata !DIExpression()), !dbg !8991
  %20 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !8991
  %21 = bitcast %struct.hlist_node* %20 to i8*, !dbg !8991
  store i8* %21, i8** %__mptr, align 8, !dbg !8991
  br label %do.body10, !dbg !8991

do.body10:                                        ; preds = %cond.true
  br label %do.end11, !dbg !8992

do.end11:                                         ; preds = %do.body10
  %22 = load i8*, i8** %__mptr, align 8, !dbg !8991
  %add.ptr = getelementptr i8, i8* %22, i64 -184, !dbg !8991
  %23 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !8991
  store %struct.clk_core* %23, %struct.clk_core** %tmp12, align 8, !dbg !8992
  %24 = load %struct.clk_core*, %struct.clk_core** %tmp12, align 8, !dbg !8991
  br label %cond.end, !dbg !8988

cond.false:                                       ; preds = %if.end8
  br label %cond.end, !dbg !8988

cond.end:                                         ; preds = %cond.false, %do.end11
  %cond = phi %struct.clk_core* [ %24, %do.end11 ], [ null, %cond.false ], !dbg !8988
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !8988
  %25 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !8988
  store %struct.clk_core* %25, %struct.clk_core** %child, align 8, !dbg !8994
  br label %for.cond, !dbg !8994

for.cond:                                         ; preds = %cond.end24, %cond.end
  %26 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8995
  %tobool13 = icmp ne %struct.clk_core* %26, null, !dbg !8994
  br i1 %tobool13, label %for.body, label %for.end, !dbg !8994

for.body:                                         ; preds = %for.cond
  %27 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !8997
  call void @__clk_recalc_accuracies(%struct.clk_core* %27) #11, !dbg !8998
  br label %for.inc, !dbg !8998

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr14, metadata !8999, metadata !DIExpression()), !dbg !9001
  %28 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9001
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %28, i32 0, i32 27, !dbg !9001
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !9001
  %29 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !9001
  store %struct.hlist_node* %29, %struct.hlist_node** %____ptr14, align 8, !dbg !9001
  %30 = load %struct.hlist_node*, %struct.hlist_node** %____ptr14, align 8, !dbg !9001
  %tobool16 = icmp ne %struct.hlist_node* %30, null, !dbg !9001
  br i1 %tobool16, label %cond.true17, label %cond.false23, !dbg !9001

cond.true17:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr18, metadata !9002, metadata !DIExpression()), !dbg !9004
  %31 = load %struct.hlist_node*, %struct.hlist_node** %____ptr14, align 8, !dbg !9004
  %32 = bitcast %struct.hlist_node* %31 to i8*, !dbg !9004
  store i8* %32, i8** %__mptr18, align 8, !dbg !9004
  br label %do.body19, !dbg !9004

do.body19:                                        ; preds = %cond.true17
  br label %do.end20, !dbg !9005

do.end20:                                         ; preds = %do.body19
  %33 = load i8*, i8** %__mptr18, align 8, !dbg !9004
  %add.ptr22 = getelementptr i8, i8* %33, i64 -184, !dbg !9004
  %34 = bitcast i8* %add.ptr22 to %struct.clk_core*, !dbg !9004
  store %struct.clk_core* %34, %struct.clk_core** %tmp21, align 8, !dbg !9005
  %35 = load %struct.clk_core*, %struct.clk_core** %tmp21, align 8, !dbg !9004
  br label %cond.end24, !dbg !9001

cond.false23:                                     ; preds = %for.inc
  br label %cond.end24, !dbg !9001

cond.end24:                                       ; preds = %cond.false23, %do.end20
  %cond25 = phi %struct.clk_core* [ %35, %do.end20 ], [ null, %cond.false23 ], !dbg !9001
  store %struct.clk_core* %cond25, %struct.clk_core** %tmp15, align 8, !dbg !9001
  %36 = load %struct.clk_core*, %struct.clk_core** %tmp15, align 8, !dbg !9001
  store %struct.clk_core* %36, %struct.clk_core** %child, align 8, !dbg !8995
  br label %for.cond, !dbg !8995, !llvm.loop !9007

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @clk_core_get_accuracy_no_lock(%struct.clk_core* %core) #0 !dbg !9010 {
entry:
  %retval = alloca i64, align 8
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9011, metadata !DIExpression()), !dbg !9012
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9013
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !9013
  br i1 %tobool, label %if.end, label %if.then, !dbg !9015

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !9016
  br label %return, !dbg !9016

if.end:                                           ; preds = %entry
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9017
  %accuracy = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 23, !dbg !9018
  %2 = load i64, i64* %accuracy, align 8, !dbg !9018
  store i64 %2, i64* %retval, align 8, !dbg !9019
  br label %return, !dbg !9019

return:                                           ; preds = %if.end, %if.then
  %3 = load i64, i64* %retval, align 8, !dbg !9020
  ret i64 %3, !dbg !9020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clk_recalc_rates(%struct.clk_core* %core, i64 %msg) #0 !dbg !9021 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %msg.addr = alloca i64, align 8
  %old_rate = alloca i64, align 8
  %parent_rate = alloca i64, align 8
  %child = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp13 = alloca %struct.clk_core*, align 8
  %____ptr15 = alloca %struct.hlist_node*, align 8
  %tmp16 = alloca %struct.clk_core*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp22 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9024, metadata !DIExpression()), !dbg !9025
  store i64 %msg, i64* %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %msg.addr, metadata !9026, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.declare(metadata i64* %old_rate, metadata !9028, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.declare(metadata i64* %parent_rate, metadata !9030, metadata !DIExpression()), !dbg !9031
  store i64 0, i64* %parent_rate, align 8, !dbg !9031
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !9032, metadata !DIExpression()), !dbg !9033
  br label %do.body, !dbg !9034

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9035

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9037
  %rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 10, !dbg !9038
  %1 = load i64, i64* %rate, align 8, !dbg !9038
  store i64 %1, i64* %old_rate, align 8, !dbg !9039
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9040
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 6, !dbg !9042
  %3 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9042
  %tobool = icmp ne %struct.clk_core* %3, null, !dbg !9040
  br i1 %tobool, label %if.then, label %if.end, !dbg !9043

if.then:                                          ; preds = %do.end
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9044
  %parent1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 6, !dbg !9045
  %5 = load %struct.clk_core*, %struct.clk_core** %parent1, align 8, !dbg !9045
  %rate2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 10, !dbg !9046
  %6 = load i64, i64* %rate2, align 8, !dbg !9046
  store i64 %6, i64* %parent_rate, align 8, !dbg !9047
  br label %if.end, !dbg !9048

if.end:                                           ; preds = %if.then, %do.end
  %7 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9049
  %8 = load i64, i64* %parent_rate, align 8, !dbg !9050
  %call = call i64 @clk_recalc(%struct.clk_core* %7, i64 %8) #11, !dbg !9051
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9052
  %rate3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 10, !dbg !9053
  store i64 %call, i64* %rate3, align 8, !dbg !9054
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9055
  %notifier_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 29, !dbg !9057
  %11 = load i32, i32* %notifier_count, align 8, !dbg !9057
  %tobool4 = icmp ne i32 %11, 0, !dbg !9055
  br i1 %tobool4, label %land.lhs.true, label %if.end9, !dbg !9058

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %msg.addr, align 8, !dbg !9059
  %tobool5 = icmp ne i64 %12, 0, !dbg !9059
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !9060

if.then6:                                         ; preds = %land.lhs.true
  %13 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9061
  %14 = load i64, i64* %msg.addr, align 8, !dbg !9062
  %15 = load i64, i64* %old_rate, align 8, !dbg !9063
  %16 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9064
  %rate7 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %16, i32 0, i32 10, !dbg !9065
  %17 = load i64, i64* %rate7, align 8, !dbg !9065
  %call8 = call i32 @__clk_notify(%struct.clk_core* %13, i64 %14, i64 %15, i64 %17) #11, !dbg !9066
  br label %if.end9, !dbg !9066

if.end9:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !9067, metadata !DIExpression()), !dbg !9070
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9070
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %18, i32 0, i32 26, !dbg !9070
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !9070
  %19 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !9070
  store %struct.hlist_node* %19, %struct.hlist_node** %____ptr, align 8, !dbg !9070
  %20 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !9070
  %tobool10 = icmp ne %struct.hlist_node* %20, null, !dbg !9070
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !9070

cond.true:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9071, metadata !DIExpression()), !dbg !9073
  %21 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !9073
  %22 = bitcast %struct.hlist_node* %21 to i8*, !dbg !9073
  store i8* %22, i8** %__mptr, align 8, !dbg !9073
  br label %do.body11, !dbg !9073

do.body11:                                        ; preds = %cond.true
  br label %do.end12, !dbg !9074

do.end12:                                         ; preds = %do.body11
  %23 = load i8*, i8** %__mptr, align 8, !dbg !9073
  %add.ptr = getelementptr i8, i8* %23, i64 -184, !dbg !9073
  %24 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !9073
  store %struct.clk_core* %24, %struct.clk_core** %tmp13, align 8, !dbg !9074
  %25 = load %struct.clk_core*, %struct.clk_core** %tmp13, align 8, !dbg !9073
  br label %cond.end, !dbg !9070

cond.false:                                       ; preds = %if.end9
  br label %cond.end, !dbg !9070

cond.end:                                         ; preds = %cond.false, %do.end12
  %cond = phi %struct.clk_core* [ %25, %do.end12 ], [ null, %cond.false ], !dbg !9070
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !9070
  %26 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !9070
  store %struct.clk_core* %26, %struct.clk_core** %child, align 8, !dbg !9076
  br label %for.cond, !dbg !9076

for.cond:                                         ; preds = %cond.end25, %cond.end
  %27 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9077
  %tobool14 = icmp ne %struct.clk_core* %27, null, !dbg !9076
  br i1 %tobool14, label %for.body, label %for.end, !dbg !9076

for.body:                                         ; preds = %for.cond
  %28 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9079
  %29 = load i64, i64* %msg.addr, align 8, !dbg !9080
  call void @__clk_recalc_rates(%struct.clk_core* %28, i64 %29) #11, !dbg !9081
  br label %for.inc, !dbg !9081

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr15, metadata !9082, metadata !DIExpression()), !dbg !9084
  %30 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9084
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %30, i32 0, i32 27, !dbg !9084
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !9084
  %31 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !9084
  store %struct.hlist_node* %31, %struct.hlist_node** %____ptr15, align 8, !dbg !9084
  %32 = load %struct.hlist_node*, %struct.hlist_node** %____ptr15, align 8, !dbg !9084
  %tobool17 = icmp ne %struct.hlist_node* %32, null, !dbg !9084
  br i1 %tobool17, label %cond.true18, label %cond.false24, !dbg !9084

cond.true18:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !9085, metadata !DIExpression()), !dbg !9087
  %33 = load %struct.hlist_node*, %struct.hlist_node** %____ptr15, align 8, !dbg !9087
  %34 = bitcast %struct.hlist_node* %33 to i8*, !dbg !9087
  store i8* %34, i8** %__mptr19, align 8, !dbg !9087
  br label %do.body20, !dbg !9087

do.body20:                                        ; preds = %cond.true18
  br label %do.end21, !dbg !9088

do.end21:                                         ; preds = %do.body20
  %35 = load i8*, i8** %__mptr19, align 8, !dbg !9087
  %add.ptr23 = getelementptr i8, i8* %35, i64 -184, !dbg !9087
  %36 = bitcast i8* %add.ptr23 to %struct.clk_core*, !dbg !9087
  store %struct.clk_core* %36, %struct.clk_core** %tmp22, align 8, !dbg !9088
  %37 = load %struct.clk_core*, %struct.clk_core** %tmp22, align 8, !dbg !9087
  br label %cond.end25, !dbg !9084

cond.false24:                                     ; preds = %for.inc
  br label %cond.end25, !dbg !9084

cond.end25:                                       ; preds = %cond.false24, %do.end21
  %cond26 = phi %struct.clk_core* [ %37, %do.end21 ], [ null, %cond.false24 ], !dbg !9084
  store %struct.clk_core* %cond26, %struct.clk_core** %tmp16, align 8, !dbg !9084
  %38 = load %struct.clk_core*, %struct.clk_core** %tmp16, align 8, !dbg !9084
  store %struct.clk_core* %38, %struct.clk_core** %child, align 8, !dbg !9077
  br label %for.cond, !dbg !9077, !llvm.loop !9090

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @clk_recalc(%struct.clk_core* %core, i64 %parent_rate) #0 !dbg !9093 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %parent_rate.addr = alloca i64, align 8
  %rate = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9096, metadata !DIExpression()), !dbg !9097
  store i64 %parent_rate, i64* %parent_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %parent_rate.addr, metadata !9098, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.declare(metadata i64* %rate, metadata !9100, metadata !DIExpression()), !dbg !9101
  %0 = load i64, i64* %parent_rate.addr, align 8, !dbg !9102
  store i64 %0, i64* %rate, align 8, !dbg !9101
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9103
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 1, !dbg !9105
  %2 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !9105
  %recalc_rate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %2, i32 0, i32 10, !dbg !9106
  %3 = load i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64)** %recalc_rate, align 8, !dbg !9106
  %tobool = icmp ne i64 (%struct.clk_hw*, i64)* %3, null, !dbg !9103
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9107

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9108
  %call = call i32 @clk_pm_runtime_get(%struct.clk_core* %4) #11, !dbg !9109
  %tobool1 = icmp ne i32 %call, 0, !dbg !9109
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9110

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9111
  %ops2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 1, !dbg !9113
  %6 = load %struct.clk_ops*, %struct.clk_ops** %ops2, align 8, !dbg !9113
  %recalc_rate3 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %6, i32 0, i32 10, !dbg !9114
  %7 = load i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64)** %recalc_rate3, align 8, !dbg !9114
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9115
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 2, !dbg !9116
  %9 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !9116
  %10 = load i64, i64* %parent_rate.addr, align 8, !dbg !9117
  %call4 = call i64 %7(%struct.clk_hw* %9, i64 %10) #11, !dbg !9111
  store i64 %call4, i64* %rate, align 8, !dbg !9118
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9119
  call void @clk_pm_runtime_put(%struct.clk_core* %11) #11, !dbg !9120
  br label %if.end, !dbg !9121

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %12 = load i64, i64* %rate, align 8, !dbg !9122
  ret i64 %12, !dbg !9123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__clk_notify(%struct.clk_core* %core, i64 %msg, i64 %old_rate, i64 %new_rate) #0 !dbg !9124 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %msg.addr = alloca i64, align 8
  %old_rate.addr = alloca i64, align 8
  %new_rate.addr = alloca i64, align 8
  %cn = alloca %struct.clk_notifier*, align 8
  %cnd = alloca %struct.clk_notifier_data, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.clk_notifier*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp13 = alloca %struct.clk_notifier*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9127, metadata !DIExpression()), !dbg !9128
  store i64 %msg, i64* %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %msg.addr, metadata !9129, metadata !DIExpression()), !dbg !9130
  store i64 %old_rate, i64* %old_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %old_rate.addr, metadata !9131, metadata !DIExpression()), !dbg !9132
  store i64 %new_rate, i64* %new_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %new_rate.addr, metadata !9133, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.declare(metadata %struct.clk_notifier** %cn, metadata !9135, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.declare(metadata %struct.clk_notifier_data* %cnd, metadata !9137, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9144, metadata !DIExpression()), !dbg !9145
  store i32 0, i32* %ret, align 4, !dbg !9145
  %0 = load i64, i64* %old_rate.addr, align 8, !dbg !9146
  %old_rate1 = getelementptr inbounds %struct.clk_notifier_data, %struct.clk_notifier_data* %cnd, i32 0, i32 1, !dbg !9147
  store i64 %0, i64* %old_rate1, align 8, !dbg !9148
  %1 = load i64, i64* %new_rate.addr, align 8, !dbg !9149
  %new_rate2 = getelementptr inbounds %struct.clk_notifier_data, %struct.clk_notifier_data* %cnd, i32 0, i32 2, !dbg !9150
  store i64 %1, i64* %new_rate2, align 8, !dbg !9151
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9152, metadata !DIExpression()), !dbg !9155
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @clk_notifier_list, i32 0, i32 0), align 8, !dbg !9155
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !9155
  store i8* %3, i8** %__mptr, align 8, !dbg !9155
  br label %do.body, !dbg !9155

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9156

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !9155
  %add.ptr = getelementptr i8, i8* %4, i64 -112, !dbg !9155
  %5 = bitcast i8* %add.ptr to %struct.clk_notifier*, !dbg !9155
  store %struct.clk_notifier* %5, %struct.clk_notifier** %tmp, align 8, !dbg !9156
  %6 = load %struct.clk_notifier*, %struct.clk_notifier** %tmp, align 8, !dbg !9155
  store %struct.clk_notifier* %6, %struct.clk_notifier** %cn, align 8, !dbg !9158
  br label %for.cond, !dbg !9158

for.cond:                                         ; preds = %do.end12, %do.end
  %7 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !9159
  %node = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %7, i32 0, i32 2, !dbg !9159
  %cmp = icmp eq %struct.list_head* %node, @clk_notifier_list, !dbg !9159
  %lnot = xor i1 %cmp, true, !dbg !9159
  br i1 %lnot, label %for.body, label %for.end, !dbg !9158

for.body:                                         ; preds = %for.cond
  %8 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !9161
  %clk = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %8, i32 0, i32 0, !dbg !9164
  %9 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !9164
  %core3 = getelementptr inbounds %struct.clk, %struct.clk* %9, i32 0, i32 0, !dbg !9165
  %10 = load %struct.clk_core*, %struct.clk_core** %core3, align 8, !dbg !9165
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9166
  %cmp4 = icmp eq %struct.clk_core* %10, %11, !dbg !9167
  br i1 %cmp4, label %if.then, label %if.end8, !dbg !9168

if.then:                                          ; preds = %for.body
  %12 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !9169
  %clk5 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %12, i32 0, i32 0, !dbg !9171
  %13 = load %struct.clk*, %struct.clk** %clk5, align 8, !dbg !9171
  %clk6 = getelementptr inbounds %struct.clk_notifier_data, %struct.clk_notifier_data* %cnd, i32 0, i32 0, !dbg !9172
  store %struct.clk* %13, %struct.clk** %clk6, align 8, !dbg !9173
  %14 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !9174
  %notifier_head = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %14, i32 0, i32 1, !dbg !9175
  %15 = load i64, i64* %msg.addr, align 8, !dbg !9176
  %16 = bitcast %struct.clk_notifier_data* %cnd to i8*, !dbg !9177
  %call = call i32 @srcu_notifier_call_chain(%struct.srcu_notifier_head* %notifier_head, i64 %15, i8* %16) #11, !dbg !9178
  store i32 %call, i32* %ret, align 4, !dbg !9179
  %17 = load i32, i32* %ret, align 4, !dbg !9180
  %and = and i32 %17, 32768, !dbg !9182
  %tobool = icmp ne i32 %and, 0, !dbg !9182
  br i1 %tobool, label %if.then7, label %if.end, !dbg !9183

if.then7:                                         ; preds = %if.then
  %18 = load i32, i32* %ret, align 4, !dbg !9184
  store i32 %18, i32* %retval, align 4, !dbg !9185
  br label %return, !dbg !9185

if.end:                                           ; preds = %if.then
  br label %if.end8, !dbg !9186

if.end8:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !9187

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !9188, metadata !DIExpression()), !dbg !9190
  %19 = load %struct.clk_notifier*, %struct.clk_notifier** %cn, align 8, !dbg !9190
  %node10 = getelementptr inbounds %struct.clk_notifier, %struct.clk_notifier* %19, i32 0, i32 2, !dbg !9190
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node10, i32 0, i32 0, !dbg !9190
  %20 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9190
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !9190
  store i8* %21, i8** %__mptr9, align 8, !dbg !9190
  br label %do.body11, !dbg !9190

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !9191

do.end12:                                         ; preds = %do.body11
  %22 = load i8*, i8** %__mptr9, align 8, !dbg !9190
  %add.ptr14 = getelementptr i8, i8* %22, i64 -112, !dbg !9190
  %23 = bitcast i8* %add.ptr14 to %struct.clk_notifier*, !dbg !9190
  store %struct.clk_notifier* %23, %struct.clk_notifier** %tmp13, align 8, !dbg !9191
  %24 = load %struct.clk_notifier*, %struct.clk_notifier** %tmp13, align 8, !dbg !9190
  store %struct.clk_notifier* %24, %struct.clk_notifier** %cn, align 8, !dbg !9159
  br label %for.cond, !dbg !9159, !llvm.loop !9193

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* %ret, align 4, !dbg !9195
  store i32 %25, i32* %retval, align 4, !dbg !9196
  br label %return, !dbg !9196

return:                                           ; preds = %for.end, %if.then7
  %26 = load i32, i32* %retval, align 4, !dbg !9197
  ret i32 %26, !dbg !9197
}

; Function Attrs: noredzone
declare dso_local i32 @srcu_notifier_call_chain(%struct.srcu_notifier_head*, i64, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @clk_core_req_round_rate_nolock(%struct.clk_core* %core, i64 %req_rate) #0 !dbg !9198 {
entry:
  %retval = alloca i64, align 8
  %core.addr = alloca %struct.clk_core*, align 8
  %req_rate.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %cnt = alloca i32, align 4
  %req = alloca %struct.clk_rate_request, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9199, metadata !DIExpression()), !dbg !9200
  store i64 %req_rate, i64* %req_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %req_rate.addr, metadata !9201, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9203, metadata !DIExpression()), !dbg !9204
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !9205, metadata !DIExpression()), !dbg !9206
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request* %req, metadata !9207, metadata !DIExpression()), !dbg !9208
  br label %do.body, !dbg !9209

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9210

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9212
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !9212
  br i1 %tobool, label %if.end, label %if.then, !dbg !9214

if.then:                                          ; preds = %do.end
  store i64 0, i64* %retval, align 8, !dbg !9215
  br label %return, !dbg !9215

if.end:                                           ; preds = %do.end
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9216
  %call = call i32 @clk_core_rate_nuke_protect(%struct.clk_core* %1) #11, !dbg !9217
  store i32 %call, i32* %cnt, align 4, !dbg !9218
  %2 = load i32, i32* %cnt, align 4, !dbg !9219
  %cmp = icmp slt i32 %2, 0, !dbg !9221
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !9222

if.then1:                                         ; preds = %if.end
  %3 = load i32, i32* %cnt, align 4, !dbg !9223
  %conv = sext i32 %3 to i64, !dbg !9223
  store i64 %conv, i64* %retval, align 8, !dbg !9224
  br label %return, !dbg !9224

if.end2:                                          ; preds = %if.end
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9225
  %min_rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 1, !dbg !9226
  %max_rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 2, !dbg !9227
  call void @clk_core_get_boundaries(%struct.clk_core* %4, i64* %min_rate, i64* %max_rate) #11, !dbg !9228
  %5 = load i64, i64* %req_rate.addr, align 8, !dbg !9229
  %rate = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 0, !dbg !9230
  store i64 %5, i64* %rate, align 8, !dbg !9231
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9232
  %call3 = call i32 @clk_core_round_rate_nolock(%struct.clk_core* %6, %struct.clk_rate_request* %req) #11, !dbg !9233
  store i32 %call3, i32* %ret, align 4, !dbg !9234
  %7 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9235
  %8 = load i32, i32* %cnt, align 4, !dbg !9236
  call void @clk_core_rate_restore_protect(%struct.clk_core* %7, i32 %8) #11, !dbg !9237
  %9 = load i32, i32* %ret, align 4, !dbg !9238
  %tobool4 = icmp ne i32 %9, 0, !dbg !9238
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !9238

cond.true:                                        ; preds = %if.end2
  br label %cond.end, !dbg !9238

cond.false:                                       ; preds = %if.end2
  %rate5 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 0, !dbg !9239
  %10 = load i64, i64* %rate5, align 8, !dbg !9239
  br label %cond.end, !dbg !9238

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %10, %cond.false ], !dbg !9238
  store i64 %cond, i64* %retval, align 8, !dbg !9240
  br label %return, !dbg !9240

return:                                           ; preds = %cond.end, %if.then1, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !9241
  ret i64 %11, !dbg !9241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk_core* @clk_calc_new_rates(%struct.clk_core* %core, i64 %rate) #0 !dbg !9242 {
entry:
  %retval = alloca %struct.clk_core*, align 8
  %core.addr = alloca %struct.clk_core*, align 8
  %rate.addr = alloca i64, align 8
  %top = alloca %struct.clk_core*, align 8
  %old_parent = alloca %struct.clk_core*, align 8
  %parent = alloca %struct.clk_core*, align 8
  %best_parent_rate = alloca i64, align 8
  %new_rate = alloca i64, align 8
  %min_rate = alloca i64, align 8
  %max_rate = alloca i64, align 8
  %p_index = alloca i32, align 4
  %ret = alloca i64, align 8
  %req = alloca %struct.clk_rate_request, align 8
  %tmp = alloca i32, align 4
  %tmp54 = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9245, metadata !DIExpression()), !dbg !9246
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !9247, metadata !DIExpression()), !dbg !9248
  call void @llvm.dbg.declare(metadata %struct.clk_core** %top, metadata !9249, metadata !DIExpression()), !dbg !9250
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9251
  store %struct.clk_core* %0, %struct.clk_core** %top, align 8, !dbg !9250
  call void @llvm.dbg.declare(metadata %struct.clk_core** %old_parent, metadata !9252, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.declare(metadata i64* %best_parent_rate, metadata !9256, metadata !DIExpression()), !dbg !9257
  store i64 0, i64* %best_parent_rate, align 8, !dbg !9257
  call void @llvm.dbg.declare(metadata i64* %new_rate, metadata !9258, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.declare(metadata i64* %min_rate, metadata !9260, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.declare(metadata i64* %max_rate, metadata !9262, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.declare(metadata i32* %p_index, metadata !9264, metadata !DIExpression()), !dbg !9265
  store i32 0, i32* %p_index, align 4, !dbg !9265
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !9266, metadata !DIExpression()), !dbg !9267
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9268
  %2 = bitcast %struct.clk_core* %1 to i8*, !dbg !9268
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %2) #11, !dbg !9270
  br i1 %call, label %if.then, label %if.end, !dbg !9271

if.then:                                          ; preds = %entry
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !9272
  br label %return, !dbg !9272

if.end:                                           ; preds = %entry
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9273
  %parent1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 6, !dbg !9274
  %4 = load %struct.clk_core*, %struct.clk_core** %parent1, align 8, !dbg !9274
  store %struct.clk_core* %4, %struct.clk_core** %old_parent, align 8, !dbg !9275
  store %struct.clk_core* %4, %struct.clk_core** %parent, align 8, !dbg !9276
  %5 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9277
  %tobool = icmp ne %struct.clk_core* %5, null, !dbg !9277
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !9279

if.then2:                                         ; preds = %if.end
  %6 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9280
  %rate3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 10, !dbg !9281
  %7 = load i64, i64* %rate3, align 8, !dbg !9281
  store i64 %7, i64* %best_parent_rate, align 8, !dbg !9282
  br label %if.end4, !dbg !9283

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9284
  call void @clk_core_get_boundaries(%struct.clk_core* %8, i64* %min_rate, i64* %max_rate) #11, !dbg !9285
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9286
  %call5 = call zeroext i1 @clk_core_can_round(%struct.clk_core* %9) #11, !dbg !9288
  br i1 %call5, label %if.then6, label %if.else, !dbg !9289

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.clk_rate_request* %req, metadata !9290, metadata !DIExpression()), !dbg !9292
  %10 = load i64, i64* %rate.addr, align 8, !dbg !9293
  %rate7 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 0, !dbg !9294
  store i64 %10, i64* %rate7, align 8, !dbg !9295
  %11 = load i64, i64* %min_rate, align 8, !dbg !9296
  %min_rate8 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 1, !dbg !9297
  store i64 %11, i64* %min_rate8, align 8, !dbg !9298
  %12 = load i64, i64* %max_rate, align 8, !dbg !9299
  %max_rate9 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 2, !dbg !9300
  store i64 %12, i64* %max_rate9, align 8, !dbg !9301
  %13 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9302
  call void @clk_core_init_rate_req(%struct.clk_core* %13, %struct.clk_rate_request* %req) #11, !dbg !9303
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9304
  %call10 = call i32 @clk_core_determine_round_nolock(%struct.clk_core* %14, %struct.clk_rate_request* %req) #11, !dbg !9305
  %conv = sext i32 %call10 to i64, !dbg !9305
  store i64 %conv, i64* %ret, align 8, !dbg !9306
  %15 = load i64, i64* %ret, align 8, !dbg !9307
  %cmp = icmp slt i64 %15, 0, !dbg !9309
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !9310

if.then12:                                        ; preds = %if.then6
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !9311
  br label %return, !dbg !9311

if.end13:                                         ; preds = %if.then6
  %best_parent_rate14 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 3, !dbg !9312
  %16 = load i64, i64* %best_parent_rate14, align 8, !dbg !9312
  store i64 %16, i64* %best_parent_rate, align 8, !dbg !9313
  %rate15 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 0, !dbg !9314
  %17 = load i64, i64* %rate15, align 8, !dbg !9314
  store i64 %17, i64* %new_rate, align 8, !dbg !9315
  %best_parent_hw = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 4, !dbg !9316
  %18 = load %struct.clk_hw*, %struct.clk_hw** %best_parent_hw, align 8, !dbg !9316
  %tobool16 = icmp ne %struct.clk_hw* %18, null, !dbg !9317
  br i1 %tobool16, label %cond.true, label %cond.false, !dbg !9317

cond.true:                                        ; preds = %if.end13
  %best_parent_hw17 = getelementptr inbounds %struct.clk_rate_request, %struct.clk_rate_request* %req, i32 0, i32 4, !dbg !9318
  %19 = load %struct.clk_hw*, %struct.clk_hw** %best_parent_hw17, align 8, !dbg !9318
  %core18 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %19, i32 0, i32 0, !dbg !9319
  %20 = load %struct.clk_core*, %struct.clk_core** %core18, align 8, !dbg !9319
  br label %cond.end, !dbg !9317

cond.false:                                       ; preds = %if.end13
  br label %cond.end, !dbg !9317

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.clk_core* [ %20, %cond.true ], [ null, %cond.false ], !dbg !9317
  store %struct.clk_core* %cond, %struct.clk_core** %parent, align 8, !dbg !9320
  %21 = load i64, i64* %new_rate, align 8, !dbg !9321
  %22 = load i64, i64* %min_rate, align 8, !dbg !9323
  %cmp19 = icmp ult i64 %21, %22, !dbg !9324
  br i1 %cmp19, label %if.then23, label %lor.lhs.false, !dbg !9325

lor.lhs.false:                                    ; preds = %cond.end
  %23 = load i64, i64* %new_rate, align 8, !dbg !9326
  %24 = load i64, i64* %max_rate, align 8, !dbg !9327
  %cmp21 = icmp ugt i64 %23, %24, !dbg !9328
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !9329

if.then23:                                        ; preds = %lor.lhs.false, %cond.end
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !9330
  br label %return, !dbg !9330

if.end24:                                         ; preds = %lor.lhs.false
  br label %if.end34, !dbg !9331

if.else:                                          ; preds = %if.end4
  %25 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9332
  %tobool25 = icmp ne %struct.clk_core* %25, null, !dbg !9332
  br i1 %tobool25, label %lor.lhs.false26, label %if.then28, !dbg !9334

lor.lhs.false26:                                  ; preds = %if.else
  %26 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9335
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %26, i32 0, i32 15, !dbg !9336
  %27 = load i64, i64* %flags, align 8, !dbg !9336
  %and = and i64 %27, 4, !dbg !9337
  %tobool27 = icmp ne i64 %and, 0, !dbg !9337
  br i1 %tobool27, label %if.else31, label %if.then28, !dbg !9338

if.then28:                                        ; preds = %lor.lhs.false26, %if.else
  %28 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9339
  %rate29 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %28, i32 0, i32 10, !dbg !9341
  %29 = load i64, i64* %rate29, align 8, !dbg !9341
  %30 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9342
  %new_rate30 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %30, i32 0, i32 12, !dbg !9343
  store i64 %29, i64* %new_rate30, align 8, !dbg !9344
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !9345
  br label %return, !dbg !9345

if.else31:                                        ; preds = %lor.lhs.false26
  %31 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9346
  %32 = load i64, i64* %rate.addr, align 8, !dbg !9348
  %call32 = call %struct.clk_core* @clk_calc_new_rates(%struct.clk_core* %31, i64 %32) #11, !dbg !9349
  store %struct.clk_core* %call32, %struct.clk_core** %top, align 8, !dbg !9350
  %33 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9351
  %new_rate33 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %33, i32 0, i32 12, !dbg !9352
  %34 = load i64, i64* %new_rate33, align 8, !dbg !9352
  store i64 %34, i64* %new_rate, align 8, !dbg !9353
  br label %out, !dbg !9354

if.end34:                                         ; preds = %if.end24
  %35 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9355
  %36 = load %struct.clk_core*, %struct.clk_core** %old_parent, align 8, !dbg !9357
  %cmp35 = icmp ne %struct.clk_core* %35, %36, !dbg !9358
  br i1 %cmp35, label %land.lhs.true, label %if.end43, !dbg !9359

land.lhs.true:                                    ; preds = %if.end34
  %37 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9360
  %flags37 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %37, i32 0, i32 15, !dbg !9361
  %38 = load i64, i64* %flags37, align 8, !dbg !9361
  %and38 = and i64 %38, 2, !dbg !9362
  %tobool39 = icmp ne i64 %and38, 0, !dbg !9362
  br i1 %tobool39, label %land.lhs.true40, label %if.end43, !dbg !9363

land.lhs.true40:                                  ; preds = %land.lhs.true
  %39 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9364
  %prepare_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %39, i32 0, i32 19, !dbg !9365
  %40 = load i32, i32* %prepare_count, align 8, !dbg !9365
  %tobool41 = icmp ne i32 %40, 0, !dbg !9364
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !9366

if.then42:                                        ; preds = %land.lhs.true40
  store i32 0, i32* %tmp, align 4, !dbg !9367
  %41 = load i32, i32* %tmp, align 4, !dbg !9371
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !9372
  br label %return, !dbg !9372

if.end43:                                         ; preds = %land.lhs.true40, %land.lhs.true, %if.end34
  %42 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9373
  %tobool44 = icmp ne %struct.clk_core* %42, null, !dbg !9373
  br i1 %tobool44, label %land.lhs.true45, label %if.end56, !dbg !9375

land.lhs.true45:                                  ; preds = %if.end43
  %43 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9376
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %43, i32 0, i32 8, !dbg !9377
  %44 = load i8, i8* %num_parents, align 8, !dbg !9377
  %conv46 = zext i8 %44 to i32, !dbg !9376
  %cmp47 = icmp sgt i32 %conv46, 1, !dbg !9378
  br i1 %cmp47, label %if.then49, label %if.end56, !dbg !9379

if.then49:                                        ; preds = %land.lhs.true45
  %45 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9380
  %46 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9382
  %call50 = call i32 @clk_fetch_parent_index(%struct.clk_core* %45, %struct.clk_core* %46) #11, !dbg !9383
  store i32 %call50, i32* %p_index, align 4, !dbg !9384
  %47 = load i32, i32* %p_index, align 4, !dbg !9385
  %cmp51 = icmp slt i32 %47, 0, !dbg !9387
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !9388

if.then53:                                        ; preds = %if.then49
  store i32 0, i32* %tmp54, align 4, !dbg !9389
  %48 = load i32, i32* %tmp54, align 4, !dbg !9393
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !9394
  br label %return, !dbg !9394

if.end55:                                         ; preds = %if.then49
  br label %if.end56, !dbg !9395

if.end56:                                         ; preds = %if.end55, %land.lhs.true45, %if.end43
  %49 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9396
  %flags57 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %49, i32 0, i32 15, !dbg !9398
  %50 = load i64, i64* %flags57, align 8, !dbg !9398
  %and58 = and i64 %50, 4, !dbg !9399
  %tobool59 = icmp ne i64 %and58, 0, !dbg !9399
  br i1 %tobool59, label %land.lhs.true60, label %if.end68, !dbg !9400

land.lhs.true60:                                  ; preds = %if.end56
  %51 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9401
  %tobool61 = icmp ne %struct.clk_core* %51, null, !dbg !9401
  br i1 %tobool61, label %land.lhs.true62, label %if.end68, !dbg !9402

land.lhs.true62:                                  ; preds = %land.lhs.true60
  %52 = load i64, i64* %best_parent_rate, align 8, !dbg !9403
  %53 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9404
  %rate63 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %53, i32 0, i32 10, !dbg !9405
  %54 = load i64, i64* %rate63, align 8, !dbg !9405
  %cmp64 = icmp ne i64 %52, %54, !dbg !9406
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !9407

if.then66:                                        ; preds = %land.lhs.true62
  %55 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9408
  %56 = load i64, i64* %best_parent_rate, align 8, !dbg !9409
  %call67 = call %struct.clk_core* @clk_calc_new_rates(%struct.clk_core* %55, i64 %56) #11, !dbg !9410
  store %struct.clk_core* %call67, %struct.clk_core** %top, align 8, !dbg !9411
  br label %if.end68, !dbg !9412

if.end68:                                         ; preds = %if.then66, %land.lhs.true62, %land.lhs.true60, %if.end56
  br label %out, !dbg !9405

out:                                              ; preds = %if.end68, %if.else31
  call void @llvm.dbg.label(metadata !9413), !dbg !9414
  %57 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9415
  %58 = load i64, i64* %new_rate, align 8, !dbg !9416
  %59 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9417
  %60 = load i32, i32* %p_index, align 4, !dbg !9418
  %conv69 = trunc i32 %60 to i8, !dbg !9418
  call void @clk_calc_subtree(%struct.clk_core* %57, i64 %58, %struct.clk_core* %59, i8 zeroext %conv69) #11, !dbg !9419
  %61 = load %struct.clk_core*, %struct.clk_core** %top, align 8, !dbg !9420
  store %struct.clk_core* %61, %struct.clk_core** %retval, align 8, !dbg !9421
  br label %return, !dbg !9421

return:                                           ; preds = %out, %if.then53, %if.then42, %if.then28, %if.then23, %if.then12, %if.then
  %62 = load %struct.clk_core*, %struct.clk_core** %retval, align 8, !dbg !9422
  ret %struct.clk_core* %62, !dbg !9422
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk_core* @clk_propagate_rate_change(%struct.clk_core* %core, i64 %event) #0 !dbg !9423 {
entry:
  %retval = alloca %struct.clk_core*, align 8
  %core.addr = alloca %struct.clk_core*, align 8
  %event.addr = alloca i64, align 8
  %child = alloca %struct.clk_core*, align 8
  %tmp_clk = alloca %struct.clk_core*, align 8
  %fail_clk = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp9 = alloca %struct.clk_core*, align 8
  %____ptr20 = alloca %struct.hlist_node*, align 8
  %tmp21 = alloca %struct.clk_core*, align 8
  %__mptr24 = alloca i8*, align 8
  %tmp27 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9424, metadata !DIExpression()), !dbg !9425
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !9426, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !9428, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.declare(metadata %struct.clk_core** %tmp_clk, metadata !9430, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.declare(metadata %struct.clk_core** %fail_clk, metadata !9432, metadata !DIExpression()), !dbg !9433
  store %struct.clk_core* null, %struct.clk_core** %fail_clk, align 8, !dbg !9433
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9434, metadata !DIExpression()), !dbg !9435
  store i32 0, i32* %ret, align 4, !dbg !9435
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9436
  %rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 10, !dbg !9438
  %1 = load i64, i64* %rate, align 8, !dbg !9438
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9439
  %new_rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 12, !dbg !9440
  %3 = load i64, i64* %new_rate, align 8, !dbg !9440
  %cmp = icmp eq i64 %1, %3, !dbg !9441
  br i1 %cmp, label %if.then, label %if.end, !dbg !9442

if.then:                                          ; preds = %entry
  store %struct.clk_core* null, %struct.clk_core** %retval, align 8, !dbg !9443
  br label %return, !dbg !9443

if.end:                                           ; preds = %entry
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9444
  %notifier_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 29, !dbg !9446
  %5 = load i32, i32* %notifier_count, align 8, !dbg !9446
  %tobool = icmp ne i32 %5, 0, !dbg !9444
  br i1 %tobool, label %if.then1, label %if.end7, !dbg !9447

if.then1:                                         ; preds = %if.end
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9448
  %7 = load i64, i64* %event.addr, align 8, !dbg !9450
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9451
  %rate2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 10, !dbg !9452
  %9 = load i64, i64* %rate2, align 8, !dbg !9452
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9453
  %new_rate3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 12, !dbg !9454
  %11 = load i64, i64* %new_rate3, align 8, !dbg !9454
  %call = call i32 @__clk_notify(%struct.clk_core* %6, i64 %7, i64 %9, i64 %11) #11, !dbg !9455
  store i32 %call, i32* %ret, align 4, !dbg !9456
  %12 = load i32, i32* %ret, align 4, !dbg !9457
  %and = and i32 %12, 32768, !dbg !9459
  %tobool4 = icmp ne i32 %and, 0, !dbg !9459
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9460

if.then5:                                         ; preds = %if.then1
  %13 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9461
  store %struct.clk_core* %13, %struct.clk_core** %fail_clk, align 8, !dbg !9462
  br label %if.end6, !dbg !9463

if.end6:                                          ; preds = %if.then5, %if.then1
  br label %if.end7, !dbg !9464

if.end7:                                          ; preds = %if.end6, %if.end
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !9465, metadata !DIExpression()), !dbg !9468
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9468
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 26, !dbg !9468
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !9468
  %15 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !9468
  store %struct.hlist_node* %15, %struct.hlist_node** %____ptr, align 8, !dbg !9468
  %16 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !9468
  %tobool8 = icmp ne %struct.hlist_node* %16, null, !dbg !9468
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !9468

cond.true:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9469, metadata !DIExpression()), !dbg !9471
  %17 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !9471
  %18 = bitcast %struct.hlist_node* %17 to i8*, !dbg !9471
  store i8* %18, i8** %__mptr, align 8, !dbg !9471
  br label %do.body, !dbg !9471

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !9472

do.end:                                           ; preds = %do.body
  %19 = load i8*, i8** %__mptr, align 8, !dbg !9471
  %add.ptr = getelementptr i8, i8* %19, i64 -184, !dbg !9471
  %20 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !9471
  store %struct.clk_core* %20, %struct.clk_core** %tmp9, align 8, !dbg !9472
  %21 = load %struct.clk_core*, %struct.clk_core** %tmp9, align 8, !dbg !9471
  br label %cond.end, !dbg !9468

cond.false:                                       ; preds = %if.end7
  br label %cond.end, !dbg !9468

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %21, %do.end ], [ null, %cond.false ], !dbg !9468
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !9468
  %22 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !9468
  store %struct.clk_core* %22, %struct.clk_core** %child, align 8, !dbg !9474
  br label %for.cond, !dbg !9474

for.cond:                                         ; preds = %cond.end30, %cond.end
  %23 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9475
  %tobool10 = icmp ne %struct.clk_core* %23, null, !dbg !9474
  br i1 %tobool10, label %for.body, label %for.end, !dbg !9474

for.body:                                         ; preds = %for.cond
  %24 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9477
  %new_parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %24, i32 0, i32 13, !dbg !9480
  %25 = load %struct.clk_core*, %struct.clk_core** %new_parent, align 8, !dbg !9480
  %tobool11 = icmp ne %struct.clk_core* %25, null, !dbg !9477
  br i1 %tobool11, label %land.lhs.true, label %if.end15, !dbg !9481

land.lhs.true:                                    ; preds = %for.body
  %26 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9482
  %new_parent12 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %26, i32 0, i32 13, !dbg !9483
  %27 = load %struct.clk_core*, %struct.clk_core** %new_parent12, align 8, !dbg !9483
  %28 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9484
  %cmp13 = icmp ne %struct.clk_core* %27, %28, !dbg !9485
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !9486

if.then14:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !9487

if.end15:                                         ; preds = %land.lhs.true, %for.body
  %29 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9488
  %30 = load i64, i64* %event.addr, align 8, !dbg !9489
  %call16 = call %struct.clk_core* @clk_propagate_rate_change(%struct.clk_core* %29, i64 %30) #11, !dbg !9490
  store %struct.clk_core* %call16, %struct.clk_core** %tmp_clk, align 8, !dbg !9491
  %31 = load %struct.clk_core*, %struct.clk_core** %tmp_clk, align 8, !dbg !9492
  %tobool17 = icmp ne %struct.clk_core* %31, null, !dbg !9492
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !9494

if.then18:                                        ; preds = %if.end15
  %32 = load %struct.clk_core*, %struct.clk_core** %tmp_clk, align 8, !dbg !9495
  store %struct.clk_core* %32, %struct.clk_core** %fail_clk, align 8, !dbg !9496
  br label %if.end19, !dbg !9497

if.end19:                                         ; preds = %if.then18, %if.end15
  br label %for.inc, !dbg !9498

for.inc:                                          ; preds = %if.end19, %if.then14
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr20, metadata !9499, metadata !DIExpression()), !dbg !9501
  %33 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9501
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %33, i32 0, i32 27, !dbg !9501
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !9501
  %34 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !9501
  store %struct.hlist_node* %34, %struct.hlist_node** %____ptr20, align 8, !dbg !9501
  %35 = load %struct.hlist_node*, %struct.hlist_node** %____ptr20, align 8, !dbg !9501
  %tobool22 = icmp ne %struct.hlist_node* %35, null, !dbg !9501
  br i1 %tobool22, label %cond.true23, label %cond.false29, !dbg !9501

cond.true23:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr24, metadata !9502, metadata !DIExpression()), !dbg !9504
  %36 = load %struct.hlist_node*, %struct.hlist_node** %____ptr20, align 8, !dbg !9504
  %37 = bitcast %struct.hlist_node* %36 to i8*, !dbg !9504
  store i8* %37, i8** %__mptr24, align 8, !dbg !9504
  br label %do.body25, !dbg !9504

do.body25:                                        ; preds = %cond.true23
  br label %do.end26, !dbg !9505

do.end26:                                         ; preds = %do.body25
  %38 = load i8*, i8** %__mptr24, align 8, !dbg !9504
  %add.ptr28 = getelementptr i8, i8* %38, i64 -184, !dbg !9504
  %39 = bitcast i8* %add.ptr28 to %struct.clk_core*, !dbg !9504
  store %struct.clk_core* %39, %struct.clk_core** %tmp27, align 8, !dbg !9505
  %40 = load %struct.clk_core*, %struct.clk_core** %tmp27, align 8, !dbg !9504
  br label %cond.end30, !dbg !9501

cond.false29:                                     ; preds = %for.inc
  br label %cond.end30, !dbg !9501

cond.end30:                                       ; preds = %cond.false29, %do.end26
  %cond31 = phi %struct.clk_core* [ %40, %do.end26 ], [ null, %cond.false29 ], !dbg !9501
  store %struct.clk_core* %cond31, %struct.clk_core** %tmp21, align 8, !dbg !9501
  %41 = load %struct.clk_core*, %struct.clk_core** %tmp21, align 8, !dbg !9501
  store %struct.clk_core* %41, %struct.clk_core** %child, align 8, !dbg !9475
  br label %for.cond, !dbg !9475, !llvm.loop !9507

for.end:                                          ; preds = %for.cond
  %42 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9509
  %new_child = getelementptr inbounds %struct.clk_core, %struct.clk_core* %42, i32 0, i32 14, !dbg !9511
  %43 = load %struct.clk_core*, %struct.clk_core** %new_child, align 8, !dbg !9511
  %tobool32 = icmp ne %struct.clk_core* %43, null, !dbg !9509
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !9512

if.then33:                                        ; preds = %for.end
  %44 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9513
  %new_child34 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %44, i32 0, i32 14, !dbg !9515
  %45 = load %struct.clk_core*, %struct.clk_core** %new_child34, align 8, !dbg !9515
  %46 = load i64, i64* %event.addr, align 8, !dbg !9516
  %call35 = call %struct.clk_core* @clk_propagate_rate_change(%struct.clk_core* %45, i64 %46) #11, !dbg !9517
  store %struct.clk_core* %call35, %struct.clk_core** %tmp_clk, align 8, !dbg !9518
  %47 = load %struct.clk_core*, %struct.clk_core** %tmp_clk, align 8, !dbg !9519
  %tobool36 = icmp ne %struct.clk_core* %47, null, !dbg !9519
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !9521

if.then37:                                        ; preds = %if.then33
  %48 = load %struct.clk_core*, %struct.clk_core** %tmp_clk, align 8, !dbg !9522
  store %struct.clk_core* %48, %struct.clk_core** %fail_clk, align 8, !dbg !9523
  br label %if.end38, !dbg !9524

if.end38:                                         ; preds = %if.then37, %if.then33
  br label %if.end39, !dbg !9525

if.end39:                                         ; preds = %if.end38, %for.end
  %49 = load %struct.clk_core*, %struct.clk_core** %fail_clk, align 8, !dbg !9526
  store %struct.clk_core* %49, %struct.clk_core** %retval, align 8, !dbg !9527
  br label %return, !dbg !9527

return:                                           ; preds = %if.end39, %if.then
  %50 = load %struct.clk_core*, %struct.clk_core** %retval, align 8, !dbg !9528
  ret %struct.clk_core* %50, !dbg !9528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_change_rate(%struct.clk_core* %core) #0 !dbg !9529 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %child = alloca %struct.clk_core*, align 8
  %tmp = alloca %struct.hlist_node*, align 8
  %old_rate = alloca i64, align 8
  %best_parent_rate = alloca i64, align 8
  %skip_set_rate = alloca i8, align 1
  %old_parent = alloca %struct.clk_core*, align 8
  %parent = alloca %struct.clk_core*, align 8
  %flags16 = alloca i64, align 8
  %flags73 = alloca i64, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp96 = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp98 = alloca %struct.clk_core*, align 8
  %tmp100 = alloca i32, align 4
  %____ptr109 = alloca %struct.hlist_node*, align 8
  %tmp110 = alloca %struct.clk_core*, align 8
  %__mptr113 = alloca i8*, align 8
  %tmp116 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9530, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !9532, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %tmp, metadata !9534, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.declare(metadata i64* %old_rate, metadata !9536, metadata !DIExpression()), !dbg !9537
  call void @llvm.dbg.declare(metadata i64* %best_parent_rate, metadata !9538, metadata !DIExpression()), !dbg !9539
  store i64 0, i64* %best_parent_rate, align 8, !dbg !9539
  call void @llvm.dbg.declare(metadata i8* %skip_set_rate, metadata !9540, metadata !DIExpression()), !dbg !9541
  store i8 0, i8* %skip_set_rate, align 1, !dbg !9541
  call void @llvm.dbg.declare(metadata %struct.clk_core** %old_parent, metadata !9542, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent, metadata !9544, metadata !DIExpression()), !dbg !9545
  store %struct.clk_core* null, %struct.clk_core** %parent, align 8, !dbg !9545
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9546
  %rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 10, !dbg !9547
  %1 = load i64, i64* %rate, align 8, !dbg !9547
  store i64 %1, i64* %old_rate, align 8, !dbg !9548
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9549
  %new_parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 13, !dbg !9551
  %3 = load %struct.clk_core*, %struct.clk_core** %new_parent, align 8, !dbg !9551
  %tobool = icmp ne %struct.clk_core* %3, null, !dbg !9549
  br i1 %tobool, label %if.then, label %if.else, !dbg !9552

if.then:                                          ; preds = %entry
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9553
  %new_parent1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 13, !dbg !9555
  %5 = load %struct.clk_core*, %struct.clk_core** %new_parent1, align 8, !dbg !9555
  store %struct.clk_core* %5, %struct.clk_core** %parent, align 8, !dbg !9556
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9557
  %new_parent2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 13, !dbg !9558
  %7 = load %struct.clk_core*, %struct.clk_core** %new_parent2, align 8, !dbg !9558
  %rate3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %7, i32 0, i32 10, !dbg !9559
  %8 = load i64, i64* %rate3, align 8, !dbg !9559
  store i64 %8, i64* %best_parent_rate, align 8, !dbg !9560
  br label %if.end10, !dbg !9561

if.else:                                          ; preds = %entry
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9562
  %parent4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 6, !dbg !9564
  %10 = load %struct.clk_core*, %struct.clk_core** %parent4, align 8, !dbg !9564
  %tobool5 = icmp ne %struct.clk_core* %10, null, !dbg !9562
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !9565

if.then6:                                         ; preds = %if.else
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9566
  %parent7 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 6, !dbg !9568
  %12 = load %struct.clk_core*, %struct.clk_core** %parent7, align 8, !dbg !9568
  store %struct.clk_core* %12, %struct.clk_core** %parent, align 8, !dbg !9569
  %13 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9570
  %parent8 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %13, i32 0, i32 6, !dbg !9571
  %14 = load %struct.clk_core*, %struct.clk_core** %parent8, align 8, !dbg !9571
  %rate9 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 10, !dbg !9572
  %15 = load i64, i64* %rate9, align 8, !dbg !9572
  store i64 %15, i64* %best_parent_rate, align 8, !dbg !9573
  br label %if.end, !dbg !9574

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %16 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9575
  %call = call i32 @clk_pm_runtime_get(%struct.clk_core* %16) #11, !dbg !9577
  %tobool11 = icmp ne i32 %call, 0, !dbg !9577
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !9578

if.then12:                                        ; preds = %if.end10
  br label %return, !dbg !9579

if.end13:                                         ; preds = %if.end10
  %17 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9580
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %17, i32 0, i32 15, !dbg !9582
  %18 = load i64, i64* %flags, align 8, !dbg !9582
  %and = and i64 %18, 1024, !dbg !9583
  %tobool14 = icmp ne i64 %and, 0, !dbg !9583
  br i1 %tobool14, label %if.then15, label %if.end20, !dbg !9584

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i64* %flags16, metadata !9585, metadata !DIExpression()), !dbg !9587
  %19 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9588
  %call17 = call i32 @clk_core_prepare(%struct.clk_core* %19) #11, !dbg !9589
  %call18 = call i64 @clk_enable_lock() #11, !dbg !9590
  store i64 %call18, i64* %flags16, align 8, !dbg !9591
  %20 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9592
  %call19 = call i32 @clk_core_enable(%struct.clk_core* %20) #11, !dbg !9593
  %21 = load i64, i64* %flags16, align 8, !dbg !9594
  call void @clk_enable_unlock(i64 %21) #11, !dbg !9595
  br label %if.end20, !dbg !9596

if.end20:                                         ; preds = %if.then15, %if.end13
  %22 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9597
  %new_parent21 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %22, i32 0, i32 13, !dbg !9599
  %23 = load %struct.clk_core*, %struct.clk_core** %new_parent21, align 8, !dbg !9599
  %tobool22 = icmp ne %struct.clk_core* %23, null, !dbg !9597
  br i1 %tobool22, label %land.lhs.true, label %if.end47, !dbg !9600

land.lhs.true:                                    ; preds = %if.end20
  %24 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9601
  %new_parent23 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %24, i32 0, i32 13, !dbg !9602
  %25 = load %struct.clk_core*, %struct.clk_core** %new_parent23, align 8, !dbg !9602
  %26 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9603
  %parent24 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %26, i32 0, i32 6, !dbg !9604
  %27 = load %struct.clk_core*, %struct.clk_core** %parent24, align 8, !dbg !9604
  %cmp = icmp ne %struct.clk_core* %25, %27, !dbg !9605
  br i1 %cmp, label %if.then25, label %if.end47, !dbg !9606

if.then25:                                        ; preds = %land.lhs.true
  %28 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9607
  %29 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9609
  %new_parent26 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %29, i32 0, i32 13, !dbg !9610
  %30 = load %struct.clk_core*, %struct.clk_core** %new_parent26, align 8, !dbg !9610
  %call27 = call %struct.clk_core* @__clk_set_parent_before(%struct.clk_core* %28, %struct.clk_core* %30) #11, !dbg !9611
  store %struct.clk_core* %call27, %struct.clk_core** %old_parent, align 8, !dbg !9612
  %31 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9613
  %32 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9614
  %new_parent28 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %32, i32 0, i32 13, !dbg !9615
  %33 = load %struct.clk_core*, %struct.clk_core** %new_parent28, align 8, !dbg !9615
  call void @trace_clk_set_parent(%struct.clk_core* %31, %struct.clk_core* %33) #11, !dbg !9616
  %34 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9617
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %34, i32 0, i32 1, !dbg !9619
  %35 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !9619
  %set_rate_and_parent = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %35, i32 0, i32 16, !dbg !9620
  %36 = load i32 (%struct.clk_hw*, i64, i64, i8)*, i32 (%struct.clk_hw*, i64, i64, i8)** %set_rate_and_parent, align 8, !dbg !9620
  %tobool29 = icmp ne i32 (%struct.clk_hw*, i64, i64, i8)* %36, null, !dbg !9617
  br i1 %tobool29, label %if.then30, label %if.else34, !dbg !9621

if.then30:                                        ; preds = %if.then25
  store i8 1, i8* %skip_set_rate, align 1, !dbg !9622
  %37 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9624
  %ops31 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %37, i32 0, i32 1, !dbg !9625
  %38 = load %struct.clk_ops*, %struct.clk_ops** %ops31, align 8, !dbg !9625
  %set_rate_and_parent32 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %38, i32 0, i32 16, !dbg !9626
  %39 = load i32 (%struct.clk_hw*, i64, i64, i8)*, i32 (%struct.clk_hw*, i64, i64, i8)** %set_rate_and_parent32, align 8, !dbg !9626
  %40 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9627
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %40, i32 0, i32 2, !dbg !9628
  %41 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !9628
  %42 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9629
  %new_rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %42, i32 0, i32 12, !dbg !9630
  %43 = load i64, i64* %new_rate, align 8, !dbg !9630
  %44 = load i64, i64* %best_parent_rate, align 8, !dbg !9631
  %45 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9632
  %new_parent_index = getelementptr inbounds %struct.clk_core, %struct.clk_core* %45, i32 0, i32 9, !dbg !9633
  %46 = load i8, i8* %new_parent_index, align 1, !dbg !9633
  %call33 = call i32 %39(%struct.clk_hw* %41, i64 %43, i64 %44, i8 zeroext %46) #11, !dbg !9624
  br label %if.end44, !dbg !9634

if.else34:                                        ; preds = %if.then25
  %47 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9635
  %ops35 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %47, i32 0, i32 1, !dbg !9637
  %48 = load %struct.clk_ops*, %struct.clk_ops** %ops35, align 8, !dbg !9637
  %set_parent = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %48, i32 0, i32 13, !dbg !9638
  %49 = load i32 (%struct.clk_hw*, i8)*, i32 (%struct.clk_hw*, i8)** %set_parent, align 8, !dbg !9638
  %tobool36 = icmp ne i32 (%struct.clk_hw*, i8)* %49, null, !dbg !9635
  br i1 %tobool36, label %if.then37, label %if.end43, !dbg !9639

if.then37:                                        ; preds = %if.else34
  %50 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9640
  %ops38 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %50, i32 0, i32 1, !dbg !9642
  %51 = load %struct.clk_ops*, %struct.clk_ops** %ops38, align 8, !dbg !9642
  %set_parent39 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %51, i32 0, i32 13, !dbg !9643
  %52 = load i32 (%struct.clk_hw*, i8)*, i32 (%struct.clk_hw*, i8)** %set_parent39, align 8, !dbg !9643
  %53 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9644
  %hw40 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %53, i32 0, i32 2, !dbg !9645
  %54 = load %struct.clk_hw*, %struct.clk_hw** %hw40, align 8, !dbg !9645
  %55 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9646
  %new_parent_index41 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %55, i32 0, i32 9, !dbg !9647
  %56 = load i8, i8* %new_parent_index41, align 1, !dbg !9647
  %call42 = call i32 %52(%struct.clk_hw* %54, i8 zeroext %56) #11, !dbg !9640
  br label %if.end43, !dbg !9648

if.end43:                                         ; preds = %if.then37, %if.else34
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then30
  %57 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9649
  %58 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9650
  %new_parent45 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %58, i32 0, i32 13, !dbg !9651
  %59 = load %struct.clk_core*, %struct.clk_core** %new_parent45, align 8, !dbg !9651
  call void @trace_clk_set_parent_complete(%struct.clk_core* %57, %struct.clk_core* %59) #11, !dbg !9652
  %60 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9653
  %61 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9654
  %new_parent46 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %61, i32 0, i32 13, !dbg !9655
  %62 = load %struct.clk_core*, %struct.clk_core** %new_parent46, align 8, !dbg !9655
  %63 = load %struct.clk_core*, %struct.clk_core** %old_parent, align 8, !dbg !9656
  call void @__clk_set_parent_after(%struct.clk_core* %60, %struct.clk_core* %62, %struct.clk_core* %63) #11, !dbg !9657
  br label %if.end47, !dbg !9658

if.end47:                                         ; preds = %if.end44, %land.lhs.true, %if.end20
  %64 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9659
  %flags48 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %64, i32 0, i32 15, !dbg !9661
  %65 = load i64, i64* %flags48, align 8, !dbg !9661
  %and49 = and i64 %65, 4096, !dbg !9662
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9662
  br i1 %tobool50, label %if.then51, label %if.end53, !dbg !9663

if.then51:                                        ; preds = %if.end47
  %66 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9664
  %call52 = call i32 @clk_core_prepare_enable(%struct.clk_core* %66) #11, !dbg !9665
  br label %if.end53, !dbg !9665

if.end53:                                         ; preds = %if.then51, %if.end47
  %67 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9666
  %68 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9667
  %new_rate54 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %68, i32 0, i32 12, !dbg !9668
  %69 = load i64, i64* %new_rate54, align 8, !dbg !9668
  call void @trace_clk_set_rate(%struct.clk_core* %67, i64 %69) #11, !dbg !9669
  %70 = load i8, i8* %skip_set_rate, align 1, !dbg !9670
  %tobool55 = trunc i8 %70 to i1, !dbg !9670
  br i1 %tobool55, label %if.end65, label %land.lhs.true56, !dbg !9672

land.lhs.true56:                                  ; preds = %if.end53
  %71 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9673
  %ops57 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %71, i32 0, i32 1, !dbg !9674
  %72 = load %struct.clk_ops*, %struct.clk_ops** %ops57, align 8, !dbg !9674
  %set_rate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %72, i32 0, i32 15, !dbg !9675
  %73 = load i32 (%struct.clk_hw*, i64, i64)*, i32 (%struct.clk_hw*, i64, i64)** %set_rate, align 8, !dbg !9675
  %tobool58 = icmp ne i32 (%struct.clk_hw*, i64, i64)* %73, null, !dbg !9673
  br i1 %tobool58, label %if.then59, label %if.end65, !dbg !9676

if.then59:                                        ; preds = %land.lhs.true56
  %74 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9677
  %ops60 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %74, i32 0, i32 1, !dbg !9678
  %75 = load %struct.clk_ops*, %struct.clk_ops** %ops60, align 8, !dbg !9678
  %set_rate61 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %75, i32 0, i32 15, !dbg !9679
  %76 = load i32 (%struct.clk_hw*, i64, i64)*, i32 (%struct.clk_hw*, i64, i64)** %set_rate61, align 8, !dbg !9679
  %77 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9680
  %hw62 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %77, i32 0, i32 2, !dbg !9681
  %78 = load %struct.clk_hw*, %struct.clk_hw** %hw62, align 8, !dbg !9681
  %79 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9682
  %new_rate63 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %79, i32 0, i32 12, !dbg !9683
  %80 = load i64, i64* %new_rate63, align 8, !dbg !9683
  %81 = load i64, i64* %best_parent_rate, align 8, !dbg !9684
  %call64 = call i32 %76(%struct.clk_hw* %78, i64 %80, i64 %81) #11, !dbg !9677
  br label %if.end65, !dbg !9677

if.end65:                                         ; preds = %if.then59, %land.lhs.true56, %if.end53
  %82 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9685
  %83 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9686
  %new_rate66 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %83, i32 0, i32 12, !dbg !9687
  %84 = load i64, i64* %new_rate66, align 8, !dbg !9687
  call void @trace_clk_set_rate_complete(%struct.clk_core* %82, i64 %84) #11, !dbg !9688
  %85 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9689
  %86 = load i64, i64* %best_parent_rate, align 8, !dbg !9690
  %call67 = call i64 @clk_recalc(%struct.clk_core* %85, i64 %86) #11, !dbg !9691
  %87 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9692
  %rate68 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %87, i32 0, i32 10, !dbg !9693
  store i64 %call67, i64* %rate68, align 8, !dbg !9694
  %88 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9695
  %flags69 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %88, i32 0, i32 15, !dbg !9697
  %89 = load i64, i64* %flags69, align 8, !dbg !9697
  %and70 = and i64 %89, 1024, !dbg !9698
  %tobool71 = icmp ne i64 %and70, 0, !dbg !9698
  br i1 %tobool71, label %if.then72, label %if.end75, !dbg !9699

if.then72:                                        ; preds = %if.end65
  call void @llvm.dbg.declare(metadata i64* %flags73, metadata !9700, metadata !DIExpression()), !dbg !9702
  %call74 = call i64 @clk_enable_lock() #11, !dbg !9703
  store i64 %call74, i64* %flags73, align 8, !dbg !9704
  %90 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9705
  call void @clk_core_disable(%struct.clk_core* %90) #11, !dbg !9706
  %91 = load i64, i64* %flags73, align 8, !dbg !9707
  call void @clk_enable_unlock(i64 %91) #11, !dbg !9708
  %92 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9709
  call void @clk_core_unprepare(%struct.clk_core* %92) #11, !dbg !9710
  br label %if.end75, !dbg !9711

if.end75:                                         ; preds = %if.then72, %if.end65
  %93 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9712
  %flags76 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %93, i32 0, i32 15, !dbg !9714
  %94 = load i64, i64* %flags76, align 8, !dbg !9714
  %and77 = and i64 %94, 4096, !dbg !9715
  %tobool78 = icmp ne i64 %and77, 0, !dbg !9715
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !9716

if.then79:                                        ; preds = %if.end75
  %95 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9717
  call void @clk_core_disable_unprepare(%struct.clk_core* %95) #11, !dbg !9718
  br label %if.end80, !dbg !9718

if.end80:                                         ; preds = %if.then79, %if.end75
  %96 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9719
  %notifier_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %96, i32 0, i32 29, !dbg !9721
  %97 = load i32, i32* %notifier_count, align 8, !dbg !9721
  %tobool81 = icmp ne i32 %97, 0, !dbg !9719
  br i1 %tobool81, label %land.lhs.true82, label %if.end88, !dbg !9722

land.lhs.true82:                                  ; preds = %if.end80
  %98 = load i64, i64* %old_rate, align 8, !dbg !9723
  %99 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9724
  %rate83 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %99, i32 0, i32 10, !dbg !9725
  %100 = load i64, i64* %rate83, align 8, !dbg !9725
  %cmp84 = icmp ne i64 %98, %100, !dbg !9726
  br i1 %cmp84, label %if.then85, label %if.end88, !dbg !9727

if.then85:                                        ; preds = %land.lhs.true82
  %101 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9728
  %102 = load i64, i64* %old_rate, align 8, !dbg !9729
  %103 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9730
  %rate86 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %103, i32 0, i32 10, !dbg !9731
  %104 = load i64, i64* %rate86, align 8, !dbg !9731
  %call87 = call i32 @__clk_notify(%struct.clk_core* %101, i64 2, i64 %102, i64 %104) #11, !dbg !9732
  br label %if.end88, !dbg !9732

if.end88:                                         ; preds = %if.then85, %land.lhs.true82, %if.end80
  %105 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9733
  %flags89 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %105, i32 0, i32 15, !dbg !9735
  %106 = load i64, i64* %flags89, align 8, !dbg !9735
  %and90 = and i64 %106, 512, !dbg !9736
  %tobool91 = icmp ne i64 %and90, 0, !dbg !9736
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !9737

if.then92:                                        ; preds = %if.end88
  %107 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9738
  %108 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9739
  %new_rate93 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %108, i32 0, i32 12, !dbg !9740
  %109 = load i64, i64* %new_rate93, align 8, !dbg !9740
  %call94 = call %struct.clk_core* @clk_calc_new_rates(%struct.clk_core* %107, i64 %109) #11, !dbg !9741
  br label %if.end95, !dbg !9742

if.end95:                                         ; preds = %if.then92, %if.end88
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !9743, metadata !DIExpression()), !dbg !9746
  %110 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9746
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %110, i32 0, i32 26, !dbg !9746
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !9746
  %111 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !9746
  store %struct.hlist_node* %111, %struct.hlist_node** %____ptr, align 8, !dbg !9746
  %112 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !9746
  %tobool97 = icmp ne %struct.hlist_node* %112, null, !dbg !9746
  br i1 %tobool97, label %cond.true, label %cond.false, !dbg !9746

cond.true:                                        ; preds = %if.end95
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9747, metadata !DIExpression()), !dbg !9749
  %113 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !9749
  %114 = bitcast %struct.hlist_node* %113 to i8*, !dbg !9749
  store i8* %114, i8** %__mptr, align 8, !dbg !9749
  br label %do.body, !dbg !9749

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !9750

do.end:                                           ; preds = %do.body
  %115 = load i8*, i8** %__mptr, align 8, !dbg !9749
  %add.ptr = getelementptr i8, i8* %115, i64 -184, !dbg !9749
  %116 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !9749
  store %struct.clk_core* %116, %struct.clk_core** %tmp98, align 8, !dbg !9750
  %117 = load %struct.clk_core*, %struct.clk_core** %tmp98, align 8, !dbg !9749
  br label %cond.end, !dbg !9746

cond.false:                                       ; preds = %if.end95
  br label %cond.end, !dbg !9746

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %117, %do.end ], [ null, %cond.false ], !dbg !9746
  store %struct.clk_core* %cond, %struct.clk_core** %tmp96, align 8, !dbg !9746
  %118 = load %struct.clk_core*, %struct.clk_core** %tmp96, align 8, !dbg !9746
  store %struct.clk_core* %118, %struct.clk_core** %child, align 8, !dbg !9752
  br label %for.cond, !dbg !9752

for.cond:                                         ; preds = %cond.end119, %cond.end
  %119 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9753
  %tobool99 = icmp ne %struct.clk_core* %119, null, !dbg !9753
  br i1 %tobool99, label %land.rhs, label %land.end, !dbg !9753

land.rhs:                                         ; preds = %for.cond
  %120 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9755
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %120, i32 0, i32 27, !dbg !9755
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !9755
  %121 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !9755
  store %struct.hlist_node* %121, %struct.hlist_node** %tmp, align 8, !dbg !9755
  store i32 1, i32* %tmp100, align 4, !dbg !9755
  %122 = load i32, i32* %tmp100, align 4, !dbg !9755
  %tobool101 = icmp ne i32 %122, 0, !dbg !9753
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %123 = phi i1 [ false, %for.cond ], [ %tobool101, %land.rhs ], !dbg !9757
  br i1 %123, label %for.body, label %for.end, !dbg !9752

for.body:                                         ; preds = %land.end
  %124 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9758
  %new_parent102 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %124, i32 0, i32 13, !dbg !9761
  %125 = load %struct.clk_core*, %struct.clk_core** %new_parent102, align 8, !dbg !9761
  %tobool103 = icmp ne %struct.clk_core* %125, null, !dbg !9758
  br i1 %tobool103, label %land.lhs.true104, label %if.end108, !dbg !9762

land.lhs.true104:                                 ; preds = %for.body
  %126 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9763
  %new_parent105 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %126, i32 0, i32 13, !dbg !9764
  %127 = load %struct.clk_core*, %struct.clk_core** %new_parent105, align 8, !dbg !9764
  %128 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9765
  %cmp106 = icmp ne %struct.clk_core* %127, %128, !dbg !9766
  br i1 %cmp106, label %if.then107, label %if.end108, !dbg !9767

if.then107:                                       ; preds = %land.lhs.true104
  br label %for.inc, !dbg !9768

if.end108:                                        ; preds = %land.lhs.true104, %for.body
  %129 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9769
  call void @clk_change_rate(%struct.clk_core* %129) #11, !dbg !9770
  br label %for.inc, !dbg !9771

for.inc:                                          ; preds = %if.end108, %if.then107
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr109, metadata !9772, metadata !DIExpression()), !dbg !9774
  %130 = load %struct.hlist_node*, %struct.hlist_node** %tmp, align 8, !dbg !9774
  store %struct.hlist_node* %130, %struct.hlist_node** %____ptr109, align 8, !dbg !9774
  %131 = load %struct.hlist_node*, %struct.hlist_node** %____ptr109, align 8, !dbg !9774
  %tobool111 = icmp ne %struct.hlist_node* %131, null, !dbg !9774
  br i1 %tobool111, label %cond.true112, label %cond.false118, !dbg !9774

cond.true112:                                     ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr113, metadata !9775, metadata !DIExpression()), !dbg !9777
  %132 = load %struct.hlist_node*, %struct.hlist_node** %____ptr109, align 8, !dbg !9777
  %133 = bitcast %struct.hlist_node* %132 to i8*, !dbg !9777
  store i8* %133, i8** %__mptr113, align 8, !dbg !9777
  br label %do.body114, !dbg !9777

do.body114:                                       ; preds = %cond.true112
  br label %do.end115, !dbg !9778

do.end115:                                        ; preds = %do.body114
  %134 = load i8*, i8** %__mptr113, align 8, !dbg !9777
  %add.ptr117 = getelementptr i8, i8* %134, i64 -184, !dbg !9777
  %135 = bitcast i8* %add.ptr117 to %struct.clk_core*, !dbg !9777
  store %struct.clk_core* %135, %struct.clk_core** %tmp116, align 8, !dbg !9778
  %136 = load %struct.clk_core*, %struct.clk_core** %tmp116, align 8, !dbg !9777
  br label %cond.end119, !dbg !9774

cond.false118:                                    ; preds = %for.inc
  br label %cond.end119, !dbg !9774

cond.end119:                                      ; preds = %cond.false118, %do.end115
  %cond120 = phi %struct.clk_core* [ %136, %do.end115 ], [ null, %cond.false118 ], !dbg !9774
  store %struct.clk_core* %cond120, %struct.clk_core** %tmp110, align 8, !dbg !9774
  %137 = load %struct.clk_core*, %struct.clk_core** %tmp110, align 8, !dbg !9774
  store %struct.clk_core* %137, %struct.clk_core** %child, align 8, !dbg !9753
  br label %for.cond, !dbg !9753, !llvm.loop !9780

for.end:                                          ; preds = %land.end
  %138 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9782
  %new_child = getelementptr inbounds %struct.clk_core, %struct.clk_core* %138, i32 0, i32 14, !dbg !9784
  %139 = load %struct.clk_core*, %struct.clk_core** %new_child, align 8, !dbg !9784
  %tobool121 = icmp ne %struct.clk_core* %139, null, !dbg !9782
  br i1 %tobool121, label %if.then122, label %if.end124, !dbg !9785

if.then122:                                       ; preds = %for.end
  %140 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9786
  %new_child123 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %140, i32 0, i32 14, !dbg !9787
  %141 = load %struct.clk_core*, %struct.clk_core** %new_child123, align 8, !dbg !9787
  call void @clk_change_rate(%struct.clk_core* %141) #11, !dbg !9788
  br label %if.end124, !dbg !9788

if.end124:                                        ; preds = %if.then122, %for.end
  %142 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9789
  call void @clk_pm_runtime_put(%struct.clk_core* %142) #11, !dbg !9790
  br label %return, !dbg !9791

return:                                           ; preds = %if.end124, %if.then12
  ret void, !dbg !9791
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_rate_nuke_protect(%struct.clk_core* %core) #0 !dbg !9792 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9793, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9795, metadata !DIExpression()), !dbg !9796
  br label %do.body, !dbg !9797

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9798

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9800
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !9800
  br i1 %tobool, label %if.end, label %if.then, !dbg !9802

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !9803
  br label %return, !dbg !9803

if.end:                                           ; preds = %do.end
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9804
  %protect_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 20, !dbg !9806
  %2 = load i32, i32* %protect_count, align 4, !dbg !9806
  %cmp = icmp eq i32 %2, 0, !dbg !9807
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !9808

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9809
  br label %return, !dbg !9809

if.end2:                                          ; preds = %if.end
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9810
  %protect_count3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 20, !dbg !9811
  %4 = load i32, i32* %protect_count3, align 4, !dbg !9811
  store i32 %4, i32* %ret, align 4, !dbg !9812
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9813
  %protect_count4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 20, !dbg !9814
  store i32 1, i32* %protect_count4, align 4, !dbg !9815
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9816
  call void @clk_core_rate_unprotect(%struct.clk_core* %6) #11, !dbg !9817
  %7 = load i32, i32* %ret, align 4, !dbg !9818
  store i32 %7, i32* %retval, align 4, !dbg !9819
  br label %return, !dbg !9819

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !9820
  ret i32 %8, !dbg !9820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_rate_restore_protect(%struct.clk_core* %core, i32 %count) #0 !dbg !9821 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %count.addr = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9824, metadata !DIExpression()), !dbg !9825
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !9826, metadata !DIExpression()), !dbg !9827
  br label %do.body, !dbg !9828

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9829

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9831
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !9831
  br i1 %tobool, label %if.end, label %if.then, !dbg !9833

if.then:                                          ; preds = %do.end
  br label %return, !dbg !9834

if.end:                                           ; preds = %do.end
  %1 = load i32, i32* %count.addr, align 4, !dbg !9835
  %cmp = icmp eq i32 %1, 0, !dbg !9837
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !9838

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !9839

if.end2:                                          ; preds = %if.end
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9840
  call void @clk_core_rate_protect(%struct.clk_core* %2) #11, !dbg !9841
  %3 = load i32, i32* %count.addr, align 4, !dbg !9842
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9843
  %protect_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 20, !dbg !9844
  store i32 %3, i32* %protect_count, align 4, !dbg !9845
  br label %return, !dbg !9846

return:                                           ; preds = %if.end2, %if.then1, %if.then
  ret void, !dbg !9846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_calc_subtree(%struct.clk_core* %core, i64 %new_rate, %struct.clk_core* %new_parent, i8 zeroext %p_index) #0 !dbg !9847 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %new_rate.addr = alloca i64, align 8
  %new_parent.addr = alloca %struct.clk_core*, align 8
  %p_index.addr = alloca i8, align 1
  %child = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp5 = alloca %struct.clk_core*, align 8
  %____ptr9 = alloca %struct.hlist_node*, align 8
  %tmp10 = alloca %struct.clk_core*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp16 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9850, metadata !DIExpression()), !dbg !9851
  store i64 %new_rate, i64* %new_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %new_rate.addr, metadata !9852, metadata !DIExpression()), !dbg !9853
  store %struct.clk_core* %new_parent, %struct.clk_core** %new_parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %new_parent.addr, metadata !9854, metadata !DIExpression()), !dbg !9855
  store i8 %p_index, i8* %p_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %p_index.addr, metadata !9856, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !9858, metadata !DIExpression()), !dbg !9859
  %0 = load i64, i64* %new_rate.addr, align 8, !dbg !9860
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9861
  %new_rate1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 12, !dbg !9862
  store i64 %0, i64* %new_rate1, align 8, !dbg !9863
  %2 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !9864
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9865
  %new_parent2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 13, !dbg !9866
  store %struct.clk_core* %2, %struct.clk_core** %new_parent2, align 8, !dbg !9867
  %4 = load i8, i8* %p_index.addr, align 1, !dbg !9868
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9869
  %new_parent_index = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 9, !dbg !9870
  store i8 %4, i8* %new_parent_index, align 1, !dbg !9871
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9872
  %new_child = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 14, !dbg !9873
  store %struct.clk_core* null, %struct.clk_core** %new_child, align 8, !dbg !9874
  %7 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !9875
  %tobool = icmp ne %struct.clk_core* %7, null, !dbg !9875
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9877

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !9878
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9879
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 6, !dbg !9880
  %10 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !9880
  %cmp = icmp ne %struct.clk_core* %8, %10, !dbg !9881
  br i1 %cmp, label %if.then, label %if.end, !dbg !9882

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9883
  %12 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !9884
  %new_child3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %12, i32 0, i32 14, !dbg !9885
  store %struct.clk_core* %11, %struct.clk_core** %new_child3, align 8, !dbg !9886
  br label %if.end, !dbg !9884

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !9887, metadata !DIExpression()), !dbg !9890
  %13 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9890
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %13, i32 0, i32 26, !dbg !9890
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !9890
  %14 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !9890
  store %struct.hlist_node* %14, %struct.hlist_node** %____ptr, align 8, !dbg !9890
  %15 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !9890
  %tobool4 = icmp ne %struct.hlist_node* %15, null, !dbg !9890
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !9890

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9891, metadata !DIExpression()), !dbg !9893
  %16 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !9893
  %17 = bitcast %struct.hlist_node* %16 to i8*, !dbg !9893
  store i8* %17, i8** %__mptr, align 8, !dbg !9893
  br label %do.body, !dbg !9893

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !9894

do.end:                                           ; preds = %do.body
  %18 = load i8*, i8** %__mptr, align 8, !dbg !9893
  %add.ptr = getelementptr i8, i8* %18, i64 -184, !dbg !9893
  %19 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !9893
  store %struct.clk_core* %19, %struct.clk_core** %tmp5, align 8, !dbg !9894
  %20 = load %struct.clk_core*, %struct.clk_core** %tmp5, align 8, !dbg !9893
  br label %cond.end, !dbg !9890

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !9890

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %20, %do.end ], [ null, %cond.false ], !dbg !9890
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !9890
  %21 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !9890
  store %struct.clk_core* %21, %struct.clk_core** %child, align 8, !dbg !9896
  br label %for.cond, !dbg !9896

for.cond:                                         ; preds = %cond.end19, %cond.end
  %22 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9897
  %tobool6 = icmp ne %struct.clk_core* %22, null, !dbg !9896
  br i1 %tobool6, label %for.body, label %for.end, !dbg !9896

for.body:                                         ; preds = %for.cond
  %23 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9899
  %24 = load i64, i64* %new_rate.addr, align 8, !dbg !9901
  %call = call i64 @clk_recalc(%struct.clk_core* %23, i64 %24) #11, !dbg !9902
  %25 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9903
  %new_rate7 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %25, i32 0, i32 12, !dbg !9904
  store i64 %call, i64* %new_rate7, align 8, !dbg !9905
  %26 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9906
  %27 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9907
  %new_rate8 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %27, i32 0, i32 12, !dbg !9908
  %28 = load i64, i64* %new_rate8, align 8, !dbg !9908
  call void @clk_calc_subtree(%struct.clk_core* %26, i64 %28, %struct.clk_core* null, i8 zeroext 0) #11, !dbg !9909
  br label %for.inc, !dbg !9910

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr9, metadata !9911, metadata !DIExpression()), !dbg !9913
  %29 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !9913
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %29, i32 0, i32 27, !dbg !9913
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !9913
  %30 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !9913
  store %struct.hlist_node* %30, %struct.hlist_node** %____ptr9, align 8, !dbg !9913
  %31 = load %struct.hlist_node*, %struct.hlist_node** %____ptr9, align 8, !dbg !9913
  %tobool11 = icmp ne %struct.hlist_node* %31, null, !dbg !9913
  br i1 %tobool11, label %cond.true12, label %cond.false18, !dbg !9913

cond.true12:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !9914, metadata !DIExpression()), !dbg !9916
  %32 = load %struct.hlist_node*, %struct.hlist_node** %____ptr9, align 8, !dbg !9916
  %33 = bitcast %struct.hlist_node* %32 to i8*, !dbg !9916
  store i8* %33, i8** %__mptr13, align 8, !dbg !9916
  br label %do.body14, !dbg !9916

do.body14:                                        ; preds = %cond.true12
  br label %do.end15, !dbg !9917

do.end15:                                         ; preds = %do.body14
  %34 = load i8*, i8** %__mptr13, align 8, !dbg !9916
  %add.ptr17 = getelementptr i8, i8* %34, i64 -184, !dbg !9916
  %35 = bitcast i8* %add.ptr17 to %struct.clk_core*, !dbg !9916
  store %struct.clk_core* %35, %struct.clk_core** %tmp16, align 8, !dbg !9917
  %36 = load %struct.clk_core*, %struct.clk_core** %tmp16, align 8, !dbg !9916
  br label %cond.end19, !dbg !9913

cond.false18:                                     ; preds = %for.inc
  br label %cond.end19, !dbg !9913

cond.end19:                                       ; preds = %cond.false18, %do.end15
  %cond20 = phi %struct.clk_core* [ %36, %do.end15 ], [ null, %cond.false18 ], !dbg !9913
  store %struct.clk_core* %cond20, %struct.clk_core** %tmp10, align 8, !dbg !9913
  %37 = load %struct.clk_core*, %struct.clk_core** %tmp10, align 8, !dbg !9913
  store %struct.clk_core* %37, %struct.clk_core** %child, align 8, !dbg !9897
  br label %for.cond, !dbg !9897, !llvm.loop !9919

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9921
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk_core* @__clk_set_parent_before(%struct.clk_core* %core, %struct.clk_core* %parent) #0 !dbg !9922 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %parent.addr = alloca %struct.clk_core*, align 8
  %flags = alloca i64, align 8
  %old_parent = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9925, metadata !DIExpression()), !dbg !9926
  store %struct.clk_core* %parent, %struct.clk_core** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent.addr, metadata !9927, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9929, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.declare(metadata %struct.clk_core** %old_parent, metadata !9931, metadata !DIExpression()), !dbg !9932
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9933
  %parent1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 6, !dbg !9934
  %1 = load %struct.clk_core*, %struct.clk_core** %parent1, align 8, !dbg !9934
  store %struct.clk_core* %1, %struct.clk_core** %old_parent, align 8, !dbg !9932
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9935
  %flags2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 15, !dbg !9937
  %3 = load i64, i64* %flags2, align 8, !dbg !9937
  %and = and i64 %3, 4096, !dbg !9938
  %tobool = icmp ne i64 %and, 0, !dbg !9938
  br i1 %tobool, label %if.then, label %if.end, !dbg !9939

if.then:                                          ; preds = %entry
  %4 = load %struct.clk_core*, %struct.clk_core** %old_parent, align 8, !dbg !9940
  %call = call i32 @clk_core_prepare_enable(%struct.clk_core* %4) #11, !dbg !9942
  %5 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !9943
  %call3 = call i32 @clk_core_prepare_enable(%struct.clk_core* %5) #11, !dbg !9944
  br label %if.end, !dbg !9945

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9946
  %prepare_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 19, !dbg !9948
  %7 = load i32, i32* %prepare_count, align 8, !dbg !9948
  %tobool4 = icmp ne i32 %7, 0, !dbg !9946
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !9949

if.then5:                                         ; preds = %if.end
  %8 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !9950
  %call6 = call i32 @clk_core_prepare_enable(%struct.clk_core* %8) #11, !dbg !9952
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9953
  %call7 = call i32 @clk_core_enable_lock(%struct.clk_core* %9) #11, !dbg !9954
  br label %if.end8, !dbg !9955

if.end8:                                          ; preds = %if.then5, %if.end
  %call9 = call i64 @clk_enable_lock() #11, !dbg !9956
  store i64 %call9, i64* %flags, align 8, !dbg !9957
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9958
  %11 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !9959
  call void @clk_reparent(%struct.clk_core* %10, %struct.clk_core* %11) #11, !dbg !9960
  %12 = load i64, i64* %flags, align 8, !dbg !9961
  call void @clk_enable_unlock(i64 %12) #11, !dbg !9962
  %13 = load %struct.clk_core*, %struct.clk_core** %old_parent, align 8, !dbg !9963
  ret %struct.clk_core* %13, !dbg !9964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_set_parent(%struct.clk_core* %core, %struct.clk_core* %parent) #0 !dbg !9965 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %parent.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9966, metadata !DIExpression()), !dbg !9967
  store %struct.clk_core* %parent, %struct.clk_core** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent.addr, metadata !9968, metadata !DIExpression()), !dbg !9967
  ret void, !dbg !9967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_set_parent_complete(%struct.clk_core* %core, %struct.clk_core* %parent) #0 !dbg !9969 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %parent.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9970, metadata !DIExpression()), !dbg !9971
  store %struct.clk_core* %parent, %struct.clk_core** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent.addr, metadata !9972, metadata !DIExpression()), !dbg !9971
  ret void, !dbg !9971
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clk_set_parent_after(%struct.clk_core* %core, %struct.clk_core* %parent, %struct.clk_core* %old_parent) #0 !dbg !9973 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %parent.addr = alloca %struct.clk_core*, align 8
  %old_parent.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !9976, metadata !DIExpression()), !dbg !9977
  store %struct.clk_core* %parent, %struct.clk_core** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent.addr, metadata !9978, metadata !DIExpression()), !dbg !9979
  store %struct.clk_core* %old_parent, %struct.clk_core** %old_parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %old_parent.addr, metadata !9980, metadata !DIExpression()), !dbg !9981
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9982
  %prepare_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 19, !dbg !9984
  %1 = load i32, i32* %prepare_count, align 8, !dbg !9984
  %tobool = icmp ne i32 %1, 0, !dbg !9982
  br i1 %tobool, label %if.then, label %if.end, !dbg !9985

if.then:                                          ; preds = %entry
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9986
  call void @clk_core_disable_lock(%struct.clk_core* %2) #11, !dbg !9988
  %3 = load %struct.clk_core*, %struct.clk_core** %old_parent.addr, align 8, !dbg !9989
  call void @clk_core_disable_unprepare(%struct.clk_core* %3) #11, !dbg !9990
  br label %if.end, !dbg !9991

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !9992
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 15, !dbg !9994
  %5 = load i64, i64* %flags, align 8, !dbg !9994
  %and = and i64 %5, 4096, !dbg !9995
  %tobool1 = icmp ne i64 %and, 0, !dbg !9995
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9996

if.then2:                                         ; preds = %if.end
  %6 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !9997
  call void @clk_core_disable_unprepare(%struct.clk_core* %6) #11, !dbg !9999
  %7 = load %struct.clk_core*, %struct.clk_core** %old_parent.addr, align 8, !dbg !10000
  call void @clk_core_disable_unprepare(%struct.clk_core* %7) #11, !dbg !10001
  br label %if.end3, !dbg !10002

if.end3:                                          ; preds = %if.then2, %if.end
  ret void, !dbg !10003
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_set_rate(%struct.clk_core* %core, i64 %rate) #0 !dbg !10004 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %rate.addr = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10005, metadata !DIExpression()), !dbg !10006
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !10007, metadata !DIExpression()), !dbg !10006
  ret void, !dbg !10006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_set_rate_complete(%struct.clk_core* %core, i64 %rate) #0 !dbg !10008 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %rate.addr = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10009, metadata !DIExpression()), !dbg !10010
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !10011, metadata !DIExpression()), !dbg !10010
  ret void, !dbg !10010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_reparent(%struct.clk_core* %core, %struct.clk_core* %new_parent) #0 !dbg !10012 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %new_parent.addr = alloca %struct.clk_core*, align 8
  %was_orphan = alloca i8, align 1
  %becomes_orphan = alloca i8, align 1
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10013, metadata !DIExpression()), !dbg !10014
  store %struct.clk_core* %new_parent, %struct.clk_core** %new_parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %new_parent.addr, metadata !10015, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.declare(metadata i8* %was_orphan, metadata !10017, metadata !DIExpression()), !dbg !10018
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10019
  %orphan = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 16, !dbg !10020
  %1 = load i8, i8* %orphan, align 8, !dbg !10020
  %tobool = trunc i8 %1 to i1, !dbg !10020
  %frombool = zext i1 %tobool to i8, !dbg !10018
  store i8 %frombool, i8* %was_orphan, align 1, !dbg !10018
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10021
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 27, !dbg !10022
  call void @hlist_del(%struct.hlist_node* %child_node) #11, !dbg !10023
  %3 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !10024
  %tobool1 = icmp ne %struct.clk_core* %3, null, !dbg !10024
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10026

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %becomes_orphan, metadata !10027, metadata !DIExpression()), !dbg !10029
  %4 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !10030
  %orphan2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 16, !dbg !10031
  %5 = load i8, i8* %orphan2, align 8, !dbg !10031
  %tobool3 = trunc i8 %5 to i1, !dbg !10031
  %frombool4 = zext i1 %tobool3 to i8, !dbg !10029
  store i8 %frombool4, i8* %becomes_orphan, align 1, !dbg !10029
  %6 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !10032
  %new_child = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 14, !dbg !10034
  %7 = load %struct.clk_core*, %struct.clk_core** %new_child, align 8, !dbg !10034
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10035
  %cmp = icmp eq %struct.clk_core* %7, %8, !dbg !10036
  br i1 %cmp, label %if.then5, label %if.end, !dbg !10037

if.then5:                                         ; preds = %if.then
  %9 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !10038
  %new_child6 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 14, !dbg !10039
  store %struct.clk_core* null, %struct.clk_core** %new_child6, align 8, !dbg !10040
  br label %if.end, !dbg !10038

if.end:                                           ; preds = %if.then5, %if.then
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10041
  %child_node7 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 27, !dbg !10042
  %11 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !10043
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 26, !dbg !10044
  call void @hlist_add_head(%struct.hlist_node* %child_node7, %struct.hlist_head* %children) #11, !dbg !10045
  %12 = load i8, i8* %was_orphan, align 1, !dbg !10046
  %tobool8 = trunc i8 %12 to i1, !dbg !10046
  %conv = zext i1 %tobool8 to i32, !dbg !10046
  %13 = load i8, i8* %becomes_orphan, align 1, !dbg !10048
  %tobool9 = trunc i8 %13 to i1, !dbg !10048
  %conv10 = zext i1 %tobool9 to i32, !dbg !10048
  %cmp11 = icmp ne i32 %conv, %conv10, !dbg !10049
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !10050

if.then13:                                        ; preds = %if.end
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10051
  %15 = load i8, i8* %becomes_orphan, align 1, !dbg !10052
  %tobool14 = trunc i8 %15 to i1, !dbg !10052
  call void @clk_core_update_orphan_status(%struct.clk_core* %14, i1 zeroext %tobool14) #11, !dbg !10053
  br label %if.end15, !dbg !10053

if.end15:                                         ; preds = %if.then13, %if.end
  br label %if.end20, !dbg !10054

if.else:                                          ; preds = %entry
  %16 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10055
  %child_node16 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %16, i32 0, i32 27, !dbg !10057
  call void @hlist_add_head(%struct.hlist_node* %child_node16, %struct.hlist_head* @clk_orphan_list) #11, !dbg !10058
  %17 = load i8, i8* %was_orphan, align 1, !dbg !10059
  %tobool17 = trunc i8 %17 to i1, !dbg !10059
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !10061

if.then18:                                        ; preds = %if.else
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10062
  call void @clk_core_update_orphan_status(%struct.clk_core* %18, i1 zeroext true) #11, !dbg !10063
  br label %if.end19, !dbg !10063

if.end19:                                         ; preds = %if.then18, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end15
  %19 = load %struct.clk_core*, %struct.clk_core** %new_parent.addr, align 8, !dbg !10064
  %20 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10065
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %20, i32 0, i32 6, !dbg !10066
  store %struct.clk_core* %19, %struct.clk_core** %parent, align 8, !dbg !10067
  ret void, !dbg !10068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hlist_add_head(%struct.hlist_node* %n, %struct.hlist_head* %h) #0 !dbg !10069 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  %h.addr = alloca %struct.hlist_head*, align 8
  %first = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !10072, metadata !DIExpression()), !dbg !10073
  store %struct.hlist_head* %h, %struct.hlist_head** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %h.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %first, metadata !10076, metadata !DIExpression()), !dbg !10077
  %0 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !10078
  %first1 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %0, i32 0, i32 0, !dbg !10079
  %1 = load %struct.hlist_node*, %struct.hlist_node** %first1, align 8, !dbg !10079
  store %struct.hlist_node* %1, %struct.hlist_node** %first, align 8, !dbg !10077
  br label %do.body, !dbg !10080

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !10081

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !10083

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !10081

do.body3:                                         ; preds = %do.end
  %2 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !10085
  %3 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !10085
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %3, i32 0, i32 0, !dbg !10085
  store volatile %struct.hlist_node* %2, %struct.hlist_node** %next, align 8, !dbg !10085
  br label %do.end4, !dbg !10085

do.end4:                                          ; preds = %do.body3
  br label %do.end5, !dbg !10081

do.end5:                                          ; preds = %do.end4
  %4 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !10087
  %tobool = icmp ne %struct.hlist_node* %4, null, !dbg !10087
  br i1 %tobool, label %if.then, label %if.end, !dbg !10089

if.then:                                          ; preds = %do.end5
  br label %do.body6, !dbg !10090

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !10091

do.body7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !10093

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !10091

do.body9:                                         ; preds = %do.end8
  %5 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !10095
  %next10 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %5, i32 0, i32 0, !dbg !10095
  %6 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !10095
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %6, i32 0, i32 1, !dbg !10095
  store volatile %struct.hlist_node** %next10, %struct.hlist_node*** %pprev, align 8, !dbg !10095
  br label %do.end11, !dbg !10095

do.end11:                                         ; preds = %do.body9
  br label %do.end12, !dbg !10091

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !10091

if.end:                                           ; preds = %do.end12, %do.end5
  br label %do.body13, !dbg !10097

do.body13:                                        ; preds = %if.end
  br label %do.body14, !dbg !10098

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !10100

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !10098

do.body16:                                        ; preds = %do.end15
  %7 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !10102
  %8 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !10102
  %first17 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %8, i32 0, i32 0, !dbg !10102
  store volatile %struct.hlist_node* %7, %struct.hlist_node** %first17, align 8, !dbg !10102
  br label %do.end18, !dbg !10102

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !10098

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !10104

do.body20:                                        ; preds = %do.end19
  br label %do.body21, !dbg !10105

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !10107

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !10105

do.body23:                                        ; preds = %do.end22
  %9 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !10109
  %first24 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %9, i32 0, i32 0, !dbg !10109
  %10 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !10109
  %pprev25 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %10, i32 0, i32 1, !dbg !10109
  store volatile %struct.hlist_node** %first24, %struct.hlist_node*** %pprev25, align 8, !dbg !10109
  br label %do.end26, !dbg !10109

do.end26:                                         ; preds = %do.body23
  br label %do.end27, !dbg !10105

do.end27:                                         ; preds = %do.end26
  ret void, !dbg !10111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_update_orphan_status(%struct.clk_core* %core, i1 zeroext %is_orphan) #0 !dbg !10112 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %is_orphan.addr = alloca i8, align 1
  %child = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.clk_core*, align 8
  %____ptr6 = alloca %struct.hlist_node*, align 8
  %tmp7 = alloca %struct.clk_core*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp13 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10115, metadata !DIExpression()), !dbg !10116
  %frombool = zext i1 %is_orphan to i8
  store i8 %frombool, i8* %is_orphan.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_orphan.addr, metadata !10117, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !10119, metadata !DIExpression()), !dbg !10120
  %0 = load i8, i8* %is_orphan.addr, align 1, !dbg !10121
  %tobool = trunc i8 %0 to i1, !dbg !10121
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10122
  %orphan = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 16, !dbg !10123
  %frombool1 = zext i1 %tobool to i8, !dbg !10124
  store i8 %frombool1, i8* %orphan, align 8, !dbg !10124
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !10125, metadata !DIExpression()), !dbg !10128
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10128
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 26, !dbg !10128
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !10128
  %3 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !10128
  store %struct.hlist_node* %3, %struct.hlist_node** %____ptr, align 8, !dbg !10128
  %4 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !10128
  %tobool2 = icmp ne %struct.hlist_node* %4, null, !dbg !10128
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !10128

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10129, metadata !DIExpression()), !dbg !10131
  %5 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !10131
  %6 = bitcast %struct.hlist_node* %5 to i8*, !dbg !10131
  store i8* %6, i8** %__mptr, align 8, !dbg !10131
  br label %do.body, !dbg !10131

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !10132

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !10131
  %add.ptr = getelementptr i8, i8* %7, i64 -184, !dbg !10131
  %8 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !10131
  store %struct.clk_core* %8, %struct.clk_core** %tmp3, align 8, !dbg !10132
  %9 = load %struct.clk_core*, %struct.clk_core** %tmp3, align 8, !dbg !10131
  br label %cond.end, !dbg !10128

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10128

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %9, %do.end ], [ null, %cond.false ], !dbg !10128
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !10128
  %10 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !10128
  store %struct.clk_core* %10, %struct.clk_core** %child, align 8, !dbg !10134
  br label %for.cond, !dbg !10134

for.cond:                                         ; preds = %cond.end16, %cond.end
  %11 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !10135
  %tobool4 = icmp ne %struct.clk_core* %11, null, !dbg !10134
  br i1 %tobool4, label %for.body, label %for.end, !dbg !10134

for.body:                                         ; preds = %for.cond
  %12 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !10137
  %13 = load i8, i8* %is_orphan.addr, align 1, !dbg !10138
  %tobool5 = trunc i8 %13 to i1, !dbg !10138
  call void @clk_core_update_orphan_status(%struct.clk_core* %12, i1 zeroext %tobool5) #11, !dbg !10139
  br label %for.inc, !dbg !10139

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr6, metadata !10140, metadata !DIExpression()), !dbg !10142
  %14 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !10142
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %14, i32 0, i32 27, !dbg !10142
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !10142
  %15 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !10142
  store %struct.hlist_node* %15, %struct.hlist_node** %____ptr6, align 8, !dbg !10142
  %16 = load %struct.hlist_node*, %struct.hlist_node** %____ptr6, align 8, !dbg !10142
  %tobool8 = icmp ne %struct.hlist_node* %16, null, !dbg !10142
  br i1 %tobool8, label %cond.true9, label %cond.false15, !dbg !10142

cond.true9:                                       ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !10143, metadata !DIExpression()), !dbg !10145
  %17 = load %struct.hlist_node*, %struct.hlist_node** %____ptr6, align 8, !dbg !10145
  %18 = bitcast %struct.hlist_node* %17 to i8*, !dbg !10145
  store i8* %18, i8** %__mptr10, align 8, !dbg !10145
  br label %do.body11, !dbg !10145

do.body11:                                        ; preds = %cond.true9
  br label %do.end12, !dbg !10146

do.end12:                                         ; preds = %do.body11
  %19 = load i8*, i8** %__mptr10, align 8, !dbg !10145
  %add.ptr14 = getelementptr i8, i8* %19, i64 -184, !dbg !10145
  %20 = bitcast i8* %add.ptr14 to %struct.clk_core*, !dbg !10145
  store %struct.clk_core* %20, %struct.clk_core** %tmp13, align 8, !dbg !10146
  %21 = load %struct.clk_core*, %struct.clk_core** %tmp13, align 8, !dbg !10145
  br label %cond.end16, !dbg !10142

cond.false15:                                     ; preds = %for.inc
  br label %cond.end16, !dbg !10142

cond.end16:                                       ; preds = %cond.false15, %do.end12
  %cond17 = phi %struct.clk_core* [ %21, %do.end12 ], [ null, %cond.false15 ], !dbg !10142
  store %struct.clk_core* %cond17, %struct.clk_core** %tmp7, align 8, !dbg !10142
  %22 = load %struct.clk_core*, %struct.clk_core** %tmp7, align 8, !dbg !10142
  store %struct.clk_core* %22, %struct.clk_core** %child, align 8, !dbg !10135
  br label %for.cond, !dbg !10135, !llvm.loop !10148

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__clk_speculate_rates(%struct.clk_core* %core, i64 %parent_rate) #0 !dbg !10151 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %parent_rate.addr = alloca i64, align 8
  %child = alloca %struct.clk_core*, align 8
  %new_rate = alloca i64, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp5 = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp9 = alloca %struct.clk_core*, align 8
  %____ptr16 = alloca %struct.hlist_node*, align 8
  %tmp17 = alloca %struct.clk_core*, align 8
  %__mptr20 = alloca i8*, align 8
  %tmp23 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10152, metadata !DIExpression()), !dbg !10153
  store i64 %parent_rate, i64* %parent_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %parent_rate.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !10156, metadata !DIExpression()), !dbg !10157
  call void @llvm.dbg.declare(metadata i64* %new_rate, metadata !10158, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10160, metadata !DIExpression()), !dbg !10161
  store i32 0, i32* %ret, align 4, !dbg !10161
  br label %do.body, !dbg !10162

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10163

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10165
  %1 = load i64, i64* %parent_rate.addr, align 8, !dbg !10166
  %call = call i64 @clk_recalc(%struct.clk_core* %0, i64 %1) #11, !dbg !10167
  store i64 %call, i64* %new_rate, align 8, !dbg !10168
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10169
  %notifier_count = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 29, !dbg !10171
  %3 = load i32, i32* %notifier_count, align 8, !dbg !10171
  %tobool = icmp ne i32 %3, 0, !dbg !10169
  br i1 %tobool, label %if.then, label %if.end, !dbg !10172

if.then:                                          ; preds = %do.end
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10173
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10174
  %rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 10, !dbg !10175
  %6 = load i64, i64* %rate, align 8, !dbg !10175
  %7 = load i64, i64* %new_rate, align 8, !dbg !10176
  %call1 = call i32 @__clk_notify(%struct.clk_core* %4, i64 1, i64 %6, i64 %7) #11, !dbg !10177
  store i32 %call1, i32* %ret, align 4, !dbg !10178
  br label %if.end, !dbg !10179

if.end:                                           ; preds = %if.then, %do.end
  %8 = load i32, i32* %ret, align 4, !dbg !10180
  %and = and i32 %8, 32768, !dbg !10182
  %tobool2 = icmp ne i32 %and, 0, !dbg !10182
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10183

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %tmp, align 4, !dbg !10184
  %9 = load i32, i32* %tmp, align 4, !dbg !10188
  br label %out, !dbg !10189

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !10190, metadata !DIExpression()), !dbg !10193
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10193
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 26, !dbg !10193
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !10193
  %11 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !10193
  store %struct.hlist_node* %11, %struct.hlist_node** %____ptr, align 8, !dbg !10193
  %12 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !10193
  %tobool6 = icmp ne %struct.hlist_node* %12, null, !dbg !10193
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !10193

cond.true:                                        ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10194, metadata !DIExpression()), !dbg !10196
  %13 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !10196
  %14 = bitcast %struct.hlist_node* %13 to i8*, !dbg !10196
  store i8* %14, i8** %__mptr, align 8, !dbg !10196
  br label %do.body7, !dbg !10196

do.body7:                                         ; preds = %cond.true
  br label %do.end8, !dbg !10197

do.end8:                                          ; preds = %do.body7
  %15 = load i8*, i8** %__mptr, align 8, !dbg !10196
  %add.ptr = getelementptr i8, i8* %15, i64 -184, !dbg !10196
  %16 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !10196
  store %struct.clk_core* %16, %struct.clk_core** %tmp9, align 8, !dbg !10197
  %17 = load %struct.clk_core*, %struct.clk_core** %tmp9, align 8, !dbg !10196
  br label %cond.end, !dbg !10193

cond.false:                                       ; preds = %if.end4
  br label %cond.end, !dbg !10193

cond.end:                                         ; preds = %cond.false, %do.end8
  %cond = phi %struct.clk_core* [ %17, %do.end8 ], [ null, %cond.false ], !dbg !10193
  store %struct.clk_core* %cond, %struct.clk_core** %tmp5, align 8, !dbg !10193
  %18 = load %struct.clk_core*, %struct.clk_core** %tmp5, align 8, !dbg !10193
  store %struct.clk_core* %18, %struct.clk_core** %child, align 8, !dbg !10199
  br label %for.cond, !dbg !10199

for.cond:                                         ; preds = %cond.end26, %cond.end
  %19 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !10200
  %tobool10 = icmp ne %struct.clk_core* %19, null, !dbg !10199
  br i1 %tobool10, label %for.body, label %for.end, !dbg !10199

for.body:                                         ; preds = %for.cond
  %20 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !10202
  %21 = load i64, i64* %new_rate, align 8, !dbg !10204
  %call11 = call i32 @__clk_speculate_rates(%struct.clk_core* %20, i64 %21) #11, !dbg !10205
  store i32 %call11, i32* %ret, align 4, !dbg !10206
  %22 = load i32, i32* %ret, align 4, !dbg !10207
  %and12 = and i32 %22, 32768, !dbg !10209
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10209
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !10210

if.then14:                                        ; preds = %for.body
  br label %for.end, !dbg !10211

if.end15:                                         ; preds = %for.body
  br label %for.inc, !dbg !10212

for.inc:                                          ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr16, metadata !10213, metadata !DIExpression()), !dbg !10215
  %23 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !10215
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %23, i32 0, i32 27, !dbg !10215
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !10215
  %24 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !10215
  store %struct.hlist_node* %24, %struct.hlist_node** %____ptr16, align 8, !dbg !10215
  %25 = load %struct.hlist_node*, %struct.hlist_node** %____ptr16, align 8, !dbg !10215
  %tobool18 = icmp ne %struct.hlist_node* %25, null, !dbg !10215
  br i1 %tobool18, label %cond.true19, label %cond.false25, !dbg !10215

cond.true19:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr20, metadata !10216, metadata !DIExpression()), !dbg !10218
  %26 = load %struct.hlist_node*, %struct.hlist_node** %____ptr16, align 8, !dbg !10218
  %27 = bitcast %struct.hlist_node* %26 to i8*, !dbg !10218
  store i8* %27, i8** %__mptr20, align 8, !dbg !10218
  br label %do.body21, !dbg !10218

do.body21:                                        ; preds = %cond.true19
  br label %do.end22, !dbg !10219

do.end22:                                         ; preds = %do.body21
  %28 = load i8*, i8** %__mptr20, align 8, !dbg !10218
  %add.ptr24 = getelementptr i8, i8* %28, i64 -184, !dbg !10218
  %29 = bitcast i8* %add.ptr24 to %struct.clk_core*, !dbg !10218
  store %struct.clk_core* %29, %struct.clk_core** %tmp23, align 8, !dbg !10219
  %30 = load %struct.clk_core*, %struct.clk_core** %tmp23, align 8, !dbg !10218
  br label %cond.end26, !dbg !10215

cond.false25:                                     ; preds = %for.inc
  br label %cond.end26, !dbg !10215

cond.end26:                                       ; preds = %cond.false25, %do.end22
  %cond27 = phi %struct.clk_core* [ %30, %do.end22 ], [ null, %cond.false25 ], !dbg !10215
  store %struct.clk_core* %cond27, %struct.clk_core** %tmp17, align 8, !dbg !10215
  %31 = load %struct.clk_core*, %struct.clk_core** %tmp17, align 8, !dbg !10215
  store %struct.clk_core* %31, %struct.clk_core** %child, align 8, !dbg !10200
  br label %for.cond, !dbg !10200, !llvm.loop !10221

for.end:                                          ; preds = %if.then14, %for.cond
  br label %out, !dbg !10222

out:                                              ; preds = %for.end, %if.then3
  call void @llvm.dbg.label(metadata !10223), !dbg !10224
  %32 = load i32, i32* %ret, align 4, !dbg !10225
  ret i32 %32, !dbg !10226
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__clk_set_parent(%struct.clk_core* %core, %struct.clk_core* %parent, i8 zeroext %p_index) #0 !dbg !10227 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %parent.addr = alloca %struct.clk_core*, align 8
  %p_index.addr = alloca i8, align 1
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %old_parent = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10230, metadata !DIExpression()), !dbg !10231
  store %struct.clk_core* %parent, %struct.clk_core** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent.addr, metadata !10232, metadata !DIExpression()), !dbg !10233
  store i8 %p_index, i8* %p_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %p_index.addr, metadata !10234, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10236, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10238, metadata !DIExpression()), !dbg !10239
  store i32 0, i32* %ret, align 4, !dbg !10239
  call void @llvm.dbg.declare(metadata %struct.clk_core** %old_parent, metadata !10240, metadata !DIExpression()), !dbg !10241
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10242
  %1 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !10243
  %call = call %struct.clk_core* @__clk_set_parent_before(%struct.clk_core* %0, %struct.clk_core* %1) #11, !dbg !10244
  store %struct.clk_core* %call, %struct.clk_core** %old_parent, align 8, !dbg !10245
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10246
  %3 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !10247
  call void @trace_clk_set_parent(%struct.clk_core* %2, %struct.clk_core* %3) #11, !dbg !10248
  %4 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !10249
  %tobool = icmp ne %struct.clk_core* %4, null, !dbg !10249
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10251

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10252
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 1, !dbg !10253
  %6 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !10253
  %set_parent = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %6, i32 0, i32 13, !dbg !10254
  %7 = load i32 (%struct.clk_hw*, i8)*, i32 (%struct.clk_hw*, i8)** %set_parent, align 8, !dbg !10254
  %tobool1 = icmp ne i32 (%struct.clk_hw*, i8)* %7, null, !dbg !10252
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10255

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10256
  %ops2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 1, !dbg !10257
  %9 = load %struct.clk_ops*, %struct.clk_ops** %ops2, align 8, !dbg !10257
  %set_parent3 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %9, i32 0, i32 13, !dbg !10258
  %10 = load i32 (%struct.clk_hw*, i8)*, i32 (%struct.clk_hw*, i8)** %set_parent3, align 8, !dbg !10258
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10259
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %11, i32 0, i32 2, !dbg !10260
  %12 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !10260
  %13 = load i8, i8* %p_index.addr, align 1, !dbg !10261
  %call4 = call i32 %10(%struct.clk_hw* %12, i8 zeroext %13) #11, !dbg !10256
  store i32 %call4, i32* %ret, align 4, !dbg !10262
  br label %if.end, !dbg !10263

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %14 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10264
  %15 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !10265
  call void @trace_clk_set_parent_complete(%struct.clk_core* %14, %struct.clk_core* %15) #11, !dbg !10266
  %16 = load i32, i32* %ret, align 4, !dbg !10267
  %tobool5 = icmp ne i32 %16, 0, !dbg !10267
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !10269

if.then6:                                         ; preds = %if.end
  %call7 = call i64 @clk_enable_lock() #11, !dbg !10270
  store i64 %call7, i64* %flags, align 8, !dbg !10272
  %17 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10273
  %18 = load %struct.clk_core*, %struct.clk_core** %old_parent, align 8, !dbg !10274
  call void @clk_reparent(%struct.clk_core* %17, %struct.clk_core* %18) #11, !dbg !10275
  %19 = load i64, i64* %flags, align 8, !dbg !10276
  call void @clk_enable_unlock(i64 %19) #11, !dbg !10277
  %20 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10278
  %21 = load %struct.clk_core*, %struct.clk_core** %old_parent, align 8, !dbg !10279
  %22 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !10280
  call void @__clk_set_parent_after(%struct.clk_core* %20, %struct.clk_core* %21, %struct.clk_core* %22) #11, !dbg !10281
  %23 = load i32, i32* %ret, align 4, !dbg !10282
  store i32 %23, i32* %retval, align 4, !dbg !10283
  br label %return, !dbg !10283

if.end8:                                          ; preds = %if.end
  %24 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10284
  %25 = load %struct.clk_core*, %struct.clk_core** %parent.addr, align 8, !dbg !10285
  %26 = load %struct.clk_core*, %struct.clk_core** %old_parent, align 8, !dbg !10286
  call void @__clk_set_parent_after(%struct.clk_core* %24, %struct.clk_core* %25, %struct.clk_core* %26) #11, !dbg !10287
  store i32 0, i32* %retval, align 4, !dbg !10288
  br label %return, !dbg !10288

return:                                           ; preds = %if.end8, %if.then6
  %27 = load i32, i32* %retval, align 4, !dbg !10289
  ret i32 %27, !dbg !10289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_set_phase(%struct.clk_core* %core, i32 %phase) #0 !dbg !10290 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %phase.addr = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10291, metadata !DIExpression()), !dbg !10292
  store i32 %phase, i32* %phase.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phase.addr, metadata !10293, metadata !DIExpression()), !dbg !10292
  ret void, !dbg !10292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_set_phase_complete(%struct.clk_core* %core, i32 %phase) #0 !dbg !10294 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %phase.addr = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10295, metadata !DIExpression()), !dbg !10296
  store i32 %phase, i32* %phase.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phase.addr, metadata !10297, metadata !DIExpression()), !dbg !10296
  ret void, !dbg !10296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_set_duty_cycle(%struct.clk_core* %core, %struct.clk_duty* %duty) #0 !dbg !10298 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %duty.addr = alloca %struct.clk_duty*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10301, metadata !DIExpression()), !dbg !10302
  store %struct.clk_duty* %duty, %struct.clk_duty** %duty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_duty** %duty.addr, metadata !10303, metadata !DIExpression()), !dbg !10302
  ret void, !dbg !10302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_set_duty_cycle_parent_nolock(%struct.clk_core* %core, %struct.clk_duty* %duty) #0 !dbg !10304 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %duty.addr = alloca %struct.clk_duty*, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10305, metadata !DIExpression()), !dbg !10306
  store %struct.clk_duty* %duty, %struct.clk_duty** %duty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_duty** %duty.addr, metadata !10307, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10309, metadata !DIExpression()), !dbg !10310
  store i32 0, i32* %ret, align 4, !dbg !10310
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10311
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 6, !dbg !10313
  %1 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10313
  %tobool = icmp ne %struct.clk_core* %1, null, !dbg !10311
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10314

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10315
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 15, !dbg !10316
  %3 = load i64, i64* %flags, align 8, !dbg !10316
  %and = and i64 %3, 8196, !dbg !10317
  %tobool1 = icmp ne i64 %and, 0, !dbg !10317
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10318

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10319
  %parent2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 6, !dbg !10321
  %5 = load %struct.clk_core*, %struct.clk_core** %parent2, align 8, !dbg !10321
  %6 = load %struct.clk_duty*, %struct.clk_duty** %duty.addr, align 8, !dbg !10322
  %call = call i32 @clk_core_set_duty_cycle_nolock(%struct.clk_core* %5, %struct.clk_duty* %6) #11, !dbg !10323
  store i32 %call, i32* %ret, align 4, !dbg !10324
  %7 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10325
  %duty3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %7, i32 0, i32 25, !dbg !10326
  %8 = bitcast %struct.clk_duty* %duty3 to i8*, !dbg !10327
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10328
  %parent4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 6, !dbg !10329
  %10 = load %struct.clk_core*, %struct.clk_core** %parent4, align 8, !dbg !10329
  %duty5 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %10, i32 0, i32 25, !dbg !10330
  %11 = bitcast %struct.clk_duty* %duty5 to i8*, !dbg !10327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %11, i64 8, i1 false), !dbg !10327
  br label %if.end, !dbg !10331

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %12 = load i32, i32* %ret, align 4, !dbg !10332
  ret i32 %12, !dbg !10333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_clk_set_duty_cycle_complete(%struct.clk_core* %core, %struct.clk_duty* %duty) #0 !dbg !10334 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %duty.addr = alloca %struct.clk_duty*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10335, metadata !DIExpression()), !dbg !10336
  store %struct.clk_duty* %duty, %struct.clk_duty** %duty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_duty** %duty.addr, metadata !10337, metadata !DIExpression()), !dbg !10336
  ret void, !dbg !10336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_update_duty_cycle_nolock(%struct.clk_core* %core) #0 !dbg !10338 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %duty = alloca %struct.clk_duty*, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10339, metadata !DIExpression()), !dbg !10340
  call void @llvm.dbg.declare(metadata %struct.clk_duty** %duty, metadata !10341, metadata !DIExpression()), !dbg !10342
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10343
  %duty1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 25, !dbg !10344
  store %struct.clk_duty* %duty1, %struct.clk_duty** %duty, align 8, !dbg !10342
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10345, metadata !DIExpression()), !dbg !10346
  store i32 0, i32* %ret, align 4, !dbg !10346
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10347
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 1, !dbg !10349
  %2 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !10349
  %get_duty_cycle = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %2, i32 0, i32 20, !dbg !10350
  %3 = load i32 (%struct.clk_hw*, %struct.clk_duty*)*, i32 (%struct.clk_hw*, %struct.clk_duty*)** %get_duty_cycle, align 8, !dbg !10350
  %tobool = icmp ne i32 (%struct.clk_hw*, %struct.clk_duty*)* %3, null, !dbg !10347
  br i1 %tobool, label %if.end, label %if.then, !dbg !10351

if.then:                                          ; preds = %entry
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10352
  %call = call i32 @clk_core_update_duty_cycle_parent_nolock(%struct.clk_core* %4) #11, !dbg !10353
  store i32 %call, i32* %retval, align 4, !dbg !10354
  br label %return, !dbg !10354

if.end:                                           ; preds = %entry
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10355
  %ops2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 1, !dbg !10356
  %6 = load %struct.clk_ops*, %struct.clk_ops** %ops2, align 8, !dbg !10356
  %get_duty_cycle3 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %6, i32 0, i32 20, !dbg !10357
  %7 = load i32 (%struct.clk_hw*, %struct.clk_duty*)*, i32 (%struct.clk_hw*, %struct.clk_duty*)** %get_duty_cycle3, align 8, !dbg !10357
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10358
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 2, !dbg !10359
  %9 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !10359
  %10 = load %struct.clk_duty*, %struct.clk_duty** %duty, align 8, !dbg !10360
  %call4 = call i32 %7(%struct.clk_hw* %9, %struct.clk_duty* %10) #11, !dbg !10355
  store i32 %call4, i32* %ret, align 4, !dbg !10361
  %11 = load i32, i32* %ret, align 4, !dbg !10362
  %tobool5 = icmp ne i32 %11, 0, !dbg !10362
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10364

if.then6:                                         ; preds = %if.end
  br label %reset, !dbg !10365

if.end7:                                          ; preds = %if.end
  %12 = load %struct.clk_duty*, %struct.clk_duty** %duty, align 8, !dbg !10366
  %den = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %12, i32 0, i32 1, !dbg !10368
  %13 = load i32, i32* %den, align 4, !dbg !10368
  %cmp = icmp eq i32 %13, 0, !dbg !10369
  br i1 %cmp, label %if.then10, label %lor.lhs.false, !dbg !10370

lor.lhs.false:                                    ; preds = %if.end7
  %14 = load %struct.clk_duty*, %struct.clk_duty** %duty, align 8, !dbg !10371
  %num = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %14, i32 0, i32 0, !dbg !10372
  %15 = load i32, i32* %num, align 4, !dbg !10372
  %16 = load %struct.clk_duty*, %struct.clk_duty** %duty, align 8, !dbg !10373
  %den8 = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %16, i32 0, i32 1, !dbg !10374
  %17 = load i32, i32* %den8, align 4, !dbg !10374
  %cmp9 = icmp ugt i32 %15, %17, !dbg !10375
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !10376

if.then10:                                        ; preds = %lor.lhs.false, %if.end7
  store i32 -22, i32* %ret, align 4, !dbg !10377
  br label %reset, !dbg !10379

if.end11:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !10380
  br label %return, !dbg !10380

reset:                                            ; preds = %if.then10, %if.then6
  call void @llvm.dbg.label(metadata !10381), !dbg !10382
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10383
  call void @clk_core_reset_duty_cycle_nolock(%struct.clk_core* %18) #11, !dbg !10384
  %19 = load i32, i32* %ret, align 4, !dbg !10385
  store i32 %19, i32* %retval, align 4, !dbg !10386
  br label %return, !dbg !10386

return:                                           ; preds = %reset, %if.end11, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !10387
  ret i32 %20, !dbg !10387
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_update_duty_cycle_parent_nolock(%struct.clk_core* %core) #0 !dbg !10388 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10389, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10391, metadata !DIExpression()), !dbg !10392
  store i32 0, i32* %ret, align 4, !dbg !10392
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10393
  %parent = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 6, !dbg !10395
  %1 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10395
  %tobool = icmp ne %struct.clk_core* %1, null, !dbg !10393
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10396

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10397
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 15, !dbg !10398
  %3 = load i64, i64* %flags, align 8, !dbg !10398
  %and = and i64 %3, 8192, !dbg !10399
  %tobool1 = icmp ne i64 %and, 0, !dbg !10399
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10400

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10401
  %parent2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %4, i32 0, i32 6, !dbg !10403
  %5 = load %struct.clk_core*, %struct.clk_core** %parent2, align 8, !dbg !10403
  %call = call i32 @clk_core_update_duty_cycle_nolock(%struct.clk_core* %5) #11, !dbg !10404
  store i32 %call, i32* %ret, align 4, !dbg !10405
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10406
  %duty = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 25, !dbg !10407
  %7 = bitcast %struct.clk_duty* %duty to i8*, !dbg !10408
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10409
  %parent3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 6, !dbg !10410
  %9 = load %struct.clk_core*, %struct.clk_core** %parent3, align 8, !dbg !10410
  %duty4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 25, !dbg !10411
  %10 = bitcast %struct.clk_duty* %duty4 to i8*, !dbg !10408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %10, i64 8, i1 false), !dbg !10408
  br label %if.end, !dbg !10412

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10413
  call void @clk_core_reset_duty_cycle_nolock(%struct.clk_core* %11) #11, !dbg !10415
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i32, i32* %ret, align 4, !dbg !10416
  ret i32 %12, !dbg !10417
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_reset_duty_cycle_nolock(%struct.clk_core* %core) #0 !dbg !10418 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10419, metadata !DIExpression()), !dbg !10420
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10421
  %duty = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 25, !dbg !10422
  %num = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %duty, i32 0, i32 0, !dbg !10423
  store i32 1, i32* %num, align 4, !dbg !10424
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10425
  %duty1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 25, !dbg !10426
  %den = getelementptr inbounds %struct.clk_duty, %struct.clk_duty* %duty1, i32 0, i32 1, !dbg !10427
  store i32 2, i32* %den, align 4, !dbg !10428
  ret void, !dbg !10429
}

; Function Attrs: noredzone
declare dso_local i8* @kstrdup_const(i8*, i32) #5

; Function Attrs: noredzone
declare dso_local void @kfree_const(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !10430 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10434, metadata !DIExpression()), !dbg !10435
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10436
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #11, !dbg !10437
  ret void, !dbg !10438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !10439 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10442, metadata !DIExpression()), !dbg !10443
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !10444, metadata !DIExpression()), !dbg !10445
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10446
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !10447
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #11, !dbg !10448
  ret void, !dbg !10449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !10450 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !10453, metadata !DIExpression()), !dbg !10457
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !10461, metadata !DIExpression()), !dbg !10462
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !10463, metadata !DIExpression()), !dbg !10465
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7994, metadata !DIExpression()), !dbg !10466
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8004, metadata !DIExpression()), !dbg !10468
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !10469, metadata !DIExpression()), !dbg !10470
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10471, metadata !DIExpression()), !dbg !10472
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !10473, metadata !DIExpression()), !dbg !10474
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10475, metadata !DIExpression()), !dbg !10476
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !10477, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.declare(metadata i32* %old, metadata !10479, metadata !DIExpression()), !dbg !10480
  %0 = load i32, i32* %i.addr, align 4, !dbg !10481
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10482
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !10483
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10484
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !10484
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10485
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !10486
  %conv.i.i = trunc i64 %5 to i32, !dbg !10486
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #14, !dbg !10487
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10488
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10488
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #14, !dbg !10488
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !10489
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10490
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !10465
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !10465
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !10465
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10465
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !10465
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #10, !dbg !10465, !srcloc !10491
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !10465
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !10465
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !10465
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !10465
  store i32 %15, i32* %old, align 4, !dbg !10480
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !10492
  %tobool = icmp ne i32* %16, null, !dbg !10492
  br i1 %tobool, label %if.then, label %if.end, !dbg !10494

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !10495
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !10496
  store i32 %17, i32* %18, align 4, !dbg !10497
  br label %if.end, !dbg !10498

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !10499
  %tobool1 = icmp ne i32 %19, 0, !dbg !10499
  %lnot = xor i1 %tobool1, true, !dbg !10499
  %lnot2 = xor i1 %lnot, true, !dbg !10499
  %lnot3 = xor i1 %lnot2, true, !dbg !10499
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10499
  %conv = sext i32 %lnot.ext to i64, !dbg !10499
  %tobool4 = icmp ne i64 %conv, 0, !dbg !10499
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !10501

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10502
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #11, !dbg !10503
  br label %if.end17, !dbg !10503

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !10504
  %cmp = icmp slt i32 %21, 0, !dbg !10504
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10504

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !10504
  %23 = load i32, i32* %i.addr, align 4, !dbg !10504
  %add = add i32 %22, %23, !dbg !10504
  %cmp7 = icmp slt i32 %add, 0, !dbg !10504
  br label %lor.end, !dbg !10504

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !10504
  %lnot11 = xor i1 %lnot9, true, !dbg !10504
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !10504
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !10504
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !10504
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !10506

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10507
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #11, !dbg !10508
  br label %if.end16, !dbg !10508

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !10509
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_enabled(%struct.device* %dev) #0 !dbg !10510 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10511, metadata !DIExpression()), !dbg !10512
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10513
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10514
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !10515
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !10515
  %bf.clear = and i16 %bf.load, 7, !dbg !10515
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10515
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10516
  %lnot = xor i1 %tobool, true, !dbg !10516
  ret i1 %lnot, !dbg !10517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_core_populate_parent_map(%struct.clk_core* %core, %struct.clk_init_data* %init) #0 !dbg !10518 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %init.addr = alloca %struct.clk_init_data*, align 8
  %num_parents = alloca i8, align 1
  %parent_names = alloca i8**, align 8
  %parent_hws = alloca %struct.clk_hw**, align 8
  %parent_data = alloca %struct.clk_parent_data*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %parents = alloca %struct.clk_parent_map*, align 8
  %parent = alloca %struct.clk_parent_map*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on75 = alloca i32, align 4
  %tmp99 = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10521, metadata !DIExpression()), !dbg !10522
  store %struct.clk_init_data* %init, %struct.clk_init_data** %init.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_init_data** %init.addr, metadata !10523, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.declare(metadata i8* %num_parents, metadata !10525, metadata !DIExpression()), !dbg !10526
  %0 = load %struct.clk_init_data*, %struct.clk_init_data** %init.addr, align 8, !dbg !10527
  %num_parents1 = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %0, i32 0, i32 5, !dbg !10528
  %1 = load i8, i8* %num_parents1, align 8, !dbg !10528
  store i8 %1, i8* %num_parents, align 1, !dbg !10526
  call void @llvm.dbg.declare(metadata i8*** %parent_names, metadata !10529, metadata !DIExpression()), !dbg !10530
  %2 = load %struct.clk_init_data*, %struct.clk_init_data** %init.addr, align 8, !dbg !10531
  %parent_names2 = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %2, i32 0, i32 2, !dbg !10532
  %3 = load i8**, i8*** %parent_names2, align 8, !dbg !10532
  store i8** %3, i8*** %parent_names, align 8, !dbg !10530
  call void @llvm.dbg.declare(metadata %struct.clk_hw*** %parent_hws, metadata !10533, metadata !DIExpression()), !dbg !10534
  %4 = load %struct.clk_init_data*, %struct.clk_init_data** %init.addr, align 8, !dbg !10535
  %parent_hws3 = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %4, i32 0, i32 4, !dbg !10536
  %5 = load %struct.clk_hw**, %struct.clk_hw*** %parent_hws3, align 8, !dbg !10536
  store %struct.clk_hw** %5, %struct.clk_hw*** %parent_hws, align 8, !dbg !10534
  call void @llvm.dbg.declare(metadata %struct.clk_parent_data** %parent_data, metadata !10537, metadata !DIExpression()), !dbg !10538
  %6 = load %struct.clk_init_data*, %struct.clk_init_data** %init.addr, align 8, !dbg !10539
  %parent_data4 = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %6, i32 0, i32 3, !dbg !10540
  %7 = load %struct.clk_parent_data*, %struct.clk_parent_data** %parent_data4, align 8, !dbg !10540
  store %struct.clk_parent_data* %7, %struct.clk_parent_data** %parent_data, align 8, !dbg !10538
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10541, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10543, metadata !DIExpression()), !dbg !10544
  store i32 0, i32* %ret, align 4, !dbg !10544
  call void @llvm.dbg.declare(metadata %struct.clk_parent_map** %parents, metadata !10545, metadata !DIExpression()), !dbg !10546
  call void @llvm.dbg.declare(metadata %struct.clk_parent_map** %parent, metadata !10547, metadata !DIExpression()), !dbg !10548
  %8 = load i8, i8* %num_parents, align 1, !dbg !10549
  %tobool = icmp ne i8 %8, 0, !dbg !10549
  br i1 %tobool, label %if.end, label %if.then, !dbg !10551

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10552
  br label %return, !dbg !10552

if.end:                                           ; preds = %entry
  %9 = load i8, i8* %num_parents, align 1, !dbg !10553
  %conv = zext i8 %9 to i64, !dbg !10553
  %call = call i8* @kcalloc(i64 %conv, i64 40, i32 3264) #11, !dbg !10554
  %10 = bitcast i8* %call to %struct.clk_parent_map*, !dbg !10554
  store %struct.clk_parent_map* %10, %struct.clk_parent_map** %parents, align 8, !dbg !10555
  %11 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !10556
  %12 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10557
  %parents5 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %12, i32 0, i32 7, !dbg !10558
  store %struct.clk_parent_map* %11, %struct.clk_parent_map** %parents5, align 8, !dbg !10559
  %13 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !10560
  %tobool6 = icmp ne %struct.clk_parent_map* %13, null, !dbg !10560
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !10562

if.then7:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !10563
  br label %return, !dbg !10563

if.end8:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !10564
  %14 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !10566
  store %struct.clk_parent_map* %14, %struct.clk_parent_map** %parent, align 8, !dbg !10567
  br label %for.cond, !dbg !10568

for.cond:                                         ; preds = %for.inc, %if.end8
  %15 = load i32, i32* %i, align 4, !dbg !10569
  %16 = load i8, i8* %num_parents, align 1, !dbg !10571
  %conv9 = zext i8 %16 to i32, !dbg !10571
  %cmp = icmp slt i32 %15, %conv9, !dbg !10572
  br i1 %cmp, label %for.body, label %for.end, !dbg !10573

for.body:                                         ; preds = %for.cond
  %17 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parent, align 8, !dbg !10574
  %index = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %17, i32 0, i32 4, !dbg !10576
  store i32 -1, i32* %index, align 8, !dbg !10577
  %18 = load i8**, i8*** %parent_names, align 8, !dbg !10578
  %tobool11 = icmp ne i8** %18, null, !dbg !10578
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !10580

if.then12:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10581, metadata !DIExpression()), !dbg !10584
  %19 = load i8**, i8*** %parent_names, align 8, !dbg !10584
  %20 = load i32, i32* %i, align 4, !dbg !10584
  %idxprom = sext i32 %20 to i64, !dbg !10584
  %arrayidx = getelementptr i8*, i8** %19, i64 %idxprom, !dbg !10584
  %21 = load i8*, i8** %arrayidx, align 8, !dbg !10584
  %tobool13 = icmp ne i8* %21, null, !dbg !10584
  %lnot = xor i1 %tobool13, true, !dbg !10584
  %lnot14 = xor i1 %lnot, true, !dbg !10584
  %lnot15 = xor i1 %lnot14, true, !dbg !10584
  %lnot.ext = zext i1 %lnot15 to i32, !dbg !10584
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10584
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !10585
  %tobool16 = icmp ne i32 %22, 0, !dbg !10585
  %lnot17 = xor i1 %tobool16, true, !dbg !10585
  %lnot19 = xor i1 %lnot17, true, !dbg !10585
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !10585
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !10585
  %tobool22 = icmp ne i64 %conv21, 0, !dbg !10585
  br i1 %tobool22, label %if.then23, label %if.end36, !dbg !10584

if.then23:                                        ; preds = %if.then12
  br label %do.body, !dbg !10585

do.body:                                          ; preds = %if.then23
  br label %do.body24, !dbg !10587

do.body24:                                        ; preds = %do.body
  br label %do.end, !dbg !10589

do.end:                                           ; preds = %do.body24
  %23 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10587
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %23, i32 0, i32 0, !dbg !10587
  %24 = load i8*, i8** %name, align 8, !dbg !10587
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.clk_core_populate_parent_map, i64 0, i64 0), i8* %24) #11, !dbg !10587
  br label %do.body25, !dbg !10587

do.body25:                                        ; preds = %do.end
  br label %do.body26, !dbg !10591

do.body26:                                        ; preds = %do.body25
  br label %do.end27, !dbg !10593

do.end27:                                         ; preds = %do.body26
  br label %do.body28, !dbg !10591

do.body28:                                        ; preds = %do.end27
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 3716, i32 2313, i64 12) #10, !dbg !10595, !srcloc !10597
  br label %do.end29, !dbg !10595

do.end29:                                         ; preds = %do.body28
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 238) #10, !dbg !10598, !srcloc !10600
  br label %do.body30, !dbg !10591

do.body30:                                        ; preds = %do.end29
  br label %do.end31, !dbg !10601

do.end31:                                         ; preds = %do.body30
  br label %do.end32, !dbg !10591

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !10587

do.body33:                                        ; preds = %do.end32
  br label %do.end34, !dbg !10603

do.end34:                                         ; preds = %do.body33
  br label %do.end35, !dbg !10587

do.end35:                                         ; preds = %do.end34
  br label %if.end36, !dbg !10587

if.end36:                                         ; preds = %do.end35, %if.then12
  %25 = load i32, i32* %__ret_warn_on, align 4, !dbg !10584
  %tobool37 = icmp ne i32 %25, 0, !dbg !10584
  %lnot38 = xor i1 %tobool37, true, !dbg !10584
  %lnot40 = xor i1 %lnot38, true, !dbg !10584
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !10584
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !10584
  store i64 %conv42, i64* %tmp, align 8, !dbg !10585
  %26 = load i64, i64* %tmp, align 8, !dbg !10584
  %27 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parent, align 8, !dbg !10605
  %name43 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %27, i32 0, i32 3, !dbg !10606
  %28 = load i8**, i8*** %parent_names, align 8, !dbg !10607
  %29 = load i32, i32* %i, align 4, !dbg !10608
  %idxprom44 = sext i32 %29 to i64, !dbg !10607
  %arrayidx45 = getelementptr i8*, i8** %28, i64 %idxprom44, !dbg !10607
  %30 = load i8*, i8** %arrayidx45, align 8, !dbg !10607
  %call46 = call i32 @clk_cpy_name(i8** %name43, i8* %30, i1 zeroext true) #11, !dbg !10609
  store i32 %call46, i32* %ret, align 4, !dbg !10610
  br label %if.end108, !dbg !10611

if.else:                                          ; preds = %for.body
  %31 = load %struct.clk_parent_data*, %struct.clk_parent_data** %parent_data, align 8, !dbg !10612
  %tobool47 = icmp ne %struct.clk_parent_data* %31, null, !dbg !10612
  br i1 %tobool47, label %if.then48, label %if.else68, !dbg !10614

if.then48:                                        ; preds = %if.else
  %32 = load %struct.clk_parent_data*, %struct.clk_parent_data** %parent_data, align 8, !dbg !10615
  %33 = load i32, i32* %i, align 4, !dbg !10617
  %idxprom49 = sext i32 %33 to i64, !dbg !10615
  %arrayidx50 = getelementptr %struct.clk_parent_data, %struct.clk_parent_data* %32, i64 %idxprom49, !dbg !10615
  %hw = getelementptr inbounds %struct.clk_parent_data, %struct.clk_parent_data* %arrayidx50, i32 0, i32 0, !dbg !10618
  %34 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !10618
  %35 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parent, align 8, !dbg !10619
  %hw51 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %35, i32 0, i32 0, !dbg !10620
  store %struct.clk_hw* %34, %struct.clk_hw** %hw51, align 8, !dbg !10621
  %36 = load %struct.clk_parent_data*, %struct.clk_parent_data** %parent_data, align 8, !dbg !10622
  %37 = load i32, i32* %i, align 4, !dbg !10623
  %idxprom52 = sext i32 %37 to i64, !dbg !10622
  %arrayidx53 = getelementptr %struct.clk_parent_data, %struct.clk_parent_data* %36, i64 %idxprom52, !dbg !10622
  %index54 = getelementptr inbounds %struct.clk_parent_data, %struct.clk_parent_data* %arrayidx53, i32 0, i32 3, !dbg !10624
  %38 = load i32, i32* %index54, align 8, !dbg !10624
  %39 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parent, align 8, !dbg !10625
  %index55 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %39, i32 0, i32 4, !dbg !10626
  store i32 %38, i32* %index55, align 8, !dbg !10627
  %40 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parent, align 8, !dbg !10628
  %fw_name = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %40, i32 0, i32 2, !dbg !10629
  %41 = load %struct.clk_parent_data*, %struct.clk_parent_data** %parent_data, align 8, !dbg !10630
  %42 = load i32, i32* %i, align 4, !dbg !10631
  %idxprom56 = sext i32 %42 to i64, !dbg !10630
  %arrayidx57 = getelementptr %struct.clk_parent_data, %struct.clk_parent_data* %41, i64 %idxprom56, !dbg !10630
  %fw_name58 = getelementptr inbounds %struct.clk_parent_data, %struct.clk_parent_data* %arrayidx57, i32 0, i32 1, !dbg !10632
  %43 = load i8*, i8** %fw_name58, align 8, !dbg !10632
  %call59 = call i32 @clk_cpy_name(i8** %fw_name, i8* %43, i1 zeroext false) #11, !dbg !10633
  store i32 %call59, i32* %ret, align 4, !dbg !10634
  %44 = load i32, i32* %ret, align 4, !dbg !10635
  %tobool60 = icmp ne i32 %44, 0, !dbg !10635
  br i1 %tobool60, label %if.end67, label %if.then61, !dbg !10637

if.then61:                                        ; preds = %if.then48
  %45 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parent, align 8, !dbg !10638
  %name62 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %45, i32 0, i32 3, !dbg !10639
  %46 = load %struct.clk_parent_data*, %struct.clk_parent_data** %parent_data, align 8, !dbg !10640
  %47 = load i32, i32* %i, align 4, !dbg !10641
  %idxprom63 = sext i32 %47 to i64, !dbg !10640
  %arrayidx64 = getelementptr %struct.clk_parent_data, %struct.clk_parent_data* %46, i64 %idxprom63, !dbg !10640
  %name65 = getelementptr inbounds %struct.clk_parent_data, %struct.clk_parent_data* %arrayidx64, i32 0, i32 2, !dbg !10642
  %48 = load i8*, i8** %name65, align 8, !dbg !10642
  %call66 = call i32 @clk_cpy_name(i8** %name62, i8* %48, i1 zeroext false) #11, !dbg !10643
  store i32 %call66, i32* %ret, align 4, !dbg !10644
  br label %if.end67, !dbg !10645

if.end67:                                         ; preds = %if.then61, %if.then48
  br label %if.end107, !dbg !10646

if.else68:                                        ; preds = %if.else
  %49 = load %struct.clk_hw**, %struct.clk_hw*** %parent_hws, align 8, !dbg !10647
  %tobool69 = icmp ne %struct.clk_hw** %49, null, !dbg !10647
  br i1 %tobool69, label %if.then70, label %if.else74, !dbg !10649

if.then70:                                        ; preds = %if.else68
  %50 = load %struct.clk_hw**, %struct.clk_hw*** %parent_hws, align 8, !dbg !10650
  %51 = load i32, i32* %i, align 4, !dbg !10652
  %idxprom71 = sext i32 %51 to i64, !dbg !10650
  %arrayidx72 = getelementptr %struct.clk_hw*, %struct.clk_hw** %50, i64 %idxprom71, !dbg !10650
  %52 = load %struct.clk_hw*, %struct.clk_hw** %arrayidx72, align 8, !dbg !10650
  %53 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parent, align 8, !dbg !10653
  %hw73 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %53, i32 0, i32 0, !dbg !10654
  store %struct.clk_hw* %52, %struct.clk_hw** %hw73, align 8, !dbg !10655
  br label %if.end106, !dbg !10656

if.else74:                                        ; preds = %if.else68
  store i32 -22, i32* %ret, align 4, !dbg !10657
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on75, metadata !10659, metadata !DIExpression()), !dbg !10661
  store i32 1, i32* %__ret_warn_on75, align 4, !dbg !10661
  %54 = load i32, i32* %__ret_warn_on75, align 4, !dbg !10662
  %tobool76 = icmp ne i32 %54, 0, !dbg !10662
  %lnot77 = xor i1 %tobool76, true, !dbg !10662
  %lnot79 = xor i1 %lnot77, true, !dbg !10662
  %lnot.ext80 = zext i1 %lnot79 to i32, !dbg !10662
  %conv81 = sext i32 %lnot.ext80 to i64, !dbg !10662
  %tobool82 = icmp ne i64 %conv81, 0, !dbg !10662
  br i1 %tobool82, label %if.then83, label %if.end98, !dbg !10661

if.then83:                                        ; preds = %if.else74
  br label %do.body84, !dbg !10662

do.body84:                                        ; preds = %if.then83
  br label %do.body85, !dbg !10664

do.body85:                                        ; preds = %do.body84
  br label %do.end86, !dbg !10666

do.end86:                                         ; preds = %do.body85
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.21, i64 0, i64 0)) #11, !dbg !10664
  br label %do.body87, !dbg !10664

do.body87:                                        ; preds = %do.end86
  br label %do.body88, !dbg !10668

do.body88:                                        ; preds = %do.body87
  br label %do.end89, !dbg !10670

do.end89:                                         ; preds = %do.body88
  br label %do.body90, !dbg !10668

do.body90:                                        ; preds = %do.end89
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 3732, i32 2313, i64 12) #10, !dbg !10672, !srcloc !10674
  br label %do.end91, !dbg !10672

do.end91:                                         ; preds = %do.body90
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 239) #10, !dbg !10675, !srcloc !10677
  br label %do.body92, !dbg !10668

do.body92:                                        ; preds = %do.end91
  br label %do.end93, !dbg !10678

do.end93:                                         ; preds = %do.body92
  br label %do.end94, !dbg !10668

do.end94:                                         ; preds = %do.end93
  br label %do.body95, !dbg !10664

do.body95:                                        ; preds = %do.end94
  br label %do.end96, !dbg !10680

do.end96:                                         ; preds = %do.body95
  br label %do.end97, !dbg !10664

do.end97:                                         ; preds = %do.end96
  br label %if.end98, !dbg !10664

if.end98:                                         ; preds = %do.end97, %if.else74
  %55 = load i32, i32* %__ret_warn_on75, align 4, !dbg !10661
  %tobool100 = icmp ne i32 %55, 0, !dbg !10661
  %lnot101 = xor i1 %tobool100, true, !dbg !10661
  %lnot103 = xor i1 %lnot101, true, !dbg !10661
  %lnot.ext104 = zext i1 %lnot103 to i32, !dbg !10661
  %conv105 = sext i32 %lnot.ext104 to i64, !dbg !10661
  store i64 %conv105, i64* %tmp99, align 8, !dbg !10662
  %56 = load i64, i64* %tmp99, align 8, !dbg !10661
  br label %if.end106

if.end106:                                        ; preds = %if.end98, %if.then70
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end67
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end36
  %57 = load i32, i32* %ret, align 4, !dbg !10682
  %tobool109 = icmp ne i32 %57, 0, !dbg !10682
  br i1 %tobool109, label %if.then110, label %if.end121, !dbg !10684

if.then110:                                       ; preds = %if.end108
  br label %do.body111, !dbg !10685

do.body111:                                       ; preds = %do.cond, %if.then110
  %58 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !10687
  %59 = load i32, i32* %i, align 4, !dbg !10689
  %idxprom112 = sext i32 %59 to i64, !dbg !10687
  %arrayidx113 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %58, i64 %idxprom112, !dbg !10687
  %name114 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx113, i32 0, i32 3, !dbg !10690
  %60 = load i8*, i8** %name114, align 8, !dbg !10690
  call void @kfree_const(i8* %60) #11, !dbg !10691
  %61 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !10692
  %62 = load i32, i32* %i, align 4, !dbg !10693
  %idxprom115 = sext i32 %62 to i64, !dbg !10692
  %arrayidx116 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %61, i64 %idxprom115, !dbg !10692
  %fw_name117 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx116, i32 0, i32 2, !dbg !10694
  %63 = load i8*, i8** %fw_name117, align 8, !dbg !10694
  call void @kfree_const(i8* %63) #11, !dbg !10695
  br label %do.cond, !dbg !10696

do.cond:                                          ; preds = %do.body111
  %64 = load i32, i32* %i, align 4, !dbg !10697
  %dec = add i32 %64, -1, !dbg !10697
  store i32 %dec, i32* %i, align 4, !dbg !10697
  %cmp118 = icmp sge i32 %dec, 0, !dbg !10698
  br i1 %cmp118, label %do.body111, label %do.end120, !dbg !10696, !llvm.loop !10699

do.end120:                                        ; preds = %do.cond
  %65 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !10701
  %66 = bitcast %struct.clk_parent_map* %65 to i8*, !dbg !10701
  call void @kfree(i8* %66) #11, !dbg !10702
  %67 = load i32, i32* %ret, align 4, !dbg !10703
  store i32 %67, i32* %retval, align 4, !dbg !10704
  br label %return, !dbg !10704

if.end121:                                        ; preds = %if.end108
  br label %for.inc, !dbg !10705

for.inc:                                          ; preds = %if.end121
  %68 = load i32, i32* %i, align 4, !dbg !10706
  %inc = add i32 %68, 1, !dbg !10706
  store i32 %inc, i32* %i, align 4, !dbg !10706
  %69 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parent, align 8, !dbg !10707
  %incdec.ptr = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %69, i32 1, !dbg !10707
  store %struct.clk_parent_map* %incdec.ptr, %struct.clk_parent_map** %parent, align 8, !dbg !10707
  br label %for.cond, !dbg !10708, !llvm.loop !10709

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10711
  br label %return, !dbg !10711

return:                                           ; preds = %for.end, %do.end120, %if.then7, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !10712
  ret i32 %70, !dbg !10712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__clk_core_init(%struct.clk_core* %core) #0 !dbg !10713 {
entry:
  %retval = alloca i32, align 4
  %core.addr = alloca %struct.clk_core*, align 8
  %ret = alloca i32, align 4
  %parent = alloca %struct.clk_core*, align 8
  %rate = alloca i64, align 8
  %phase = alloca i32, align 4
  %tmp = alloca i32, align 4
  %flags122 = alloca i64, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !10714, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10716, metadata !DIExpression()), !dbg !10717
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent, metadata !10718, metadata !DIExpression()), !dbg !10719
  call void @llvm.dbg.declare(metadata i64* %rate, metadata !10720, metadata !DIExpression()), !dbg !10721
  call void @llvm.dbg.declare(metadata i32* %phase, metadata !10722, metadata !DIExpression()), !dbg !10723
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10724
  %tobool = icmp ne %struct.clk_core* %0, null, !dbg !10724
  br i1 %tobool, label %if.end, label %if.then, !dbg !10726

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10727
  br label %return, !dbg !10727

if.end:                                           ; preds = %entry
  call void @clk_prepare_lock() #11, !dbg !10728
  %1 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10729
  %call = call i32 @clk_pm_runtime_get(%struct.clk_core* %1) #11, !dbg !10730
  store i32 %call, i32* %ret, align 4, !dbg !10731
  %2 = load i32, i32* %ret, align 4, !dbg !10732
  %tobool1 = icmp ne i32 %2, 0, !dbg !10732
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !10734

if.then2:                                         ; preds = %if.end
  br label %unlock, !dbg !10735

if.end3:                                          ; preds = %if.end
  %3 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10736
  %name = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 0, !dbg !10738
  %4 = load i8*, i8** %name, align 8, !dbg !10738
  %call4 = call %struct.clk_core* @clk_core_lookup(i8* %4) #11, !dbg !10739
  %tobool5 = icmp ne %struct.clk_core* %call4, null, !dbg !10739
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10740

if.then6:                                         ; preds = %if.end3
  store i32 0, i32* %tmp, align 4, !dbg !10741
  %5 = load i32, i32* %tmp, align 4, !dbg !10745
  store i32 -17, i32* %ret, align 4, !dbg !10746
  br label %out, !dbg !10747

if.end7:                                          ; preds = %if.end3
  %6 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10748
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %6, i32 0, i32 1, !dbg !10750
  %7 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !10750
  %set_rate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %7, i32 0, i32 15, !dbg !10751
  %8 = load i32 (%struct.clk_hw*, i64, i64)*, i32 (%struct.clk_hw*, i64, i64)** %set_rate, align 8, !dbg !10751
  %tobool8 = icmp ne i32 (%struct.clk_hw*, i64, i64)* %8, null, !dbg !10748
  br i1 %tobool8, label %land.lhs.true, label %if.end19, !dbg !10752

land.lhs.true:                                    ; preds = %if.end7
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10753
  %ops9 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 1, !dbg !10754
  %10 = load %struct.clk_ops*, %struct.clk_ops** %ops9, align 8, !dbg !10754
  %round_rate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %10, i32 0, i32 11, !dbg !10755
  %11 = load i64 (%struct.clk_hw*, i64, i64*)*, i64 (%struct.clk_hw*, i64, i64*)** %round_rate, align 8, !dbg !10755
  %tobool10 = icmp ne i64 (%struct.clk_hw*, i64, i64*)* %11, null, !dbg !10753
  br i1 %tobool10, label %land.lhs.true13, label %lor.lhs.false, !dbg !10756

lor.lhs.false:                                    ; preds = %land.lhs.true
  %12 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10757
  %ops11 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %12, i32 0, i32 1, !dbg !10758
  %13 = load %struct.clk_ops*, %struct.clk_ops** %ops11, align 8, !dbg !10758
  %determine_rate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %13, i32 0, i32 12, !dbg !10759
  %14 = load i32 (%struct.clk_hw*, %struct.clk_rate_request*)*, i32 (%struct.clk_hw*, %struct.clk_rate_request*)** %determine_rate, align 8, !dbg !10759
  %tobool12 = icmp ne i32 (%struct.clk_hw*, %struct.clk_rate_request*)* %14, null, !dbg !10757
  br i1 %tobool12, label %land.lhs.true13, label %if.then16, !dbg !10760

land.lhs.true13:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %15 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10761
  %ops14 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %15, i32 0, i32 1, !dbg !10762
  %16 = load %struct.clk_ops*, %struct.clk_ops** %ops14, align 8, !dbg !10762
  %recalc_rate = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %16, i32 0, i32 10, !dbg !10763
  %17 = load i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64)** %recalc_rate, align 8, !dbg !10763
  %tobool15 = icmp ne i64 (%struct.clk_hw*, i64)* %17, null, !dbg !10761
  br i1 %tobool15, label %if.end19, label %if.then16, !dbg !10764

if.then16:                                        ; preds = %land.lhs.true13, %lor.lhs.false
  %18 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10765
  %name17 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %18, i32 0, i32 0, !dbg !10765
  %19 = load i8*, i8** %name17, align 8, !dbg !10765
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.__clk_core_init, i64 0, i64 0), i8* %19) #13, !dbg !10765
  store i32 -22, i32* %ret, align 4, !dbg !10767
  br label %out, !dbg !10768

if.end19:                                         ; preds = %land.lhs.true13, %if.end7
  %20 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10769
  %ops20 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %20, i32 0, i32 1, !dbg !10771
  %21 = load %struct.clk_ops*, %struct.clk_ops** %ops20, align 8, !dbg !10771
  %set_parent = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %21, i32 0, i32 13, !dbg !10772
  %22 = load i32 (%struct.clk_hw*, i8)*, i32 (%struct.clk_hw*, i8)** %set_parent, align 8, !dbg !10772
  %tobool21 = icmp ne i32 (%struct.clk_hw*, i8)* %22, null, !dbg !10769
  br i1 %tobool21, label %land.lhs.true22, label %if.end28, !dbg !10773

land.lhs.true22:                                  ; preds = %if.end19
  %23 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10774
  %ops23 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %23, i32 0, i32 1, !dbg !10775
  %24 = load %struct.clk_ops*, %struct.clk_ops** %ops23, align 8, !dbg !10775
  %get_parent = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %24, i32 0, i32 14, !dbg !10776
  %25 = load i8 (%struct.clk_hw*)*, i8 (%struct.clk_hw*)** %get_parent, align 8, !dbg !10776
  %tobool24 = icmp ne i8 (%struct.clk_hw*)* %25, null, !dbg !10774
  br i1 %tobool24, label %if.end28, label %if.then25, !dbg !10777

if.then25:                                        ; preds = %land.lhs.true22
  %26 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10778
  %name26 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %26, i32 0, i32 0, !dbg !10778
  %27 = load i8*, i8** %name26, align 8, !dbg !10778
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.__clk_core_init, i64 0, i64 0), i8* %27) #13, !dbg !10778
  store i32 -22, i32* %ret, align 4, !dbg !10780
  br label %out, !dbg !10781

if.end28:                                         ; preds = %land.lhs.true22, %if.end19
  %28 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10782
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %28, i32 0, i32 8, !dbg !10784
  %29 = load i8, i8* %num_parents, align 8, !dbg !10784
  %conv = zext i8 %29 to i32, !dbg !10782
  %cmp = icmp sgt i32 %conv, 1, !dbg !10785
  br i1 %cmp, label %land.lhs.true30, label %if.end37, !dbg !10786

land.lhs.true30:                                  ; preds = %if.end28
  %30 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10787
  %ops31 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %30, i32 0, i32 1, !dbg !10788
  %31 = load %struct.clk_ops*, %struct.clk_ops** %ops31, align 8, !dbg !10788
  %get_parent32 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %31, i32 0, i32 14, !dbg !10789
  %32 = load i8 (%struct.clk_hw*)*, i8 (%struct.clk_hw*)** %get_parent32, align 8, !dbg !10789
  %tobool33 = icmp ne i8 (%struct.clk_hw*)* %32, null, !dbg !10787
  br i1 %tobool33, label %if.end37, label %if.then34, !dbg !10790

if.then34:                                        ; preds = %land.lhs.true30
  %33 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10791
  %name35 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %33, i32 0, i32 0, !dbg !10791
  %34 = load i8*, i8** %name35, align 8, !dbg !10791
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.__clk_core_init, i64 0, i64 0), i8* %34) #13, !dbg !10791
  store i32 -22, i32* %ret, align 4, !dbg !10793
  br label %out, !dbg !10794

if.end37:                                         ; preds = %land.lhs.true30, %if.end28
  %35 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10795
  %ops38 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %35, i32 0, i32 1, !dbg !10797
  %36 = load %struct.clk_ops*, %struct.clk_ops** %ops38, align 8, !dbg !10797
  %set_rate_and_parent = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %36, i32 0, i32 16, !dbg !10798
  %37 = load i32 (%struct.clk_hw*, i64, i64, i8)*, i32 (%struct.clk_hw*, i64, i64, i8)** %set_rate_and_parent, align 8, !dbg !10798
  %tobool39 = icmp ne i32 (%struct.clk_hw*, i64, i64, i8)* %37, null, !dbg !10795
  br i1 %tobool39, label %land.lhs.true40, label %if.end51, !dbg !10799

land.lhs.true40:                                  ; preds = %if.end37
  %38 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10800
  %ops41 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %38, i32 0, i32 1, !dbg !10801
  %39 = load %struct.clk_ops*, %struct.clk_ops** %ops41, align 8, !dbg !10801
  %set_parent42 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %39, i32 0, i32 13, !dbg !10802
  %40 = load i32 (%struct.clk_hw*, i8)*, i32 (%struct.clk_hw*, i8)** %set_parent42, align 8, !dbg !10802
  %tobool43 = icmp ne i32 (%struct.clk_hw*, i8)* %40, null, !dbg !10800
  br i1 %tobool43, label %land.lhs.true44, label %if.then48, !dbg !10803

land.lhs.true44:                                  ; preds = %land.lhs.true40
  %41 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10804
  %ops45 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %41, i32 0, i32 1, !dbg !10805
  %42 = load %struct.clk_ops*, %struct.clk_ops** %ops45, align 8, !dbg !10805
  %set_rate46 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %42, i32 0, i32 15, !dbg !10806
  %43 = load i32 (%struct.clk_hw*, i64, i64)*, i32 (%struct.clk_hw*, i64, i64)** %set_rate46, align 8, !dbg !10806
  %tobool47 = icmp ne i32 (%struct.clk_hw*, i64, i64)* %43, null, !dbg !10804
  br i1 %tobool47, label %if.end51, label %if.then48, !dbg !10807

if.then48:                                        ; preds = %land.lhs.true44, %land.lhs.true40
  %44 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10808
  %name49 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %44, i32 0, i32 0, !dbg !10808
  %45 = load i8*, i8** %name49, align 8, !dbg !10808
  %call50 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.__clk_core_init, i64 0, i64 0), i8* %45) #13, !dbg !10808
  store i32 -22, i32* %ret, align 4, !dbg !10810
  br label %out, !dbg !10811

if.end51:                                         ; preds = %land.lhs.true44, %if.end37
  %46 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10812
  %ops52 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %46, i32 0, i32 1, !dbg !10814
  %47 = load %struct.clk_ops*, %struct.clk_ops** %ops52, align 8, !dbg !10814
  %init = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %47, i32 0, i32 22, !dbg !10815
  %48 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %init, align 8, !dbg !10815
  %tobool53 = icmp ne i32 (%struct.clk_hw*)* %48, null, !dbg !10812
  br i1 %tobool53, label %if.then54, label %if.end61, !dbg !10816

if.then54:                                        ; preds = %if.end51
  %49 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10817
  %ops55 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %49, i32 0, i32 1, !dbg !10819
  %50 = load %struct.clk_ops*, %struct.clk_ops** %ops55, align 8, !dbg !10819
  %init56 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %50, i32 0, i32 22, !dbg !10820
  %51 = load i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*)** %init56, align 8, !dbg !10820
  %52 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10821
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %52, i32 0, i32 2, !dbg !10822
  %53 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !10822
  %call57 = call i32 %51(%struct.clk_hw* %53) #11, !dbg !10817
  store i32 %call57, i32* %ret, align 4, !dbg !10823
  %54 = load i32, i32* %ret, align 4, !dbg !10824
  %tobool58 = icmp ne i32 %54, 0, !dbg !10824
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !10826

if.then59:                                        ; preds = %if.then54
  br label %out, !dbg !10827

if.end60:                                         ; preds = %if.then54
  br label %if.end61, !dbg !10828

if.end61:                                         ; preds = %if.end60, %if.end51
  %55 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10829
  %call62 = call %struct.clk_core* @__clk_init_parent(%struct.clk_core* %55) #11, !dbg !10830
  %56 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10831
  %parent63 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %56, i32 0, i32 6, !dbg !10832
  store %struct.clk_core* %call62, %struct.clk_core** %parent63, align 8, !dbg !10833
  store %struct.clk_core* %call62, %struct.clk_core** %parent, align 8, !dbg !10834
  %57 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10835
  %tobool64 = icmp ne %struct.clk_core* %57, null, !dbg !10835
  br i1 %tobool64, label %if.then65, label %if.else, !dbg !10837

if.then65:                                        ; preds = %if.end61
  %58 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10838
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %58, i32 0, i32 27, !dbg !10840
  %59 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10841
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %59, i32 0, i32 26, !dbg !10842
  call void @hlist_add_head(%struct.hlist_node* %child_node, %struct.hlist_head* %children) #11, !dbg !10843
  %60 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10844
  %orphan = getelementptr inbounds %struct.clk_core, %struct.clk_core* %60, i32 0, i32 16, !dbg !10845
  %61 = load i8, i8* %orphan, align 8, !dbg !10845
  %tobool66 = trunc i8 %61 to i1, !dbg !10845
  %62 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10846
  %orphan67 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %62, i32 0, i32 16, !dbg !10847
  %frombool = zext i1 %tobool66 to i8, !dbg !10848
  store i8 %frombool, i8* %orphan67, align 8, !dbg !10848
  br label %if.end77, !dbg !10849

if.else:                                          ; preds = %if.end61
  %63 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10850
  %num_parents68 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %63, i32 0, i32 8, !dbg !10852
  %64 = load i8, i8* %num_parents68, align 8, !dbg !10852
  %tobool69 = icmp ne i8 %64, 0, !dbg !10850
  br i1 %tobool69, label %if.else73, label %if.then70, !dbg !10853

if.then70:                                        ; preds = %if.else
  %65 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10854
  %child_node71 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %65, i32 0, i32 27, !dbg !10856
  call void @hlist_add_head(%struct.hlist_node* %child_node71, %struct.hlist_head* @clk_root_list) #11, !dbg !10857
  %66 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10858
  %orphan72 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %66, i32 0, i32 16, !dbg !10859
  store i8 0, i8* %orphan72, align 8, !dbg !10860
  br label %if.end76, !dbg !10861

if.else73:                                        ; preds = %if.else
  %67 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10862
  %child_node74 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %67, i32 0, i32 27, !dbg !10864
  call void @hlist_add_head(%struct.hlist_node* %child_node74, %struct.hlist_head* @clk_orphan_list) #11, !dbg !10865
  %68 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10866
  %orphan75 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %68, i32 0, i32 16, !dbg !10867
  store i8 1, i8* %orphan75, align 8, !dbg !10868
  br label %if.end76

if.end76:                                         ; preds = %if.else73, %if.then70
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then65
  %69 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10869
  %ops78 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %69, i32 0, i32 1, !dbg !10871
  %70 = load %struct.clk_ops*, %struct.clk_ops** %ops78, align 8, !dbg !10871
  %recalc_accuracy = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %70, i32 0, i32 17, !dbg !10872
  %71 = load i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64)** %recalc_accuracy, align 8, !dbg !10872
  %tobool79 = icmp ne i64 (%struct.clk_hw*, i64)* %71, null, !dbg !10869
  br i1 %tobool79, label %if.then80, label %if.else86, !dbg !10873

if.then80:                                        ; preds = %if.end77
  %72 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10874
  %ops81 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %72, i32 0, i32 1, !dbg !10875
  %73 = load %struct.clk_ops*, %struct.clk_ops** %ops81, align 8, !dbg !10875
  %recalc_accuracy82 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %73, i32 0, i32 17, !dbg !10876
  %74 = load i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64)** %recalc_accuracy82, align 8, !dbg !10876
  %75 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10877
  %hw83 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %75, i32 0, i32 2, !dbg !10878
  %76 = load %struct.clk_hw*, %struct.clk_hw** %hw83, align 8, !dbg !10878
  %77 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10879
  %call84 = call i64 @clk_core_get_accuracy_no_lock(%struct.clk_core* %77) #11, !dbg !10880
  %call85 = call i64 %74(%struct.clk_hw* %76, i64 %call84) #11, !dbg !10874
  %78 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10881
  %accuracy = getelementptr inbounds %struct.clk_core, %struct.clk_core* %78, i32 0, i32 23, !dbg !10882
  store i64 %call85, i64* %accuracy, align 8, !dbg !10883
  br label %if.end94, !dbg !10881

if.else86:                                        ; preds = %if.end77
  %79 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10884
  %tobool87 = icmp ne %struct.clk_core* %79, null, !dbg !10884
  br i1 %tobool87, label %if.then88, label %if.else91, !dbg !10886

if.then88:                                        ; preds = %if.else86
  %80 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10887
  %accuracy89 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %80, i32 0, i32 23, !dbg !10888
  %81 = load i64, i64* %accuracy89, align 8, !dbg !10888
  %82 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10889
  %accuracy90 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %82, i32 0, i32 23, !dbg !10890
  store i64 %81, i64* %accuracy90, align 8, !dbg !10891
  br label %if.end93, !dbg !10889

if.else91:                                        ; preds = %if.else86
  %83 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10892
  %accuracy92 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %83, i32 0, i32 23, !dbg !10893
  store i64 0, i64* %accuracy92, align 8, !dbg !10894
  br label %if.end93

if.end93:                                         ; preds = %if.else91, %if.then88
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then80
  %84 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10895
  %call95 = call i32 @clk_core_get_phase(%struct.clk_core* %84) #11, !dbg !10896
  store i32 %call95, i32* %phase, align 4, !dbg !10897
  %85 = load i32, i32* %phase, align 4, !dbg !10898
  %cmp96 = icmp slt i32 %85, 0, !dbg !10900
  br i1 %cmp96, label %if.then98, label %if.end101, !dbg !10901

if.then98:                                        ; preds = %if.end94
  %86 = load i32, i32* %phase, align 4, !dbg !10902
  store i32 %86, i32* %ret, align 4, !dbg !10904
  %87 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10905
  %name99 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %87, i32 0, i32 0, !dbg !10905
  %88 = load i8*, i8** %name99, align 8, !dbg !10905
  %call100 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.__clk_core_init, i64 0, i64 0), i8* %88) #13, !dbg !10905
  br label %out, !dbg !10906

if.end101:                                        ; preds = %if.end94
  %89 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10907
  %call102 = call i32 @clk_core_update_duty_cycle_nolock(%struct.clk_core* %89) #11, !dbg !10908
  %90 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10909
  %ops103 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %90, i32 0, i32 1, !dbg !10911
  %91 = load %struct.clk_ops*, %struct.clk_ops** %ops103, align 8, !dbg !10911
  %recalc_rate104 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %91, i32 0, i32 10, !dbg !10912
  %92 = load i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64)** %recalc_rate104, align 8, !dbg !10912
  %tobool105 = icmp ne i64 (%struct.clk_hw*, i64)* %92, null, !dbg !10909
  br i1 %tobool105, label %if.then106, label %if.else112, !dbg !10913

if.then106:                                       ; preds = %if.end101
  %93 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10914
  %ops107 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %93, i32 0, i32 1, !dbg !10915
  %94 = load %struct.clk_ops*, %struct.clk_ops** %ops107, align 8, !dbg !10915
  %recalc_rate108 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %94, i32 0, i32 10, !dbg !10916
  %95 = load i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64)** %recalc_rate108, align 8, !dbg !10916
  %96 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10917
  %hw109 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %96, i32 0, i32 2, !dbg !10918
  %97 = load %struct.clk_hw*, %struct.clk_hw** %hw109, align 8, !dbg !10918
  %98 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10919
  %call110 = call i64 @clk_core_get_rate_nolock(%struct.clk_core* %98) #11, !dbg !10920
  %call111 = call i64 %95(%struct.clk_hw* %97, i64 %call110) #11, !dbg !10914
  store i64 %call111, i64* %rate, align 8, !dbg !10921
  br label %if.end118, !dbg !10922

if.else112:                                       ; preds = %if.end101
  %99 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10923
  %tobool113 = icmp ne %struct.clk_core* %99, null, !dbg !10923
  br i1 %tobool113, label %if.then114, label %if.else116, !dbg !10925

if.then114:                                       ; preds = %if.else112
  %100 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !10926
  %rate115 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %100, i32 0, i32 10, !dbg !10927
  %101 = load i64, i64* %rate115, align 8, !dbg !10927
  store i64 %101, i64* %rate, align 8, !dbg !10928
  br label %if.end117, !dbg !10929

if.else116:                                       ; preds = %if.else112
  store i64 0, i64* %rate, align 8, !dbg !10930
  br label %if.end117

if.end117:                                        ; preds = %if.else116, %if.then114
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then106
  %102 = load i64, i64* %rate, align 8, !dbg !10931
  %103 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10932
  %req_rate = getelementptr inbounds %struct.clk_core, %struct.clk_core* %103, i32 0, i32 11, !dbg !10933
  store i64 %102, i64* %req_rate, align 8, !dbg !10934
  %104 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10935
  %rate119 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %104, i32 0, i32 10, !dbg !10936
  store i64 %102, i64* %rate119, align 8, !dbg !10937
  %105 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10938
  %flags = getelementptr inbounds %struct.clk_core, %struct.clk_core* %105, i32 0, i32 15, !dbg !10940
  %106 = load i64, i64* %flags, align 8, !dbg !10940
  %and = and i64 %106, 2048, !dbg !10941
  %tobool120 = icmp ne i64 %and, 0, !dbg !10941
  br i1 %tobool120, label %if.then121, label %if.end136, !dbg !10942

if.then121:                                       ; preds = %if.end118
  call void @llvm.dbg.declare(metadata i64* %flags122, metadata !10943, metadata !DIExpression()), !dbg !10945
  %107 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10946
  %call123 = call i32 @clk_core_prepare(%struct.clk_core* %107) #11, !dbg !10947
  store i32 %call123, i32* %ret, align 4, !dbg !10948
  %108 = load i32, i32* %ret, align 4, !dbg !10949
  %tobool124 = icmp ne i32 %108, 0, !dbg !10949
  br i1 %tobool124, label %if.then125, label %if.end128, !dbg !10951

if.then125:                                       ; preds = %if.then121
  %109 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10952
  %name126 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %109, i32 0, i32 0, !dbg !10952
  %110 = load i8*, i8** %name126, align 8, !dbg !10952
  %call127 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.__clk_core_init, i64 0, i64 0), i8* %110) #13, !dbg !10952
  br label %out, !dbg !10954

if.end128:                                        ; preds = %if.then121
  %call129 = call i64 @clk_enable_lock() #11, !dbg !10955
  store i64 %call129, i64* %flags122, align 8, !dbg !10956
  %111 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10957
  %call130 = call i32 @clk_core_enable(%struct.clk_core* %111) #11, !dbg !10958
  store i32 %call130, i32* %ret, align 4, !dbg !10959
  %112 = load i64, i64* %flags122, align 8, !dbg !10960
  call void @clk_enable_unlock(i64 %112) #11, !dbg !10961
  %113 = load i32, i32* %ret, align 4, !dbg !10962
  %tobool131 = icmp ne i32 %113, 0, !dbg !10962
  br i1 %tobool131, label %if.then132, label %if.end135, !dbg !10964

if.then132:                                       ; preds = %if.end128
  %114 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10965
  %name133 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %114, i32 0, i32 0, !dbg !10965
  %115 = load i8*, i8** %name133, align 8, !dbg !10965
  %call134 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.__clk_core_init, i64 0, i64 0), i8* %115) #13, !dbg !10965
  %116 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10967
  call void @clk_core_unprepare(%struct.clk_core* %116) #11, !dbg !10968
  br label %out, !dbg !10969

if.end135:                                        ; preds = %if.end128
  br label %if.end136, !dbg !10970

if.end136:                                        ; preds = %if.end135, %if.end118
  call void @clk_core_reparent_orphans_nolock() #11, !dbg !10971
  %117 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10972
  %ref = getelementptr inbounds %struct.clk_core, %struct.clk_core* %117, i32 0, i32 30, !dbg !10973
  call void @kref_init(%struct.kref* %ref) #11, !dbg !10974
  br label %out, !dbg !10974

out:                                              ; preds = %if.end136, %if.then132, %if.then125, %if.then98, %if.then59, %if.then48, %if.then34, %if.then25, %if.then16, %if.then6
  call void @llvm.dbg.label(metadata !10975), !dbg !10976
  %118 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10977
  call void @clk_pm_runtime_put(%struct.clk_core* %118) #11, !dbg !10978
  br label %unlock, !dbg !10978

unlock:                                           ; preds = %out, %if.then2
  call void @llvm.dbg.label(metadata !10979), !dbg !10980
  %119 = load i32, i32* %ret, align 4, !dbg !10981
  %tobool137 = icmp ne i32 %119, 0, !dbg !10981
  br i1 %tobool137, label %if.then138, label %if.end140, !dbg !10983

if.then138:                                       ; preds = %unlock
  %120 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10984
  %child_node139 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %120, i32 0, i32 27, !dbg !10985
  call void @hlist_del_init(%struct.hlist_node* %child_node139) #11, !dbg !10986
  br label %if.end140, !dbg !10986

if.end140:                                        ; preds = %if.then138, %unlock
  call void @clk_prepare_unlock() #11, !dbg !10987
  %121 = load i32, i32* %ret, align 4, !dbg !10988
  %tobool141 = icmp ne i32 %121, 0, !dbg !10988
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !10990

if.then142:                                       ; preds = %if.end140
  %122 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !10991
  call void @clk_debug_register(%struct.clk_core* %122) #11, !dbg !10992
  br label %if.end143, !dbg !10992

if.end143:                                        ; preds = %if.then142, %if.end140
  %123 = load i32, i32* %ret, align 4, !dbg !10993
  store i32 %123, i32* %retval, align 4, !dbg !10994
  br label %return, !dbg !10994

return:                                           ; preds = %if.end143, %if.then
  %124 = load i32, i32* %retval, align 4, !dbg !10995
  ret i32 %124, !dbg !10995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_unlink_consumer(%struct.clk* %clk) #0 !dbg !10996 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !10997, metadata !DIExpression()), !dbg !10998
  br label %do.body, !dbg !10999

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11000

do.end:                                           ; preds = %do.body
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !11002
  %clks_node = getelementptr inbounds %struct.clk, %struct.clk* %0, i32 0, i32 7, !dbg !11003
  call void @hlist_del(%struct.hlist_node* %clks_node) #11, !dbg !11004
  ret void, !dbg !11005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_free_parent_map(%struct.clk_core* %core) #0 !dbg !11006 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %i = alloca i32, align 4
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !11007, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11009, metadata !DIExpression()), !dbg !11010
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !11011
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 8, !dbg !11012
  %1 = load i8, i8* %num_parents, align 8, !dbg !11012
  %conv = zext i8 %1 to i32, !dbg !11011
  store i32 %conv, i32* %i, align 4, !dbg !11010
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !11013
  %num_parents1 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 8, !dbg !11015
  %3 = load i8, i8* %num_parents1, align 8, !dbg !11015
  %tobool = icmp ne i8 %3, 0, !dbg !11013
  br i1 %tobool, label %if.end, label %if.then, !dbg !11016

if.then:                                          ; preds = %entry
  br label %return, !dbg !11017

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !11018

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !11019
  %dec = add i32 %4, -1, !dbg !11019
  store i32 %dec, i32* %i, align 4, !dbg !11019
  %cmp = icmp sge i32 %dec, 0, !dbg !11020
  br i1 %cmp, label %while.body, label %while.end, !dbg !11018

while.body:                                       ; preds = %while.cond
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !11021
  %parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 7, !dbg !11023
  %6 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !11023
  %7 = load i32, i32* %i, align 4, !dbg !11024
  %idxprom = sext i32 %7 to i64, !dbg !11021
  %arrayidx = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %6, i64 %idxprom, !dbg !11021
  %name = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx, i32 0, i32 3, !dbg !11025
  %8 = load i8*, i8** %name, align 8, !dbg !11025
  call void @kfree_const(i8* %8) #11, !dbg !11026
  %9 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !11027
  %parents3 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 7, !dbg !11028
  %10 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents3, align 8, !dbg !11028
  %11 = load i32, i32* %i, align 4, !dbg !11029
  %idxprom4 = sext i32 %11 to i64, !dbg !11027
  %arrayidx5 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %10, i64 %idxprom4, !dbg !11027
  %fw_name = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx5, i32 0, i32 2, !dbg !11030
  %12 = load i8*, i8** %fw_name, align 8, !dbg !11030
  call void @kfree_const(i8* %12) #11, !dbg !11031
  br label %while.cond, !dbg !11018, !llvm.loop !11032

while.end:                                        ; preds = %while.cond
  %13 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !11034
  %parents6 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %13, i32 0, i32 7, !dbg !11035
  %14 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents6, align 8, !dbg !11035
  %15 = bitcast %struct.clk_parent_map* %14 to i8*, !dbg !11034
  call void @kfree(i8* %15) #11, !dbg !11036
  br label %return, !dbg !11037

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !11037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !11038 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11041, metadata !DIExpression()), !dbg !11042
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11043, metadata !DIExpression()), !dbg !11044
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11045, metadata !DIExpression()), !dbg !11046
  %0 = load i64, i64* %n.addr, align 8, !dbg !11047
  %1 = load i64, i64* %size.addr, align 8, !dbg !11048
  %2 = load i32, i32* %flags.addr, align 4, !dbg !11049
  %or = or i32 %2, 256, !dbg !11050
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !11051
  ret i8* %call, !dbg !11052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_cpy_name(i8** %dst_p, i8* %src, i1 zeroext %must_exist) #0 !dbg !11053 {
entry:
  %retval = alloca i32, align 4
  %dst_p.addr = alloca i8**, align 8
  %src.addr = alloca i8*, align 8
  %must_exist.addr = alloca i8, align 1
  %dst = alloca i8*, align 8
  store i8** %dst_p, i8*** %dst_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dst_p.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !11058, metadata !DIExpression()), !dbg !11059
  %frombool = zext i1 %must_exist to i8
  store i8 %frombool, i8* %must_exist.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %must_exist.addr, metadata !11060, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !11062, metadata !DIExpression()), !dbg !11063
  %0 = load i8*, i8** %src.addr, align 8, !dbg !11064
  %tobool = icmp ne i8* %0, null, !dbg !11064
  br i1 %tobool, label %if.end3, label %if.then, !dbg !11066

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %must_exist.addr, align 1, !dbg !11067
  %tobool1 = trunc i8 %1 to i1, !dbg !11067
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !11070

if.then2:                                         ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !11071
  br label %return, !dbg !11071

if.end:                                           ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !11072
  br label %return, !dbg !11072

if.end3:                                          ; preds = %entry
  %2 = load i8*, i8** %src.addr, align 8, !dbg !11073
  %call = call i8* @kstrdup_const(i8* %2, i32 3264) #11, !dbg !11074
  store i8* %call, i8** %dst, align 8, !dbg !11075
  %3 = load i8**, i8*** %dst_p.addr, align 8, !dbg !11076
  store i8* %call, i8** %3, align 8, !dbg !11077
  %4 = load i8*, i8** %dst, align 8, !dbg !11078
  %tobool4 = icmp ne i8* %4, null, !dbg !11078
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !11080

if.then5:                                         ; preds = %if.end3
  store i32 -12, i32* %retval, align 4, !dbg !11081
  br label %return, !dbg !11081

if.end6:                                          ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !11082
  br label %return, !dbg !11082

return:                                           ; preds = %if.end6, %if.then5, %if.end, %if.then2
  %5 = load i32, i32* %retval, align 4, !dbg !11083
  ret i32 %5, !dbg !11083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !11084 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6315, metadata !DIExpression()), !dbg !11085
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6325, metadata !DIExpression()), !dbg !11089
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6327, metadata !DIExpression()), !dbg !11090
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6329, metadata !DIExpression()), !dbg !11091
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6331, metadata !DIExpression()), !dbg !11092
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6337, metadata !DIExpression()), !dbg !11094
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6343, metadata !DIExpression()), !dbg !11096
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6352, metadata !DIExpression()), !dbg !11099
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6354, metadata !DIExpression()), !dbg !11100
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6356, metadata !DIExpression()), !dbg !11101
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6358, metadata !DIExpression()), !dbg !11102
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6360, metadata !DIExpression()), !dbg !11103
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6362, metadata !DIExpression()), !dbg !11104
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6364, metadata !DIExpression()), !dbg !11105
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6366, metadata !DIExpression()), !dbg !11106
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11107, metadata !DIExpression()), !dbg !11108
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11109, metadata !DIExpression()), !dbg !11110
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11111, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !11113, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !11115, metadata !DIExpression()), !dbg !11118
  %0 = load i64, i64* %n.addr, align 8, !dbg !11118
  store i64 %0, i64* %__a, align 8, !dbg !11118
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !11119, metadata !DIExpression()), !dbg !11118
  %1 = load i64, i64* %size.addr, align 8, !dbg !11118
  store i64 %1, i64* %__b, align 8, !dbg !11118
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !11120, metadata !DIExpression()), !dbg !11118
  store i64* %bytes, i64** %__d, align 8, !dbg !11118
  %cmp = icmp eq i64* %__a, %__b, !dbg !11118
  %conv = zext i1 %cmp to i32, !dbg !11118
  %2 = load i64*, i64** %__d, align 8, !dbg !11118
  %cmp1 = icmp eq i64* %__a, %2, !dbg !11118
  %conv2 = zext i1 %cmp1 to i32, !dbg !11118
  %3 = load i64, i64* %__a, align 8, !dbg !11118
  %4 = load i64, i64* %__b, align 8, !dbg !11118
  %5 = load i64*, i64** %__d, align 8, !dbg !11118
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !11118
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !11118
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !11118
  store i64 %8, i64* %5, align 8, !dbg !11118
  %frombool = zext i1 %7 to i8, !dbg !11118
  store i8 %frombool, i8* %tmp, align 1, !dbg !11118
  %9 = load i8, i8* %tmp, align 1, !dbg !11118
  %tobool = trunc i8 %9 to i1, !dbg !11118
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !11122
  %lnot = xor i1 %call, true, !dbg !11122
  %lnot3 = xor i1 %lnot, true, !dbg !11122
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11122
  %conv4 = sext i32 %lnot.ext to i64, !dbg !11122
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !11122
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11123

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11124
  br label %return, !dbg !11124

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !11125
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !11126
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !11127

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !11128
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !11129
  br i1 %13, label %if.then6, label %if.end8, !dbg !11130

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !11131
  %15 = load i32, i32* %flags.addr, align 4, !dbg !11132
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !11133
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !11134
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !11135

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !11136
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !11137
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11138

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !11139
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !11140
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !11141
  %call.i.i = call i32 @get_order(i64 %21) #15, !dbg !11142
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11103
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !11143
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11144
  %24 = load i32, i32* %order.i.i, align 4, !dbg !11145
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11146
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11147
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11148
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #14, !dbg !11149
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11149
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11149
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11149
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !11149
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11150
  br label %kmalloc.exit, !dbg !11150

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !11151
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11152
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !11152
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11153

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11154
  br label %kmalloc_index.exit.i, !dbg !11154

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11155
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !11156
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11157

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11158
  br label %kmalloc_index.exit.i, !dbg !11158

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11159
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !11160
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11161

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11162
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !11163
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11164

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11165
  br label %kmalloc_index.exit.i, !dbg !11165

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11166
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !11167
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11168

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11169
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !11170
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11171

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11172
  br label %kmalloc_index.exit.i, !dbg !11172

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11173
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !11174
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11175

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11176
  br label %kmalloc_index.exit.i, !dbg !11176

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11177
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !11178
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11179

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11180
  br label %kmalloc_index.exit.i, !dbg !11180

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11181
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !11182
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11183

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11184
  br label %kmalloc_index.exit.i, !dbg !11184

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11185
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !11186
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11187

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11188
  br label %kmalloc_index.exit.i, !dbg !11188

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11189
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !11190
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11191

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11192
  br label %kmalloc_index.exit.i, !dbg !11192

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11193
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !11194
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11195

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11196
  br label %kmalloc_index.exit.i, !dbg !11196

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11197
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !11198
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11199

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11200
  br label %kmalloc_index.exit.i, !dbg !11200

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11201
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !11202
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11203

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11204
  br label %kmalloc_index.exit.i, !dbg !11204

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11205
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !11206
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11207

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11208
  br label %kmalloc_index.exit.i, !dbg !11208

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11209
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !11210
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11211

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11212
  br label %kmalloc_index.exit.i, !dbg !11212

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11213
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !11214
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11215

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11216
  br label %kmalloc_index.exit.i, !dbg !11216

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11217
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !11218
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11219

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11220
  br label %kmalloc_index.exit.i, !dbg !11220

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11221
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !11222
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11223

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11224
  br label %kmalloc_index.exit.i, !dbg !11224

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11225
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !11226
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11227

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11228
  br label %kmalloc_index.exit.i, !dbg !11228

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11229
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !11230
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11231

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11232
  br label %kmalloc_index.exit.i, !dbg !11232

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11233
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !11234
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11235

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11236
  br label %kmalloc_index.exit.i, !dbg !11236

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11237
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !11238
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11239

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11240
  br label %kmalloc_index.exit.i, !dbg !11240

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11241
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !11242
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11243

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11244
  br label %kmalloc_index.exit.i, !dbg !11244

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11245
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !11246
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11247

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11248
  br label %kmalloc_index.exit.i, !dbg !11248

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11249
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !11250
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11251

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11252
  br label %kmalloc_index.exit.i, !dbg !11252

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11253
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !11254
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11255

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11256
  br label %kmalloc_index.exit.i, !dbg !11256

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11257
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !11258
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11259

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11260
  br label %kmalloc_index.exit.i, !dbg !11260

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11261
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !11262
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11263

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11264
  br label %kmalloc_index.exit.i, !dbg !11264

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11265
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !11266
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11267

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11268
  br label %kmalloc_index.exit.i, !dbg !11268

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !11269, !srcloc !6542
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !11270, !srcloc !6546
  unreachable, !dbg !11271

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !11272
  store i32 %59, i32* %index.i, align 4, !dbg !11273
  %60 = load i32, i32* %index.i, align 4, !dbg !11274
  %tobool.i = icmp ne i32 %60, 0, !dbg !11274
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11275

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11276
  br label %kmalloc.exit, !dbg !11276

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !11277
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11278
  %and.i.i = and i32 %62, 17, !dbg !11278
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11278
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11278
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11278
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11278
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11279

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11280
  br label %kmalloc_type.exit.i, !dbg !11280

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11281
  %and2.i.i = and i32 %63, 1, !dbg !11282
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11281
  %64 = zext i1 %tobool3.i.i to i64, !dbg !11281
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11281
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11283
  br label %kmalloc_type.exit.i, !dbg !11283

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !11284
  %idxprom.i = zext i32 %65 to i64, !dbg !11285
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11285
  %66 = load i32, i32* %index.i, align 4, !dbg !11286
  %idxprom6.i = zext i32 %66 to i64, !dbg !11285
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11285
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11285
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !11287
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !11288
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11289
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11290
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #14, !dbg !11291
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11291
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11291
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11291
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !11291
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11091
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11292
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !11293
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11294
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11295
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #14, !dbg !11296
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11297
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !11298
  store i8* %76, i8** %retval.i, align 8, !dbg !11299
  br label %kmalloc.exit, !dbg !11299

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !11300
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !11301
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #14, !dbg !11302
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11302
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11302
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11302
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !11302
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11303
  br label %kmalloc.exit, !dbg !11303

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !11304
  store i8* %79, i8** %retval, align 8, !dbg !11305
  br label %return, !dbg !11305

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !11306
  %81 = load i32, i32* %flags.addr, align 4, !dbg !11307
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !11308
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !11308
  %maskedptr = and i64 %ptrint, 7, !dbg !11308
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !11308
  call void @llvm.assume(i1 %maskcond), !dbg !11308
  store i8* %call9, i8** %retval, align 8, !dbg !11309
  br label %return, !dbg !11309

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !11310
  ret i8* %82, !dbg !11310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !11311 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !11315, metadata !DIExpression()), !dbg !11316
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !11317
  %tobool = trunc i8 %0 to i1, !dbg !11317
  %lnot = xor i1 %tobool, true, !dbg !11317
  %lnot1 = xor i1 %lnot, true, !dbg !11317
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11317
  %conv = sext i32 %lnot.ext to i64, !dbg !11317
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11317
  ret i1 %tobool2, !dbg !11318
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #5

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !11319 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11323, metadata !DIExpression()), !dbg !11328
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11330, metadata !DIExpression()), !dbg !11331
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11332, metadata !DIExpression()), !dbg !11333
  %0 = load i64, i64* %size.addr, align 8, !dbg !11334
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11336
  br i1 %1, label %if.then, label %if.end447, !dbg !11337

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11338
  %tobool = icmp ne i64 %2, 0, !dbg !11338
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11341

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11342
  br label %return, !dbg !11342

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11343
  %cmp = icmp ult i64 %3, 4096, !dbg !11345
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11346

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11347
  br label %return, !dbg !11347

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub = sub i64 %4, 1, !dbg !11348
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11348
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11348

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub4 = sub i64 %6, 1, !dbg !11348
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11348
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11348

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub6 = sub i64 %8, 1, !dbg !11348
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11348
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11348

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11348

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub9 = sub i64 %9, 1, !dbg !11348
  %and = and i64 %sub9, -9223372036854775808, !dbg !11348
  %tobool10 = icmp ne i64 %and, 0, !dbg !11348
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11348

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11348

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub13 = sub i64 %10, 1, !dbg !11348
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11348
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11348
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11348

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11348

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub18 = sub i64 %11, 1, !dbg !11348
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11348
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11348
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11348

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11348

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub23 = sub i64 %12, 1, !dbg !11348
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11348
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11348
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11348

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11348

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub28 = sub i64 %13, 1, !dbg !11348
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11348
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11348
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11348

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11348

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub33 = sub i64 %14, 1, !dbg !11348
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11348
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11348
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11348

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11348

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub38 = sub i64 %15, 1, !dbg !11348
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11348
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11348
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11348

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11348

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub43 = sub i64 %16, 1, !dbg !11348
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11348
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11348
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11348

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11348

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub48 = sub i64 %17, 1, !dbg !11348
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11348
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11348
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11348

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11348

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub53 = sub i64 %18, 1, !dbg !11348
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11348
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11348
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11348

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11348

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub58 = sub i64 %19, 1, !dbg !11348
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11348
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11348
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11348

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11348

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub63 = sub i64 %20, 1, !dbg !11348
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11348
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11348
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11348

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11348

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub68 = sub i64 %21, 1, !dbg !11348
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11348
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11348
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11348

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11348

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub73 = sub i64 %22, 1, !dbg !11348
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11348
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11348
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11348

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11348

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub78 = sub i64 %23, 1, !dbg !11348
  %and79 = and i64 %sub78, 562949953421312, !dbg !11348
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11348
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11348

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11348

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub83 = sub i64 %24, 1, !dbg !11348
  %and84 = and i64 %sub83, 281474976710656, !dbg !11348
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11348
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11348

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11348

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub88 = sub i64 %25, 1, !dbg !11348
  %and89 = and i64 %sub88, 140737488355328, !dbg !11348
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11348
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11348

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11348

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub93 = sub i64 %26, 1, !dbg !11348
  %and94 = and i64 %sub93, 70368744177664, !dbg !11348
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11348
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11348

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11348

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub98 = sub i64 %27, 1, !dbg !11348
  %and99 = and i64 %sub98, 35184372088832, !dbg !11348
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11348
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11348

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11348

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub103 = sub i64 %28, 1, !dbg !11348
  %and104 = and i64 %sub103, 17592186044416, !dbg !11348
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11348
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11348

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11348

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub108 = sub i64 %29, 1, !dbg !11348
  %and109 = and i64 %sub108, 8796093022208, !dbg !11348
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11348
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11348

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11348

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub113 = sub i64 %30, 1, !dbg !11348
  %and114 = and i64 %sub113, 4398046511104, !dbg !11348
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11348
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11348

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11348

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub118 = sub i64 %31, 1, !dbg !11348
  %and119 = and i64 %sub118, 2199023255552, !dbg !11348
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11348
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11348

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11348

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub123 = sub i64 %32, 1, !dbg !11348
  %and124 = and i64 %sub123, 1099511627776, !dbg !11348
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11348
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11348

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11348

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub128 = sub i64 %33, 1, !dbg !11348
  %and129 = and i64 %sub128, 549755813888, !dbg !11348
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11348
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11348

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11348

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub133 = sub i64 %34, 1, !dbg !11348
  %and134 = and i64 %sub133, 274877906944, !dbg !11348
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11348
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11348

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11348

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub138 = sub i64 %35, 1, !dbg !11348
  %and139 = and i64 %sub138, 137438953472, !dbg !11348
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11348
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11348

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11348

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub143 = sub i64 %36, 1, !dbg !11348
  %and144 = and i64 %sub143, 68719476736, !dbg !11348
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11348
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11348

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11348

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub148 = sub i64 %37, 1, !dbg !11348
  %and149 = and i64 %sub148, 34359738368, !dbg !11348
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11348
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11348

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11348

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub153 = sub i64 %38, 1, !dbg !11348
  %and154 = and i64 %sub153, 17179869184, !dbg !11348
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11348
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11348

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11348

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub158 = sub i64 %39, 1, !dbg !11348
  %and159 = and i64 %sub158, 8589934592, !dbg !11348
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11348
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11348

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11348

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub163 = sub i64 %40, 1, !dbg !11348
  %and164 = and i64 %sub163, 4294967296, !dbg !11348
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11348
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11348

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11348

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub168 = sub i64 %41, 1, !dbg !11348
  %and169 = and i64 %sub168, 2147483648, !dbg !11348
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11348
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11348

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11348

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub173 = sub i64 %42, 1, !dbg !11348
  %and174 = and i64 %sub173, 1073741824, !dbg !11348
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11348
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11348

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11348

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub178 = sub i64 %43, 1, !dbg !11348
  %and179 = and i64 %sub178, 536870912, !dbg !11348
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11348
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11348

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11348

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub183 = sub i64 %44, 1, !dbg !11348
  %and184 = and i64 %sub183, 268435456, !dbg !11348
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11348
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11348

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11348

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub188 = sub i64 %45, 1, !dbg !11348
  %and189 = and i64 %sub188, 134217728, !dbg !11348
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11348
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11348

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11348

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub193 = sub i64 %46, 1, !dbg !11348
  %and194 = and i64 %sub193, 67108864, !dbg !11348
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11348
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11348

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11348

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub198 = sub i64 %47, 1, !dbg !11348
  %and199 = and i64 %sub198, 33554432, !dbg !11348
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11348
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11348

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11348

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub203 = sub i64 %48, 1, !dbg !11348
  %and204 = and i64 %sub203, 16777216, !dbg !11348
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11348
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11348

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11348

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub208 = sub i64 %49, 1, !dbg !11348
  %and209 = and i64 %sub208, 8388608, !dbg !11348
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11348
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11348

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11348

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub213 = sub i64 %50, 1, !dbg !11348
  %and214 = and i64 %sub213, 4194304, !dbg !11348
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11348
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11348

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11348

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub218 = sub i64 %51, 1, !dbg !11348
  %and219 = and i64 %sub218, 2097152, !dbg !11348
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11348
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11348

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11348

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub223 = sub i64 %52, 1, !dbg !11348
  %and224 = and i64 %sub223, 1048576, !dbg !11348
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11348
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11348

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11348

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub228 = sub i64 %53, 1, !dbg !11348
  %and229 = and i64 %sub228, 524288, !dbg !11348
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11348
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11348

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11348

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub233 = sub i64 %54, 1, !dbg !11348
  %and234 = and i64 %sub233, 262144, !dbg !11348
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11348
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11348

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11348

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub238 = sub i64 %55, 1, !dbg !11348
  %and239 = and i64 %sub238, 131072, !dbg !11348
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11348
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11348

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11348

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub243 = sub i64 %56, 1, !dbg !11348
  %and244 = and i64 %sub243, 65536, !dbg !11348
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11348
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11348

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11348

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub248 = sub i64 %57, 1, !dbg !11348
  %and249 = and i64 %sub248, 32768, !dbg !11348
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11348
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11348

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11348

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub253 = sub i64 %58, 1, !dbg !11348
  %and254 = and i64 %sub253, 16384, !dbg !11348
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11348
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11348

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11348

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub258 = sub i64 %59, 1, !dbg !11348
  %and259 = and i64 %sub258, 8192, !dbg !11348
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11348
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11348

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11348

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub263 = sub i64 %60, 1, !dbg !11348
  %and264 = and i64 %sub263, 4096, !dbg !11348
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11348
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11348

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11348

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub268 = sub i64 %61, 1, !dbg !11348
  %and269 = and i64 %sub268, 2048, !dbg !11348
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11348
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11348

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11348

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub273 = sub i64 %62, 1, !dbg !11348
  %and274 = and i64 %sub273, 1024, !dbg !11348
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11348
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11348

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11348

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub278 = sub i64 %63, 1, !dbg !11348
  %and279 = and i64 %sub278, 512, !dbg !11348
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11348
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11348

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11348

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub283 = sub i64 %64, 1, !dbg !11348
  %and284 = and i64 %sub283, 256, !dbg !11348
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11348
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11348

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11348

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub288 = sub i64 %65, 1, !dbg !11348
  %and289 = and i64 %sub288, 128, !dbg !11348
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11348
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11348

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11348

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub293 = sub i64 %66, 1, !dbg !11348
  %and294 = and i64 %sub293, 64, !dbg !11348
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11348
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11348

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11348

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub298 = sub i64 %67, 1, !dbg !11348
  %and299 = and i64 %sub298, 32, !dbg !11348
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11348
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11348

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11348

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub303 = sub i64 %68, 1, !dbg !11348
  %and304 = and i64 %sub303, 16, !dbg !11348
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11348
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11348

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11348

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub308 = sub i64 %69, 1, !dbg !11348
  %and309 = and i64 %sub308, 8, !dbg !11348
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11348
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11348

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11348

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub313 = sub i64 %70, 1, !dbg !11348
  %and314 = and i64 %sub313, 4, !dbg !11348
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11348
  %71 = zext i1 %tobool315 to i64, !dbg !11348
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11348
  br label %cond.end, !dbg !11348

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11348
  br label %cond.end317, !dbg !11348

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11348
  br label %cond.end319, !dbg !11348

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11348
  br label %cond.end321, !dbg !11348

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11348
  br label %cond.end323, !dbg !11348

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11348
  br label %cond.end325, !dbg !11348

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11348
  br label %cond.end327, !dbg !11348

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11348
  br label %cond.end329, !dbg !11348

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11348
  br label %cond.end331, !dbg !11348

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11348
  br label %cond.end333, !dbg !11348

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11348
  br label %cond.end335, !dbg !11348

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11348
  br label %cond.end337, !dbg !11348

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11348
  br label %cond.end339, !dbg !11348

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11348
  br label %cond.end341, !dbg !11348

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11348
  br label %cond.end343, !dbg !11348

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11348
  br label %cond.end345, !dbg !11348

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11348
  br label %cond.end347, !dbg !11348

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11348
  br label %cond.end349, !dbg !11348

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11348
  br label %cond.end351, !dbg !11348

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11348
  br label %cond.end353, !dbg !11348

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11348
  br label %cond.end355, !dbg !11348

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11348
  br label %cond.end357, !dbg !11348

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11348
  br label %cond.end359, !dbg !11348

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11348
  br label %cond.end361, !dbg !11348

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11348
  br label %cond.end363, !dbg !11348

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11348
  br label %cond.end365, !dbg !11348

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11348
  br label %cond.end367, !dbg !11348

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11348
  br label %cond.end369, !dbg !11348

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11348
  br label %cond.end371, !dbg !11348

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11348
  br label %cond.end373, !dbg !11348

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11348
  br label %cond.end375, !dbg !11348

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11348
  br label %cond.end377, !dbg !11348

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11348
  br label %cond.end379, !dbg !11348

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11348
  br label %cond.end381, !dbg !11348

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11348
  br label %cond.end383, !dbg !11348

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11348
  br label %cond.end385, !dbg !11348

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11348
  br label %cond.end387, !dbg !11348

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11348
  br label %cond.end389, !dbg !11348

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11348
  br label %cond.end391, !dbg !11348

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11348
  br label %cond.end393, !dbg !11348

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11348
  br label %cond.end395, !dbg !11348

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11348
  br label %cond.end397, !dbg !11348

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11348
  br label %cond.end399, !dbg !11348

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11348
  br label %cond.end401, !dbg !11348

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11348
  br label %cond.end403, !dbg !11348

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11348
  br label %cond.end405, !dbg !11348

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11348
  br label %cond.end407, !dbg !11348

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11348
  br label %cond.end409, !dbg !11348

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11348
  br label %cond.end411, !dbg !11348

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11348
  br label %cond.end413, !dbg !11348

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11348
  br label %cond.end415, !dbg !11348

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11348
  br label %cond.end417, !dbg !11348

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11348
  br label %cond.end419, !dbg !11348

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11348
  br label %cond.end421, !dbg !11348

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11348
  br label %cond.end423, !dbg !11348

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11348
  br label %cond.end425, !dbg !11348

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11348
  br label %cond.end427, !dbg !11348

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11348
  br label %cond.end429, !dbg !11348

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11348
  br label %cond.end431, !dbg !11348

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11348
  br label %cond.end433, !dbg !11348

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11348
  br label %cond.end435, !dbg !11348

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11348
  br label %cond.end437, !dbg !11348

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11348
  br label %cond.end440, !dbg !11348

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11348

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11348
  br label %cond.end444, !dbg !11348

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11348
  %sub443 = sub i64 %72, 1, !dbg !11348
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !11348
  br label %cond.end444, !dbg !11348

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11348
  %sub446 = sub i32 %cond445, 12, !dbg !11349
  %add = add i32 %sub446, 1, !dbg !11350
  store i32 %add, i32* %retval, align 4, !dbg !11351
  br label %return, !dbg !11351

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11352
  %dec = add i64 %73, -1, !dbg !11352
  store i64 %dec, i64* %size.addr, align 8, !dbg !11352
  %74 = load i64, i64* %size.addr, align 8, !dbg !11353
  %shr = lshr i64 %74, 12, !dbg !11353
  store i64 %shr, i64* %size.addr, align 8, !dbg !11353
  %75 = load i64, i64* %size.addr, align 8, !dbg !11354
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11331
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11355
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11356
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !11355, !srcloc !11357
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11355
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11358
  %add.i = add i32 %79, 1, !dbg !11359
  store i32 %add.i, i32* %retval, align 4, !dbg !11360
  br label %return, !dbg !11360

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11361
  ret i32 %80, !dbg !11361
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !11362 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11323, metadata !DIExpression()), !dbg !11366
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11330, metadata !DIExpression()), !dbg !11368
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11369, metadata !DIExpression()), !dbg !11370
  %0 = load i64, i64* %n.addr, align 8, !dbg !11371
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11368
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11372
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11373
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !11372, !srcloc !11357
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11372
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11374
  %add.i = add i32 %4, 1, !dbg !11375
  %sub = sub i32 %add.i, 1, !dbg !11376
  ret i32 %sub, !dbg !11377
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !11378 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11381, metadata !DIExpression()), !dbg !11382
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11383, metadata !DIExpression()), !dbg !11384
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11387, metadata !DIExpression()), !dbg !11388
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11389
  ret i8* %0, !dbg !11390
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk_core* @__clk_init_parent(%struct.clk_core* %core) #0 !dbg !11391 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  %index = alloca i8, align 1
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !11394, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.declare(metadata i8* %index, metadata !11396, metadata !DIExpression()), !dbg !11397
  store i8 0, i8* %index, align 1, !dbg !11397
  %0 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !11398
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %0, i32 0, i32 8, !dbg !11400
  %1 = load i8, i8* %num_parents, align 8, !dbg !11400
  %conv = zext i8 %1 to i32, !dbg !11398
  %cmp = icmp sgt i32 %conv, 1, !dbg !11401
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11402

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !11403
  %ops = getelementptr inbounds %struct.clk_core, %struct.clk_core* %2, i32 0, i32 1, !dbg !11404
  %3 = load %struct.clk_ops*, %struct.clk_ops** %ops, align 8, !dbg !11404
  %get_parent = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %3, i32 0, i32 14, !dbg !11405
  %4 = load i8 (%struct.clk_hw*)*, i8 (%struct.clk_hw*)** %get_parent, align 8, !dbg !11405
  %tobool = icmp ne i8 (%struct.clk_hw*)* %4, null, !dbg !11403
  br i1 %tobool, label %if.then, label %if.end, !dbg !11406

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !11407
  %ops2 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %5, i32 0, i32 1, !dbg !11408
  %6 = load %struct.clk_ops*, %struct.clk_ops** %ops2, align 8, !dbg !11408
  %get_parent3 = getelementptr inbounds %struct.clk_ops, %struct.clk_ops* %6, i32 0, i32 14, !dbg !11409
  %7 = load i8 (%struct.clk_hw*)*, i8 (%struct.clk_hw*)** %get_parent3, align 8, !dbg !11409
  %8 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !11410
  %hw = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 2, !dbg !11411
  %9 = load %struct.clk_hw*, %struct.clk_hw** %hw, align 8, !dbg !11411
  %call = call zeroext i8 %7(%struct.clk_hw* %9) #11, !dbg !11407
  store i8 %call, i8* %index, align 1, !dbg !11412
  br label %if.end, !dbg !11413

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.clk_core*, %struct.clk_core** %core.addr, align 8, !dbg !11414
  %11 = load i8, i8* %index, align 1, !dbg !11415
  %call4 = call %struct.clk_core* @clk_core_get_parent_by_index(%struct.clk_core* %10, i8 zeroext %11) #11, !dbg !11416
  ret %struct.clk_core* %call4, !dbg !11417
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_reparent_orphans_nolock() #0 !dbg !11418 {
entry:
  %orphan = alloca %struct.clk_core*, align 8
  %tmp2 = alloca %struct.hlist_node*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.clk_core*, align 8
  %tmp3 = alloca i32, align 4
  %parent = alloca %struct.clk_core*, align 8
  %____ptr7 = alloca %struct.hlist_node*, align 8
  %tmp8 = alloca %struct.clk_core*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp14 = alloca %struct.clk_core*, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %orphan, metadata !11419, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %tmp2, metadata !11421, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !11423, metadata !DIExpression()), !dbg !11426
  %0 = load %struct.hlist_node*, %struct.hlist_node** getelementptr inbounds (%struct.hlist_head, %struct.hlist_head* @clk_orphan_list, i32 0, i32 0), align 8, !dbg !11426
  store %struct.hlist_node* %0, %struct.hlist_node** %____ptr, align 8, !dbg !11426
  %1 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !11426
  %tobool = icmp ne %struct.hlist_node* %1, null, !dbg !11426
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11426

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11427, metadata !DIExpression()), !dbg !11429
  %2 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !11429
  %3 = bitcast %struct.hlist_node* %2 to i8*, !dbg !11429
  store i8* %3, i8** %__mptr, align 8, !dbg !11429
  br label %do.body, !dbg !11429

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !11430

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !11429
  %add.ptr = getelementptr i8, i8* %4, i64 -184, !dbg !11429
  %5 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !11429
  store %struct.clk_core* %5, %struct.clk_core** %tmp1, align 8, !dbg !11430
  %6 = load %struct.clk_core*, %struct.clk_core** %tmp1, align 8, !dbg !11429
  br label %cond.end, !dbg !11426

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11426

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %6, %do.end ], [ null, %cond.false ], !dbg !11426
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !11426
  %7 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !11426
  store %struct.clk_core* %7, %struct.clk_core** %orphan, align 8, !dbg !11432
  br label %for.cond, !dbg !11432

for.cond:                                         ; preds = %cond.end17, %cond.end
  %8 = load %struct.clk_core*, %struct.clk_core** %orphan, align 8, !dbg !11433
  %tobool2 = icmp ne %struct.clk_core* %8, null, !dbg !11433
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !11433

land.rhs:                                         ; preds = %for.cond
  %9 = load %struct.clk_core*, %struct.clk_core** %orphan, align 8, !dbg !11435
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %9, i32 0, i32 27, !dbg !11435
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !11435
  %10 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !11435
  store %struct.hlist_node* %10, %struct.hlist_node** %tmp2, align 8, !dbg !11435
  store i32 1, i32* %tmp3, align 4, !dbg !11435
  %11 = load i32, i32* %tmp3, align 4, !dbg !11435
  %tobool4 = icmp ne i32 %11, 0, !dbg !11433
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %12 = phi i1 [ false, %for.cond ], [ %tobool4, %land.rhs ], !dbg !11437
  br i1 %12, label %for.body, label %for.end, !dbg !11432

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.clk_core** %parent, metadata !11438, metadata !DIExpression()), !dbg !11440
  %13 = load %struct.clk_core*, %struct.clk_core** %orphan, align 8, !dbg !11441
  %call = call %struct.clk_core* @__clk_init_parent(%struct.clk_core* %13) #11, !dbg !11442
  store %struct.clk_core* %call, %struct.clk_core** %parent, align 8, !dbg !11440
  %14 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !11443
  %tobool5 = icmp ne %struct.clk_core* %14, null, !dbg !11443
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11445

if.then:                                          ; preds = %for.body
  %15 = load %struct.clk_core*, %struct.clk_core** %orphan, align 8, !dbg !11446
  %16 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !11448
  %call6 = call %struct.clk_core* @__clk_set_parent_before(%struct.clk_core* %15, %struct.clk_core* %16) #11, !dbg !11449
  %17 = load %struct.clk_core*, %struct.clk_core** %orphan, align 8, !dbg !11450
  %18 = load %struct.clk_core*, %struct.clk_core** %parent, align 8, !dbg !11451
  call void @__clk_set_parent_after(%struct.clk_core* %17, %struct.clk_core* %18, %struct.clk_core* null) #11, !dbg !11452
  %19 = load %struct.clk_core*, %struct.clk_core** %orphan, align 8, !dbg !11453
  call void @__clk_recalc_accuracies(%struct.clk_core* %19) #11, !dbg !11454
  %20 = load %struct.clk_core*, %struct.clk_core** %orphan, align 8, !dbg !11455
  call void @__clk_recalc_rates(%struct.clk_core* %20, i64 0) #11, !dbg !11456
  br label %if.end, !dbg !11457

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11458

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr7, metadata !11459, metadata !DIExpression()), !dbg !11461
  %21 = load %struct.hlist_node*, %struct.hlist_node** %tmp2, align 8, !dbg !11461
  store %struct.hlist_node* %21, %struct.hlist_node** %____ptr7, align 8, !dbg !11461
  %22 = load %struct.hlist_node*, %struct.hlist_node** %____ptr7, align 8, !dbg !11461
  %tobool9 = icmp ne %struct.hlist_node* %22, null, !dbg !11461
  br i1 %tobool9, label %cond.true10, label %cond.false16, !dbg !11461

cond.true10:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !11462, metadata !DIExpression()), !dbg !11464
  %23 = load %struct.hlist_node*, %struct.hlist_node** %____ptr7, align 8, !dbg !11464
  %24 = bitcast %struct.hlist_node* %23 to i8*, !dbg !11464
  store i8* %24, i8** %__mptr11, align 8, !dbg !11464
  br label %do.body12, !dbg !11464

do.body12:                                        ; preds = %cond.true10
  br label %do.end13, !dbg !11465

do.end13:                                         ; preds = %do.body12
  %25 = load i8*, i8** %__mptr11, align 8, !dbg !11464
  %add.ptr15 = getelementptr i8, i8* %25, i64 -184, !dbg !11464
  %26 = bitcast i8* %add.ptr15 to %struct.clk_core*, !dbg !11464
  store %struct.clk_core* %26, %struct.clk_core** %tmp14, align 8, !dbg !11465
  %27 = load %struct.clk_core*, %struct.clk_core** %tmp14, align 8, !dbg !11464
  br label %cond.end17, !dbg !11461

cond.false16:                                     ; preds = %for.inc
  br label %cond.end17, !dbg !11461

cond.end17:                                       ; preds = %cond.false16, %do.end13
  %cond18 = phi %struct.clk_core* [ %27, %do.end13 ], [ null, %cond.false16 ], !dbg !11461
  store %struct.clk_core* %cond18, %struct.clk_core** %tmp8, align 8, !dbg !11461
  %28 = load %struct.clk_core*, %struct.clk_core** %tmp8, align 8, !dbg !11461
  store %struct.clk_core* %28, %struct.clk_core** %orphan, align 8, !dbg !11433
  br label %for.cond, !dbg !11433, !llvm.loop !11467

for.end:                                          ; preds = %land.end
  ret void, !dbg !11469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #0 !dbg !11470 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !11471, metadata !DIExpression()), !dbg !11472
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !11473
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !11474
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #11, !dbg !11475
  ret void, !dbg !11476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_debug_register(%struct.clk_core* %core) #0 !dbg !11477 {
entry:
  %core.addr = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %core, %struct.clk_core** %core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %core.addr, metadata !11478, metadata !DIExpression()), !dbg !11479
  ret void, !dbg !11480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #0 !dbg !11481 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !11484, metadata !DIExpression()), !dbg !11488
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !11492, metadata !DIExpression()), !dbg !11493
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !11494, metadata !DIExpression()), !dbg !11496
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11498, metadata !DIExpression()), !dbg !11499
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !11500, metadata !DIExpression()), !dbg !11501
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !11502, metadata !DIExpression()), !dbg !11503
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !11504, metadata !DIExpression()), !dbg !11505
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !11506, metadata !DIExpression()), !dbg !11507
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11508
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !11509
  %1 = load i32, i32* %n.addr, align 4, !dbg !11510
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11511
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !11511
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11512
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !11513
  %conv.i.i = trunc i64 %5 to i32, !dbg !11513
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #14, !dbg !11514
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11515
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11515
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #14, !dbg !11515
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11516
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !11517
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !11518
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11518
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !11518
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !11518
  ret void, !dbg !11520
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @dev_of_node(%struct.device* %dev) #0 !dbg !11521 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11522, metadata !DIExpression()), !dbg !11523
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11524
  %tobool = icmp ne %struct.device* %0, null, !dbg !11524
  br i1 %tobool, label %if.end, label %if.then, !dbg !11526

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !11527
  br label %return, !dbg !11527

if.end:                                           ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11528
  %of_node = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 23, !dbg !11529
  %2 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !11529
  store %struct.device_node* %2, %struct.device_node** %retval, align 8, !dbg !11530
  br label %return, !dbg !11530

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !11531
  ret %struct.device_node* %3, !dbg !11531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_nodrv_prepare_enable(%struct.clk_hw* %hw) #0 !dbg !11532 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !11533, metadata !DIExpression()), !dbg !11534
  ret i32 -6, !dbg !11535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_nodrv_disable_unprepare(%struct.clk_hw* %hw) #0 !dbg !11536 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !11537, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11539, metadata !DIExpression()), !dbg !11541
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !11541
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !11542
  %tobool = icmp ne i32 %0, 0, !dbg !11542
  %lnot = xor i1 %tobool, true, !dbg !11542
  %lnot1 = xor i1 %lnot, true, !dbg !11542
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11542
  %conv = sext i32 %lnot.ext to i64, !dbg !11542
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11542
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11541

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11542

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !11544

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !11546

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !11544

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 3948, i32 2307, i64 12) #10, !dbg !11548, !srcloc !11550
  br label %do.end5, !dbg !11548

do.end5:                                          ; preds = %do.body4
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 242) #10, !dbg !11551, !srcloc !11553
  br label %do.body6, !dbg !11544

do.body6:                                         ; preds = %do.end5
  br label %do.end7, !dbg !11554

do.end7:                                          ; preds = %do.body6
  br label %do.end8, !dbg !11544

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !11544

if.end:                                           ; preds = %do.end8, %entry
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !11541
  %tobool9 = icmp ne i32 %1, 0, !dbg !11541
  %lnot10 = xor i1 %tobool9, true, !dbg !11541
  %lnot12 = xor i1 %lnot10, true, !dbg !11541
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !11541
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !11541
  store i64 %conv14, i64* %tmp, align 8, !dbg !11542
  %2 = load i64, i64* %tmp, align 8, !dbg !11541
  ret void, !dbg !11556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_nodrv_set_parent(%struct.clk_hw* %hw, i8 zeroext %index) #0 !dbg !11557 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %index.addr = alloca i8, align 1
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !11558, metadata !DIExpression()), !dbg !11559
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !11560, metadata !DIExpression()), !dbg !11561
  ret i32 -6, !dbg !11562
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_nodrv_set_rate(%struct.clk_hw* %hw, i64 %rate, i64 %parent_rate) #0 !dbg !11563 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %rate.addr = alloca i64, align 8
  %parent_rate.addr = alloca i64, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !11564, metadata !DIExpression()), !dbg !11565
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !11566, metadata !DIExpression()), !dbg !11567
  store i64 %parent_rate, i64* %parent_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %parent_rate.addr, metadata !11568, metadata !DIExpression()), !dbg !11569
  ret i32 -6, !dbg !11570
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !11571 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !11573, metadata !DIExpression()), !dbg !11575
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11576, metadata !DIExpression()), !dbg !11575
  %0 = load i64, i64* %__edi, align 8, !dbg !11575
  store i64 %0, i64* %__edi, align 8, !dbg !11575
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11577, metadata !DIExpression()), !dbg !11575
  %1 = load i64, i64* %__esi, align 8, !dbg !11575
  store i64 %1, i64* %__esi, align 8, !dbg !11575
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11578, metadata !DIExpression()), !dbg !11575
  %2 = load i64, i64* %__edx, align 8, !dbg !11575
  store i64 %2, i64* %__edx, align 8, !dbg !11575
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11579, metadata !DIExpression()), !dbg !11575
  %3 = load i64, i64* %__ecx, align 8, !dbg !11575
  store i64 %3, i64* %__ecx, align 8, !dbg !11575
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11580, metadata !DIExpression()), !dbg !11575
  %4 = load i64, i64* %__eax, align 8, !dbg !11575
  store i64 %4, i64* %__eax, align 8, !dbg !11575
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !11575
  %6 = call i64 @llvm.read_register.i64(metadata !2353), !dbg !11581
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !11581, !srcloc !11584
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11581
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11581
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11581
  call void @llvm.write_register.i64(metadata !2353, i64 %asmresult1), !dbg !11581
  %8 = load i64, i64* %__eax, align 8, !dbg !11581
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !11585, metadata !DIExpression()), !dbg !11587
  store i64 -1, i64* %__mask, align 8, !dbg !11587
  %9 = load i64, i64* %__mask, align 8, !dbg !11587
  store i64 %9, i64* %tmp, align 8, !dbg !11587
  %10 = load i64, i64* %tmp, align 8, !dbg !11587
  %and = and i64 %8, %10, !dbg !11581
  store i64 %and, i64* %__ret, align 8, !dbg !11581
  %11 = load i64, i64* %__ret, align 8, !dbg !11575
  store i64 %11, i64* %tmp2, align 8, !dbg !11588
  %12 = load i64, i64* %tmp2, align 8, !dbg !11575
  ret i64 %12, !dbg !11589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !11590 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !11591, metadata !DIExpression()), !dbg !11592
  %call = call i64 @arch_local_save_flags() #11, !dbg !11593
  store i64 %call, i64* %f, align 8, !dbg !11594
  call void @arch_local_irq_disable() #11, !dbg !11595
  %0 = load i64, i64* %f, align 8, !dbg !11596
  ret i64 %0, !dbg !11597
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !11598 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11599, metadata !DIExpression()), !dbg !11601
  %0 = load i64, i64* %__edi, align 8, !dbg !11601
  store i64 %0, i64* %__edi, align 8, !dbg !11601
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11602, metadata !DIExpression()), !dbg !11601
  %1 = load i64, i64* %__esi, align 8, !dbg !11601
  store i64 %1, i64* %__esi, align 8, !dbg !11601
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11603, metadata !DIExpression()), !dbg !11601
  %2 = load i64, i64* %__edx, align 8, !dbg !11601
  store i64 %2, i64* %__edx, align 8, !dbg !11601
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11604, metadata !DIExpression()), !dbg !11601
  %3 = load i64, i64* %__ecx, align 8, !dbg !11601
  store i64 %3, i64* %__ecx, align 8, !dbg !11601
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11605, metadata !DIExpression()), !dbg !11601
  %4 = load i64, i64* %__eax, align 8, !dbg !11601
  store i64 %4, i64* %__eax, align 8, !dbg !11601
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !11601
  %6 = call i64 @llvm.read_register.i64(metadata !2353), !dbg !11601
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !11601, !srcloc !11606
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11601
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11601
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11601
  call void @llvm.write_register.i64(metadata !2353, i64 %asmresult1), !dbg !11601
  ret void, !dbg !11607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !11608 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !11609, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11611, metadata !DIExpression()), !dbg !11613
  %0 = load i64, i64* %__edi, align 8, !dbg !11613
  store i64 %0, i64* %__edi, align 8, !dbg !11613
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11614, metadata !DIExpression()), !dbg !11613
  %1 = load i64, i64* %__esi, align 8, !dbg !11613
  store i64 %1, i64* %__esi, align 8, !dbg !11613
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11615, metadata !DIExpression()), !dbg !11613
  %2 = load i64, i64* %__edx, align 8, !dbg !11613
  store i64 %2, i64* %__edx, align 8, !dbg !11613
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11616, metadata !DIExpression()), !dbg !11613
  %3 = load i64, i64* %__ecx, align 8, !dbg !11613
  store i64 %3, i64* %__ecx, align 8, !dbg !11613
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11617, metadata !DIExpression()), !dbg !11613
  %4 = load i64, i64* %__eax, align 8, !dbg !11613
  store i64 %4, i64* %__eax, align 8, !dbg !11613
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !11613
  %6 = call i64 @llvm.read_register.i64(metadata !2353), !dbg !11613
  %7 = load i64, i64* %f.addr, align 8, !dbg !11613
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !11613, !srcloc !11618
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !11613
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !11613
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11613
  call void @llvm.write_register.i64(metadata !2353, i64 %asmresult1), !dbg !11613
  ret void, !dbg !11619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_core_evict_parent_cache_subtree(%struct.clk_core* %root, %struct.clk_core* %target) #0 !dbg !11620 {
entry:
  %root.addr = alloca %struct.clk_core*, align 8
  %target.addr = alloca %struct.clk_core*, align 8
  %i = alloca i32, align 4
  %child = alloca %struct.clk_core*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.clk_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp8 = alloca %struct.clk_core*, align 8
  %____ptr13 = alloca %struct.hlist_node*, align 8
  %tmp14 = alloca %struct.clk_core*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp20 = alloca %struct.clk_core*, align 8
  store %struct.clk_core* %root, %struct.clk_core** %root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %root.addr, metadata !11621, metadata !DIExpression()), !dbg !11622
  store %struct.clk_core* %target, %struct.clk_core** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_core** %target.addr, metadata !11623, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11625, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.declare(metadata %struct.clk_core** %child, metadata !11627, metadata !DIExpression()), !dbg !11628
  store i32 0, i32* %i, align 4, !dbg !11629
  br label %for.cond, !dbg !11631

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11632
  %1 = load %struct.clk_core*, %struct.clk_core** %root.addr, align 8, !dbg !11634
  %num_parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %1, i32 0, i32 8, !dbg !11635
  %2 = load i8, i8* %num_parents, align 8, !dbg !11635
  %conv = zext i8 %2 to i32, !dbg !11634
  %cmp = icmp slt i32 %0, %conv, !dbg !11636
  br i1 %cmp, label %for.body, label %for.end, !dbg !11637

for.body:                                         ; preds = %for.cond
  %3 = load %struct.clk_core*, %struct.clk_core** %root.addr, align 8, !dbg !11638
  %parents = getelementptr inbounds %struct.clk_core, %struct.clk_core* %3, i32 0, i32 7, !dbg !11640
  %4 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents, align 8, !dbg !11640
  %5 = load i32, i32* %i, align 4, !dbg !11641
  %idxprom = sext i32 %5 to i64, !dbg !11638
  %arrayidx = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %4, i64 %idxprom, !dbg !11638
  %core = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx, i32 0, i32 1, !dbg !11642
  %6 = load %struct.clk_core*, %struct.clk_core** %core, align 8, !dbg !11642
  %7 = load %struct.clk_core*, %struct.clk_core** %target.addr, align 8, !dbg !11643
  %cmp2 = icmp eq %struct.clk_core* %6, %7, !dbg !11644
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11645

if.then:                                          ; preds = %for.body
  %8 = load %struct.clk_core*, %struct.clk_core** %root.addr, align 8, !dbg !11646
  %parents4 = getelementptr inbounds %struct.clk_core, %struct.clk_core* %8, i32 0, i32 7, !dbg !11647
  %9 = load %struct.clk_parent_map*, %struct.clk_parent_map** %parents4, align 8, !dbg !11647
  %10 = load i32, i32* %i, align 4, !dbg !11648
  %idxprom5 = sext i32 %10 to i64, !dbg !11646
  %arrayidx6 = getelementptr %struct.clk_parent_map, %struct.clk_parent_map* %9, i64 %idxprom5, !dbg !11646
  %core7 = getelementptr inbounds %struct.clk_parent_map, %struct.clk_parent_map* %arrayidx6, i32 0, i32 1, !dbg !11649
  store %struct.clk_core* null, %struct.clk_core** %core7, align 8, !dbg !11650
  br label %if.end, !dbg !11646

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11643

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !11651
  %inc = add i32 %11, 1, !dbg !11651
  store i32 %inc, i32* %i, align 4, !dbg !11651
  br label %for.cond, !dbg !11652, !llvm.loop !11653

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !11655, metadata !DIExpression()), !dbg !11658
  %12 = load %struct.clk_core*, %struct.clk_core** %root.addr, align 8, !dbg !11658
  %children = getelementptr inbounds %struct.clk_core, %struct.clk_core* %12, i32 0, i32 26, !dbg !11658
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %children, i32 0, i32 0, !dbg !11658
  %13 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !11658
  store %struct.hlist_node* %13, %struct.hlist_node** %____ptr, align 8, !dbg !11658
  %14 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !11658
  %tobool = icmp ne %struct.hlist_node* %14, null, !dbg !11658
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11658

cond.true:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11659, metadata !DIExpression()), !dbg !11661
  %15 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !11661
  %16 = bitcast %struct.hlist_node* %15 to i8*, !dbg !11661
  store i8* %16, i8** %__mptr, align 8, !dbg !11661
  br label %do.body, !dbg !11661

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !11662

do.end:                                           ; preds = %do.body
  %17 = load i8*, i8** %__mptr, align 8, !dbg !11661
  %add.ptr = getelementptr i8, i8* %17, i64 -184, !dbg !11661
  %18 = bitcast i8* %add.ptr to %struct.clk_core*, !dbg !11661
  store %struct.clk_core* %18, %struct.clk_core** %tmp8, align 8, !dbg !11662
  %19 = load %struct.clk_core*, %struct.clk_core** %tmp8, align 8, !dbg !11661
  br label %cond.end, !dbg !11658

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !11658

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.clk_core* [ %19, %do.end ], [ null, %cond.false ], !dbg !11658
  store %struct.clk_core* %cond, %struct.clk_core** %tmp, align 8, !dbg !11658
  %20 = load %struct.clk_core*, %struct.clk_core** %tmp, align 8, !dbg !11658
  store %struct.clk_core* %20, %struct.clk_core** %child, align 8, !dbg !11664
  br label %for.cond9, !dbg !11664

for.cond9:                                        ; preds = %cond.end23, %cond.end
  %21 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !11665
  %tobool10 = icmp ne %struct.clk_core* %21, null, !dbg !11664
  br i1 %tobool10, label %for.body11, label %for.end25, !dbg !11664

for.body11:                                       ; preds = %for.cond9
  %22 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !11667
  %23 = load %struct.clk_core*, %struct.clk_core** %target.addr, align 8, !dbg !11668
  call void @clk_core_evict_parent_cache_subtree(%struct.clk_core* %22, %struct.clk_core* %23) #11, !dbg !11669
  br label %for.inc12, !dbg !11669

for.inc12:                                        ; preds = %for.body11
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr13, metadata !11670, metadata !DIExpression()), !dbg !11672
  %24 = load %struct.clk_core*, %struct.clk_core** %child, align 8, !dbg !11672
  %child_node = getelementptr inbounds %struct.clk_core, %struct.clk_core* %24, i32 0, i32 27, !dbg !11672
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %child_node, i32 0, i32 0, !dbg !11672
  %25 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !11672
  store %struct.hlist_node* %25, %struct.hlist_node** %____ptr13, align 8, !dbg !11672
  %26 = load %struct.hlist_node*, %struct.hlist_node** %____ptr13, align 8, !dbg !11672
  %tobool15 = icmp ne %struct.hlist_node* %26, null, !dbg !11672
  br i1 %tobool15, label %cond.true16, label %cond.false22, !dbg !11672

cond.true16:                                      ; preds = %for.inc12
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !11673, metadata !DIExpression()), !dbg !11675
  %27 = load %struct.hlist_node*, %struct.hlist_node** %____ptr13, align 8, !dbg !11675
  %28 = bitcast %struct.hlist_node* %27 to i8*, !dbg !11675
  store i8* %28, i8** %__mptr17, align 8, !dbg !11675
  br label %do.body18, !dbg !11675

do.body18:                                        ; preds = %cond.true16
  br label %do.end19, !dbg !11676

do.end19:                                         ; preds = %do.body18
  %29 = load i8*, i8** %__mptr17, align 8, !dbg !11675
  %add.ptr21 = getelementptr i8, i8* %29, i64 -184, !dbg !11675
  %30 = bitcast i8* %add.ptr21 to %struct.clk_core*, !dbg !11675
  store %struct.clk_core* %30, %struct.clk_core** %tmp20, align 8, !dbg !11676
  %31 = load %struct.clk_core*, %struct.clk_core** %tmp20, align 8, !dbg !11675
  br label %cond.end23, !dbg !11672

cond.false22:                                     ; preds = %for.inc12
  br label %cond.end23, !dbg !11672

cond.end23:                                       ; preds = %cond.false22, %do.end19
  %cond24 = phi %struct.clk_core* [ %31, %do.end19 ], [ null, %cond.false22 ], !dbg !11672
  store %struct.clk_core* %cond24, %struct.clk_core** %tmp14, align 8, !dbg !11672
  %32 = load %struct.clk_core*, %struct.clk_core** %tmp14, align 8, !dbg !11672
  store %struct.clk_core* %32, %struct.clk_core** %child, align 8, !dbg !11665
  br label %for.cond9, !dbg !11665, !llvm.loop !11678

for.end25:                                        ; preds = %for.cond9
  ret void, !dbg !11680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hlist_unhashed(%struct.hlist_node* %h) #0 !dbg !11681 {
entry:
  %h.addr = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %h, %struct.hlist_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %h.addr, metadata !11686, metadata !DIExpression()), !dbg !11687
  %0 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !11688
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 1, !dbg !11689
  %1 = load %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !11689
  %tobool = icmp ne %struct.hlist_node** %1, null, !dbg !11690
  %lnot = xor i1 %tobool, true, !dbg !11690
  %lnot.ext = zext i1 %lnot to i32, !dbg !11690
  ret i32 %lnot.ext, !dbg !11691
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__hlist_del(%struct.hlist_node* %n) #0 !dbg !11692 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  %next = alloca %struct.hlist_node*, align 8
  %pprev = alloca %struct.hlist_node**, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !11693, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %next, metadata !11695, metadata !DIExpression()), !dbg !11696
  %0 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !11697
  %next1 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 0, !dbg !11698
  %1 = load %struct.hlist_node*, %struct.hlist_node** %next1, align 8, !dbg !11698
  store %struct.hlist_node* %1, %struct.hlist_node** %next, align 8, !dbg !11696
  call void @llvm.dbg.declare(metadata %struct.hlist_node*** %pprev, metadata !11699, metadata !DIExpression()), !dbg !11700
  %2 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !11701
  %pprev2 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %2, i32 0, i32 1, !dbg !11702
  %3 = load %struct.hlist_node**, %struct.hlist_node*** %pprev2, align 8, !dbg !11702
  store %struct.hlist_node** %3, %struct.hlist_node*** %pprev, align 8, !dbg !11700
  br label %do.body, !dbg !11703

do.body:                                          ; preds = %entry
  br label %do.body3, !dbg !11704

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !11706

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !11704

do.body4:                                         ; preds = %do.end
  %4 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !11708
  %5 = load %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !11708
  store volatile %struct.hlist_node* %4, %struct.hlist_node** %5, align 8, !dbg !11708
  br label %do.end5, !dbg !11708

do.end5:                                          ; preds = %do.body4
  br label %do.end6, !dbg !11704

do.end6:                                          ; preds = %do.end5
  %6 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !11710
  %tobool = icmp ne %struct.hlist_node* %6, null, !dbg !11710
  br i1 %tobool, label %if.then, label %if.end, !dbg !11712

if.then:                                          ; preds = %do.end6
  br label %do.body7, !dbg !11713

do.body7:                                         ; preds = %if.then
  br label %do.body8, !dbg !11714

do.body8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !11716

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !11714

do.body10:                                        ; preds = %do.end9
  %7 = load %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !11718
  %8 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !11718
  %pprev11 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %8, i32 0, i32 1, !dbg !11718
  store volatile %struct.hlist_node** %7, %struct.hlist_node*** %pprev11, align 8, !dbg !11718
  br label %do.end12, !dbg !11718

do.end12:                                         ; preds = %do.body10
  br label %do.end13, !dbg !11714

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !11714

if.end:                                           ; preds = %do.end13, %do.end6
  ret void, !dbg !11720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_HLIST_NODE(%struct.hlist_node* %h) #0 !dbg !11721 {
entry:
  %h.addr = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %h, %struct.hlist_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %h.addr, metadata !11722, metadata !DIExpression()), !dbg !11723
  %0 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !11724
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 0, !dbg !11725
  store %struct.hlist_node* null, %struct.hlist_node** %next, align 8, !dbg !11726
  %1 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !11727
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %1, i32 0, i32 1, !dbg !11728
  store %struct.hlist_node** null, %struct.hlist_node*** %pprev, align 8, !dbg !11729
  ret void, !dbg !11730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #0 !dbg !11731 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !11734, metadata !DIExpression()), !dbg !11735
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11736
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #11, !dbg !11737
  ret i1 %call, !dbg !11738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !11739 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !11742, metadata !DIExpression()), !dbg !11743
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !11744, metadata !DIExpression()), !dbg !11745
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11746
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !11747
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #11, !dbg !11748
  ret i1 %call, !dbg !11749
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !11750 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !11753, metadata !DIExpression()), !dbg !11755
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !11759, metadata !DIExpression()), !dbg !11760
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !11761, metadata !DIExpression()), !dbg !11763
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7994, metadata !DIExpression()), !dbg !11764
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8004, metadata !DIExpression()), !dbg !11766
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !11767, metadata !DIExpression()), !dbg !11768
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !11769, metadata !DIExpression()), !dbg !11770
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !11771, metadata !DIExpression()), !dbg !11772
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !11773, metadata !DIExpression()), !dbg !11774
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !11775, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.declare(metadata i32* %old, metadata !11777, metadata !DIExpression()), !dbg !11778
  %0 = load i32, i32* %i.addr, align 4, !dbg !11779
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11780
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !11781
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11782
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !11782
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11783
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !11784
  %conv.i.i = trunc i64 %5 to i32, !dbg !11784
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #14, !dbg !11785
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11786
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11786
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #14, !dbg !11786
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !11787
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11788
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !11763
  %sub.i.i = sub i32 0, %10, !dbg !11763
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !11763
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !11763
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11763
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !11763
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #10, !dbg !11763, !srcloc !11789
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !11763
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !11763
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !11763
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !11763
  store i32 %15, i32* %old, align 4, !dbg !11778
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !11790
  %tobool = icmp ne i32* %16, null, !dbg !11790
  br i1 %tobool, label %if.then, label %if.end, !dbg !11792

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !11793
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !11794
  store i32 %17, i32* %18, align 4, !dbg !11795
  br label %if.end, !dbg !11796

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !11797
  %20 = load i32, i32* %i.addr, align 4, !dbg !11799
  %cmp = icmp eq i32 %19, %20, !dbg !11800
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !11801

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11802, !srcloc !11804
  store i1 true, i1* %retval, align 1, !dbg !11805
  br label %return, !dbg !11805

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !11806
  %cmp3 = icmp slt i32 %21, 0, !dbg !11806
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !11806

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !11806
  %23 = load i32, i32* %i.addr, align 4, !dbg !11806
  %sub = sub i32 %22, %23, !dbg !11806
  %cmp4 = icmp slt i32 %sub, 0, !dbg !11806
  br label %lor.end, !dbg !11806

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !11806
  %lnot5 = xor i1 %lnot, true, !dbg !11806
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !11806
  %conv = sext i32 %lnot.ext to i64, !dbg !11806
  %tobool6 = icmp ne i64 %conv, 0, !dbg !11806
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !11808

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11809
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #11, !dbg !11810
  br label %if.end8, !dbg !11810

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !11811
  br label %return, !dbg !11811

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !11812
  ret i1 %26, !dbg !11812
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devres_alloc_node(void (%struct.device*, i8*)*, i64, i32, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11813 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !11816, metadata !DIExpression()), !dbg !11817
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11818, metadata !DIExpression()), !dbg !11819
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11820, metadata !DIExpression()), !dbg !11821
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !11822
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11824
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11825
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !11826
  br i1 %call, label %if.end, label %if.then, !dbg !11827

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !11828

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !11829
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11830
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !11831
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !11832
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11833
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !11834
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !11835
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !11836
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11837
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !11838
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !11839
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !11840
  br label %do.body, !dbg !11841

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !11842

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !11844

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !11842

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !11846
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11846
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !11846
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !11846
  br label %do.end7, !dbg !11846

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !11842

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !11848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11849 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !11852, metadata !DIExpression()), !dbg !11853
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11854, metadata !DIExpression()), !dbg !11855
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11856, metadata !DIExpression()), !dbg !11857
  ret i1 true, !dbg !11858
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !11859 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11860, metadata !DIExpression()), !dbg !11861
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11862
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !11864
  br i1 %call, label %if.end, label %if.then, !dbg !11865

if.then:                                          ; preds = %entry
  br label %return, !dbg !11866

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11867
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11868
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !11868
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11869
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11870
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11870
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !11871
  br label %return, !dbg !11872

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !11873 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11876, metadata !DIExpression()), !dbg !11877
  ret i1 true, !dbg !11878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11879 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11880, metadata !DIExpression()), !dbg !11881
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11882, metadata !DIExpression()), !dbg !11883
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11884
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11885
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11886
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !11887
  br label %do.body, !dbg !11888

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !11889

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !11891

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !11889

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11893
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11893
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11893
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !11893
  br label %do.end5, !dbg !11893

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !11889

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !11895
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.clk_hw* @__of_clk_get_hw_from_provider(%struct.of_clk_provider* %provider, %struct.of_phandle_args* %clkspec) #0 !dbg !11896 {
entry:
  %retval = alloca %struct.clk_hw*, align 8
  %provider.addr = alloca %struct.of_clk_provider*, align 8
  %clkspec.addr = alloca %struct.of_phandle_args*, align 8
  %clk = alloca %struct.clk*, align 8
  store %struct.of_clk_provider* %provider, %struct.of_clk_provider** %provider.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_clk_provider** %provider.addr, metadata !11899, metadata !DIExpression()), !dbg !11900
  store %struct.of_phandle_args* %clkspec, %struct.of_phandle_args** %clkspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %clkspec.addr, metadata !11901, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.declare(metadata %struct.clk** %clk, metadata !11903, metadata !DIExpression()), !dbg !11904
  %0 = load %struct.of_clk_provider*, %struct.of_clk_provider** %provider.addr, align 8, !dbg !11905
  %get_hw = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %0, i32 0, i32 3, !dbg !11907
  %1 = load %struct.clk_hw* (%struct.of_phandle_args*, i8*)*, %struct.clk_hw* (%struct.of_phandle_args*, i8*)** %get_hw, align 8, !dbg !11907
  %tobool = icmp ne %struct.clk_hw* (%struct.of_phandle_args*, i8*)* %1, null, !dbg !11905
  br i1 %tobool, label %if.then, label %if.end, !dbg !11908

if.then:                                          ; preds = %entry
  %2 = load %struct.of_clk_provider*, %struct.of_clk_provider** %provider.addr, align 8, !dbg !11909
  %get_hw1 = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %2, i32 0, i32 3, !dbg !11910
  %3 = load %struct.clk_hw* (%struct.of_phandle_args*, i8*)*, %struct.clk_hw* (%struct.of_phandle_args*, i8*)** %get_hw1, align 8, !dbg !11910
  %4 = load %struct.of_phandle_args*, %struct.of_phandle_args** %clkspec.addr, align 8, !dbg !11911
  %5 = load %struct.of_clk_provider*, %struct.of_clk_provider** %provider.addr, align 8, !dbg !11912
  %data = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %5, i32 0, i32 4, !dbg !11913
  %6 = load i8*, i8** %data, align 8, !dbg !11913
  %call = call %struct.clk_hw* %3(%struct.of_phandle_args* %4, i8* %6) #11, !dbg !11909
  store %struct.clk_hw* %call, %struct.clk_hw** %retval, align 8, !dbg !11914
  br label %return, !dbg !11914

if.end:                                           ; preds = %entry
  %7 = load %struct.of_clk_provider*, %struct.of_clk_provider** %provider.addr, align 8, !dbg !11915
  %get = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %7, i32 0, i32 2, !dbg !11916
  %8 = load %struct.clk* (%struct.of_phandle_args*, i8*)*, %struct.clk* (%struct.of_phandle_args*, i8*)** %get, align 8, !dbg !11916
  %9 = load %struct.of_phandle_args*, %struct.of_phandle_args** %clkspec.addr, align 8, !dbg !11917
  %10 = load %struct.of_clk_provider*, %struct.of_clk_provider** %provider.addr, align 8, !dbg !11918
  %data2 = getelementptr inbounds %struct.of_clk_provider, %struct.of_clk_provider* %10, i32 0, i32 4, !dbg !11919
  %11 = load i8*, i8** %data2, align 8, !dbg !11919
  %call3 = call %struct.clk* %8(%struct.of_phandle_args* %9, i8* %11) #11, !dbg !11915
  store %struct.clk* %call3, %struct.clk** %clk, align 8, !dbg !11920
  %12 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !11921
  %13 = bitcast %struct.clk* %12 to i8*, !dbg !11921
  %call4 = call zeroext i1 @IS_ERR(i8* %13) #11, !dbg !11923
  br i1 %call4, label %if.then5, label %if.end7, !dbg !11924

if.then5:                                         ; preds = %if.end
  %14 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !11925
  %15 = bitcast %struct.clk* %14 to i8*, !dbg !11925
  %call6 = call i8* @ERR_CAST(i8* %15) #11, !dbg !11926
  %16 = bitcast i8* %call6 to %struct.clk_hw*, !dbg !11926
  store %struct.clk_hw* %16, %struct.clk_hw** %retval, align 8, !dbg !11927
  br label %return, !dbg !11927

if.end7:                                          ; preds = %if.end
  %17 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !11928
  %call8 = call %struct.clk_hw* @__clk_get_hw(%struct.clk* %17) #11, !dbg !11929
  store %struct.clk_hw* %call8, %struct.clk_hw** %retval, align 8, !dbg !11930
  br label %return, !dbg !11930

return:                                           ; preds = %if.end7, %if.then5, %if.then
  %18 = load %struct.clk_hw*, %struct.clk_hw** %retval, align 8, !dbg !11931
  ret %struct.clk_hw* %18, !dbg !11931
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_match_string(%struct.device_node*, i8*, i8*) #5

; Function Attrs: noredzone
declare dso_local i8* @of_get_property(%struct.device_node*, i8*, i32*) #5

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_string_helper(%struct.device_node*, i8*, i8**, i64, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !11932 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11938, metadata !DIExpression()), !dbg !11940
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11942, metadata !DIExpression()), !dbg !11943
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11494, metadata !DIExpression()), !dbg !11944
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11498, metadata !DIExpression()), !dbg !11946
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11947, metadata !DIExpression()), !dbg !11948
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11949, metadata !DIExpression()), !dbg !11950
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11951
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11952
  %div = sdiv i64 %1, 64, !dbg !11952
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11953
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11951
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11954
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11955
  %conv.i = trunc i64 %4 to i32, !dbg !11955
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !11956
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11957
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11957
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !11957
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11958
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11959
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !11960
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !11962
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !11963

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !11964
  %12 = bitcast i64* %11 to i8*, !dbg !11964
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11964
  %shr.i = ashr i64 %13, 3, !dbg !11964
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !11964
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !11966
  %and.i = and i64 %14, 7, !dbg !11966
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !11966
  %shl.i = shl i32 1, %sh_prom.i, !dbg !11966
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !11967, !srcloc !11968
  br label %arch_set_bit.exit, !dbg !11969

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !11970
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !11972
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !11973, !srcloc !11974
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !11975
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { nounwind readnone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!2353}
!llvm.module.flags = !{!2354, !2355, !2356, !2357}
!llvm.ident = !{!2358}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "clk_root_list", scope: !2, file: !3, line: 36, type: !702, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !70, globals: !2304, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/clk/clk.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !17, !23, !29, !36, !44, !50, !55, !63}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !12, line: 16, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !18, line: 26, baseType: !7, size: 32, elements: !19)
!18 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!19 = !{!20, !21, !22}
!20 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !24, line: 44, baseType: !7, size: 32, elements: !25)
!24 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!25 = !{!26, !27, !28}
!26 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !30, line: 343, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34, !35}
!32 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !37, line: 524, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !37, line: 502, baseType: !7, size: 32, elements: !45)
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !51, line: 10, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !56, line: 119, baseType: !7, size: 32, elements: !57)
!56 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!57 = !{!58, !59, !60, !61, !62}
!58 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!59 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!61 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!62 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !64, line: 305, baseType: !7, size: 32, elements: !65)
!64 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!65 = !{!66, !67, !68, !69}
!66 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!67 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!70 = !{!71, !72, !1469, !2214, !2250, !2272, !199, !2281, !753, !2284, !2286, !427, !214, !95, !2287, !2289, !2291, !2292, !2294, !2295, !2296, !2298, !2299, !2301, !2303}
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!73 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_core", file: !3, line: 56, size: 1728, elements: !74)
!74 = !{!75, !79, !2177, !2178, !2179, !2180, !2181, !2182, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !73, file: !3, line: 57, baseType: !76, size: 64)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !78)
!78 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !73, file: !3, line: 58, baseType: !80, size: 64, offset: 64)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !82)
!82 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_ops", file: !83, line: 220, size: 1600, elements: !84)
!83 = !DIFile(filename: "./include/linux/clk-provider.h", directory: "/home/lizy2001/genbc/linux")
!84 = !{!85, !2104, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2120, !2125, !2137, !2141, !2145, !2149, !2153, !2154, !2155, !2159, !2168, !2169, !2170, !2171}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !82, file: !83, line: 221, baseType: !86, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = !DISubroutineType(types: !88)
!88 = !{!89, !90}
!89 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!91 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_hw", file: !83, line: 312, size: 192, elements: !92)
!92 = !{!93, !94, !2079}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !91, file: !83, line: 313, baseType: !72, size: 64)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "clk", scope: !91, file: !83, line: 314, baseType: !95, size: 64, offset: 64)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!96 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk", file: !3, line: 97, size: 576, elements: !97)
!97 = !{!98, !99, !2073, !2074, !2075, !2076, !2077, !2078}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !96, file: !3, line: 98, baseType: !72, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !96, file: !3, line: 99, baseType: !100, size: 64, offset: 64)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !30, line: 461, size: 5568, elements: !102)
!102 = !{!103, !1597, !1598, !1601, !1602, !1653, !1750, !1751, !1752, !1753, !1754, !1763, !1868, !1881, !1884, !1885, !1889, !1891, !1892, !1893, !1897, !1903, !1904, !1907, !2022, !2023, !2026, !2027, !2028, !2029, !2061, !2062, !2063, !2066, !2069, !2070, !2071, !2072}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !101, file: !30, line: 462, baseType: !104, size: 512)
!104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !105, line: 64, size: 512, elements: !106)
!105 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !115, !117, !177, !1433, !1587, !1592, !1593, !1594, !1595, !1596}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !104, file: !105, line: 65, baseType: !76, size: 64)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !104, file: !105, line: 66, baseType: !109, size: 128, offset: 64)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !110, line: 178, size: 128, elements: !111)
!110 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!111 = !{!112, !114}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !109, file: !110, line: 179, baseType: !113, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !109, file: !110, line: 179, baseType: !113, size: 64, offset: 64)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !104, file: !105, line: 67, baseType: !116, size: 64, offset: 192)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !104, file: !105, line: 68, baseType: !118, size: 64, offset: 256)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !105, line: 192, size: 704, elements: !120)
!120 = !{!121, !122, !138, !139}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !119, file: !105, line: 193, baseType: !109, size: 128)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !119, file: !105, line: 194, baseType: !123, offset: 128)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !124, line: 83, baseType: !125)
!124 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !124, line: 71, elements: !126)
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 72, baseType: !128)
!128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 72, elements: !129)
!129 = !{!130}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !128, file: !124, line: 73, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !124, line: 20, elements: !132)
!132 = !{!133}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !131, file: !124, line: 21, baseType: !134)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !135, line: 25, baseType: !136)
!135 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !135, line: 25, elements: !137)
!137 = !{}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !119, file: !105, line: 195, baseType: !104, size: 512, offset: 128)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !119, file: !105, line: 196, baseType: !140, size: 64, offset: 640)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !105, line: 156, size: 192, elements: !143)
!143 = !{!144, !149, !154}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !142, file: !105, line: 157, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DISubroutineType(types: !148)
!148 = !{!89, !118, !116}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !142, file: !105, line: 158, baseType: !150, size: 64, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = !DISubroutineType(types: !153)
!153 = !{!76, !118, !116}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !142, file: !105, line: 159, baseType: !155, size: 64, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = !DISubroutineType(types: !158)
!158 = !{!89, !118, !116, !159}
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !105, line: 148, size: 20736, elements: !161)
!161 = !{!162, !167, !171, !172, !176}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !160, file: !105, line: 149, baseType: !163, size: 192)
!163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 192, elements: !165)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!165 = !{!166}
!166 = !DISubrange(count: 3)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !160, file: !105, line: 150, baseType: !168, size: 4096, offset: 192)
!168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 4096, elements: !169)
!169 = !{!170}
!170 = !DISubrange(count: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !160, file: !105, line: 151, baseType: !89, size: 32, offset: 4288)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !160, file: !105, line: 152, baseType: !173, size: 16384, offset: 4320)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 16384, elements: !174)
!174 = !{!175}
!175 = !DISubrange(count: 2048)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !160, file: !105, line: 153, baseType: !89, size: 32, offset: 20704)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !104, file: !105, line: 69, baseType: !178, size: 64, offset: 320)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !105, line: 138, size: 448, elements: !180)
!180 = !{!181, !185, !215, !217, !1378, !1411, !1415}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !179, file: !105, line: 139, baseType: !182, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DISubroutineType(types: !184)
!184 = !{null, !116}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !179, file: !105, line: 140, baseType: !186, size: 64, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !188)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !189, line: 230, size: 128, elements: !190)
!189 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!190 = !{!191, !207}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !188, file: !189, line: 231, baseType: !192, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!193 = !DISubroutineType(types: !194)
!194 = !{!195, !116, !200, !164}
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !110, line: 60, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !197, line: 73, baseType: !198)
!197 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !197, line: 15, baseType: !199)
!199 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !189, line: 30, size: 128, elements: !202)
!202 = !{!203, !204}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !201, file: !189, line: 31, baseType: !76, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !201, file: !189, line: 32, baseType: !205, size: 16, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !110, line: 19, baseType: !206)
!206 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !188, file: !189, line: 232, baseType: !208, size: 64, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!209 = !DISubroutineType(types: !210)
!210 = !{!195, !116, !200, !76, !211}
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !110, line: 55, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !197, line: 72, baseType: !213)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !197, line: 16, baseType: !214)
!214 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !179, file: !105, line: 141, baseType: !216, size: 64, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !179, file: !105, line: 142, baseType: !218, size: 64, offset: 192)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !189, line: 84, size: 320, elements: !222)
!222 = !{!223, !224, !228, !1375, !1376}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !221, file: !189, line: 85, baseType: !76, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !221, file: !189, line: 86, baseType: !225, size: 64, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DISubroutineType(types: !227)
!227 = !{!205, !116, !200, !89}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !221, file: !189, line: 88, baseType: !229, size: 64, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = !DISubroutineType(types: !231)
!231 = !{!205, !116, !232, !89}
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !189, line: 168, size: 448, elements: !234)
!234 = !{!235, !236, !237, !238, !248, !249}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !233, file: !189, line: 169, baseType: !201, size: 128)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !233, file: !189, line: 170, baseType: !211, size: 64, offset: 128)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !233, file: !189, line: 171, baseType: !71, size: 64, offset: 192)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !233, file: !189, line: 172, baseType: !239, size: 64, offset: 256)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!195, !242, !116, !232, !164, !245, !211}
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !244, line: 526, flags: DIFlagFwdDecl)
!244 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !110, line: 46, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !197, line: 88, baseType: !247)
!247 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !233, file: !189, line: 174, baseType: !239, size: 64, offset: 320)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !233, file: !189, line: 176, baseType: !250, size: 64, offset: 384)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DISubroutineType(types: !252)
!252 = !{!89, !242, !116, !232, !253}
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !255, line: 305, size: 1472, elements: !256)
!255 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!256 = !{!257, !258, !259, !260, !261, !269, !270, !1349, !1355, !1356, !1361, !1362, !1365, !1369, !1370, !1371, !1372, !1373}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !254, file: !255, line: 308, baseType: !214, size: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !254, file: !255, line: 309, baseType: !214, size: 64, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !254, file: !255, line: 313, baseType: !253, size: 64, offset: 128)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !254, file: !255, line: 313, baseType: !253, size: 64, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !254, file: !255, line: 315, baseType: !262, size: 192, align: 64, offset: 256)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !263, line: 24, size: 192, align: 64, elements: !264)
!263 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!264 = !{!265, !266, !268}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !262, file: !263, line: 25, baseType: !214, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !262, file: !263, line: 26, baseType: !267, size: 64, offset: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !262, file: !263, line: 27, baseType: !267, size: 64, offset: 128)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !254, file: !255, line: 323, baseType: !214, size: 64, offset: 448)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !254, file: !255, line: 327, baseType: !271, size: 64, offset: 512)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !255, line: 388, size: 7296, elements: !273)
!273 = !{!274, !1345}
!274 = !DIDerivedType(tag: DW_TAG_member, scope: !272, file: !255, line: 389, baseType: !275, size: 7296)
!275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !272, file: !255, line: 389, size: 7296, elements: !276)
!276 = !{!277, !278, !282, !288, !292, !293, !294, !295, !296, !304, !309, !310, !311, !312, !321, !322, !323, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !358, !366, !369, !417, !418, !1316, !1317, !1320, !1323, !1324, !1327, !1328, !1329, !1332, !1344}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !275, file: !255, line: 390, baseType: !253, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !275, file: !255, line: 391, baseType: !279, size: 64, offset: 64)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !263, line: 31, size: 64, elements: !280)
!280 = !{!281}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !279, file: !263, line: 32, baseType: !267, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !275, file: !255, line: 392, baseType: !283, size: 64, offset: 128)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !284, line: 23, baseType: !285)
!284 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !286, line: 31, baseType: !287)
!286 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!287 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !275, file: !255, line: 394, baseType: !289, size: 64, offset: 192)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DISubroutineType(types: !291)
!291 = !{!214, !242, !214, !214, !214, !214}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !275, file: !255, line: 398, baseType: !214, size: 64, offset: 256)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !275, file: !255, line: 399, baseType: !214, size: 64, offset: 320)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !275, file: !255, line: 405, baseType: !214, size: 64, offset: 384)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !275, file: !255, line: 406, baseType: !214, size: 64, offset: 448)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !275, file: !255, line: 407, baseType: !297, size: 64, offset: 512)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !244, line: 286, baseType: !299)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !244, line: 286, size: 64, elements: !300)
!300 = !{!301}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !299, file: !244, line: 286, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !303, line: 18, baseType: !214)
!303 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!304 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !275, file: !255, line: 416, baseType: !305, size: 32, offset: 576)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !110, line: 168, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 166, size: 32, elements: !307)
!307 = !{!308}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !306, file: !110, line: 167, baseType: !89, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !275, file: !255, line: 428, baseType: !305, size: 32, offset: 608)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !275, file: !255, line: 437, baseType: !305, size: 32, offset: 640)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !275, file: !255, line: 447, baseType: !305, size: 32, offset: 672)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !275, file: !255, line: 450, baseType: !313, size: 64, offset: 704)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !314, line: 13, baseType: !315)
!314 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !110, line: 175, baseType: !316)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 173, size: 64, elements: !317)
!317 = !{!318}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !316, file: !110, line: 174, baseType: !319, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !284, line: 22, baseType: !320)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !286, line: 30, baseType: !247)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !275, file: !255, line: 452, baseType: !89, size: 32, offset: 768)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !275, file: !255, line: 454, baseType: !123, offset: 800)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !275, file: !255, line: 457, baseType: !324, size: 256, offset: 832)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !325, line: 35, size: 256, elements: !326)
!325 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!326 = !{!327, !328, !329, !331}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !324, file: !325, line: 36, baseType: !313, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !324, file: !325, line: 42, baseType: !313, size: 64, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !324, file: !325, line: 46, baseType: !330, offset: 128)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !124, line: 29, baseType: !131)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !324, file: !325, line: 47, baseType: !109, size: 128, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !275, file: !255, line: 459, baseType: !109, size: 128, offset: 1088)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !275, file: !255, line: 466, baseType: !214, size: 64, offset: 1216)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !275, file: !255, line: 467, baseType: !214, size: 64, offset: 1280)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !275, file: !255, line: 469, baseType: !214, size: 64, offset: 1344)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !275, file: !255, line: 470, baseType: !214, size: 64, offset: 1408)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !275, file: !255, line: 471, baseType: !315, size: 64, offset: 1472)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !275, file: !255, line: 472, baseType: !214, size: 64, offset: 1536)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !275, file: !255, line: 473, baseType: !214, size: 64, offset: 1600)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !275, file: !255, line: 474, baseType: !214, size: 64, offset: 1664)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !275, file: !255, line: 475, baseType: !214, size: 64, offset: 1728)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !275, file: !255, line: 477, baseType: !123, offset: 1792)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !275, file: !255, line: 478, baseType: !214, size: 64, offset: 1792)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !275, file: !255, line: 478, baseType: !214, size: 64, offset: 1856)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !275, file: !255, line: 478, baseType: !214, size: 64, offset: 1920)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !275, file: !255, line: 478, baseType: !214, size: 64, offset: 1984)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !275, file: !255, line: 479, baseType: !214, size: 64, offset: 2048)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !275, file: !255, line: 479, baseType: !214, size: 64, offset: 2112)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !275, file: !255, line: 479, baseType: !214, size: 64, offset: 2176)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !275, file: !255, line: 480, baseType: !214, size: 64, offset: 2240)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !275, file: !255, line: 480, baseType: !214, size: 64, offset: 2304)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !275, file: !255, line: 480, baseType: !214, size: 64, offset: 2368)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !275, file: !255, line: 480, baseType: !214, size: 64, offset: 2432)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !275, file: !255, line: 482, baseType: !355, size: 2816, offset: 2496)
!355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 2816, elements: !356)
!356 = !{!357}
!357 = !DISubrange(count: 44)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !275, file: !255, line: 488, baseType: !359, size: 256, offset: 5312)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !360, line: 60, size: 256, elements: !361)
!360 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!361 = !{!362}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !359, file: !360, line: 61, baseType: !363, size: 256)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 256, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 4)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !275, file: !255, line: 490, baseType: !367, size: 64, offset: 5568)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !255, line: 490, flags: DIFlagFwdDecl)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !275, file: !255, line: 493, baseType: !370, size: 896, offset: 5632)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !371, line: 53, baseType: !372)
!371 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !371, line: 13, size: 896, elements: !373)
!373 = !{!374, !375, !376, !377, !380, !381, !388, !389, !409, !410, !413}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !372, file: !371, line: 18, baseType: !283, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !372, file: !371, line: 28, baseType: !315, size: 64, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !372, file: !371, line: 31, baseType: !324, size: 256, offset: 128)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !372, file: !371, line: 32, baseType: !378, size: 64, offset: 384)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !371, line: 32, flags: DIFlagFwdDecl)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !372, file: !371, line: 37, baseType: !206, size: 16, offset: 448)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !372, file: !371, line: 40, baseType: !382, size: 192, offset: 512)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !383, line: 53, size: 192, elements: !384)
!383 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!384 = !{!385, !386, !387}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !382, file: !383, line: 54, baseType: !313, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !382, file: !383, line: 55, baseType: !123, offset: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !382, file: !383, line: 59, baseType: !109, size: 128, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !372, file: !371, line: 41, baseType: !71, size: 64, offset: 704)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !372, file: !371, line: 42, baseType: !390, size: 64, offset: 768)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !393, line: 13, size: 896, elements: !394)
!393 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!394 = !{!395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !392, file: !393, line: 14, baseType: !71, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !392, file: !393, line: 15, baseType: !214, size: 64, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !392, file: !393, line: 17, baseType: !214, size: 64, offset: 128)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !392, file: !393, line: 17, baseType: !214, size: 64, offset: 192)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !392, file: !393, line: 19, baseType: !199, size: 64, offset: 256)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !392, file: !393, line: 21, baseType: !199, size: 64, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !392, file: !393, line: 22, baseType: !199, size: 64, offset: 384)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !392, file: !393, line: 23, baseType: !199, size: 64, offset: 448)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !392, file: !393, line: 24, baseType: !199, size: 64, offset: 512)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !392, file: !393, line: 25, baseType: !199, size: 64, offset: 576)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !392, file: !393, line: 26, baseType: !199, size: 64, offset: 640)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !392, file: !393, line: 27, baseType: !199, size: 64, offset: 704)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !392, file: !393, line: 28, baseType: !199, size: 64, offset: 768)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !392, file: !393, line: 29, baseType: !199, size: 64, offset: 832)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !372, file: !371, line: 44, baseType: !305, size: 32, offset: 832)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !372, file: !371, line: 50, baseType: !411, size: 16, offset: 864)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !284, line: 19, baseType: !412)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !286, line: 24, baseType: !206)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !372, file: !371, line: 51, baseType: !414, size: 16, offset: 880)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !284, line: 18, baseType: !415)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !286, line: 23, baseType: !416)
!416 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !275, file: !255, line: 495, baseType: !214, size: 64, offset: 6528)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !275, file: !255, line: 497, baseType: !419, size: 64, offset: 6592)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !255, line: 381, size: 384, elements: !421)
!421 = !{!422, !423, !1315}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !420, file: !255, line: 382, baseType: !305, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !420, file: !255, line: 383, baseType: !424, size: 128, offset: 64)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !255, line: 376, size: 128, elements: !425)
!425 = !{!426, !1313}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !424, file: !255, line: 377, baseType: !427, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !429, line: 640, size: 48640, elements: !430)
!429 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!430 = !{!431, !439, !441, !442, !447, !448, !449, !450, !451, !452, !453, !454, !458, !476, !487, !582, !583, !584, !595, !596, !598, !599, !600, !601, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !680, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !736, !738, !739, !740, !752, !754, !755, !756, !757, !758, !764, !765, !766, !767, !768, !769, !770, !782, !787, !792, !793, !794, !797, !801, !804, !807, !810, !813, !817, !820, !823, !829, !830, !831, !837, !838, !839, !840, !841, !850, !851, !852, !853, !854, !859, !860, !861, !864, !865, !868, !871, !874, !877, !880, !883, !884, !964, !967, !970, !971, !974, !975, !976, !982, !983, !984, !997, !998, !999, !1011, !1016, !1019, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !428, file: !429, line: 646, baseType: !432, size: 128)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !433, line: 56, size: 128, elements: !434)
!433 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!434 = !{!435, !436}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !432, file: !433, line: 57, baseType: !214, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !432, file: !433, line: 58, baseType: !437, size: 32, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !284, line: 21, baseType: !438)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !286, line: 27, baseType: !7)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !428, file: !429, line: 649, baseType: !440, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !199)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !428, file: !429, line: 657, baseType: !71, size: 64, offset: 192)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !428, file: !429, line: 658, baseType: !443, size: 32, offset: 256)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !56, line: 113, baseType: !444)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !56, line: 111, size: 32, elements: !445)
!445 = !{!446}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !444, file: !56, line: 112, baseType: !305, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !428, file: !429, line: 660, baseType: !7, size: 32, offset: 288)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !428, file: !429, line: 661, baseType: !7, size: 32, offset: 320)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !428, file: !429, line: 684, baseType: !89, size: 32, offset: 352)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !428, file: !429, line: 686, baseType: !89, size: 32, offset: 384)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !428, file: !429, line: 687, baseType: !89, size: 32, offset: 416)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !428, file: !429, line: 688, baseType: !89, size: 32, offset: 448)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !428, file: !429, line: 689, baseType: !7, size: 32, offset: 480)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !428, file: !429, line: 691, baseType: !455, size: 64, offset: 512)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !457)
!457 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !429, line: 691, flags: DIFlagFwdDecl)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !428, file: !429, line: 692, baseType: !459, size: 832, offset: 576)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !429, line: 451, size: 832, elements: !460)
!460 = !{!461, !466, !467, !468, !469, !470, !471, !472, !473, !474}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !459, file: !429, line: 453, baseType: !462, size: 128)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !429, line: 325, size: 128, elements: !463)
!463 = !{!464, !465}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !462, file: !429, line: 326, baseType: !214, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !462, file: !429, line: 327, baseType: !437, size: 32, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !459, file: !429, line: 454, baseType: !262, size: 192, align: 64, offset: 128)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !459, file: !429, line: 455, baseType: !109, size: 128, offset: 320)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !459, file: !429, line: 456, baseType: !7, size: 32, offset: 448)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !459, file: !429, line: 458, baseType: !283, size: 64, offset: 512)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !459, file: !429, line: 459, baseType: !283, size: 64, offset: 576)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !459, file: !429, line: 460, baseType: !283, size: 64, offset: 640)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !459, file: !429, line: 461, baseType: !283, size: 64, offset: 704)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !459, file: !429, line: 463, baseType: !283, size: 64, offset: 768)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !459, file: !429, line: 465, baseType: !475, offset: 832)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !429, line: 415, elements: !137)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !428, file: !429, line: 693, baseType: !477, size: 384, offset: 1408)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !429, line: 489, size: 384, elements: !478)
!478 = !{!479, !480, !481, !482, !483, !484, !485}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !477, file: !429, line: 490, baseType: !109, size: 128)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !477, file: !429, line: 491, baseType: !214, size: 64, offset: 128)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !477, file: !429, line: 492, baseType: !214, size: 64, offset: 192)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !477, file: !429, line: 493, baseType: !7, size: 32, offset: 256)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !477, file: !429, line: 494, baseType: !206, size: 16, offset: 288)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !477, file: !429, line: 495, baseType: !206, size: 16, offset: 304)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !477, file: !429, line: 497, baseType: !486, size: 64, offset: 320)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !428, file: !429, line: 697, baseType: !488, size: 1792, offset: 1792)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !429, line: 507, size: 1792, elements: !489)
!489 = !{!490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !579, !580}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !488, file: !429, line: 508, baseType: !262, size: 192, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !488, file: !429, line: 515, baseType: !283, size: 64, offset: 192)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !488, file: !429, line: 516, baseType: !283, size: 64, offset: 256)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !488, file: !429, line: 517, baseType: !283, size: 64, offset: 320)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !488, file: !429, line: 518, baseType: !283, size: 64, offset: 384)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !488, file: !429, line: 519, baseType: !283, size: 64, offset: 448)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !488, file: !429, line: 526, baseType: !319, size: 64, offset: 512)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !488, file: !429, line: 527, baseType: !283, size: 64, offset: 576)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !488, file: !429, line: 528, baseType: !7, size: 32, offset: 640)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !488, file: !429, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !488, file: !429, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !488, file: !429, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !488, file: !429, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !488, file: !429, line: 563, baseType: !504, size: 512, offset: 704)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !505)
!505 = !{!506, !514, !515, !520, !572, !576, !577, !578}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !504, file: !6, line: 119, baseType: !507, size: 256)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !508, line: 9, size: 256, elements: !509)
!508 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!509 = !{!510, !511}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !507, file: !508, line: 10, baseType: !262, size: 192, align: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !507, file: !508, line: 11, baseType: !512, size: 64, offset: 192)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !513, line: 29, baseType: !319)
!513 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!514 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !504, file: !6, line: 120, baseType: !512, size: 64, offset: 256)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !504, file: !6, line: 121, baseType: !516, size: 64, offset: 320)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DISubroutineType(types: !518)
!518 = !{!5, !519}
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !504, file: !6, line: 122, baseType: !521, size: 64, offset: 384)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !523)
!523 = !{!524, !544, !545, !548, !558, !559, !567, !571}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !522, file: !6, line: 160, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !527)
!527 = !{!528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !526, file: !6, line: 215, baseType: !330)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !526, file: !6, line: 216, baseType: !7, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !526, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !526, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !526, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !526, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !526, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !526, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !526, file: !6, line: 233, baseType: !512, size: 64, offset: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !526, file: !6, line: 234, baseType: !519, size: 64, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !526, file: !6, line: 235, baseType: !512, size: 64, offset: 256)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !526, file: !6, line: 236, baseType: !519, size: 64, offset: 320)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !526, file: !6, line: 237, baseType: !541, size: 4096, offset: 512)
!541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 4096, elements: !542)
!542 = !{!543}
!543 = !DISubrange(count: 8)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !522, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !522, file: !6, line: 162, baseType: !546, size: 32, offset: 96)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !110, line: 27, baseType: !547)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !197, line: 96, baseType: !89)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !522, file: !6, line: 163, baseType: !549, size: 32, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !550, line: 276, baseType: !551)
!550 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !550, line: 276, size: 32, elements: !552)
!552 = !{!553}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !551, file: !550, line: 276, baseType: !554, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !550, line: 70, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !550, line: 65, size: 32, elements: !556)
!556 = !{!557}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !555, file: !550, line: 66, baseType: !7, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !522, file: !6, line: 164, baseType: !519, size: 64, offset: 192)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !522, file: !6, line: 165, baseType: !560, size: 128, offset: 256)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !508, line: 14, size: 128, elements: !561)
!561 = !{!562}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !560, file: !508, line: 15, baseType: !563, size: 128)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !263, line: 125, size: 128, elements: !564)
!564 = !{!565, !566}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !563, file: !263, line: 126, baseType: !279, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !563, file: !263, line: 127, baseType: !267, size: 64, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !522, file: !6, line: 166, baseType: !568, size: 64, offset: 384)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DISubroutineType(types: !570)
!570 = !{!512}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !522, file: !6, line: 167, baseType: !512, size: 64, offset: 448)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !504, file: !6, line: 123, baseType: !573, size: 8, offset: 448)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !284, line: 17, baseType: !574)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !286, line: 21, baseType: !575)
!575 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !504, file: !6, line: 124, baseType: !573, size: 8, offset: 456)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !504, file: !6, line: 125, baseType: !573, size: 8, offset: 464)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !504, file: !6, line: 126, baseType: !573, size: 8, offset: 472)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !488, file: !429, line: 572, baseType: !504, size: 512, offset: 1216)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !488, file: !429, line: 580, baseType: !581, size: 64, offset: 1728)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !428, file: !429, line: 721, baseType: !7, size: 32, offset: 3584)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !428, file: !429, line: 722, baseType: !89, size: 32, offset: 3616)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !428, file: !429, line: 723, baseType: !585, size: 64, offset: 3648)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !588, line: 17, baseType: !589)
!588 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !588, line: 17, size: 64, elements: !590)
!590 = !{!591}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !589, file: !588, line: 17, baseType: !592, size: 64)
!592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 64, elements: !593)
!593 = !{!594}
!594 = !DISubrange(count: 1)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !428, file: !429, line: 724, baseType: !587, size: 64, offset: 3712)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !428, file: !429, line: 749, baseType: !597, offset: 3776)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !429, line: 290, elements: !137)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !428, file: !429, line: 751, baseType: !109, size: 128, offset: 3776)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !428, file: !429, line: 757, baseType: !271, size: 64, offset: 3904)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !428, file: !429, line: 758, baseType: !271, size: 64, offset: 3968)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !428, file: !429, line: 761, baseType: !602, size: 320, offset: 4032)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !360, line: 34, size: 320, elements: !603)
!603 = !{!604, !605}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !602, file: !360, line: 35, baseType: !283, size: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !602, file: !360, line: 36, baseType: !606, size: 256, offset: 64)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !253, size: 256, elements: !364)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !428, file: !429, line: 766, baseType: !89, size: 32, offset: 4352)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !428, file: !429, line: 767, baseType: !89, size: 32, offset: 4384)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !428, file: !429, line: 768, baseType: !89, size: 32, offset: 4416)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !428, file: !429, line: 770, baseType: !89, size: 32, offset: 4448)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !428, file: !429, line: 772, baseType: !214, size: 64, offset: 4480)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !428, file: !429, line: 775, baseType: !7, size: 32, offset: 4544)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !428, file: !429, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !428, file: !429, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !428, file: !429, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !428, file: !429, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !428, file: !429, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !428, file: !429, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !428, file: !429, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !428, file: !429, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !428, file: !429, line: 831, baseType: !214, size: 64, offset: 4672)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !428, file: !429, line: 833, baseType: !623, size: 384, offset: 4736)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !12, line: 25, size: 384, elements: !624)
!624 = !{!625, !630}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !623, file: !12, line: 26, baseType: !626, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DISubroutineType(types: !628)
!628 = !{!199, !629}
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, scope: !623, file: !12, line: 27, baseType: !631, size: 320, offset: 64)
!631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !623, file: !12, line: 27, size: 320, elements: !632)
!632 = !{!633, !643, !670}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !631, file: !12, line: 36, baseType: !634, size: 320)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !631, file: !12, line: 29, size: 320, elements: !635)
!635 = !{!636, !638, !639, !640, !641, !642}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !634, file: !12, line: 30, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !634, file: !12, line: 31, baseType: !437, size: 32, offset: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !634, file: !12, line: 32, baseType: !437, size: 32, offset: 96)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !634, file: !12, line: 33, baseType: !437, size: 32, offset: 128)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !634, file: !12, line: 34, baseType: !283, size: 64, offset: 192)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !634, file: !12, line: 35, baseType: !637, size: 64, offset: 256)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !631, file: !12, line: 46, baseType: !644, size: 192)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !631, file: !12, line: 38, size: 192, elements: !645)
!645 = !{!646, !647, !648, !669}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !644, file: !12, line: 39, baseType: !546, size: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !644, file: !12, line: 40, baseType: !11, size: 32, offset: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, scope: !644, file: !12, line: 41, baseType: !649, size: 64, offset: 64)
!649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !644, file: !12, line: 41, size: 64, elements: !650)
!650 = !{!651, !659}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !649, file: !12, line: 42, baseType: !652, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !654, line: 7, size: 128, elements: !655)
!654 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!655 = !{!656, !658}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !653, file: !654, line: 8, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !197, line: 93, baseType: !247)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !653, file: !654, line: 9, baseType: !247, size: 64, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !649, file: !12, line: 43, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !662, line: 7, size: 64, elements: !663)
!662 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!663 = !{!664, !668}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !661, file: !662, line: 8, baseType: !665, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !662, line: 5, baseType: !666)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !284, line: 20, baseType: !667)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !286, line: 26, baseType: !89)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !661, file: !662, line: 9, baseType: !666, size: 32, offset: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !644, file: !12, line: 45, baseType: !283, size: 64, offset: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !631, file: !12, line: 54, baseType: !671, size: 256)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !631, file: !12, line: 48, size: 256, elements: !672)
!672 = !{!673, !676, !677, !678, !679}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !671, file: !12, line: 49, baseType: !674, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !12, line: 14, flags: DIFlagFwdDecl)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !671, file: !12, line: 50, baseType: !89, size: 32, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !671, file: !12, line: 51, baseType: !89, size: 32, offset: 96)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !671, file: !12, line: 52, baseType: !214, size: 64, offset: 128)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !671, file: !12, line: 53, baseType: !214, size: 64, offset: 192)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !428, file: !429, line: 835, baseType: !681, size: 32, offset: 5120)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !110, line: 22, baseType: !682)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !197, line: 28, baseType: !89)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !428, file: !429, line: 836, baseType: !681, size: 32, offset: 5152)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !428, file: !429, line: 840, baseType: !214, size: 64, offset: 5184)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !428, file: !429, line: 849, baseType: !427, size: 64, offset: 5248)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !428, file: !429, line: 852, baseType: !427, size: 64, offset: 5312)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !428, file: !429, line: 857, baseType: !109, size: 128, offset: 5376)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !428, file: !429, line: 858, baseType: !109, size: 128, offset: 5504)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !428, file: !429, line: 859, baseType: !427, size: 64, offset: 5632)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !428, file: !429, line: 867, baseType: !109, size: 128, offset: 5696)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !428, file: !429, line: 868, baseType: !109, size: 128, offset: 5824)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !428, file: !429, line: 871, baseType: !693, size: 64, offset: 5952)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !695, line: 59, size: 768, elements: !696)
!695 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!696 = !{!697, !698, !699, !700, !711, !712, !719, !728}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !694, file: !695, line: 61, baseType: !443, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !694, file: !695, line: 62, baseType: !7, size: 32, offset: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !694, file: !695, line: 63, baseType: !123, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !694, file: !695, line: 65, baseType: !701, size: 256, offset: 64)
!701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !702, size: 256, elements: !364)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !110, line: 182, size: 64, elements: !703)
!703 = !{!704}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !702, file: !110, line: 183, baseType: !705, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !110, line: 186, size: 128, elements: !707)
!707 = !{!708, !709}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !706, file: !110, line: 187, baseType: !705, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !706, file: !110, line: 187, baseType: !710, size: 64, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !694, file: !695, line: 66, baseType: !702, size: 64, offset: 320)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !694, file: !695, line: 68, baseType: !713, size: 128, offset: 384)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !714, line: 40, baseType: !715)
!714 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !714, line: 36, size: 128, elements: !716)
!716 = !{!717, !718}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !715, file: !714, line: 37, baseType: !123)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !715, file: !714, line: 38, baseType: !109, size: 128)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !694, file: !695, line: 69, baseType: !720, size: 128, align: 64, offset: 512)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !110, line: 216, size: 128, align: 64, elements: !721)
!721 = !{!722, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !720, file: !110, line: 217, baseType: !723, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !720, file: !110, line: 218, baseType: !725, size: 64, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DISubroutineType(types: !727)
!727 = !{null, !723}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !694, file: !695, line: 70, baseType: !729, size: 128, offset: 640)
!729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !730, size: 128, elements: !593)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !695, line: 54, size: 128, elements: !731)
!731 = !{!732, !733}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !730, file: !695, line: 55, baseType: !89, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !730, file: !695, line: 56, baseType: !734, size: 64, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !695, line: 56, flags: DIFlagFwdDecl)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !428, file: !429, line: 872, baseType: !737, size: 512, offset: 6016)
!737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 512, elements: !364)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !428, file: !429, line: 873, baseType: !109, size: 128, offset: 6528)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !428, file: !429, line: 874, baseType: !109, size: 128, offset: 6656)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !428, file: !429, line: 876, baseType: !741, size: 64, offset: 6784)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !743, line: 26, size: 192, elements: !744)
!743 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !742, file: !743, line: 27, baseType: !7, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !742, file: !743, line: 28, baseType: !747, size: 128, offset: 64)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !748, line: 43, size: 128, elements: !749)
!748 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!749 = !{!750, !751}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !747, file: !748, line: 44, baseType: !330)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !747, file: !748, line: 45, baseType: !109, size: 128)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !428, file: !429, line: 879, baseType: !753, size: 64, offset: 6848)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !428, file: !429, line: 882, baseType: !753, size: 64, offset: 6912)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !428, file: !429, line: 884, baseType: !283, size: 64, offset: 6976)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !428, file: !429, line: 885, baseType: !283, size: 64, offset: 7040)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !428, file: !429, line: 890, baseType: !283, size: 64, offset: 7104)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !428, file: !429, line: 891, baseType: !759, size: 128, offset: 7168)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !429, line: 242, size: 128, elements: !760)
!760 = !{!761, !762, !763}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !759, file: !429, line: 244, baseType: !283, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !759, file: !429, line: 245, baseType: !283, size: 64, offset: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !759, file: !429, line: 246, baseType: !330, offset: 128)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !428, file: !429, line: 900, baseType: !214, size: 64, offset: 7296)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !428, file: !429, line: 901, baseType: !214, size: 64, offset: 7360)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !428, file: !429, line: 904, baseType: !283, size: 64, offset: 7424)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !428, file: !429, line: 907, baseType: !283, size: 64, offset: 7488)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !428, file: !429, line: 910, baseType: !214, size: 64, offset: 7552)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !428, file: !429, line: 911, baseType: !214, size: 64, offset: 7616)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !428, file: !429, line: 914, baseType: !771, size: 640, offset: 7680)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !772, line: 123, size: 640, elements: !773)
!772 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!773 = !{!774, !780, !781}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !771, file: !772, line: 124, baseType: !775, size: 576)
!775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !776, size: 576, elements: !165)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !772, line: 108, size: 192, elements: !777)
!777 = !{!778, !779}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !776, file: !772, line: 109, baseType: !283, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !776, file: !772, line: 110, baseType: !560, size: 128, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !771, file: !772, line: 125, baseType: !7, size: 32, offset: 576)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !771, file: !772, line: 126, baseType: !7, size: 32, offset: 608)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !428, file: !429, line: 917, baseType: !783, size: 192, offset: 8320)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !772, line: 134, size: 192, elements: !784)
!784 = !{!785, !786}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !783, file: !772, line: 135, baseType: !720, size: 128, align: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !783, file: !772, line: 136, baseType: !7, size: 32, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !428, file: !429, line: 923, baseType: !788, size: 64, offset: 8512)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!790 = !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !791, line: 11, flags: DIFlagFwdDecl)
!791 = !DIFile(filename: "./include/linux/umh.h", directory: "/home/lizy2001/genbc/linux")
!792 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !428, file: !429, line: 926, baseType: !788, size: 64, offset: 8576)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !428, file: !429, line: 929, baseType: !788, size: 64, offset: 8640)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !428, file: !429, line: 933, baseType: !795, size: 64, offset: 8704)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !429, line: 933, flags: DIFlagFwdDecl)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !428, file: !429, line: 943, baseType: !798, size: 128, offset: 8768)
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 128, elements: !799)
!799 = !{!800}
!800 = !DISubrange(count: 16)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !428, file: !429, line: 945, baseType: !802, size: 64, offset: 8896)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !429, line: 49, flags: DIFlagFwdDecl)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !428, file: !429, line: 956, baseType: !805, size: 64, offset: 8960)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !429, line: 45, flags: DIFlagFwdDecl)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !428, file: !429, line: 959, baseType: !808, size: 64, offset: 9024)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !429, line: 959, flags: DIFlagFwdDecl)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !428, file: !429, line: 962, baseType: !811, size: 64, offset: 9088)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !429, line: 66, flags: DIFlagFwdDecl)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !428, file: !429, line: 966, baseType: !814, size: 64, offset: 9152)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !816, line: 35, flags: DIFlagFwdDecl)
!816 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!817 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !428, file: !429, line: 969, baseType: !818, size: 64, offset: 9216)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !772, line: 223, flags: DIFlagFwdDecl)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !428, file: !429, line: 970, baseType: !821, size: 64, offset: 9280)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !429, line: 62, flags: DIFlagFwdDecl)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !428, file: !429, line: 971, baseType: !824, size: 64, offset: 9344)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !825, line: 25, baseType: !826)
!825 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !825, line: 23, size: 64, elements: !827)
!827 = !{!828}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !826, file: !825, line: 24, baseType: !592, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !428, file: !429, line: 972, baseType: !824, size: 64, offset: 9408)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !428, file: !429, line: 974, baseType: !824, size: 64, offset: 9472)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !428, file: !429, line: 975, baseType: !832, size: 192, offset: 9536)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !833, line: 30, size: 192, elements: !834)
!833 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!834 = !{!835, !836}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !832, file: !833, line: 31, baseType: !109, size: 128)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !832, file: !833, line: 32, baseType: !824, size: 64, offset: 128)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !428, file: !429, line: 976, baseType: !214, size: 64, offset: 9728)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !428, file: !429, line: 977, baseType: !211, size: 64, offset: 9792)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !428, file: !429, line: 978, baseType: !7, size: 32, offset: 9856)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !428, file: !429, line: 980, baseType: !723, size: 64, offset: 9920)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !428, file: !429, line: 989, baseType: !842, size: 128, offset: 9984)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !843, line: 35, size: 128, elements: !844)
!843 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!844 = !{!845, !846, !847}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !842, file: !843, line: 36, baseType: !89, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !842, file: !843, line: 37, baseType: !305, size: 32, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !842, file: !843, line: 38, baseType: !848, size: 64, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !843, line: 23, flags: DIFlagFwdDecl)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !428, file: !429, line: 992, baseType: !283, size: 64, offset: 10112)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !428, file: !429, line: 993, baseType: !283, size: 64, offset: 10176)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !428, file: !429, line: 996, baseType: !123, offset: 10240)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !428, file: !429, line: 999, baseType: !330, offset: 10240)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !428, file: !429, line: 1001, baseType: !855, size: 64, offset: 10240)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !429, line: 636, size: 64, elements: !856)
!856 = !{!857}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !855, file: !429, line: 637, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !428, file: !429, line: 1005, baseType: !563, size: 128, offset: 10304)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !428, file: !429, line: 1007, baseType: !427, size: 64, offset: 10432)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !428, file: !429, line: 1009, baseType: !862, size: 64, offset: 10496)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !429, line: 1009, flags: DIFlagFwdDecl)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !428, file: !429, line: 1043, baseType: !71, size: 64, offset: 10560)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !428, file: !429, line: 1046, baseType: !866, size: 64, offset: 10624)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !429, line: 41, flags: DIFlagFwdDecl)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !428, file: !429, line: 1050, baseType: !869, size: 64, offset: 10688)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !429, line: 42, flags: DIFlagFwdDecl)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !428, file: !429, line: 1054, baseType: !872, size: 64, offset: 10752)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !429, line: 55, flags: DIFlagFwdDecl)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !428, file: !429, line: 1056, baseType: !875, size: 64, offset: 10816)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !429, line: 40, flags: DIFlagFwdDecl)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !428, file: !429, line: 1058, baseType: !878, size: 64, offset: 10880)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !429, line: 47, flags: DIFlagFwdDecl)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !428, file: !429, line: 1061, baseType: !881, size: 64, offset: 10944)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !429, line: 43, flags: DIFlagFwdDecl)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !428, file: !429, line: 1064, baseType: !214, size: 64, offset: 11008)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !428, file: !429, line: 1065, baseType: !885, size: 64, offset: 11072)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !833, line: 14, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !833, line: 12, size: 384, elements: !888)
!888 = !{!889}
!889 = !DIDerivedType(tag: DW_TAG_member, scope: !887, file: !833, line: 13, baseType: !890, size: 384)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !887, file: !833, line: 13, size: 384, elements: !891)
!891 = !{!892, !893, !894, !895}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !890, file: !833, line: 13, baseType: !89, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !890, file: !833, line: 13, baseType: !89, size: 32, offset: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !890, file: !833, line: 13, baseType: !89, size: 32, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !890, file: !833, line: 13, baseType: !896, size: 256, offset: 128)
!896 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !897, line: 32, size: 256, elements: !898)
!897 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!898 = !{!899, !905, !918, !924, !933, !953, !958}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !896, file: !897, line: 37, baseType: !900, size: 64)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !896, file: !897, line: 34, size: 64, elements: !901)
!901 = !{!902, !903}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !900, file: !897, line: 35, baseType: !682, size: 32)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !900, file: !897, line: 36, baseType: !904, size: 32, offset: 32)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !197, line: 49, baseType: !7)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !896, file: !897, line: 45, baseType: !906, size: 192)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !896, file: !897, line: 40, size: 192, elements: !907)
!907 = !{!908, !910, !911, !917}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !906, file: !897, line: 41, baseType: !909, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !197, line: 95, baseType: !89)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !906, file: !897, line: 42, baseType: !89, size: 32, offset: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !906, file: !897, line: 43, baseType: !912, size: 64, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !897, line: 11, baseType: !913)
!913 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !897, line: 8, size: 64, elements: !914)
!914 = !{!915, !916}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !913, file: !897, line: 9, baseType: !89, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !913, file: !897, line: 10, baseType: !71, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !906, file: !897, line: 44, baseType: !89, size: 32, offset: 128)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !896, file: !897, line: 52, baseType: !919, size: 128)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !896, file: !897, line: 48, size: 128, elements: !920)
!920 = !{!921, !922, !923}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !919, file: !897, line: 49, baseType: !682, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !919, file: !897, line: 50, baseType: !904, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !919, file: !897, line: 51, baseType: !912, size: 64, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !896, file: !897, line: 61, baseType: !925, size: 256)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !896, file: !897, line: 55, size: 256, elements: !926)
!926 = !{!927, !928, !929, !930, !932}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !925, file: !897, line: 56, baseType: !682, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !925, file: !897, line: 57, baseType: !904, size: 32, offset: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !925, file: !897, line: 58, baseType: !89, size: 32, offset: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !925, file: !897, line: 59, baseType: !931, size: 64, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !197, line: 94, baseType: !198)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !925, file: !897, line: 60, baseType: !931, size: 64, offset: 192)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !896, file: !897, line: 95, baseType: !934, size: 256)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !896, file: !897, line: 64, size: 256, elements: !935)
!935 = !{!936, !937}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !934, file: !897, line: 65, baseType: !71, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, scope: !934, file: !897, line: 77, baseType: !938, size: 192, offset: 64)
!938 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !934, file: !897, line: 77, size: 192, elements: !939)
!939 = !{!940, !941, !948}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !938, file: !897, line: 82, baseType: !416, size: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !938, file: !897, line: 88, baseType: !942, size: 192)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !938, file: !897, line: 84, size: 192, elements: !943)
!943 = !{!944, !946, !947}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !942, file: !897, line: 85, baseType: !945, size: 64)
!945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 64, elements: !542)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !942, file: !897, line: 86, baseType: !71, size: 64, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !942, file: !897, line: 87, baseType: !71, size: 64, offset: 128)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !938, file: !897, line: 93, baseType: !949, size: 96)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !938, file: !897, line: 90, size: 96, elements: !950)
!950 = !{!951, !952}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !949, file: !897, line: 91, baseType: !945, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !949, file: !897, line: 92, baseType: !438, size: 32, offset: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !896, file: !897, line: 101, baseType: !954, size: 128)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !896, file: !897, line: 98, size: 128, elements: !955)
!955 = !{!956, !957}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !954, file: !897, line: 99, baseType: !199, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !954, file: !897, line: 100, baseType: !89, size: 32, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !896, file: !897, line: 108, baseType: !959, size: 128)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !896, file: !897, line: 104, size: 128, elements: !960)
!960 = !{!961, !962, !963}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !959, file: !897, line: 105, baseType: !71, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !959, file: !897, line: 106, baseType: !89, size: 32, offset: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !959, file: !897, line: 107, baseType: !7, size: 32, offset: 96)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !428, file: !429, line: 1067, baseType: !965, offset: 11136)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !966, line: 12, elements: !137)
!966 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!967 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !428, file: !429, line: 1099, baseType: !968, size: 64, offset: 11136)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !429, line: 56, flags: DIFlagFwdDecl)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !428, file: !429, line: 1103, baseType: !109, size: 128, offset: 11200)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !428, file: !429, line: 1104, baseType: !972, size: 64, offset: 11328)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !429, line: 46, flags: DIFlagFwdDecl)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !428, file: !429, line: 1105, baseType: !382, size: 192, offset: 11392)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !428, file: !429, line: 1106, baseType: !7, size: 32, offset: 11584)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !428, file: !429, line: 1109, baseType: !977, size: 128, offset: 11648)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !978, size: 128, elements: !980)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !429, line: 51, flags: DIFlagFwdDecl)
!980 = !{!981}
!981 = !DISubrange(count: 2)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !428, file: !429, line: 1110, baseType: !382, size: 192, offset: 11776)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !428, file: !429, line: 1111, baseType: !109, size: 128, offset: 11968)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !428, file: !429, line: 1173, baseType: !985, size: 64, offset: 12096)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !987, line: 62, size: 256, align: 256, elements: !988)
!987 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!988 = !{!989, !990, !991, !996}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !986, file: !987, line: 75, baseType: !438, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !986, file: !987, line: 90, baseType: !438, size: 32, offset: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !986, file: !987, line: 124, baseType: !992, size: 64, offset: 64)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !986, file: !987, line: 109, size: 64, elements: !993)
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !992, file: !987, line: 110, baseType: !285, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !992, file: !987, line: 112, baseType: !285, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !986, file: !987, line: 144, baseType: !438, size: 32, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !428, file: !429, line: 1174, baseType: !437, size: 32, offset: 12160)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !428, file: !429, line: 1179, baseType: !214, size: 64, offset: 12224)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !428, file: !429, line: 1182, baseType: !1000, size: 128, offset: 12288)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !360, line: 76, size: 128, elements: !1001)
!1001 = !{!1002, !1007, !1010}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1000, file: !360, line: 85, baseType: !1003, size: 64)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !1004, line: 7, size: 64, elements: !1005)
!1004 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!1005 = !{!1006}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !1003, file: !1004, line: 12, baseType: !589, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !1000, file: !360, line: 88, baseType: !1008, size: 8, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !110, line: 30, baseType: !1009)
!1009 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !1000, file: !360, line: 95, baseType: !1008, size: 8, offset: 72)
!1011 = !DIDerivedType(tag: DW_TAG_member, scope: !428, file: !429, line: 1184, baseType: !1012, size: 128, offset: 12416)
!1012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !429, line: 1184, size: 128, elements: !1013)
!1013 = !{!1014, !1015}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !1012, file: !429, line: 1185, baseType: !443, size: 32)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1012, file: !429, line: 1186, baseType: !720, size: 128, align: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !428, file: !429, line: 1190, baseType: !1017, size: 64, offset: 12544)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !429, line: 53, flags: DIFlagFwdDecl)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !428, file: !429, line: 1192, baseType: !1020, size: 128, offset: 12608)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !360, line: 64, size: 128, elements: !1021)
!1021 = !{!1022, !1115, !1116}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1020, file: !360, line: 65, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !255, line: 68, size: 512, align: 128, elements: !1025)
!1025 = !{!1026, !1027, !1107, !1114}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1024, file: !255, line: 69, baseType: !214, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, scope: !1024, file: !255, line: 77, baseType: !1028, size: 320, offset: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1024, file: !255, line: 77, size: 320, elements: !1029)
!1029 = !{!1030, !1039, !1044, !1072, !1080, !1086, !1099, !1106}
!1030 = !DIDerivedType(tag: DW_TAG_member, scope: !1028, file: !255, line: 78, baseType: !1031, size: 320)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1028, file: !255, line: 78, size: 320, elements: !1032)
!1032 = !{!1033, !1034, !1037, !1038}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1031, file: !255, line: 84, baseType: !109, size: 128)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1031, file: !255, line: 86, baseType: !1035, size: 64, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !255, line: 26, flags: DIFlagFwdDecl)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1031, file: !255, line: 87, baseType: !214, size: 64, offset: 192)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1031, file: !255, line: 94, baseType: !214, size: 64, offset: 256)
!1039 = !DIDerivedType(tag: DW_TAG_member, scope: !1028, file: !255, line: 96, baseType: !1040, size: 64)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1028, file: !255, line: 96, size: 64, elements: !1041)
!1041 = !{!1042}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1040, file: !255, line: 101, baseType: !1043, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !110, line: 143, baseType: !283)
!1044 = !DIDerivedType(tag: DW_TAG_member, scope: !1028, file: !255, line: 103, baseType: !1045, size: 320)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1028, file: !255, line: 103, size: 320, elements: !1046)
!1046 = !{!1047, !1057, !1060, !1061}
!1047 = !DIDerivedType(tag: DW_TAG_member, scope: !1045, file: !255, line: 104, baseType: !1048, size: 128)
!1048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1045, file: !255, line: 104, size: 128, elements: !1049)
!1049 = !{!1050, !1051}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1048, file: !255, line: 105, baseType: !109, size: 128)
!1051 = !DIDerivedType(tag: DW_TAG_member, scope: !1048, file: !255, line: 106, baseType: !1052, size: 128)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1048, file: !255, line: 106, size: 128, elements: !1053)
!1053 = !{!1054, !1055, !1056}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1052, file: !255, line: 107, baseType: !1023, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1052, file: !255, line: 109, baseType: !89, size: 32, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1052, file: !255, line: 110, baseType: !89, size: 32, offset: 96)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1045, file: !255, line: 117, baseType: !1058, size: 64, offset: 128)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !255, line: 117, flags: DIFlagFwdDecl)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1045, file: !255, line: 119, baseType: !71, size: 64, offset: 192)
!1061 = !DIDerivedType(tag: DW_TAG_member, scope: !1045, file: !255, line: 120, baseType: !1062, size: 64, offset: 256)
!1062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1045, file: !255, line: 120, size: 64, elements: !1063)
!1063 = !{!1064, !1065, !1066}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1062, file: !255, line: 121, baseType: !71, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1062, file: !255, line: 122, baseType: !214, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, scope: !1062, file: !255, line: 123, baseType: !1067, size: 32)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1062, file: !255, line: 123, size: 32, elements: !1068)
!1068 = !{!1069, !1070, !1071}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1067, file: !255, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1067, file: !255, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1067, file: !255, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1072 = !DIDerivedType(tag: DW_TAG_member, scope: !1028, file: !255, line: 130, baseType: !1073, size: 192)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1028, file: !255, line: 130, size: 192, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1078, !1079}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1073, file: !255, line: 131, baseType: !214, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1073, file: !255, line: 134, baseType: !575, size: 8, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1073, file: !255, line: 135, baseType: !575, size: 8, offset: 72)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1073, file: !255, line: 136, baseType: !305, size: 32, offset: 96)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1073, file: !255, line: 137, baseType: !7, size: 32, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !1028, file: !255, line: 139, baseType: !1081, size: 256)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1028, file: !255, line: 139, size: 256, elements: !1082)
!1082 = !{!1083, !1084, !1085}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1081, file: !255, line: 140, baseType: !214, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1081, file: !255, line: 141, baseType: !305, size: 32, offset: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1081, file: !255, line: 143, baseType: !109, size: 128, offset: 128)
!1086 = !DIDerivedType(tag: DW_TAG_member, scope: !1028, file: !255, line: 145, baseType: !1087, size: 256)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1028, file: !255, line: 145, size: 256, elements: !1088)
!1088 = !{!1089, !1090, !1092, !1093, !1098}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1087, file: !255, line: 146, baseType: !214, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1087, file: !255, line: 147, baseType: !1091, size: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !244, line: 509, baseType: !1023)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1087, file: !255, line: 148, baseType: !214, size: 64, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_member, scope: !1087, file: !255, line: 149, baseType: !1094, size: 64, offset: 192)
!1094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1087, file: !255, line: 149, size: 64, elements: !1095)
!1095 = !{!1096, !1097}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1094, file: !255, line: 150, baseType: !271, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1094, file: !255, line: 151, baseType: !305, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1087, file: !255, line: 156, baseType: !123, offset: 256)
!1099 = !DIDerivedType(tag: DW_TAG_member, scope: !1028, file: !255, line: 159, baseType: !1100, size: 128)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1028, file: !255, line: 159, size: 128, elements: !1101)
!1101 = !{!1102, !1105}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !1100, file: !255, line: 161, baseType: !1103, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !255, line: 161, flags: DIFlagFwdDecl)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !1100, file: !255, line: 162, baseType: !71, size: 64, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1028, file: !255, line: 176, baseType: !720, size: 128, align: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, scope: !1024, file: !255, line: 179, baseType: !1108, size: 32, offset: 384)
!1108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1024, file: !255, line: 179, size: 32, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1113}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !1108, file: !255, line: 184, baseType: !305, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !1108, file: !255, line: 192, baseType: !7, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1108, file: !255, line: 194, baseType: !7, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1108, file: !255, line: 195, baseType: !89, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1024, file: !255, line: 199, baseType: !305, size: 32, offset: 416)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1020, file: !360, line: 67, baseType: !438, size: 32, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1020, file: !360, line: 68, baseType: !438, size: 32, offset: 96)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !428, file: !429, line: 1206, baseType: !89, size: 32, offset: 12736)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !428, file: !429, line: 1207, baseType: !89, size: 32, offset: 12768)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !428, file: !429, line: 1209, baseType: !214, size: 64, offset: 12800)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !428, file: !429, line: 1219, baseType: !283, size: 64, offset: 12864)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !428, file: !429, line: 1220, baseType: !283, size: 64, offset: 12928)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !428, file: !429, line: 1317, baseType: !89, size: 32, offset: 12992)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !428, file: !429, line: 1319, baseType: !427, size: 64, offset: 13056)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !428, file: !429, line: 1322, baseType: !1125, size: 64, offset: 13120)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !1127, line: 9, flags: DIFlagFwdDecl)
!1127 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !428, file: !429, line: 1326, baseType: !443, size: 32, offset: 13184)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !428, file: !429, line: 1342, baseType: !71, size: 64, offset: 13248)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !428, file: !429, line: 1343, baseType: !285, size: 64, offset: 13312)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !428, file: !429, line: 1344, baseType: !283, size: 64, offset: 13376)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !428, file: !429, line: 1345, baseType: !285, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !428, file: !429, line: 1346, baseType: !285, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !428, file: !429, line: 1347, baseType: !285, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !428, file: !429, line: 1348, baseType: !720, size: 128, align: 64, offset: 13504)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !428, file: !429, line: 1358, baseType: !1137, size: 34816, offset: 13824)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !1138, line: 485, size: 34816, elements: !1139)
!1138 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!1139 = !{!1140, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1169, !1170, !1171, !1172, !1173, !1174, !1177, !1178, !1179}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !1137, file: !1138, line: 487, baseType: !1141, size: 192)
!1141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1142, size: 192, elements: !165)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !1143, line: 16, size: 64, elements: !1144)
!1143 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!1144 = !{!1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !1142, file: !1143, line: 17, baseType: !411, size: 16)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !1142, file: !1143, line: 18, baseType: !411, size: 16, offset: 16)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !1142, file: !1143, line: 19, baseType: !411, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1142, file: !1143, line: 19, baseType: !411, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1142, file: !1143, line: 19, baseType: !411, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !1142, file: !1143, line: 19, baseType: !411, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1142, file: !1143, line: 19, baseType: !411, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !1142, file: !1143, line: 20, baseType: !411, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !1142, file: !1143, line: 20, baseType: !411, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1142, file: !1143, line: 20, baseType: !411, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1142, file: !1143, line: 20, baseType: !411, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1142, file: !1143, line: 20, baseType: !411, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !1142, file: !1143, line: 20, baseType: !411, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1137, file: !1138, line: 491, baseType: !214, size: 64, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1137, file: !1138, line: 495, baseType: !206, size: 16, offset: 256)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1137, file: !1138, line: 496, baseType: !206, size: 16, offset: 272)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !1137, file: !1138, line: 497, baseType: !206, size: 16, offset: 288)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !1137, file: !1138, line: 498, baseType: !206, size: 16, offset: 304)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !1137, file: !1138, line: 502, baseType: !214, size: 64, offset: 320)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1137, file: !1138, line: 503, baseType: !214, size: 64, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !1137, file: !1138, line: 514, baseType: !1166, size: 256, offset: 448)
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1167, size: 256, elements: !364)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !1138, line: 483, flags: DIFlagFwdDecl)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !1137, file: !1138, line: 516, baseType: !214, size: 64, offset: 704)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !1137, file: !1138, line: 518, baseType: !214, size: 64, offset: 768)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !1137, file: !1138, line: 520, baseType: !214, size: 64, offset: 832)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !1137, file: !1138, line: 521, baseType: !214, size: 64, offset: 896)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !1137, file: !1138, line: 522, baseType: !214, size: 64, offset: 960)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !1137, file: !1138, line: 528, baseType: !1175, size: 64, offset: 1024)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !1138, line: 10, flags: DIFlagFwdDecl)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !1137, file: !1138, line: 535, baseType: !214, size: 64, offset: 1088)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !1137, file: !1138, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !1137, file: !1138, line: 540, baseType: !1180, size: 33280, offset: 1536)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !1181, line: 317, size: 33280, elements: !1182)
!1181 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!1182 = !{!1183, !1184, !1185}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !1180, file: !1181, line: 330, baseType: !7, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !1180, file: !1181, line: 337, baseType: !214, size: 64, offset: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1180, file: !1181, line: 348, baseType: !1186, size: 32768, offset: 512)
!1186 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !1181, line: 304, size: 32768, elements: !1187)
!1187 = !{!1188, !1203, !1242, !1292, !1309}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1186, file: !1181, line: 305, baseType: !1189, size: 896)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !1181, line: 12, size: 896, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1202}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1189, file: !1181, line: 13, baseType: !437, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1189, file: !1181, line: 14, baseType: !437, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1189, file: !1181, line: 15, baseType: !437, size: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1189, file: !1181, line: 16, baseType: !437, size: 32, offset: 96)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1189, file: !1181, line: 17, baseType: !437, size: 32, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1189, file: !1181, line: 18, baseType: !437, size: 32, offset: 160)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1189, file: !1181, line: 19, baseType: !437, size: 32, offset: 192)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1189, file: !1181, line: 22, baseType: !1199, size: 640, offset: 224)
!1199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 640, elements: !1200)
!1200 = !{!1201}
!1201 = !DISubrange(count: 20)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1189, file: !1181, line: 25, baseType: !437, size: 32, offset: 864)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !1186, file: !1181, line: 306, baseType: !1204, size: 4096, align: 128)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !1181, line: 34, size: 4096, align: 128, elements: !1205)
!1205 = !{!1206, !1207, !1208, !1209, !1210, !1225, !1226, !1227, !1231, !1233, !1237}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1204, file: !1181, line: 35, baseType: !411, size: 16)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1204, file: !1181, line: 36, baseType: !411, size: 16, offset: 16)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1204, file: !1181, line: 37, baseType: !411, size: 16, offset: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1204, file: !1181, line: 38, baseType: !411, size: 16, offset: 48)
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1204, file: !1181, line: 39, baseType: !1211, size: 128, offset: 64)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1204, file: !1181, line: 39, size: 128, elements: !1212)
!1212 = !{!1213, !1218}
!1213 = !DIDerivedType(tag: DW_TAG_member, scope: !1211, file: !1181, line: 40, baseType: !1214, size: 128)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1211, file: !1181, line: 40, size: 128, elements: !1215)
!1215 = !{!1216, !1217}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1214, file: !1181, line: 41, baseType: !283, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !1214, file: !1181, line: 42, baseType: !283, size: 64, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, scope: !1211, file: !1181, line: 44, baseType: !1219, size: 128)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1211, file: !1181, line: 44, size: 128, elements: !1220)
!1220 = !{!1221, !1222, !1223, !1224}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1219, file: !1181, line: 45, baseType: !437, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1219, file: !1181, line: 46, baseType: !437, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1219, file: !1181, line: 47, baseType: !437, size: 32, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1219, file: !1181, line: 48, baseType: !437, size: 32, offset: 96)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1204, file: !1181, line: 51, baseType: !437, size: 32, offset: 192)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1204, file: !1181, line: 52, baseType: !437, size: 32, offset: 224)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1204, file: !1181, line: 55, baseType: !1228, size: 1024, offset: 256)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 1024, elements: !1229)
!1229 = !{!1230}
!1230 = !DISubrange(count: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !1204, file: !1181, line: 58, baseType: !1232, size: 2048, offset: 1280)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 2048, elements: !169)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1204, file: !1181, line: 60, baseType: !1234, size: 384, offset: 3328)
!1234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 384, elements: !1235)
!1235 = !{!1236}
!1236 = !DISubrange(count: 12)
!1237 = !DIDerivedType(tag: DW_TAG_member, scope: !1204, file: !1181, line: 62, baseType: !1238, size: 384, offset: 3712)
!1238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1204, file: !1181, line: 62, size: 384, elements: !1239)
!1239 = !{!1240, !1241}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !1238, file: !1181, line: 63, baseType: !1234, size: 384)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !1238, file: !1181, line: 64, baseType: !1234, size: 384)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1186, file: !1181, line: 307, baseType: !1243, size: 1088)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !1181, line: 79, size: 1088, elements: !1244)
!1244 = !{!1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1291}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1243, file: !1181, line: 80, baseType: !437, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1243, file: !1181, line: 81, baseType: !437, size: 32, offset: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1243, file: !1181, line: 82, baseType: !437, size: 32, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1243, file: !1181, line: 83, baseType: !437, size: 32, offset: 96)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1243, file: !1181, line: 84, baseType: !437, size: 32, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1243, file: !1181, line: 85, baseType: !437, size: 32, offset: 160)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1243, file: !1181, line: 86, baseType: !437, size: 32, offset: 192)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1243, file: !1181, line: 88, baseType: !1199, size: 640, offset: 224)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !1243, file: !1181, line: 89, baseType: !573, size: 8, offset: 864)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1243, file: !1181, line: 90, baseType: !573, size: 8, offset: 872)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !1243, file: !1181, line: 91, baseType: !573, size: 8, offset: 880)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !1243, file: !1181, line: 92, baseType: !573, size: 8, offset: 888)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !1243, file: !1181, line: 93, baseType: !573, size: 8, offset: 896)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !1243, file: !1181, line: 94, baseType: !573, size: 8, offset: 904)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1243, file: !1181, line: 95, baseType: !1260, size: 64, offset: 960)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !1262, line: 11, size: 128, elements: !1263)
!1262 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!1263 = !{!1264, !1265}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !1261, file: !1262, line: 12, baseType: !199, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !1261, file: !1262, line: 13, baseType: !1266, size: 64, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !1268, line: 56, size: 1344, elements: !1269)
!1268 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!1269 = !{!1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1267, file: !1268, line: 61, baseType: !214, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1267, file: !1268, line: 62, baseType: !214, size: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1267, file: !1268, line: 63, baseType: !214, size: 64, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1267, file: !1268, line: 64, baseType: !214, size: 64, offset: 192)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !1267, file: !1268, line: 65, baseType: !214, size: 64, offset: 256)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !1267, file: !1268, line: 66, baseType: !214, size: 64, offset: 320)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1267, file: !1268, line: 68, baseType: !214, size: 64, offset: 384)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1267, file: !1268, line: 69, baseType: !214, size: 64, offset: 448)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1267, file: !1268, line: 70, baseType: !214, size: 64, offset: 512)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1267, file: !1268, line: 71, baseType: !214, size: 64, offset: 576)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !1267, file: !1268, line: 72, baseType: !214, size: 64, offset: 640)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !1267, file: !1268, line: 73, baseType: !214, size: 64, offset: 704)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !1267, file: !1268, line: 74, baseType: !214, size: 64, offset: 768)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !1267, file: !1268, line: 75, baseType: !214, size: 64, offset: 832)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !1267, file: !1268, line: 76, baseType: !214, size: 64, offset: 896)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !1267, file: !1268, line: 81, baseType: !214, size: 64, offset: 960)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1267, file: !1268, line: 83, baseType: !214, size: 64, offset: 1024)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1267, file: !1268, line: 84, baseType: !214, size: 64, offset: 1088)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1267, file: !1268, line: 85, baseType: !214, size: 64, offset: 1152)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1267, file: !1268, line: 86, baseType: !214, size: 64, offset: 1216)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1267, file: !1268, line: 87, baseType: !214, size: 64, offset: 1280)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !1243, file: !1181, line: 96, baseType: !437, size: 32, offset: 1024)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !1186, file: !1181, line: 308, baseType: !1293, size: 4608, align: 512)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !1181, line: 289, size: 4608, align: 512, elements: !1294)
!1294 = !{!1295, !1296, !1305}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !1293, file: !1181, line: 290, baseType: !1204, size: 4096, align: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1293, file: !1181, line: 291, baseType: !1297, size: 512, offset: 4096)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !1181, line: 268, size: 512, elements: !1298)
!1298 = !{!1299, !1300, !1301}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !1297, file: !1181, line: 269, baseType: !283, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !1297, file: !1181, line: 270, baseType: !283, size: 64, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1297, file: !1181, line: 271, baseType: !1302, size: 384, offset: 128)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 384, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 6)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !1293, file: !1181, line: 292, baseType: !1306, offset: 4608)
!1306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, elements: !1307)
!1307 = !{!1308}
!1308 = !DISubrange(count: 0)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !1186, file: !1181, line: 309, baseType: !1310, size: 32768)
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, size: 32768, elements: !1311)
!1311 = !{!1312}
!1312 = !DISubrange(count: 4096)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !424, file: !255, line: 378, baseType: !1314, size: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !420, file: !255, line: 384, baseType: !742, size: 192, offset: 192)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !275, file: !255, line: 500, baseType: !123, offset: 6656)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !275, file: !255, line: 501, baseType: !1318, size: 64, offset: 6656)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !255, line: 387, flags: DIFlagFwdDecl)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !275, file: !255, line: 516, baseType: !1321, size: 64, offset: 6720)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !255, line: 516, flags: DIFlagFwdDecl)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !275, file: !255, line: 519, baseType: !242, size: 64, offset: 6784)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !275, file: !255, line: 521, baseType: !1325, size: 64, offset: 6848)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !255, line: 521, flags: DIFlagFwdDecl)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !275, file: !255, line: 545, baseType: !305, size: 32, offset: 6912)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !275, file: !255, line: 548, baseType: !1008, size: 8, offset: 6944)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !275, file: !255, line: 550, baseType: !1330, offset: 6952)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !1331, line: 142, elements: !137)
!1331 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !275, file: !255, line: 554, baseType: !1333, size: 256, offset: 6976)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1334, line: 102, size: 256, elements: !1335)
!1334 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1335 = !{!1336, !1337, !1338}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1333, file: !1334, line: 103, baseType: !313, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1333, file: !1334, line: 104, baseType: !109, size: 128, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1333, file: !1334, line: 105, baseType: !1339, size: 64, offset: 192)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1334, line: 21, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{null, !1343}
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !275, file: !255, line: 557, baseType: !437, size: 32, offset: 7232)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !272, file: !255, line: 565, baseType: !1346, offset: 7296)
!1346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, elements: !1347)
!1347 = !{!1348}
!1348 = !DISubrange(count: -1)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !254, file: !255, line: 333, baseType: !1350, size: 64, offset: 576)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !244, line: 284, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !244, line: 284, size: 64, elements: !1352)
!1352 = !{!1353}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1351, file: !244, line: 284, baseType: !1354, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !303, line: 19, baseType: !214)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !254, file: !255, line: 334, baseType: !214, size: 64, offset: 640)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !254, file: !255, line: 343, baseType: !1357, size: 256, offset: 704)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !254, file: !255, line: 340, size: 256, elements: !1358)
!1358 = !{!1359, !1360}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1357, file: !255, line: 341, baseType: !262, size: 192, align: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1357, file: !255, line: 342, baseType: !214, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !254, file: !255, line: 351, baseType: !109, size: 128, offset: 960)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !254, file: !255, line: 353, baseType: !1363, size: 64, offset: 1088)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !255, line: 353, flags: DIFlagFwdDecl)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !254, file: !255, line: 356, baseType: !1366, size: 64, offset: 1152)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1368)
!1368 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !255, line: 356, flags: DIFlagFwdDecl)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !254, file: !255, line: 359, baseType: !214, size: 64, offset: 1216)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !254, file: !255, line: 361, baseType: !242, size: 64, offset: 1280)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !254, file: !255, line: 362, baseType: !71, size: 64, offset: 1344)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !254, file: !255, line: 365, baseType: !313, size: 64, offset: 1408)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !254, file: !255, line: 373, baseType: !1374, offset: 1472)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !255, line: 296, elements: !137)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !221, file: !189, line: 90, baseType: !216, size: 64, offset: 192)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !221, file: !189, line: 91, baseType: !1377, size: 64, offset: 256)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !179, file: !105, line: 143, baseType: !1379, size: 64, offset: 256)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{!1382, !116}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !18, line: 39, size: 384, elements: !1385)
!1385 = !{!1386, !1387, !1391, !1395, !1403, !1407}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1384, file: !18, line: 40, baseType: !17, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !1384, file: !18, line: 41, baseType: !1388, size: 64, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!1008}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !1384, file: !18, line: 42, baseType: !1392, size: 64, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!71}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !1384, file: !18, line: 43, baseType: !1396, size: 64, offset: 192)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = !DISubroutineType(types: !1398)
!1398 = !{!1399, !1401}
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !18, line: 19, flags: DIFlagFwdDecl)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !1384, file: !18, line: 44, baseType: !1404, size: 64, offset: 256)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{!1399}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !1384, file: !18, line: 45, baseType: !1408, size: 64, offset: 320)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{null, !71}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !179, file: !105, line: 144, baseType: !1412, size: 64, offset: 320)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = !DISubroutineType(types: !1414)
!1414 = !{!1399, !116}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !179, file: !105, line: 145, baseType: !1416, size: 64, offset: 384)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{null, !116, !1419, !1426}
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1421, line: 23, baseType: !1422)
!1421 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1421, line: 21, size: 32, elements: !1423)
!1423 = !{!1424}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1422, file: !1421, line: 22, baseType: !1425, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !110, line: 32, baseType: !904)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1421, line: 28, baseType: !1428)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1421, line: 26, size: 32, elements: !1429)
!1429 = !{!1430}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1428, file: !1421, line: 27, baseType: !1431, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !110, line: 33, baseType: !1432)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !197, line: 50, baseType: !7)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !104, file: !105, line: 70, baseType: !1434, size: 64, offset: 384)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1436, line: 123, size: 1024, elements: !1437)
!1436 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1437 = !{!1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1580, !1581, !1582, !1583, !1584}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1435, file: !1436, line: 124, baseType: !305, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1435, file: !1436, line: 125, baseType: !305, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1435, file: !1436, line: 135, baseType: !1434, size: 64, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1435, file: !1436, line: 136, baseType: !76, size: 64, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1435, file: !1436, line: 138, baseType: !262, size: 192, align: 64, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1435, file: !1436, line: 140, baseType: !1399, size: 64, offset: 384)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1435, file: !1436, line: 141, baseType: !7, size: 32, offset: 448)
!1445 = !DIDerivedType(tag: DW_TAG_member, scope: !1435, file: !1436, line: 142, baseType: !1446, size: 256, offset: 512)
!1446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1435, file: !1436, line: 142, size: 256, elements: !1447)
!1447 = !{!1448, !1503, !1507}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1446, file: !1436, line: 143, baseType: !1449, size: 192)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1436, line: 91, size: 192, elements: !1450)
!1450 = !{!1451, !1452, !1453}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !1449, file: !1436, line: 92, baseType: !214, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1449, file: !1436, line: 94, baseType: !279, size: 64, offset: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1449, file: !1436, line: 100, baseType: !1454, size: 64, offset: 128)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1436, line: 180, size: 704, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1473, !1474, !1475, !1501, !1502}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1455, file: !1436, line: 182, baseType: !1434, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1455, file: !1436, line: 183, baseType: !7, size: 32, offset: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !1455, file: !1436, line: 186, baseType: !1460, size: 192, offset: 128)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1461, line: 19, size: 192, elements: !1462)
!1461 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1462 = !{!1463, !1471, !1472}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1460, file: !1461, line: 20, baseType: !1464, size: 128)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1465, line: 292, size: 128, elements: !1466)
!1465 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1466 = !{!1467, !1468, !1470}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1464, file: !1465, line: 293, baseType: !123)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1464, file: !1465, line: 295, baseType: !1469, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !110, line: 148, baseType: !7)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1464, file: !1465, line: 296, baseType: !71, size: 64, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1460, file: !1461, line: 21, baseType: !7, size: 32, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1460, file: !1461, line: 22, baseType: !7, size: 32, offset: 160)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !1455, file: !1436, line: 187, baseType: !437, size: 32, offset: 320)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !1455, file: !1436, line: 188, baseType: !437, size: 32, offset: 352)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !1455, file: !1436, line: 189, baseType: !1476, size: 64, offset: 384)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1436, line: 168, size: 320, elements: !1478)
!1478 = !{!1479, !1485, !1489, !1493, !1497}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1477, file: !1436, line: 169, baseType: !1480, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!89, !1483, !1454}
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !244, line: 539, flags: DIFlagFwdDecl)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1477, file: !1436, line: 171, baseType: !1486, size: 64, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!89, !1434, !76, !205}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1477, file: !1436, line: 173, baseType: !1490, size: 64, offset: 128)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!89, !1434}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1477, file: !1436, line: 174, baseType: !1494, size: 64, offset: 192)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!89, !1434, !1434, !76}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1477, file: !1436, line: 176, baseType: !1498, size: 64, offset: 256)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!89, !1483, !1434, !1454}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !1455, file: !1436, line: 192, baseType: !109, size: 128, offset: 448)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !1455, file: !1436, line: 194, baseType: !713, size: 128, offset: 576)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1446, file: !1436, line: 144, baseType: !1504, size: 64)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1436, line: 103, size: 64, elements: !1505)
!1505 = !{!1506}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !1504, file: !1436, line: 104, baseType: !1434, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1446, file: !1436, line: 145, baseType: !1508, size: 256)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1436, line: 107, size: 256, elements: !1509)
!1509 = !{!1510, !1575, !1578, !1579}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1508, file: !1436, line: 108, baseType: !1511, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1436, line: 217, size: 768, elements: !1514)
!1514 = !{!1515, !1535, !1539, !1543, !1548, !1552, !1556, !1560, !1561, !1562, !1563, !1571}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1513, file: !1436, line: 222, baseType: !1516, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!89, !1519}
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1436, line: 197, size: 1088, elements: !1521)
!1521 = !{!1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1520, file: !1436, line: 199, baseType: !1434, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1520, file: !1436, line: 200, baseType: !242, size: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !1520, file: !1436, line: 201, baseType: !1483, size: 64, offset: 128)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1520, file: !1436, line: 202, baseType: !71, size: 64, offset: 192)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1520, file: !1436, line: 205, baseType: !382, size: 192, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !1520, file: !1436, line: 206, baseType: !382, size: 192, offset: 448)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1520, file: !1436, line: 207, baseType: !89, size: 32, offset: 640)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1520, file: !1436, line: 208, baseType: !109, size: 128, offset: 704)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !1520, file: !1436, line: 209, baseType: !164, size: 64, offset: 832)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1520, file: !1436, line: 211, baseType: !211, size: 64, offset: 896)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !1520, file: !1436, line: 212, baseType: !1008, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !1520, file: !1436, line: 213, baseType: !1008, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1520, file: !1436, line: 214, baseType: !1366, size: 64, offset: 1024)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1513, file: !1436, line: 223, baseType: !1536, size: 64, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{null, !1519}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !1513, file: !1436, line: 236, baseType: !1540, size: 64, offset: 128)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!89, !1483, !71}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !1513, file: !1436, line: 238, baseType: !1544, size: 64, offset: 192)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!71, !1483, !1547}
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !1513, file: !1436, line: 239, baseType: !1549, size: 64, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!71, !1483, !71, !1547}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !1513, file: !1436, line: 240, baseType: !1553, size: 64, offset: 320)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{null, !1483, !71}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1513, file: !1436, line: 242, baseType: !1557, size: 64, offset: 384)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!195, !1519, !164, !211, !245}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1513, file: !1436, line: 252, baseType: !211, size: 64, offset: 448)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !1513, file: !1436, line: 259, baseType: !1008, size: 8, offset: 512)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1513, file: !1436, line: 260, baseType: !1557, size: 64, offset: 576)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1513, file: !1436, line: 263, baseType: !1564, size: 64, offset: 640)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!1567, !1519, !1569}
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1568, line: 52, baseType: !7)
!1568 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1436, line: 27, flags: DIFlagFwdDecl)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1513, file: !1436, line: 266, baseType: !1572, size: 64, offset: 704)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!89, !1519, !253}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1508, file: !1436, line: 109, baseType: !1576, size: 64, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1436, line: 31, flags: DIFlagFwdDecl)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1508, file: !1436, line: 110, baseType: !245, size: 64, offset: 128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !1508, file: !1436, line: 111, baseType: !1434, size: 64, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1435, file: !1436, line: 148, baseType: !71, size: 64, offset: 768)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1435, file: !1436, line: 154, baseType: !283, size: 64, offset: 832)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1435, file: !1436, line: 156, baseType: !206, size: 16, offset: 896)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1435, file: !1436, line: 157, baseType: !205, size: 16, offset: 912)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !1435, file: !1436, line: 158, baseType: !1585, size: 64, offset: 960)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1436, line: 32, flags: DIFlagFwdDecl)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !104, file: !105, line: 71, baseType: !1588, size: 32, offset: 448)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1589, line: 19, size: 32, elements: !1590)
!1589 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1590 = !{!1591}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1588, file: !1589, line: 20, baseType: !443, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !104, file: !105, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !104, file: !105, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !104, file: !105, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !104, file: !105, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !104, file: !105, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !101, file: !30, line: 463, baseType: !100, size: 64, offset: 512)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !101, file: !30, line: 465, baseType: !1599, size: 64, offset: 576)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64)
!1600 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !30, line: 36, flags: DIFlagFwdDecl)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !101, file: !30, line: 467, baseType: !76, size: 64, offset: 640)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !101, file: !30, line: 468, baseType: !1603, size: 64, offset: 704)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !30, line: 87, size: 384, elements: !1606)
!1606 = !{!1607, !1608, !1609, !1613, !1618, !1622}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1605, file: !30, line: 88, baseType: !76, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1605, file: !30, line: 89, baseType: !218, size: 64, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1605, file: !30, line: 90, baseType: !1610, size: 64, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!89, !100, !159}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1605, file: !30, line: 91, baseType: !1614, size: 64, offset: 192)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{!164, !100, !1617, !1419, !1426}
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1605, file: !30, line: 93, baseType: !1619, size: 64, offset: 256)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{null, !100}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1605, file: !30, line: 95, baseType: !1623, size: 64, offset: 320)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !37, line: 278, size: 1472, elements: !1626)
!1626 = !{!1627, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !1625, file: !37, line: 279, baseType: !1628, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!89, !100}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !1625, file: !37, line: 280, baseType: !1619, size: 64, offset: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1625, file: !37, line: 281, baseType: !1628, size: 64, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1625, file: !37, line: 282, baseType: !1628, size: 64, offset: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !1625, file: !37, line: 283, baseType: !1628, size: 64, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !1625, file: !37, line: 284, baseType: !1628, size: 64, offset: 320)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !1625, file: !37, line: 285, baseType: !1628, size: 64, offset: 384)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !1625, file: !37, line: 286, baseType: !1628, size: 64, offset: 448)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !1625, file: !37, line: 287, baseType: !1628, size: 64, offset: 512)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !1625, file: !37, line: 288, baseType: !1628, size: 64, offset: 576)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !1625, file: !37, line: 289, baseType: !1628, size: 64, offset: 640)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !1625, file: !37, line: 290, baseType: !1628, size: 64, offset: 704)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !1625, file: !37, line: 291, baseType: !1628, size: 64, offset: 768)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !1625, file: !37, line: 292, baseType: !1628, size: 64, offset: 832)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !1625, file: !37, line: 293, baseType: !1628, size: 64, offset: 896)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !1625, file: !37, line: 294, baseType: !1628, size: 64, offset: 960)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !1625, file: !37, line: 295, baseType: !1628, size: 64, offset: 1024)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !1625, file: !37, line: 296, baseType: !1628, size: 64, offset: 1088)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !1625, file: !37, line: 297, baseType: !1628, size: 64, offset: 1152)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !1625, file: !37, line: 298, baseType: !1628, size: 64, offset: 1216)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !1625, file: !37, line: 299, baseType: !1628, size: 64, offset: 1280)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !1625, file: !37, line: 300, baseType: !1628, size: 64, offset: 1344)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !1625, file: !37, line: 301, baseType: !1628, size: 64, offset: 1408)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !101, file: !30, line: 470, baseType: !1654, size: 64, offset: 768)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !1656, line: 82, size: 1408, elements: !1657)
!1656 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!1657 = !{!1658, !1659, !1660, !1661, !1662, !1663, !1664, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1743, !1746, !1749}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1655, file: !1656, line: 83, baseType: !76, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !1655, file: !1656, line: 84, baseType: !76, size: 64, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !1655, file: !1656, line: 85, baseType: !100, size: 64, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !1655, file: !1656, line: 86, baseType: !218, size: 64, offset: 192)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1655, file: !1656, line: 87, baseType: !218, size: 64, offset: 256)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !1655, file: !1656, line: 88, baseType: !218, size: 64, offset: 320)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !1655, file: !1656, line: 90, baseType: !1665, size: 64, offset: 384)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{!89, !100, !1668}
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !24, line: 95, size: 1152, elements: !1670)
!1670 = !{!1671, !1672, !1673, !1677, !1678, !1679, !1680, !1694, !1707, !1708, !1709, !1710, !1711, !1719, !1720, !1721, !1722, !1723, !1724}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1669, file: !24, line: 96, baseType: !76, size: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1669, file: !24, line: 97, baseType: !1654, size: 64, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1669, file: !24, line: 99, baseType: !1674, size: 64, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1676, line: 76, flags: DIFlagFwdDecl)
!1676 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !1669, file: !24, line: 100, baseType: !76, size: 64, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !1669, file: !24, line: 102, baseType: !1008, size: 8, offset: 256)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !1669, file: !24, line: 103, baseType: !23, size: 32, offset: 288)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !1669, file: !24, line: 105, baseType: !1681, size: 64, offset: 320)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !1684, line: 262, size: 1600, elements: !1685)
!1684 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!1685 = !{!1686, !1688, !1689, !1693}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1683, file: !1684, line: 263, baseType: !1687, size: 256)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 256, elements: !1229)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1683, file: !1684, line: 264, baseType: !1687, size: 256, offset: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !1683, file: !1684, line: 265, baseType: !1690, size: 1024, offset: 512)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 1024, elements: !1691)
!1691 = !{!1692}
!1692 = !DISubrange(count: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1683, file: !1684, line: 266, baseType: !1399, size: 64, offset: 1536)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !1669, file: !24, line: 106, baseType: !1695, size: 64, offset: 384)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1697)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !1684, line: 210, size: 256, elements: !1698)
!1698 = !{!1699, !1703, !1705, !1706}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1697, file: !1684, line: 211, baseType: !1700, size: 72)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 72, elements: !1701)
!1701 = !{!1702}
!1702 = !DISubrange(count: 9)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1697, file: !1684, line: 212, baseType: !1704, size: 64, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !1684, line: 14, baseType: !214)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !1697, file: !1684, line: 213, baseType: !438, size: 32, offset: 192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !1697, file: !1684, line: 214, baseType: !438, size: 32, offset: 224)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !1669, file: !24, line: 108, baseType: !1628, size: 64, offset: 448)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !1669, file: !24, line: 109, baseType: !1619, size: 64, offset: 512)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !1669, file: !24, line: 110, baseType: !1628, size: 64, offset: 576)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1669, file: !24, line: 111, baseType: !1619, size: 64, offset: 640)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1669, file: !24, line: 112, baseType: !1712, size: 64, offset: 704)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!89, !100, !1715}
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !37, line: 52, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !37, line: 50, size: 32, elements: !1717)
!1717 = !{!1718}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1716, file: !37, line: 51, baseType: !89, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1669, file: !24, line: 113, baseType: !1628, size: 64, offset: 768)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1669, file: !24, line: 114, baseType: !218, size: 64, offset: 832)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1669, file: !24, line: 115, baseType: !218, size: 64, offset: 896)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1669, file: !24, line: 117, baseType: !1623, size: 64, offset: 960)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !1669, file: !24, line: 118, baseType: !1619, size: 64, offset: 1024)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1669, file: !24, line: 120, baseType: !1725, size: 64, offset: 1088)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !24, line: 120, flags: DIFlagFwdDecl)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1655, file: !1656, line: 91, baseType: !1610, size: 64, offset: 448)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !1655, file: !1656, line: 92, baseType: !1628, size: 64, offset: 512)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !1655, file: !1656, line: 93, baseType: !1619, size: 64, offset: 576)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !1655, file: !1656, line: 94, baseType: !1628, size: 64, offset: 640)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1655, file: !1656, line: 95, baseType: !1619, size: 64, offset: 704)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !1655, file: !1656, line: 97, baseType: !1628, size: 64, offset: 768)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1655, file: !1656, line: 98, baseType: !1628, size: 64, offset: 832)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1655, file: !1656, line: 100, baseType: !1712, size: 64, offset: 896)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1655, file: !1656, line: 101, baseType: !1628, size: 64, offset: 960)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !1655, file: !1656, line: 103, baseType: !1628, size: 64, offset: 1024)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !1655, file: !1656, line: 105, baseType: !1628, size: 64, offset: 1088)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1655, file: !1656, line: 107, baseType: !1623, size: 64, offset: 1152)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !1655, file: !1656, line: 109, baseType: !1740, size: 64, offset: 1216)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1742)
!1742 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !1656, line: 109, flags: DIFlagFwdDecl)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1655, file: !1656, line: 111, baseType: !1744, size: 64, offset: 1280)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !1656, line: 111, flags: DIFlagFwdDecl)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !1655, file: !1656, line: 112, baseType: !1747, offset: 1344)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1748, line: 187, elements: !137)
!1748 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !1655, file: !1656, line: 114, baseType: !1008, size: 8, offset: 1344)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !101, file: !30, line: 471, baseType: !1668, size: 64, offset: 832)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !101, file: !30, line: 473, baseType: !71, size: 64, offset: 896)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !101, file: !30, line: 475, baseType: !71, size: 64, offset: 960)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !101, file: !30, line: 480, baseType: !382, size: 192, offset: 1024)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !101, file: !30, line: 484, baseType: !1755, size: 576, offset: 1216)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !30, line: 361, size: 576, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1761, !1762}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !1755, file: !30, line: 362, baseType: !109, size: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !1755, file: !30, line: 363, baseType: !109, size: 128, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !1755, file: !30, line: 364, baseType: !109, size: 128, offset: 256)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !1755, file: !30, line: 365, baseType: !109, size: 128, offset: 384)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !1755, file: !30, line: 366, baseType: !1008, size: 8, offset: 512)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1755, file: !30, line: 367, baseType: !29, size: 32, offset: 544)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !101, file: !30, line: 485, baseType: !1764, size: 2304, offset: 1792)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !37, line: 565, size: 2304, elements: !1765)
!1765 = !{!1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1861, !1865}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !1764, file: !37, line: 566, baseType: !1715, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !1764, file: !37, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !1764, file: !37, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !1764, file: !37, line: 569, baseType: !1008, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !1764, file: !37, line: 570, baseType: !1008, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !1764, file: !37, line: 571, baseType: !1008, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !1764, file: !37, line: 572, baseType: !1008, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !1764, file: !37, line: 573, baseType: !1008, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !1764, file: !37, line: 574, baseType: !1008, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !1764, file: !37, line: 575, baseType: !1008, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !1764, file: !37, line: 576, baseType: !1008, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !1764, file: !37, line: 577, baseType: !437, size: 32, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1764, file: !37, line: 578, baseType: !123, offset: 96)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1764, file: !37, line: 580, baseType: !109, size: 128, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !1764, file: !37, line: 581, baseType: !742, size: 192, offset: 256)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !1764, file: !37, line: 582, baseType: !1782, size: 64, offset: 448)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !1784, line: 43, size: 1472, elements: !1785)
!1784 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!1785 = !{!1786, !1787, !1788, !1789, !1790, !1793, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1783, file: !1784, line: 44, baseType: !76, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1783, file: !1784, line: 45, baseType: !89, size: 32, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1783, file: !1784, line: 46, baseType: !109, size: 128, offset: 128)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1783, file: !1784, line: 47, baseType: !123, offset: 256)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !1783, file: !1784, line: 48, baseType: !1791, size: 64, offset: 256)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !37, line: 533, flags: DIFlagFwdDecl)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !1783, file: !1784, line: 49, baseType: !1794, size: 320, offset: 320)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !1795, line: 11, size: 320, elements: !1796)
!1795 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!1796 = !{!1797, !1798, !1799, !1804}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1794, file: !1795, line: 16, baseType: !706, size: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1794, file: !1795, line: 17, baseType: !214, size: 64, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1794, file: !1795, line: 18, baseType: !1800, size: 64, offset: 192)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{null, !1803}
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1794, file: !1795, line: 19, baseType: !437, size: 32, offset: 256)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !1783, file: !1784, line: 50, baseType: !214, size: 64, offset: 640)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !1783, file: !1784, line: 51, baseType: !512, size: 64, offset: 704)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !1783, file: !1784, line: 52, baseType: !512, size: 64, offset: 768)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1783, file: !1784, line: 53, baseType: !512, size: 64, offset: 832)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !1783, file: !1784, line: 54, baseType: !512, size: 64, offset: 896)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !1783, file: !1784, line: 55, baseType: !512, size: 64, offset: 960)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !1783, file: !1784, line: 56, baseType: !214, size: 64, offset: 1024)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !1783, file: !1784, line: 57, baseType: !214, size: 64, offset: 1088)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !1783, file: !1784, line: 58, baseType: !214, size: 64, offset: 1152)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !1783, file: !1784, line: 59, baseType: !214, size: 64, offset: 1216)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !1783, file: !1784, line: 60, baseType: !214, size: 64, offset: 1280)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1783, file: !1784, line: 61, baseType: !100, size: 64, offset: 1344)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1783, file: !1784, line: 62, baseType: !1008, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !1783, file: !1784, line: 63, baseType: !1008, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !1764, file: !37, line: 583, baseType: !1008, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !1764, file: !37, line: 584, baseType: !1008, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !1764, file: !37, line: 585, baseType: !1008, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !1764, file: !37, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !1764, file: !37, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !1764, file: !37, line: 592, baseType: !504, size: 512, offset: 576)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !1764, file: !37, line: 593, baseType: !283, size: 64, offset: 1088)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1764, file: !37, line: 594, baseType: !1333, size: 256, offset: 1152)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !1764, file: !37, line: 595, baseType: !713, size: 128, offset: 1408)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !1764, file: !37, line: 596, baseType: !1791, size: 64, offset: 1536)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !1764, file: !37, line: 597, baseType: !305, size: 32, offset: 1600)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !1764, file: !37, line: 598, baseType: !305, size: 32, offset: 1632)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !1764, file: !37, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !1764, file: !37, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !1764, file: !37, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !1764, file: !37, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !1764, file: !37, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !1764, file: !37, line: 604, baseType: !1008, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !1764, file: !37, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !1764, file: !37, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !1764, file: !37, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !1764, file: !37, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !1764, file: !37, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !1764, file: !37, line: 610, baseType: !7, size: 32, offset: 1696)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1764, file: !37, line: 611, baseType: !36, size: 32, offset: 1728)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !1764, file: !37, line: 612, baseType: !44, size: 32, offset: 1760)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !1764, file: !37, line: 613, baseType: !89, size: 32, offset: 1792)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !1764, file: !37, line: 614, baseType: !89, size: 32, offset: 1824)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !1764, file: !37, line: 615, baseType: !283, size: 64, offset: 1856)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !1764, file: !37, line: 616, baseType: !283, size: 64, offset: 1920)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !1764, file: !37, line: 617, baseType: !283, size: 64, offset: 1984)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !1764, file: !37, line: 618, baseType: !283, size: 64, offset: 2048)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !1764, file: !37, line: 620, baseType: !1852, size: 64, offset: 2112)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !37, line: 536, size: 256, elements: !1854)
!1854 = !{!1855, !1856, !1857, !1858}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1853, file: !37, line: 537, baseType: !123)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1853, file: !37, line: 538, baseType: !7, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !1853, file: !37, line: 540, baseType: !109, size: 128, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !1853, file: !37, line: 543, baseType: !1859, size: 64, offset: 192)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !37, line: 534, flags: DIFlagFwdDecl)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !1764, file: !37, line: 621, baseType: !1862, size: 64, offset: 2176)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{null, !100, !666}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !1764, file: !37, line: 622, baseType: !1866, size: 64, offset: 2240)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1867 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !37, line: 622, flags: DIFlagFwdDecl)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !101, file: !30, line: 486, baseType: !1869, size: 64, offset: 4096)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !37, line: 642, size: 1792, elements: !1871)
!1871 = !{!1872, !1873, !1874, !1878, !1879, !1880}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1870, file: !37, line: 643, baseType: !1625, size: 1472)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1870, file: !37, line: 644, baseType: !1628, size: 64, offset: 1472)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !1870, file: !37, line: 645, baseType: !1875, size: 64, offset: 1536)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{null, !100, !1008}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !1870, file: !37, line: 646, baseType: !1628, size: 64, offset: 1600)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !1870, file: !37, line: 647, baseType: !1619, size: 64, offset: 1664)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !1870, file: !37, line: 648, baseType: !1619, size: 64, offset: 1728)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !101, file: !30, line: 493, baseType: !1882, size: 64, offset: 4160)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !30, line: 493, flags: DIFlagFwdDecl)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !101, file: !30, line: 499, baseType: !109, size: 128, offset: 4224)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !101, file: !30, line: 502, baseType: !1886, size: 64, offset: 4352)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1888)
!1888 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !30, line: 502, flags: DIFlagFwdDecl)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !101, file: !30, line: 504, baseType: !1890, size: 64, offset: 4416)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !101, file: !30, line: 505, baseType: !283, size: 64, offset: 4480)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !101, file: !30, line: 510, baseType: !283, size: 64, offset: 4544)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !101, file: !30, line: 511, baseType: !1894, size: 64, offset: 4608)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1896)
!1896 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !30, line: 511, flags: DIFlagFwdDecl)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !101, file: !30, line: 513, baseType: !1898, size: 64, offset: 4672)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !30, line: 288, size: 128, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !1899, file: !30, line: 293, baseType: !7, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !1899, file: !30, line: 294, baseType: !214, size: 64, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !101, file: !30, line: 515, baseType: !109, size: 128, offset: 4736)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !101, file: !30, line: 526, baseType: !1905, offset: 4864)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !1906, line: 5, elements: !137)
!1906 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !101, file: !30, line: 528, baseType: !1908, size: 64, offset: 4864)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !1910, line: 51, size: 1344, elements: !1911)
!1910 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!1911 = !{!1912, !1913, !1915, !1916, !2006, !2015, !2016, !2017, !2018, !2019, !2020, !2021}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1909, file: !1910, line: 52, baseType: !76, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !1909, file: !1910, line: 53, baseType: !1914, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !1910, line: 28, baseType: !437)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !1909, file: !1910, line: 54, baseType: !76, size: 64, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1909, file: !1910, line: 55, baseType: !1917, size: 192, offset: 192)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !1918, line: 17, size: 192, elements: !1919)
!1918 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!1919 = !{!1920, !1922, !2005}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !1917, file: !1918, line: 18, baseType: !1921, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1917, file: !1918, line: 19, baseType: !1923, size: 64, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !1918, line: 110, size: 1152, elements: !1926)
!1926 = !{!1927, !1931, !1935, !1941, !1947, !1951, !1955, !1960, !1964, !1965, !1969, !1973, !1977, !1988, !1989, !1990, !1991, !2001}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1925, file: !1918, line: 111, baseType: !1928, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!1921, !1921}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !1925, file: !1918, line: 112, baseType: !1932, size: 64, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{null, !1921}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !1925, file: !1918, line: 113, baseType: !1936, size: 64, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!1008, !1939}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1917)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !1925, file: !1918, line: 114, baseType: !1942, size: 64, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!1399, !1939, !1945}
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !101)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !1925, file: !1918, line: 116, baseType: !1948, size: 64, offset: 256)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!1008, !1939, !76}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !1925, file: !1918, line: 118, baseType: !1952, size: 64, offset: 320)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{!89, !1939, !76, !7, !71, !211}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !1925, file: !1918, line: 123, baseType: !1956, size: 64, offset: 384)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!89, !1939, !76, !1959, !211}
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !1925, file: !1918, line: 126, baseType: !1961, size: 64, offset: 448)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!76, !1939}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !1925, file: !1918, line: 127, baseType: !1961, size: 64, offset: 512)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !1925, file: !1918, line: 128, baseType: !1966, size: 64, offset: 576)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DISubroutineType(types: !1968)
!1968 = !{!1921, !1939}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !1925, file: !1918, line: 130, baseType: !1970, size: 64, offset: 640)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!1921, !1939, !1921}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !1925, file: !1918, line: 133, baseType: !1974, size: 64, offset: 704)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!1921, !1939, !76}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !1925, file: !1918, line: 135, baseType: !1978, size: 64, offset: 768)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!89, !1939, !76, !76, !7, !7, !1981}
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !1918, line: 43, size: 640, elements: !1983)
!1983 = !{!1984, !1985, !1986}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1982, file: !1918, line: 44, baseType: !1921, size: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1982, file: !1918, line: 45, baseType: !7, size: 32, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1982, file: !1918, line: 46, baseType: !1987, size: 512, offset: 128)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 512, elements: !542)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !1925, file: !1918, line: 140, baseType: !1970, size: 64, offset: 832)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !1925, file: !1918, line: 143, baseType: !1966, size: 64, offset: 896)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !1925, file: !1918, line: 145, baseType: !1928, size: 64, offset: 960)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !1925, file: !1918, line: 146, baseType: !1992, size: 64, offset: 1024)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!89, !1939, !1995}
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !1918, line: 29, size: 128, elements: !1997)
!1997 = !{!1998, !1999, !2000}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1996, file: !1918, line: 30, baseType: !7, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1996, file: !1918, line: 31, baseType: !7, size: 32, offset: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !1996, file: !1918, line: 32, baseType: !1939, size: 64, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !1925, file: !1918, line: 148, baseType: !2002, size: 64, offset: 1088)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DISubroutineType(types: !2004)
!2004 = !{!89, !1939, !100}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1917, file: !1918, line: 20, baseType: !100, size: 64, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1909, file: !1910, line: 57, baseType: !2007, size: 64, offset: 384)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !1910, line: 31, size: 704, elements: !2009)
!2009 = !{!2010, !2011, !2012, !2013, !2014}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2008, file: !1910, line: 32, baseType: !164, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2008, file: !1910, line: 33, baseType: !89, size: 32, offset: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2008, file: !1910, line: 34, baseType: !71, size: 64, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2008, file: !1910, line: 35, baseType: !2007, size: 64, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2008, file: !1910, line: 43, baseType: !233, size: 448, offset: 256)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !1909, file: !1910, line: 58, baseType: !2007, size: 64, offset: 448)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1909, file: !1910, line: 59, baseType: !1908, size: 64, offset: 512)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1909, file: !1910, line: 60, baseType: !1908, size: 64, offset: 576)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1909, file: !1910, line: 61, baseType: !1908, size: 64, offset: 640)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1909, file: !1910, line: 63, baseType: !104, size: 512, offset: 704)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1909, file: !1910, line: 65, baseType: !214, size: 64, offset: 1216)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1909, file: !1910, line: 66, baseType: !71, size: 64, offset: 1280)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !101, file: !30, line: 529, baseType: !1921, size: 64, offset: 4928)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !101, file: !30, line: 534, baseType: !2024, size: 32, offset: 4992)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !110, line: 16, baseType: !2025)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !110, line: 13, baseType: !437)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !101, file: !30, line: 535, baseType: !437, size: 32, offset: 5024)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !101, file: !30, line: 537, baseType: !123, offset: 5056)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !101, file: !30, line: 538, baseType: !109, size: 128, offset: 5056)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !101, file: !30, line: 540, baseType: !2030, size: 64, offset: 5184)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !2032, line: 54, size: 960, elements: !2033)
!2032 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!2033 = !{!2034, !2035, !2036, !2037, !2038, !2039, !2040, !2044, !2048, !2049, !2050, !2051, !2055, !2059, !2060}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2031, file: !2032, line: 55, baseType: !76, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2031, file: !2032, line: 56, baseType: !1674, size: 64, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !2031, file: !2032, line: 58, baseType: !218, size: 64, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2031, file: !2032, line: 59, baseType: !218, size: 64, offset: 192)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !2031, file: !2032, line: 60, baseType: !116, size: 64, offset: 256)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !2031, file: !2032, line: 62, baseType: !1610, size: 64, offset: 320)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2031, file: !2032, line: 63, baseType: !2041, size: 64, offset: 384)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{!164, !100, !1617}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !2031, file: !2032, line: 65, baseType: !2045, size: 64, offset: 448)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{null, !2030}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !2031, file: !2032, line: 66, baseType: !1619, size: 64, offset: 512)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !2031, file: !2032, line: 68, baseType: !1628, size: 64, offset: 576)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !2031, file: !2032, line: 70, baseType: !1382, size: 64, offset: 640)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2031, file: !2032, line: 71, baseType: !2052, size: 64, offset: 704)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!1399, !100}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2031, file: !2032, line: 73, baseType: !2056, size: 64, offset: 768)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{null, !100, !1419, !1426}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2031, file: !2032, line: 75, baseType: !1623, size: 64, offset: 832)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2031, file: !2032, line: 77, baseType: !1744, size: 64, offset: 896)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !101, file: !30, line: 541, baseType: !218, size: 64, offset: 5248)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !101, file: !30, line: 543, baseType: !1619, size: 64, offset: 5312)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !101, file: !30, line: 544, baseType: !2064, size: 64, offset: 5376)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !30, line: 45, flags: DIFlagFwdDecl)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !101, file: !30, line: 545, baseType: !2067, size: 64, offset: 5440)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !30, line: 47, flags: DIFlagFwdDecl)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !101, file: !30, line: 547, baseType: !1008, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !101, file: !30, line: 548, baseType: !1008, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !101, file: !30, line: 549, baseType: !1008, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !101, file: !30, line: 550, baseType: !1008, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !96, file: !3, line: 100, baseType: !76, size: 64, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "con_id", scope: !96, file: !3, line: 101, baseType: !76, size: 64, offset: 192)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !96, file: !3, line: 102, baseType: !214, size: 64, offset: 256)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !96, file: !3, line: 103, baseType: !214, size: 64, offset: 320)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "exclusive_count", scope: !96, file: !3, line: 104, baseType: !7, size: 32, offset: 384)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "clks_node", scope: !96, file: !3, line: 105, baseType: !706, size: 128, offset: 448)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !91, file: !83, line: 315, baseType: !2080, size: 64, offset: 128)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2082)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_init_data", file: !83, line: 285, size: 448, elements: !2083)
!2083 = !{!2084, !2085, !2086, !2089, !2100, !2102, !2103}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2082, file: !83, line: 286, baseType: !76, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2082, file: !83, line: 287, baseType: !80, size: 64, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "parent_names", scope: !2082, file: !83, line: 289, baseType: !2087, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !76)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !2082, file: !83, line: 290, baseType: !2090, size: 64, offset: 192)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2092)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_parent_data", file: !83, line: 264, size: 256, elements: !2093)
!2093 = !{!2094, !2097, !2098, !2099}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !2092, file: !83, line: 265, baseType: !2095, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !91)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "fw_name", scope: !2092, file: !83, line: 266, baseType: !76, size: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2092, file: !83, line: 267, baseType: !76, size: 64, offset: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2092, file: !83, line: 268, baseType: !89, size: 32, offset: 192)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "parent_hws", scope: !2082, file: !83, line: 291, baseType: !2101, size: 64, offset: 256)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "num_parents", scope: !2082, file: !83, line: 292, baseType: !573, size: 8, offset: 320)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2082, file: !83, line: 293, baseType: !214, size: 64, offset: 384)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare", scope: !82, file: !83, line: 222, baseType: !2105, size: 64, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{null, !90}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !82, file: !83, line: 223, baseType: !86, size: 64, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_unused", scope: !82, file: !83, line: 224, baseType: !2105, size: 64, offset: 192)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !82, file: !83, line: 225, baseType: !86, size: 64, offset: 256)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !82, file: !83, line: 226, baseType: !2105, size: 64, offset: 320)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "is_enabled", scope: !82, file: !83, line: 227, baseType: !86, size: 64, offset: 384)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "disable_unused", scope: !82, file: !83, line: 228, baseType: !2105, size: 64, offset: 448)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "save_context", scope: !82, file: !83, line: 229, baseType: !86, size: 64, offset: 512)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "restore_context", scope: !82, file: !83, line: 230, baseType: !2105, size: 64, offset: 576)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "recalc_rate", scope: !82, file: !83, line: 231, baseType: !2117, size: 64, offset: 640)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!214, !90, !214}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "round_rate", scope: !82, file: !83, line: 233, baseType: !2121, size: 64, offset: 704)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{!199, !90, !214, !2124}
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "determine_rate", scope: !82, file: !83, line: 235, baseType: !2126, size: 64, offset: 768)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!89, !90, !2129}
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_rate_request", file: !83, line: 55, size: 320, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2136}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !2130, file: !83, line: 56, baseType: !214, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !2130, file: !83, line: 57, baseType: !214, size: 64, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !2130, file: !83, line: 58, baseType: !214, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "best_parent_rate", scope: !2130, file: !83, line: 59, baseType: !214, size: 64, offset: 192)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "best_parent_hw", scope: !2130, file: !83, line: 60, baseType: !90, size: 64, offset: 256)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "set_parent", scope: !82, file: !83, line: 237, baseType: !2138, size: 64, offset: 832)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!89, !90, !573}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !82, file: !83, line: 238, baseType: !2142, size: 64, offset: 896)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!573, !90}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !82, file: !83, line: 239, baseType: !2146, size: 64, offset: 960)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!89, !90, !214, !214}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate_and_parent", scope: !82, file: !83, line: 241, baseType: !2150, size: 64, offset: 1024)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!89, !90, !214, !214, !573}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "recalc_accuracy", scope: !82, file: !83, line: 244, baseType: !2117, size: 64, offset: 1088)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "get_phase", scope: !82, file: !83, line: 246, baseType: !86, size: 64, offset: 1152)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "set_phase", scope: !82, file: !83, line: 247, baseType: !2156, size: 64, offset: 1216)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = !DISubroutineType(types: !2158)
!2158 = !{!89, !90, !89}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "get_duty_cycle", scope: !82, file: !83, line: 248, baseType: !2160, size: 64, offset: 1280)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = !DISubroutineType(types: !2162)
!2162 = !{!89, !90, !2163}
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_duty", file: !83, line: 69, size: 64, elements: !2165)
!2165 = !{!2166, !2167}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2164, file: !83, line: 70, baseType: !7, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !2164, file: !83, line: 71, baseType: !7, size: 32, offset: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "set_duty_cycle", scope: !82, file: !83, line: 250, baseType: !2160, size: 64, offset: 1344)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !82, file: !83, line: 252, baseType: !86, size: 64, offset: 1408)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "terminate", scope: !82, file: !83, line: 253, baseType: !2105, size: 64, offset: 1472)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "debug_init", scope: !82, file: !83, line: 254, baseType: !2172, size: 64, offset: 1536)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{null, !90, !2175}
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1436, line: 21, flags: DIFlagFwdDecl)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !73, file: !3, line: 59, baseType: !90, size: 64, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !73, file: !3, line: 60, baseType: !1674, size: 64, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !73, file: !3, line: 61, baseType: !100, size: 64, offset: 256)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !73, file: !3, line: 62, baseType: !1908, size: 64, offset: 320)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !73, file: !3, line: 63, baseType: !72, size: 64, offset: 384)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !73, file: !3, line: 64, baseType: !2183, size: 64, offset: 448)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_parent_map", file: !3, line: 48, size: 320, elements: !2185)
!2185 = !{!2186, !2187, !2188, !2189, !2190}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !2184, file: !3, line: 49, baseType: !2095, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2184, file: !3, line: 50, baseType: !72, size: 64, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "fw_name", scope: !2184, file: !3, line: 51, baseType: !76, size: 64, offset: 128)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2184, file: !3, line: 52, baseType: !76, size: 64, offset: 192)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2184, file: !3, line: 53, baseType: !89, size: 32, offset: 256)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "num_parents", scope: !73, file: !3, line: 65, baseType: !573, size: 8, offset: 512)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "new_parent_index", scope: !73, file: !3, line: 66, baseType: !573, size: 8, offset: 520)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !73, file: !3, line: 67, baseType: !214, size: 64, offset: 576)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "req_rate", scope: !73, file: !3, line: 68, baseType: !214, size: 64, offset: 640)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "new_rate", scope: !73, file: !3, line: 69, baseType: !214, size: 64, offset: 704)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "new_parent", scope: !73, file: !3, line: 70, baseType: !72, size: 64, offset: 768)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "new_child", scope: !73, file: !3, line: 71, baseType: !72, size: 64, offset: 832)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !73, file: !3, line: 72, baseType: !214, size: 64, offset: 896)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "orphan", scope: !73, file: !3, line: 73, baseType: !1008, size: 8, offset: 960)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_enabled", scope: !73, file: !3, line: 74, baseType: !1008, size: 8, offset: 968)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !73, file: !3, line: 75, baseType: !7, size: 32, offset: 992)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !73, file: !3, line: 76, baseType: !7, size: 32, offset: 1024)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "protect_count", scope: !73, file: !3, line: 77, baseType: !7, size: 32, offset: 1056)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !73, file: !3, line: 78, baseType: !214, size: 64, offset: 1088)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !73, file: !3, line: 79, baseType: !214, size: 64, offset: 1152)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !73, file: !3, line: 80, baseType: !214, size: 64, offset: 1216)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !73, file: !3, line: 81, baseType: !89, size: 32, offset: 1280)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "duty", scope: !73, file: !3, line: 82, baseType: !2164, size: 64, offset: 1312)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !73, file: !3, line: 83, baseType: !702, size: 64, offset: 1408)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "child_node", scope: !73, file: !3, line: 84, baseType: !706, size: 128, offset: 1472)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "clks", scope: !73, file: !3, line: 85, baseType: !702, size: 64, offset: 1600)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_count", scope: !73, file: !3, line: 86, baseType: !7, size: 32, offset: 1664)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !73, file: !3, line: 91, baseType: !1588, size: 32, offset: 1696)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_notifier", file: !2216, line: 54, size: 1024, elements: !2217)
!2216 = !DIFile(filename: "./include/linux/clk.h", directory: "/home/lizy2001/genbc/linux")
!2217 = !{!2218, !2219, !2249}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "clk", scope: !2215, file: !2216, line: 55, baseType: !95, size: 64)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_head", scope: !2215, file: !2216, line: 56, baseType: !2220, size: 832, offset: 64)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_notifier_head", file: !2221, line: 74, size: 832, elements: !2222)
!2221 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2222 = !{!2223, !2224, !2238}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2220, file: !2221, line: 75, baseType: !382, size: 192)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !2220, file: !2221, line: 76, baseType: !2225, size: 576, offset: 192)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !2226, line: 16, size: 576, elements: !2227)
!2226 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!2227 = !{!2228, !2230, !2231, !2232, !2233, !2234, !2235, !2237}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !2225, file: !2226, line: 17, baseType: !2229, size: 32)
!2229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !416, size: 32, elements: !980)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !2225, file: !2226, line: 18, baseType: !416, size: 16, offset: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !2225, file: !2226, line: 19, baseType: !573, size: 8, offset: 48)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !2225, file: !2226, line: 20, baseType: !573, size: 8, offset: 56)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !2225, file: !2226, line: 21, baseType: !747, size: 128, offset: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !2225, file: !2226, line: 23, baseType: !723, size: 64, offset: 192)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !2225, file: !2226, line: 24, baseType: !2236, size: 64, offset: 256)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !2225, file: !2226, line: 25, baseType: !1333, size: 256, offset: 320)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2220, file: !2221, line: 77, baseType: !2239, size: 64, offset: 768)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2221, line: 54, size: 192, elements: !2241)
!2241 = !{!2242, !2247, !2248}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2240, file: !2221, line: 55, baseType: !2243, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2221, line: 51, baseType: !2244)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{!89, !2239, !214, !71}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2240, file: !2221, line: 56, baseType: !2239, size: 64, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2240, file: !2221, line: 57, baseType: !89, size: 32, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2215, file: !2216, line: 57, baseType: !109, size: 128, offset: 896)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_clk_provider", file: !3, line: 4355, size: 384, elements: !2252)
!2252 = !{!2253, !2254, !2255, !2267, !2271}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2251, file: !3, line: 4356, baseType: !109, size: 128)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2251, file: !3, line: 4358, baseType: !1908, size: 64, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2251, file: !3, line: 4359, baseType: !2256, size: 64, offset: 192)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{!95, !2259, !71}
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_phandle_args", file: !1910, line: 74, size: 640, elements: !2261)
!2261 = !{!2262, !2263, !2264}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !2260, file: !1910, line: 75, baseType: !1908, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "args_count", scope: !2260, file: !1910, line: 76, baseType: !89, size: 32, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2260, file: !1910, line: 77, baseType: !2265, size: 512, offset: 96)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2266, size: 512, elements: !799)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !110, line: 104, baseType: !437)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "get_hw", scope: !2251, file: !3, line: 4360, baseType: !2268, size: 64, offset: 256)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{!90, !2259, !71}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2251, file: !3, line: 4361, baseType: !71, size: 64, offset: 320)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_provider", file: !3, line: 4876, size: 256, elements: !2274)
!2274 = !{!2275, !2279, !2280}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "clk_init_cb", scope: !2273, file: !3, line: 4877, baseType: !2276, size: 64)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{null, !1908}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !2273, file: !3, line: 4878, baseType: !1908, size: 64, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2273, file: !3, line: 4879, baseType: !109, size: 128, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2283)
!2283 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !89)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !437)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !705)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !710)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2288)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2297)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !78)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!2304 = !{!2305, !2316, !2318, !2320, !2322, !2324, !2326, !0, !2328, !2330, !2335, !2337, !2339, !2341, !2343, !2347, !2349, !2351}
!2305 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression())
!2306 = distinct !DIGlobalVariable(name: "__setup_clk_ignore_unused_setup", scope: !2, file: !3, line: 1270, type: !2307, isLocal: true, isDefinition: true, align: 64)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obs_kernel_param", file: !2308, line: 241, size: 192, elements: !2309)
!2308 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!2309 = !{!2310, !2311, !2315}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2307, file: !2308, line: 242, baseType: !76, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "setup_func", scope: !2307, file: !2308, line: 243, baseType: !2312, size: 64, offset: 64)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!89, !164}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "early", scope: !2307, file: !2308, line: 244, baseType: !89, size: 32, offset: 128)
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_clk_disable_unused217", scope: !2, file: !3, line: 1299, type: !71, isLocal: true, isDefinition: true)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "__clk_of_table_sentinel", scope: !2, file: !3, line: 4365, type: !1682, isLocal: true, isDefinition: true)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "prepare_lock", scope: !2, file: !3, line: 28, type: !382, isLocal: true, isDefinition: true)
!2322 = !DIGlobalVariableExpression(var: !2323, expr: !DIExpression())
!2323 = distinct !DIGlobalVariable(name: "prepare_owner", scope: !2, file: !3, line: 30, type: !427, isLocal: true, isDefinition: true)
!2324 = !DIGlobalVariableExpression(var: !2325, expr: !DIExpression())
!2325 = distinct !DIGlobalVariable(name: "prepare_refcnt", scope: !2, file: !3, line: 33, type: !89, isLocal: true, isDefinition: true)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "enable_lock", scope: !2, file: !3, line: 27, type: !123, isLocal: true, isDefinition: true)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "clk_orphan_list", scope: !2, file: !3, line: 37, type: !702, isLocal: true, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "__setup_str_clk_ignore_unused_setup", scope: !2, file: !3, line: 1270, type: !2332, isLocal: true, isDefinition: true, align: 8)
!2332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 144, elements: !2333)
!2333 = !{!2334}
!2334 = !DISubrange(count: 18)
!2335 = !DIGlobalVariableExpression(var: !2336, expr: !DIExpression())
!2336 = distinct !DIGlobalVariable(name: "clk_ignore_unused", scope: !2, file: !3, line: 1264, type: !1008, isLocal: true, isDefinition: true)
!2337 = !DIGlobalVariableExpression(var: !2338, expr: !DIExpression())
!2338 = distinct !DIGlobalVariable(name: "clk_nodrv_ops", scope: !2, file: !3, line: 3962, type: !81, isLocal: true, isDefinition: true)
!2339 = !DIGlobalVariableExpression(var: !2340, expr: !DIExpression())
!2340 = distinct !DIGlobalVariable(name: "enable_owner", scope: !2, file: !3, line: 31, type: !427, isLocal: true, isDefinition: true)
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "enable_refcnt", scope: !2, file: !3, line: 34, type: !89, isLocal: true, isDefinition: true)
!2343 = !DIGlobalVariableExpression(var: !2344, expr: !DIExpression())
!2344 = distinct !DIGlobalVariable(name: "all_lists", scope: !2, file: !3, line: 40, type: !2345, isLocal: true, isDefinition: true)
!2345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2346, size: 192, elements: !165)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "clk_notifier_list", scope: !2, file: !3, line: 38, type: !109, isLocal: true, isDefinition: true)
!2349 = !DIGlobalVariableExpression(var: !2350, expr: !DIExpression())
!2350 = distinct !DIGlobalVariable(name: "of_clk_mutex", scope: !2, file: !3, line: 4369, type: !382, isLocal: true, isDefinition: true)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "of_clk_providers", scope: !2, file: !3, line: 4368, type: !109, isLocal: true, isDefinition: true)
!2353 = !{!"rsp"}
!2354 = !{i32 7, !"Dwarf Version", i32 4}
!2355 = !{i32 2, !"Debug Info Version", i32 3}
!2356 = !{i32 1, !"wchar_size", i32 2}
!2357 = !{i32 1, !"Code Model", i32 2}
!2358 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!2359 = distinct !DISubprogram(name: "__clk_get_name", scope: !3, file: !3, line: 264, type: !2360, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{!76, !2362}
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !96)
!2364 = !DILocalVariable(name: "clk", arg: 1, scope: !2359, file: !3, line: 264, type: !2362)
!2365 = !DILocation(line: 264, column: 46, scope: !2359)
!2366 = !DILocation(line: 266, column: 10, scope: !2359)
!2367 = !DILocation(line: 266, column: 9, scope: !2359)
!2368 = !DILocation(line: 266, column: 23, scope: !2359)
!2369 = !DILocation(line: 266, column: 28, scope: !2359)
!2370 = !DILocation(line: 266, column: 34, scope: !2359)
!2371 = !DILocation(line: 266, column: 2, scope: !2359)
!2372 = distinct !DISubprogram(name: "clk_hw_get_name", scope: !3, file: !3, line: 270, type: !2373, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2373 = !DISubroutineType(types: !2374)
!2374 = !{!76, !2095}
!2375 = !DILocalVariable(name: "hw", arg: 1, scope: !2372, file: !3, line: 270, type: !2095)
!2376 = !DILocation(line: 270, column: 50, scope: !2372)
!2377 = !DILocation(line: 272, column: 9, scope: !2372)
!2378 = !DILocation(line: 272, column: 13, scope: !2372)
!2379 = !DILocation(line: 272, column: 19, scope: !2372)
!2380 = !DILocation(line: 272, column: 2, scope: !2372)
!2381 = distinct !DISubprogram(name: "__clk_get_hw", scope: !3, file: !3, line: 276, type: !2382, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!90, !95}
!2384 = !DILocalVariable(name: "clk", arg: 1, scope: !2381, file: !3, line: 276, type: !95)
!2385 = !DILocation(line: 276, column: 41, scope: !2381)
!2386 = !DILocation(line: 278, column: 10, scope: !2381)
!2387 = !DILocation(line: 278, column: 9, scope: !2381)
!2388 = !DILocation(line: 278, column: 23, scope: !2381)
!2389 = !DILocation(line: 278, column: 28, scope: !2381)
!2390 = !DILocation(line: 278, column: 34, scope: !2381)
!2391 = !DILocation(line: 278, column: 2, scope: !2381)
!2392 = distinct !DISubprogram(name: "clk_hw_get_num_parents", scope: !3, file: !3, line: 282, type: !2393, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!7, !2095}
!2395 = !DILocalVariable(name: "hw", arg: 1, scope: !2392, file: !3, line: 282, type: !2095)
!2396 = !DILocation(line: 282, column: 58, scope: !2392)
!2397 = !DILocation(line: 284, column: 9, scope: !2392)
!2398 = !DILocation(line: 284, column: 13, scope: !2392)
!2399 = !DILocation(line: 284, column: 19, scope: !2392)
!2400 = !DILocation(line: 284, column: 2, scope: !2392)
!2401 = distinct !DISubprogram(name: "clk_hw_get_parent", scope: !3, file: !3, line: 288, type: !2402, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{!90, !2095}
!2404 = !DILocalVariable(name: "hw", arg: 1, scope: !2401, file: !3, line: 288, type: !2095)
!2405 = !DILocation(line: 288, column: 55, scope: !2401)
!2406 = !DILocation(line: 290, column: 9, scope: !2401)
!2407 = !DILocation(line: 290, column: 13, scope: !2401)
!2408 = !DILocation(line: 290, column: 19, scope: !2401)
!2409 = !DILocation(line: 290, column: 28, scope: !2401)
!2410 = !DILocation(line: 290, column: 32, scope: !2401)
!2411 = !DILocation(line: 290, column: 38, scope: !2401)
!2412 = !DILocation(line: 290, column: 46, scope: !2401)
!2413 = !DILocation(line: 290, column: 2, scope: !2401)
!2414 = distinct !DISubprogram(name: "clk_hw_get_parent_by_index", scope: !3, file: !3, line: 458, type: !2415, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!90, !2095, !7}
!2417 = !DILocalVariable(name: "hw", arg: 1, scope: !2414, file: !3, line: 458, type: !2095)
!2418 = !DILocation(line: 458, column: 49, scope: !2414)
!2419 = !DILocalVariable(name: "index", arg: 2, scope: !2414, file: !3, line: 458, type: !7)
!2420 = !DILocation(line: 458, column: 66, scope: !2414)
!2421 = !DILocalVariable(name: "parent", scope: !2414, file: !3, line: 460, type: !72)
!2422 = !DILocation(line: 460, column: 19, scope: !2414)
!2423 = !DILocation(line: 462, column: 40, scope: !2414)
!2424 = !DILocation(line: 462, column: 44, scope: !2414)
!2425 = !DILocation(line: 462, column: 50, scope: !2414)
!2426 = !DILocation(line: 462, column: 11, scope: !2414)
!2427 = !DILocation(line: 462, column: 9, scope: !2414)
!2428 = !DILocation(line: 464, column: 10, scope: !2414)
!2429 = !DILocation(line: 464, column: 9, scope: !2414)
!2430 = !DILocation(line: 464, column: 26, scope: !2414)
!2431 = !DILocation(line: 464, column: 34, scope: !2414)
!2432 = !DILocation(line: 464, column: 2, scope: !2414)
!2433 = distinct !DISubprogram(name: "clk_core_get_parent_by_index", scope: !3, file: !3, line: 445, type: !2434, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!72, !72, !573}
!2436 = !DILocalVariable(name: "core", arg: 1, scope: !2433, file: !3, line: 445, type: !72)
!2437 = !DILocation(line: 445, column: 71, scope: !2433)
!2438 = !DILocalVariable(name: "index", arg: 2, scope: !2433, file: !3, line: 446, type: !573)
!2439 = !DILocation(line: 446, column: 12, scope: !2433)
!2440 = !DILocation(line: 448, column: 7, scope: !2441)
!2441 = distinct !DILexicalBlock(scope: !2433, file: !3, line: 448, column: 6)
!2442 = !DILocation(line: 448, column: 12, scope: !2441)
!2443 = !DILocation(line: 448, column: 15, scope: !2441)
!2444 = !DILocation(line: 448, column: 24, scope: !2441)
!2445 = !DILocation(line: 448, column: 30, scope: !2441)
!2446 = !DILocation(line: 448, column: 21, scope: !2441)
!2447 = !DILocation(line: 448, column: 42, scope: !2441)
!2448 = !DILocation(line: 448, column: 46, scope: !2441)
!2449 = !DILocation(line: 448, column: 52, scope: !2441)
!2450 = !DILocation(line: 448, column: 6, scope: !2433)
!2451 = !DILocation(line: 449, column: 3, scope: !2441)
!2452 = !DILocation(line: 451, column: 7, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2433, file: !3, line: 451, column: 6)
!2454 = !DILocation(line: 451, column: 13, scope: !2453)
!2455 = !DILocation(line: 451, column: 21, scope: !2453)
!2456 = !DILocation(line: 451, column: 28, scope: !2453)
!2457 = !DILocation(line: 451, column: 6, scope: !2433)
!2458 = !DILocation(line: 452, column: 30, scope: !2453)
!2459 = !DILocation(line: 452, column: 36, scope: !2453)
!2460 = !DILocation(line: 452, column: 3, scope: !2453)
!2461 = !DILocation(line: 454, column: 9, scope: !2433)
!2462 = !DILocation(line: 454, column: 15, scope: !2433)
!2463 = !DILocation(line: 454, column: 23, scope: !2433)
!2464 = !DILocation(line: 454, column: 30, scope: !2433)
!2465 = !DILocation(line: 454, column: 2, scope: !2433)
!2466 = !DILocation(line: 455, column: 1, scope: !2433)
!2467 = distinct !DISubprogram(name: "__clk_get_enable_count", scope: !3, file: !3, line: 468, type: !2468, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2468 = !DISubroutineType(types: !2469)
!2469 = !{!7, !95}
!2470 = !DILocalVariable(name: "clk", arg: 1, scope: !2467, file: !3, line: 468, type: !95)
!2471 = !DILocation(line: 468, column: 49, scope: !2467)
!2472 = !DILocation(line: 470, column: 10, scope: !2467)
!2473 = !DILocation(line: 470, column: 9, scope: !2467)
!2474 = !DILocation(line: 470, column: 20, scope: !2467)
!2475 = !DILocation(line: 470, column: 25, scope: !2467)
!2476 = !DILocation(line: 470, column: 31, scope: !2467)
!2477 = !DILocation(line: 470, column: 2, scope: !2467)
!2478 = distinct !DISubprogram(name: "clk_hw_get_rate", scope: !3, file: !3, line: 489, type: !2479, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!214, !2095}
!2481 = !DILocalVariable(name: "hw", arg: 1, scope: !2478, file: !3, line: 489, type: !2095)
!2482 = !DILocation(line: 489, column: 52, scope: !2478)
!2483 = !DILocation(line: 491, column: 34, scope: !2478)
!2484 = !DILocation(line: 491, column: 38, scope: !2478)
!2485 = !DILocation(line: 491, column: 9, scope: !2478)
!2486 = !DILocation(line: 491, column: 2, scope: !2478)
!2487 = distinct !DISubprogram(name: "clk_core_get_rate_nolock", scope: !3, file: !3, line: 473, type: !2488, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{!214, !72}
!2490 = !DILocalVariable(name: "core", arg: 1, scope: !2487, file: !3, line: 473, type: !72)
!2491 = !DILocation(line: 473, column: 64, scope: !2487)
!2492 = !DILocation(line: 475, column: 7, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 475, column: 6)
!2494 = !DILocation(line: 475, column: 6, scope: !2487)
!2495 = !DILocation(line: 476, column: 3, scope: !2493)
!2496 = !DILocation(line: 478, column: 7, scope: !2497)
!2497 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 478, column: 6)
!2498 = !DILocation(line: 478, column: 13, scope: !2497)
!2499 = !DILocation(line: 478, column: 25, scope: !2497)
!2500 = !DILocation(line: 478, column: 28, scope: !2497)
!2501 = !DILocation(line: 478, column: 34, scope: !2497)
!2502 = !DILocation(line: 478, column: 6, scope: !2487)
!2503 = !DILocation(line: 479, column: 10, scope: !2497)
!2504 = !DILocation(line: 479, column: 16, scope: !2497)
!2505 = !DILocation(line: 479, column: 3, scope: !2497)
!2506 = !DILocation(line: 486, column: 2, scope: !2487)
!2507 = !DILocation(line: 487, column: 1, scope: !2487)
!2508 = distinct !DISubprogram(name: "clk_hw_get_flags", scope: !3, file: !3, line: 503, type: !2479, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2509 = !DILocalVariable(name: "hw", arg: 1, scope: !2508, file: !3, line: 503, type: !2095)
!2510 = !DILocation(line: 503, column: 53, scope: !2508)
!2511 = !DILocation(line: 505, column: 9, scope: !2508)
!2512 = !DILocation(line: 505, column: 13, scope: !2508)
!2513 = !DILocation(line: 505, column: 19, scope: !2508)
!2514 = !DILocation(line: 505, column: 2, scope: !2508)
!2515 = distinct !DISubprogram(name: "clk_hw_is_prepared", scope: !3, file: !3, line: 509, type: !2516, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{!1008, !2095}
!2518 = !DILocalVariable(name: "hw", arg: 1, scope: !2515, file: !3, line: 509, type: !2095)
!2519 = !DILocation(line: 509, column: 46, scope: !2515)
!2520 = !DILocation(line: 511, column: 30, scope: !2515)
!2521 = !DILocation(line: 511, column: 34, scope: !2515)
!2522 = !DILocation(line: 511, column: 9, scope: !2515)
!2523 = !DILocation(line: 511, column: 2, scope: !2515)
!2524 = distinct !DISubprogram(name: "clk_core_is_prepared", scope: !3, file: !3, line: 206, type: !2525, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{!1008, !72}
!2527 = !DILocalVariable(name: "core", arg: 1, scope: !2524, file: !3, line: 206, type: !72)
!2528 = !DILocation(line: 206, column: 51, scope: !2524)
!2529 = !DILocalVariable(name: "ret", scope: !2524, file: !3, line: 208, type: !1008)
!2530 = !DILocation(line: 208, column: 7, scope: !2524)
!2531 = !DILocation(line: 214, column: 7, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2524, file: !3, line: 214, column: 6)
!2533 = !DILocation(line: 214, column: 13, scope: !2532)
!2534 = !DILocation(line: 214, column: 18, scope: !2532)
!2535 = !DILocation(line: 214, column: 6, scope: !2524)
!2536 = !DILocation(line: 215, column: 10, scope: !2532)
!2537 = !DILocation(line: 215, column: 16, scope: !2532)
!2538 = !DILocation(line: 215, column: 3, scope: !2532)
!2539 = !DILocation(line: 217, column: 26, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2524, file: !3, line: 217, column: 6)
!2541 = !DILocation(line: 217, column: 7, scope: !2540)
!2542 = !DILocation(line: 217, column: 6, scope: !2524)
!2543 = !DILocation(line: 218, column: 9, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2540, file: !3, line: 217, column: 33)
!2545 = !DILocation(line: 218, column: 15, scope: !2544)
!2546 = !DILocation(line: 218, column: 20, scope: !2544)
!2547 = !DILocation(line: 218, column: 32, scope: !2544)
!2548 = !DILocation(line: 218, column: 38, scope: !2544)
!2549 = !DILocation(line: 218, column: 7, scope: !2544)
!2550 = !DILocation(line: 219, column: 22, scope: !2544)
!2551 = !DILocation(line: 219, column: 3, scope: !2544)
!2552 = !DILocation(line: 220, column: 2, scope: !2544)
!2553 = !DILocation(line: 222, column: 9, scope: !2524)
!2554 = !DILocation(line: 222, column: 2, scope: !2524)
!2555 = !DILocation(line: 223, column: 1, scope: !2524)
!2556 = distinct !DISubprogram(name: "clk_hw_rate_is_protected", scope: !3, file: !3, line: 515, type: !2516, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2557 = !DILocalVariable(name: "hw", arg: 1, scope: !2556, file: !3, line: 515, type: !2095)
!2558 = !DILocation(line: 515, column: 52, scope: !2556)
!2559 = !DILocation(line: 517, column: 36, scope: !2556)
!2560 = !DILocation(line: 517, column: 40, scope: !2556)
!2561 = !DILocation(line: 517, column: 9, scope: !2556)
!2562 = !DILocation(line: 517, column: 2, scope: !2556)
!2563 = distinct !DISubprogram(name: "clk_core_rate_is_protected", scope: !3, file: !3, line: 201, type: !2525, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2564 = !DILocalVariable(name: "core", arg: 1, scope: !2563, file: !3, line: 201, type: !72)
!2565 = !DILocation(line: 201, column: 57, scope: !2563)
!2566 = !DILocation(line: 203, column: 9, scope: !2563)
!2567 = !DILocation(line: 203, column: 15, scope: !2563)
!2568 = !DILocation(line: 203, column: 2, scope: !2563)
!2569 = distinct !DISubprogram(name: "clk_hw_is_enabled", scope: !3, file: !3, line: 521, type: !2516, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2570 = !DILocalVariable(name: "hw", arg: 1, scope: !2569, file: !3, line: 521, type: !2095)
!2571 = !DILocation(line: 521, column: 45, scope: !2569)
!2572 = !DILocation(line: 523, column: 29, scope: !2569)
!2573 = !DILocation(line: 523, column: 33, scope: !2569)
!2574 = !DILocation(line: 523, column: 9, scope: !2569)
!2575 = !DILocation(line: 523, column: 2, scope: !2569)
!2576 = distinct !DISubprogram(name: "clk_core_is_enabled", scope: !3, file: !3, line: 225, type: !2525, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2577 = !DILocalVariable(name: "core", arg: 1, scope: !2576, file: !3, line: 225, type: !72)
!2578 = !DILocation(line: 225, column: 50, scope: !2576)
!2579 = !DILocalVariable(name: "ret", scope: !2576, file: !3, line: 227, type: !1008)
!2580 = !DILocation(line: 227, column: 7, scope: !2576)
!2581 = !DILocation(line: 233, column: 7, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2576, file: !3, line: 233, column: 6)
!2583 = !DILocation(line: 233, column: 13, scope: !2582)
!2584 = !DILocation(line: 233, column: 18, scope: !2582)
!2585 = !DILocation(line: 233, column: 6, scope: !2576)
!2586 = !DILocation(line: 234, column: 10, scope: !2582)
!2587 = !DILocation(line: 234, column: 16, scope: !2582)
!2588 = !DILocation(line: 234, column: 3, scope: !2582)
!2589 = !DILocation(line: 246, column: 6, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2576, file: !3, line: 246, column: 6)
!2591 = !DILocation(line: 246, column: 12, scope: !2590)
!2592 = !DILocation(line: 246, column: 6, scope: !2576)
!2593 = !DILocation(line: 247, column: 27, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2590, file: !3, line: 246, column: 25)
!2595 = !DILocation(line: 247, column: 33, scope: !2594)
!2596 = !DILocation(line: 247, column: 3, scope: !2594)
!2597 = !DILocation(line: 248, column: 26, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 248, column: 7)
!2599 = !DILocation(line: 248, column: 32, scope: !2598)
!2600 = !DILocation(line: 248, column: 8, scope: !2598)
!2601 = !DILocation(line: 248, column: 7, scope: !2594)
!2602 = !DILocation(line: 249, column: 8, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2598, file: !3, line: 248, column: 38)
!2604 = !DILocation(line: 250, column: 4, scope: !2603)
!2605 = !DILocation(line: 252, column: 2, scope: !2594)
!2606 = !DILocation(line: 254, column: 8, scope: !2576)
!2607 = !DILocation(line: 254, column: 14, scope: !2576)
!2608 = !DILocation(line: 254, column: 19, scope: !2576)
!2609 = !DILocation(line: 254, column: 30, scope: !2576)
!2610 = !DILocation(line: 254, column: 36, scope: !2576)
!2611 = !DILocation(line: 254, column: 6, scope: !2576)
!2612 = !DILocation(line: 254, column: 2, scope: !2576)
!2613 = !DILabel(scope: !2576, name: "done", file: !3, line: 255)
!2614 = !DILocation(line: 255, column: 1, scope: !2576)
!2615 = !DILocation(line: 256, column: 6, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2576, file: !3, line: 256, column: 6)
!2617 = !DILocation(line: 256, column: 12, scope: !2616)
!2618 = !DILocation(line: 256, column: 6, scope: !2576)
!2619 = !DILocation(line: 257, column: 18, scope: !2616)
!2620 = !DILocation(line: 257, column: 24, scope: !2616)
!2621 = !DILocation(line: 257, column: 3, scope: !2616)
!2622 = !DILocation(line: 259, column: 9, scope: !2576)
!2623 = !DILocation(line: 259, column: 2, scope: !2576)
!2624 = !DILocation(line: 260, column: 1, scope: !2576)
!2625 = distinct !DISubprogram(name: "__clk_is_enabled", scope: !3, file: !3, line: 527, type: !2626, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!1008, !95}
!2628 = !DILocalVariable(name: "clk", arg: 1, scope: !2625, file: !3, line: 527, type: !95)
!2629 = !DILocation(line: 527, column: 35, scope: !2625)
!2630 = !DILocation(line: 529, column: 7, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 529, column: 6)
!2632 = !DILocation(line: 529, column: 6, scope: !2625)
!2633 = !DILocation(line: 530, column: 3, scope: !2631)
!2634 = !DILocation(line: 532, column: 29, scope: !2625)
!2635 = !DILocation(line: 532, column: 34, scope: !2625)
!2636 = !DILocation(line: 532, column: 9, scope: !2625)
!2637 = !DILocation(line: 532, column: 2, scope: !2625)
!2638 = !DILocation(line: 533, column: 1, scope: !2625)
!2639 = distinct !DISubprogram(name: "clk_mux_determine_rate_flags", scope: !3, file: !3, line: 545, type: !2640, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{!89, !90, !2129, !214}
!2642 = !DILocalVariable(name: "hw", arg: 1, scope: !2639, file: !3, line: 545, type: !90)
!2643 = !DILocation(line: 545, column: 49, scope: !2639)
!2644 = !DILocalVariable(name: "req", arg: 2, scope: !2639, file: !3, line: 546, type: !2129)
!2645 = !DILocation(line: 546, column: 31, scope: !2639)
!2646 = !DILocalVariable(name: "flags", arg: 3, scope: !2639, file: !3, line: 547, type: !214)
!2647 = !DILocation(line: 547, column: 20, scope: !2639)
!2648 = !DILocalVariable(name: "core", scope: !2639, file: !3, line: 549, type: !72)
!2649 = !DILocation(line: 549, column: 19, scope: !2639)
!2650 = !DILocation(line: 549, column: 26, scope: !2639)
!2651 = !DILocation(line: 549, column: 30, scope: !2639)
!2652 = !DILocalVariable(name: "parent", scope: !2639, file: !3, line: 549, type: !72)
!2653 = !DILocation(line: 549, column: 37, scope: !2639)
!2654 = !DILocalVariable(name: "best_parent", scope: !2639, file: !3, line: 549, type: !72)
!2655 = !DILocation(line: 549, column: 46, scope: !2639)
!2656 = !DILocalVariable(name: "i", scope: !2639, file: !3, line: 550, type: !89)
!2657 = !DILocation(line: 550, column: 6, scope: !2639)
!2658 = !DILocalVariable(name: "num_parents", scope: !2639, file: !3, line: 550, type: !89)
!2659 = !DILocation(line: 550, column: 9, scope: !2639)
!2660 = !DILocalVariable(name: "ret", scope: !2639, file: !3, line: 550, type: !89)
!2661 = !DILocation(line: 550, column: 22, scope: !2639)
!2662 = !DILocalVariable(name: "best", scope: !2639, file: !3, line: 551, type: !214)
!2663 = !DILocation(line: 551, column: 16, scope: !2639)
!2664 = !DILocalVariable(name: "parent_req", scope: !2639, file: !3, line: 552, type: !2130)
!2665 = !DILocation(line: 552, column: 26, scope: !2639)
!2666 = !DILocation(line: 552, column: 40, scope: !2639)
!2667 = !DILocation(line: 552, column: 39, scope: !2639)
!2668 = !DILocation(line: 555, column: 6, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !2639, file: !3, line: 555, column: 6)
!2670 = !DILocation(line: 555, column: 12, scope: !2669)
!2671 = !DILocation(line: 555, column: 18, scope: !2669)
!2672 = !DILocation(line: 555, column: 6, scope: !2639)
!2673 = !DILocation(line: 556, column: 12, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2669, file: !3, line: 555, column: 46)
!2675 = !DILocation(line: 556, column: 18, scope: !2674)
!2676 = !DILocation(line: 556, column: 10, scope: !2674)
!2677 = !DILocation(line: 557, column: 7, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2674, file: !3, line: 557, column: 7)
!2679 = !DILocation(line: 557, column: 13, scope: !2678)
!2680 = !DILocation(line: 557, column: 19, scope: !2678)
!2681 = !DILocation(line: 557, column: 7, scope: !2674)
!2682 = !DILocation(line: 558, column: 31, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2678, file: !3, line: 557, column: 42)
!2684 = !DILocation(line: 558, column: 40, scope: !2683)
!2685 = !DILocation(line: 558, column: 48, scope: !2683)
!2686 = !DILocation(line: 558, column: 10, scope: !2683)
!2687 = !DILocation(line: 558, column: 8, scope: !2683)
!2688 = !DILocation(line: 560, column: 8, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 560, column: 8)
!2690 = !DILocation(line: 560, column: 8, scope: !2683)
!2691 = !DILocation(line: 561, column: 12, scope: !2689)
!2692 = !DILocation(line: 561, column: 5, scope: !2689)
!2693 = !DILocation(line: 563, column: 22, scope: !2683)
!2694 = !DILocation(line: 563, column: 9, scope: !2683)
!2695 = !DILocation(line: 564, column: 3, scope: !2683)
!2696 = !DILocation(line: 564, column: 14, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2678, file: !3, line: 564, column: 14)
!2698 = !DILocation(line: 564, column: 14, scope: !2678)
!2699 = !DILocation(line: 565, column: 36, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 564, column: 22)
!2701 = !DILocation(line: 565, column: 11, scope: !2700)
!2702 = !DILocation(line: 565, column: 9, scope: !2700)
!2703 = !DILocation(line: 566, column: 3, scope: !2700)
!2704 = !DILocation(line: 567, column: 36, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 566, column: 10)
!2706 = !DILocation(line: 567, column: 11, scope: !2705)
!2707 = !DILocation(line: 567, column: 9, scope: !2705)
!2708 = !DILocation(line: 570, column: 3, scope: !2674)
!2709 = !DILocation(line: 574, column: 16, scope: !2639)
!2710 = !DILocation(line: 574, column: 22, scope: !2639)
!2711 = !DILocation(line: 574, column: 14, scope: !2639)
!2712 = !DILocation(line: 575, column: 9, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2639, file: !3, line: 575, column: 2)
!2714 = !DILocation(line: 575, column: 7, scope: !2713)
!2715 = !DILocation(line: 575, column: 14, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 575, column: 2)
!2717 = !DILocation(line: 575, column: 18, scope: !2716)
!2718 = !DILocation(line: 575, column: 16, scope: !2716)
!2719 = !DILocation(line: 575, column: 2, scope: !2713)
!2720 = !DILocation(line: 576, column: 41, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2716, file: !3, line: 575, column: 36)
!2722 = !DILocation(line: 576, column: 47, scope: !2721)
!2723 = !DILocation(line: 576, column: 12, scope: !2721)
!2724 = !DILocation(line: 576, column: 10, scope: !2721)
!2725 = !DILocation(line: 577, column: 8, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2721, file: !3, line: 577, column: 7)
!2727 = !DILocation(line: 577, column: 7, scope: !2721)
!2728 = !DILocation(line: 578, column: 4, scope: !2726)
!2729 = !DILocation(line: 580, column: 7, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2721, file: !3, line: 580, column: 7)
!2731 = !DILocation(line: 580, column: 13, scope: !2730)
!2732 = !DILocation(line: 580, column: 19, scope: !2730)
!2733 = !DILocation(line: 580, column: 7, scope: !2721)
!2734 = !DILocation(line: 581, column: 18, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 580, column: 42)
!2736 = !DILocation(line: 581, column: 17, scope: !2735)
!2737 = !DILocation(line: 582, column: 31, scope: !2735)
!2738 = !DILocation(line: 582, column: 39, scope: !2735)
!2739 = !DILocation(line: 582, column: 10, scope: !2735)
!2740 = !DILocation(line: 582, column: 8, scope: !2735)
!2741 = !DILocation(line: 583, column: 8, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 583, column: 8)
!2743 = !DILocation(line: 583, column: 8, scope: !2735)
!2744 = !DILocation(line: 584, column: 5, scope: !2742)
!2745 = !DILocation(line: 585, column: 3, scope: !2735)
!2746 = !DILocation(line: 586, column: 47, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 585, column: 10)
!2748 = !DILocation(line: 586, column: 22, scope: !2747)
!2749 = !DILocation(line: 586, column: 15, scope: !2747)
!2750 = !DILocation(line: 586, column: 20, scope: !2747)
!2751 = !DILocation(line: 589, column: 26, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2721, file: !3, line: 589, column: 7)
!2753 = !DILocation(line: 589, column: 31, scope: !2752)
!2754 = !DILocation(line: 589, column: 48, scope: !2752)
!2755 = !DILocation(line: 590, column: 12, scope: !2752)
!2756 = !DILocation(line: 590, column: 18, scope: !2752)
!2757 = !DILocation(line: 589, column: 7, scope: !2752)
!2758 = !DILocation(line: 589, column: 7, scope: !2721)
!2759 = !DILocation(line: 591, column: 18, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2752, file: !3, line: 590, column: 26)
!2761 = !DILocation(line: 591, column: 16, scope: !2760)
!2762 = !DILocation(line: 592, column: 22, scope: !2760)
!2763 = !DILocation(line: 592, column: 9, scope: !2760)
!2764 = !DILocation(line: 593, column: 3, scope: !2760)
!2765 = !DILocation(line: 594, column: 2, scope: !2721)
!2766 = !DILocation(line: 575, column: 32, scope: !2716)
!2767 = !DILocation(line: 575, column: 2, scope: !2716)
!2768 = distinct !{!2768, !2719, !2769}
!2769 = !DILocation(line: 594, column: 2, scope: !2713)
!2770 = !DILocation(line: 596, column: 7, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2639, file: !3, line: 596, column: 6)
!2772 = !DILocation(line: 596, column: 6, scope: !2639)
!2773 = !DILocation(line: 597, column: 3, scope: !2771)
!2774 = !DILabel(scope: !2639, name: "out", file: !3, line: 599)
!2775 = !DILocation(line: 599, column: 1, scope: !2639)
!2776 = !DILocation(line: 600, column: 6, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2639, file: !3, line: 600, column: 6)
!2778 = !DILocation(line: 600, column: 6, scope: !2639)
!2779 = !DILocation(line: 601, column: 25, scope: !2777)
!2780 = !DILocation(line: 601, column: 38, scope: !2777)
!2781 = !DILocation(line: 601, column: 3, scope: !2777)
!2782 = !DILocation(line: 601, column: 8, scope: !2777)
!2783 = !DILocation(line: 601, column: 23, scope: !2777)
!2784 = !DILocation(line: 602, column: 26, scope: !2639)
!2785 = !DILocation(line: 602, column: 2, scope: !2639)
!2786 = !DILocation(line: 602, column: 7, scope: !2639)
!2787 = !DILocation(line: 602, column: 24, scope: !2639)
!2788 = !DILocation(line: 603, column: 14, scope: !2639)
!2789 = !DILocation(line: 603, column: 2, scope: !2639)
!2790 = !DILocation(line: 603, column: 7, scope: !2639)
!2791 = !DILocation(line: 603, column: 12, scope: !2639)
!2792 = !DILocation(line: 605, column: 2, scope: !2639)
!2793 = !DILocation(line: 606, column: 1, scope: !2639)
!2794 = distinct !DISubprogram(name: "__clk_determine_rate", scope: !3, file: !3, line: 1386, type: !2127, scopeLine: 1387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2795 = !DILocalVariable(name: "hw", arg: 1, scope: !2794, file: !3, line: 1386, type: !90)
!2796 = !DILocation(line: 1386, column: 41, scope: !2794)
!2797 = !DILocalVariable(name: "req", arg: 2, scope: !2794, file: !3, line: 1386, type: !2129)
!2798 = !DILocation(line: 1386, column: 70, scope: !2794)
!2799 = !DILocation(line: 1388, column: 7, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 1388, column: 6)
!2801 = !DILocation(line: 1388, column: 6, scope: !2794)
!2802 = !DILocation(line: 1389, column: 3, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 1388, column: 11)
!2804 = !DILocation(line: 1389, column: 8, scope: !2803)
!2805 = !DILocation(line: 1389, column: 13, scope: !2803)
!2806 = !DILocation(line: 1390, column: 3, scope: !2803)
!2807 = !DILocation(line: 1393, column: 36, scope: !2794)
!2808 = !DILocation(line: 1393, column: 40, scope: !2794)
!2809 = !DILocation(line: 1393, column: 46, scope: !2794)
!2810 = !DILocation(line: 1393, column: 9, scope: !2794)
!2811 = !DILocation(line: 1393, column: 2, scope: !2794)
!2812 = !DILocation(line: 1394, column: 1, scope: !2794)
!2813 = distinct !DISubprogram(name: "mux_is_better_rate", scope: !3, file: !3, line: 536, type: !2814, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!1008, !214, !214, !214, !214}
!2816 = !DILocalVariable(name: "rate", arg: 1, scope: !2813, file: !3, line: 536, type: !214)
!2817 = !DILocation(line: 536, column: 46, scope: !2813)
!2818 = !DILocalVariable(name: "now", arg: 2, scope: !2813, file: !3, line: 536, type: !214)
!2819 = !DILocation(line: 536, column: 66, scope: !2813)
!2820 = !DILocalVariable(name: "best", arg: 3, scope: !2813, file: !3, line: 537, type: !214)
!2821 = !DILocation(line: 537, column: 21, scope: !2813)
!2822 = !DILocalVariable(name: "flags", arg: 4, scope: !2813, file: !3, line: 537, type: !214)
!2823 = !DILocation(line: 537, column: 41, scope: !2813)
!2824 = !DILocation(line: 539, column: 6, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 539, column: 6)
!2826 = !DILocation(line: 539, column: 12, scope: !2825)
!2827 = !DILocation(line: 539, column: 6, scope: !2813)
!2828 = !DILocalVariable(name: "__x", scope: !2829, file: !3, line: 540, type: !199)
!2829 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 540, column: 10)
!2830 = !DILocation(line: 540, column: 10, scope: !2829)
!2831 = !DILocalVariable(name: "__x", scope: !2832, file: !3, line: 540, type: !199)
!2832 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 540, column: 28)
!2833 = !DILocation(line: 540, column: 28, scope: !2832)
!2834 = !DILocation(line: 540, column: 26, scope: !2825)
!2835 = !DILocation(line: 540, column: 3, scope: !2825)
!2836 = !DILocation(line: 542, column: 9, scope: !2813)
!2837 = !DILocation(line: 542, column: 16, scope: !2813)
!2838 = !DILocation(line: 542, column: 13, scope: !2813)
!2839 = !DILocation(line: 542, column: 21, scope: !2813)
!2840 = !DILocation(line: 542, column: 24, scope: !2813)
!2841 = !DILocation(line: 542, column: 30, scope: !2813)
!2842 = !DILocation(line: 542, column: 28, scope: !2813)
!2843 = !DILocation(line: 0, scope: !2813)
!2844 = !DILocation(line: 542, column: 2, scope: !2813)
!2845 = !DILocation(line: 543, column: 1, scope: !2813)
!2846 = distinct !DISubprogram(name: "__clk_lookup", scope: !3, file: !3, line: 609, type: !2847, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{!95, !76}
!2849 = !DILocalVariable(name: "name", arg: 1, scope: !2846, file: !3, line: 609, type: !76)
!2850 = !DILocation(line: 609, column: 38, scope: !2846)
!2851 = !DILocalVariable(name: "core", scope: !2846, file: !3, line: 611, type: !72)
!2852 = !DILocation(line: 611, column: 19, scope: !2846)
!2853 = !DILocation(line: 611, column: 42, scope: !2846)
!2854 = !DILocation(line: 611, column: 26, scope: !2846)
!2855 = !DILocation(line: 613, column: 10, scope: !2846)
!2856 = !DILocation(line: 613, column: 9, scope: !2846)
!2857 = !DILocation(line: 613, column: 24, scope: !2846)
!2858 = !DILocation(line: 613, column: 30, scope: !2846)
!2859 = !DILocation(line: 613, column: 34, scope: !2846)
!2860 = !DILocation(line: 613, column: 2, scope: !2846)
!2861 = distinct !DISubprogram(name: "clk_core_lookup", scope: !3, file: !3, line: 312, type: !2862, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{!72, !76}
!2864 = !DILocalVariable(name: "name", arg: 1, scope: !2861, file: !3, line: 312, type: !76)
!2865 = !DILocation(line: 312, column: 53, scope: !2861)
!2866 = !DILocalVariable(name: "root_clk", scope: !2861, file: !3, line: 314, type: !72)
!2867 = !DILocation(line: 314, column: 19, scope: !2861)
!2868 = !DILocalVariable(name: "ret", scope: !2861, file: !3, line: 315, type: !72)
!2869 = !DILocation(line: 315, column: 19, scope: !2861)
!2870 = !DILocation(line: 317, column: 7, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 317, column: 6)
!2872 = !DILocation(line: 317, column: 6, scope: !2861)
!2873 = !DILocation(line: 318, column: 3, scope: !2871)
!2874 = !DILocalVariable(name: "____ptr", scope: !2875, file: !3, line: 321, type: !705)
!2875 = distinct !DILexicalBlock(scope: !2876, file: !3, line: 321, column: 2)
!2876 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 321, column: 2)
!2877 = !DILocation(line: 321, column: 2, scope: !2875)
!2878 = !DILocalVariable(name: "__mptr", scope: !2879, file: !3, line: 321, type: !71)
!2879 = distinct !DILexicalBlock(scope: !2875, file: !3, line: 321, column: 2)
!2880 = !DILocation(line: 321, column: 2, scope: !2879)
!2881 = !DILocation(line: 321, column: 2, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 321, column: 2)
!2883 = !DILocation(line: 321, column: 2, scope: !2876)
!2884 = !DILocation(line: 321, column: 2, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2876, file: !3, line: 321, column: 2)
!2886 = !DILocation(line: 322, column: 30, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2885, file: !3, line: 321, column: 61)
!2888 = !DILocation(line: 322, column: 36, scope: !2887)
!2889 = !DILocation(line: 322, column: 9, scope: !2887)
!2890 = !DILocation(line: 322, column: 7, scope: !2887)
!2891 = !DILocation(line: 323, column: 7, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 323, column: 7)
!2893 = !DILocation(line: 323, column: 7, scope: !2887)
!2894 = !DILocation(line: 324, column: 11, scope: !2892)
!2895 = !DILocation(line: 324, column: 4, scope: !2892)
!2896 = !DILocation(line: 325, column: 2, scope: !2887)
!2897 = !DILocalVariable(name: "____ptr", scope: !2898, file: !3, line: 321, type: !705)
!2898 = distinct !DILexicalBlock(scope: !2885, file: !3, line: 321, column: 2)
!2899 = !DILocation(line: 321, column: 2, scope: !2898)
!2900 = !DILocalVariable(name: "__mptr", scope: !2901, file: !3, line: 321, type: !71)
!2901 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 321, column: 2)
!2902 = !DILocation(line: 321, column: 2, scope: !2901)
!2903 = !DILocation(line: 321, column: 2, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 321, column: 2)
!2905 = distinct !{!2905, !2883, !2906}
!2906 = !DILocation(line: 325, column: 2, scope: !2876)
!2907 = !DILocalVariable(name: "____ptr", scope: !2908, file: !3, line: 328, type: !705)
!2908 = distinct !DILexicalBlock(scope: !2909, file: !3, line: 328, column: 2)
!2909 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 328, column: 2)
!2910 = !DILocation(line: 328, column: 2, scope: !2908)
!2911 = !DILocalVariable(name: "__mptr", scope: !2912, file: !3, line: 328, type: !71)
!2912 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 328, column: 2)
!2913 = !DILocation(line: 328, column: 2, scope: !2912)
!2914 = !DILocation(line: 328, column: 2, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2912, file: !3, line: 328, column: 2)
!2916 = !DILocation(line: 328, column: 2, scope: !2909)
!2917 = !DILocation(line: 328, column: 2, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2909, file: !3, line: 328, column: 2)
!2919 = !DILocation(line: 329, column: 30, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 328, column: 63)
!2921 = !DILocation(line: 329, column: 36, scope: !2920)
!2922 = !DILocation(line: 329, column: 9, scope: !2920)
!2923 = !DILocation(line: 329, column: 7, scope: !2920)
!2924 = !DILocation(line: 330, column: 7, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2920, file: !3, line: 330, column: 7)
!2926 = !DILocation(line: 330, column: 7, scope: !2920)
!2927 = !DILocation(line: 331, column: 11, scope: !2925)
!2928 = !DILocation(line: 331, column: 4, scope: !2925)
!2929 = !DILocation(line: 332, column: 2, scope: !2920)
!2930 = !DILocalVariable(name: "____ptr", scope: !2931, file: !3, line: 328, type: !705)
!2931 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 328, column: 2)
!2932 = !DILocation(line: 328, column: 2, scope: !2931)
!2933 = !DILocalVariable(name: "__mptr", scope: !2934, file: !3, line: 328, type: !71)
!2934 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 328, column: 2)
!2935 = !DILocation(line: 328, column: 2, scope: !2934)
!2936 = !DILocation(line: 328, column: 2, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2934, file: !3, line: 328, column: 2)
!2938 = distinct !{!2938, !2916, !2939}
!2939 = !DILocation(line: 332, column: 2, scope: !2909)
!2940 = !DILocation(line: 334, column: 2, scope: !2861)
!2941 = !DILocation(line: 335, column: 1, scope: !2861)
!2942 = distinct !DISubprogram(name: "clk_hw_set_rate_range", scope: !3, file: !3, line: 634, type: !2943, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2943 = !DISubroutineType(types: !2944)
!2944 = !{null, !90, !214, !214}
!2945 = !DILocalVariable(name: "hw", arg: 1, scope: !2942, file: !3, line: 634, type: !90)
!2946 = !DILocation(line: 634, column: 43, scope: !2942)
!2947 = !DILocalVariable(name: "min_rate", arg: 2, scope: !2942, file: !3, line: 634, type: !214)
!2948 = !DILocation(line: 634, column: 61, scope: !2942)
!2949 = !DILocalVariable(name: "max_rate", arg: 3, scope: !2942, file: !3, line: 635, type: !214)
!2950 = !DILocation(line: 635, column: 21, scope: !2942)
!2951 = !DILocation(line: 637, column: 23, scope: !2942)
!2952 = !DILocation(line: 637, column: 2, scope: !2942)
!2953 = !DILocation(line: 637, column: 6, scope: !2942)
!2954 = !DILocation(line: 637, column: 12, scope: !2942)
!2955 = !DILocation(line: 637, column: 21, scope: !2942)
!2956 = !DILocation(line: 638, column: 23, scope: !2942)
!2957 = !DILocation(line: 638, column: 2, scope: !2942)
!2958 = !DILocation(line: 638, column: 6, scope: !2942)
!2959 = !DILocation(line: 638, column: 12, scope: !2942)
!2960 = !DILocation(line: 638, column: 21, scope: !2942)
!2961 = !DILocation(line: 639, column: 1, scope: !2942)
!2962 = distinct !DISubprogram(name: "__clk_mux_determine_rate", scope: !3, file: !3, line: 653, type: !2127, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2963 = !DILocalVariable(name: "hw", arg: 1, scope: !2962, file: !3, line: 653, type: !90)
!2964 = !DILocation(line: 653, column: 45, scope: !2962)
!2965 = !DILocalVariable(name: "req", arg: 2, scope: !2962, file: !3, line: 654, type: !2129)
!2966 = !DILocation(line: 654, column: 34, scope: !2962)
!2967 = !DILocation(line: 656, column: 38, scope: !2962)
!2968 = !DILocation(line: 656, column: 42, scope: !2962)
!2969 = !DILocation(line: 656, column: 9, scope: !2962)
!2970 = !DILocation(line: 656, column: 2, scope: !2962)
!2971 = distinct !DISubprogram(name: "__clk_mux_determine_rate_closest", scope: !3, file: !3, line: 660, type: !2127, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2972 = !DILocalVariable(name: "hw", arg: 1, scope: !2971, file: !3, line: 660, type: !90)
!2973 = !DILocation(line: 660, column: 53, scope: !2971)
!2974 = !DILocalVariable(name: "req", arg: 2, scope: !2971, file: !3, line: 661, type: !2129)
!2975 = !DILocation(line: 661, column: 35, scope: !2971)
!2976 = !DILocation(line: 663, column: 38, scope: !2971)
!2977 = !DILocation(line: 663, column: 42, scope: !2971)
!2978 = !DILocation(line: 663, column: 9, scope: !2971)
!2979 = !DILocation(line: 663, column: 2, scope: !2971)
!2980 = distinct !DISubprogram(name: "clk_rate_exclusive_put", scope: !3, file: !3, line: 723, type: !2981, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{null, !95}
!2983 = !DILocalVariable(name: "clk", arg: 1, scope: !2980, file: !3, line: 723, type: !95)
!2984 = !DILocation(line: 723, column: 41, scope: !2980)
!2985 = !DILocation(line: 725, column: 7, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 725, column: 6)
!2987 = !DILocation(line: 725, column: 6, scope: !2980)
!2988 = !DILocation(line: 726, column: 3, scope: !2986)
!2989 = !DILocation(line: 728, column: 2, scope: !2980)
!2990 = !DILocalVariable(name: "__ret_warn_on", scope: !2991, file: !3, line: 734, type: !89)
!2991 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 734, column: 6)
!2992 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 734, column: 6)
!2993 = !DILocation(line: 734, column: 6, scope: !2991)
!2994 = !DILocation(line: 734, column: 6, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 734, column: 6)
!2996 = !DILocation(line: 734, column: 6, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 734, column: 6)
!2998 = !DILocation(line: 734, column: 6, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 734, column: 6)
!3000 = !DILocation(line: 734, column: 6, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 734, column: 6)
!3002 = !{i32 -2143001069, i32 -2143001040, i32 -2143000994, i32 -2143000936, i32 -2143000882, i32 -2143000828, i32 -2143000773, i32 -2143000742}
!3003 = !DILocation(line: 734, column: 6, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 734, column: 6)
!3005 = !{i32 -2143000343, i32 -2143000336, i32 -2143000284, i32 -2143000253, i32 -2143000223}
!3006 = !DILocation(line: 734, column: 6, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 734, column: 6)
!3008 = !DILocation(line: 734, column: 6, scope: !2992)
!3009 = !DILocation(line: 734, column: 6, scope: !2980)
!3010 = !DILocation(line: 735, column: 3, scope: !2992)
!3011 = !DILocation(line: 737, column: 26, scope: !2980)
!3012 = !DILocation(line: 737, column: 31, scope: !2980)
!3013 = !DILocation(line: 737, column: 2, scope: !2980)
!3014 = !DILocation(line: 738, column: 2, scope: !2980)
!3015 = !DILocation(line: 738, column: 7, scope: !2980)
!3016 = !DILocation(line: 738, column: 22, scope: !2980)
!3017 = !DILabel(scope: !2980, name: "out", file: !3, line: 739)
!3018 = !DILocation(line: 739, column: 1, scope: !2980)
!3019 = !DILocation(line: 740, column: 2, scope: !2980)
!3020 = !DILocation(line: 741, column: 1, scope: !2980)
!3021 = distinct !DISubprogram(name: "clk_prepare_lock", scope: !3, file: !3, line: 133, type: !3022, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{null}
!3024 = !DILocalVariable(name: "pscr_ret__", scope: !3025, file: !3026, line: 15, type: !427)
!3025 = distinct !DILexicalBlock(scope: !3027, file: !3026, line: 15, column: 9)
!3026 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!3027 = distinct !DISubprogram(name: "get_current", scope: !3026, file: !3026, line: 13, type: !3028, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!427}
!3030 = !DILocation(line: 15, column: 9, scope: !3025, inlinedAt: !3031)
!3031 = distinct !DILocation(line: 144, column: 18, scope: !3021)
!3032 = !DILocalVariable(name: "__vpp_verify", scope: !3033, file: !3026, line: 15, type: !1399)
!3033 = distinct !DILexicalBlock(scope: !3025, file: !3026, line: 15, column: 9)
!3034 = !DILocation(line: 15, column: 9, scope: !3033, inlinedAt: !3031)
!3035 = !DILocalVariable(name: "pfo_val__", scope: !3036, file: !3026, line: 15, type: !283)
!3036 = distinct !DILexicalBlock(scope: !3025, file: !3026, line: 15, column: 9)
!3037 = !DILocation(line: 15, column: 9, scope: !3036, inlinedAt: !3031)
!3038 = !DILocation(line: 15, column: 9, scope: !3025, inlinedAt: !3039)
!3039 = distinct !DILocation(line: 136, column: 24, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 136, column: 7)
!3041 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 135, column: 37)
!3042 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 135, column: 6)
!3043 = !DILocation(line: 15, column: 9, scope: !3033, inlinedAt: !3039)
!3044 = !DILocation(line: 15, column: 9, scope: !3036, inlinedAt: !3039)
!3045 = !DILocation(line: 135, column: 7, scope: !3042)
!3046 = !DILocation(line: 135, column: 6, scope: !3021)
!3047 = !DILocation(line: 136, column: 7, scope: !3040)
!3048 = !{i32 -2146751490}
!3049 = !DILocation(line: 136, column: 21, scope: !3040)
!3050 = !DILocation(line: 136, column: 7, scope: !3041)
!3051 = !DILocation(line: 137, column: 18, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 136, column: 33)
!3053 = !DILocation(line: 138, column: 4, scope: !3052)
!3054 = !DILocation(line: 140, column: 3, scope: !3041)
!3055 = !DILocation(line: 141, column: 2, scope: !3041)
!3056 = !DILocalVariable(name: "__ret_warn_on", scope: !3057, file: !3, line: 142, type: !89)
!3057 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 142, column: 2)
!3058 = !DILocation(line: 142, column: 2, scope: !3057)
!3059 = !DILocation(line: 142, column: 2, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3057, file: !3, line: 142, column: 2)
!3061 = !DILocation(line: 142, column: 2, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 142, column: 2)
!3063 = !DILocation(line: 142, column: 2, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 142, column: 2)
!3065 = !DILocation(line: 142, column: 2, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 142, column: 2)
!3067 = !{i32 -2143057694, i32 -2143057665, i32 -2143057619, i32 -2143057561, i32 -2143057507, i32 -2143057453, i32 -2143057398, i32 -2143057367}
!3068 = !DILocation(line: 142, column: 2, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 142, column: 2)
!3070 = !{i32 -2143056957, i32 -2143056950, i32 -2143056898, i32 -2143056867, i32 -2143056837}
!3071 = !DILocation(line: 142, column: 2, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 142, column: 2)
!3073 = !DILocalVariable(name: "__ret_warn_on", scope: !3074, file: !3, line: 143, type: !89)
!3074 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 143, column: 2)
!3075 = !DILocation(line: 143, column: 2, scope: !3074)
!3076 = !DILocation(line: 143, column: 2, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 143, column: 2)
!3078 = !DILocation(line: 143, column: 2, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3077, file: !3, line: 143, column: 2)
!3080 = !DILocation(line: 143, column: 2, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 143, column: 2)
!3082 = !DILocation(line: 143, column: 2, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 143, column: 2)
!3084 = !{i32 -2143056218, i32 -2143056189, i32 -2143056143, i32 -2143056085, i32 -2143056031, i32 -2143055977, i32 -2143055922, i32 -2143055891}
!3085 = !DILocation(line: 143, column: 2, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 143, column: 2)
!3087 = !{i32 -2143055481, i32 -2143055474, i32 -2143055422, i32 -2143055391, i32 -2143055361}
!3088 = !DILocation(line: 143, column: 2, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 143, column: 2)
!3090 = !DILocation(line: 144, column: 16, scope: !3021)
!3091 = !DILocation(line: 145, column: 17, scope: !3021)
!3092 = !DILocation(line: 146, column: 1, scope: !3021)
!3093 = distinct !DISubprogram(name: "clk_core_rate_unprotect", scope: !3, file: !3, line: 669, type: !3094, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{null, !72}
!3096 = !DILocalVariable(name: "core", arg: 1, scope: !3093, file: !3, line: 669, type: !72)
!3097 = !DILocation(line: 669, column: 54, scope: !3093)
!3098 = !DILocation(line: 671, column: 2, scope: !3093)
!3099 = !DILocation(line: 671, column: 2, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 671, column: 2)
!3101 = !DILocation(line: 673, column: 7, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 673, column: 6)
!3103 = !DILocation(line: 673, column: 6, scope: !3093)
!3104 = !DILocation(line: 674, column: 3, scope: !3102)
!3105 = !DILocalVariable(name: "__ret_warn_on", scope: !3106, file: !3, line: 676, type: !89)
!3106 = distinct !DILexicalBlock(scope: !3107, file: !3, line: 676, column: 6)
!3107 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 676, column: 6)
!3108 = !DILocation(line: 676, column: 6, scope: !3106)
!3109 = !DILocation(line: 676, column: 6, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 676, column: 6)
!3111 = !DILocation(line: 676, column: 6, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 676, column: 6)
!3113 = !DILocation(line: 676, column: 6, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 676, column: 6)
!3115 = !DILocation(line: 676, column: 6, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 676, column: 6)
!3117 = !DILocation(line: 676, column: 6, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 676, column: 6)
!3119 = !DILocation(line: 676, column: 6, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 676, column: 6)
!3121 = !{i32 -2143002584, i32 -2143002555, i32 -2143002509, i32 -2143002451, i32 -2143002397, i32 -2143002343, i32 -2143002288, i32 -2143002257}
!3122 = !DILocation(line: 676, column: 6, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 676, column: 6)
!3124 = !{i32 -2143001847, i32 -2143001840, i32 -2143001788, i32 -2143001757, i32 -2143001727}
!3125 = !DILocation(line: 676, column: 6, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 676, column: 6)
!3127 = !DILocation(line: 676, column: 6, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 676, column: 6)
!3129 = !DILocation(line: 676, column: 6, scope: !3107)
!3130 = !DILocation(line: 676, column: 6, scope: !3093)
!3131 = !DILocation(line: 678, column: 3, scope: !3107)
!3132 = !DILocation(line: 680, column: 8, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 680, column: 6)
!3134 = !DILocation(line: 680, column: 14, scope: !3133)
!3135 = !DILocation(line: 680, column: 6, scope: !3133)
!3136 = !DILocation(line: 680, column: 28, scope: !3133)
!3137 = !DILocation(line: 680, column: 6, scope: !3093)
!3138 = !DILocation(line: 681, column: 3, scope: !3133)
!3139 = !DILocation(line: 683, column: 26, scope: !3093)
!3140 = !DILocation(line: 683, column: 32, scope: !3093)
!3141 = !DILocation(line: 683, column: 2, scope: !3093)
!3142 = !DILocation(line: 684, column: 1, scope: !3093)
!3143 = distinct !DISubprogram(name: "clk_prepare_unlock", scope: !3, file: !3, line: 148, type: !3022, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3144 = !DILocation(line: 15, column: 9, scope: !3025, inlinedAt: !3145)
!3145 = distinct !DILocation(line: 150, column: 2, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 150, column: 2)
!3147 = !DILocation(line: 15, column: 9, scope: !3033, inlinedAt: !3145)
!3148 = !DILocation(line: 15, column: 9, scope: !3036, inlinedAt: !3145)
!3149 = !DILocalVariable(name: "__ret_warn_on", scope: !3146, file: !3, line: 150, type: !89)
!3150 = !DILocation(line: 150, column: 2, scope: !3146)
!3151 = !DILocation(line: 150, column: 2, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3146, file: !3, line: 150, column: 2)
!3153 = !DILocation(line: 150, column: 2, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3152, file: !3, line: 150, column: 2)
!3155 = !DILocation(line: 150, column: 2, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 150, column: 2)
!3157 = !DILocation(line: 150, column: 2, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 150, column: 2)
!3159 = !{i32 -2143054703, i32 -2143054674, i32 -2143054628, i32 -2143054570, i32 -2143054516, i32 -2143054462, i32 -2143054407, i32 -2143054376}
!3160 = !DILocation(line: 150, column: 2, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 150, column: 2)
!3162 = !{i32 -2143053966, i32 -2143053959, i32 -2143053907, i32 -2143053876, i32 -2143053846}
!3163 = !DILocation(line: 150, column: 2, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 150, column: 2)
!3165 = !DILocalVariable(name: "__ret_warn_on", scope: !3166, file: !3, line: 151, type: !89)
!3166 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 151, column: 2)
!3167 = !DILocation(line: 151, column: 2, scope: !3166)
!3168 = !DILocation(line: 151, column: 2, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 151, column: 2)
!3170 = !DILocation(line: 151, column: 2, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 151, column: 2)
!3172 = !DILocation(line: 151, column: 2, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 151, column: 2)
!3174 = !DILocation(line: 151, column: 2, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 151, column: 2)
!3176 = !{i32 -2143053227, i32 -2143053198, i32 -2143053152, i32 -2143053094, i32 -2143053040, i32 -2143052986, i32 -2143052931, i32 -2143052900}
!3177 = !DILocation(line: 151, column: 2, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 151, column: 2)
!3179 = !{i32 -2143052490, i32 -2143052483, i32 -2143052431, i32 -2143052400, i32 -2143052370}
!3180 = !DILocation(line: 151, column: 2, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 151, column: 2)
!3182 = !DILocation(line: 153, column: 6, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 153, column: 6)
!3184 = !DILocation(line: 153, column: 6, scope: !3143)
!3185 = !DILocation(line: 154, column: 3, scope: !3183)
!3186 = !DILocation(line: 155, column: 16, scope: !3143)
!3187 = !DILocation(line: 156, column: 2, scope: !3143)
!3188 = !DILocation(line: 157, column: 1, scope: !3143)
!3189 = distinct !DISubprogram(name: "clk_rate_exclusive_get", scope: !3, file: !3, line: 789, type: !3190, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3190 = !DISubroutineType(types: !3191)
!3191 = !{!89, !95}
!3192 = !DILocalVariable(name: "clk", arg: 1, scope: !3189, file: !3, line: 789, type: !95)
!3193 = !DILocation(line: 789, column: 40, scope: !3189)
!3194 = !DILocation(line: 791, column: 7, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3189, file: !3, line: 791, column: 6)
!3196 = !DILocation(line: 791, column: 6, scope: !3189)
!3197 = !DILocation(line: 792, column: 3, scope: !3195)
!3198 = !DILocation(line: 794, column: 2, scope: !3189)
!3199 = !DILocation(line: 795, column: 24, scope: !3189)
!3200 = !DILocation(line: 795, column: 29, scope: !3189)
!3201 = !DILocation(line: 795, column: 2, scope: !3189)
!3202 = !DILocation(line: 796, column: 2, scope: !3189)
!3203 = !DILocation(line: 796, column: 7, scope: !3189)
!3204 = !DILocation(line: 796, column: 22, scope: !3189)
!3205 = !DILocation(line: 797, column: 2, scope: !3189)
!3206 = !DILocation(line: 799, column: 2, scope: !3189)
!3207 = !DILocation(line: 800, column: 1, scope: !3189)
!3208 = distinct !DISubprogram(name: "clk_core_rate_protect", scope: !3, file: !3, line: 744, type: !3094, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3209 = !DILocalVariable(name: "core", arg: 1, scope: !3208, file: !3, line: 744, type: !72)
!3210 = !DILocation(line: 744, column: 52, scope: !3208)
!3211 = !DILocation(line: 746, column: 2, scope: !3208)
!3212 = !DILocation(line: 746, column: 2, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 746, column: 2)
!3214 = !DILocation(line: 748, column: 7, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 748, column: 6)
!3216 = !DILocation(line: 748, column: 6, scope: !3208)
!3217 = !DILocation(line: 749, column: 3, scope: !3215)
!3218 = !DILocation(line: 751, column: 6, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 751, column: 6)
!3220 = !DILocation(line: 751, column: 12, scope: !3219)
!3221 = !DILocation(line: 751, column: 26, scope: !3219)
!3222 = !DILocation(line: 751, column: 6, scope: !3208)
!3223 = !DILocation(line: 752, column: 25, scope: !3219)
!3224 = !DILocation(line: 752, column: 31, scope: !3219)
!3225 = !DILocation(line: 752, column: 3, scope: !3219)
!3226 = !DILocation(line: 754, column: 2, scope: !3208)
!3227 = !DILocation(line: 754, column: 8, scope: !3208)
!3228 = !DILocation(line: 754, column: 21, scope: !3208)
!3229 = !DILocation(line: 755, column: 1, scope: !3208)
!3230 = distinct !DISubprogram(name: "clk_unprepare", scope: !3, file: !3, line: 855, type: !2981, scopeLine: 856, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3231 = !DILocalVariable(name: "clk", arg: 1, scope: !3230, file: !3, line: 855, type: !95)
!3232 = !DILocation(line: 855, column: 32, scope: !3230)
!3233 = !DILocation(line: 857, column: 21, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3230, file: !3, line: 857, column: 6)
!3235 = !DILocation(line: 857, column: 6, scope: !3234)
!3236 = !DILocation(line: 857, column: 6, scope: !3230)
!3237 = !DILocation(line: 858, column: 3, scope: !3234)
!3238 = !DILocation(line: 860, column: 26, scope: !3230)
!3239 = !DILocation(line: 860, column: 31, scope: !3230)
!3240 = !DILocation(line: 860, column: 2, scope: !3230)
!3241 = !DILocation(line: 861, column: 1, scope: !3230)
!3242 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !3243, file: !3243, line: 39, type: !3244, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3243 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!1008, !1399}
!3246 = !DILocalVariable(name: "ptr", arg: 1, scope: !3242, file: !3243, line: 39, type: !1399)
!3247 = !DILocation(line: 39, column: 68, scope: !3242)
!3248 = !DILocation(line: 41, column: 9, scope: !3242)
!3249 = !DILocation(line: 41, column: 24, scope: !3242)
!3250 = !DILocation(line: 41, column: 27, scope: !3242)
!3251 = !DILocation(line: 41, column: 2, scope: !3242)
!3252 = distinct !DISubprogram(name: "clk_core_unprepare_lock", scope: !3, file: !3, line: 837, type: !3094, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3253 = !DILocalVariable(name: "core", arg: 1, scope: !3252, file: !3, line: 837, type: !72)
!3254 = !DILocation(line: 837, column: 54, scope: !3252)
!3255 = !DILocation(line: 839, column: 2, scope: !3252)
!3256 = !DILocation(line: 840, column: 21, scope: !3252)
!3257 = !DILocation(line: 840, column: 2, scope: !3252)
!3258 = !DILocation(line: 841, column: 2, scope: !3252)
!3259 = !DILocation(line: 842, column: 1, scope: !3252)
!3260 = distinct !DISubprogram(name: "clk_prepare", scope: !3, file: !3, line: 936, type: !3190, scopeLine: 937, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3261 = !DILocalVariable(name: "clk", arg: 1, scope: !3260, file: !3, line: 936, type: !95)
!3262 = !DILocation(line: 936, column: 29, scope: !3260)
!3263 = !DILocation(line: 938, column: 7, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 938, column: 6)
!3265 = !DILocation(line: 938, column: 6, scope: !3260)
!3266 = !DILocation(line: 939, column: 3, scope: !3264)
!3267 = !DILocation(line: 941, column: 31, scope: !3260)
!3268 = !DILocation(line: 941, column: 36, scope: !3260)
!3269 = !DILocation(line: 941, column: 9, scope: !3260)
!3270 = !DILocation(line: 941, column: 2, scope: !3260)
!3271 = !DILocation(line: 942, column: 1, scope: !3260)
!3272 = distinct !DISubprogram(name: "clk_core_prepare_lock", scope: !3, file: !3, line: 913, type: !3273, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!89, !72}
!3275 = !DILocalVariable(name: "core", arg: 1, scope: !3272, file: !3, line: 913, type: !72)
!3276 = !DILocation(line: 913, column: 51, scope: !3272)
!3277 = !DILocalVariable(name: "ret", scope: !3272, file: !3, line: 915, type: !89)
!3278 = !DILocation(line: 915, column: 6, scope: !3272)
!3279 = !DILocation(line: 917, column: 2, scope: !3272)
!3280 = !DILocation(line: 918, column: 25, scope: !3272)
!3281 = !DILocation(line: 918, column: 8, scope: !3272)
!3282 = !DILocation(line: 918, column: 6, scope: !3272)
!3283 = !DILocation(line: 919, column: 2, scope: !3272)
!3284 = !DILocation(line: 921, column: 9, scope: !3272)
!3285 = !DILocation(line: 921, column: 2, scope: !3272)
!3286 = distinct !DISubprogram(name: "clk_disable", scope: !3, file: !3, line: 993, type: !2981, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3287 = !DILocalVariable(name: "clk", arg: 1, scope: !3286, file: !3, line: 993, type: !95)
!3288 = !DILocation(line: 993, column: 30, scope: !3286)
!3289 = !DILocation(line: 995, column: 21, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 995, column: 6)
!3291 = !DILocation(line: 995, column: 6, scope: !3290)
!3292 = !DILocation(line: 995, column: 6, scope: !3286)
!3293 = !DILocation(line: 996, column: 3, scope: !3290)
!3294 = !DILocation(line: 998, column: 24, scope: !3286)
!3295 = !DILocation(line: 998, column: 29, scope: !3286)
!3296 = !DILocation(line: 998, column: 2, scope: !3286)
!3297 = !DILocation(line: 999, column: 1, scope: !3286)
!3298 = distinct !DISubprogram(name: "clk_core_disable_lock", scope: !3, file: !3, line: 972, type: !3094, scopeLine: 973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3299 = !DILocalVariable(name: "core", arg: 1, scope: !3298, file: !3, line: 972, type: !72)
!3300 = !DILocation(line: 972, column: 52, scope: !3298)
!3301 = !DILocalVariable(name: "flags", scope: !3298, file: !3, line: 974, type: !214)
!3302 = !DILocation(line: 974, column: 16, scope: !3298)
!3303 = !DILocation(line: 976, column: 10, scope: !3298)
!3304 = !DILocation(line: 976, column: 8, scope: !3298)
!3305 = !DILocation(line: 977, column: 19, scope: !3298)
!3306 = !DILocation(line: 977, column: 2, scope: !3298)
!3307 = !DILocation(line: 978, column: 20, scope: !3298)
!3308 = !DILocation(line: 978, column: 2, scope: !3298)
!3309 = !DILocation(line: 979, column: 1, scope: !3298)
!3310 = distinct !DISubprogram(name: "clk_gate_restore_context", scope: !3, file: !3, line: 1060, type: !2106, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3311 = !DILocalVariable(name: "hw", arg: 1, scope: !3310, file: !3, line: 1060, type: !90)
!3312 = !DILocation(line: 1060, column: 46, scope: !3310)
!3313 = !DILocalVariable(name: "core", scope: !3310, file: !3, line: 1062, type: !72)
!3314 = !DILocation(line: 1062, column: 19, scope: !3310)
!3315 = !DILocation(line: 1062, column: 26, scope: !3310)
!3316 = !DILocation(line: 1062, column: 30, scope: !3310)
!3317 = !DILocation(line: 1064, column: 6, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 1064, column: 6)
!3319 = !DILocation(line: 1064, column: 12, scope: !3318)
!3320 = !DILocation(line: 1064, column: 6, scope: !3310)
!3321 = !DILocation(line: 1065, column: 3, scope: !3318)
!3322 = !DILocation(line: 1065, column: 9, scope: !3318)
!3323 = !DILocation(line: 1065, column: 14, scope: !3318)
!3324 = !DILocation(line: 1065, column: 21, scope: !3318)
!3325 = !DILocation(line: 1067, column: 3, scope: !3318)
!3326 = !DILocation(line: 1067, column: 9, scope: !3318)
!3327 = !DILocation(line: 1067, column: 14, scope: !3318)
!3328 = !DILocation(line: 1067, column: 22, scope: !3318)
!3329 = !DILocation(line: 1068, column: 1, scope: !3310)
!3330 = distinct !DISubprogram(name: "clk_save_context", scope: !3, file: !3, line: 1106, type: !3331, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!89}
!3333 = !DILocalVariable(name: "clk", scope: !3330, file: !3, line: 1108, type: !72)
!3334 = !DILocation(line: 1108, column: 19, scope: !3330)
!3335 = !DILocalVariable(name: "ret", scope: !3330, file: !3, line: 1109, type: !89)
!3336 = !DILocation(line: 1109, column: 6, scope: !3330)
!3337 = !DILocalVariable(name: "____ptr", scope: !3338, file: !3, line: 1111, type: !705)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 1111, column: 2)
!3339 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1111, column: 2)
!3340 = !DILocation(line: 1111, column: 2, scope: !3338)
!3341 = !DILocalVariable(name: "__mptr", scope: !3342, file: !3, line: 1111, type: !71)
!3342 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1111, column: 2)
!3343 = !DILocation(line: 1111, column: 2, scope: !3342)
!3344 = !DILocation(line: 1111, column: 2, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1111, column: 2)
!3346 = !DILocation(line: 1111, column: 2, scope: !3339)
!3347 = !DILocation(line: 1111, column: 2, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 1111, column: 2)
!3349 = !DILocation(line: 1112, column: 31, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 1111, column: 56)
!3351 = !DILocation(line: 1112, column: 9, scope: !3350)
!3352 = !DILocation(line: 1112, column: 7, scope: !3350)
!3353 = !DILocation(line: 1113, column: 7, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 1113, column: 7)
!3355 = !DILocation(line: 1113, column: 11, scope: !3354)
!3356 = !DILocation(line: 1113, column: 7, scope: !3350)
!3357 = !DILocation(line: 1114, column: 11, scope: !3354)
!3358 = !DILocation(line: 1114, column: 4, scope: !3354)
!3359 = !DILocation(line: 1115, column: 2, scope: !3350)
!3360 = !DILocalVariable(name: "____ptr", scope: !3361, file: !3, line: 1111, type: !705)
!3361 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 1111, column: 2)
!3362 = !DILocation(line: 1111, column: 2, scope: !3361)
!3363 = !DILocalVariable(name: "__mptr", scope: !3364, file: !3, line: 1111, type: !71)
!3364 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 1111, column: 2)
!3365 = !DILocation(line: 1111, column: 2, scope: !3364)
!3366 = !DILocation(line: 1111, column: 2, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 1111, column: 2)
!3368 = distinct !{!3368, !3346, !3369}
!3369 = !DILocation(line: 1115, column: 2, scope: !3339)
!3370 = !DILocalVariable(name: "____ptr", scope: !3371, file: !3, line: 1117, type: !705)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 1117, column: 2)
!3372 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1117, column: 2)
!3373 = !DILocation(line: 1117, column: 2, scope: !3371)
!3374 = !DILocalVariable(name: "__mptr", scope: !3375, file: !3, line: 1117, type: !71)
!3375 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 1117, column: 2)
!3376 = !DILocation(line: 1117, column: 2, scope: !3375)
!3377 = !DILocation(line: 1117, column: 2, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 1117, column: 2)
!3379 = !DILocation(line: 1117, column: 2, scope: !3372)
!3380 = !DILocation(line: 1117, column: 2, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 1117, column: 2)
!3382 = !DILocation(line: 1118, column: 31, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 1117, column: 58)
!3384 = !DILocation(line: 1118, column: 9, scope: !3383)
!3385 = !DILocation(line: 1118, column: 7, scope: !3383)
!3386 = !DILocation(line: 1119, column: 7, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 1119, column: 7)
!3388 = !DILocation(line: 1119, column: 11, scope: !3387)
!3389 = !DILocation(line: 1119, column: 7, scope: !3383)
!3390 = !DILocation(line: 1120, column: 11, scope: !3387)
!3391 = !DILocation(line: 1120, column: 4, scope: !3387)
!3392 = !DILocation(line: 1121, column: 2, scope: !3383)
!3393 = !DILocalVariable(name: "____ptr", scope: !3394, file: !3, line: 1117, type: !705)
!3394 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 1117, column: 2)
!3395 = !DILocation(line: 1117, column: 2, scope: !3394)
!3396 = !DILocalVariable(name: "__mptr", scope: !3397, file: !3, line: 1117, type: !71)
!3397 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1117, column: 2)
!3398 = !DILocation(line: 1117, column: 2, scope: !3397)
!3399 = !DILocation(line: 1117, column: 2, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 1117, column: 2)
!3401 = distinct !{!3401, !3379, !3402}
!3402 = !DILocation(line: 1121, column: 2, scope: !3372)
!3403 = !DILocation(line: 1123, column: 2, scope: !3330)
!3404 = !DILocation(line: 1124, column: 1, scope: !3330)
!3405 = distinct !DISubprogram(name: "clk_core_save_context", scope: !3, file: !3, line: 1071, type: !3273, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3406 = !DILocalVariable(name: "core", arg: 1, scope: !3405, file: !3, line: 1071, type: !72)
!3407 = !DILocation(line: 1071, column: 51, scope: !3405)
!3408 = !DILocalVariable(name: "child", scope: !3405, file: !3, line: 1073, type: !72)
!3409 = !DILocation(line: 1073, column: 19, scope: !3405)
!3410 = !DILocalVariable(name: "ret", scope: !3405, file: !3, line: 1074, type: !89)
!3411 = !DILocation(line: 1074, column: 6, scope: !3405)
!3412 = !DILocalVariable(name: "____ptr", scope: !3413, file: !3, line: 1076, type: !705)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1076, column: 2)
!3414 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 1076, column: 2)
!3415 = !DILocation(line: 1076, column: 2, scope: !3413)
!3416 = !DILocalVariable(name: "__mptr", scope: !3417, file: !3, line: 1076, type: !71)
!3417 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 1076, column: 2)
!3418 = !DILocation(line: 1076, column: 2, scope: !3417)
!3419 = !DILocation(line: 1076, column: 2, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1076, column: 2)
!3421 = !DILocation(line: 1076, column: 2, scope: !3414)
!3422 = !DILocation(line: 1076, column: 2, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1076, column: 2)
!3424 = !DILocation(line: 1077, column: 31, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1076, column: 59)
!3426 = !DILocation(line: 1077, column: 9, scope: !3425)
!3427 = !DILocation(line: 1077, column: 7, scope: !3425)
!3428 = !DILocation(line: 1078, column: 7, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 1078, column: 7)
!3430 = !DILocation(line: 1078, column: 11, scope: !3429)
!3431 = !DILocation(line: 1078, column: 7, scope: !3425)
!3432 = !DILocation(line: 1079, column: 11, scope: !3429)
!3433 = !DILocation(line: 1079, column: 4, scope: !3429)
!3434 = !DILocation(line: 1080, column: 2, scope: !3425)
!3435 = !DILocalVariable(name: "____ptr", scope: !3436, file: !3, line: 1076, type: !705)
!3436 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 1076, column: 2)
!3437 = !DILocation(line: 1076, column: 2, scope: !3436)
!3438 = !DILocalVariable(name: "__mptr", scope: !3439, file: !3, line: 1076, type: !71)
!3439 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 1076, column: 2)
!3440 = !DILocation(line: 1076, column: 2, scope: !3439)
!3441 = !DILocation(line: 1076, column: 2, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 1076, column: 2)
!3443 = distinct !{!3443, !3421, !3444}
!3444 = !DILocation(line: 1080, column: 2, scope: !3414)
!3445 = !DILocation(line: 1082, column: 6, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 1082, column: 6)
!3447 = !DILocation(line: 1082, column: 12, scope: !3446)
!3448 = !DILocation(line: 1082, column: 16, scope: !3446)
!3449 = !DILocation(line: 1082, column: 19, scope: !3446)
!3450 = !DILocation(line: 1082, column: 25, scope: !3446)
!3451 = !DILocation(line: 1082, column: 30, scope: !3446)
!3452 = !DILocation(line: 1082, column: 6, scope: !3405)
!3453 = !DILocation(line: 1083, column: 9, scope: !3446)
!3454 = !DILocation(line: 1083, column: 15, scope: !3446)
!3455 = !DILocation(line: 1083, column: 20, scope: !3446)
!3456 = !DILocation(line: 1083, column: 33, scope: !3446)
!3457 = !DILocation(line: 1083, column: 39, scope: !3446)
!3458 = !DILocation(line: 1083, column: 7, scope: !3446)
!3459 = !DILocation(line: 1083, column: 3, scope: !3446)
!3460 = !DILocation(line: 1085, column: 9, scope: !3405)
!3461 = !DILocation(line: 1085, column: 2, scope: !3405)
!3462 = !DILocation(line: 1086, column: 1, scope: !3405)
!3463 = distinct !DISubprogram(name: "clk_restore_context", scope: !3, file: !3, line: 1133, type: !3022, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3464 = !DILocalVariable(name: "core", scope: !3463, file: !3, line: 1135, type: !72)
!3465 = !DILocation(line: 1135, column: 19, scope: !3463)
!3466 = !DILocalVariable(name: "____ptr", scope: !3467, file: !3, line: 1137, type: !705)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 1137, column: 2)
!3468 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 1137, column: 2)
!3469 = !DILocation(line: 1137, column: 2, scope: !3467)
!3470 = !DILocalVariable(name: "__mptr", scope: !3471, file: !3, line: 1137, type: !71)
!3471 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 1137, column: 2)
!3472 = !DILocation(line: 1137, column: 2, scope: !3471)
!3473 = !DILocation(line: 1137, column: 2, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 1137, column: 2)
!3475 = !DILocation(line: 1137, column: 2, scope: !3468)
!3476 = !DILocation(line: 1137, column: 2, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 1137, column: 2)
!3478 = !DILocation(line: 1138, column: 28, scope: !3477)
!3479 = !DILocation(line: 1138, column: 3, scope: !3477)
!3480 = !DILocalVariable(name: "____ptr", scope: !3481, file: !3, line: 1137, type: !705)
!3481 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 1137, column: 2)
!3482 = !DILocation(line: 1137, column: 2, scope: !3481)
!3483 = !DILocalVariable(name: "__mptr", scope: !3484, file: !3, line: 1137, type: !71)
!3484 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 1137, column: 2)
!3485 = !DILocation(line: 1137, column: 2, scope: !3484)
!3486 = !DILocation(line: 1137, column: 2, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 1137, column: 2)
!3488 = distinct !{!3488, !3475, !3489}
!3489 = !DILocation(line: 1138, column: 32, scope: !3468)
!3490 = !DILocalVariable(name: "____ptr", scope: !3491, file: !3, line: 1140, type: !705)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 1140, column: 2)
!3492 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 1140, column: 2)
!3493 = !DILocation(line: 1140, column: 2, scope: !3491)
!3494 = !DILocalVariable(name: "__mptr", scope: !3495, file: !3, line: 1140, type: !71)
!3495 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 1140, column: 2)
!3496 = !DILocation(line: 1140, column: 2, scope: !3495)
!3497 = !DILocation(line: 1140, column: 2, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 1140, column: 2)
!3499 = !DILocation(line: 1140, column: 2, scope: !3492)
!3500 = !DILocation(line: 1140, column: 2, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 1140, column: 2)
!3502 = !DILocation(line: 1141, column: 28, scope: !3501)
!3503 = !DILocation(line: 1141, column: 3, scope: !3501)
!3504 = !DILocalVariable(name: "____ptr", scope: !3505, file: !3, line: 1140, type: !705)
!3505 = distinct !DILexicalBlock(scope: !3501, file: !3, line: 1140, column: 2)
!3506 = !DILocation(line: 1140, column: 2, scope: !3505)
!3507 = !DILocalVariable(name: "__mptr", scope: !3508, file: !3, line: 1140, type: !71)
!3508 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 1140, column: 2)
!3509 = !DILocation(line: 1140, column: 2, scope: !3508)
!3510 = !DILocation(line: 1140, column: 2, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 1140, column: 2)
!3512 = distinct !{!3512, !3499, !3513}
!3513 = !DILocation(line: 1141, column: 32, scope: !3492)
!3514 = !DILocation(line: 1142, column: 1, scope: !3463)
!3515 = distinct !DISubprogram(name: "clk_core_restore_context", scope: !3, file: !3, line: 1088, type: !3094, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3516 = !DILocalVariable(name: "core", arg: 1, scope: !3515, file: !3, line: 1088, type: !72)
!3517 = !DILocation(line: 1088, column: 55, scope: !3515)
!3518 = !DILocalVariable(name: "child", scope: !3515, file: !3, line: 1090, type: !72)
!3519 = !DILocation(line: 1090, column: 19, scope: !3515)
!3520 = !DILocation(line: 1092, column: 6, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 1092, column: 6)
!3522 = !DILocation(line: 1092, column: 12, scope: !3521)
!3523 = !DILocation(line: 1092, column: 16, scope: !3521)
!3524 = !DILocation(line: 1092, column: 19, scope: !3521)
!3525 = !DILocation(line: 1092, column: 25, scope: !3521)
!3526 = !DILocation(line: 1092, column: 30, scope: !3521)
!3527 = !DILocation(line: 1092, column: 6, scope: !3515)
!3528 = !DILocation(line: 1093, column: 3, scope: !3521)
!3529 = !DILocation(line: 1093, column: 9, scope: !3521)
!3530 = !DILocation(line: 1093, column: 14, scope: !3521)
!3531 = !DILocation(line: 1093, column: 30, scope: !3521)
!3532 = !DILocation(line: 1093, column: 36, scope: !3521)
!3533 = !DILocalVariable(name: "____ptr", scope: !3534, file: !3, line: 1095, type: !705)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 1095, column: 2)
!3535 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 1095, column: 2)
!3536 = !DILocation(line: 1095, column: 2, scope: !3534)
!3537 = !DILocalVariable(name: "__mptr", scope: !3538, file: !3, line: 1095, type: !71)
!3538 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 1095, column: 2)
!3539 = !DILocation(line: 1095, column: 2, scope: !3538)
!3540 = !DILocation(line: 1095, column: 2, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 1095, column: 2)
!3542 = !DILocation(line: 1095, column: 2, scope: !3535)
!3543 = !DILocation(line: 1095, column: 2, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 1095, column: 2)
!3545 = !DILocation(line: 1096, column: 28, scope: !3544)
!3546 = !DILocation(line: 1096, column: 3, scope: !3544)
!3547 = !DILocalVariable(name: "____ptr", scope: !3548, file: !3, line: 1095, type: !705)
!3548 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 1095, column: 2)
!3549 = !DILocation(line: 1095, column: 2, scope: !3548)
!3550 = !DILocalVariable(name: "__mptr", scope: !3551, file: !3, line: 1095, type: !71)
!3551 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 1095, column: 2)
!3552 = !DILocation(line: 1095, column: 2, scope: !3551)
!3553 = !DILocation(line: 1095, column: 2, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 1095, column: 2)
!3555 = distinct !{!3555, !3542, !3556}
!3556 = !DILocation(line: 1096, column: 33, scope: !3535)
!3557 = !DILocation(line: 1097, column: 1, scope: !3515)
!3558 = distinct !DISubprogram(name: "clk_enable", scope: !3, file: !3, line: 1158, type: !3190, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3559 = !DILocalVariable(name: "clk", arg: 1, scope: !3558, file: !3, line: 1158, type: !95)
!3560 = !DILocation(line: 1158, column: 28, scope: !3558)
!3561 = !DILocation(line: 1160, column: 7, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 1160, column: 6)
!3563 = !DILocation(line: 1160, column: 6, scope: !3558)
!3564 = !DILocation(line: 1161, column: 3, scope: !3562)
!3565 = !DILocation(line: 1163, column: 30, scope: !3558)
!3566 = !DILocation(line: 1163, column: 35, scope: !3558)
!3567 = !DILocation(line: 1163, column: 9, scope: !3558)
!3568 = !DILocation(line: 1163, column: 2, scope: !3558)
!3569 = !DILocation(line: 1164, column: 1, scope: !3558)
!3570 = distinct !DISubprogram(name: "clk_core_enable_lock", scope: !3, file: !3, line: 1038, type: !3273, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3571 = !DILocalVariable(name: "core", arg: 1, scope: !3570, file: !3, line: 1038, type: !72)
!3572 = !DILocation(line: 1038, column: 50, scope: !3570)
!3573 = !DILocalVariable(name: "flags", scope: !3570, file: !3, line: 1040, type: !214)
!3574 = !DILocation(line: 1040, column: 16, scope: !3570)
!3575 = !DILocalVariable(name: "ret", scope: !3570, file: !3, line: 1041, type: !89)
!3576 = !DILocation(line: 1041, column: 6, scope: !3570)
!3577 = !DILocation(line: 1043, column: 10, scope: !3570)
!3578 = !DILocation(line: 1043, column: 8, scope: !3570)
!3579 = !DILocation(line: 1044, column: 24, scope: !3570)
!3580 = !DILocation(line: 1044, column: 8, scope: !3570)
!3581 = !DILocation(line: 1044, column: 6, scope: !3570)
!3582 = !DILocation(line: 1045, column: 20, scope: !3570)
!3583 = !DILocation(line: 1045, column: 2, scope: !3570)
!3584 = !DILocation(line: 1047, column: 9, scope: !3570)
!3585 = !DILocation(line: 1047, column: 2, scope: !3570)
!3586 = distinct !DISubprogram(name: "clk_ignore_unused_setup", scope: !3, file: !3, line: 1265, type: !2313, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3587 = !DILocalVariable(name: "__unused", arg: 1, scope: !3586, file: !3, line: 1265, type: !164)
!3588 = !DILocation(line: 1265, column: 49, scope: !3586)
!3589 = !DILocation(line: 1267, column: 20, scope: !3586)
!3590 = !DILocation(line: 1268, column: 2, scope: !3586)
!3591 = distinct !DISubprogram(name: "clk_disable_unused", scope: !3, file: !3, line: 1272, type: !3331, scopeLine: 1273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3592 = !DILocalVariable(name: "core", scope: !3591, file: !3, line: 1274, type: !72)
!3593 = !DILocation(line: 1274, column: 19, scope: !3591)
!3594 = !DILocation(line: 1276, column: 6, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 1276, column: 6)
!3596 = !DILocation(line: 1276, column: 6, scope: !3591)
!3597 = !DILocation(line: 1277, column: 3, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 1276, column: 25)
!3599 = !DILocation(line: 1278, column: 3, scope: !3598)
!3600 = !DILocation(line: 1281, column: 2, scope: !3591)
!3601 = !DILocalVariable(name: "____ptr", scope: !3602, file: !3, line: 1283, type: !705)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 1283, column: 2)
!3603 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 1283, column: 2)
!3604 = !DILocation(line: 1283, column: 2, scope: !3602)
!3605 = !DILocalVariable(name: "__mptr", scope: !3606, file: !3, line: 1283, type: !71)
!3606 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1283, column: 2)
!3607 = !DILocation(line: 1283, column: 2, scope: !3606)
!3608 = !DILocation(line: 1283, column: 2, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 1283, column: 2)
!3610 = !DILocation(line: 1283, column: 2, scope: !3603)
!3611 = !DILocation(line: 1283, column: 2, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 1283, column: 2)
!3613 = !DILocation(line: 1284, column: 30, scope: !3612)
!3614 = !DILocation(line: 1284, column: 3, scope: !3612)
!3615 = !DILocalVariable(name: "____ptr", scope: !3616, file: !3, line: 1283, type: !705)
!3616 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 1283, column: 2)
!3617 = !DILocation(line: 1283, column: 2, scope: !3616)
!3618 = !DILocalVariable(name: "__mptr", scope: !3619, file: !3, line: 1283, type: !71)
!3619 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 1283, column: 2)
!3620 = !DILocation(line: 1283, column: 2, scope: !3619)
!3621 = !DILocation(line: 1283, column: 2, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 1283, column: 2)
!3623 = distinct !{!3623, !3610, !3624}
!3624 = !DILocation(line: 1284, column: 34, scope: !3603)
!3625 = !DILocalVariable(name: "____ptr", scope: !3626, file: !3, line: 1286, type: !705)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 1286, column: 2)
!3627 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 1286, column: 2)
!3628 = !DILocation(line: 1286, column: 2, scope: !3626)
!3629 = !DILocalVariable(name: "__mptr", scope: !3630, file: !3, line: 1286, type: !71)
!3630 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 1286, column: 2)
!3631 = !DILocation(line: 1286, column: 2, scope: !3630)
!3632 = !DILocation(line: 1286, column: 2, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 1286, column: 2)
!3634 = !DILocation(line: 1286, column: 2, scope: !3627)
!3635 = !DILocation(line: 1286, column: 2, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 1286, column: 2)
!3637 = !DILocation(line: 1287, column: 30, scope: !3636)
!3638 = !DILocation(line: 1287, column: 3, scope: !3636)
!3639 = !DILocalVariable(name: "____ptr", scope: !3640, file: !3, line: 1286, type: !705)
!3640 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 1286, column: 2)
!3641 = !DILocation(line: 1286, column: 2, scope: !3640)
!3642 = !DILocalVariable(name: "__mptr", scope: !3643, file: !3, line: 1286, type: !71)
!3643 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 1286, column: 2)
!3644 = !DILocation(line: 1286, column: 2, scope: !3643)
!3645 = !DILocation(line: 1286, column: 2, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 1286, column: 2)
!3647 = distinct !{!3647, !3634, !3648}
!3648 = !DILocation(line: 1287, column: 34, scope: !3627)
!3649 = !DILocalVariable(name: "____ptr", scope: !3650, file: !3, line: 1289, type: !705)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 1289, column: 2)
!3651 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 1289, column: 2)
!3652 = !DILocation(line: 1289, column: 2, scope: !3650)
!3653 = !DILocalVariable(name: "__mptr", scope: !3654, file: !3, line: 1289, type: !71)
!3654 = distinct !DILexicalBlock(scope: !3650, file: !3, line: 1289, column: 2)
!3655 = !DILocation(line: 1289, column: 2, scope: !3654)
!3656 = !DILocation(line: 1289, column: 2, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 1289, column: 2)
!3658 = !DILocation(line: 1289, column: 2, scope: !3651)
!3659 = !DILocation(line: 1289, column: 2, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 1289, column: 2)
!3661 = !DILocation(line: 1290, column: 32, scope: !3660)
!3662 = !DILocation(line: 1290, column: 3, scope: !3660)
!3663 = !DILocalVariable(name: "____ptr", scope: !3664, file: !3, line: 1289, type: !705)
!3664 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 1289, column: 2)
!3665 = !DILocation(line: 1289, column: 2, scope: !3664)
!3666 = !DILocalVariable(name: "__mptr", scope: !3667, file: !3, line: 1289, type: !71)
!3667 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 1289, column: 2)
!3668 = !DILocation(line: 1289, column: 2, scope: !3667)
!3669 = !DILocation(line: 1289, column: 2, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 1289, column: 2)
!3671 = distinct !{!3671, !3658, !3672}
!3672 = !DILocation(line: 1290, column: 36, scope: !3651)
!3673 = !DILocalVariable(name: "____ptr", scope: !3674, file: !3, line: 1292, type: !705)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 1292, column: 2)
!3675 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 1292, column: 2)
!3676 = !DILocation(line: 1292, column: 2, scope: !3674)
!3677 = !DILocalVariable(name: "__mptr", scope: !3678, file: !3, line: 1292, type: !71)
!3678 = distinct !DILexicalBlock(scope: !3674, file: !3, line: 1292, column: 2)
!3679 = !DILocation(line: 1292, column: 2, scope: !3678)
!3680 = !DILocation(line: 1292, column: 2, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 1292, column: 2)
!3682 = !DILocation(line: 1292, column: 2, scope: !3675)
!3683 = !DILocation(line: 1292, column: 2, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 1292, column: 2)
!3685 = !DILocation(line: 1293, column: 32, scope: !3684)
!3686 = !DILocation(line: 1293, column: 3, scope: !3684)
!3687 = !DILocalVariable(name: "____ptr", scope: !3688, file: !3, line: 1292, type: !705)
!3688 = distinct !DILexicalBlock(scope: !3684, file: !3, line: 1292, column: 2)
!3689 = !DILocation(line: 1292, column: 2, scope: !3688)
!3690 = !DILocalVariable(name: "__mptr", scope: !3691, file: !3, line: 1292, type: !71)
!3691 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 1292, column: 2)
!3692 = !DILocation(line: 1292, column: 2, scope: !3691)
!3693 = !DILocation(line: 1292, column: 2, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 1292, column: 2)
!3695 = distinct !{!3695, !3682, !3696}
!3696 = !DILocation(line: 1293, column: 36, scope: !3675)
!3697 = !DILocation(line: 1295, column: 2, scope: !3591)
!3698 = !DILocation(line: 1297, column: 2, scope: !3591)
!3699 = !DILocation(line: 1298, column: 1, scope: !3591)
!3700 = distinct !DISubprogram(name: "clk_core_round_rate_nolock", scope: !3, file: !3, line: 1358, type: !3701, scopeLine: 1360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{!89, !72, !2129}
!3703 = !DILocalVariable(name: "core", arg: 1, scope: !3700, file: !3, line: 1358, type: !72)
!3704 = !DILocation(line: 1358, column: 56, scope: !3700)
!3705 = !DILocalVariable(name: "req", arg: 2, scope: !3700, file: !3, line: 1359, type: !2129)
!3706 = !DILocation(line: 1359, column: 36, scope: !3700)
!3707 = !DILocation(line: 1361, column: 2, scope: !3700)
!3708 = !DILocation(line: 1361, column: 2, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 1361, column: 2)
!3710 = !DILocation(line: 1363, column: 7, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 1363, column: 6)
!3712 = !DILocation(line: 1363, column: 6, scope: !3700)
!3713 = !DILocation(line: 1364, column: 3, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 1363, column: 13)
!3715 = !DILocation(line: 1364, column: 8, scope: !3714)
!3716 = !DILocation(line: 1364, column: 13, scope: !3714)
!3717 = !DILocation(line: 1365, column: 3, scope: !3714)
!3718 = !DILocation(line: 1368, column: 25, scope: !3700)
!3719 = !DILocation(line: 1368, column: 31, scope: !3700)
!3720 = !DILocation(line: 1368, column: 2, scope: !3700)
!3721 = !DILocation(line: 1370, column: 25, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 1370, column: 6)
!3723 = !DILocation(line: 1370, column: 6, scope: !3722)
!3724 = !DILocation(line: 1370, column: 6, scope: !3700)
!3725 = !DILocation(line: 1371, column: 42, scope: !3722)
!3726 = !DILocation(line: 1371, column: 48, scope: !3722)
!3727 = !DILocation(line: 1371, column: 10, scope: !3722)
!3728 = !DILocation(line: 1371, column: 3, scope: !3722)
!3729 = !DILocation(line: 1372, column: 11, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1372, column: 11)
!3731 = !DILocation(line: 1372, column: 17, scope: !3730)
!3732 = !DILocation(line: 1372, column: 23, scope: !3730)
!3733 = !DILocation(line: 1372, column: 11, scope: !3722)
!3734 = !DILocation(line: 1373, column: 37, scope: !3730)
!3735 = !DILocation(line: 1373, column: 43, scope: !3730)
!3736 = !DILocation(line: 1373, column: 51, scope: !3730)
!3737 = !DILocation(line: 1373, column: 10, scope: !3730)
!3738 = !DILocation(line: 1373, column: 3, scope: !3730)
!3739 = !DILocation(line: 1375, column: 14, scope: !3700)
!3740 = !DILocation(line: 1375, column: 20, scope: !3700)
!3741 = !DILocation(line: 1375, column: 2, scope: !3700)
!3742 = !DILocation(line: 1375, column: 7, scope: !3700)
!3743 = !DILocation(line: 1375, column: 12, scope: !3700)
!3744 = !DILocation(line: 1376, column: 2, scope: !3700)
!3745 = !DILocation(line: 1377, column: 1, scope: !3700)
!3746 = distinct !DISubprogram(name: "clk_hw_round_rate", scope: !3, file: !3, line: 1412, type: !2118, scopeLine: 1413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3747 = !DILocalVariable(name: "hw", arg: 1, scope: !3746, file: !3, line: 1412, type: !90)
!3748 = !DILocation(line: 1412, column: 48, scope: !3746)
!3749 = !DILocalVariable(name: "rate", arg: 2, scope: !3746, file: !3, line: 1412, type: !214)
!3750 = !DILocation(line: 1412, column: 66, scope: !3746)
!3751 = !DILocalVariable(name: "ret", scope: !3746, file: !3, line: 1414, type: !89)
!3752 = !DILocation(line: 1414, column: 6, scope: !3746)
!3753 = !DILocalVariable(name: "req", scope: !3746, file: !3, line: 1415, type: !2130)
!3754 = !DILocation(line: 1415, column: 26, scope: !3746)
!3755 = !DILocation(line: 1417, column: 26, scope: !3746)
!3756 = !DILocation(line: 1417, column: 30, scope: !3746)
!3757 = !DILocation(line: 1417, column: 41, scope: !3746)
!3758 = !DILocation(line: 1417, column: 56, scope: !3746)
!3759 = !DILocation(line: 1417, column: 2, scope: !3746)
!3760 = !DILocation(line: 1418, column: 13, scope: !3746)
!3761 = !DILocation(line: 1418, column: 6, scope: !3746)
!3762 = !DILocation(line: 1418, column: 11, scope: !3746)
!3763 = !DILocation(line: 1420, column: 35, scope: !3746)
!3764 = !DILocation(line: 1420, column: 39, scope: !3746)
!3765 = !DILocation(line: 1420, column: 8, scope: !3746)
!3766 = !DILocation(line: 1420, column: 6, scope: !3746)
!3767 = !DILocation(line: 1421, column: 6, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 1421, column: 6)
!3769 = !DILocation(line: 1421, column: 6, scope: !3746)
!3770 = !DILocation(line: 1422, column: 3, scope: !3768)
!3771 = !DILocation(line: 1424, column: 13, scope: !3746)
!3772 = !DILocation(line: 1424, column: 2, scope: !3746)
!3773 = !DILocation(line: 1425, column: 1, scope: !3746)
!3774 = distinct !DISubprogram(name: "clk_core_get_boundaries", scope: !3, file: !3, line: 616, type: !3775, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{null, !72, !2124, !2124}
!3777 = !DILocalVariable(name: "core", arg: 1, scope: !3774, file: !3, line: 616, type: !72)
!3778 = !DILocation(line: 616, column: 54, scope: !3774)
!3779 = !DILocalVariable(name: "min_rate", arg: 2, scope: !3774, file: !3, line: 617, type: !2124)
!3780 = !DILocation(line: 617, column: 24, scope: !3774)
!3781 = !DILocalVariable(name: "max_rate", arg: 3, scope: !3774, file: !3, line: 618, type: !2124)
!3782 = !DILocation(line: 618, column: 24, scope: !3774)
!3783 = !DILocalVariable(name: "clk_user", scope: !3774, file: !3, line: 620, type: !95)
!3784 = !DILocation(line: 620, column: 14, scope: !3774)
!3785 = !DILocation(line: 622, column: 2, scope: !3774)
!3786 = !DILocation(line: 622, column: 2, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 622, column: 2)
!3788 = !DILocation(line: 624, column: 14, scope: !3774)
!3789 = !DILocation(line: 624, column: 20, scope: !3774)
!3790 = !DILocation(line: 624, column: 3, scope: !3774)
!3791 = !DILocation(line: 624, column: 12, scope: !3774)
!3792 = !DILocation(line: 625, column: 14, scope: !3774)
!3793 = !DILocation(line: 625, column: 20, scope: !3774)
!3794 = !DILocation(line: 625, column: 3, scope: !3774)
!3795 = !DILocation(line: 625, column: 12, scope: !3774)
!3796 = !DILocalVariable(name: "____ptr", scope: !3797, file: !3, line: 627, type: !705)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 627, column: 2)
!3798 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 627, column: 2)
!3799 = !DILocation(line: 627, column: 2, scope: !3797)
!3800 = !DILocalVariable(name: "__mptr", scope: !3801, file: !3, line: 627, type: !71)
!3801 = distinct !DILexicalBlock(scope: !3797, file: !3, line: 627, column: 2)
!3802 = !DILocation(line: 627, column: 2, scope: !3801)
!3803 = !DILocation(line: 627, column: 2, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 627, column: 2)
!3805 = !DILocation(line: 627, column: 2, scope: !3798)
!3806 = !DILocation(line: 627, column: 2, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 627, column: 2)
!3808 = !DILocalVariable(name: "__UNIQUE_ID___x179", scope: !3809, file: !3, line: 628, type: !214)
!3809 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 628, column: 15)
!3810 = !DILocation(line: 628, column: 15, scope: !3809)
!3811 = !DILocalVariable(name: "__UNIQUE_ID___y180", scope: !3809, file: !3, line: 628, type: !214)
!3812 = !DILocation(line: 628, column: 4, scope: !3807)
!3813 = !DILocation(line: 628, column: 13, scope: !3807)
!3814 = !DILocation(line: 628, column: 3, scope: !3807)
!3815 = !DILocalVariable(name: "____ptr", scope: !3816, file: !3, line: 627, type: !705)
!3816 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 627, column: 2)
!3817 = !DILocation(line: 627, column: 2, scope: !3816)
!3818 = !DILocalVariable(name: "__mptr", scope: !3819, file: !3, line: 627, type: !71)
!3819 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 627, column: 2)
!3820 = !DILocation(line: 627, column: 2, scope: !3819)
!3821 = !DILocation(line: 627, column: 2, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 627, column: 2)
!3823 = distinct !{!3823, !3805, !3824}
!3824 = !DILocation(line: 628, column: 15, scope: !3798)
!3825 = !DILocalVariable(name: "____ptr", scope: !3826, file: !3, line: 630, type: !705)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 630, column: 2)
!3827 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 630, column: 2)
!3828 = !DILocation(line: 630, column: 2, scope: !3826)
!3829 = !DILocalVariable(name: "__mptr", scope: !3830, file: !3, line: 630, type: !71)
!3830 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 630, column: 2)
!3831 = !DILocation(line: 630, column: 2, scope: !3830)
!3832 = !DILocation(line: 630, column: 2, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 630, column: 2)
!3834 = !DILocation(line: 630, column: 2, scope: !3827)
!3835 = !DILocation(line: 630, column: 2, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 630, column: 2)
!3837 = !DILocalVariable(name: "__UNIQUE_ID___x183", scope: !3838, file: !3, line: 631, type: !214)
!3838 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 631, column: 15)
!3839 = !DILocation(line: 631, column: 15, scope: !3838)
!3840 = !DILocalVariable(name: "__UNIQUE_ID___y184", scope: !3838, file: !3, line: 631, type: !214)
!3841 = !DILocation(line: 631, column: 4, scope: !3836)
!3842 = !DILocation(line: 631, column: 13, scope: !3836)
!3843 = !DILocation(line: 631, column: 3, scope: !3836)
!3844 = !DILocalVariable(name: "____ptr", scope: !3845, file: !3, line: 630, type: !705)
!3845 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 630, column: 2)
!3846 = !DILocation(line: 630, column: 2, scope: !3845)
!3847 = !DILocalVariable(name: "__mptr", scope: !3848, file: !3, line: 630, type: !71)
!3848 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 630, column: 2)
!3849 = !DILocation(line: 630, column: 2, scope: !3848)
!3850 = !DILocation(line: 630, column: 2, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 630, column: 2)
!3852 = distinct !{!3852, !3834, !3853}
!3853 = !DILocation(line: 631, column: 15, scope: !3827)
!3854 = !DILocation(line: 632, column: 1, scope: !3774)
!3855 = distinct !DISubprogram(name: "clk_round_rate", scope: !3, file: !3, line: 1437, type: !3856, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{!199, !95, !214}
!3858 = !DILocalVariable(name: "clk", arg: 1, scope: !3855, file: !3, line: 1437, type: !95)
!3859 = !DILocation(line: 1437, column: 33, scope: !3855)
!3860 = !DILocalVariable(name: "rate", arg: 2, scope: !3855, file: !3, line: 1437, type: !214)
!3861 = !DILocation(line: 1437, column: 52, scope: !3855)
!3862 = !DILocalVariable(name: "req", scope: !3855, file: !3, line: 1439, type: !2130)
!3863 = !DILocation(line: 1439, column: 26, scope: !3855)
!3864 = !DILocalVariable(name: "ret", scope: !3855, file: !3, line: 1440, type: !89)
!3865 = !DILocation(line: 1440, column: 6, scope: !3855)
!3866 = !DILocation(line: 1442, column: 7, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1442, column: 6)
!3868 = !DILocation(line: 1442, column: 6, scope: !3855)
!3869 = !DILocation(line: 1443, column: 3, scope: !3867)
!3870 = !DILocation(line: 1445, column: 2, scope: !3855)
!3871 = !DILocation(line: 1447, column: 6, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1447, column: 6)
!3873 = !DILocation(line: 1447, column: 11, scope: !3872)
!3874 = !DILocation(line: 1447, column: 6, scope: !3855)
!3875 = !DILocation(line: 1448, column: 27, scope: !3872)
!3876 = !DILocation(line: 1448, column: 32, scope: !3872)
!3877 = !DILocation(line: 1448, column: 3, scope: !3872)
!3878 = !DILocation(line: 1450, column: 26, scope: !3855)
!3879 = !DILocation(line: 1450, column: 31, scope: !3855)
!3880 = !DILocation(line: 1450, column: 42, scope: !3855)
!3881 = !DILocation(line: 1450, column: 57, scope: !3855)
!3882 = !DILocation(line: 1450, column: 2, scope: !3855)
!3883 = !DILocation(line: 1451, column: 13, scope: !3855)
!3884 = !DILocation(line: 1451, column: 6, scope: !3855)
!3885 = !DILocation(line: 1451, column: 11, scope: !3855)
!3886 = !DILocation(line: 1453, column: 35, scope: !3855)
!3887 = !DILocation(line: 1453, column: 40, scope: !3855)
!3888 = !DILocation(line: 1453, column: 8, scope: !3855)
!3889 = !DILocation(line: 1453, column: 6, scope: !3855)
!3890 = !DILocation(line: 1455, column: 6, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1455, column: 6)
!3892 = !DILocation(line: 1455, column: 11, scope: !3891)
!3893 = !DILocation(line: 1455, column: 6, scope: !3855)
!3894 = !DILocation(line: 1456, column: 25, scope: !3891)
!3895 = !DILocation(line: 1456, column: 30, scope: !3891)
!3896 = !DILocation(line: 1456, column: 3, scope: !3891)
!3897 = !DILocation(line: 1458, column: 2, scope: !3855)
!3898 = !DILocation(line: 1460, column: 6, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1460, column: 6)
!3900 = !DILocation(line: 1460, column: 6, scope: !3855)
!3901 = !DILocation(line: 1461, column: 10, scope: !3899)
!3902 = !DILocation(line: 1461, column: 3, scope: !3899)
!3903 = !DILocation(line: 1463, column: 13, scope: !3855)
!3904 = !DILocation(line: 1463, column: 2, scope: !3855)
!3905 = !DILocation(line: 1464, column: 1, scope: !3855)
!3906 = distinct !DISubprogram(name: "clk_get_accuracy", scope: !3, file: !3, line: 1550, type: !3907, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{!199, !95}
!3909 = !DILocalVariable(name: "clk", arg: 1, scope: !3906, file: !3, line: 1550, type: !95)
!3910 = !DILocation(line: 1550, column: 35, scope: !3906)
!3911 = !DILocalVariable(name: "accuracy", scope: !3906, file: !3, line: 1552, type: !199)
!3912 = !DILocation(line: 1552, column: 7, scope: !3906)
!3913 = !DILocation(line: 1554, column: 7, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3906, file: !3, line: 1554, column: 6)
!3915 = !DILocation(line: 1554, column: 6, scope: !3906)
!3916 = !DILocation(line: 1555, column: 3, scope: !3914)
!3917 = !DILocation(line: 1557, column: 2, scope: !3906)
!3918 = !DILocation(line: 1558, column: 42, scope: !3906)
!3919 = !DILocation(line: 1558, column: 47, scope: !3906)
!3920 = !DILocation(line: 1558, column: 13, scope: !3906)
!3921 = !DILocation(line: 1558, column: 11, scope: !3906)
!3922 = !DILocation(line: 1559, column: 2, scope: !3906)
!3923 = !DILocation(line: 1561, column: 9, scope: !3906)
!3924 = !DILocation(line: 1561, column: 2, scope: !3906)
!3925 = !DILocation(line: 1562, column: 1, scope: !3906)
!3926 = distinct !DISubprogram(name: "clk_core_get_accuracy_recalc", scope: !3, file: !3, line: 1533, type: !3927, scopeLine: 1534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{!199, !72}
!3929 = !DILocalVariable(name: "core", arg: 1, scope: !3926, file: !3, line: 1533, type: !72)
!3930 = !DILocation(line: 1533, column: 59, scope: !3926)
!3931 = !DILocation(line: 1535, column: 6, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 1535, column: 6)
!3933 = !DILocation(line: 1535, column: 11, scope: !3932)
!3934 = !DILocation(line: 1535, column: 15, scope: !3932)
!3935 = !DILocation(line: 1535, column: 21, scope: !3932)
!3936 = !DILocation(line: 1535, column: 27, scope: !3932)
!3937 = !DILocation(line: 1535, column: 6, scope: !3926)
!3938 = !DILocation(line: 1536, column: 27, scope: !3932)
!3939 = !DILocation(line: 1536, column: 3, scope: !3932)
!3940 = !DILocation(line: 1538, column: 39, scope: !3926)
!3941 = !DILocation(line: 1538, column: 9, scope: !3926)
!3942 = !DILocation(line: 1538, column: 2, scope: !3926)
!3943 = distinct !DISubprogram(name: "clk_get_rate", scope: !3, file: !3, line: 1631, type: !3944, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!214, !95}
!3946 = !DILocalVariable(name: "clk", arg: 1, scope: !3943, file: !3, line: 1631, type: !95)
!3947 = !DILocation(line: 1631, column: 40, scope: !3943)
!3948 = !DILocalVariable(name: "rate", scope: !3943, file: !3, line: 1633, type: !214)
!3949 = !DILocation(line: 1633, column: 16, scope: !3943)
!3950 = !DILocation(line: 1635, column: 7, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3943, file: !3, line: 1635, column: 6)
!3952 = !DILocation(line: 1635, column: 6, scope: !3943)
!3953 = !DILocation(line: 1636, column: 3, scope: !3951)
!3954 = !DILocation(line: 1638, column: 2, scope: !3943)
!3955 = !DILocation(line: 1639, column: 34, scope: !3943)
!3956 = !DILocation(line: 1639, column: 39, scope: !3943)
!3957 = !DILocation(line: 1639, column: 9, scope: !3943)
!3958 = !DILocation(line: 1639, column: 7, scope: !3943)
!3959 = !DILocation(line: 1640, column: 2, scope: !3943)
!3960 = !DILocation(line: 1642, column: 9, scope: !3943)
!3961 = !DILocation(line: 1642, column: 2, scope: !3943)
!3962 = !DILocation(line: 1643, column: 1, scope: !3943)
!3963 = distinct !DISubprogram(name: "clk_core_get_rate_recalc", scope: !3, file: !3, line: 1615, type: !2488, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3964 = !DILocalVariable(name: "core", arg: 1, scope: !3963, file: !3, line: 1615, type: !72)
!3965 = !DILocation(line: 1615, column: 64, scope: !3963)
!3966 = !DILocation(line: 1617, column: 6, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 1617, column: 6)
!3968 = !DILocation(line: 1617, column: 11, scope: !3967)
!3969 = !DILocation(line: 1617, column: 15, scope: !3967)
!3970 = !DILocation(line: 1617, column: 21, scope: !3967)
!3971 = !DILocation(line: 1617, column: 27, scope: !3967)
!3972 = !DILocation(line: 1617, column: 6, scope: !3963)
!3973 = !DILocation(line: 1618, column: 22, scope: !3967)
!3974 = !DILocation(line: 1618, column: 3, scope: !3967)
!3975 = !DILocation(line: 1620, column: 34, scope: !3963)
!3976 = !DILocation(line: 1620, column: 9, scope: !3963)
!3977 = !DILocation(line: 1620, column: 2, scope: !3963)
!3978 = distinct !DISubprogram(name: "clk_hw_get_parent_index", scope: !3, file: !3, line: 1696, type: !87, scopeLine: 1697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!3979 = !DILocalVariable(name: "hw", arg: 1, scope: !3978, file: !3, line: 1696, type: !90)
!3980 = !DILocation(line: 1696, column: 44, scope: !3978)
!3981 = !DILocalVariable(name: "parent", scope: !3978, file: !3, line: 1698, type: !90)
!3982 = !DILocation(line: 1698, column: 17, scope: !3978)
!3983 = !DILocation(line: 1698, column: 44, scope: !3978)
!3984 = !DILocation(line: 1698, column: 26, scope: !3978)
!3985 = !DILocalVariable(name: "__ret_warn_on", scope: !3986, file: !3, line: 1700, type: !89)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1700, column: 6)
!3987 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 1700, column: 6)
!3988 = !DILocation(line: 1700, column: 6, scope: !3986)
!3989 = !DILocation(line: 1700, column: 6, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1700, column: 6)
!3991 = !DILocation(line: 1700, column: 6, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 1700, column: 6)
!3993 = !DILocation(line: 1700, column: 6, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1700, column: 6)
!3995 = !DILocation(line: 1700, column: 6, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1700, column: 6)
!3997 = !{i32 -2142924641, i32 -2142924612, i32 -2142924566, i32 -2142924508, i32 -2142924454, i32 -2142924400, i32 -2142924345, i32 -2142924314}
!3998 = !DILocation(line: 1700, column: 6, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1700, column: 6)
!4000 = !{i32 -2142923914, i32 -2142923907, i32 -2142923855, i32 -2142923824, i32 -2142923794}
!4001 = !DILocation(line: 1700, column: 6, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1700, column: 6)
!4003 = !DILocation(line: 1700, column: 6, scope: !3987)
!4004 = !DILocation(line: 1700, column: 6, scope: !3978)
!4005 = !DILocation(line: 1701, column: 3, scope: !3987)
!4006 = !DILocation(line: 1703, column: 32, scope: !3978)
!4007 = !DILocation(line: 1703, column: 36, scope: !3978)
!4008 = !DILocation(line: 1703, column: 42, scope: !3978)
!4009 = !DILocation(line: 1703, column: 50, scope: !3978)
!4010 = !DILocation(line: 1703, column: 9, scope: !3978)
!4011 = !DILocation(line: 1703, column: 2, scope: !3978)
!4012 = !DILocation(line: 1704, column: 1, scope: !3978)
!4013 = distinct !DISubprogram(name: "clk_fetch_parent_index", scope: !3, file: !3, line: 1646, type: !4014, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!89, !72, !72}
!4016 = !DILocalVariable(name: "core", arg: 1, scope: !4013, file: !3, line: 1646, type: !72)
!4017 = !DILocation(line: 1646, column: 52, scope: !4013)
!4018 = !DILocalVariable(name: "parent", arg: 2, scope: !4013, file: !3, line: 1647, type: !72)
!4019 = !DILocation(line: 1647, column: 24, scope: !4013)
!4020 = !DILocalVariable(name: "i", scope: !4013, file: !3, line: 1649, type: !89)
!4021 = !DILocation(line: 1649, column: 6, scope: !4013)
!4022 = !DILocation(line: 1651, column: 7, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 1651, column: 6)
!4024 = !DILocation(line: 1651, column: 6, scope: !4013)
!4025 = !DILocation(line: 1652, column: 3, scope: !4023)
!4026 = !DILocation(line: 1654, column: 9, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 1654, column: 2)
!4028 = !DILocation(line: 1654, column: 7, scope: !4027)
!4029 = !DILocation(line: 1654, column: 14, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 1654, column: 2)
!4031 = !DILocation(line: 1654, column: 18, scope: !4030)
!4032 = !DILocation(line: 1654, column: 24, scope: !4030)
!4033 = !DILocation(line: 1654, column: 16, scope: !4030)
!4034 = !DILocation(line: 1654, column: 2, scope: !4027)
!4035 = !DILocation(line: 1656, column: 7, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 1656, column: 7)
!4037 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 1654, column: 42)
!4038 = !DILocation(line: 1656, column: 13, scope: !4036)
!4039 = !DILocation(line: 1656, column: 21, scope: !4036)
!4040 = !DILocation(line: 1656, column: 24, scope: !4036)
!4041 = !DILocation(line: 1656, column: 32, scope: !4036)
!4042 = !DILocation(line: 1656, column: 29, scope: !4036)
!4043 = !DILocation(line: 1656, column: 7, scope: !4037)
!4044 = !DILocation(line: 1657, column: 11, scope: !4036)
!4045 = !DILocation(line: 1657, column: 4, scope: !4036)
!4046 = !DILocation(line: 1660, column: 7, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 1660, column: 7)
!4048 = !DILocation(line: 1660, column: 13, scope: !4047)
!4049 = !DILocation(line: 1660, column: 21, scope: !4047)
!4050 = !DILocation(line: 1660, column: 24, scope: !4047)
!4051 = !DILocation(line: 1660, column: 7, scope: !4037)
!4052 = !DILocation(line: 1661, column: 4, scope: !4047)
!4053 = !DILocation(line: 1664, column: 7, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 1664, column: 7)
!4055 = !DILocation(line: 1664, column: 13, scope: !4054)
!4056 = !DILocation(line: 1664, column: 21, scope: !4054)
!4057 = !DILocation(line: 1664, column: 24, scope: !4054)
!4058 = !DILocation(line: 1664, column: 7, scope: !4037)
!4059 = !DILocation(line: 1665, column: 8, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 1665, column: 8)
!4061 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1664, column: 28)
!4062 = !DILocation(line: 1665, column: 14, scope: !4060)
!4063 = !DILocation(line: 1665, column: 22, scope: !4060)
!4064 = !DILocation(line: 1665, column: 25, scope: !4060)
!4065 = !DILocation(line: 1665, column: 31, scope: !4060)
!4066 = !DILocation(line: 1665, column: 39, scope: !4060)
!4067 = !DILocation(line: 1665, column: 28, scope: !4060)
!4068 = !DILocation(line: 1665, column: 8, scope: !4061)
!4069 = !DILocation(line: 1666, column: 5, scope: !4060)
!4070 = !DILocation(line: 1669, column: 4, scope: !4061)
!4071 = !DILocation(line: 1673, column: 7, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 1673, column: 7)
!4073 = !DILocation(line: 1673, column: 30, scope: !4072)
!4074 = !DILocation(line: 1673, column: 36, scope: !4072)
!4075 = !DILocation(line: 1673, column: 17, scope: !4072)
!4076 = !DILocation(line: 1673, column: 14, scope: !4072)
!4077 = !DILocation(line: 1673, column: 7, scope: !4037)
!4078 = !DILocation(line: 1674, column: 4, scope: !4072)
!4079 = !DILocation(line: 1677, column: 7, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 1677, column: 7)
!4081 = !DILocation(line: 1677, column: 13, scope: !4080)
!4082 = !DILocation(line: 1677, column: 21, scope: !4080)
!4083 = !DILocation(line: 1677, column: 24, scope: !4080)
!4084 = !DILocation(line: 1677, column: 29, scope: !4080)
!4085 = !DILocation(line: 1678, column: 15, scope: !4080)
!4086 = !DILocation(line: 1678, column: 23, scope: !4080)
!4087 = !DILocation(line: 1678, column: 29, scope: !4080)
!4088 = !DILocation(line: 1678, column: 35, scope: !4080)
!4089 = !DILocation(line: 1678, column: 43, scope: !4080)
!4090 = !DILocation(line: 1678, column: 46, scope: !4080)
!4091 = !DILocation(line: 1678, column: 8, scope: !4080)
!4092 = !DILocation(line: 1677, column: 7, scope: !4037)
!4093 = !DILocation(line: 1679, column: 4, scope: !4080)
!4094 = !DILocation(line: 1680, column: 2, scope: !4037)
!4095 = !DILocation(line: 1654, column: 38, scope: !4030)
!4096 = !DILocation(line: 1654, column: 2, scope: !4030)
!4097 = distinct !{!4097, !4034, !4098}
!4098 = !DILocation(line: 1680, column: 2, scope: !4027)
!4099 = !DILocation(line: 1682, column: 6, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 1682, column: 6)
!4101 = !DILocation(line: 1682, column: 11, scope: !4100)
!4102 = !DILocation(line: 1682, column: 17, scope: !4100)
!4103 = !DILocation(line: 1682, column: 8, scope: !4100)
!4104 = !DILocation(line: 1682, column: 6, scope: !4013)
!4105 = !DILocation(line: 1683, column: 3, scope: !4100)
!4106 = !DILocation(line: 1685, column: 26, scope: !4013)
!4107 = !DILocation(line: 1685, column: 2, scope: !4013)
!4108 = !DILocation(line: 1685, column: 8, scope: !4013)
!4109 = !DILocation(line: 1685, column: 16, scope: !4013)
!4110 = !DILocation(line: 1685, column: 19, scope: !4013)
!4111 = !DILocation(line: 1685, column: 24, scope: !4013)
!4112 = !DILocation(line: 1686, column: 9, scope: !4013)
!4113 = !DILocation(line: 1686, column: 2, scope: !4013)
!4114 = !DILocation(line: 1687, column: 1, scope: !4013)
!4115 = distinct !DISubprogram(name: "clk_set_rate", scope: !3, file: !3, line: 2230, type: !4116, scopeLine: 2231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{!89, !95, !214}
!4118 = !DILocalVariable(name: "clk", arg: 1, scope: !4115, file: !3, line: 2230, type: !95)
!4119 = !DILocation(line: 2230, column: 30, scope: !4115)
!4120 = !DILocalVariable(name: "rate", arg: 2, scope: !4115, file: !3, line: 2230, type: !214)
!4121 = !DILocation(line: 2230, column: 49, scope: !4115)
!4122 = !DILocalVariable(name: "ret", scope: !4115, file: !3, line: 2232, type: !89)
!4123 = !DILocation(line: 2232, column: 6, scope: !4115)
!4124 = !DILocation(line: 2234, column: 7, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 2234, column: 6)
!4126 = !DILocation(line: 2234, column: 6, scope: !4115)
!4127 = !DILocation(line: 2235, column: 3, scope: !4125)
!4128 = !DILocation(line: 2238, column: 2, scope: !4115)
!4129 = !DILocation(line: 2240, column: 6, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 2240, column: 6)
!4131 = !DILocation(line: 2240, column: 11, scope: !4130)
!4132 = !DILocation(line: 2240, column: 6, scope: !4115)
!4133 = !DILocation(line: 2241, column: 27, scope: !4130)
!4134 = !DILocation(line: 2241, column: 32, scope: !4130)
!4135 = !DILocation(line: 2241, column: 3, scope: !4130)
!4136 = !DILocation(line: 2243, column: 33, scope: !4115)
!4137 = !DILocation(line: 2243, column: 38, scope: !4115)
!4138 = !DILocation(line: 2243, column: 44, scope: !4115)
!4139 = !DILocation(line: 2243, column: 8, scope: !4115)
!4140 = !DILocation(line: 2243, column: 6, scope: !4115)
!4141 = !DILocation(line: 2245, column: 6, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 2245, column: 6)
!4143 = !DILocation(line: 2245, column: 11, scope: !4142)
!4144 = !DILocation(line: 2245, column: 6, scope: !4115)
!4145 = !DILocation(line: 2246, column: 25, scope: !4142)
!4146 = !DILocation(line: 2246, column: 30, scope: !4142)
!4147 = !DILocation(line: 2246, column: 3, scope: !4142)
!4148 = !DILocation(line: 2248, column: 2, scope: !4115)
!4149 = !DILocation(line: 2250, column: 9, scope: !4115)
!4150 = !DILocation(line: 2250, column: 2, scope: !4115)
!4151 = !DILocation(line: 2251, column: 1, scope: !4115)
!4152 = distinct !DISubprogram(name: "clk_core_set_rate_nolock", scope: !3, file: !3, line: 2160, type: !4153, scopeLine: 2162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!89, !72, !214}
!4155 = !DILocalVariable(name: "core", arg: 1, scope: !4152, file: !3, line: 2160, type: !72)
!4156 = !DILocation(line: 2160, column: 54, scope: !4152)
!4157 = !DILocalVariable(name: "req_rate", arg: 2, scope: !4152, file: !3, line: 2161, type: !214)
!4158 = !DILocation(line: 2161, column: 23, scope: !4152)
!4159 = !DILocalVariable(name: "top", scope: !4152, file: !3, line: 2163, type: !72)
!4160 = !DILocation(line: 2163, column: 19, scope: !4152)
!4161 = !DILocalVariable(name: "fail_clk", scope: !4152, file: !3, line: 2163, type: !72)
!4162 = !DILocation(line: 2163, column: 25, scope: !4152)
!4163 = !DILocalVariable(name: "rate", scope: !4152, file: !3, line: 2164, type: !214)
!4164 = !DILocation(line: 2164, column: 16, scope: !4152)
!4165 = !DILocalVariable(name: "ret", scope: !4152, file: !3, line: 2165, type: !89)
!4166 = !DILocation(line: 2165, column: 6, scope: !4152)
!4167 = !DILocation(line: 2167, column: 7, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 2167, column: 6)
!4169 = !DILocation(line: 2167, column: 6, scope: !4152)
!4170 = !DILocation(line: 2168, column: 3, scope: !4168)
!4171 = !DILocation(line: 2170, column: 40, scope: !4152)
!4172 = !DILocation(line: 2170, column: 46, scope: !4152)
!4173 = !DILocation(line: 2170, column: 9, scope: !4152)
!4174 = !DILocation(line: 2170, column: 7, scope: !4152)
!4175 = !DILocation(line: 2173, column: 6, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 2173, column: 6)
!4177 = !DILocation(line: 2173, column: 39, scope: !4176)
!4178 = !DILocation(line: 2173, column: 14, scope: !4176)
!4179 = !DILocation(line: 2173, column: 11, scope: !4176)
!4180 = !DILocation(line: 2173, column: 6, scope: !4152)
!4181 = !DILocation(line: 2174, column: 3, scope: !4176)
!4182 = !DILocation(line: 2177, column: 33, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 2177, column: 6)
!4184 = !DILocation(line: 2177, column: 6, scope: !4183)
!4185 = !DILocation(line: 2177, column: 6, scope: !4152)
!4186 = !DILocation(line: 2178, column: 3, scope: !4183)
!4187 = !DILocation(line: 2181, column: 27, scope: !4152)
!4188 = !DILocation(line: 2181, column: 33, scope: !4152)
!4189 = !DILocation(line: 2181, column: 8, scope: !4152)
!4190 = !DILocation(line: 2181, column: 6, scope: !4152)
!4191 = !DILocation(line: 2182, column: 7, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 2182, column: 6)
!4193 = !DILocation(line: 2182, column: 6, scope: !4152)
!4194 = !DILocation(line: 2183, column: 3, scope: !4192)
!4195 = !DILocation(line: 2185, column: 27, scope: !4152)
!4196 = !DILocation(line: 2185, column: 8, scope: !4152)
!4197 = !DILocation(line: 2185, column: 6, scope: !4152)
!4198 = !DILocation(line: 2186, column: 6, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 2186, column: 6)
!4200 = !DILocation(line: 2186, column: 6, scope: !4152)
!4201 = !DILocation(line: 2187, column: 10, scope: !4199)
!4202 = !DILocation(line: 2187, column: 3, scope: !4199)
!4203 = !DILocation(line: 2190, column: 39, scope: !4152)
!4204 = !DILocation(line: 2190, column: 13, scope: !4152)
!4205 = !DILocation(line: 2190, column: 11, scope: !4152)
!4206 = !DILocation(line: 2191, column: 6, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 2191, column: 6)
!4208 = !DILocation(line: 2191, column: 6, scope: !4152)
!4209 = !DILocation(line: 2192, column: 3, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 2192, column: 3)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 2192, column: 3)
!4212 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 2191, column: 16)
!4213 = !DILocation(line: 2192, column: 3, scope: !4211)
!4214 = !DILocation(line: 2194, column: 29, scope: !4212)
!4215 = !DILocation(line: 2194, column: 3, scope: !4212)
!4216 = !DILocation(line: 2195, column: 7, scope: !4212)
!4217 = !DILocation(line: 2196, column: 3, scope: !4212)
!4218 = !DILocation(line: 2200, column: 18, scope: !4152)
!4219 = !DILocation(line: 2200, column: 2, scope: !4152)
!4220 = !DILocation(line: 2202, column: 19, scope: !4152)
!4221 = !DILocation(line: 2202, column: 2, scope: !4152)
!4222 = !DILocation(line: 2202, column: 8, scope: !4152)
!4223 = !DILocation(line: 2202, column: 17, scope: !4152)
!4224 = !DILabel(scope: !4152, name: "err", file: !3, line: 2203)
!4225 = !DILocation(line: 2203, column: 1, scope: !4152)
!4226 = !DILocation(line: 2204, column: 21, scope: !4152)
!4227 = !DILocation(line: 2204, column: 2, scope: !4152)
!4228 = !DILocation(line: 2206, column: 9, scope: !4152)
!4229 = !DILocation(line: 2206, column: 2, scope: !4152)
!4230 = !DILocation(line: 2207, column: 1, scope: !4152)
!4231 = distinct !DISubprogram(name: "clk_set_rate_exclusive", scope: !3, file: !3, line: 2273, type: !4116, scopeLine: 2274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4232 = !DILocalVariable(name: "clk", arg: 1, scope: !4231, file: !3, line: 2273, type: !95)
!4233 = !DILocation(line: 2273, column: 40, scope: !4231)
!4234 = !DILocalVariable(name: "rate", arg: 2, scope: !4231, file: !3, line: 2273, type: !214)
!4235 = !DILocation(line: 2273, column: 59, scope: !4231)
!4236 = !DILocalVariable(name: "ret", scope: !4231, file: !3, line: 2275, type: !89)
!4237 = !DILocation(line: 2275, column: 6, scope: !4231)
!4238 = !DILocation(line: 2277, column: 7, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 2277, column: 6)
!4240 = !DILocation(line: 2277, column: 6, scope: !4231)
!4241 = !DILocation(line: 2278, column: 3, scope: !4239)
!4242 = !DILocation(line: 2281, column: 2, scope: !4231)
!4243 = !DILocation(line: 2289, column: 33, scope: !4231)
!4244 = !DILocation(line: 2289, column: 38, scope: !4231)
!4245 = !DILocation(line: 2289, column: 44, scope: !4231)
!4246 = !DILocation(line: 2289, column: 8, scope: !4231)
!4247 = !DILocation(line: 2289, column: 6, scope: !4231)
!4248 = !DILocation(line: 2290, column: 7, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 2290, column: 6)
!4250 = !DILocation(line: 2290, column: 6, scope: !4231)
!4251 = !DILocation(line: 2291, column: 25, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 2290, column: 12)
!4253 = !DILocation(line: 2291, column: 30, scope: !4252)
!4254 = !DILocation(line: 2291, column: 3, scope: !4252)
!4255 = !DILocation(line: 2292, column: 3, scope: !4252)
!4256 = !DILocation(line: 2292, column: 8, scope: !4252)
!4257 = !DILocation(line: 2292, column: 23, scope: !4252)
!4258 = !DILocation(line: 2293, column: 2, scope: !4252)
!4259 = !DILocation(line: 2295, column: 2, scope: !4231)
!4260 = !DILocation(line: 2297, column: 9, scope: !4231)
!4261 = !DILocation(line: 2297, column: 2, scope: !4231)
!4262 = !DILocation(line: 2298, column: 1, scope: !4231)
!4263 = distinct !DISubprogram(name: "clk_set_rate_range", scope: !3, file: !3, line: 2309, type: !4264, scopeLine: 2310, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{!89, !95, !214, !214}
!4266 = !DILocalVariable(name: "clk", arg: 1, scope: !4263, file: !3, line: 2309, type: !95)
!4267 = !DILocation(line: 2309, column: 36, scope: !4263)
!4268 = !DILocalVariable(name: "min", arg: 2, scope: !4263, file: !3, line: 2309, type: !214)
!4269 = !DILocation(line: 2309, column: 55, scope: !4263)
!4270 = !DILocalVariable(name: "max", arg: 3, scope: !4263, file: !3, line: 2309, type: !214)
!4271 = !DILocation(line: 2309, column: 74, scope: !4263)
!4272 = !DILocalVariable(name: "ret", scope: !4263, file: !3, line: 2311, type: !89)
!4273 = !DILocation(line: 2311, column: 6, scope: !4263)
!4274 = !DILocalVariable(name: "old_min", scope: !4263, file: !3, line: 2312, type: !214)
!4275 = !DILocation(line: 2312, column: 16, scope: !4263)
!4276 = !DILocalVariable(name: "old_max", scope: !4263, file: !3, line: 2312, type: !214)
!4277 = !DILocation(line: 2312, column: 25, scope: !4263)
!4278 = !DILocalVariable(name: "rate", scope: !4263, file: !3, line: 2312, type: !214)
!4279 = !DILocation(line: 2312, column: 34, scope: !4263)
!4280 = !DILocation(line: 2314, column: 7, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 2314, column: 6)
!4282 = !DILocation(line: 2314, column: 6, scope: !4263)
!4283 = !DILocation(line: 2315, column: 3, scope: !4281)
!4284 = !DILocation(line: 2317, column: 6, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 2317, column: 6)
!4286 = !DILocation(line: 2317, column: 12, scope: !4285)
!4287 = !DILocation(line: 2317, column: 10, scope: !4285)
!4288 = !DILocation(line: 2317, column: 6, scope: !4263)
!4289 = !DILocation(line: 2318, column: 3, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 2317, column: 17)
!4291 = !DILocation(line: 2321, column: 3, scope: !4290)
!4292 = !DILocation(line: 2324, column: 2, scope: !4263)
!4293 = !DILocation(line: 2326, column: 6, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 2326, column: 6)
!4295 = !DILocation(line: 2326, column: 11, scope: !4294)
!4296 = !DILocation(line: 2326, column: 6, scope: !4263)
!4297 = !DILocation(line: 2327, column: 27, scope: !4294)
!4298 = !DILocation(line: 2327, column: 32, scope: !4294)
!4299 = !DILocation(line: 2327, column: 3, scope: !4294)
!4300 = !DILocation(line: 2330, column: 12, scope: !4263)
!4301 = !DILocation(line: 2330, column: 17, scope: !4263)
!4302 = !DILocation(line: 2330, column: 10, scope: !4263)
!4303 = !DILocation(line: 2331, column: 12, scope: !4263)
!4304 = !DILocation(line: 2331, column: 17, scope: !4263)
!4305 = !DILocation(line: 2331, column: 10, scope: !4263)
!4306 = !DILocation(line: 2332, column: 18, scope: !4263)
!4307 = !DILocation(line: 2332, column: 2, scope: !4263)
!4308 = !DILocation(line: 2332, column: 7, scope: !4263)
!4309 = !DILocation(line: 2332, column: 16, scope: !4263)
!4310 = !DILocation(line: 2333, column: 18, scope: !4263)
!4311 = !DILocation(line: 2333, column: 2, scope: !4263)
!4312 = !DILocation(line: 2333, column: 7, scope: !4263)
!4313 = !DILocation(line: 2333, column: 16, scope: !4263)
!4314 = !DILocation(line: 2335, column: 34, scope: !4263)
!4315 = !DILocation(line: 2335, column: 39, scope: !4263)
!4316 = !DILocation(line: 2335, column: 9, scope: !4263)
!4317 = !DILocation(line: 2335, column: 7, scope: !4263)
!4318 = !DILocation(line: 2336, column: 6, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 2336, column: 6)
!4320 = !DILocation(line: 2336, column: 13, scope: !4319)
!4321 = !DILocation(line: 2336, column: 11, scope: !4319)
!4322 = !DILocation(line: 2336, column: 17, scope: !4319)
!4323 = !DILocation(line: 2336, column: 20, scope: !4319)
!4324 = !DILocation(line: 2336, column: 27, scope: !4319)
!4325 = !DILocation(line: 2336, column: 25, scope: !4319)
!4326 = !DILocation(line: 2336, column: 6, scope: !4263)
!4327 = !DILocation(line: 2350, column: 7, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 2350, column: 7)
!4329 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 2336, column: 32)
!4330 = !DILocation(line: 2350, column: 14, scope: !4328)
!4331 = !DILocation(line: 2350, column: 12, scope: !4328)
!4332 = !DILocation(line: 2350, column: 7, scope: !4329)
!4333 = !DILocation(line: 2351, column: 11, scope: !4328)
!4334 = !DILocation(line: 2351, column: 9, scope: !4328)
!4335 = !DILocation(line: 2351, column: 4, scope: !4328)
!4336 = !DILocation(line: 2353, column: 11, scope: !4328)
!4337 = !DILocation(line: 2353, column: 9, scope: !4328)
!4338 = !DILocation(line: 2355, column: 34, scope: !4329)
!4339 = !DILocation(line: 2355, column: 39, scope: !4329)
!4340 = !DILocation(line: 2355, column: 45, scope: !4329)
!4341 = !DILocation(line: 2355, column: 9, scope: !4329)
!4342 = !DILocation(line: 2355, column: 7, scope: !4329)
!4343 = !DILocation(line: 2356, column: 7, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 2356, column: 7)
!4345 = !DILocation(line: 2356, column: 7, scope: !4329)
!4346 = !DILocation(line: 2358, column: 20, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 2356, column: 12)
!4348 = !DILocation(line: 2358, column: 4, scope: !4347)
!4349 = !DILocation(line: 2358, column: 9, scope: !4347)
!4350 = !DILocation(line: 2358, column: 18, scope: !4347)
!4351 = !DILocation(line: 2359, column: 20, scope: !4347)
!4352 = !DILocation(line: 2359, column: 4, scope: !4347)
!4353 = !DILocation(line: 2359, column: 9, scope: !4347)
!4354 = !DILocation(line: 2359, column: 18, scope: !4347)
!4355 = !DILocation(line: 2360, column: 3, scope: !4347)
!4356 = !DILocation(line: 2361, column: 2, scope: !4329)
!4357 = !DILocation(line: 2363, column: 6, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 2363, column: 6)
!4359 = !DILocation(line: 2363, column: 11, scope: !4358)
!4360 = !DILocation(line: 2363, column: 6, scope: !4263)
!4361 = !DILocation(line: 2364, column: 25, scope: !4358)
!4362 = !DILocation(line: 2364, column: 30, scope: !4358)
!4363 = !DILocation(line: 2364, column: 3, scope: !4358)
!4364 = !DILocation(line: 2366, column: 2, scope: !4263)
!4365 = !DILocation(line: 2368, column: 9, scope: !4263)
!4366 = !DILocation(line: 2368, column: 2, scope: !4263)
!4367 = !DILocation(line: 2369, column: 1, scope: !4263)
!4368 = distinct !DISubprogram(name: "clk_set_min_rate", scope: !3, file: !3, line: 2379, type: !4116, scopeLine: 2380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4369 = !DILocalVariable(name: "clk", arg: 1, scope: !4368, file: !3, line: 2379, type: !95)
!4370 = !DILocation(line: 2379, column: 34, scope: !4368)
!4371 = !DILocalVariable(name: "rate", arg: 2, scope: !4368, file: !3, line: 2379, type: !214)
!4372 = !DILocation(line: 2379, column: 53, scope: !4368)
!4373 = !DILocation(line: 2381, column: 7, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 2381, column: 6)
!4375 = !DILocation(line: 2381, column: 6, scope: !4368)
!4376 = !DILocation(line: 2382, column: 3, scope: !4374)
!4377 = !DILocation(line: 2384, column: 28, scope: !4368)
!4378 = !DILocation(line: 2384, column: 33, scope: !4368)
!4379 = !DILocation(line: 2384, column: 39, scope: !4368)
!4380 = !DILocation(line: 2384, column: 44, scope: !4368)
!4381 = !DILocation(line: 2384, column: 9, scope: !4368)
!4382 = !DILocation(line: 2384, column: 2, scope: !4368)
!4383 = !DILocation(line: 2385, column: 1, scope: !4368)
!4384 = distinct !DISubprogram(name: "clk_set_max_rate", scope: !3, file: !3, line: 2395, type: !4116, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4385 = !DILocalVariable(name: "clk", arg: 1, scope: !4384, file: !3, line: 2395, type: !95)
!4386 = !DILocation(line: 2395, column: 34, scope: !4384)
!4387 = !DILocalVariable(name: "rate", arg: 2, scope: !4384, file: !3, line: 2395, type: !214)
!4388 = !DILocation(line: 2395, column: 53, scope: !4384)
!4389 = !DILocation(line: 2397, column: 7, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 2397, column: 6)
!4391 = !DILocation(line: 2397, column: 6, scope: !4384)
!4392 = !DILocation(line: 2398, column: 3, scope: !4390)
!4393 = !DILocation(line: 2400, column: 28, scope: !4384)
!4394 = !DILocation(line: 2400, column: 33, scope: !4384)
!4395 = !DILocation(line: 2400, column: 38, scope: !4384)
!4396 = !DILocation(line: 2400, column: 48, scope: !4384)
!4397 = !DILocation(line: 2400, column: 9, scope: !4384)
!4398 = !DILocation(line: 2400, column: 2, scope: !4384)
!4399 = !DILocation(line: 2401, column: 1, scope: !4384)
!4400 = distinct !DISubprogram(name: "clk_get_parent", scope: !3, file: !3, line: 2410, type: !4401, scopeLine: 2411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4401 = !DISubroutineType(types: !4402)
!4402 = !{!95, !95}
!4403 = !DILocalVariable(name: "clk", arg: 1, scope: !4400, file: !3, line: 2410, type: !95)
!4404 = !DILocation(line: 2410, column: 40, scope: !4400)
!4405 = !DILocalVariable(name: "parent", scope: !4400, file: !3, line: 2412, type: !95)
!4406 = !DILocation(line: 2412, column: 14, scope: !4400)
!4407 = !DILocation(line: 2414, column: 7, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 2414, column: 6)
!4409 = !DILocation(line: 2414, column: 6, scope: !4400)
!4410 = !DILocation(line: 2415, column: 3, scope: !4408)
!4411 = !DILocation(line: 2417, column: 2, scope: !4400)
!4412 = !DILocation(line: 2419, column: 12, scope: !4400)
!4413 = !DILocation(line: 2419, column: 17, scope: !4400)
!4414 = !DILocation(line: 2419, column: 23, scope: !4400)
!4415 = !DILocation(line: 2419, column: 11, scope: !4400)
!4416 = !DILocation(line: 2419, column: 39, scope: !4400)
!4417 = !DILocation(line: 2419, column: 44, scope: !4400)
!4418 = !DILocation(line: 2419, column: 50, scope: !4400)
!4419 = !DILocation(line: 2419, column: 58, scope: !4400)
!4420 = !DILocation(line: 2419, column: 62, scope: !4400)
!4421 = !DILocation(line: 2419, column: 9, scope: !4400)
!4422 = !DILocation(line: 2420, column: 2, scope: !4400)
!4423 = !DILocation(line: 2422, column: 9, scope: !4400)
!4424 = !DILocation(line: 2422, column: 2, scope: !4400)
!4425 = !DILocation(line: 2423, column: 1, scope: !4400)
!4426 = distinct !DISubprogram(name: "clk_hw_reparent", scope: !3, file: !3, line: 2444, type: !4427, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{null, !90, !90}
!4429 = !DILocalVariable(name: "hw", arg: 1, scope: !4426, file: !3, line: 2444, type: !90)
!4430 = !DILocation(line: 2444, column: 37, scope: !4426)
!4431 = !DILocalVariable(name: "new_parent", arg: 2, scope: !4426, file: !3, line: 2444, type: !90)
!4432 = !DILocation(line: 2444, column: 56, scope: !4426)
!4433 = !DILocation(line: 2446, column: 7, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 2446, column: 6)
!4435 = !DILocation(line: 2446, column: 6, scope: !4426)
!4436 = !DILocation(line: 2447, column: 3, scope: !4434)
!4437 = !DILocation(line: 2449, column: 20, scope: !4426)
!4438 = !DILocation(line: 2449, column: 24, scope: !4426)
!4439 = !DILocation(line: 2449, column: 31, scope: !4426)
!4440 = !DILocation(line: 2449, column: 30, scope: !4426)
!4441 = !DILocation(line: 2449, column: 51, scope: !4426)
!4442 = !DILocation(line: 2449, column: 63, scope: !4426)
!4443 = !DILocation(line: 2449, column: 2, scope: !4426)
!4444 = !DILocation(line: 2450, column: 1, scope: !4426)
!4445 = distinct !DISubprogram(name: "clk_core_reparent", scope: !3, file: !3, line: 2436, type: !4446, scopeLine: 2438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{null, !72, !72}
!4448 = !DILocalVariable(name: "core", arg: 1, scope: !4445, file: !3, line: 2436, type: !72)
!4449 = !DILocation(line: 2436, column: 48, scope: !4445)
!4450 = !DILocalVariable(name: "new_parent", arg: 2, scope: !4445, file: !3, line: 2437, type: !72)
!4451 = !DILocation(line: 2437, column: 24, scope: !4445)
!4452 = !DILocation(line: 2439, column: 15, scope: !4445)
!4453 = !DILocation(line: 2439, column: 21, scope: !4445)
!4454 = !DILocation(line: 2439, column: 2, scope: !4445)
!4455 = !DILocation(line: 2440, column: 26, scope: !4445)
!4456 = !DILocation(line: 2440, column: 2, scope: !4445)
!4457 = !DILocation(line: 2441, column: 21, scope: !4445)
!4458 = !DILocation(line: 2441, column: 2, scope: !4445)
!4459 = !DILocation(line: 2442, column: 1, scope: !4445)
!4460 = distinct !DISubprogram(name: "clk_has_parent", scope: !3, file: !3, line: 2462, type: !4461, scopeLine: 2463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4461 = !DISubroutineType(types: !4462)
!4462 = !{!1008, !95, !95}
!4463 = !DILocalVariable(name: "clk", arg: 1, scope: !4460, file: !3, line: 2462, type: !95)
!4464 = !DILocation(line: 2462, column: 33, scope: !4460)
!4465 = !DILocalVariable(name: "parent", arg: 2, scope: !4460, file: !3, line: 2462, type: !95)
!4466 = !DILocation(line: 2462, column: 50, scope: !4460)
!4467 = !DILocalVariable(name: "core", scope: !4460, file: !3, line: 2464, type: !72)
!4468 = !DILocation(line: 2464, column: 19, scope: !4460)
!4469 = !DILocalVariable(name: "parent_core", scope: !4460, file: !3, line: 2464, type: !72)
!4470 = !DILocation(line: 2464, column: 26, scope: !4460)
!4471 = !DILocalVariable(name: "i", scope: !4460, file: !3, line: 2465, type: !89)
!4472 = !DILocation(line: 2465, column: 6, scope: !4460)
!4473 = !DILocation(line: 2468, column: 7, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 2468, column: 6)
!4475 = !DILocation(line: 2468, column: 11, scope: !4474)
!4476 = !DILocation(line: 2468, column: 15, scope: !4474)
!4477 = !DILocation(line: 2468, column: 6, scope: !4460)
!4478 = !DILocation(line: 2469, column: 3, scope: !4474)
!4479 = !DILocation(line: 2471, column: 9, scope: !4460)
!4480 = !DILocation(line: 2471, column: 14, scope: !4460)
!4481 = !DILocation(line: 2471, column: 7, scope: !4460)
!4482 = !DILocation(line: 2472, column: 16, scope: !4460)
!4483 = !DILocation(line: 2472, column: 24, scope: !4460)
!4484 = !DILocation(line: 2472, column: 14, scope: !4460)
!4485 = !DILocation(line: 2475, column: 6, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 2475, column: 6)
!4487 = !DILocation(line: 2475, column: 12, scope: !4486)
!4488 = !DILocation(line: 2475, column: 22, scope: !4486)
!4489 = !DILocation(line: 2475, column: 19, scope: !4486)
!4490 = !DILocation(line: 2475, column: 6, scope: !4460)
!4491 = !DILocation(line: 2476, column: 3, scope: !4486)
!4492 = !DILocation(line: 2478, column: 9, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 2478, column: 2)
!4494 = !DILocation(line: 2478, column: 7, scope: !4493)
!4495 = !DILocation(line: 2478, column: 14, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 2478, column: 2)
!4497 = !DILocation(line: 2478, column: 18, scope: !4496)
!4498 = !DILocation(line: 2478, column: 24, scope: !4496)
!4499 = !DILocation(line: 2478, column: 16, scope: !4496)
!4500 = !DILocation(line: 2478, column: 2, scope: !4493)
!4501 = !DILocation(line: 2479, column: 15, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 2479, column: 7)
!4503 = !DILocation(line: 2479, column: 21, scope: !4502)
!4504 = !DILocation(line: 2479, column: 29, scope: !4502)
!4505 = !DILocation(line: 2479, column: 32, scope: !4502)
!4506 = !DILocation(line: 2479, column: 38, scope: !4502)
!4507 = !DILocation(line: 2479, column: 51, scope: !4502)
!4508 = !DILocation(line: 2479, column: 8, scope: !4502)
!4509 = !DILocation(line: 2479, column: 7, scope: !4496)
!4510 = !DILocation(line: 2480, column: 4, scope: !4502)
!4511 = !DILocation(line: 2479, column: 55, scope: !4502)
!4512 = !DILocation(line: 2478, column: 38, scope: !4496)
!4513 = !DILocation(line: 2478, column: 2, scope: !4496)
!4514 = distinct !{!4514, !4500, !4515}
!4515 = !DILocation(line: 2480, column: 11, scope: !4493)
!4516 = !DILocation(line: 2482, column: 2, scope: !4460)
!4517 = !DILocation(line: 2483, column: 1, scope: !4460)
!4518 = distinct !DISubprogram(name: "clk_hw_set_parent", scope: !3, file: !3, line: 2551, type: !4519, scopeLine: 2552, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{!89, !90, !90}
!4521 = !DILocalVariable(name: "hw", arg: 1, scope: !4518, file: !3, line: 2551, type: !90)
!4522 = !DILocation(line: 2551, column: 38, scope: !4518)
!4523 = !DILocalVariable(name: "parent", arg: 2, scope: !4518, file: !3, line: 2551, type: !90)
!4524 = !DILocation(line: 2551, column: 57, scope: !4518)
!4525 = !DILocation(line: 2553, column: 36, scope: !4518)
!4526 = !DILocation(line: 2553, column: 40, scope: !4518)
!4527 = !DILocation(line: 2553, column: 46, scope: !4518)
!4528 = !DILocation(line: 2553, column: 54, scope: !4518)
!4529 = !DILocation(line: 2553, column: 9, scope: !4518)
!4530 = !DILocation(line: 2553, column: 2, scope: !4518)
!4531 = distinct !DISubprogram(name: "clk_core_set_parent_nolock", scope: !3, file: !3, line: 2486, type: !4014, scopeLine: 2488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4532 = !DILocalVariable(name: "core", arg: 1, scope: !4531, file: !3, line: 2486, type: !72)
!4533 = !DILocation(line: 2486, column: 56, scope: !4531)
!4534 = !DILocalVariable(name: "parent", arg: 2, scope: !4531, file: !3, line: 2487, type: !72)
!4535 = !DILocation(line: 2487, column: 28, scope: !4531)
!4536 = !DILocalVariable(name: "ret", scope: !4531, file: !3, line: 2489, type: !89)
!4537 = !DILocation(line: 2489, column: 6, scope: !4531)
!4538 = !DILocalVariable(name: "p_index", scope: !4531, file: !3, line: 2490, type: !89)
!4539 = !DILocation(line: 2490, column: 6, scope: !4531)
!4540 = !DILocalVariable(name: "p_rate", scope: !4531, file: !3, line: 2491, type: !214)
!4541 = !DILocation(line: 2491, column: 16, scope: !4531)
!4542 = !DILocation(line: 2493, column: 2, scope: !4531)
!4543 = !DILocation(line: 2493, column: 2, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2493, column: 2)
!4545 = !DILocation(line: 2495, column: 7, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2495, column: 6)
!4547 = !DILocation(line: 2495, column: 6, scope: !4531)
!4548 = !DILocation(line: 2496, column: 3, scope: !4546)
!4549 = !DILocation(line: 2498, column: 6, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2498, column: 6)
!4551 = !DILocation(line: 2498, column: 12, scope: !4550)
!4552 = !DILocation(line: 2498, column: 22, scope: !4550)
!4553 = !DILocation(line: 2498, column: 19, scope: !4550)
!4554 = !DILocation(line: 2498, column: 6, scope: !4531)
!4555 = !DILocation(line: 2499, column: 3, scope: !4550)
!4556 = !DILocation(line: 2502, column: 6, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2502, column: 6)
!4558 = !DILocation(line: 2502, column: 12, scope: !4557)
!4559 = !DILocation(line: 2502, column: 24, scope: !4557)
!4560 = !DILocation(line: 2502, column: 28, scope: !4557)
!4561 = !DILocation(line: 2502, column: 32, scope: !4557)
!4562 = !DILocation(line: 2502, column: 38, scope: !4557)
!4563 = !DILocation(line: 2502, column: 43, scope: !4557)
!4564 = !DILocation(line: 2502, column: 6, scope: !4531)
!4565 = !DILocation(line: 2503, column: 3, scope: !4557)
!4566 = !DILocation(line: 2506, column: 7, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2506, column: 6)
!4568 = !DILocation(line: 2506, column: 13, scope: !4567)
!4569 = !DILocation(line: 2506, column: 19, scope: !4567)
!4570 = !DILocation(line: 2506, column: 42, scope: !4567)
!4571 = !DILocation(line: 2506, column: 45, scope: !4567)
!4572 = !DILocation(line: 2506, column: 51, scope: !4567)
!4573 = !DILocation(line: 2506, column: 6, scope: !4531)
!4574 = !DILocation(line: 2507, column: 3, scope: !4567)
!4575 = !DILocation(line: 2509, column: 33, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2509, column: 6)
!4577 = !DILocation(line: 2509, column: 6, scope: !4576)
!4578 = !DILocation(line: 2509, column: 6, scope: !4531)
!4579 = !DILocation(line: 2510, column: 3, scope: !4576)
!4580 = !DILocation(line: 2513, column: 6, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2513, column: 6)
!4582 = !DILocation(line: 2513, column: 6, scope: !4531)
!4583 = !DILocation(line: 2514, column: 36, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 2513, column: 14)
!4585 = !DILocation(line: 2514, column: 42, scope: !4584)
!4586 = !DILocation(line: 2514, column: 13, scope: !4584)
!4587 = !DILocation(line: 2514, column: 11, scope: !4584)
!4588 = !DILocation(line: 2515, column: 7, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 2515, column: 7)
!4590 = !DILocation(line: 2515, column: 15, scope: !4589)
!4591 = !DILocation(line: 2515, column: 7, scope: !4584)
!4592 = !DILocation(line: 2516, column: 4, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 2516, column: 4)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 2516, column: 4)
!4595 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 2515, column: 20)
!4596 = !DILocation(line: 2516, column: 4, scope: !4594)
!4597 = !DILocation(line: 2518, column: 11, scope: !4595)
!4598 = !DILocation(line: 2518, column: 4, scope: !4595)
!4599 = !DILocation(line: 2520, column: 12, scope: !4584)
!4600 = !DILocation(line: 2520, column: 20, scope: !4584)
!4601 = !DILocation(line: 2520, column: 10, scope: !4584)
!4602 = !DILocation(line: 2521, column: 2, scope: !4584)
!4603 = !DILocation(line: 2523, column: 27, scope: !4531)
!4604 = !DILocation(line: 2523, column: 8, scope: !4531)
!4605 = !DILocation(line: 2523, column: 6, scope: !4531)
!4606 = !DILocation(line: 2524, column: 6, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2524, column: 6)
!4608 = !DILocation(line: 2524, column: 6, scope: !4531)
!4609 = !DILocation(line: 2525, column: 10, scope: !4607)
!4610 = !DILocation(line: 2525, column: 3, scope: !4607)
!4611 = !DILocation(line: 2528, column: 30, scope: !4531)
!4612 = !DILocation(line: 2528, column: 36, scope: !4531)
!4613 = !DILocation(line: 2528, column: 8, scope: !4531)
!4614 = !DILocation(line: 2528, column: 6, scope: !4531)
!4615 = !DILocation(line: 2531, column: 6, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2531, column: 6)
!4617 = !DILocation(line: 2531, column: 10, scope: !4616)
!4618 = !DILocation(line: 2531, column: 6, scope: !4531)
!4619 = !DILocation(line: 2532, column: 3, scope: !4616)
!4620 = !DILocation(line: 2535, column: 25, scope: !4531)
!4621 = !DILocation(line: 2535, column: 31, scope: !4531)
!4622 = !DILocation(line: 2535, column: 39, scope: !4531)
!4623 = !DILocation(line: 2535, column: 8, scope: !4531)
!4624 = !DILocation(line: 2535, column: 6, scope: !4531)
!4625 = !DILocation(line: 2538, column: 6, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2538, column: 6)
!4627 = !DILocation(line: 2538, column: 6, scope: !4531)
!4628 = !DILocation(line: 2539, column: 22, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 2538, column: 11)
!4630 = !DILocation(line: 2539, column: 3, scope: !4629)
!4631 = !DILocation(line: 2540, column: 2, scope: !4629)
!4632 = !DILocation(line: 2541, column: 22, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 2540, column: 9)
!4634 = !DILocation(line: 2541, column: 3, scope: !4633)
!4635 = !DILocation(line: 2542, column: 27, scope: !4633)
!4636 = !DILocation(line: 2542, column: 3, scope: !4633)
!4637 = !DILabel(scope: !4531, name: "runtime_put", file: !3, line: 2545)
!4638 = !DILocation(line: 2545, column: 1, scope: !4531)
!4639 = !DILocation(line: 2546, column: 21, scope: !4531)
!4640 = !DILocation(line: 2546, column: 2, scope: !4531)
!4641 = !DILocation(line: 2548, column: 9, scope: !4531)
!4642 = !DILocation(line: 2548, column: 2, scope: !4531)
!4643 = !DILocation(line: 2549, column: 1, scope: !4531)
!4644 = distinct !DISubprogram(name: "clk_set_parent", scope: !3, file: !3, line: 2574, type: !4645, scopeLine: 2575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!89, !95, !95}
!4647 = !DILocalVariable(name: "clk", arg: 1, scope: !4644, file: !3, line: 2574, type: !95)
!4648 = !DILocation(line: 2574, column: 32, scope: !4644)
!4649 = !DILocalVariable(name: "parent", arg: 2, scope: !4644, file: !3, line: 2574, type: !95)
!4650 = !DILocation(line: 2574, column: 49, scope: !4644)
!4651 = !DILocalVariable(name: "ret", scope: !4644, file: !3, line: 2576, type: !89)
!4652 = !DILocation(line: 2576, column: 6, scope: !4644)
!4653 = !DILocation(line: 2578, column: 7, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 2578, column: 6)
!4655 = !DILocation(line: 2578, column: 6, scope: !4644)
!4656 = !DILocation(line: 2579, column: 3, scope: !4654)
!4657 = !DILocation(line: 2581, column: 2, scope: !4644)
!4658 = !DILocation(line: 2583, column: 6, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 2583, column: 6)
!4660 = !DILocation(line: 2583, column: 11, scope: !4659)
!4661 = !DILocation(line: 2583, column: 6, scope: !4644)
!4662 = !DILocation(line: 2584, column: 27, scope: !4659)
!4663 = !DILocation(line: 2584, column: 32, scope: !4659)
!4664 = !DILocation(line: 2584, column: 3, scope: !4659)
!4665 = !DILocation(line: 2586, column: 35, scope: !4644)
!4666 = !DILocation(line: 2586, column: 40, scope: !4644)
!4667 = !DILocation(line: 2587, column: 7, scope: !4644)
!4668 = !DILocation(line: 2587, column: 16, scope: !4644)
!4669 = !DILocation(line: 2587, column: 24, scope: !4644)
!4670 = !DILocation(line: 2586, column: 8, scope: !4644)
!4671 = !DILocation(line: 2586, column: 6, scope: !4644)
!4672 = !DILocation(line: 2589, column: 6, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 2589, column: 6)
!4674 = !DILocation(line: 2589, column: 11, scope: !4673)
!4675 = !DILocation(line: 2589, column: 6, scope: !4644)
!4676 = !DILocation(line: 2590, column: 25, scope: !4673)
!4677 = !DILocation(line: 2590, column: 30, scope: !4673)
!4678 = !DILocation(line: 2590, column: 3, scope: !4673)
!4679 = !DILocation(line: 2592, column: 2, scope: !4644)
!4680 = !DILocation(line: 2594, column: 9, scope: !4644)
!4681 = !DILocation(line: 2594, column: 2, scope: !4644)
!4682 = !DILocation(line: 2595, column: 1, scope: !4644)
!4683 = distinct !DISubprogram(name: "clk_set_phase", scope: !3, file: !3, line: 2643, type: !4684, scopeLine: 2644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!89, !95, !89}
!4686 = !DILocalVariable(name: "clk", arg: 1, scope: !4683, file: !3, line: 2643, type: !95)
!4687 = !DILocation(line: 2643, column: 31, scope: !4683)
!4688 = !DILocalVariable(name: "degrees", arg: 2, scope: !4683, file: !3, line: 2643, type: !89)
!4689 = !DILocation(line: 2643, column: 40, scope: !4683)
!4690 = !DILocalVariable(name: "ret", scope: !4683, file: !3, line: 2645, type: !89)
!4691 = !DILocation(line: 2645, column: 6, scope: !4683)
!4692 = !DILocation(line: 2647, column: 7, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 2647, column: 6)
!4694 = !DILocation(line: 2647, column: 6, scope: !4683)
!4695 = !DILocation(line: 2648, column: 3, scope: !4693)
!4696 = !DILocation(line: 2651, column: 10, scope: !4683)
!4697 = !DILocation(line: 2652, column: 6, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 2652, column: 6)
!4699 = !DILocation(line: 2652, column: 14, scope: !4698)
!4700 = !DILocation(line: 2652, column: 6, scope: !4683)
!4701 = !DILocation(line: 2653, column: 11, scope: !4698)
!4702 = !DILocation(line: 2653, column: 3, scope: !4698)
!4703 = !DILocation(line: 2655, column: 2, scope: !4683)
!4704 = !DILocation(line: 2657, column: 6, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 2657, column: 6)
!4706 = !DILocation(line: 2657, column: 11, scope: !4705)
!4707 = !DILocation(line: 2657, column: 6, scope: !4683)
!4708 = !DILocation(line: 2658, column: 27, scope: !4705)
!4709 = !DILocation(line: 2658, column: 32, scope: !4705)
!4710 = !DILocation(line: 2658, column: 3, scope: !4705)
!4711 = !DILocation(line: 2660, column: 34, scope: !4683)
!4712 = !DILocation(line: 2660, column: 39, scope: !4683)
!4713 = !DILocation(line: 2660, column: 45, scope: !4683)
!4714 = !DILocation(line: 2660, column: 8, scope: !4683)
!4715 = !DILocation(line: 2660, column: 6, scope: !4683)
!4716 = !DILocation(line: 2662, column: 6, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 2662, column: 6)
!4718 = !DILocation(line: 2662, column: 11, scope: !4717)
!4719 = !DILocation(line: 2662, column: 6, scope: !4683)
!4720 = !DILocation(line: 2663, column: 25, scope: !4717)
!4721 = !DILocation(line: 2663, column: 30, scope: !4717)
!4722 = !DILocation(line: 2663, column: 3, scope: !4717)
!4723 = !DILocation(line: 2665, column: 2, scope: !4683)
!4724 = !DILocation(line: 2667, column: 9, scope: !4683)
!4725 = !DILocation(line: 2667, column: 2, scope: !4683)
!4726 = !DILocation(line: 2668, column: 1, scope: !4683)
!4727 = distinct !DISubprogram(name: "clk_core_set_phase_nolock", scope: !3, file: !3, line: 2598, type: !4728, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!89, !72, !89}
!4730 = !DILocalVariable(name: "core", arg: 1, scope: !4727, file: !3, line: 2598, type: !72)
!4731 = !DILocation(line: 2598, column: 55, scope: !4727)
!4732 = !DILocalVariable(name: "degrees", arg: 2, scope: !4727, file: !3, line: 2598, type: !89)
!4733 = !DILocation(line: 2598, column: 65, scope: !4727)
!4734 = !DILocalVariable(name: "ret", scope: !4727, file: !3, line: 2600, type: !89)
!4735 = !DILocation(line: 2600, column: 6, scope: !4727)
!4736 = !DILocation(line: 2602, column: 2, scope: !4727)
!4737 = !DILocation(line: 2602, column: 2, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 2602, column: 2)
!4739 = !DILocation(line: 2604, column: 7, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 2604, column: 6)
!4741 = !DILocation(line: 2604, column: 6, scope: !4727)
!4742 = !DILocation(line: 2605, column: 3, scope: !4740)
!4743 = !DILocation(line: 2607, column: 33, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 2607, column: 6)
!4745 = !DILocation(line: 2607, column: 6, scope: !4744)
!4746 = !DILocation(line: 2607, column: 6, scope: !4727)
!4747 = !DILocation(line: 2608, column: 3, scope: !4744)
!4748 = !DILocation(line: 2610, column: 22, scope: !4727)
!4749 = !DILocation(line: 2610, column: 28, scope: !4727)
!4750 = !DILocation(line: 2610, column: 2, scope: !4727)
!4751 = !DILocation(line: 2612, column: 6, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 2612, column: 6)
!4753 = !DILocation(line: 2612, column: 12, scope: !4752)
!4754 = !DILocation(line: 2612, column: 17, scope: !4752)
!4755 = !DILocation(line: 2612, column: 6, scope: !4727)
!4756 = !DILocation(line: 2613, column: 9, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 2612, column: 28)
!4758 = !DILocation(line: 2613, column: 15, scope: !4757)
!4759 = !DILocation(line: 2613, column: 20, scope: !4757)
!4760 = !DILocation(line: 2613, column: 30, scope: !4757)
!4761 = !DILocation(line: 2613, column: 36, scope: !4757)
!4762 = !DILocation(line: 2613, column: 40, scope: !4757)
!4763 = !DILocation(line: 2613, column: 7, scope: !4757)
!4764 = !DILocation(line: 2614, column: 8, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 2614, column: 7)
!4766 = !DILocation(line: 2614, column: 7, scope: !4757)
!4767 = !DILocation(line: 2615, column: 18, scope: !4765)
!4768 = !DILocation(line: 2615, column: 4, scope: !4765)
!4769 = !DILocation(line: 2615, column: 10, scope: !4765)
!4770 = !DILocation(line: 2615, column: 16, scope: !4765)
!4771 = !DILocation(line: 2616, column: 2, scope: !4757)
!4772 = !DILocation(line: 2618, column: 31, scope: !4727)
!4773 = !DILocation(line: 2618, column: 37, scope: !4727)
!4774 = !DILocation(line: 2618, column: 2, scope: !4727)
!4775 = !DILocation(line: 2620, column: 9, scope: !4727)
!4776 = !DILocation(line: 2620, column: 2, scope: !4727)
!4777 = !DILocation(line: 2621, column: 1, scope: !4727)
!4778 = distinct !DISubprogram(name: "clk_get_phase", scope: !3, file: !3, line: 2694, type: !3190, scopeLine: 2695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4779 = !DILocalVariable(name: "clk", arg: 1, scope: !4778, file: !3, line: 2694, type: !95)
!4780 = !DILocation(line: 2694, column: 31, scope: !4778)
!4781 = !DILocalVariable(name: "ret", scope: !4778, file: !3, line: 2696, type: !89)
!4782 = !DILocation(line: 2696, column: 6, scope: !4778)
!4783 = !DILocation(line: 2698, column: 7, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 2698, column: 6)
!4785 = !DILocation(line: 2698, column: 6, scope: !4778)
!4786 = !DILocation(line: 2699, column: 3, scope: !4784)
!4787 = !DILocation(line: 2701, column: 2, scope: !4778)
!4788 = !DILocation(line: 2702, column: 27, scope: !4778)
!4789 = !DILocation(line: 2702, column: 32, scope: !4778)
!4790 = !DILocation(line: 2702, column: 8, scope: !4778)
!4791 = !DILocation(line: 2702, column: 6, scope: !4778)
!4792 = !DILocation(line: 2703, column: 2, scope: !4778)
!4793 = !DILocation(line: 2705, column: 9, scope: !4778)
!4794 = !DILocation(line: 2705, column: 2, scope: !4778)
!4795 = !DILocation(line: 2706, column: 1, scope: !4778)
!4796 = distinct !DISubprogram(name: "clk_core_get_phase", scope: !3, file: !3, line: 2671, type: !3273, scopeLine: 2672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4797 = !DILocalVariable(name: "core", arg: 1, scope: !4796, file: !3, line: 2671, type: !72)
!4798 = !DILocation(line: 2671, column: 48, scope: !4796)
!4799 = !DILocalVariable(name: "ret", scope: !4796, file: !3, line: 2673, type: !89)
!4800 = !DILocation(line: 2673, column: 6, scope: !4796)
!4801 = !DILocation(line: 2675, column: 2, scope: !4796)
!4802 = !DILocation(line: 2675, column: 2, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2675, column: 2)
!4804 = !DILocation(line: 2676, column: 7, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2676, column: 6)
!4806 = !DILocation(line: 2676, column: 13, scope: !4805)
!4807 = !DILocation(line: 2676, column: 18, scope: !4805)
!4808 = !DILocation(line: 2676, column: 6, scope: !4796)
!4809 = !DILocation(line: 2677, column: 3, scope: !4805)
!4810 = !DILocation(line: 2680, column: 8, scope: !4796)
!4811 = !DILocation(line: 2680, column: 14, scope: !4796)
!4812 = !DILocation(line: 2680, column: 19, scope: !4796)
!4813 = !DILocation(line: 2680, column: 29, scope: !4796)
!4814 = !DILocation(line: 2680, column: 35, scope: !4796)
!4815 = !DILocation(line: 2680, column: 6, scope: !4796)
!4816 = !DILocation(line: 2681, column: 6, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2681, column: 6)
!4818 = !DILocation(line: 2681, column: 10, scope: !4817)
!4819 = !DILocation(line: 2681, column: 6, scope: !4796)
!4820 = !DILocation(line: 2682, column: 17, scope: !4817)
!4821 = !DILocation(line: 2682, column: 3, scope: !4817)
!4822 = !DILocation(line: 2682, column: 9, scope: !4817)
!4823 = !DILocation(line: 2682, column: 15, scope: !4817)
!4824 = !DILocation(line: 2684, column: 9, scope: !4796)
!4825 = !DILocation(line: 2684, column: 2, scope: !4796)
!4826 = !DILocation(line: 2685, column: 1, scope: !4796)
!4827 = distinct !DISubprogram(name: "clk_set_duty_cycle", scope: !3, file: !3, line: 2810, type: !4828, scopeLine: 2811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4828 = !DISubroutineType(types: !4829)
!4829 = !{!89, !95, !7, !7}
!4830 = !DILocalVariable(name: "clk", arg: 1, scope: !4827, file: !3, line: 2810, type: !95)
!4831 = !DILocation(line: 2810, column: 36, scope: !4827)
!4832 = !DILocalVariable(name: "num", arg: 2, scope: !4827, file: !3, line: 2810, type: !7)
!4833 = !DILocation(line: 2810, column: 54, scope: !4827)
!4834 = !DILocalVariable(name: "den", arg: 3, scope: !4827, file: !3, line: 2810, type: !7)
!4835 = !DILocation(line: 2810, column: 72, scope: !4827)
!4836 = !DILocalVariable(name: "ret", scope: !4827, file: !3, line: 2812, type: !89)
!4837 = !DILocation(line: 2812, column: 6, scope: !4827)
!4838 = !DILocalVariable(name: "duty", scope: !4827, file: !3, line: 2813, type: !2164)
!4839 = !DILocation(line: 2813, column: 18, scope: !4827)
!4840 = !DILocation(line: 2815, column: 7, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2815, column: 6)
!4842 = !DILocation(line: 2815, column: 6, scope: !4827)
!4843 = !DILocation(line: 2816, column: 3, scope: !4841)
!4844 = !DILocation(line: 2819, column: 6, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2819, column: 6)
!4846 = !DILocation(line: 2819, column: 10, scope: !4845)
!4847 = !DILocation(line: 2819, column: 15, scope: !4845)
!4848 = !DILocation(line: 2819, column: 18, scope: !4845)
!4849 = !DILocation(line: 2819, column: 24, scope: !4845)
!4850 = !DILocation(line: 2819, column: 22, scope: !4845)
!4851 = !DILocation(line: 2819, column: 6, scope: !4827)
!4852 = !DILocation(line: 2820, column: 3, scope: !4845)
!4853 = !DILocation(line: 2822, column: 13, scope: !4827)
!4854 = !DILocation(line: 2822, column: 7, scope: !4827)
!4855 = !DILocation(line: 2822, column: 11, scope: !4827)
!4856 = !DILocation(line: 2823, column: 13, scope: !4827)
!4857 = !DILocation(line: 2823, column: 7, scope: !4827)
!4858 = !DILocation(line: 2823, column: 11, scope: !4827)
!4859 = !DILocation(line: 2825, column: 2, scope: !4827)
!4860 = !DILocation(line: 2827, column: 6, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2827, column: 6)
!4862 = !DILocation(line: 2827, column: 11, scope: !4861)
!4863 = !DILocation(line: 2827, column: 6, scope: !4827)
!4864 = !DILocation(line: 2828, column: 27, scope: !4861)
!4865 = !DILocation(line: 2828, column: 32, scope: !4861)
!4866 = !DILocation(line: 2828, column: 3, scope: !4861)
!4867 = !DILocation(line: 2830, column: 39, scope: !4827)
!4868 = !DILocation(line: 2830, column: 44, scope: !4827)
!4869 = !DILocation(line: 2830, column: 8, scope: !4827)
!4870 = !DILocation(line: 2830, column: 6, scope: !4827)
!4871 = !DILocation(line: 2832, column: 6, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2832, column: 6)
!4873 = !DILocation(line: 2832, column: 11, scope: !4872)
!4874 = !DILocation(line: 2832, column: 6, scope: !4827)
!4875 = !DILocation(line: 2833, column: 25, scope: !4872)
!4876 = !DILocation(line: 2833, column: 30, scope: !4872)
!4877 = !DILocation(line: 2833, column: 3, scope: !4872)
!4878 = !DILocation(line: 2835, column: 2, scope: !4827)
!4879 = !DILocation(line: 2837, column: 9, scope: !4827)
!4880 = !DILocation(line: 2837, column: 2, scope: !4827)
!4881 = !DILocation(line: 2838, column: 1, scope: !4827)
!4882 = distinct !DISubprogram(name: "clk_core_set_duty_cycle_nolock", scope: !3, file: !3, line: 2761, type: !4883, scopeLine: 2763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4883 = !DISubroutineType(types: !4884)
!4884 = !{!89, !72, !2163}
!4885 = !DILocalVariable(name: "core", arg: 1, scope: !4882, file: !3, line: 2761, type: !72)
!4886 = !DILocation(line: 2761, column: 60, scope: !4882)
!4887 = !DILocalVariable(name: "duty", arg: 2, scope: !4882, file: !3, line: 2762, type: !2163)
!4888 = !DILocation(line: 2762, column: 25, scope: !4882)
!4889 = !DILocalVariable(name: "ret", scope: !4882, file: !3, line: 2764, type: !89)
!4890 = !DILocation(line: 2764, column: 6, scope: !4882)
!4891 = !DILocation(line: 2766, column: 2, scope: !4882)
!4892 = !DILocation(line: 2766, column: 2, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 2766, column: 2)
!4894 = !DILocation(line: 2768, column: 33, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 2768, column: 6)
!4896 = !DILocation(line: 2768, column: 6, scope: !4895)
!4897 = !DILocation(line: 2768, column: 6, scope: !4882)
!4898 = !DILocation(line: 2769, column: 3, scope: !4895)
!4899 = !DILocation(line: 2771, column: 27, scope: !4882)
!4900 = !DILocation(line: 2771, column: 33, scope: !4882)
!4901 = !DILocation(line: 2771, column: 2, scope: !4882)
!4902 = !DILocation(line: 2773, column: 7, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 2773, column: 6)
!4904 = !DILocation(line: 2773, column: 13, scope: !4903)
!4905 = !DILocation(line: 2773, column: 18, scope: !4903)
!4906 = !DILocation(line: 2773, column: 6, scope: !4882)
!4907 = !DILocation(line: 2774, column: 48, scope: !4903)
!4908 = !DILocation(line: 2774, column: 54, scope: !4903)
!4909 = !DILocation(line: 2774, column: 10, scope: !4903)
!4910 = !DILocation(line: 2774, column: 3, scope: !4903)
!4911 = !DILocation(line: 2776, column: 8, scope: !4882)
!4912 = !DILocation(line: 2776, column: 14, scope: !4882)
!4913 = !DILocation(line: 2776, column: 19, scope: !4882)
!4914 = !DILocation(line: 2776, column: 34, scope: !4882)
!4915 = !DILocation(line: 2776, column: 40, scope: !4882)
!4916 = !DILocation(line: 2776, column: 44, scope: !4882)
!4917 = !DILocation(line: 2776, column: 6, scope: !4882)
!4918 = !DILocation(line: 2777, column: 7, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 2777, column: 6)
!4920 = !DILocation(line: 2777, column: 6, scope: !4882)
!4921 = !DILocation(line: 2778, column: 11, scope: !4919)
!4922 = !DILocation(line: 2778, column: 17, scope: !4919)
!4923 = !DILocation(line: 2778, column: 3, scope: !4919)
!4924 = !DILocation(line: 2778, column: 23, scope: !4919)
!4925 = !DILocation(line: 2780, column: 36, scope: !4882)
!4926 = !DILocation(line: 2780, column: 42, scope: !4882)
!4927 = !DILocation(line: 2780, column: 2, scope: !4882)
!4928 = !DILocation(line: 2782, column: 9, scope: !4882)
!4929 = !DILocation(line: 2782, column: 2, scope: !4882)
!4930 = !DILocation(line: 2783, column: 1, scope: !4882)
!4931 = distinct !DISubprogram(name: "clk_get_scaled_duty_cycle", scope: !3, file: !3, line: 2866, type: !4932, scopeLine: 2867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{!89, !95, !7}
!4934 = !DILocalVariable(name: "clk", arg: 1, scope: !4931, file: !3, line: 2866, type: !95)
!4935 = !DILocation(line: 2866, column: 43, scope: !4931)
!4936 = !DILocalVariable(name: "scale", arg: 2, scope: !4931, file: !3, line: 2866, type: !7)
!4937 = !DILocation(line: 2866, column: 61, scope: !4931)
!4938 = !DILocation(line: 2868, column: 7, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 2868, column: 6)
!4940 = !DILocation(line: 2868, column: 6, scope: !4931)
!4941 = !DILocation(line: 2869, column: 3, scope: !4939)
!4942 = !DILocation(line: 2871, column: 40, scope: !4931)
!4943 = !DILocation(line: 2871, column: 45, scope: !4931)
!4944 = !DILocation(line: 2871, column: 51, scope: !4931)
!4945 = !DILocation(line: 2871, column: 9, scope: !4931)
!4946 = !DILocation(line: 2871, column: 2, scope: !4931)
!4947 = !DILocation(line: 2872, column: 1, scope: !4931)
!4948 = distinct !DISubprogram(name: "clk_core_get_scaled_duty_cycle", scope: !3, file: !3, line: 2841, type: !4949, scopeLine: 2843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4949 = !DISubroutineType(types: !4950)
!4950 = !{!89, !72, !7}
!4951 = !DILocalVariable(name: "core", arg: 1, scope: !4948, file: !3, line: 2841, type: !72)
!4952 = !DILocation(line: 2841, column: 60, scope: !4948)
!4953 = !DILocalVariable(name: "scale", arg: 2, scope: !4948, file: !3, line: 2842, type: !7)
!4954 = !DILocation(line: 2842, column: 21, scope: !4948)
!4955 = !DILocalVariable(name: "duty", scope: !4948, file: !3, line: 2844, type: !2163)
!4956 = !DILocation(line: 2844, column: 19, scope: !4948)
!4957 = !DILocation(line: 2844, column: 27, scope: !4948)
!4958 = !DILocation(line: 2844, column: 33, scope: !4948)
!4959 = !DILocalVariable(name: "ret", scope: !4948, file: !3, line: 2845, type: !89)
!4960 = !DILocation(line: 2845, column: 6, scope: !4948)
!4961 = !DILocation(line: 2847, column: 2, scope: !4948)
!4962 = !DILocation(line: 2849, column: 42, scope: !4948)
!4963 = !DILocation(line: 2849, column: 8, scope: !4948)
!4964 = !DILocation(line: 2849, column: 6, scope: !4948)
!4965 = !DILocation(line: 2850, column: 7, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 2850, column: 6)
!4967 = !DILocation(line: 2850, column: 6, scope: !4948)
!4968 = !DILocalVariable(name: "quot", scope: !4969, file: !3, line: 2851, type: !7)
!4969 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 2851, column: 9)
!4970 = !DILocation(line: 2851, column: 9, scope: !4969)
!4971 = !DILocalVariable(name: "rem", scope: !4969, file: !3, line: 2851, type: !7)
!4972 = !DILocation(line: 2851, column: 7, scope: !4966)
!4973 = !DILocation(line: 2851, column: 3, scope: !4966)
!4974 = !DILocation(line: 2853, column: 2, scope: !4948)
!4975 = !DILocation(line: 2855, column: 9, scope: !4948)
!4976 = !DILocation(line: 2855, column: 2, scope: !4948)
!4977 = distinct !DISubprogram(name: "clk_is_match", scope: !3, file: !3, line: 2886, type: !4978, scopeLine: 2887, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{!1008, !2362, !2362}
!4980 = !DILocalVariable(name: "p", arg: 1, scope: !4977, file: !3, line: 2886, type: !2362)
!4981 = !DILocation(line: 2886, column: 37, scope: !4977)
!4982 = !DILocalVariable(name: "q", arg: 2, scope: !4977, file: !3, line: 2886, type: !2362)
!4983 = !DILocation(line: 2886, column: 58, scope: !4977)
!4984 = !DILocation(line: 2889, column: 6, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2889, column: 6)
!4986 = !DILocation(line: 2889, column: 11, scope: !4985)
!4987 = !DILocation(line: 2889, column: 8, scope: !4985)
!4988 = !DILocation(line: 2889, column: 6, scope: !4977)
!4989 = !DILocation(line: 2890, column: 3, scope: !4985)
!4990 = !DILocation(line: 2893, column: 22, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2893, column: 6)
!4992 = !DILocation(line: 2893, column: 7, scope: !4991)
!4993 = !DILocation(line: 2893, column: 25, scope: !4991)
!4994 = !DILocation(line: 2893, column: 44, scope: !4991)
!4995 = !DILocation(line: 2893, column: 29, scope: !4991)
!4996 = !DILocation(line: 2893, column: 6, scope: !4977)
!4997 = !DILocation(line: 2894, column: 7, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 2894, column: 7)
!4999 = !DILocation(line: 2894, column: 10, scope: !4998)
!5000 = !DILocation(line: 2894, column: 18, scope: !4998)
!5001 = !DILocation(line: 2894, column: 21, scope: !4998)
!5002 = !DILocation(line: 2894, column: 15, scope: !4998)
!5003 = !DILocation(line: 2894, column: 7, scope: !4991)
!5004 = !DILocation(line: 2895, column: 4, scope: !4998)
!5005 = !DILocation(line: 2897, column: 2, scope: !4977)
!5006 = !DILocation(line: 2898, column: 1, scope: !4977)
!5007 = distinct !DISubprogram(name: "clk_hw_create_clk", scope: !3, file: !3, line: 3643, type: !5008, scopeLine: 3645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{!95, !100, !90, !76, !76}
!5010 = !DILocalVariable(name: "dev", arg: 1, scope: !5007, file: !3, line: 3643, type: !100)
!5011 = !DILocation(line: 3643, column: 46, scope: !5007)
!5012 = !DILocalVariable(name: "hw", arg: 2, scope: !5007, file: !3, line: 3643, type: !90)
!5013 = !DILocation(line: 3643, column: 66, scope: !5007)
!5014 = !DILocalVariable(name: "dev_id", arg: 3, scope: !5007, file: !3, line: 3644, type: !76)
!5015 = !DILocation(line: 3644, column: 22, scope: !5007)
!5016 = !DILocalVariable(name: "con_id", arg: 4, scope: !5007, file: !3, line: 3644, type: !76)
!5017 = !DILocation(line: 3644, column: 42, scope: !5007)
!5018 = !DILocalVariable(name: "clk", scope: !5007, file: !3, line: 3646, type: !95)
!5019 = !DILocation(line: 3646, column: 14, scope: !5007)
!5020 = !DILocalVariable(name: "core", scope: !5007, file: !3, line: 3647, type: !72)
!5021 = !DILocation(line: 3647, column: 19, scope: !5007)
!5022 = !DILocation(line: 3650, column: 21, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 3650, column: 6)
!5024 = !DILocation(line: 3650, column: 6, scope: !5023)
!5025 = !DILocation(line: 3650, column: 6, scope: !5007)
!5026 = !DILocation(line: 3651, column: 19, scope: !5023)
!5027 = !DILocation(line: 3651, column: 10, scope: !5023)
!5028 = !DILocation(line: 3651, column: 3, scope: !5023)
!5029 = !DILocation(line: 3653, column: 9, scope: !5007)
!5030 = !DILocation(line: 3653, column: 13, scope: !5007)
!5031 = !DILocation(line: 3653, column: 7, scope: !5007)
!5032 = !DILocation(line: 3654, column: 18, scope: !5007)
!5033 = !DILocation(line: 3654, column: 24, scope: !5007)
!5034 = !DILocation(line: 3654, column: 32, scope: !5007)
!5035 = !DILocation(line: 3654, column: 8, scope: !5007)
!5036 = !DILocation(line: 3654, column: 6, scope: !5007)
!5037 = !DILocation(line: 3655, column: 13, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 3655, column: 6)
!5039 = !DILocation(line: 3655, column: 6, scope: !5038)
!5040 = !DILocation(line: 3655, column: 6, scope: !5007)
!5041 = !DILocation(line: 3656, column: 10, scope: !5038)
!5042 = !DILocation(line: 3656, column: 3, scope: !5038)
!5043 = !DILocation(line: 3657, column: 13, scope: !5007)
!5044 = !DILocation(line: 3657, column: 2, scope: !5007)
!5045 = !DILocation(line: 3657, column: 7, scope: !5007)
!5046 = !DILocation(line: 3657, column: 11, scope: !5007)
!5047 = !DILocation(line: 3659, column: 22, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 3659, column: 6)
!5049 = !DILocation(line: 3659, column: 28, scope: !5048)
!5050 = !DILocation(line: 3659, column: 7, scope: !5048)
!5051 = !DILocation(line: 3659, column: 6, scope: !5007)
!5052 = !DILocation(line: 3660, column: 12, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 3659, column: 36)
!5054 = !DILocation(line: 3660, column: 3, scope: !5053)
!5055 = !DILocation(line: 3661, column: 10, scope: !5053)
!5056 = !DILocation(line: 3661, column: 3, scope: !5053)
!5057 = !DILocation(line: 3664, column: 12, scope: !5007)
!5058 = !DILocation(line: 3664, column: 18, scope: !5007)
!5059 = !DILocation(line: 3664, column: 2, scope: !5007)
!5060 = !DILocation(line: 3665, column: 25, scope: !5007)
!5061 = !DILocation(line: 3665, column: 31, scope: !5007)
!5062 = !DILocation(line: 3665, column: 2, scope: !5007)
!5063 = !DILocation(line: 3667, column: 9, scope: !5007)
!5064 = !DILocation(line: 3667, column: 2, scope: !5007)
!5065 = !DILocation(line: 3668, column: 1, scope: !5007)
!5066 = distinct !DISubprogram(name: "ERR_CAST", scope: !3243, file: !3243, line: 51, type: !5067, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{!71, !1399}
!5069 = !DILocalVariable(name: "ptr", arg: 1, scope: !5066, file: !3243, line: 51, type: !1399)
!5070 = !DILocation(line: 51, column: 64, scope: !5066)
!5071 = !DILocation(line: 54, column: 18, scope: !5066)
!5072 = !DILocation(line: 54, column: 2, scope: !5066)
!5073 = distinct !DISubprogram(name: "alloc_clk", scope: !3, file: !3, line: 3601, type: !5074, scopeLine: 3603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{!95, !72, !76, !76}
!5076 = !DILocalVariable(name: "core", arg: 1, scope: !5073, file: !3, line: 3601, type: !72)
!5077 = !DILocation(line: 3601, column: 47, scope: !5073)
!5078 = !DILocalVariable(name: "dev_id", arg: 2, scope: !5073, file: !3, line: 3601, type: !76)
!5079 = !DILocation(line: 3601, column: 65, scope: !5073)
!5080 = !DILocalVariable(name: "con_id", arg: 3, scope: !5073, file: !3, line: 3602, type: !76)
!5081 = !DILocation(line: 3602, column: 21, scope: !5073)
!5082 = !DILocalVariable(name: "clk", scope: !5073, file: !3, line: 3604, type: !95)
!5083 = !DILocation(line: 3604, column: 14, scope: !5073)
!5084 = !DILocation(line: 3606, column: 8, scope: !5073)
!5085 = !DILocation(line: 3606, column: 6, scope: !5073)
!5086 = !DILocation(line: 3607, column: 7, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 3607, column: 6)
!5088 = !DILocation(line: 3607, column: 6, scope: !5073)
!5089 = !DILocation(line: 3608, column: 10, scope: !5087)
!5090 = !DILocation(line: 3608, column: 3, scope: !5087)
!5091 = !DILocation(line: 3610, column: 14, scope: !5073)
!5092 = !DILocation(line: 3610, column: 2, scope: !5073)
!5093 = !DILocation(line: 3610, column: 7, scope: !5073)
!5094 = !DILocation(line: 3610, column: 12, scope: !5073)
!5095 = !DILocation(line: 3611, column: 16, scope: !5073)
!5096 = !DILocation(line: 3611, column: 2, scope: !5073)
!5097 = !DILocation(line: 3611, column: 7, scope: !5073)
!5098 = !DILocation(line: 3611, column: 14, scope: !5073)
!5099 = !DILocation(line: 3612, column: 30, scope: !5073)
!5100 = !DILocation(line: 3612, column: 16, scope: !5073)
!5101 = !DILocation(line: 3612, column: 2, scope: !5073)
!5102 = !DILocation(line: 3612, column: 7, scope: !5073)
!5103 = !DILocation(line: 3612, column: 14, scope: !5073)
!5104 = !DILocation(line: 3613, column: 2, scope: !5073)
!5105 = !DILocation(line: 3613, column: 7, scope: !5073)
!5106 = !DILocation(line: 3613, column: 16, scope: !5073)
!5107 = !DILocation(line: 3615, column: 9, scope: !5073)
!5108 = !DILocation(line: 3615, column: 2, scope: !5073)
!5109 = !DILocation(line: 3616, column: 1, scope: !5073)
!5110 = distinct !DISubprogram(name: "IS_ERR", scope: !3243, file: !3243, line: 34, type: !3244, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5111 = !DILocalVariable(name: "ptr", arg: 1, scope: !5110, file: !3243, line: 34, type: !1399)
!5112 = !DILocation(line: 34, column: 60, scope: !5110)
!5113 = !DILocation(line: 36, column: 9, scope: !5110)
!5114 = !DILocation(line: 36, column: 2, scope: !5110)
!5115 = distinct !DISubprogram(name: "try_module_get", scope: !5116, file: !5116, line: 751, type: !5117, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5116 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!5117 = !DISubroutineType(types: !5118)
!5118 = !{!1008, !1674}
!5119 = !DILocalVariable(name: "module", arg: 1, scope: !5115, file: !5116, line: 751, type: !1674)
!5120 = !DILocation(line: 751, column: 50, scope: !5115)
!5121 = !DILocation(line: 753, column: 2, scope: !5115)
!5122 = distinct !DISubprogram(name: "free_clk", scope: !3, file: !3, line: 3625, type: !2981, scopeLine: 3626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5123 = !DILocalVariable(name: "clk", arg: 1, scope: !5122, file: !3, line: 3625, type: !95)
!5124 = !DILocation(line: 3625, column: 34, scope: !5122)
!5125 = !DILocation(line: 3627, column: 14, scope: !5122)
!5126 = !DILocation(line: 3627, column: 19, scope: !5122)
!5127 = !DILocation(line: 3627, column: 2, scope: !5122)
!5128 = !DILocation(line: 3628, column: 8, scope: !5122)
!5129 = !DILocation(line: 3628, column: 2, scope: !5122)
!5130 = !DILocation(line: 3629, column: 1, scope: !5122)
!5131 = distinct !DISubprogram(name: "ERR_PTR", scope: !3243, file: !3243, line: 24, type: !5132, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!71, !199}
!5134 = !DILocalVariable(name: "error", arg: 1, scope: !5131, file: !3243, line: 24, type: !199)
!5135 = !DILocation(line: 24, column: 48, scope: !5131)
!5136 = !DILocation(line: 26, column: 18, scope: !5131)
!5137 = !DILocation(line: 26, column: 9, scope: !5131)
!5138 = !DILocation(line: 26, column: 2, scope: !5131)
!5139 = distinct !DISubprogram(name: "kref_get", scope: !1589, file: !1589, line: 43, type: !5140, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{null, !5142}
!5142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!5143 = !DILocalVariable(name: "kref", arg: 1, scope: !5139, file: !1589, line: 43, type: !5142)
!5144 = !DILocation(line: 43, column: 42, scope: !5139)
!5145 = !DILocation(line: 45, column: 16, scope: !5139)
!5146 = !DILocation(line: 45, column: 22, scope: !5139)
!5147 = !DILocation(line: 45, column: 2, scope: !5139)
!5148 = !DILocation(line: 46, column: 1, scope: !5139)
!5149 = distinct !DISubprogram(name: "clk_core_link_consumer", scope: !3, file: !3, line: 3576, type: !5150, scopeLine: 3577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{null, !72, !95}
!5152 = !DILocalVariable(name: "core", arg: 1, scope: !5149, file: !3, line: 3576, type: !72)
!5153 = !DILocation(line: 3576, column: 53, scope: !5149)
!5154 = !DILocalVariable(name: "clk", arg: 2, scope: !5149, file: !3, line: 3576, type: !95)
!5155 = !DILocation(line: 3576, column: 71, scope: !5149)
!5156 = !DILocation(line: 3578, column: 2, scope: !5149)
!5157 = !DILocation(line: 3579, column: 18, scope: !5149)
!5158 = !DILocation(line: 3579, column: 23, scope: !5149)
!5159 = !DILocation(line: 3579, column: 35, scope: !5149)
!5160 = !DILocation(line: 3579, column: 41, scope: !5149)
!5161 = !DILocation(line: 3579, column: 2, scope: !5149)
!5162 = !DILocation(line: 3580, column: 2, scope: !5149)
!5163 = !DILocation(line: 3581, column: 1, scope: !5149)
!5164 = distinct !DISubprogram(name: "clk_register", scope: !3, file: !3, line: 3884, type: !5165, scopeLine: 3885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5165 = !DISubroutineType(types: !5166)
!5166 = !{!95, !100, !90}
!5167 = !DILocalVariable(name: "dev", arg: 1, scope: !5164, file: !3, line: 3884, type: !100)
!5168 = !DILocation(line: 3884, column: 41, scope: !5164)
!5169 = !DILocalVariable(name: "hw", arg: 2, scope: !5164, file: !3, line: 3884, type: !90)
!5170 = !DILocation(line: 3884, column: 61, scope: !5164)
!5171 = !DILocation(line: 3886, column: 24, scope: !5164)
!5172 = !DILocation(line: 3886, column: 51, scope: !5164)
!5173 = !DILocation(line: 3886, column: 29, scope: !5164)
!5174 = !DILocation(line: 3886, column: 57, scope: !5164)
!5175 = !DILocation(line: 3886, column: 9, scope: !5164)
!5176 = !DILocation(line: 3886, column: 2, scope: !5164)
!5177 = distinct !DISubprogram(name: "__clk_register", scope: !3, file: !3, line: 3765, type: !5178, scopeLine: 3766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{!95, !100, !1908, !90}
!5180 = !DILocalVariable(name: "dev", arg: 1, scope: !5177, file: !3, line: 3765, type: !100)
!5181 = !DILocation(line: 3765, column: 31, scope: !5177)
!5182 = !DILocalVariable(name: "np", arg: 2, scope: !5177, file: !3, line: 3765, type: !1908)
!5183 = !DILocation(line: 3765, column: 56, scope: !5177)
!5184 = !DILocalVariable(name: "hw", arg: 3, scope: !5177, file: !3, line: 3765, type: !90)
!5185 = !DILocation(line: 3765, column: 75, scope: !5177)
!5186 = !DILocalVariable(name: "ret", scope: !5177, file: !3, line: 3767, type: !89)
!5187 = !DILocation(line: 3767, column: 6, scope: !5177)
!5188 = !DILocalVariable(name: "core", scope: !5177, file: !3, line: 3768, type: !72)
!5189 = !DILocation(line: 3768, column: 19, scope: !5177)
!5190 = !DILocalVariable(name: "init", scope: !5177, file: !3, line: 3769, type: !2080)
!5191 = !DILocation(line: 3769, column: 30, scope: !5177)
!5192 = !DILocation(line: 3769, column: 37, scope: !5177)
!5193 = !DILocation(line: 3769, column: 41, scope: !5177)
!5194 = !DILocation(line: 3776, column: 2, scope: !5177)
!5195 = !DILocation(line: 3776, column: 6, scope: !5177)
!5196 = !DILocation(line: 3776, column: 11, scope: !5177)
!5197 = !DILocation(line: 3778, column: 9, scope: !5177)
!5198 = !DILocation(line: 3778, column: 7, scope: !5177)
!5199 = !DILocation(line: 3779, column: 7, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 3779, column: 6)
!5201 = !DILocation(line: 3779, column: 6, scope: !5177)
!5202 = !DILocation(line: 3780, column: 7, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 3779, column: 13)
!5204 = !DILocation(line: 3781, column: 3, scope: !5203)
!5205 = !DILocation(line: 3784, column: 29, scope: !5177)
!5206 = !DILocation(line: 3784, column: 35, scope: !5177)
!5207 = !DILocation(line: 3784, column: 15, scope: !5177)
!5208 = !DILocation(line: 3784, column: 2, scope: !5177)
!5209 = !DILocation(line: 3784, column: 8, scope: !5177)
!5210 = !DILocation(line: 3784, column: 13, scope: !5177)
!5211 = !DILocation(line: 3785, column: 7, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 3785, column: 6)
!5213 = !DILocation(line: 3785, column: 13, scope: !5212)
!5214 = !DILocation(line: 3785, column: 6, scope: !5177)
!5215 = !DILocation(line: 3786, column: 7, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 3785, column: 19)
!5217 = !DILocation(line: 3787, column: 3, scope: !5216)
!5218 = !DILocalVariable(name: "__ret_warn_on", scope: !5219, file: !3, line: 3790, type: !89)
!5219 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 3790, column: 6)
!5220 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 3790, column: 6)
!5221 = !DILocation(line: 3790, column: 6, scope: !5219)
!5222 = !DILocation(line: 3790, column: 6, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 3790, column: 6)
!5224 = !DILocation(line: 3790, column: 6, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 3790, column: 6)
!5226 = !DILocation(line: 3790, column: 6, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 3790, column: 6)
!5228 = !DILocation(line: 3790, column: 6, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 3790, column: 6)
!5230 = !{i32 -2142887382, i32 -2142887353, i32 -2142887307, i32 -2142887249, i32 -2142887195, i32 -2142887141, i32 -2142887086, i32 -2142887055}
!5231 = !DILocation(line: 3790, column: 6, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 3790, column: 6)
!5233 = !{i32 -2142886655, i32 -2142886648, i32 -2142886596, i32 -2142886565, i32 -2142886535}
!5234 = !DILocation(line: 3790, column: 6, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 3790, column: 6)
!5236 = !DILocation(line: 3790, column: 6, scope: !5220)
!5237 = !DILocation(line: 3790, column: 6, scope: !5177)
!5238 = !DILocation(line: 3791, column: 7, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 3790, column: 27)
!5240 = !DILocation(line: 3792, column: 3, scope: !5239)
!5241 = !DILocation(line: 3794, column: 14, scope: !5177)
!5242 = !DILocation(line: 3794, column: 20, scope: !5177)
!5243 = !DILocation(line: 3794, column: 2, scope: !5177)
!5244 = !DILocation(line: 3794, column: 8, scope: !5177)
!5245 = !DILocation(line: 3794, column: 12, scope: !5177)
!5246 = !DILocation(line: 3796, column: 6, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 3796, column: 6)
!5248 = !DILocation(line: 3796, column: 10, scope: !5247)
!5249 = !DILocation(line: 3796, column: 32, scope: !5247)
!5250 = !DILocation(line: 3796, column: 13, scope: !5247)
!5251 = !DILocation(line: 3796, column: 6, scope: !5177)
!5252 = !DILocation(line: 3797, column: 3, scope: !5247)
!5253 = !DILocation(line: 3797, column: 9, scope: !5247)
!5254 = !DILocation(line: 3797, column: 21, scope: !5247)
!5255 = !DILocation(line: 3798, column: 14, scope: !5177)
!5256 = !DILocation(line: 3798, column: 2, scope: !5177)
!5257 = !DILocation(line: 3798, column: 8, scope: !5177)
!5258 = !DILocation(line: 3798, column: 12, scope: !5177)
!5259 = !DILocation(line: 3799, column: 18, scope: !5177)
!5260 = !DILocation(line: 3799, column: 2, scope: !5177)
!5261 = !DILocation(line: 3799, column: 8, scope: !5177)
!5262 = !DILocation(line: 3799, column: 16, scope: !5177)
!5263 = !DILocation(line: 3800, column: 6, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 3800, column: 6)
!5265 = !DILocation(line: 3800, column: 10, scope: !5264)
!5266 = !DILocation(line: 3800, column: 13, scope: !5264)
!5267 = !DILocation(line: 3800, column: 18, scope: !5264)
!5268 = !DILocation(line: 3800, column: 6, scope: !5177)
!5269 = !DILocation(line: 3801, column: 17, scope: !5264)
!5270 = !DILocation(line: 3801, column: 22, scope: !5264)
!5271 = !DILocation(line: 3801, column: 30, scope: !5264)
!5272 = !DILocation(line: 3801, column: 3, scope: !5264)
!5273 = !DILocation(line: 3801, column: 9, scope: !5264)
!5274 = !DILocation(line: 3801, column: 15, scope: !5264)
!5275 = !DILocation(line: 3802, column: 13, scope: !5177)
!5276 = !DILocation(line: 3802, column: 2, scope: !5177)
!5277 = !DILocation(line: 3802, column: 8, scope: !5177)
!5278 = !DILocation(line: 3802, column: 11, scope: !5177)
!5279 = !DILocation(line: 3803, column: 16, scope: !5177)
!5280 = !DILocation(line: 3803, column: 22, scope: !5177)
!5281 = !DILocation(line: 3803, column: 2, scope: !5177)
!5282 = !DILocation(line: 3803, column: 8, scope: !5177)
!5283 = !DILocation(line: 3803, column: 14, scope: !5177)
!5284 = !DILocation(line: 3804, column: 22, scope: !5177)
!5285 = !DILocation(line: 3804, column: 28, scope: !5177)
!5286 = !DILocation(line: 3804, column: 2, scope: !5177)
!5287 = !DILocation(line: 3804, column: 8, scope: !5177)
!5288 = !DILocation(line: 3804, column: 20, scope: !5177)
!5289 = !DILocation(line: 3805, column: 2, scope: !5177)
!5290 = !DILocation(line: 3805, column: 8, scope: !5177)
!5291 = !DILocation(line: 3805, column: 17, scope: !5177)
!5292 = !DILocation(line: 3806, column: 2, scope: !5177)
!5293 = !DILocation(line: 3806, column: 8, scope: !5177)
!5294 = !DILocation(line: 3806, column: 17, scope: !5177)
!5295 = !DILocation(line: 3807, column: 13, scope: !5177)
!5296 = !DILocation(line: 3807, column: 2, scope: !5177)
!5297 = !DILocation(line: 3807, column: 6, scope: !5177)
!5298 = !DILocation(line: 3807, column: 11, scope: !5177)
!5299 = !DILocation(line: 3809, column: 37, scope: !5177)
!5300 = !DILocation(line: 3809, column: 43, scope: !5177)
!5301 = !DILocation(line: 3809, column: 8, scope: !5177)
!5302 = !DILocation(line: 3809, column: 6, scope: !5177)
!5303 = !DILocation(line: 3810, column: 6, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 3810, column: 6)
!5305 = !DILocation(line: 3810, column: 6, scope: !5177)
!5306 = !DILocation(line: 3811, column: 3, scope: !5304)
!5307 = !DILocation(line: 3813, column: 2, scope: !5177)
!5308 = !DILocation(line: 3819, column: 22, scope: !5177)
!5309 = !DILocation(line: 3819, column: 12, scope: !5177)
!5310 = !DILocation(line: 3819, column: 2, scope: !5177)
!5311 = !DILocation(line: 3819, column: 6, scope: !5177)
!5312 = !DILocation(line: 3819, column: 10, scope: !5177)
!5313 = !DILocation(line: 3820, column: 13, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 3820, column: 6)
!5315 = !DILocation(line: 3820, column: 17, scope: !5314)
!5316 = !DILocation(line: 3820, column: 6, scope: !5314)
!5317 = !DILocation(line: 3820, column: 6, scope: !5177)
!5318 = !DILocation(line: 3821, column: 17, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 3820, column: 23)
!5320 = !DILocation(line: 3821, column: 21, scope: !5319)
!5321 = !DILocation(line: 3821, column: 9, scope: !5319)
!5322 = !DILocation(line: 3821, column: 7, scope: !5319)
!5323 = !DILocation(line: 3822, column: 3, scope: !5319)
!5324 = !DILocation(line: 3825, column: 25, scope: !5177)
!5325 = !DILocation(line: 3825, column: 29, scope: !5177)
!5326 = !DILocation(line: 3825, column: 35, scope: !5177)
!5327 = !DILocation(line: 3825, column: 39, scope: !5177)
!5328 = !DILocation(line: 3825, column: 2, scope: !5177)
!5329 = !DILocation(line: 3827, column: 24, scope: !5177)
!5330 = !DILocation(line: 3827, column: 8, scope: !5177)
!5331 = !DILocation(line: 3827, column: 6, scope: !5177)
!5332 = !DILocation(line: 3828, column: 7, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 3828, column: 6)
!5334 = !DILocation(line: 3828, column: 6, scope: !5177)
!5335 = !DILocation(line: 3829, column: 10, scope: !5333)
!5336 = !DILocation(line: 3829, column: 14, scope: !5333)
!5337 = !DILocation(line: 3829, column: 3, scope: !5333)
!5338 = !DILocation(line: 3831, column: 2, scope: !5177)
!5339 = !DILocation(line: 3832, column: 27, scope: !5177)
!5340 = !DILocation(line: 3832, column: 31, scope: !5177)
!5341 = !DILocation(line: 3832, column: 2, scope: !5177)
!5342 = !DILocation(line: 3833, column: 2, scope: !5177)
!5343 = !DILocation(line: 3835, column: 11, scope: !5177)
!5344 = !DILocation(line: 3835, column: 15, scope: !5177)
!5345 = !DILocation(line: 3835, column: 2, scope: !5177)
!5346 = !DILocation(line: 3836, column: 2, scope: !5177)
!5347 = !DILocation(line: 3836, column: 6, scope: !5177)
!5348 = !DILocation(line: 3836, column: 10, scope: !5177)
!5349 = !DILabel(scope: !5177, name: "fail_create_clk", file: !3, line: 3838)
!5350 = !DILocation(line: 3838, column: 1, scope: !5177)
!5351 = !DILocation(line: 3839, column: 27, scope: !5177)
!5352 = !DILocation(line: 3839, column: 2, scope: !5177)
!5353 = !DILabel(scope: !5177, name: "fail_parents", file: !3, line: 3840)
!5354 = !DILocation(line: 3840, column: 1, scope: !5177)
!5355 = !DILabel(scope: !5177, name: "fail_ops", file: !3, line: 3841)
!5356 = !DILocation(line: 3841, column: 1, scope: !5177)
!5357 = !DILocation(line: 3842, column: 14, scope: !5177)
!5358 = !DILocation(line: 3842, column: 20, scope: !5177)
!5359 = !DILocation(line: 3842, column: 2, scope: !5177)
!5360 = !DILabel(scope: !5177, name: "fail_name", file: !3, line: 3843)
!5361 = !DILocation(line: 3843, column: 1, scope: !5177)
!5362 = !DILocation(line: 3844, column: 8, scope: !5177)
!5363 = !DILocation(line: 3844, column: 2, scope: !5177)
!5364 = !DILabel(scope: !5177, name: "fail_out", file: !3, line: 3845)
!5365 = !DILocation(line: 3845, column: 1, scope: !5177)
!5366 = !DILocation(line: 3846, column: 17, scope: !5177)
!5367 = !DILocation(line: 3846, column: 9, scope: !5177)
!5368 = !DILocation(line: 3846, column: 2, scope: !5177)
!5369 = !DILocation(line: 3847, column: 1, scope: !5177)
!5370 = distinct !DISubprogram(name: "dev_or_parent_of_node", scope: !3, file: !3, line: 3857, type: !5371, scopeLine: 3858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{!1908, !100}
!5373 = !DILocalVariable(name: "dev", arg: 1, scope: !5370, file: !3, line: 3857, type: !100)
!5374 = !DILocation(line: 3857, column: 65, scope: !5370)
!5375 = !DILocalVariable(name: "np", scope: !5370, file: !3, line: 3859, type: !1908)
!5376 = !DILocation(line: 3859, column: 22, scope: !5370)
!5377 = !DILocation(line: 3861, column: 7, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 3861, column: 6)
!5379 = !DILocation(line: 3861, column: 6, scope: !5370)
!5380 = !DILocation(line: 3862, column: 3, scope: !5378)
!5381 = !DILocation(line: 3864, column: 19, scope: !5370)
!5382 = !DILocation(line: 3864, column: 7, scope: !5370)
!5383 = !DILocation(line: 3864, column: 5, scope: !5370)
!5384 = !DILocation(line: 3865, column: 7, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 3865, column: 6)
!5386 = !DILocation(line: 3865, column: 6, scope: !5370)
!5387 = !DILocation(line: 3866, column: 20, scope: !5385)
!5388 = !DILocation(line: 3866, column: 25, scope: !5385)
!5389 = !DILocation(line: 3866, column: 8, scope: !5385)
!5390 = !DILocation(line: 3866, column: 6, scope: !5385)
!5391 = !DILocation(line: 3866, column: 3, scope: !5385)
!5392 = !DILocation(line: 3868, column: 9, scope: !5370)
!5393 = !DILocation(line: 3868, column: 2, scope: !5370)
!5394 = !DILocation(line: 3869, column: 1, scope: !5370)
!5395 = distinct !DISubprogram(name: "clk_hw_register", scope: !3, file: !3, line: 3900, type: !5396, scopeLine: 3901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5396 = !DISubroutineType(types: !5397)
!5397 = !{!89, !100, !90}
!5398 = !DILocalVariable(name: "dev", arg: 1, scope: !5395, file: !3, line: 3900, type: !100)
!5399 = !DILocation(line: 3900, column: 36, scope: !5395)
!5400 = !DILocalVariable(name: "hw", arg: 2, scope: !5395, file: !3, line: 3900, type: !90)
!5401 = !DILocation(line: 3900, column: 56, scope: !5395)
!5402 = !DILocation(line: 3902, column: 40, scope: !5395)
!5403 = !DILocation(line: 3902, column: 67, scope: !5395)
!5404 = !DILocation(line: 3902, column: 45, scope: !5395)
!5405 = !DILocation(line: 3903, column: 11, scope: !5395)
!5406 = !DILocation(line: 3902, column: 25, scope: !5395)
!5407 = !DILocation(line: 3902, column: 9, scope: !5395)
!5408 = !DILocation(line: 3902, column: 2, scope: !5395)
!5409 = distinct !DISubprogram(name: "PTR_ERR_OR_ZERO", scope: !3243, file: !3243, line: 57, type: !5410, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5410 = !DISubroutineType(types: !5411)
!5411 = !{!89, !1399}
!5412 = !DILocalVariable(name: "ptr", arg: 1, scope: !5409, file: !3243, line: 57, type: !1399)
!5413 = !DILocation(line: 57, column: 68, scope: !5409)
!5414 = !DILocation(line: 59, column: 13, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5409, file: !3243, line: 59, column: 6)
!5416 = !DILocation(line: 59, column: 6, scope: !5415)
!5417 = !DILocation(line: 59, column: 6, scope: !5409)
!5418 = !DILocation(line: 60, column: 18, scope: !5415)
!5419 = !DILocation(line: 60, column: 10, scope: !5415)
!5420 = !DILocation(line: 60, column: 3, scope: !5415)
!5421 = !DILocation(line: 62, column: 3, scope: !5415)
!5422 = !DILocation(line: 63, column: 1, scope: !5409)
!5423 = distinct !DISubprogram(name: "of_clk_hw_register", scope: !3, file: !3, line: 3918, type: !5424, scopeLine: 3919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{!89, !1908, !90}
!5426 = !DILocalVariable(name: "node", arg: 1, scope: !5423, file: !3, line: 3918, type: !1908)
!5427 = !DILocation(line: 3918, column: 44, scope: !5423)
!5428 = !DILocalVariable(name: "hw", arg: 2, scope: !5423, file: !3, line: 3918, type: !90)
!5429 = !DILocation(line: 3918, column: 65, scope: !5423)
!5430 = !DILocation(line: 3920, column: 46, scope: !5423)
!5431 = !DILocation(line: 3920, column: 52, scope: !5423)
!5432 = !DILocation(line: 3920, column: 25, scope: !5423)
!5433 = !DILocation(line: 3920, column: 9, scope: !5423)
!5434 = !DILocation(line: 3920, column: 2, scope: !5423)
!5435 = distinct !DISubprogram(name: "clk_unregister", scope: !3, file: !3, line: 4003, type: !2981, scopeLine: 4004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5436 = !DILocalVariable(name: "clk", arg: 1, scope: !5435, file: !3, line: 4003, type: !95)
!5437 = !DILocation(line: 4003, column: 33, scope: !5435)
!5438 = !DILocalVariable(name: "flags", scope: !5435, file: !3, line: 4005, type: !214)
!5439 = !DILocation(line: 4005, column: 16, scope: !5435)
!5440 = !DILocalVariable(name: "ops", scope: !5435, file: !3, line: 4006, type: !80)
!5441 = !DILocation(line: 4006, column: 24, scope: !5435)
!5442 = !DILocation(line: 4008, column: 7, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 4008, column: 6)
!5444 = !DILocation(line: 4008, column: 11, scope: !5443)
!5445 = !DILocalVariable(name: "__ret_warn_on", scope: !5446, file: !3, line: 4008, type: !89)
!5446 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 4008, column: 14)
!5447 = !DILocation(line: 4008, column: 14, scope: !5446)
!5448 = !DILocation(line: 4008, column: 14, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 4008, column: 14)
!5450 = !DILocation(line: 4008, column: 14, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 4008, column: 14)
!5452 = !DILocation(line: 4008, column: 14, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 4008, column: 14)
!5454 = !DILocation(line: 4008, column: 14, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 4008, column: 14)
!5456 = !{i32 -2142874899, i32 -2142874870, i32 -2142874824, i32 -2142874766, i32 -2142874712, i32 -2142874658, i32 -2142874603, i32 -2142874572}
!5457 = !DILocation(line: 4008, column: 14, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 4008, column: 14)
!5459 = !{i32 -2142874161, i32 -2142874154, i32 -2142874102, i32 -2142874071, i32 -2142874041}
!5460 = !DILocation(line: 4008, column: 14, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 4008, column: 14)
!5462 = !DILocation(line: 4008, column: 14, scope: !5443)
!5463 = !DILocation(line: 4008, column: 6, scope: !5435)
!5464 = !DILocation(line: 4009, column: 3, scope: !5443)
!5465 = !DILocation(line: 4011, column: 23, scope: !5435)
!5466 = !DILocation(line: 4011, column: 28, scope: !5435)
!5467 = !DILocation(line: 4011, column: 2, scope: !5435)
!5468 = !DILocation(line: 4013, column: 2, scope: !5435)
!5469 = !DILocation(line: 4015, column: 8, scope: !5435)
!5470 = !DILocation(line: 4015, column: 13, scope: !5435)
!5471 = !DILocation(line: 4015, column: 19, scope: !5435)
!5472 = !DILocation(line: 4015, column: 6, scope: !5435)
!5473 = !DILocation(line: 4016, column: 6, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 4016, column: 6)
!5475 = !DILocation(line: 4016, column: 10, scope: !5474)
!5476 = !DILocation(line: 4016, column: 6, scope: !5435)
!5477 = !DILocation(line: 4017, column: 3, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 4016, column: 29)
!5479 = !DILocation(line: 4019, column: 3, scope: !5478)
!5480 = !DILocation(line: 4025, column: 10, scope: !5435)
!5481 = !DILocation(line: 4025, column: 8, scope: !5435)
!5482 = !DILocation(line: 4026, column: 2, scope: !5435)
!5483 = !DILocation(line: 4026, column: 7, scope: !5435)
!5484 = !DILocation(line: 4026, column: 13, scope: !5435)
!5485 = !DILocation(line: 4026, column: 17, scope: !5435)
!5486 = !DILocation(line: 4027, column: 20, scope: !5435)
!5487 = !DILocation(line: 4027, column: 2, scope: !5435)
!5488 = !DILocation(line: 4029, column: 6, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 4029, column: 6)
!5490 = !DILocation(line: 4029, column: 11, scope: !5489)
!5491 = !DILocation(line: 4029, column: 6, scope: !5435)
!5492 = !DILocation(line: 4030, column: 3, scope: !5489)
!5493 = !DILocation(line: 4030, column: 8, scope: !5489)
!5494 = !DILocation(line: 4030, column: 18, scope: !5489)
!5495 = !DILocation(line: 4030, column: 23, scope: !5489)
!5496 = !DILocation(line: 4030, column: 29, scope: !5489)
!5497 = !DILocation(line: 4032, column: 20, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 4032, column: 6)
!5499 = !DILocation(line: 4032, column: 25, scope: !5498)
!5500 = !DILocation(line: 4032, column: 31, scope: !5498)
!5501 = !DILocation(line: 4032, column: 7, scope: !5498)
!5502 = !DILocation(line: 4032, column: 6, scope: !5435)
!5503 = !DILocalVariable(name: "child", scope: !5504, file: !3, line: 4033, type: !72)
!5504 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 4032, column: 42)
!5505 = !DILocation(line: 4033, column: 20, scope: !5504)
!5506 = !DILocalVariable(name: "t", scope: !5504, file: !3, line: 4034, type: !705)
!5507 = !DILocation(line: 4034, column: 22, scope: !5504)
!5508 = !DILocalVariable(name: "____ptr", scope: !5509, file: !3, line: 4037, type: !705)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 4037, column: 3)
!5510 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 4037, column: 3)
!5511 = !DILocation(line: 4037, column: 3, scope: !5509)
!5512 = !DILocalVariable(name: "__mptr", scope: !5513, file: !3, line: 4037, type: !71)
!5513 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 4037, column: 3)
!5514 = !DILocation(line: 4037, column: 3, scope: !5513)
!5515 = !DILocation(line: 4037, column: 3, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 4037, column: 3)
!5517 = !DILocation(line: 4037, column: 3, scope: !5510)
!5518 = !DILocation(line: 4037, column: 3, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 4037, column: 3)
!5520 = !DILocation(line: 4037, column: 3, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 4037, column: 3)
!5522 = !DILocation(line: 0, scope: !5519)
!5523 = !DILocation(line: 4039, column: 31, scope: !5519)
!5524 = !DILocation(line: 4039, column: 4, scope: !5519)
!5525 = !DILocalVariable(name: "____ptr", scope: !5526, file: !3, line: 4037, type: !705)
!5526 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 4037, column: 3)
!5527 = !DILocation(line: 4037, column: 3, scope: !5526)
!5528 = !DILocalVariable(name: "__mptr", scope: !5529, file: !3, line: 4037, type: !71)
!5529 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 4037, column: 3)
!5530 = !DILocation(line: 4037, column: 3, scope: !5529)
!5531 = !DILocation(line: 4037, column: 3, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 4037, column: 3)
!5533 = distinct !{!5533, !5517, !5534}
!5534 = !DILocation(line: 4039, column: 42, scope: !5510)
!5535 = !DILocation(line: 4040, column: 2, scope: !5504)
!5536 = !DILocation(line: 4042, column: 30, scope: !5435)
!5537 = !DILocation(line: 4042, column: 35, scope: !5435)
!5538 = !DILocation(line: 4042, column: 2, scope: !5435)
!5539 = !DILocation(line: 4044, column: 18, scope: !5435)
!5540 = !DILocation(line: 4044, column: 23, scope: !5435)
!5541 = !DILocation(line: 4044, column: 29, scope: !5435)
!5542 = !DILocation(line: 4044, column: 2, scope: !5435)
!5543 = !DILocation(line: 4046, column: 6, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 4046, column: 6)
!5545 = !DILocation(line: 4046, column: 11, scope: !5544)
!5546 = !DILocation(line: 4046, column: 17, scope: !5544)
!5547 = !DILocation(line: 4046, column: 6, scope: !5435)
!5548 = !DILocation(line: 4047, column: 3, scope: !5544)
!5549 = !DILocation(line: 4050, column: 6, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 4050, column: 6)
!5551 = !DILocation(line: 4050, column: 11, scope: !5550)
!5552 = !DILocation(line: 4050, column: 17, scope: !5550)
!5553 = !DILocation(line: 4050, column: 6, scope: !5435)
!5554 = !DILocation(line: 4051, column: 3, scope: !5550)
!5555 = !DILocation(line: 4054, column: 12, scope: !5435)
!5556 = !DILocation(line: 4054, column: 17, scope: !5435)
!5557 = !DILocation(line: 4054, column: 23, scope: !5435)
!5558 = !DILocation(line: 4054, column: 2, scope: !5435)
!5559 = !DILocation(line: 4055, column: 11, scope: !5435)
!5560 = !DILocation(line: 4055, column: 2, scope: !5435)
!5561 = !DILabel(scope: !5435, name: "unlock", file: !3, line: 4056)
!5562 = !DILocation(line: 4056, column: 1, scope: !5435)
!5563 = !DILocation(line: 4057, column: 2, scope: !5435)
!5564 = !DILocation(line: 4058, column: 1, scope: !5435)
!5565 = distinct !DISubprogram(name: "clk_debug_unregister", scope: !3, file: !3, line: 3340, type: !3094, scopeLine: 3341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5566 = !DILocalVariable(name: "core", arg: 1, scope: !5565, file: !3, line: 3340, type: !72)
!5567 = !DILocation(line: 3340, column: 58, scope: !5565)
!5568 = !DILocation(line: 3342, column: 1, scope: !5565)
!5569 = distinct !DISubprogram(name: "clk_enable_lock", scope: !3, file: !3, line: 159, type: !5570, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!214}
!5572 = !DILocation(line: 15, column: 9, scope: !3025, inlinedAt: !5573)
!5573 = distinct !DILocation(line: 182, column: 17, scope: !5569)
!5574 = !DILocation(line: 15, column: 9, scope: !3033, inlinedAt: !5573)
!5575 = !DILocation(line: 15, column: 9, scope: !3036, inlinedAt: !5573)
!5576 = !DILocalVariable(name: "lock", arg: 1, scope: !5577, file: !5578, line: 327, type: !5582)
!5577 = distinct !DISubprogram(name: "spinlock_check", scope: !5578, file: !5578, line: 327, type: !5579, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5578 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5579 = !DISubroutineType(types: !5580)
!5580 = !{!5581, !5582}
!5581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!5582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!5583 = !DILocation(line: 327, column: 67, scope: !5577, inlinedAt: !5584)
!5584 = distinct !DILocation(line: 178, column: 3, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 178, column: 3)
!5586 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 178, column: 3)
!5587 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 178, column: 3)
!5588 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 178, column: 3)
!5589 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 178, column: 3)
!5590 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 170, column: 50)
!5591 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 169, column: 6)
!5592 = !DILocation(line: 15, column: 9, scope: !3025, inlinedAt: !5593)
!5593 = distinct !DILocation(line: 171, column: 23, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 171, column: 7)
!5595 = !DILocation(line: 15, column: 9, scope: !3033, inlinedAt: !5593)
!5596 = !DILocation(line: 15, column: 9, scope: !3036, inlinedAt: !5593)
!5597 = !DILocalVariable(name: "flags", scope: !5569, file: !3, line: 162, type: !214)
!5598 = !DILocation(line: 162, column: 16, scope: !5569)
!5599 = !DILocation(line: 171, column: 7, scope: !5594)
!5600 = !DILocation(line: 171, column: 20, scope: !5594)
!5601 = !DILocation(line: 171, column: 7, scope: !5590)
!5602 = !DILocation(line: 172, column: 17, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 171, column: 32)
!5604 = !DILocation(line: 175, column: 5, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 174, column: 8)
!5606 = !DILocalVariable(name: "__dummy", scope: !5607, file: !3, line: 175, type: !214)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 175, column: 5)
!5608 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 175, column: 5)
!5609 = !DILocation(line: 175, column: 5, scope: !5607)
!5610 = !DILocalVariable(name: "__dummy2", scope: !5607, file: !3, line: 175, type: !214)
!5611 = !DILocation(line: 175, column: 5, scope: !5608)
!5612 = !DILocation(line: 176, column: 11, scope: !5603)
!5613 = !DILocation(line: 176, column: 4, scope: !5603)
!5614 = !DILocation(line: 178, column: 3, scope: !5590)
!5615 = !DILocation(line: 178, column: 3, scope: !5589)
!5616 = !DILocalVariable(name: "__dummy", scope: !5617, file: !3, line: 178, type: !214)
!5617 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 178, column: 3)
!5618 = !DILocation(line: 178, column: 3, scope: !5617)
!5619 = !DILocalVariable(name: "__dummy2", scope: !5617, file: !3, line: 178, type: !214)
!5620 = !DILocation(line: 178, column: 3, scope: !5588)
!5621 = !DILocation(line: 178, column: 3, scope: !5587)
!5622 = !DILocation(line: 178, column: 3, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 178, column: 3)
!5624 = !DILocalVariable(name: "__dummy", scope: !5625, file: !3, line: 178, type: !214)
!5625 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 178, column: 3)
!5626 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 178, column: 3)
!5627 = !DILocation(line: 178, column: 3, scope: !5625)
!5628 = !DILocalVariable(name: "__dummy2", scope: !5625, file: !3, line: 178, type: !214)
!5629 = !DILocation(line: 178, column: 3, scope: !5626)
!5630 = !DILocation(line: 178, column: 3, scope: !5586)
!5631 = !{i32 -2143048401}
!5632 = !DILocation(line: 329, column: 10, scope: !5577, inlinedAt: !5584)
!5633 = !DILocation(line: 329, column: 16, scope: !5577, inlinedAt: !5584)
!5634 = !DILocation(line: 178, column: 3, scope: !5585)
!5635 = !DILocalVariable(name: "__ret_warn_on", scope: !5636, file: !3, line: 180, type: !89)
!5636 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 180, column: 2)
!5637 = !DILocation(line: 180, column: 2, scope: !5636)
!5638 = !DILocation(line: 180, column: 2, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 180, column: 2)
!5640 = !DILocation(line: 180, column: 2, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 180, column: 2)
!5642 = !DILocation(line: 180, column: 2, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 180, column: 2)
!5644 = !DILocation(line: 180, column: 2, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 180, column: 2)
!5646 = !{i32 -2143047722, i32 -2143047693, i32 -2143047647, i32 -2143047589, i32 -2143047535, i32 -2143047481, i32 -2143047426, i32 -2143047395}
!5647 = !DILocation(line: 180, column: 2, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 180, column: 2)
!5649 = !{i32 -2143046985, i32 -2143046978, i32 -2143046926, i32 -2143046895, i32 -2143046865}
!5650 = !DILocation(line: 180, column: 2, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 180, column: 2)
!5652 = !DILocalVariable(name: "__ret_warn_on", scope: !5653, file: !3, line: 181, type: !89)
!5653 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 181, column: 2)
!5654 = !DILocation(line: 181, column: 2, scope: !5653)
!5655 = !DILocation(line: 181, column: 2, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 181, column: 2)
!5657 = !DILocation(line: 181, column: 2, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 181, column: 2)
!5659 = !DILocation(line: 181, column: 2, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 181, column: 2)
!5661 = !DILocation(line: 181, column: 2, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 181, column: 2)
!5663 = !{i32 -2143046247, i32 -2143046218, i32 -2143046172, i32 -2143046114, i32 -2143046060, i32 -2143046006, i32 -2143045951, i32 -2143045920}
!5664 = !DILocation(line: 181, column: 2, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 181, column: 2)
!5666 = !{i32 -2143045510, i32 -2143045503, i32 -2143045451, i32 -2143045420, i32 -2143045390}
!5667 = !DILocation(line: 181, column: 2, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 181, column: 2)
!5669 = !DILocation(line: 182, column: 15, scope: !5569)
!5670 = !DILocation(line: 183, column: 16, scope: !5569)
!5671 = !DILocation(line: 184, column: 9, scope: !5569)
!5672 = !DILocation(line: 184, column: 2, scope: !5569)
!5673 = !DILocation(line: 185, column: 1, scope: !5569)
!5674 = distinct !DISubprogram(name: "clk_enable_unlock", scope: !3, file: !3, line: 187, type: !5675, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{null, !214}
!5677 = !DILocalVariable(name: "lock", arg: 1, scope: !5678, file: !5578, line: 407, type: !5582)
!5678 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5578, file: !5578, line: 407, type: !5679, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5679 = !DISubroutineType(types: !5680)
!5680 = !{null, !5582, !214}
!5681 = !DILocation(line: 407, column: 64, scope: !5678, inlinedAt: !5682)
!5682 = distinct !DILocation(line: 198, column: 2, scope: !5674)
!5683 = !DILocalVariable(name: "flags", arg: 2, scope: !5678, file: !5578, line: 407, type: !214)
!5684 = !DILocation(line: 407, column: 84, scope: !5678, inlinedAt: !5682)
!5685 = !DILocation(line: 15, column: 9, scope: !3025, inlinedAt: !5686)
!5686 = distinct !DILocation(line: 190, column: 2, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 190, column: 2)
!5688 = !DILocation(line: 15, column: 9, scope: !3033, inlinedAt: !5686)
!5689 = !DILocation(line: 15, column: 9, scope: !3036, inlinedAt: !5686)
!5690 = !DILocalVariable(name: "flags", arg: 1, scope: !5674, file: !3, line: 187, type: !214)
!5691 = !DILocation(line: 187, column: 45, scope: !5674)
!5692 = !DILocalVariable(name: "__ret_warn_on", scope: !5687, file: !3, line: 190, type: !89)
!5693 = !DILocation(line: 190, column: 2, scope: !5687)
!5694 = !DILocation(line: 190, column: 2, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 190, column: 2)
!5696 = !DILocation(line: 190, column: 2, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 190, column: 2)
!5698 = !DILocation(line: 190, column: 2, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 190, column: 2)
!5700 = !DILocation(line: 190, column: 2, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 190, column: 2)
!5702 = !{i32 -2143044733, i32 -2143044704, i32 -2143044658, i32 -2143044600, i32 -2143044546, i32 -2143044492, i32 -2143044437, i32 -2143044406}
!5703 = !DILocation(line: 190, column: 2, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 190, column: 2)
!5705 = !{i32 -2143043996, i32 -2143043989, i32 -2143043937, i32 -2143043906, i32 -2143043876}
!5706 = !DILocation(line: 190, column: 2, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 190, column: 2)
!5708 = !DILocalVariable(name: "__ret_warn_on", scope: !5709, file: !3, line: 191, type: !89)
!5709 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 191, column: 2)
!5710 = !DILocation(line: 191, column: 2, scope: !5709)
!5711 = !DILocation(line: 191, column: 2, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 191, column: 2)
!5713 = !DILocation(line: 191, column: 2, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 191, column: 2)
!5715 = !DILocation(line: 191, column: 2, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 191, column: 2)
!5717 = !DILocation(line: 191, column: 2, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 191, column: 2)
!5719 = !{i32 -2143043258, i32 -2143043229, i32 -2143043183, i32 -2143043125, i32 -2143043071, i32 -2143043017, i32 -2143042962, i32 -2143042931}
!5720 = !DILocation(line: 191, column: 2, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 191, column: 2)
!5722 = !{i32 -2143042521, i32 -2143042514, i32 -2143042462, i32 -2143042431, i32 -2143042401}
!5723 = !DILocation(line: 191, column: 2, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 191, column: 2)
!5725 = !DILocation(line: 193, column: 6, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 193, column: 6)
!5727 = !DILocation(line: 193, column: 6, scope: !5674)
!5728 = !DILocation(line: 195, column: 3, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 193, column: 23)
!5730 = !DILocation(line: 197, column: 15, scope: !5674)
!5731 = !DILocation(line: 198, column: 39, scope: !5674)
!5732 = !DILocalVariable(name: "__dummy", scope: !5733, file: !5578, line: 409, type: !214)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !5578, line: 409, column: 2)
!5734 = distinct !DILexicalBlock(scope: !5678, file: !5578, line: 409, column: 2)
!5735 = !DILocation(line: 409, column: 2, scope: !5733, inlinedAt: !5682)
!5736 = !DILocalVariable(name: "__dummy2", scope: !5733, file: !5578, line: 409, type: !214)
!5737 = !DILocalVariable(name: "__dummy", scope: !5738, file: !5578, line: 409, type: !214)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !5578, line: 409, column: 2)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !5578, line: 409, column: 2)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !5578, line: 409, column: 2)
!5741 = distinct !DILexicalBlock(scope: !5734, file: !5578, line: 409, column: 2)
!5742 = !DILocation(line: 409, column: 2, scope: !5738, inlinedAt: !5682)
!5743 = !DILocalVariable(name: "__dummy2", scope: !5738, file: !5578, line: 409, type: !214)
!5744 = !DILocation(line: 409, column: 2, scope: !5739, inlinedAt: !5682)
!5745 = !DILocation(line: 409, column: 2, scope: !5746, inlinedAt: !5682)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !5578, line: 409, column: 2)
!5747 = !{i32 -2145444793}
!5748 = !DILocation(line: 409, column: 2, scope: !5749, inlinedAt: !5682)
!5749 = distinct !DILexicalBlock(scope: !5746, file: !5578, line: 409, column: 2)
!5750 = !DILocation(line: 199, column: 1, scope: !5674)
!5751 = distinct !DISubprogram(name: "hlist_empty", scope: !5752, file: !5752, line: 828, type: !5753, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5752 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5753 = !DISubroutineType(types: !5754)
!5754 = !{!89, !5755}
!5755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5756, size: 64)
!5756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !702)
!5757 = !DILocalVariable(name: "h", arg: 1, scope: !5751, file: !5752, line: 828, type: !5755)
!5758 = !DILocation(line: 828, column: 56, scope: !5751)
!5759 = !DILocation(line: 830, column: 10, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5751, file: !5752, line: 830, column: 10)
!5761 = !DILocation(line: 830, column: 10, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5760, file: !5752, line: 830, column: 10)
!5763 = !DILocation(line: 830, column: 9, scope: !5751)
!5764 = !DILocation(line: 830, column: 2, scope: !5751)
!5765 = distinct !DISubprogram(name: "clk_core_evict_parent_cache", scope: !3, file: !3, line: 3986, type: !3094, scopeLine: 3987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5766 = !DILocalVariable(name: "core", arg: 1, scope: !5765, file: !3, line: 3986, type: !72)
!5767 = !DILocation(line: 3986, column: 58, scope: !5765)
!5768 = !DILocalVariable(name: "lists", scope: !5765, file: !3, line: 3988, type: !5769)
!5769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!5770 = !DILocation(line: 3988, column: 22, scope: !5765)
!5771 = !DILocalVariable(name: "root", scope: !5765, file: !3, line: 3989, type: !72)
!5772 = !DILocation(line: 3989, column: 19, scope: !5765)
!5773 = !DILocation(line: 3991, column: 2, scope: !5765)
!5774 = !DILocation(line: 3991, column: 2, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 3991, column: 2)
!5776 = !DILocation(line: 3993, column: 13, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 3993, column: 2)
!5778 = !DILocation(line: 3993, column: 7, scope: !5777)
!5779 = !DILocation(line: 3993, column: 27, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 3993, column: 2)
!5781 = !DILocation(line: 3993, column: 26, scope: !5780)
!5782 = !DILocation(line: 3993, column: 2, scope: !5777)
!5783 = !DILocalVariable(name: "____ptr", scope: !5784, file: !3, line: 3994, type: !705)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 3994, column: 3)
!5785 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 3994, column: 3)
!5786 = !DILocation(line: 3994, column: 3, scope: !5784)
!5787 = !DILocalVariable(name: "__mptr", scope: !5788, file: !3, line: 3994, type: !71)
!5788 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 3994, column: 3)
!5789 = !DILocation(line: 3994, column: 3, scope: !5788)
!5790 = !DILocation(line: 3994, column: 3, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 3994, column: 3)
!5792 = !DILocation(line: 3994, column: 3, scope: !5785)
!5793 = !DILocation(line: 3994, column: 3, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 3994, column: 3)
!5795 = !DILocation(line: 3995, column: 40, scope: !5794)
!5796 = !DILocation(line: 3995, column: 46, scope: !5794)
!5797 = !DILocation(line: 3995, column: 4, scope: !5794)
!5798 = !DILocalVariable(name: "____ptr", scope: !5799, file: !3, line: 3994, type: !705)
!5799 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 3994, column: 3)
!5800 = !DILocation(line: 3994, column: 3, scope: !5799)
!5801 = !DILocalVariable(name: "__mptr", scope: !5802, file: !3, line: 3994, type: !71)
!5802 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 3994, column: 3)
!5803 = !DILocation(line: 3994, column: 3, scope: !5802)
!5804 = !DILocation(line: 3994, column: 3, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 3994, column: 3)
!5806 = distinct !{!5806, !5792, !5807}
!5807 = !DILocation(line: 3995, column: 50, scope: !5785)
!5808 = !DILocation(line: 3993, column: 39, scope: !5780)
!5809 = !DILocation(line: 3993, column: 2, scope: !5780)
!5810 = distinct !{!5810, !5782, !5811}
!5811 = !DILocation(line: 3995, column: 50, scope: !5777)
!5812 = !DILocation(line: 3997, column: 1, scope: !5765)
!5813 = distinct !DISubprogram(name: "hlist_del_init", scope: !5752, file: !5752, line: 863, type: !5814, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{null, !705}
!5816 = !DILocalVariable(name: "n", arg: 1, scope: !5813, file: !5752, line: 863, type: !705)
!5817 = !DILocation(line: 863, column: 54, scope: !5813)
!5818 = !DILocation(line: 865, column: 22, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5813, file: !5752, line: 865, column: 6)
!5820 = !DILocation(line: 865, column: 7, scope: !5819)
!5821 = !DILocation(line: 865, column: 6, scope: !5813)
!5822 = !DILocation(line: 866, column: 15, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5819, file: !5752, line: 865, column: 26)
!5824 = !DILocation(line: 866, column: 3, scope: !5823)
!5825 = !DILocation(line: 867, column: 19, scope: !5823)
!5826 = !DILocation(line: 867, column: 3, scope: !5823)
!5827 = !DILocation(line: 868, column: 2, scope: !5823)
!5828 = !DILocation(line: 869, column: 1, scope: !5813)
!5829 = distinct !DISubprogram(name: "kref_put", scope: !1589, file: !1589, line: 62, type: !5830, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{!89, !5142, !5832}
!5832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5140, size: 64)
!5833 = !DILocalVariable(name: "kref", arg: 1, scope: !5829, file: !1589, line: 62, type: !5142)
!5834 = !DILocation(line: 62, column: 41, scope: !5829)
!5835 = !DILocalVariable(name: "release", arg: 2, scope: !5829, file: !1589, line: 62, type: !5832)
!5836 = !DILocation(line: 62, column: 54, scope: !5829)
!5837 = !DILocation(line: 64, column: 29, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5829, file: !1589, line: 64, column: 6)
!5839 = !DILocation(line: 64, column: 35, scope: !5838)
!5840 = !DILocation(line: 64, column: 6, scope: !5838)
!5841 = !DILocation(line: 64, column: 6, scope: !5829)
!5842 = !DILocation(line: 65, column: 3, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5838, file: !1589, line: 64, column: 46)
!5844 = !DILocation(line: 65, column: 11, scope: !5843)
!5845 = !DILocation(line: 66, column: 3, scope: !5843)
!5846 = !DILocation(line: 68, column: 2, scope: !5829)
!5847 = !DILocation(line: 69, column: 1, scope: !5829)
!5848 = distinct !DISubprogram(name: "__clk_release", scope: !3, file: !3, line: 3925, type: !5140, scopeLine: 3926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5849 = !DILocalVariable(name: "ref", arg: 1, scope: !5848, file: !3, line: 3925, type: !5142)
!5850 = !DILocation(line: 3925, column: 40, scope: !5848)
!5851 = !DILocalVariable(name: "core", scope: !5848, file: !3, line: 3927, type: !72)
!5852 = !DILocation(line: 3927, column: 19, scope: !5848)
!5853 = !DILocalVariable(name: "__mptr", scope: !5854, file: !3, line: 3927, type: !71)
!5854 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 3927, column: 26)
!5855 = !DILocation(line: 3927, column: 26, scope: !5854)
!5856 = !DILocation(line: 3927, column: 26, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 3927, column: 26)
!5858 = !DILocation(line: 3929, column: 2, scope: !5848)
!5859 = !DILocation(line: 3929, column: 2, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 3929, column: 2)
!5861 = !DILocation(line: 3931, column: 27, scope: !5848)
!5862 = !DILocation(line: 3931, column: 2, scope: !5848)
!5863 = !DILocation(line: 3932, column: 14, scope: !5848)
!5864 = !DILocation(line: 3932, column: 20, scope: !5848)
!5865 = !DILocation(line: 3932, column: 2, scope: !5848)
!5866 = !DILocation(line: 3933, column: 8, scope: !5848)
!5867 = !DILocation(line: 3933, column: 2, scope: !5848)
!5868 = !DILocation(line: 3934, column: 1, scope: !5848)
!5869 = distinct !DISubprogram(name: "clk_hw_unregister", scope: !3, file: !3, line: 4065, type: !2106, scopeLine: 4066, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5870 = !DILocalVariable(name: "hw", arg: 1, scope: !5869, file: !3, line: 4065, type: !90)
!5871 = !DILocation(line: 4065, column: 39, scope: !5869)
!5872 = !DILocation(line: 4067, column: 17, scope: !5869)
!5873 = !DILocation(line: 4067, column: 21, scope: !5869)
!5874 = !DILocation(line: 4067, column: 2, scope: !5869)
!5875 = !DILocation(line: 4068, column: 1, scope: !5869)
!5876 = distinct !DISubprogram(name: "devm_clk_register", scope: !3, file: !3, line: 4091, type: !5165, scopeLine: 4092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5877 = !DILocalVariable(name: "dev", arg: 1, scope: !5876, file: !3, line: 4091, type: !100)
!5878 = !DILocation(line: 4091, column: 46, scope: !5876)
!5879 = !DILocalVariable(name: "hw", arg: 2, scope: !5876, file: !3, line: 4091, type: !90)
!5880 = !DILocation(line: 4091, column: 66, scope: !5876)
!5881 = !DILocalVariable(name: "clk", scope: !5876, file: !3, line: 4093, type: !95)
!5882 = !DILocation(line: 4093, column: 14, scope: !5876)
!5883 = !DILocalVariable(name: "clkp", scope: !5876, file: !3, line: 4094, type: !2294)
!5884 = !DILocation(line: 4094, column: 15, scope: !5876)
!5885 = !DILocation(line: 4096, column: 9, scope: !5876)
!5886 = !DILocation(line: 4096, column: 7, scope: !5876)
!5887 = !DILocation(line: 4097, column: 7, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 4097, column: 6)
!5889 = !DILocation(line: 4097, column: 6, scope: !5876)
!5890 = !DILocation(line: 4098, column: 10, scope: !5888)
!5891 = !DILocation(line: 4098, column: 3, scope: !5888)
!5892 = !DILocation(line: 4100, column: 21, scope: !5876)
!5893 = !DILocation(line: 4100, column: 26, scope: !5876)
!5894 = !DILocation(line: 4100, column: 8, scope: !5876)
!5895 = !DILocation(line: 4100, column: 6, scope: !5876)
!5896 = !DILocation(line: 4101, column: 14, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 4101, column: 6)
!5898 = !DILocation(line: 4101, column: 7, scope: !5897)
!5899 = !DILocation(line: 4101, column: 6, scope: !5876)
!5900 = !DILocation(line: 4102, column: 11, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 4101, column: 20)
!5902 = !DILocation(line: 4102, column: 4, scope: !5901)
!5903 = !DILocation(line: 4102, column: 9, scope: !5901)
!5904 = !DILocation(line: 4103, column: 14, scope: !5901)
!5905 = !DILocation(line: 4103, column: 19, scope: !5901)
!5906 = !DILocation(line: 4103, column: 3, scope: !5901)
!5907 = !DILocation(line: 4104, column: 2, scope: !5901)
!5908 = !DILocation(line: 4105, column: 15, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 4104, column: 9)
!5910 = !DILocation(line: 4105, column: 3, scope: !5909)
!5911 = !DILocation(line: 4108, column: 9, scope: !5876)
!5912 = !DILocation(line: 4108, column: 2, scope: !5876)
!5913 = !DILocation(line: 4109, column: 1, scope: !5876)
!5914 = distinct !DISubprogram(name: "devres_alloc", scope: !30, file: !30, line: 178, type: !5915, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5915 = !DISubroutineType(types: !5916)
!5916 = !{!71, !5917, !211, !1469}
!5917 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_release_t", file: !30, line: 165, baseType: !5918)
!5918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5919, size: 64)
!5919 = !DISubroutineType(types: !5920)
!5920 = !{null, !100, !71}
!5921 = !DILocalVariable(name: "release", arg: 1, scope: !5914, file: !30, line: 178, type: !5917)
!5922 = !DILocation(line: 178, column: 47, scope: !5914)
!5923 = !DILocalVariable(name: "size", arg: 2, scope: !5914, file: !30, line: 178, type: !211)
!5924 = !DILocation(line: 178, column: 63, scope: !5914)
!5925 = !DILocalVariable(name: "gfp", arg: 3, scope: !5914, file: !30, line: 178, type: !1469)
!5926 = !DILocation(line: 178, column: 75, scope: !5914)
!5927 = !DILocation(line: 180, column: 27, scope: !5914)
!5928 = !DILocation(line: 180, column: 36, scope: !5914)
!5929 = !DILocation(line: 180, column: 42, scope: !5914)
!5930 = !DILocation(line: 180, column: 9, scope: !5914)
!5931 = !DILocation(line: 180, column: 2, scope: !5914)
!5932 = distinct !DISubprogram(name: "devm_clk_release", scope: !3, file: !3, line: 4071, type: !5919, scopeLine: 4072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5933 = !DILocalVariable(name: "dev", arg: 1, scope: !5932, file: !3, line: 4071, type: !100)
!5934 = !DILocation(line: 4071, column: 45, scope: !5932)
!5935 = !DILocalVariable(name: "res", arg: 2, scope: !5932, file: !3, line: 4071, type: !71)
!5936 = !DILocation(line: 4071, column: 56, scope: !5932)
!5937 = !DILocation(line: 4073, column: 33, scope: !5932)
!5938 = !DILocation(line: 4073, column: 18, scope: !5932)
!5939 = !DILocation(line: 4073, column: 17, scope: !5932)
!5940 = !DILocation(line: 4073, column: 2, scope: !5932)
!5941 = !DILocation(line: 4074, column: 1, scope: !5932)
!5942 = distinct !DISubprogram(name: "devm_clk_hw_register", scope: !3, file: !3, line: 4121, type: !5396, scopeLine: 4122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5943 = !DILocalVariable(name: "dev", arg: 1, scope: !5942, file: !3, line: 4121, type: !100)
!5944 = !DILocation(line: 4121, column: 41, scope: !5942)
!5945 = !DILocalVariable(name: "hw", arg: 2, scope: !5942, file: !3, line: 4121, type: !90)
!5946 = !DILocation(line: 4121, column: 61, scope: !5942)
!5947 = !DILocalVariable(name: "hwp", scope: !5942, file: !3, line: 4123, type: !2295)
!5948 = !DILocation(line: 4123, column: 18, scope: !5942)
!5949 = !DILocalVariable(name: "ret", scope: !5942, file: !3, line: 4124, type: !89)
!5950 = !DILocation(line: 4124, column: 6, scope: !5942)
!5951 = !DILocation(line: 4126, column: 8, scope: !5942)
!5952 = !DILocation(line: 4126, column: 6, scope: !5942)
!5953 = !DILocation(line: 4127, column: 7, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 4127, column: 6)
!5955 = !DILocation(line: 4127, column: 6, scope: !5942)
!5956 = !DILocation(line: 4128, column: 3, scope: !5954)
!5957 = !DILocation(line: 4130, column: 24, scope: !5942)
!5958 = !DILocation(line: 4130, column: 29, scope: !5942)
!5959 = !DILocation(line: 4130, column: 8, scope: !5942)
!5960 = !DILocation(line: 4130, column: 6, scope: !5942)
!5961 = !DILocation(line: 4131, column: 7, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 4131, column: 6)
!5963 = !DILocation(line: 4131, column: 6, scope: !5942)
!5964 = !DILocation(line: 4132, column: 10, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 4131, column: 12)
!5966 = !DILocation(line: 4132, column: 4, scope: !5965)
!5967 = !DILocation(line: 4132, column: 8, scope: !5965)
!5968 = !DILocation(line: 4133, column: 14, scope: !5965)
!5969 = !DILocation(line: 4133, column: 19, scope: !5965)
!5970 = !DILocation(line: 4133, column: 3, scope: !5965)
!5971 = !DILocation(line: 4134, column: 2, scope: !5965)
!5972 = !DILocation(line: 4135, column: 15, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 4134, column: 9)
!5974 = !DILocation(line: 4135, column: 3, scope: !5973)
!5975 = !DILocation(line: 4138, column: 9, scope: !5942)
!5976 = !DILocation(line: 4138, column: 2, scope: !5942)
!5977 = !DILocation(line: 4139, column: 1, scope: !5942)
!5978 = distinct !DISubprogram(name: "devm_clk_hw_release", scope: !3, file: !3, line: 4076, type: !5919, scopeLine: 4077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5979 = !DILocalVariable(name: "dev", arg: 1, scope: !5978, file: !3, line: 4076, type: !100)
!5980 = !DILocation(line: 4076, column: 48, scope: !5978)
!5981 = !DILocalVariable(name: "res", arg: 2, scope: !5978, file: !3, line: 4076, type: !71)
!5982 = !DILocation(line: 4076, column: 59, scope: !5978)
!5983 = !DILocation(line: 4078, column: 39, scope: !5978)
!5984 = !DILocation(line: 4078, column: 21, scope: !5978)
!5985 = !DILocation(line: 4078, column: 20, scope: !5978)
!5986 = !DILocation(line: 4078, column: 2, scope: !5978)
!5987 = !DILocation(line: 4079, column: 1, scope: !5978)
!5988 = distinct !DISubprogram(name: "devm_clk_unregister", scope: !3, file: !3, line: 4168, type: !5989, scopeLine: 4169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!5989 = !DISubroutineType(types: !5990)
!5990 = !{null, !100, !95}
!5991 = !DILocalVariable(name: "dev", arg: 1, scope: !5988, file: !3, line: 4168, type: !100)
!5992 = !DILocation(line: 4168, column: 41, scope: !5988)
!5993 = !DILocalVariable(name: "clk", arg: 2, scope: !5988, file: !3, line: 4168, type: !95)
!5994 = !DILocation(line: 4168, column: 58, scope: !5988)
!5995 = !DILocalVariable(name: "__ret_warn_on", scope: !5996, file: !3, line: 4170, type: !89)
!5996 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 4170, column: 2)
!5997 = !DILocation(line: 4170, column: 2, scope: !5996)
!5998 = !DILocation(line: 4170, column: 2, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 4170, column: 2)
!6000 = !DILocation(line: 4170, column: 2, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 4170, column: 2)
!6002 = !DILocation(line: 4170, column: 2, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 4170, column: 2)
!6004 = !DILocation(line: 4170, column: 2, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 4170, column: 2)
!6006 = !{i32 -2142865476, i32 -2142865447, i32 -2142865401, i32 -2142865343, i32 -2142865289, i32 -2142865235, i32 -2142865180, i32 -2142865149}
!6007 = !DILocation(line: 4170, column: 2, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 4170, column: 2)
!6009 = !{i32 -2142864749, i32 -2142864742, i32 -2142864690, i32 -2142864659, i32 -2142864629}
!6010 = !DILocation(line: 4170, column: 2, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 4170, column: 2)
!6012 = !DILocation(line: 4171, column: 1, scope: !5988)
!6013 = distinct !DISubprogram(name: "devm_clk_match", scope: !3, file: !3, line: 4142, type: !6014, scopeLine: 4143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6014 = !DISubroutineType(types: !6015)
!6015 = !{!89, !100, !71, !71}
!6016 = !DILocalVariable(name: "dev", arg: 1, scope: !6013, file: !3, line: 4142, type: !100)
!6017 = !DILocation(line: 4142, column: 42, scope: !6013)
!6018 = !DILocalVariable(name: "res", arg: 2, scope: !6013, file: !3, line: 4142, type: !71)
!6019 = !DILocation(line: 4142, column: 53, scope: !6013)
!6020 = !DILocalVariable(name: "data", arg: 3, scope: !6013, file: !3, line: 4142, type: !71)
!6021 = !DILocation(line: 4142, column: 64, scope: !6013)
!6022 = !DILocalVariable(name: "c", scope: !6013, file: !3, line: 4144, type: !95)
!6023 = !DILocation(line: 4144, column: 14, scope: !6013)
!6024 = !DILocation(line: 4144, column: 18, scope: !6013)
!6025 = !DILocalVariable(name: "__ret_warn_on", scope: !6026, file: !3, line: 4145, type: !89)
!6026 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 4145, column: 6)
!6027 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 4145, column: 6)
!6028 = !DILocation(line: 4145, column: 6, scope: !6026)
!6029 = !DILocation(line: 4145, column: 6, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 4145, column: 6)
!6031 = !DILocation(line: 4145, column: 6, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 4145, column: 6)
!6033 = !DILocation(line: 4145, column: 6, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 4145, column: 6)
!6035 = !DILocation(line: 4145, column: 6, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 4145, column: 6)
!6037 = !{i32 -2142868375, i32 -2142868346, i32 -2142868300, i32 -2142868242, i32 -2142868188, i32 -2142868134, i32 -2142868079, i32 -2142868048}
!6038 = !DILocation(line: 4145, column: 6, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 4145, column: 6)
!6040 = !{i32 -2142867648, i32 -2142867641, i32 -2142867589, i32 -2142867558, i32 -2142867528}
!6041 = !DILocation(line: 4145, column: 6, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 4145, column: 6)
!6043 = !DILocation(line: 4145, column: 6, scope: !6027)
!6044 = !DILocation(line: 4145, column: 6, scope: !6013)
!6045 = !DILocation(line: 4146, column: 3, scope: !6027)
!6046 = !DILocation(line: 4147, column: 9, scope: !6013)
!6047 = !DILocation(line: 4147, column: 14, scope: !6013)
!6048 = !DILocation(line: 4147, column: 11, scope: !6013)
!6049 = !DILocation(line: 4147, column: 2, scope: !6013)
!6050 = !DILocation(line: 4148, column: 1, scope: !6013)
!6051 = distinct !DISubprogram(name: "devm_clk_hw_unregister", scope: !3, file: !3, line: 4183, type: !6052, scopeLine: 4184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6052 = !DISubroutineType(types: !6053)
!6053 = !{null, !100, !90}
!6054 = !DILocalVariable(name: "dev", arg: 1, scope: !6051, file: !3, line: 4183, type: !100)
!6055 = !DILocation(line: 4183, column: 44, scope: !6051)
!6056 = !DILocalVariable(name: "hw", arg: 2, scope: !6051, file: !3, line: 4183, type: !90)
!6057 = !DILocation(line: 4183, column: 64, scope: !6051)
!6058 = !DILocalVariable(name: "__ret_warn_on", scope: !6059, file: !3, line: 4185, type: !89)
!6059 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4185, column: 2)
!6060 = !DILocation(line: 4185, column: 2, scope: !6059)
!6061 = !DILocation(line: 4185, column: 2, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 4185, column: 2)
!6063 = !DILocation(line: 4185, column: 2, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 4185, column: 2)
!6065 = !DILocation(line: 4185, column: 2, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4185, column: 2)
!6067 = !DILocation(line: 4185, column: 2, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4185, column: 2)
!6069 = !{i32 -2142863885, i32 -2142863856, i32 -2142863810, i32 -2142863752, i32 -2142863698, i32 -2142863644, i32 -2142863589, i32 -2142863558}
!6070 = !DILocation(line: 4185, column: 2, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4185, column: 2)
!6072 = !{i32 -2142863158, i32 -2142863151, i32 -2142863099, i32 -2142863068, i32 -2142863038}
!6073 = !DILocation(line: 4185, column: 2, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4185, column: 2)
!6075 = !DILocation(line: 4187, column: 1, scope: !6051)
!6076 = distinct !DISubprogram(name: "devm_clk_hw_match", scope: !3, file: !3, line: 4150, type: !6014, scopeLine: 4151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6077 = !DILocalVariable(name: "dev", arg: 1, scope: !6076, file: !3, line: 4150, type: !100)
!6078 = !DILocation(line: 4150, column: 45, scope: !6076)
!6079 = !DILocalVariable(name: "res", arg: 2, scope: !6076, file: !3, line: 4150, type: !71)
!6080 = !DILocation(line: 4150, column: 56, scope: !6076)
!6081 = !DILocalVariable(name: "data", arg: 3, scope: !6076, file: !3, line: 4150, type: !71)
!6082 = !DILocation(line: 4150, column: 67, scope: !6076)
!6083 = !DILocalVariable(name: "hw", scope: !6076, file: !3, line: 4152, type: !90)
!6084 = !DILocation(line: 4152, column: 17, scope: !6076)
!6085 = !DILocation(line: 4152, column: 22, scope: !6076)
!6086 = !DILocalVariable(name: "__ret_warn_on", scope: !6087, file: !3, line: 4154, type: !89)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 4154, column: 6)
!6088 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 4154, column: 6)
!6089 = !DILocation(line: 4154, column: 6, scope: !6087)
!6090 = !DILocation(line: 4154, column: 6, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 4154, column: 6)
!6092 = !DILocation(line: 4154, column: 6, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 4154, column: 6)
!6094 = !DILocation(line: 4154, column: 6, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 4154, column: 6)
!6096 = !DILocation(line: 4154, column: 6, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 4154, column: 6)
!6098 = !{i32 -2142866953, i32 -2142866924, i32 -2142866878, i32 -2142866820, i32 -2142866766, i32 -2142866712, i32 -2142866657, i32 -2142866626}
!6099 = !DILocation(line: 4154, column: 6, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 4154, column: 6)
!6101 = !{i32 -2142866226, i32 -2142866219, i32 -2142866167, i32 -2142866136, i32 -2142866106}
!6102 = !DILocation(line: 4154, column: 6, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 4154, column: 6)
!6104 = !DILocation(line: 4154, column: 6, scope: !6088)
!6105 = !DILocation(line: 4154, column: 6, scope: !6076)
!6106 = !DILocation(line: 4155, column: 3, scope: !6088)
!6107 = !DILocation(line: 4156, column: 9, scope: !6076)
!6108 = !DILocation(line: 4156, column: 15, scope: !6076)
!6109 = !DILocation(line: 4156, column: 12, scope: !6076)
!6110 = !DILocation(line: 4156, column: 2, scope: !6076)
!6111 = !DILocation(line: 4157, column: 1, scope: !6076)
!6112 = distinct !DISubprogram(name: "__clk_put", scope: !3, file: !3, line: 4194, type: !2981, scopeLine: 4195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6113 = !DILocalVariable(name: "clk", arg: 1, scope: !6112, file: !3, line: 4194, type: !95)
!6114 = !DILocation(line: 4194, column: 28, scope: !6112)
!6115 = !DILocalVariable(name: "owner", scope: !6112, file: !3, line: 4196, type: !1674)
!6116 = !DILocation(line: 4196, column: 17, scope: !6112)
!6117 = !DILocation(line: 4198, column: 7, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 4198, column: 6)
!6119 = !DILocation(line: 4198, column: 11, scope: !6118)
!6120 = !DILocalVariable(name: "__ret_warn_on", scope: !6121, file: !3, line: 4198, type: !89)
!6121 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 4198, column: 14)
!6122 = !DILocation(line: 4198, column: 14, scope: !6121)
!6123 = !DILocation(line: 4198, column: 14, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 4198, column: 14)
!6125 = !DILocation(line: 4198, column: 14, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 4198, column: 14)
!6127 = !DILocation(line: 4198, column: 14, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 4198, column: 14)
!6129 = !DILocation(line: 4198, column: 14, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 4198, column: 14)
!6131 = !{i32 -2142862316, i32 -2142862287, i32 -2142862241, i32 -2142862183, i32 -2142862129, i32 -2142862075, i32 -2142862020, i32 -2142861989}
!6132 = !DILocation(line: 4198, column: 14, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 4198, column: 14)
!6134 = !{i32 -2142861578, i32 -2142861571, i32 -2142861519, i32 -2142861488, i32 -2142861458}
!6135 = !DILocation(line: 4198, column: 14, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 4198, column: 14)
!6137 = !DILocation(line: 4198, column: 14, scope: !6118)
!6138 = !DILocation(line: 4198, column: 6, scope: !6112)
!6139 = !DILocation(line: 4199, column: 3, scope: !6118)
!6140 = !DILocation(line: 4201, column: 2, scope: !6112)
!6141 = !DILocalVariable(name: "__ret_warn_on", scope: !6142, file: !3, line: 4208, type: !89)
!6142 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 4208, column: 6)
!6143 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 4208, column: 6)
!6144 = !DILocation(line: 4208, column: 6, scope: !6142)
!6145 = !DILocation(line: 4208, column: 6, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 4208, column: 6)
!6147 = !DILocation(line: 4208, column: 6, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 4208, column: 6)
!6149 = !DILocation(line: 4208, column: 6, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 4208, column: 6)
!6151 = !DILocation(line: 4208, column: 6, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 4208, column: 6)
!6153 = !{i32 -2142860866, i32 -2142860837, i32 -2142860791, i32 -2142860733, i32 -2142860679, i32 -2142860625, i32 -2142860570, i32 -2142860539}
!6154 = !DILocation(line: 4208, column: 6, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 4208, column: 6)
!6156 = !{i32 -2142860139, i32 -2142860132, i32 -2142860080, i32 -2142860049, i32 -2142860019}
!6157 = !DILocation(line: 4208, column: 6, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 4208, column: 6)
!6159 = !DILocation(line: 4208, column: 6, scope: !6143)
!6160 = !DILocation(line: 4208, column: 6, scope: !6112)
!6161 = !DILocation(line: 4210, column: 32, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 4208, column: 37)
!6163 = !DILocation(line: 4210, column: 37, scope: !6162)
!6164 = !DILocation(line: 4210, column: 53, scope: !6162)
!6165 = !DILocation(line: 4210, column: 3, scope: !6162)
!6166 = !DILocation(line: 4210, column: 8, scope: !6162)
!6167 = !DILocation(line: 4210, column: 14, scope: !6162)
!6168 = !DILocation(line: 4210, column: 28, scope: !6162)
!6169 = !DILocation(line: 4211, column: 27, scope: !6162)
!6170 = !DILocation(line: 4211, column: 32, scope: !6162)
!6171 = !DILocation(line: 4211, column: 3, scope: !6162)
!6172 = !DILocation(line: 4212, column: 3, scope: !6162)
!6173 = !DILocation(line: 4212, column: 8, scope: !6162)
!6174 = !DILocation(line: 4212, column: 24, scope: !6162)
!6175 = !DILocation(line: 4213, column: 2, scope: !6162)
!6176 = !DILocation(line: 4215, column: 13, scope: !6112)
!6177 = !DILocation(line: 4215, column: 18, scope: !6112)
!6178 = !DILocation(line: 4215, column: 2, scope: !6112)
!6179 = !DILocation(line: 4216, column: 6, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 4216, column: 6)
!6181 = !DILocation(line: 4216, column: 11, scope: !6180)
!6182 = !DILocation(line: 4216, column: 22, scope: !6180)
!6183 = !DILocation(line: 4216, column: 27, scope: !6180)
!6184 = !DILocation(line: 4216, column: 33, scope: !6180)
!6185 = !DILocation(line: 4216, column: 20, scope: !6180)
!6186 = !DILocation(line: 4216, column: 42, scope: !6180)
!6187 = !DILocation(line: 4217, column: 6, scope: !6180)
!6188 = !DILocation(line: 4217, column: 11, scope: !6180)
!6189 = !DILocation(line: 4217, column: 22, scope: !6180)
!6190 = !DILocation(line: 4217, column: 27, scope: !6180)
!6191 = !DILocation(line: 4217, column: 33, scope: !6180)
!6192 = !DILocation(line: 4217, column: 20, scope: !6180)
!6193 = !DILocation(line: 4216, column: 6, scope: !6112)
!6194 = !DILocation(line: 4218, column: 28, scope: !6180)
!6195 = !DILocation(line: 4218, column: 33, scope: !6180)
!6196 = !DILocation(line: 4218, column: 39, scope: !6180)
!6197 = !DILocation(line: 4218, column: 44, scope: !6180)
!6198 = !DILocation(line: 4218, column: 50, scope: !6180)
!6199 = !DILocation(line: 4218, column: 3, scope: !6180)
!6200 = !DILocation(line: 4220, column: 10, scope: !6112)
!6201 = !DILocation(line: 4220, column: 15, scope: !6112)
!6202 = !DILocation(line: 4220, column: 21, scope: !6112)
!6203 = !DILocation(line: 4220, column: 8, scope: !6112)
!6204 = !DILocation(line: 4221, column: 12, scope: !6112)
!6205 = !DILocation(line: 4221, column: 17, scope: !6112)
!6206 = !DILocation(line: 4221, column: 23, scope: !6112)
!6207 = !DILocation(line: 4221, column: 2, scope: !6112)
!6208 = !DILocation(line: 4223, column: 2, scope: !6112)
!6209 = !DILocation(line: 4225, column: 13, scope: !6112)
!6210 = !DILocation(line: 4225, column: 2, scope: !6112)
!6211 = !DILocation(line: 4227, column: 11, scope: !6112)
!6212 = !DILocation(line: 4227, column: 2, scope: !6112)
!6213 = !DILocation(line: 4228, column: 1, scope: !6112)
!6214 = distinct !DISubprogram(name: "hlist_del", scope: !5752, file: !5752, line: 850, type: !5814, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6215 = !DILocalVariable(name: "n", arg: 1, scope: !6214, file: !5752, line: 850, type: !705)
!6216 = !DILocation(line: 850, column: 49, scope: !6214)
!6217 = !DILocation(line: 852, column: 14, scope: !6214)
!6218 = !DILocation(line: 852, column: 2, scope: !6214)
!6219 = !DILocation(line: 853, column: 2, scope: !6214)
!6220 = !DILocation(line: 853, column: 5, scope: !6214)
!6221 = !DILocation(line: 853, column: 10, scope: !6214)
!6222 = !DILocation(line: 854, column: 2, scope: !6214)
!6223 = !DILocation(line: 854, column: 5, scope: !6214)
!6224 = !DILocation(line: 854, column: 11, scope: !6214)
!6225 = !DILocation(line: 855, column: 1, scope: !6214)
!6226 = distinct !DISubprogram(name: "module_put", scope: !5116, file: !5116, line: 756, type: !6227, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{null, !1674}
!6229 = !DILocalVariable(name: "module", arg: 1, scope: !6226, file: !5116, line: 756, type: !1674)
!6230 = !DILocation(line: 756, column: 46, scope: !6226)
!6231 = !DILocation(line: 758, column: 1, scope: !6226)
!6232 = distinct !DISubprogram(name: "clk_notifier_register", scope: !3, file: !3, line: 4252, type: !6233, scopeLine: 4253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6233 = !DISubroutineType(types: !6234)
!6234 = !{!89, !95, !2239}
!6235 = !DILocalVariable(name: "clk", arg: 1, scope: !6232, file: !3, line: 4252, type: !95)
!6236 = !DILocation(line: 4252, column: 39, scope: !6232)
!6237 = !DILocalVariable(name: "nb", arg: 2, scope: !6232, file: !3, line: 4252, type: !2239)
!6238 = !DILocation(line: 4252, column: 67, scope: !6232)
!6239 = !DILocalVariable(name: "cn", scope: !6232, file: !3, line: 4254, type: !2214)
!6240 = !DILocation(line: 4254, column: 23, scope: !6232)
!6241 = !DILocalVariable(name: "ret", scope: !6232, file: !3, line: 4255, type: !89)
!6242 = !DILocation(line: 4255, column: 6, scope: !6232)
!6243 = !DILocation(line: 4257, column: 7, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 4257, column: 6)
!6245 = !DILocation(line: 4257, column: 11, scope: !6244)
!6246 = !DILocation(line: 4257, column: 15, scope: !6244)
!6247 = !DILocation(line: 4257, column: 6, scope: !6232)
!6248 = !DILocation(line: 4258, column: 3, scope: !6244)
!6249 = !DILocation(line: 4260, column: 2, scope: !6232)
!6250 = !DILocalVariable(name: "__mptr", scope: !6251, file: !3, line: 4263, type: !71)
!6251 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 4263, column: 2)
!6252 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 4263, column: 2)
!6253 = !DILocation(line: 4263, column: 2, scope: !6251)
!6254 = !DILocation(line: 4263, column: 2, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6251, file: !3, line: 4263, column: 2)
!6256 = !DILocation(line: 4263, column: 2, scope: !6252)
!6257 = !DILocation(line: 4263, column: 2, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 4263, column: 2)
!6259 = !DILocation(line: 4264, column: 7, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 4264, column: 7)
!6261 = !DILocation(line: 4264, column: 11, scope: !6260)
!6262 = !DILocation(line: 4264, column: 18, scope: !6260)
!6263 = !DILocation(line: 4264, column: 15, scope: !6260)
!6264 = !DILocation(line: 4264, column: 7, scope: !6258)
!6265 = !DILocation(line: 4265, column: 4, scope: !6260)
!6266 = !DILocalVariable(name: "__mptr", scope: !6267, file: !3, line: 4263, type: !71)
!6267 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 4263, column: 2)
!6268 = !DILocation(line: 4263, column: 2, scope: !6267)
!6269 = !DILocation(line: 4263, column: 2, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 4263, column: 2)
!6271 = distinct !{!6271, !6256, !6272}
!6272 = !DILocation(line: 4265, column: 4, scope: !6252)
!6273 = !DILocation(line: 4268, column: 6, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 4268, column: 6)
!6275 = !DILocation(line: 4268, column: 10, scope: !6274)
!6276 = !DILocation(line: 4268, column: 17, scope: !6274)
!6277 = !DILocation(line: 4268, column: 14, scope: !6274)
!6278 = !DILocation(line: 4268, column: 6, scope: !6232)
!6279 = !DILocation(line: 4269, column: 8, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 4268, column: 22)
!6281 = !DILocation(line: 4269, column: 6, scope: !6280)
!6282 = !DILocation(line: 4270, column: 8, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 4270, column: 7)
!6284 = !DILocation(line: 4270, column: 7, scope: !6280)
!6285 = !DILocation(line: 4271, column: 4, scope: !6283)
!6286 = !DILocation(line: 4273, column: 13, scope: !6280)
!6287 = !DILocation(line: 4273, column: 3, scope: !6280)
!6288 = !DILocation(line: 4273, column: 7, scope: !6280)
!6289 = !DILocation(line: 4273, column: 11, scope: !6280)
!6290 = !DILocation(line: 4274, column: 28, scope: !6280)
!6291 = !DILocation(line: 4274, column: 32, scope: !6280)
!6292 = !DILocation(line: 4274, column: 3, scope: !6280)
!6293 = !DILocation(line: 4276, column: 13, scope: !6280)
!6294 = !DILocation(line: 4276, column: 17, scope: !6280)
!6295 = !DILocation(line: 4276, column: 3, scope: !6280)
!6296 = !DILocation(line: 4277, column: 2, scope: !6280)
!6297 = !DILocation(line: 4279, column: 38, scope: !6232)
!6298 = !DILocation(line: 4279, column: 42, scope: !6232)
!6299 = !DILocation(line: 4279, column: 57, scope: !6232)
!6300 = !DILocation(line: 4279, column: 8, scope: !6232)
!6301 = !DILocation(line: 4279, column: 6, scope: !6232)
!6302 = !DILocation(line: 4281, column: 2, scope: !6232)
!6303 = !DILocation(line: 4281, column: 7, scope: !6232)
!6304 = !DILocation(line: 4281, column: 13, scope: !6232)
!6305 = !DILocation(line: 4281, column: 27, scope: !6232)
!6306 = !DILabel(scope: !6232, name: "out", file: !3, line: 4283)
!6307 = !DILocation(line: 4283, column: 1, scope: !6232)
!6308 = !DILocation(line: 4284, column: 2, scope: !6232)
!6309 = !DILocation(line: 4286, column: 9, scope: !6232)
!6310 = !DILocation(line: 4286, column: 2, scope: !6232)
!6311 = !DILocation(line: 4287, column: 1, scope: !6232)
!6312 = distinct !DISubprogram(name: "kzalloc", scope: !64, file: !64, line: 662, type: !6313, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!71, !211, !1469}
!6315 = !DILocalVariable(name: "s", arg: 1, scope: !6316, file: !64, line: 445, type: !1058)
!6316 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !64, file: !64, line: 445, type: !6317, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{!71, !1058, !1469, !211}
!6319 = !DILocation(line: 445, column: 72, scope: !6316, inlinedAt: !6320)
!6320 = distinct !DILocation(line: 552, column: 10, scope: !6321, inlinedAt: !6324)
!6321 = distinct !DILexicalBlock(scope: !6322, file: !64, line: 540, column: 34)
!6322 = distinct !DILexicalBlock(scope: !6323, file: !64, line: 540, column: 6)
!6323 = distinct !DISubprogram(name: "kmalloc", scope: !64, file: !64, line: 538, type: !6313, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6324 = distinct !DILocation(line: 664, column: 9, scope: !6312)
!6325 = !DILocalVariable(name: "flags", arg: 2, scope: !6316, file: !64, line: 446, type: !1469)
!6326 = !DILocation(line: 446, column: 9, scope: !6316, inlinedAt: !6320)
!6327 = !DILocalVariable(name: "size", arg: 3, scope: !6316, file: !64, line: 446, type: !211)
!6328 = !DILocation(line: 446, column: 23, scope: !6316, inlinedAt: !6320)
!6329 = !DILocalVariable(name: "ret", scope: !6316, file: !64, line: 448, type: !71)
!6330 = !DILocation(line: 448, column: 8, scope: !6316, inlinedAt: !6320)
!6331 = !DILocalVariable(name: "flags", arg: 1, scope: !6332, file: !64, line: 318, type: !1469)
!6332 = distinct !DISubprogram(name: "kmalloc_type", scope: !64, file: !64, line: 318, type: !6333, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{!63, !1469}
!6335 = !DILocation(line: 318, column: 67, scope: !6332, inlinedAt: !6336)
!6336 = distinct !DILocation(line: 553, column: 20, scope: !6321, inlinedAt: !6324)
!6337 = !DILocalVariable(name: "size", arg: 1, scope: !6338, file: !64, line: 346, type: !211)
!6338 = distinct !DISubprogram(name: "kmalloc_index", scope: !64, file: !64, line: 346, type: !6339, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{!7, !211}
!6341 = !DILocation(line: 346, column: 58, scope: !6338, inlinedAt: !6342)
!6342 = distinct !DILocation(line: 547, column: 11, scope: !6321, inlinedAt: !6324)
!6343 = !DILocalVariable(name: "size", arg: 1, scope: !6344, file: !64, line: 472, type: !211)
!6344 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !64, file: !64, line: 472, type: !6345, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6345 = !DISubroutineType(types: !6346)
!6346 = !{!71, !211, !1469, !7}
!6347 = !DILocation(line: 472, column: 28, scope: !6344, inlinedAt: !6348)
!6348 = distinct !DILocation(line: 481, column: 9, scope: !6349, inlinedAt: !6350)
!6349 = distinct !DISubprogram(name: "kmalloc_large", scope: !64, file: !64, line: 478, type: !6313, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6350 = distinct !DILocation(line: 545, column: 11, scope: !6351, inlinedAt: !6324)
!6351 = distinct !DILexicalBlock(scope: !6321, file: !64, line: 544, column: 7)
!6352 = !DILocalVariable(name: "flags", arg: 2, scope: !6344, file: !64, line: 472, type: !1469)
!6353 = !DILocation(line: 472, column: 40, scope: !6344, inlinedAt: !6348)
!6354 = !DILocalVariable(name: "order", arg: 3, scope: !6344, file: !64, line: 472, type: !7)
!6355 = !DILocation(line: 472, column: 60, scope: !6344, inlinedAt: !6348)
!6356 = !DILocalVariable(name: "size", arg: 1, scope: !6349, file: !64, line: 478, type: !211)
!6357 = !DILocation(line: 478, column: 51, scope: !6349, inlinedAt: !6350)
!6358 = !DILocalVariable(name: "flags", arg: 2, scope: !6349, file: !64, line: 478, type: !1469)
!6359 = !DILocation(line: 478, column: 63, scope: !6349, inlinedAt: !6350)
!6360 = !DILocalVariable(name: "order", scope: !6349, file: !64, line: 480, type: !7)
!6361 = !DILocation(line: 480, column: 15, scope: !6349, inlinedAt: !6350)
!6362 = !DILocalVariable(name: "size", arg: 1, scope: !6323, file: !64, line: 538, type: !211)
!6363 = !DILocation(line: 538, column: 45, scope: !6323, inlinedAt: !6324)
!6364 = !DILocalVariable(name: "flags", arg: 2, scope: !6323, file: !64, line: 538, type: !1469)
!6365 = !DILocation(line: 538, column: 57, scope: !6323, inlinedAt: !6324)
!6366 = !DILocalVariable(name: "index", scope: !6321, file: !64, line: 542, type: !7)
!6367 = !DILocation(line: 542, column: 16, scope: !6321, inlinedAt: !6324)
!6368 = !DILocalVariable(name: "size", arg: 1, scope: !6312, file: !64, line: 662, type: !211)
!6369 = !DILocation(line: 662, column: 36, scope: !6312)
!6370 = !DILocalVariable(name: "flags", arg: 2, scope: !6312, file: !64, line: 662, type: !1469)
!6371 = !DILocation(line: 662, column: 48, scope: !6312)
!6372 = !DILocation(line: 664, column: 17, scope: !6312)
!6373 = !DILocation(line: 664, column: 23, scope: !6312)
!6374 = !DILocation(line: 664, column: 29, scope: !6312)
!6375 = !DILocation(line: 540, column: 27, scope: !6322, inlinedAt: !6324)
!6376 = !DILocation(line: 540, column: 6, scope: !6322, inlinedAt: !6324)
!6377 = !DILocation(line: 540, column: 6, scope: !6323, inlinedAt: !6324)
!6378 = !DILocation(line: 544, column: 7, scope: !6351, inlinedAt: !6324)
!6379 = !DILocation(line: 544, column: 12, scope: !6351, inlinedAt: !6324)
!6380 = !DILocation(line: 544, column: 7, scope: !6321, inlinedAt: !6324)
!6381 = !DILocation(line: 545, column: 25, scope: !6351, inlinedAt: !6324)
!6382 = !DILocation(line: 545, column: 31, scope: !6351, inlinedAt: !6324)
!6383 = !DILocation(line: 480, column: 33, scope: !6349, inlinedAt: !6350)
!6384 = !DILocation(line: 480, column: 23, scope: !6349, inlinedAt: !6350)
!6385 = !DILocation(line: 481, column: 29, scope: !6349, inlinedAt: !6350)
!6386 = !DILocation(line: 481, column: 35, scope: !6349, inlinedAt: !6350)
!6387 = !DILocation(line: 481, column: 42, scope: !6349, inlinedAt: !6350)
!6388 = !DILocation(line: 474, column: 23, scope: !6344, inlinedAt: !6348)
!6389 = !DILocation(line: 474, column: 29, scope: !6344, inlinedAt: !6348)
!6390 = !DILocation(line: 474, column: 36, scope: !6344, inlinedAt: !6348)
!6391 = !DILocation(line: 474, column: 9, scope: !6344, inlinedAt: !6348)
!6392 = !DILocation(line: 545, column: 4, scope: !6351, inlinedAt: !6324)
!6393 = !DILocation(line: 547, column: 25, scope: !6321, inlinedAt: !6324)
!6394 = !DILocation(line: 348, column: 7, scope: !6395, inlinedAt: !6342)
!6395 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 348, column: 6)
!6396 = !DILocation(line: 348, column: 6, scope: !6338, inlinedAt: !6342)
!6397 = !DILocation(line: 349, column: 3, scope: !6395, inlinedAt: !6342)
!6398 = !DILocation(line: 351, column: 6, scope: !6399, inlinedAt: !6342)
!6399 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 351, column: 6)
!6400 = !DILocation(line: 351, column: 11, scope: !6399, inlinedAt: !6342)
!6401 = !DILocation(line: 351, column: 6, scope: !6338, inlinedAt: !6342)
!6402 = !DILocation(line: 352, column: 3, scope: !6399, inlinedAt: !6342)
!6403 = !DILocation(line: 354, column: 32, scope: !6404, inlinedAt: !6342)
!6404 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 354, column: 6)
!6405 = !DILocation(line: 354, column: 37, scope: !6404, inlinedAt: !6342)
!6406 = !DILocation(line: 354, column: 42, scope: !6404, inlinedAt: !6342)
!6407 = !DILocation(line: 354, column: 45, scope: !6404, inlinedAt: !6342)
!6408 = !DILocation(line: 354, column: 50, scope: !6404, inlinedAt: !6342)
!6409 = !DILocation(line: 354, column: 6, scope: !6338, inlinedAt: !6342)
!6410 = !DILocation(line: 355, column: 3, scope: !6404, inlinedAt: !6342)
!6411 = !DILocation(line: 356, column: 32, scope: !6412, inlinedAt: !6342)
!6412 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 356, column: 6)
!6413 = !DILocation(line: 356, column: 37, scope: !6412, inlinedAt: !6342)
!6414 = !DILocation(line: 356, column: 43, scope: !6412, inlinedAt: !6342)
!6415 = !DILocation(line: 356, column: 46, scope: !6412, inlinedAt: !6342)
!6416 = !DILocation(line: 356, column: 51, scope: !6412, inlinedAt: !6342)
!6417 = !DILocation(line: 356, column: 6, scope: !6338, inlinedAt: !6342)
!6418 = !DILocation(line: 357, column: 3, scope: !6412, inlinedAt: !6342)
!6419 = !DILocation(line: 358, column: 6, scope: !6420, inlinedAt: !6342)
!6420 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 358, column: 6)
!6421 = !DILocation(line: 358, column: 11, scope: !6420, inlinedAt: !6342)
!6422 = !DILocation(line: 358, column: 6, scope: !6338, inlinedAt: !6342)
!6423 = !DILocation(line: 358, column: 26, scope: !6420, inlinedAt: !6342)
!6424 = !DILocation(line: 359, column: 6, scope: !6425, inlinedAt: !6342)
!6425 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 359, column: 6)
!6426 = !DILocation(line: 359, column: 11, scope: !6425, inlinedAt: !6342)
!6427 = !DILocation(line: 359, column: 6, scope: !6338, inlinedAt: !6342)
!6428 = !DILocation(line: 359, column: 26, scope: !6425, inlinedAt: !6342)
!6429 = !DILocation(line: 360, column: 6, scope: !6430, inlinedAt: !6342)
!6430 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 360, column: 6)
!6431 = !DILocation(line: 360, column: 11, scope: !6430, inlinedAt: !6342)
!6432 = !DILocation(line: 360, column: 6, scope: !6338, inlinedAt: !6342)
!6433 = !DILocation(line: 360, column: 26, scope: !6430, inlinedAt: !6342)
!6434 = !DILocation(line: 361, column: 6, scope: !6435, inlinedAt: !6342)
!6435 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 361, column: 6)
!6436 = !DILocation(line: 361, column: 11, scope: !6435, inlinedAt: !6342)
!6437 = !DILocation(line: 361, column: 6, scope: !6338, inlinedAt: !6342)
!6438 = !DILocation(line: 361, column: 26, scope: !6435, inlinedAt: !6342)
!6439 = !DILocation(line: 362, column: 6, scope: !6440, inlinedAt: !6342)
!6440 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 362, column: 6)
!6441 = !DILocation(line: 362, column: 11, scope: !6440, inlinedAt: !6342)
!6442 = !DILocation(line: 362, column: 6, scope: !6338, inlinedAt: !6342)
!6443 = !DILocation(line: 362, column: 26, scope: !6440, inlinedAt: !6342)
!6444 = !DILocation(line: 363, column: 6, scope: !6445, inlinedAt: !6342)
!6445 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 363, column: 6)
!6446 = !DILocation(line: 363, column: 11, scope: !6445, inlinedAt: !6342)
!6447 = !DILocation(line: 363, column: 6, scope: !6338, inlinedAt: !6342)
!6448 = !DILocation(line: 363, column: 26, scope: !6445, inlinedAt: !6342)
!6449 = !DILocation(line: 364, column: 6, scope: !6450, inlinedAt: !6342)
!6450 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 364, column: 6)
!6451 = !DILocation(line: 364, column: 11, scope: !6450, inlinedAt: !6342)
!6452 = !DILocation(line: 364, column: 6, scope: !6338, inlinedAt: !6342)
!6453 = !DILocation(line: 364, column: 26, scope: !6450, inlinedAt: !6342)
!6454 = !DILocation(line: 365, column: 6, scope: !6455, inlinedAt: !6342)
!6455 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 365, column: 6)
!6456 = !DILocation(line: 365, column: 11, scope: !6455, inlinedAt: !6342)
!6457 = !DILocation(line: 365, column: 6, scope: !6338, inlinedAt: !6342)
!6458 = !DILocation(line: 365, column: 26, scope: !6455, inlinedAt: !6342)
!6459 = !DILocation(line: 366, column: 6, scope: !6460, inlinedAt: !6342)
!6460 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 366, column: 6)
!6461 = !DILocation(line: 366, column: 11, scope: !6460, inlinedAt: !6342)
!6462 = !DILocation(line: 366, column: 6, scope: !6338, inlinedAt: !6342)
!6463 = !DILocation(line: 366, column: 26, scope: !6460, inlinedAt: !6342)
!6464 = !DILocation(line: 367, column: 6, scope: !6465, inlinedAt: !6342)
!6465 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 367, column: 6)
!6466 = !DILocation(line: 367, column: 11, scope: !6465, inlinedAt: !6342)
!6467 = !DILocation(line: 367, column: 6, scope: !6338, inlinedAt: !6342)
!6468 = !DILocation(line: 367, column: 26, scope: !6465, inlinedAt: !6342)
!6469 = !DILocation(line: 368, column: 6, scope: !6470, inlinedAt: !6342)
!6470 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 368, column: 6)
!6471 = !DILocation(line: 368, column: 11, scope: !6470, inlinedAt: !6342)
!6472 = !DILocation(line: 368, column: 6, scope: !6338, inlinedAt: !6342)
!6473 = !DILocation(line: 368, column: 26, scope: !6470, inlinedAt: !6342)
!6474 = !DILocation(line: 369, column: 6, scope: !6475, inlinedAt: !6342)
!6475 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 369, column: 6)
!6476 = !DILocation(line: 369, column: 11, scope: !6475, inlinedAt: !6342)
!6477 = !DILocation(line: 369, column: 6, scope: !6338, inlinedAt: !6342)
!6478 = !DILocation(line: 369, column: 26, scope: !6475, inlinedAt: !6342)
!6479 = !DILocation(line: 370, column: 6, scope: !6480, inlinedAt: !6342)
!6480 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 370, column: 6)
!6481 = !DILocation(line: 370, column: 11, scope: !6480, inlinedAt: !6342)
!6482 = !DILocation(line: 370, column: 6, scope: !6338, inlinedAt: !6342)
!6483 = !DILocation(line: 370, column: 26, scope: !6480, inlinedAt: !6342)
!6484 = !DILocation(line: 371, column: 6, scope: !6485, inlinedAt: !6342)
!6485 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 371, column: 6)
!6486 = !DILocation(line: 371, column: 11, scope: !6485, inlinedAt: !6342)
!6487 = !DILocation(line: 371, column: 6, scope: !6338, inlinedAt: !6342)
!6488 = !DILocation(line: 371, column: 26, scope: !6485, inlinedAt: !6342)
!6489 = !DILocation(line: 372, column: 6, scope: !6490, inlinedAt: !6342)
!6490 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 372, column: 6)
!6491 = !DILocation(line: 372, column: 11, scope: !6490, inlinedAt: !6342)
!6492 = !DILocation(line: 372, column: 6, scope: !6338, inlinedAt: !6342)
!6493 = !DILocation(line: 372, column: 26, scope: !6490, inlinedAt: !6342)
!6494 = !DILocation(line: 373, column: 6, scope: !6495, inlinedAt: !6342)
!6495 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 373, column: 6)
!6496 = !DILocation(line: 373, column: 11, scope: !6495, inlinedAt: !6342)
!6497 = !DILocation(line: 373, column: 6, scope: !6338, inlinedAt: !6342)
!6498 = !DILocation(line: 373, column: 26, scope: !6495, inlinedAt: !6342)
!6499 = !DILocation(line: 374, column: 6, scope: !6500, inlinedAt: !6342)
!6500 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 374, column: 6)
!6501 = !DILocation(line: 374, column: 11, scope: !6500, inlinedAt: !6342)
!6502 = !DILocation(line: 374, column: 6, scope: !6338, inlinedAt: !6342)
!6503 = !DILocation(line: 374, column: 26, scope: !6500, inlinedAt: !6342)
!6504 = !DILocation(line: 375, column: 6, scope: !6505, inlinedAt: !6342)
!6505 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 375, column: 6)
!6506 = !DILocation(line: 375, column: 11, scope: !6505, inlinedAt: !6342)
!6507 = !DILocation(line: 375, column: 6, scope: !6338, inlinedAt: !6342)
!6508 = !DILocation(line: 375, column: 27, scope: !6505, inlinedAt: !6342)
!6509 = !DILocation(line: 376, column: 6, scope: !6510, inlinedAt: !6342)
!6510 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 376, column: 6)
!6511 = !DILocation(line: 376, column: 11, scope: !6510, inlinedAt: !6342)
!6512 = !DILocation(line: 376, column: 6, scope: !6338, inlinedAt: !6342)
!6513 = !DILocation(line: 376, column: 32, scope: !6510, inlinedAt: !6342)
!6514 = !DILocation(line: 377, column: 6, scope: !6515, inlinedAt: !6342)
!6515 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 377, column: 6)
!6516 = !DILocation(line: 377, column: 11, scope: !6515, inlinedAt: !6342)
!6517 = !DILocation(line: 377, column: 6, scope: !6338, inlinedAt: !6342)
!6518 = !DILocation(line: 377, column: 32, scope: !6515, inlinedAt: !6342)
!6519 = !DILocation(line: 378, column: 6, scope: !6520, inlinedAt: !6342)
!6520 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 378, column: 6)
!6521 = !DILocation(line: 378, column: 11, scope: !6520, inlinedAt: !6342)
!6522 = !DILocation(line: 378, column: 6, scope: !6338, inlinedAt: !6342)
!6523 = !DILocation(line: 378, column: 32, scope: !6520, inlinedAt: !6342)
!6524 = !DILocation(line: 379, column: 6, scope: !6525, inlinedAt: !6342)
!6525 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 379, column: 6)
!6526 = !DILocation(line: 379, column: 11, scope: !6525, inlinedAt: !6342)
!6527 = !DILocation(line: 379, column: 6, scope: !6338, inlinedAt: !6342)
!6528 = !DILocation(line: 379, column: 33, scope: !6525, inlinedAt: !6342)
!6529 = !DILocation(line: 380, column: 6, scope: !6530, inlinedAt: !6342)
!6530 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 380, column: 6)
!6531 = !DILocation(line: 380, column: 11, scope: !6530, inlinedAt: !6342)
!6532 = !DILocation(line: 380, column: 6, scope: !6338, inlinedAt: !6342)
!6533 = !DILocation(line: 380, column: 33, scope: !6530, inlinedAt: !6342)
!6534 = !DILocation(line: 381, column: 6, scope: !6535, inlinedAt: !6342)
!6535 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 381, column: 6)
!6536 = !DILocation(line: 381, column: 11, scope: !6535, inlinedAt: !6342)
!6537 = !DILocation(line: 381, column: 6, scope: !6338, inlinedAt: !6342)
!6538 = !DILocation(line: 381, column: 33, scope: !6535, inlinedAt: !6342)
!6539 = !DILocation(line: 382, column: 2, scope: !6540, inlinedAt: !6342)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !64, line: 382, column: 2)
!6541 = distinct !DILexicalBlock(scope: !6338, file: !64, line: 382, column: 2)
!6542 = !{i32 -2143926136, i32 -2143926107, i32 -2143926061, i32 -2143926003, i32 -2143925949, i32 -2143925895, i32 -2143925840, i32 -2143925809}
!6543 = !DILocation(line: 382, column: 2, scope: !6544, inlinedAt: !6342)
!6544 = distinct !DILexicalBlock(scope: !6545, file: !64, line: 382, column: 2)
!6545 = distinct !DILexicalBlock(scope: !6541, file: !64, line: 382, column: 2)
!6546 = !{i32 -2143925366, i32 -2143925359, i32 -2143925305, i32 -2143925274, i32 -2143925244}
!6547 = !DILocation(line: 382, column: 2, scope: !6545, inlinedAt: !6342)
!6548 = !DILocation(line: 386, column: 1, scope: !6338, inlinedAt: !6342)
!6549 = !DILocation(line: 547, column: 9, scope: !6321, inlinedAt: !6324)
!6550 = !DILocation(line: 549, column: 8, scope: !6551, inlinedAt: !6324)
!6551 = distinct !DILexicalBlock(scope: !6321, file: !64, line: 549, column: 7)
!6552 = !DILocation(line: 549, column: 7, scope: !6321, inlinedAt: !6324)
!6553 = !DILocation(line: 550, column: 4, scope: !6551, inlinedAt: !6324)
!6554 = !DILocation(line: 553, column: 33, scope: !6321, inlinedAt: !6324)
!6555 = !DILocation(line: 325, column: 6, scope: !6556, inlinedAt: !6336)
!6556 = distinct !DILexicalBlock(scope: !6332, file: !64, line: 325, column: 6)
!6557 = !DILocation(line: 325, column: 6, scope: !6332, inlinedAt: !6336)
!6558 = !DILocation(line: 326, column: 3, scope: !6556, inlinedAt: !6336)
!6559 = !DILocation(line: 332, column: 9, scope: !6332, inlinedAt: !6336)
!6560 = !DILocation(line: 332, column: 15, scope: !6332, inlinedAt: !6336)
!6561 = !DILocation(line: 332, column: 2, scope: !6332, inlinedAt: !6336)
!6562 = !DILocation(line: 336, column: 1, scope: !6332, inlinedAt: !6336)
!6563 = !DILocation(line: 553, column: 5, scope: !6321, inlinedAt: !6324)
!6564 = !DILocation(line: 553, column: 41, scope: !6321, inlinedAt: !6324)
!6565 = !DILocation(line: 554, column: 5, scope: !6321, inlinedAt: !6324)
!6566 = !DILocation(line: 554, column: 12, scope: !6321, inlinedAt: !6324)
!6567 = !DILocation(line: 448, column: 31, scope: !6316, inlinedAt: !6320)
!6568 = !DILocation(line: 448, column: 34, scope: !6316, inlinedAt: !6320)
!6569 = !DILocation(line: 448, column: 14, scope: !6316, inlinedAt: !6320)
!6570 = !DILocation(line: 450, column: 22, scope: !6316, inlinedAt: !6320)
!6571 = !DILocation(line: 450, column: 25, scope: !6316, inlinedAt: !6320)
!6572 = !DILocation(line: 450, column: 30, scope: !6316, inlinedAt: !6320)
!6573 = !DILocation(line: 450, column: 36, scope: !6316, inlinedAt: !6320)
!6574 = !DILocation(line: 450, column: 8, scope: !6316, inlinedAt: !6320)
!6575 = !DILocation(line: 450, column: 6, scope: !6316, inlinedAt: !6320)
!6576 = !DILocation(line: 451, column: 9, scope: !6316, inlinedAt: !6320)
!6577 = !DILocation(line: 552, column: 3, scope: !6321, inlinedAt: !6324)
!6578 = !DILocation(line: 557, column: 19, scope: !6323, inlinedAt: !6324)
!6579 = !DILocation(line: 557, column: 25, scope: !6323, inlinedAt: !6324)
!6580 = !DILocation(line: 557, column: 9, scope: !6323, inlinedAt: !6324)
!6581 = !DILocation(line: 557, column: 2, scope: !6323, inlinedAt: !6324)
!6582 = !DILocation(line: 558, column: 1, scope: !6323, inlinedAt: !6324)
!6583 = !DILocation(line: 664, column: 2, scope: !6312)
!6584 = distinct !DISubprogram(name: "list_add", scope: !5752, file: !5752, line: 84, type: !6585, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6585 = !DISubroutineType(types: !6586)
!6586 = !{null, !113, !113}
!6587 = !DILocalVariable(name: "new", arg: 1, scope: !6584, file: !5752, line: 84, type: !113)
!6588 = !DILocation(line: 84, column: 47, scope: !6584)
!6589 = !DILocalVariable(name: "head", arg: 2, scope: !6584, file: !5752, line: 84, type: !113)
!6590 = !DILocation(line: 84, column: 70, scope: !6584)
!6591 = !DILocation(line: 86, column: 13, scope: !6584)
!6592 = !DILocation(line: 86, column: 18, scope: !6584)
!6593 = !DILocation(line: 86, column: 24, scope: !6584)
!6594 = !DILocation(line: 86, column: 30, scope: !6584)
!6595 = !DILocation(line: 86, column: 2, scope: !6584)
!6596 = !DILocation(line: 87, column: 1, scope: !6584)
!6597 = distinct !DISubprogram(name: "clk_notifier_unregister", scope: !3, file: !3, line: 4301, type: !6233, scopeLine: 4302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6598 = !DILocalVariable(name: "clk", arg: 1, scope: !6597, file: !3, line: 4301, type: !95)
!6599 = !DILocation(line: 4301, column: 41, scope: !6597)
!6600 = !DILocalVariable(name: "nb", arg: 2, scope: !6597, file: !3, line: 4301, type: !2239)
!6601 = !DILocation(line: 4301, column: 69, scope: !6597)
!6602 = !DILocalVariable(name: "cn", scope: !6597, file: !3, line: 4303, type: !2214)
!6603 = !DILocation(line: 4303, column: 23, scope: !6597)
!6604 = !DILocalVariable(name: "ret", scope: !6597, file: !3, line: 4304, type: !89)
!6605 = !DILocation(line: 4304, column: 6, scope: !6597)
!6606 = !DILocation(line: 4306, column: 7, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 4306, column: 6)
!6608 = !DILocation(line: 4306, column: 11, scope: !6607)
!6609 = !DILocation(line: 4306, column: 15, scope: !6607)
!6610 = !DILocation(line: 4306, column: 6, scope: !6597)
!6611 = !DILocation(line: 4307, column: 3, scope: !6607)
!6612 = !DILocation(line: 4309, column: 2, scope: !6597)
!6613 = !DILocalVariable(name: "__mptr", scope: !6614, file: !3, line: 4311, type: !71)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 4311, column: 2)
!6615 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 4311, column: 2)
!6616 = !DILocation(line: 4311, column: 2, scope: !6614)
!6617 = !DILocation(line: 4311, column: 2, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 4311, column: 2)
!6619 = !DILocation(line: 4311, column: 2, scope: !6615)
!6620 = !DILocation(line: 4311, column: 2, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 4311, column: 2)
!6622 = !DILocation(line: 4312, column: 7, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 4312, column: 7)
!6624 = !DILocation(line: 4312, column: 11, scope: !6623)
!6625 = !DILocation(line: 4312, column: 18, scope: !6623)
!6626 = !DILocation(line: 4312, column: 15, scope: !6623)
!6627 = !DILocation(line: 4312, column: 7, scope: !6621)
!6628 = !DILocation(line: 4313, column: 4, scope: !6623)
!6629 = !DILocalVariable(name: "__mptr", scope: !6630, file: !3, line: 4311, type: !71)
!6630 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 4311, column: 2)
!6631 = !DILocation(line: 4311, column: 2, scope: !6630)
!6632 = !DILocation(line: 4311, column: 2, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 4311, column: 2)
!6634 = distinct !{!6634, !6619, !6635}
!6635 = !DILocation(line: 4313, column: 4, scope: !6615)
!6636 = !DILocation(line: 4315, column: 6, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 4315, column: 6)
!6638 = !DILocation(line: 4315, column: 10, scope: !6637)
!6639 = !DILocation(line: 4315, column: 17, scope: !6637)
!6640 = !DILocation(line: 4315, column: 14, scope: !6637)
!6641 = !DILocation(line: 4315, column: 6, scope: !6597)
!6642 = !DILocation(line: 4316, column: 41, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 4315, column: 22)
!6644 = !DILocation(line: 4316, column: 45, scope: !6643)
!6645 = !DILocation(line: 4316, column: 60, scope: !6643)
!6646 = !DILocation(line: 4316, column: 9, scope: !6643)
!6647 = !DILocation(line: 4316, column: 7, scope: !6643)
!6648 = !DILocation(line: 4318, column: 3, scope: !6643)
!6649 = !DILocation(line: 4318, column: 8, scope: !6643)
!6650 = !DILocation(line: 4318, column: 14, scope: !6643)
!6651 = !DILocation(line: 4318, column: 28, scope: !6643)
!6652 = !DILocation(line: 4321, column: 8, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 4321, column: 7)
!6654 = !DILocation(line: 4321, column: 12, scope: !6653)
!6655 = !DILocation(line: 4321, column: 26, scope: !6653)
!6656 = !DILocation(line: 4321, column: 7, scope: !6643)
!6657 = !DILocation(line: 4322, column: 4, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 4321, column: 32)
!6659 = !DILocation(line: 4323, column: 14, scope: !6658)
!6660 = !DILocation(line: 4323, column: 18, scope: !6658)
!6661 = !DILocation(line: 4323, column: 4, scope: !6658)
!6662 = !DILocation(line: 4324, column: 10, scope: !6658)
!6663 = !DILocation(line: 4324, column: 4, scope: !6658)
!6664 = !DILocation(line: 4325, column: 3, scope: !6658)
!6665 = !DILocation(line: 4327, column: 2, scope: !6643)
!6666 = !DILocation(line: 4328, column: 7, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 4327, column: 9)
!6668 = !DILocation(line: 4331, column: 2, scope: !6597)
!6669 = !DILocation(line: 4333, column: 9, scope: !6597)
!6670 = !DILocation(line: 4333, column: 2, scope: !6597)
!6671 = !DILocation(line: 4334, column: 1, scope: !6597)
!6672 = distinct !DISubprogram(name: "list_del", scope: !5752, file: !5752, line: 144, type: !6673, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6673 = !DISubroutineType(types: !6674)
!6674 = !{null, !113}
!6675 = !DILocalVariable(name: "entry", arg: 1, scope: !6672, file: !5752, line: 144, type: !113)
!6676 = !DILocation(line: 144, column: 47, scope: !6672)
!6677 = !DILocation(line: 146, column: 19, scope: !6672)
!6678 = !DILocation(line: 146, column: 2, scope: !6672)
!6679 = !DILocation(line: 147, column: 2, scope: !6672)
!6680 = !DILocation(line: 147, column: 9, scope: !6672)
!6681 = !DILocation(line: 147, column: 14, scope: !6672)
!6682 = !DILocation(line: 148, column: 2, scope: !6672)
!6683 = !DILocation(line: 148, column: 9, scope: !6672)
!6684 = !DILocation(line: 148, column: 14, scope: !6672)
!6685 = !DILocation(line: 149, column: 1, scope: !6672)
!6686 = distinct !DISubprogram(name: "of_clk_src_simple_get", scope: !3, file: !3, line: 4371, type: !2257, scopeLine: 4373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6687 = !DILocalVariable(name: "clkspec", arg: 1, scope: !6686, file: !3, line: 4371, type: !2259)
!6688 = !DILocation(line: 4371, column: 59, scope: !6686)
!6689 = !DILocalVariable(name: "data", arg: 2, scope: !6686, file: !3, line: 4372, type: !71)
!6690 = !DILocation(line: 4372, column: 16, scope: !6686)
!6691 = !DILocation(line: 4374, column: 9, scope: !6686)
!6692 = !DILocation(line: 4374, column: 2, scope: !6686)
!6693 = distinct !DISubprogram(name: "of_clk_hw_simple_get", scope: !3, file: !3, line: 4378, type: !2269, scopeLine: 4379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6694 = !DILocalVariable(name: "clkspec", arg: 1, scope: !6693, file: !3, line: 4378, type: !2259)
!6695 = !DILocation(line: 4378, column: 61, scope: !6693)
!6696 = !DILocalVariable(name: "data", arg: 2, scope: !6693, file: !3, line: 4378, type: !71)
!6697 = !DILocation(line: 4378, column: 76, scope: !6693)
!6698 = !DILocation(line: 4380, column: 9, scope: !6693)
!6699 = !DILocation(line: 4380, column: 2, scope: !6693)
!6700 = distinct !DISubprogram(name: "of_clk_src_onecell_get", scope: !3, file: !3, line: 4384, type: !2257, scopeLine: 4385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6701 = !DILocalVariable(name: "clkspec", arg: 1, scope: !6700, file: !3, line: 4384, type: !2259)
!6702 = !DILocation(line: 4384, column: 60, scope: !6700)
!6703 = !DILocalVariable(name: "data", arg: 2, scope: !6700, file: !3, line: 4384, type: !71)
!6704 = !DILocation(line: 4384, column: 75, scope: !6700)
!6705 = !DILocalVariable(name: "clk_data", scope: !6700, file: !3, line: 4386, type: !6706)
!6706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6707, size: 64)
!6707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_onecell_data", file: !83, line: 1151, size: 128, elements: !6708)
!6708 = !{!6709, !6710}
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "clks", scope: !6707, file: !83, line: 1152, baseType: !2294, size: 64)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "clk_num", scope: !6707, file: !83, line: 1153, baseType: !7, size: 32, offset: 64)
!6711 = !DILocation(line: 4386, column: 27, scope: !6700)
!6712 = !DILocation(line: 4386, column: 38, scope: !6700)
!6713 = !DILocalVariable(name: "idx", scope: !6700, file: !3, line: 4387, type: !7)
!6714 = !DILocation(line: 4387, column: 15, scope: !6700)
!6715 = !DILocation(line: 4387, column: 21, scope: !6700)
!6716 = !DILocation(line: 4387, column: 30, scope: !6700)
!6717 = !DILocation(line: 4389, column: 6, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 4389, column: 6)
!6719 = !DILocation(line: 4389, column: 13, scope: !6718)
!6720 = !DILocation(line: 4389, column: 23, scope: !6718)
!6721 = !DILocation(line: 4389, column: 10, scope: !6718)
!6722 = !DILocation(line: 4389, column: 6, scope: !6700)
!6723 = !DILocation(line: 4390, column: 3, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 4389, column: 32)
!6725 = !DILocation(line: 4391, column: 10, scope: !6724)
!6726 = !DILocation(line: 4391, column: 3, scope: !6724)
!6727 = !DILocation(line: 4394, column: 9, scope: !6700)
!6728 = !DILocation(line: 4394, column: 19, scope: !6700)
!6729 = !DILocation(line: 4394, column: 24, scope: !6700)
!6730 = !DILocation(line: 4394, column: 2, scope: !6700)
!6731 = !DILocation(line: 4395, column: 1, scope: !6700)
!6732 = distinct !DISubprogram(name: "of_clk_hw_onecell_get", scope: !3, file: !3, line: 4399, type: !2269, scopeLine: 4400, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6733 = !DILocalVariable(name: "clkspec", arg: 1, scope: !6732, file: !3, line: 4399, type: !2259)
!6734 = !DILocation(line: 4399, column: 47, scope: !6732)
!6735 = !DILocalVariable(name: "data", arg: 2, scope: !6732, file: !3, line: 4399, type: !71)
!6736 = !DILocation(line: 4399, column: 62, scope: !6732)
!6737 = !DILocalVariable(name: "hw_data", scope: !6732, file: !3, line: 4401, type: !6738)
!6738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6739, size: 64)
!6739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_hw_onecell_data", file: !83, line: 1156, size: 64, elements: !6740)
!6740 = !{!6741, !6742}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6739, file: !83, line: 1157, baseType: !7, size: 32)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "hws", scope: !6739, file: !83, line: 1158, baseType: !6743, offset: 64)
!6743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, elements: !1347)
!6744 = !DILocation(line: 4401, column: 30, scope: !6732)
!6745 = !DILocation(line: 4401, column: 40, scope: !6732)
!6746 = !DILocalVariable(name: "idx", scope: !6732, file: !3, line: 4402, type: !7)
!6747 = !DILocation(line: 4402, column: 15, scope: !6732)
!6748 = !DILocation(line: 4402, column: 21, scope: !6732)
!6749 = !DILocation(line: 4402, column: 30, scope: !6732)
!6750 = !DILocation(line: 4404, column: 6, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6732, file: !3, line: 4404, column: 6)
!6752 = !DILocation(line: 4404, column: 13, scope: !6751)
!6753 = !DILocation(line: 4404, column: 22, scope: !6751)
!6754 = !DILocation(line: 4404, column: 10, scope: !6751)
!6755 = !DILocation(line: 4404, column: 6, scope: !6732)
!6756 = !DILocation(line: 4405, column: 3, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 4404, column: 27)
!6758 = !DILocation(line: 4406, column: 10, scope: !6757)
!6759 = !DILocation(line: 4406, column: 3, scope: !6757)
!6760 = !DILocation(line: 4409, column: 9, scope: !6732)
!6761 = !DILocation(line: 4409, column: 18, scope: !6732)
!6762 = !DILocation(line: 4409, column: 22, scope: !6732)
!6763 = !DILocation(line: 4409, column: 2, scope: !6732)
!6764 = !DILocation(line: 4410, column: 1, scope: !6732)
!6765 = distinct !DISubprogram(name: "of_clk_add_provider", scope: !3, file: !3, line: 4421, type: !6766, scopeLine: 4425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6766 = !DISubroutineType(types: !6767)
!6767 = !{!89, !1908, !2256, !71}
!6768 = !DILocalVariable(name: "np", arg: 1, scope: !6765, file: !3, line: 4421, type: !1908)
!6769 = !DILocation(line: 4421, column: 45, scope: !6765)
!6770 = !DILocalVariable(name: "clk_src_get", arg: 2, scope: !6765, file: !3, line: 4422, type: !2256)
!6771 = !DILocation(line: 4422, column: 18, scope: !6765)
!6772 = !DILocalVariable(name: "data", arg: 3, scope: !6765, file: !3, line: 4424, type: !71)
!6773 = !DILocation(line: 4424, column: 10, scope: !6765)
!6774 = !DILocalVariable(name: "cp", scope: !6765, file: !3, line: 4426, type: !2250)
!6775 = !DILocation(line: 4426, column: 26, scope: !6765)
!6776 = !DILocalVariable(name: "ret", scope: !6765, file: !3, line: 4427, type: !89)
!6777 = !DILocation(line: 4427, column: 6, scope: !6765)
!6778 = !DILocation(line: 4429, column: 7, scope: !6765)
!6779 = !DILocation(line: 4429, column: 5, scope: !6765)
!6780 = !DILocation(line: 4430, column: 7, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 4430, column: 6)
!6782 = !DILocation(line: 4430, column: 6, scope: !6765)
!6783 = !DILocation(line: 4431, column: 3, scope: !6781)
!6784 = !DILocation(line: 4433, column: 25, scope: !6765)
!6785 = !DILocation(line: 4433, column: 13, scope: !6765)
!6786 = !DILocation(line: 4433, column: 2, scope: !6765)
!6787 = !DILocation(line: 4433, column: 6, scope: !6765)
!6788 = !DILocation(line: 4433, column: 11, scope: !6765)
!6789 = !DILocation(line: 4434, column: 13, scope: !6765)
!6790 = !DILocation(line: 4434, column: 2, scope: !6765)
!6791 = !DILocation(line: 4434, column: 6, scope: !6765)
!6792 = !DILocation(line: 4434, column: 11, scope: !6765)
!6793 = !DILocation(line: 4435, column: 12, scope: !6765)
!6794 = !DILocation(line: 4435, column: 2, scope: !6765)
!6795 = !DILocation(line: 4435, column: 6, scope: !6765)
!6796 = !DILocation(line: 4435, column: 10, scope: !6765)
!6797 = !DILocation(line: 4437, column: 2, scope: !6765)
!6798 = !DILocation(line: 4438, column: 12, scope: !6765)
!6799 = !DILocation(line: 4438, column: 16, scope: !6765)
!6800 = !DILocation(line: 4438, column: 2, scope: !6765)
!6801 = !DILocation(line: 4439, column: 2, scope: !6765)
!6802 = !DILocation(line: 4440, column: 2, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 4440, column: 2)
!6804 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 4440, column: 2)
!6805 = !DILocation(line: 4440, column: 2, scope: !6804)
!6806 = !DILocation(line: 4442, column: 2, scope: !6765)
!6807 = !DILocation(line: 4444, column: 28, scope: !6765)
!6808 = !DILocation(line: 4444, column: 8, scope: !6765)
!6809 = !DILocation(line: 4444, column: 6, scope: !6765)
!6810 = !DILocation(line: 4445, column: 6, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 4445, column: 6)
!6812 = !DILocation(line: 4445, column: 10, scope: !6811)
!6813 = !DILocation(line: 4445, column: 6, scope: !6765)
!6814 = !DILocation(line: 4446, column: 23, scope: !6811)
!6815 = !DILocation(line: 4446, column: 3, scope: !6811)
!6816 = !DILocation(line: 4448, column: 9, scope: !6765)
!6817 = !DILocation(line: 4448, column: 2, scope: !6765)
!6818 = !DILocation(line: 4449, column: 1, scope: !6765)
!6819 = distinct !DISubprogram(name: "of_node_get", scope: !1910, file: !1910, line: 125, type: !6820, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6820 = !DISubroutineType(types: !6821)
!6821 = !{!1908, !1908}
!6822 = !DILocalVariable(name: "node", arg: 1, scope: !6819, file: !1910, line: 125, type: !1908)
!6823 = !DILocation(line: 125, column: 67, scope: !6819)
!6824 = !DILocation(line: 127, column: 9, scope: !6819)
!6825 = !DILocation(line: 127, column: 2, scope: !6819)
!6826 = distinct !DISubprogram(name: "clk_core_reparent_orphans", scope: !3, file: !3, line: 4338, type: !3022, scopeLine: 4339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6827 = !DILocation(line: 4340, column: 2, scope: !6826)
!6828 = !DILocation(line: 4341, column: 2, scope: !6826)
!6829 = !DILocation(line: 4342, column: 2, scope: !6826)
!6830 = !DILocation(line: 4343, column: 1, scope: !6826)
!6831 = distinct !DISubprogram(name: "of_clk_del_provider", scope: !3, file: !3, line: 4557, type: !2277, scopeLine: 4558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6832 = !DILocalVariable(name: "np", arg: 1, scope: !6831, file: !3, line: 4557, type: !1908)
!6833 = !DILocation(line: 4557, column: 46, scope: !6831)
!6834 = !DILocalVariable(name: "cp", scope: !6831, file: !3, line: 4559, type: !2250)
!6835 = !DILocation(line: 4559, column: 26, scope: !6831)
!6836 = !DILocation(line: 4561, column: 2, scope: !6831)
!6837 = !DILocalVariable(name: "__mptr", scope: !6838, file: !3, line: 4562, type: !71)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 4562, column: 2)
!6839 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 4562, column: 2)
!6840 = !DILocation(line: 4562, column: 2, scope: !6838)
!6841 = !DILocation(line: 4562, column: 2, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 4562, column: 2)
!6843 = !DILocation(line: 4562, column: 2, scope: !6839)
!6844 = !DILocation(line: 4562, column: 2, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 4562, column: 2)
!6846 = !DILocation(line: 4563, column: 7, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 4563, column: 7)
!6848 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 4562, column: 51)
!6849 = !DILocation(line: 4563, column: 11, scope: !6847)
!6850 = !DILocation(line: 4563, column: 19, scope: !6847)
!6851 = !DILocation(line: 4563, column: 16, scope: !6847)
!6852 = !DILocation(line: 4563, column: 7, scope: !6848)
!6853 = !DILocation(line: 4564, column: 14, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 4563, column: 23)
!6855 = !DILocation(line: 4564, column: 18, scope: !6854)
!6856 = !DILocation(line: 4564, column: 4, scope: !6854)
!6857 = !DILocation(line: 4565, column: 16, scope: !6854)
!6858 = !DILocation(line: 4565, column: 20, scope: !6854)
!6859 = !DILocation(line: 4565, column: 4, scope: !6854)
!6860 = !DILocation(line: 4566, column: 10, scope: !6854)
!6861 = !DILocation(line: 4566, column: 4, scope: !6854)
!6862 = !DILocation(line: 4567, column: 4, scope: !6854)
!6863 = !DILocation(line: 4569, column: 2, scope: !6848)
!6864 = !DILocalVariable(name: "__mptr", scope: !6865, file: !3, line: 4562, type: !71)
!6865 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 4562, column: 2)
!6866 = !DILocation(line: 4562, column: 2, scope: !6865)
!6867 = !DILocation(line: 4562, column: 2, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 4562, column: 2)
!6869 = distinct !{!6869, !6843, !6870}
!6870 = !DILocation(line: 4569, column: 2, scope: !6839)
!6871 = !DILocation(line: 4570, column: 2, scope: !6831)
!6872 = !DILocation(line: 4571, column: 1, scope: !6831)
!6873 = distinct !DISubprogram(name: "of_clk_add_hw_provider", scope: !3, file: !3, line: 4458, type: !6874, scopeLine: 4462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6874 = !DISubroutineType(types: !6875)
!6875 = !{!89, !1908, !2268, !71}
!6876 = !DILocalVariable(name: "np", arg: 1, scope: !6873, file: !3, line: 4458, type: !1908)
!6877 = !DILocation(line: 4458, column: 48, scope: !6873)
!6878 = !DILocalVariable(name: "get", arg: 2, scope: !6873, file: !3, line: 4459, type: !2268)
!6879 = !DILocation(line: 4459, column: 24, scope: !6873)
!6880 = !DILocalVariable(name: "data", arg: 3, scope: !6873, file: !3, line: 4461, type: !71)
!6881 = !DILocation(line: 4461, column: 13, scope: !6873)
!6882 = !DILocalVariable(name: "cp", scope: !6873, file: !3, line: 4463, type: !2250)
!6883 = !DILocation(line: 4463, column: 26, scope: !6873)
!6884 = !DILocalVariable(name: "ret", scope: !6873, file: !3, line: 4464, type: !89)
!6885 = !DILocation(line: 4464, column: 6, scope: !6873)
!6886 = !DILocation(line: 4466, column: 7, scope: !6873)
!6887 = !DILocation(line: 4466, column: 5, scope: !6873)
!6888 = !DILocation(line: 4467, column: 7, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 4467, column: 6)
!6890 = !DILocation(line: 4467, column: 6, scope: !6873)
!6891 = !DILocation(line: 4468, column: 3, scope: !6889)
!6892 = !DILocation(line: 4470, column: 25, scope: !6873)
!6893 = !DILocation(line: 4470, column: 13, scope: !6873)
!6894 = !DILocation(line: 4470, column: 2, scope: !6873)
!6895 = !DILocation(line: 4470, column: 6, scope: !6873)
!6896 = !DILocation(line: 4470, column: 11, scope: !6873)
!6897 = !DILocation(line: 4471, column: 13, scope: !6873)
!6898 = !DILocation(line: 4471, column: 2, scope: !6873)
!6899 = !DILocation(line: 4471, column: 6, scope: !6873)
!6900 = !DILocation(line: 4471, column: 11, scope: !6873)
!6901 = !DILocation(line: 4472, column: 15, scope: !6873)
!6902 = !DILocation(line: 4472, column: 2, scope: !6873)
!6903 = !DILocation(line: 4472, column: 6, scope: !6873)
!6904 = !DILocation(line: 4472, column: 13, scope: !6873)
!6905 = !DILocation(line: 4474, column: 2, scope: !6873)
!6906 = !DILocation(line: 4475, column: 12, scope: !6873)
!6907 = !DILocation(line: 4475, column: 16, scope: !6873)
!6908 = !DILocation(line: 4475, column: 2, scope: !6873)
!6909 = !DILocation(line: 4476, column: 2, scope: !6873)
!6910 = !DILocation(line: 4477, column: 2, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 4477, column: 2)
!6912 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 4477, column: 2)
!6913 = !DILocation(line: 4477, column: 2, scope: !6912)
!6914 = !DILocation(line: 4479, column: 2, scope: !6873)
!6915 = !DILocation(line: 4481, column: 28, scope: !6873)
!6916 = !DILocation(line: 4481, column: 8, scope: !6873)
!6917 = !DILocation(line: 4481, column: 6, scope: !6873)
!6918 = !DILocation(line: 4482, column: 6, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 4482, column: 6)
!6920 = !DILocation(line: 4482, column: 10, scope: !6919)
!6921 = !DILocation(line: 4482, column: 6, scope: !6873)
!6922 = !DILocation(line: 4483, column: 23, scope: !6919)
!6923 = !DILocation(line: 4483, column: 3, scope: !6919)
!6924 = !DILocation(line: 4485, column: 9, scope: !6873)
!6925 = !DILocation(line: 4485, column: 2, scope: !6873)
!6926 = !DILocation(line: 4486, column: 1, scope: !6873)
!6927 = distinct !DISubprogram(name: "devm_of_clk_add_hw_provider", scope: !3, file: !3, line: 4527, type: !6928, scopeLine: 4531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6928 = !DISubroutineType(types: !6929)
!6929 = !{!89, !100, !2268, !71}
!6930 = !DILocalVariable(name: "dev", arg: 1, scope: !6927, file: !3, line: 4527, type: !100)
!6931 = !DILocation(line: 4527, column: 48, scope: !6927)
!6932 = !DILocalVariable(name: "get", arg: 2, scope: !6927, file: !3, line: 4528, type: !2268)
!6933 = !DILocation(line: 4528, column: 21, scope: !6927)
!6934 = !DILocalVariable(name: "data", arg: 3, scope: !6927, file: !3, line: 4530, type: !71)
!6935 = !DILocation(line: 4530, column: 10, scope: !6927)
!6936 = !DILocalVariable(name: "ptr", scope: !6927, file: !3, line: 4532, type: !2298)
!6937 = !DILocation(line: 4532, column: 23, scope: !6927)
!6938 = !DILocalVariable(name: "np", scope: !6927, file: !3, line: 4532, type: !1908)
!6939 = !DILocation(line: 4532, column: 29, scope: !6927)
!6940 = !DILocalVariable(name: "ret", scope: !6927, file: !3, line: 4533, type: !89)
!6941 = !DILocation(line: 4533, column: 6, scope: !6927)
!6942 = !DILocation(line: 4535, column: 8, scope: !6927)
!6943 = !DILocation(line: 4535, column: 6, scope: !6927)
!6944 = !DILocation(line: 4537, column: 7, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 4537, column: 6)
!6946 = !DILocation(line: 4537, column: 6, scope: !6927)
!6947 = !DILocation(line: 4538, column: 3, scope: !6945)
!6948 = !DILocation(line: 4540, column: 29, scope: !6927)
!6949 = !DILocation(line: 4540, column: 7, scope: !6927)
!6950 = !DILocation(line: 4540, column: 5, scope: !6927)
!6951 = !DILocation(line: 4541, column: 31, scope: !6927)
!6952 = !DILocation(line: 4541, column: 35, scope: !6927)
!6953 = !DILocation(line: 4541, column: 40, scope: !6927)
!6954 = !DILocation(line: 4541, column: 8, scope: !6927)
!6955 = !DILocation(line: 4541, column: 6, scope: !6927)
!6956 = !DILocation(line: 4542, column: 7, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 4542, column: 6)
!6958 = !DILocation(line: 4542, column: 6, scope: !6927)
!6959 = !DILocation(line: 4543, column: 10, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 4542, column: 12)
!6961 = !DILocation(line: 4543, column: 4, scope: !6960)
!6962 = !DILocation(line: 4543, column: 8, scope: !6960)
!6963 = !DILocation(line: 4544, column: 14, scope: !6960)
!6964 = !DILocation(line: 4544, column: 19, scope: !6960)
!6965 = !DILocation(line: 4544, column: 3, scope: !6960)
!6966 = !DILocation(line: 4545, column: 2, scope: !6960)
!6967 = !DILocation(line: 4546, column: 15, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 4545, column: 9)
!6969 = !DILocation(line: 4546, column: 3, scope: !6968)
!6970 = !DILocation(line: 4549, column: 9, scope: !6927)
!6971 = !DILocation(line: 4549, column: 2, scope: !6927)
!6972 = !DILocation(line: 4550, column: 1, scope: !6927)
!6973 = distinct !DISubprogram(name: "devm_of_clk_release_provider", scope: !3, file: !3, line: 4489, type: !5919, scopeLine: 4490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6974 = !DILocalVariable(name: "dev", arg: 1, scope: !6973, file: !3, line: 4489, type: !100)
!6975 = !DILocation(line: 4489, column: 57, scope: !6973)
!6976 = !DILocalVariable(name: "res", arg: 2, scope: !6973, file: !3, line: 4489, type: !71)
!6977 = !DILocation(line: 4489, column: 68, scope: !6973)
!6978 = !DILocation(line: 4491, column: 46, scope: !6973)
!6979 = !DILocation(line: 4491, column: 23, scope: !6973)
!6980 = !DILocation(line: 4491, column: 22, scope: !6973)
!6981 = !DILocation(line: 4491, column: 2, scope: !6973)
!6982 = !DILocation(line: 4492, column: 1, scope: !6973)
!6983 = distinct !DISubprogram(name: "get_clk_provider_node", scope: !3, file: !3, line: 4499, type: !5371, scopeLine: 4500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!6984 = !DILocalVariable(name: "dev", arg: 1, scope: !6983, file: !3, line: 4499, type: !100)
!6985 = !DILocation(line: 4499, column: 65, scope: !6983)
!6986 = !DILocalVariable(name: "np", scope: !6983, file: !3, line: 4501, type: !1908)
!6987 = !DILocation(line: 4501, column: 22, scope: !6983)
!6988 = !DILocalVariable(name: "parent_np", scope: !6983, file: !3, line: 4501, type: !1908)
!6989 = !DILocation(line: 4501, column: 27, scope: !6983)
!6990 = !DILocation(line: 4503, column: 7, scope: !6983)
!6991 = !DILocation(line: 4503, column: 12, scope: !6983)
!6992 = !DILocation(line: 4503, column: 5, scope: !6983)
!6993 = !DILocation(line: 4504, column: 14, scope: !6983)
!6994 = !DILocation(line: 4504, column: 19, scope: !6983)
!6995 = !DILocation(line: 4504, column: 28, scope: !6983)
!6996 = !DILocation(line: 4504, column: 33, scope: !6983)
!6997 = !DILocation(line: 4504, column: 41, scope: !6983)
!6998 = !DILocation(line: 4504, column: 12, scope: !6983)
!6999 = !DILocation(line: 4506, column: 24, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 4506, column: 6)
!7001 = !DILocation(line: 4506, column: 7, scope: !7000)
!7002 = !DILocation(line: 4506, column: 6, scope: !6983)
!7003 = !DILocation(line: 4507, column: 24, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7000, file: !3, line: 4507, column: 7)
!7005 = !DILocation(line: 4507, column: 7, scope: !7004)
!7006 = !DILocation(line: 4507, column: 7, scope: !7000)
!7007 = !DILocation(line: 4508, column: 9, scope: !7004)
!7008 = !DILocation(line: 4508, column: 7, scope: !7004)
!7009 = !DILocation(line: 4508, column: 4, scope: !7004)
!7010 = !DILocation(line: 4507, column: 55, scope: !7004)
!7011 = !DILocation(line: 4510, column: 9, scope: !6983)
!7012 = !DILocation(line: 4510, column: 2, scope: !6983)
!7013 = distinct !DISubprogram(name: "of_node_put", scope: !1910, file: !1910, line: 129, type: !2277, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7014 = !DILocalVariable(name: "node", arg: 1, scope: !7013, file: !1910, line: 129, type: !1908)
!7015 = !DILocation(line: 129, column: 52, scope: !7013)
!7016 = !DILocation(line: 129, column: 60, scope: !7013)
!7017 = distinct !DISubprogram(name: "devm_of_clk_del_provider", scope: !3, file: !3, line: 4588, type: !1620, scopeLine: 4589, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7018 = !DILocalVariable(name: "dev", arg: 1, scope: !7017, file: !3, line: 4588, type: !100)
!7019 = !DILocation(line: 4588, column: 46, scope: !7017)
!7020 = !DILocalVariable(name: "ret", scope: !7017, file: !3, line: 4590, type: !89)
!7021 = !DILocation(line: 4590, column: 6, scope: !7017)
!7022 = !DILocalVariable(name: "np", scope: !7017, file: !3, line: 4591, type: !1908)
!7023 = !DILocation(line: 4591, column: 22, scope: !7017)
!7024 = !DILocation(line: 4591, column: 49, scope: !7017)
!7025 = !DILocation(line: 4591, column: 27, scope: !7017)
!7026 = !DILocation(line: 4593, column: 23, scope: !7017)
!7027 = !DILocation(line: 4594, column: 34, scope: !7017)
!7028 = !DILocation(line: 4593, column: 8, scope: !7017)
!7029 = !DILocation(line: 4593, column: 6, scope: !7017)
!7030 = !DILocalVariable(name: "__ret_warn_on", scope: !7031, file: !3, line: 4596, type: !89)
!7031 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 4596, column: 2)
!7032 = !DILocation(line: 4596, column: 2, scope: !7031)
!7033 = !DILocation(line: 4596, column: 2, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 4596, column: 2)
!7035 = !DILocation(line: 4596, column: 2, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 4596, column: 2)
!7037 = !DILocation(line: 4596, column: 2, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 4596, column: 2)
!7039 = !DILocation(line: 4596, column: 2, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 4596, column: 2)
!7041 = !{i32 -2142842760, i32 -2142842731, i32 -2142842685, i32 -2142842627, i32 -2142842573, i32 -2142842519, i32 -2142842464, i32 -2142842433}
!7042 = !DILocation(line: 4596, column: 2, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 4596, column: 2)
!7044 = !{i32 -2142842033, i32 -2142842026, i32 -2142841974, i32 -2142841943, i32 -2142841913}
!7045 = !DILocation(line: 4596, column: 2, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 4596, column: 2)
!7047 = !DILocation(line: 4597, column: 1, scope: !7017)
!7048 = distinct !DISubprogram(name: "devm_clk_provider_match", scope: !3, file: !3, line: 4574, type: !6014, scopeLine: 4575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7049 = !DILocalVariable(name: "dev", arg: 1, scope: !7048, file: !3, line: 4574, type: !100)
!7050 = !DILocation(line: 4574, column: 51, scope: !7048)
!7051 = !DILocalVariable(name: "res", arg: 2, scope: !7048, file: !3, line: 4574, type: !71)
!7052 = !DILocation(line: 4574, column: 62, scope: !7048)
!7053 = !DILocalVariable(name: "data", arg: 3, scope: !7048, file: !3, line: 4574, type: !71)
!7054 = !DILocation(line: 4574, column: 73, scope: !7048)
!7055 = !DILocalVariable(name: "np", scope: !7048, file: !3, line: 4576, type: !2298)
!7056 = !DILocation(line: 4576, column: 23, scope: !7048)
!7057 = !DILocation(line: 4576, column: 28, scope: !7048)
!7058 = !DILocalVariable(name: "__ret_warn_on", scope: !7059, file: !3, line: 4578, type: !89)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 4578, column: 6)
!7060 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 4578, column: 6)
!7061 = !DILocation(line: 4578, column: 6, scope: !7059)
!7062 = !DILocation(line: 4578, column: 6, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 4578, column: 6)
!7064 = !DILocation(line: 4578, column: 6, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 4578, column: 6)
!7066 = !DILocation(line: 4578, column: 6, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 4578, column: 6)
!7068 = !DILocation(line: 4578, column: 6, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 4578, column: 6)
!7070 = !{i32 -2142844182, i32 -2142844153, i32 -2142844107, i32 -2142844049, i32 -2142843995, i32 -2142843941, i32 -2142843886, i32 -2142843855}
!7071 = !DILocation(line: 4578, column: 6, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 4578, column: 6)
!7073 = !{i32 -2142843455, i32 -2142843448, i32 -2142843396, i32 -2142843365, i32 -2142843335}
!7074 = !DILocation(line: 4578, column: 6, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 4578, column: 6)
!7076 = !DILocation(line: 4578, column: 6, scope: !7060)
!7077 = !DILocation(line: 4578, column: 6, scope: !7048)
!7078 = !DILocation(line: 4579, column: 3, scope: !7060)
!7079 = !DILocation(line: 4581, column: 10, scope: !7048)
!7080 = !DILocation(line: 4581, column: 9, scope: !7048)
!7081 = !DILocation(line: 4581, column: 16, scope: !7048)
!7082 = !DILocation(line: 4581, column: 13, scope: !7048)
!7083 = !DILocation(line: 4581, column: 2, scope: !7048)
!7084 = !DILocation(line: 4582, column: 1, scope: !7048)
!7085 = distinct !DISubprogram(name: "of_clk_get_from_provider", scope: !3, file: !3, line: 4719, type: !7086, scopeLine: 4720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7086 = !DISubroutineType(types: !7087)
!7087 = !{!95, !2259}
!7088 = !DILocalVariable(name: "clkspec", arg: 1, scope: !7085, file: !3, line: 4719, type: !2259)
!7089 = !DILocation(line: 4719, column: 62, scope: !7085)
!7090 = !DILocalVariable(name: "hw", scope: !7085, file: !3, line: 4721, type: !90)
!7091 = !DILocation(line: 4721, column: 17, scope: !7085)
!7092 = !DILocation(line: 4721, column: 49, scope: !7085)
!7093 = !DILocation(line: 4721, column: 22, scope: !7085)
!7094 = !DILocation(line: 4723, column: 33, scope: !7085)
!7095 = !DILocation(line: 4723, column: 9, scope: !7085)
!7096 = !DILocation(line: 4723, column: 2, scope: !7085)
!7097 = distinct !DISubprogram(name: "of_clk_get_hw_from_clkspec", scope: !3, file: !3, line: 4690, type: !7098, scopeLine: 4691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7098 = !DISubroutineType(types: !7099)
!7099 = !{!90, !2259}
!7100 = !DILocalVariable(name: "clkspec", arg: 1, scope: !7097, file: !3, line: 4690, type: !2259)
!7101 = !DILocation(line: 4690, column: 52, scope: !7097)
!7102 = !DILocalVariable(name: "provider", scope: !7097, file: !3, line: 4692, type: !2250)
!7103 = !DILocation(line: 4692, column: 26, scope: !7097)
!7104 = !DILocalVariable(name: "hw", scope: !7097, file: !3, line: 4693, type: !90)
!7105 = !DILocation(line: 4693, column: 17, scope: !7097)
!7106 = !DILocation(line: 4693, column: 22, scope: !7097)
!7107 = !DILocation(line: 4695, column: 7, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 4695, column: 6)
!7109 = !DILocation(line: 4695, column: 6, scope: !7097)
!7110 = !DILocation(line: 4696, column: 10, scope: !7108)
!7111 = !DILocation(line: 4696, column: 3, scope: !7108)
!7112 = !DILocation(line: 4698, column: 2, scope: !7097)
!7113 = !DILocalVariable(name: "__mptr", scope: !7114, file: !3, line: 4699, type: !71)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 4699, column: 2)
!7115 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 4699, column: 2)
!7116 = !DILocation(line: 4699, column: 2, scope: !7114)
!7117 = !DILocation(line: 4699, column: 2, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 4699, column: 2)
!7119 = !DILocation(line: 4699, column: 2, scope: !7115)
!7120 = !DILocation(line: 4699, column: 2, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 4699, column: 2)
!7122 = !DILocation(line: 4700, column: 7, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 4700, column: 7)
!7124 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 4699, column: 57)
!7125 = !DILocation(line: 4700, column: 17, scope: !7123)
!7126 = !DILocation(line: 4700, column: 25, scope: !7123)
!7127 = !DILocation(line: 4700, column: 34, scope: !7123)
!7128 = !DILocation(line: 4700, column: 22, scope: !7123)
!7129 = !DILocation(line: 4700, column: 7, scope: !7124)
!7130 = !DILocation(line: 4701, column: 39, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 4700, column: 38)
!7132 = !DILocation(line: 4701, column: 49, scope: !7131)
!7133 = !DILocation(line: 4701, column: 9, scope: !7131)
!7134 = !DILocation(line: 4701, column: 7, scope: !7131)
!7135 = !DILocation(line: 4702, column: 16, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7131, file: !3, line: 4702, column: 8)
!7137 = !DILocation(line: 4702, column: 9, scope: !7136)
!7138 = !DILocation(line: 4702, column: 8, scope: !7131)
!7139 = !DILocation(line: 4703, column: 5, scope: !7136)
!7140 = !DILocation(line: 4704, column: 3, scope: !7131)
!7141 = !DILocation(line: 4705, column: 2, scope: !7124)
!7142 = !DILocalVariable(name: "__mptr", scope: !7143, file: !3, line: 4699, type: !71)
!7143 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 4699, column: 2)
!7144 = !DILocation(line: 4699, column: 2, scope: !7143)
!7145 = !DILocation(line: 4699, column: 2, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 4699, column: 2)
!7147 = distinct !{!7147, !7119, !7148}
!7148 = !DILocation(line: 4705, column: 2, scope: !7115)
!7149 = !DILocation(line: 4706, column: 2, scope: !7097)
!7150 = !DILocation(line: 4708, column: 9, scope: !7097)
!7151 = !DILocation(line: 4708, column: 2, scope: !7097)
!7152 = !DILocation(line: 4709, column: 1, scope: !7097)
!7153 = distinct !DISubprogram(name: "of_clk_get_hw", scope: !3, file: !3, line: 4727, type: !7154, scopeLine: 4729, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7154 = !DISubroutineType(types: !7155)
!7155 = !{!90, !1908, !89, !76}
!7156 = !DILocalVariable(name: "np", arg: 1, scope: !7153, file: !3, line: 4727, type: !1908)
!7157 = !DILocation(line: 4727, column: 50, scope: !7153)
!7158 = !DILocalVariable(name: "index", arg: 2, scope: !7153, file: !3, line: 4727, type: !89)
!7159 = !DILocation(line: 4727, column: 58, scope: !7153)
!7160 = !DILocalVariable(name: "con_id", arg: 3, scope: !7153, file: !3, line: 4728, type: !76)
!7161 = !DILocation(line: 4728, column: 21, scope: !7153)
!7162 = !DILocalVariable(name: "ret", scope: !7153, file: !3, line: 4730, type: !89)
!7163 = !DILocation(line: 4730, column: 6, scope: !7153)
!7164 = !DILocalVariable(name: "hw", scope: !7153, file: !3, line: 4731, type: !90)
!7165 = !DILocation(line: 4731, column: 17, scope: !7153)
!7166 = !DILocalVariable(name: "clkspec", scope: !7153, file: !3, line: 4732, type: !2260)
!7167 = !DILocation(line: 4732, column: 25, scope: !7153)
!7168 = !DILocation(line: 4734, column: 25, scope: !7153)
!7169 = !DILocation(line: 4734, column: 29, scope: !7153)
!7170 = !DILocation(line: 4734, column: 36, scope: !7153)
!7171 = !DILocation(line: 4734, column: 8, scope: !7153)
!7172 = !DILocation(line: 4734, column: 6, scope: !7153)
!7173 = !DILocation(line: 4735, column: 6, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 4735, column: 6)
!7175 = !DILocation(line: 4735, column: 6, scope: !7153)
!7176 = !DILocation(line: 4736, column: 18, scope: !7174)
!7177 = !DILocation(line: 4736, column: 10, scope: !7174)
!7178 = !DILocation(line: 4736, column: 3, scope: !7174)
!7179 = !DILocation(line: 4738, column: 7, scope: !7153)
!7180 = !DILocation(line: 4738, column: 5, scope: !7153)
!7181 = !DILocation(line: 4739, column: 22, scope: !7153)
!7182 = !DILocation(line: 4739, column: 2, scope: !7153)
!7183 = !DILocation(line: 4741, column: 9, scope: !7153)
!7184 = !DILocation(line: 4741, column: 2, scope: !7153)
!7185 = !DILocation(line: 4742, column: 1, scope: !7153)
!7186 = distinct !DISubprogram(name: "of_parse_clkspec", scope: !3, file: !3, line: 4638, type: !7187, scopeLine: 4640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7187 = !DISubroutineType(types: !7188)
!7188 = !{!89, !7189, !89, !76, !2259}
!7189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7190, size: 64)
!7190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1909)
!7191 = !DILocalVariable(name: "np", arg: 1, scope: !7186, file: !3, line: 4638, type: !7189)
!7192 = !DILocation(line: 4638, column: 55, scope: !7186)
!7193 = !DILocalVariable(name: "index", arg: 2, scope: !7186, file: !3, line: 4638, type: !89)
!7194 = !DILocation(line: 4638, column: 63, scope: !7186)
!7195 = !DILocalVariable(name: "name", arg: 3, scope: !7186, file: !3, line: 4639, type: !76)
!7196 = !DILocation(line: 4639, column: 20, scope: !7186)
!7197 = !DILocalVariable(name: "out_args", arg: 4, scope: !7186, file: !3, line: 4639, type: !2259)
!7198 = !DILocation(line: 4639, column: 50, scope: !7186)
!7199 = !DILocalVariable(name: "ret", scope: !7186, file: !3, line: 4641, type: !89)
!7200 = !DILocation(line: 4641, column: 6, scope: !7186)
!7201 = !DILocation(line: 4644, column: 2, scope: !7186)
!7202 = !DILocation(line: 4644, column: 9, scope: !7186)
!7203 = !DILocation(line: 4651, column: 7, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 4651, column: 7)
!7205 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 4644, column: 13)
!7206 = !DILocation(line: 4651, column: 7, scope: !7205)
!7207 = !DILocation(line: 4652, column: 37, scope: !7204)
!7208 = !DILocation(line: 4652, column: 56, scope: !7204)
!7209 = !DILocation(line: 4652, column: 12, scope: !7204)
!7210 = !DILocation(line: 4652, column: 10, scope: !7204)
!7211 = !DILocation(line: 4652, column: 4, scope: !7204)
!7212 = !DILocation(line: 4653, column: 36, scope: !7205)
!7213 = !DILocation(line: 4654, column: 8, scope: !7205)
!7214 = !DILocation(line: 4654, column: 15, scope: !7205)
!7215 = !DILocation(line: 4653, column: 9, scope: !7205)
!7216 = !DILocation(line: 4653, column: 7, scope: !7205)
!7217 = !DILocation(line: 4655, column: 8, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 4655, column: 7)
!7219 = !DILocation(line: 4655, column: 7, scope: !7205)
!7220 = !DILocation(line: 4656, column: 4, scope: !7218)
!7221 = !DILocation(line: 4657, column: 7, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 4657, column: 7)
!7223 = !DILocation(line: 4657, column: 12, scope: !7222)
!7224 = !DILocation(line: 4657, column: 15, scope: !7222)
!7225 = !DILocation(line: 4657, column: 21, scope: !7222)
!7226 = !DILocation(line: 4657, column: 7, scope: !7205)
!7227 = !DILocation(line: 4658, column: 4, scope: !7222)
!7228 = !DILocation(line: 4665, column: 8, scope: !7205)
!7229 = !DILocation(line: 4665, column: 12, scope: !7205)
!7230 = !DILocation(line: 4665, column: 6, scope: !7205)
!7231 = !DILocation(line: 4666, column: 7, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 4666, column: 7)
!7233 = !DILocation(line: 4666, column: 10, scope: !7232)
!7234 = !DILocation(line: 4666, column: 30, scope: !7232)
!7235 = !DILocation(line: 4666, column: 14, scope: !7232)
!7236 = !DILocation(line: 4666, column: 7, scope: !7205)
!7237 = !DILocation(line: 4667, column: 4, scope: !7232)
!7238 = !DILocation(line: 4668, column: 9, scope: !7205)
!7239 = distinct !{!7239, !7201, !7240}
!7240 = !DILocation(line: 4669, column: 2, scope: !7186)
!7241 = !DILocation(line: 4671, column: 9, scope: !7186)
!7242 = !DILocation(line: 4671, column: 2, scope: !7186)
!7243 = distinct !DISubprogram(name: "of_clk_get", scope: !3, file: !3, line: 4753, type: !7244, scopeLine: 4754, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7244 = !DISubroutineType(types: !7245)
!7245 = !{!95, !1908, !89}
!7246 = !DILocalVariable(name: "np", arg: 1, scope: !7243, file: !3, line: 4753, type: !1908)
!7247 = !DILocation(line: 4753, column: 44, scope: !7243)
!7248 = !DILocalVariable(name: "index", arg: 2, scope: !7243, file: !3, line: 4753, type: !89)
!7249 = !DILocation(line: 4753, column: 52, scope: !7243)
!7250 = !DILocation(line: 4755, column: 22, scope: !7243)
!7251 = !DILocation(line: 4755, column: 26, scope: !7243)
!7252 = !DILocation(line: 4755, column: 33, scope: !7243)
!7253 = !DILocation(line: 4755, column: 37, scope: !7243)
!7254 = !DILocation(line: 4755, column: 9, scope: !7243)
!7255 = !DILocation(line: 4755, column: 2, scope: !7243)
!7256 = distinct !DISubprogram(name: "__of_clk_get", scope: !3, file: !3, line: 4744, type: !7257, scopeLine: 4747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7257 = !DISubroutineType(types: !7258)
!7258 = !{!95, !1908, !89, !76, !76}
!7259 = !DILocalVariable(name: "np", arg: 1, scope: !7256, file: !3, line: 4744, type: !1908)
!7260 = !DILocation(line: 4744, column: 53, scope: !7256)
!7261 = !DILocalVariable(name: "index", arg: 2, scope: !7256, file: !3, line: 4745, type: !89)
!7262 = !DILocation(line: 4745, column: 9, scope: !7256)
!7263 = !DILocalVariable(name: "dev_id", arg: 3, scope: !7256, file: !3, line: 4745, type: !76)
!7264 = !DILocation(line: 4745, column: 28, scope: !7256)
!7265 = !DILocalVariable(name: "con_id", arg: 4, scope: !7256, file: !3, line: 4746, type: !76)
!7266 = !DILocation(line: 4746, column: 17, scope: !7256)
!7267 = !DILocalVariable(name: "hw", scope: !7256, file: !3, line: 4748, type: !90)
!7268 = !DILocation(line: 4748, column: 17, scope: !7256)
!7269 = !DILocation(line: 4748, column: 36, scope: !7256)
!7270 = !DILocation(line: 4748, column: 40, scope: !7256)
!7271 = !DILocation(line: 4748, column: 47, scope: !7256)
!7272 = !DILocation(line: 4748, column: 22, scope: !7256)
!7273 = !DILocation(line: 4750, column: 33, scope: !7256)
!7274 = !DILocation(line: 4750, column: 37, scope: !7256)
!7275 = !DILocation(line: 4750, column: 45, scope: !7256)
!7276 = !DILocation(line: 4750, column: 9, scope: !7256)
!7277 = !DILocation(line: 4750, column: 2, scope: !7256)
!7278 = distinct !DISubprogram(name: "of_clk_get_by_name", scope: !3, file: !3, line: 4768, type: !7279, scopeLine: 4769, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7279 = !DISubroutineType(types: !7280)
!7280 = !{!95, !1908, !76}
!7281 = !DILocalVariable(name: "np", arg: 1, scope: !7278, file: !3, line: 4768, type: !1908)
!7282 = !DILocation(line: 4768, column: 52, scope: !7278)
!7283 = !DILocalVariable(name: "name", arg: 2, scope: !7278, file: !3, line: 4768, type: !76)
!7284 = !DILocation(line: 4768, column: 68, scope: !7278)
!7285 = !DILocation(line: 4770, column: 7, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 4770, column: 6)
!7287 = !DILocation(line: 4770, column: 6, scope: !7278)
!7288 = !DILocation(line: 4771, column: 10, scope: !7286)
!7289 = !DILocation(line: 4771, column: 3, scope: !7286)
!7290 = !DILocation(line: 4773, column: 22, scope: !7278)
!7291 = !DILocation(line: 4773, column: 29, scope: !7278)
!7292 = !DILocation(line: 4773, column: 33, scope: !7278)
!7293 = !DILocation(line: 4773, column: 44, scope: !7278)
!7294 = !DILocation(line: 4773, column: 9, scope: !7278)
!7295 = !DILocation(line: 4773, column: 2, scope: !7278)
!7296 = !DILocation(line: 4774, column: 1, scope: !7278)
!7297 = distinct !DISubprogram(name: "of_clk_get_parent_count", scope: !3, file: !3, line: 4783, type: !7298, scopeLine: 4784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7298 = !DISubroutineType(types: !7299)
!7299 = !{!7, !7189}
!7300 = !DILocalVariable(name: "np", arg: 1, scope: !7297, file: !3, line: 4783, type: !7189)
!7301 = !DILocation(line: 4783, column: 64, scope: !7297)
!7302 = !DILocalVariable(name: "count", scope: !7297, file: !3, line: 4785, type: !89)
!7303 = !DILocation(line: 4785, column: 6, scope: !7297)
!7304 = !DILocation(line: 4787, column: 37, scope: !7297)
!7305 = !DILocation(line: 4787, column: 10, scope: !7297)
!7306 = !DILocation(line: 4787, column: 8, scope: !7297)
!7307 = !DILocation(line: 4788, column: 6, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 4788, column: 6)
!7309 = !DILocation(line: 4788, column: 12, scope: !7308)
!7310 = !DILocation(line: 4788, column: 6, scope: !7297)
!7311 = !DILocation(line: 4789, column: 3, scope: !7308)
!7312 = !DILocation(line: 4791, column: 9, scope: !7297)
!7313 = !DILocation(line: 4791, column: 2, scope: !7297)
!7314 = !DILocation(line: 4792, column: 1, scope: !7297)
!7315 = distinct !DISubprogram(name: "of_clk_get_parent_name", scope: !3, file: !3, line: 4795, type: !7316, scopeLine: 4796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{!76, !7189, !89}
!7318 = !DILocalVariable(name: "np", arg: 1, scope: !7315, file: !3, line: 4795, type: !7189)
!7319 = !DILocation(line: 4795, column: 62, scope: !7315)
!7320 = !DILocalVariable(name: "index", arg: 2, scope: !7315, file: !3, line: 4795, type: !89)
!7321 = !DILocation(line: 4795, column: 70, scope: !7315)
!7322 = !DILocalVariable(name: "clkspec", scope: !7315, file: !3, line: 4797, type: !2260)
!7323 = !DILocation(line: 4797, column: 25, scope: !7315)
!7324 = !DILocalVariable(name: "prop", scope: !7315, file: !3, line: 4798, type: !2007)
!7325 = !DILocation(line: 4798, column: 19, scope: !7315)
!7326 = !DILocalVariable(name: "clk_name", scope: !7315, file: !3, line: 4799, type: !76)
!7327 = !DILocation(line: 4799, column: 14, scope: !7315)
!7328 = !DILocalVariable(name: "vp", scope: !7315, file: !3, line: 4800, type: !7329)
!7329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7330, size: 64)
!7330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7331)
!7331 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !1568, line: 32, baseType: !438)
!7332 = !DILocation(line: 4800, column: 16, scope: !7315)
!7333 = !DILocalVariable(name: "pv", scope: !7315, file: !3, line: 4801, type: !437)
!7334 = !DILocation(line: 4801, column: 6, scope: !7315)
!7335 = !DILocalVariable(name: "rc", scope: !7315, file: !3, line: 4802, type: !89)
!7336 = !DILocation(line: 4802, column: 6, scope: !7315)
!7337 = !DILocalVariable(name: "count", scope: !7315, file: !3, line: 4803, type: !89)
!7338 = !DILocation(line: 4803, column: 6, scope: !7315)
!7339 = !DILocalVariable(name: "clk", scope: !7315, file: !3, line: 4804, type: !95)
!7340 = !DILocation(line: 4804, column: 14, scope: !7315)
!7341 = !DILocation(line: 4806, column: 34, scope: !7315)
!7342 = !DILocation(line: 4806, column: 64, scope: !7315)
!7343 = !DILocation(line: 4806, column: 7, scope: !7315)
!7344 = !DILocation(line: 4806, column: 5, scope: !7315)
!7345 = !DILocation(line: 4808, column: 6, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 4808, column: 6)
!7347 = !DILocation(line: 4808, column: 6, scope: !7315)
!7348 = !DILocation(line: 4809, column: 3, scope: !7346)
!7349 = !DILocation(line: 4811, column: 18, scope: !7315)
!7350 = !DILocation(line: 4811, column: 10, scope: !7315)
!7351 = !DILocation(line: 4811, column: 39, scope: !7315)
!7352 = !DILocation(line: 4811, column: 31, scope: !7315)
!7353 = !DILocation(line: 4811, column: 8, scope: !7315)
!7354 = !DILocation(line: 4812, column: 8, scope: !7315)
!7355 = !DILocation(line: 4817, column: 2, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 4817, column: 2)
!7357 = !DILocation(line: 4817, column: 2, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 4817, column: 2)
!7359 = !DILocation(line: 4818, column: 7, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 4818, column: 7)
!7361 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 4817, column: 70)
!7362 = !DILocation(line: 4818, column: 16, scope: !7360)
!7363 = !DILocation(line: 4818, column: 13, scope: !7360)
!7364 = !DILocation(line: 4818, column: 7, scope: !7361)
!7365 = !DILocation(line: 4819, column: 12, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 4818, column: 20)
!7367 = !DILocation(line: 4819, column: 10, scope: !7366)
!7368 = !DILocation(line: 4820, column: 4, scope: !7366)
!7369 = !DILocation(line: 4822, column: 8, scope: !7361)
!7370 = !DILocation(line: 4823, column: 2, scope: !7361)
!7371 = distinct !{!7371, !7355, !7372}
!7372 = !DILocation(line: 4823, column: 2, scope: !7356)
!7373 = !DILocation(line: 4825, column: 6, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 4825, column: 6)
!7375 = !DILocation(line: 4825, column: 11, scope: !7374)
!7376 = !DILocation(line: 4825, column: 15, scope: !7374)
!7377 = !DILocation(line: 4825, column: 6, scope: !7315)
!7378 = !DILocation(line: 4826, column: 3, scope: !7374)
!7379 = !DILocation(line: 4828, column: 44, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 4828, column: 6)
!7381 = !DILocation(line: 4829, column: 8, scope: !7380)
!7382 = !DILocation(line: 4828, column: 6, scope: !7380)
!7383 = !DILocation(line: 4830, column: 19, scope: !7380)
!7384 = !DILocation(line: 4828, column: 6, scope: !7315)
!7385 = !DILocation(line: 4837, column: 9, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 4830, column: 24)
!7387 = !DILocation(line: 4837, column: 7, scope: !7386)
!7388 = !DILocation(line: 4838, column: 14, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 4838, column: 7)
!7390 = !DILocation(line: 4838, column: 7, scope: !7389)
!7391 = !DILocation(line: 4838, column: 7, scope: !7386)
!7392 = !DILocation(line: 4839, column: 16, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 4839, column: 8)
!7394 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 4838, column: 20)
!7395 = !DILocation(line: 4839, column: 27, scope: !7393)
!7396 = !DILocation(line: 4839, column: 8, scope: !7394)
!7397 = !DILocation(line: 4840, column: 24, scope: !7393)
!7398 = !DILocation(line: 4840, column: 28, scope: !7393)
!7399 = !DILocation(line: 4840, column: 14, scope: !7393)
!7400 = !DILocation(line: 4840, column: 5, scope: !7393)
!7401 = !DILocation(line: 4842, column: 14, scope: !7393)
!7402 = !DILocation(line: 4843, column: 3, scope: !7394)
!7403 = !DILocation(line: 4844, column: 30, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 4843, column: 10)
!7405 = !DILocation(line: 4844, column: 15, scope: !7404)
!7406 = !DILocation(line: 4844, column: 13, scope: !7404)
!7407 = !DILocation(line: 4845, column: 12, scope: !7404)
!7408 = !DILocation(line: 4845, column: 4, scope: !7404)
!7409 = !DILocation(line: 4847, column: 2, scope: !7386)
!7410 = !DILocation(line: 4850, column: 22, scope: !7315)
!7411 = !DILocation(line: 4850, column: 2, scope: !7315)
!7412 = !DILocation(line: 4851, column: 9, scope: !7315)
!7413 = !DILocation(line: 4851, column: 2, scope: !7315)
!7414 = !DILocation(line: 4852, column: 1, scope: !7315)
!7415 = distinct !DISubprogram(name: "of_property_read_string_index", scope: !1910, file: !1910, line: 1176, type: !7416, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{!89, !7189, !76, !89, !1959}
!7418 = !DILocalVariable(name: "np", arg: 1, scope: !7415, file: !1910, line: 1176, type: !7189)
!7419 = !DILocation(line: 1176, column: 75, scope: !7415)
!7420 = !DILocalVariable(name: "propname", arg: 2, scope: !7415, file: !1910, line: 1177, type: !76)
!7421 = !DILocation(line: 1177, column: 19, scope: !7415)
!7422 = !DILocalVariable(name: "index", arg: 3, scope: !7415, file: !1910, line: 1178, type: !89)
!7423 = !DILocation(line: 1178, column: 11, scope: !7415)
!7424 = !DILocalVariable(name: "output", arg: 4, scope: !7415, file: !1910, line: 1178, type: !1959)
!7425 = !DILocation(line: 1178, column: 31, scope: !7415)
!7426 = !DILocalVariable(name: "rc", scope: !7415, file: !1910, line: 1180, type: !89)
!7427 = !DILocation(line: 1180, column: 6, scope: !7415)
!7428 = !DILocation(line: 1180, column: 42, scope: !7415)
!7429 = !DILocation(line: 1180, column: 46, scope: !7415)
!7430 = !DILocation(line: 1180, column: 56, scope: !7415)
!7431 = !DILocation(line: 1180, column: 67, scope: !7415)
!7432 = !DILocation(line: 1180, column: 11, scope: !7415)
!7433 = !DILocation(line: 1181, column: 9, scope: !7415)
!7434 = !DILocation(line: 1181, column: 12, scope: !7415)
!7435 = !DILocation(line: 1181, column: 18, scope: !7415)
!7436 = !DILocation(line: 1181, column: 2, scope: !7415)
!7437 = distinct !DISubprogram(name: "of_clk_parent_fill", scope: !3, file: !3, line: 4864, type: !7438, scopeLine: 4866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7438 = !DISubroutineType(types: !7439)
!7439 = !{!89, !1908, !1959, !7}
!7440 = !DILocalVariable(name: "np", arg: 1, scope: !7437, file: !3, line: 4864, type: !1908)
!7441 = !DILocation(line: 4864, column: 44, scope: !7437)
!7442 = !DILocalVariable(name: "parents", arg: 2, scope: !7437, file: !3, line: 4864, type: !1959)
!7443 = !DILocation(line: 4864, column: 61, scope: !7437)
!7444 = !DILocalVariable(name: "size", arg: 3, scope: !7437, file: !3, line: 4865, type: !7)
!7445 = !DILocation(line: 4865, column: 23, scope: !7437)
!7446 = !DILocalVariable(name: "i", scope: !7437, file: !3, line: 4867, type: !7)
!7447 = !DILocation(line: 4867, column: 15, scope: !7437)
!7448 = !DILocation(line: 4869, column: 2, scope: !7437)
!7449 = !DILocation(line: 4869, column: 9, scope: !7437)
!7450 = !DILocation(line: 4869, column: 13, scope: !7437)
!7451 = !DILocation(line: 4869, column: 11, scope: !7437)
!7452 = !DILocation(line: 4869, column: 18, scope: !7437)
!7453 = !DILocation(line: 4869, column: 58, scope: !7437)
!7454 = !DILocation(line: 4869, column: 62, scope: !7437)
!7455 = !DILocation(line: 4869, column: 35, scope: !7437)
!7456 = !DILocation(line: 4869, column: 22, scope: !7437)
!7457 = !DILocation(line: 4869, column: 30, scope: !7437)
!7458 = !DILocation(line: 4869, column: 33, scope: !7437)
!7459 = !DILocation(line: 4869, column: 66, scope: !7437)
!7460 = !DILocation(line: 0, scope: !7437)
!7461 = !DILocation(line: 4870, column: 4, scope: !7437)
!7462 = distinct !{!7462, !7448, !7461}
!7463 = !DILocation(line: 4872, column: 9, scope: !7437)
!7464 = !DILocation(line: 4872, column: 2, scope: !7437)
!7465 = distinct !DISubprogram(name: "of_clk_detect_critical", scope: !3, file: !3, line: 4935, type: !7466, scopeLine: 4937, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{!89, !1908, !89, !2124}
!7468 = !DILocalVariable(name: "np", arg: 1, scope: !7465, file: !3, line: 4935, type: !1908)
!7469 = !DILocation(line: 4935, column: 48, scope: !7465)
!7470 = !DILocalVariable(name: "index", arg: 2, scope: !7465, file: !3, line: 4935, type: !89)
!7471 = !DILocation(line: 4935, column: 56, scope: !7465)
!7472 = !DILocalVariable(name: "flags", arg: 3, scope: !7465, file: !3, line: 4936, type: !2124)
!7473 = !DILocation(line: 4936, column: 22, scope: !7465)
!7474 = !DILocalVariable(name: "prop", scope: !7465, file: !3, line: 4938, type: !2007)
!7475 = !DILocation(line: 4938, column: 19, scope: !7465)
!7476 = !DILocalVariable(name: "cur", scope: !7465, file: !3, line: 4939, type: !7329)
!7477 = !DILocation(line: 4939, column: 16, scope: !7465)
!7478 = !DILocalVariable(name: "idx", scope: !7465, file: !3, line: 4940, type: !2266)
!7479 = !DILocation(line: 4940, column: 11, scope: !7465)
!7480 = !DILocation(line: 4942, column: 7, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 4942, column: 6)
!7482 = !DILocation(line: 4942, column: 10, scope: !7481)
!7483 = !DILocation(line: 4942, column: 14, scope: !7481)
!7484 = !DILocation(line: 4942, column: 6, scope: !7465)
!7485 = !DILocation(line: 4943, column: 3, scope: !7481)
!7486 = !DILocation(line: 4945, column: 2, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 4945, column: 2)
!7488 = !DILocation(line: 4945, column: 2, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 4945, column: 2)
!7490 = !DILocation(line: 4946, column: 7, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 4946, column: 7)
!7492 = !DILocation(line: 4946, column: 16, scope: !7491)
!7493 = !DILocation(line: 4946, column: 13, scope: !7491)
!7494 = !DILocation(line: 4946, column: 7, scope: !7489)
!7495 = !DILocation(line: 4947, column: 5, scope: !7491)
!7496 = !DILocation(line: 4947, column: 11, scope: !7491)
!7497 = !DILocation(line: 4947, column: 4, scope: !7491)
!7498 = distinct !{!7498, !7486, !7499}
!7499 = !DILocation(line: 4947, column: 14, scope: !7487)
!7500 = !DILocation(line: 4949, column: 2, scope: !7465)
!7501 = !DILocation(line: 4950, column: 1, scope: !7465)
!7502 = distinct !DISubprogram(name: "of_clk_init", scope: !3, file: !3, line: 4960, type: !7503, scopeLine: 4961, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7503 = !DISubroutineType(types: !7504)
!7504 = !{null, !1681}
!7505 = !DILocalVariable(name: "matches", arg: 1, scope: !7502, file: !3, line: 4960, type: !1681)
!7506 = !DILocation(line: 4960, column: 52, scope: !7502)
!7507 = !DILocalVariable(name: "match", scope: !7502, file: !3, line: 4962, type: !1681)
!7508 = !DILocation(line: 4962, column: 29, scope: !7502)
!7509 = !DILocalVariable(name: "np", scope: !7502, file: !3, line: 4963, type: !1908)
!7510 = !DILocation(line: 4963, column: 22, scope: !7502)
!7511 = !DILocalVariable(name: "clk_provider", scope: !7502, file: !3, line: 4964, type: !2272)
!7512 = !DILocation(line: 4964, column: 25, scope: !7502)
!7513 = !DILocalVariable(name: "next", scope: !7502, file: !3, line: 4964, type: !2272)
!7514 = !DILocation(line: 4964, column: 40, scope: !7502)
!7515 = !DILocalVariable(name: "is_init_done", scope: !7502, file: !3, line: 4965, type: !1008)
!7516 = !DILocation(line: 4965, column: 7, scope: !7502)
!7517 = !DILocalVariable(name: "force", scope: !7502, file: !3, line: 4966, type: !1008)
!7518 = !DILocation(line: 4966, column: 7, scope: !7502)
!7519 = !DILocalVariable(name: "clk_provider_list", scope: !7502, file: !3, line: 4967, type: !109)
!7520 = !DILocation(line: 4967, column: 2, scope: !7502)
!7521 = !DILocation(line: 4969, column: 7, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 4969, column: 6)
!7523 = !DILocation(line: 4969, column: 6, scope: !7502)
!7524 = !DILocation(line: 4970, column: 11, scope: !7522)
!7525 = !DILocation(line: 4970, column: 3, scope: !7522)
!7526 = !DILocation(line: 4973, column: 2, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 4973, column: 2)
!7528 = !DILocation(line: 4973, column: 2, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 4973, column: 2)
!7530 = !DILocalVariable(name: "parent", scope: !7531, file: !3, line: 4974, type: !2272)
!7531 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 4973, column: 56)
!7532 = !DILocation(line: 4974, column: 26, scope: !7531)
!7533 = !DILocation(line: 4976, column: 31, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 4976, column: 7)
!7535 = !DILocation(line: 4976, column: 8, scope: !7534)
!7536 = !DILocation(line: 4976, column: 7, scope: !7531)
!7537 = !DILocation(line: 4977, column: 4, scope: !7534)
!7538 = !DILocation(line: 4979, column: 12, scope: !7531)
!7539 = !DILocation(line: 4979, column: 10, scope: !7531)
!7540 = !DILocation(line: 4980, column: 8, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 4980, column: 7)
!7542 = !DILocation(line: 4980, column: 7, scope: !7531)
!7543 = !DILocalVariable(name: "__mptr", scope: !7544, file: !3, line: 4981, type: !71)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 4981, column: 4)
!7545 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 4981, column: 4)
!7546 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 4980, column: 16)
!7547 = !DILocation(line: 4981, column: 4, scope: !7544)
!7548 = !DILocation(line: 4981, column: 4, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7544, file: !3, line: 4981, column: 4)
!7550 = !DILocation(line: 4981, column: 4, scope: !7545)
!7551 = !DILocalVariable(name: "__mptr", scope: !7552, file: !3, line: 4981, type: !71)
!7552 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 4981, column: 4)
!7553 = !DILocation(line: 4981, column: 4, scope: !7552)
!7554 = !DILocation(line: 4981, column: 4, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 4981, column: 4)
!7556 = !DILocation(line: 4981, column: 4, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 4981, column: 4)
!7558 = !DILocation(line: 4983, column: 15, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7557, file: !3, line: 4982, column: 34)
!7560 = !DILocation(line: 4983, column: 29, scope: !7559)
!7561 = !DILocation(line: 4983, column: 5, scope: !7559)
!7562 = !DILocation(line: 4984, column: 17, scope: !7559)
!7563 = !DILocation(line: 4984, column: 31, scope: !7559)
!7564 = !DILocation(line: 4984, column: 5, scope: !7559)
!7565 = !DILocation(line: 4985, column: 11, scope: !7559)
!7566 = !DILocation(line: 4985, column: 5, scope: !7559)
!7567 = !DILocation(line: 4986, column: 4, scope: !7559)
!7568 = !DILocalVariable(name: "__mptr", scope: !7569, file: !3, line: 4981, type: !71)
!7569 = distinct !DILexicalBlock(scope: !7557, file: !3, line: 4981, column: 4)
!7570 = !DILocation(line: 4981, column: 4, scope: !7569)
!7571 = !DILocation(line: 4981, column: 4, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 4981, column: 4)
!7573 = distinct !{!7573, !7550, !7574}
!7574 = !DILocation(line: 4986, column: 4, scope: !7545)
!7575 = !DILocation(line: 4987, column: 16, scope: !7546)
!7576 = !DILocation(line: 4987, column: 4, scope: !7546)
!7577 = !DILocation(line: 4988, column: 4, scope: !7546)
!7578 = !DILocation(line: 4991, column: 25, scope: !7531)
!7579 = !DILocation(line: 4991, column: 32, scope: !7531)
!7580 = !DILocation(line: 4991, column: 3, scope: !7531)
!7581 = !DILocation(line: 4991, column: 11, scope: !7531)
!7582 = !DILocation(line: 4991, column: 23, scope: !7531)
!7583 = !DILocation(line: 4992, column: 28, scope: !7531)
!7584 = !DILocation(line: 4992, column: 16, scope: !7531)
!7585 = !DILocation(line: 4992, column: 3, scope: !7531)
!7586 = !DILocation(line: 4992, column: 11, scope: !7531)
!7587 = !DILocation(line: 4992, column: 14, scope: !7531)
!7588 = !DILocation(line: 4993, column: 18, scope: !7531)
!7589 = !DILocation(line: 4993, column: 26, scope: !7531)
!7590 = !DILocation(line: 4993, column: 3, scope: !7531)
!7591 = !DILocation(line: 4994, column: 2, scope: !7531)
!7592 = distinct !{!7592, !7526, !7593}
!7593 = !DILocation(line: 4994, column: 2, scope: !7527)
!7594 = !DILocation(line: 4996, column: 2, scope: !7502)
!7595 = !DILocation(line: 4996, column: 10, scope: !7502)
!7596 = !DILocation(line: 4996, column: 9, scope: !7502)
!7597 = !DILocation(line: 4997, column: 16, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 4996, column: 42)
!7599 = !DILocalVariable(name: "__mptr", scope: !7600, file: !3, line: 4998, type: !71)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 4998, column: 3)
!7601 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 4998, column: 3)
!7602 = !DILocation(line: 4998, column: 3, scope: !7600)
!7603 = !DILocation(line: 4998, column: 3, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 4998, column: 3)
!7605 = !DILocation(line: 4998, column: 3, scope: !7601)
!7606 = !DILocalVariable(name: "__mptr", scope: !7607, file: !3, line: 4998, type: !71)
!7607 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 4998, column: 3)
!7608 = !DILocation(line: 4998, column: 3, scope: !7607)
!7609 = !DILocation(line: 4998, column: 3, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 4998, column: 3)
!7611 = !DILocation(line: 4998, column: 3, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 4998, column: 3)
!7613 = !DILocation(line: 5000, column: 8, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 5000, column: 8)
!7615 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 4999, column: 32)
!7616 = !DILocation(line: 5000, column: 14, scope: !7614)
!7617 = !DILocation(line: 5000, column: 30, scope: !7614)
!7618 = !DILocation(line: 5000, column: 44, scope: !7614)
!7619 = !DILocation(line: 5000, column: 17, scope: !7614)
!7620 = !DILocation(line: 5000, column: 8, scope: !7615)
!7621 = !DILocation(line: 5003, column: 22, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 5000, column: 49)
!7623 = !DILocation(line: 5003, column: 36, scope: !7622)
!7624 = !DILocation(line: 5003, column: 5, scope: !7622)
!7625 = !DILocation(line: 5006, column: 5, scope: !7622)
!7626 = !DILocation(line: 5006, column: 19, scope: !7622)
!7627 = !DILocation(line: 5006, column: 31, scope: !7622)
!7628 = !DILocation(line: 5006, column: 45, scope: !7622)
!7629 = !DILocation(line: 5007, column: 25, scope: !7622)
!7630 = !DILocation(line: 5007, column: 39, scope: !7622)
!7631 = !DILocation(line: 5007, column: 5, scope: !7622)
!7632 = !DILocation(line: 5009, column: 15, scope: !7622)
!7633 = !DILocation(line: 5009, column: 29, scope: !7622)
!7634 = !DILocation(line: 5009, column: 5, scope: !7622)
!7635 = !DILocation(line: 5010, column: 17, scope: !7622)
!7636 = !DILocation(line: 5010, column: 31, scope: !7622)
!7637 = !DILocation(line: 5010, column: 5, scope: !7622)
!7638 = !DILocation(line: 5011, column: 11, scope: !7622)
!7639 = !DILocation(line: 5011, column: 5, scope: !7622)
!7640 = !DILocation(line: 5012, column: 18, scope: !7622)
!7641 = !DILocation(line: 5013, column: 4, scope: !7622)
!7642 = !DILocation(line: 5014, column: 3, scope: !7615)
!7643 = !DILocalVariable(name: "__mptr", scope: !7644, file: !3, line: 4998, type: !71)
!7644 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 4998, column: 3)
!7645 = !DILocation(line: 4998, column: 3, scope: !7644)
!7646 = !DILocation(line: 4998, column: 3, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 4998, column: 3)
!7648 = distinct !{!7648, !7605, !7649}
!7649 = !DILocation(line: 5014, column: 3, scope: !7601)
!7650 = !DILocation(line: 5022, column: 8, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 5022, column: 7)
!7652 = !DILocation(line: 5022, column: 7, scope: !7598)
!7653 = !DILocation(line: 5023, column: 10, scope: !7651)
!7654 = !DILocation(line: 5023, column: 4, scope: !7651)
!7655 = distinct !{!7655, !7594, !7656}
!7656 = !DILocation(line: 5024, column: 2, scope: !7502)
!7657 = !DILocation(line: 5025, column: 1, scope: !7502)
!7658 = distinct !DISubprogram(name: "list_add_tail", scope: !5752, file: !5752, line: 98, type: !6585, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7659 = !DILocalVariable(name: "new", arg: 1, scope: !7658, file: !5752, line: 98, type: !113)
!7660 = !DILocation(line: 98, column: 52, scope: !7658)
!7661 = !DILocalVariable(name: "head", arg: 2, scope: !7658, file: !5752, line: 98, type: !113)
!7662 = !DILocation(line: 98, column: 75, scope: !7658)
!7663 = !DILocation(line: 100, column: 13, scope: !7658)
!7664 = !DILocation(line: 100, column: 18, scope: !7658)
!7665 = !DILocation(line: 100, column: 24, scope: !7658)
!7666 = !DILocation(line: 100, column: 30, scope: !7658)
!7667 = !DILocation(line: 100, column: 2, scope: !7658)
!7668 = !DILocation(line: 101, column: 1, scope: !7658)
!7669 = distinct !DISubprogram(name: "list_empty", scope: !5752, file: !5752, line: 280, type: !7670, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7670 = !DISubroutineType(types: !7671)
!7671 = !{!89, !7672}
!7672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7673, size: 64)
!7673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!7674 = !DILocalVariable(name: "head", arg: 1, scope: !7669, file: !5752, line: 280, type: !7672)
!7675 = !DILocation(line: 280, column: 54, scope: !7669)
!7676 = !DILocation(line: 282, column: 9, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7669, file: !5752, line: 282, column: 9)
!7678 = !DILocation(line: 282, column: 9, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7677, file: !5752, line: 282, column: 9)
!7680 = !DILocation(line: 282, column: 34, scope: !7669)
!7681 = !DILocation(line: 282, column: 31, scope: !7669)
!7682 = !DILocation(line: 282, column: 2, scope: !7669)
!7683 = distinct !DISubprogram(name: "parent_ready", scope: !3, file: !3, line: 4887, type: !7684, scopeLine: 4888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7684 = !DISubroutineType(types: !7685)
!7685 = !{!89, !1908}
!7686 = !DILocalVariable(name: "np", arg: 1, scope: !7683, file: !3, line: 4887, type: !1908)
!7687 = !DILocation(line: 4887, column: 45, scope: !7683)
!7688 = !DILocalVariable(name: "i", scope: !7683, file: !3, line: 4889, type: !89)
!7689 = !DILocation(line: 4889, column: 6, scope: !7683)
!7690 = !DILocation(line: 4891, column: 2, scope: !7683)
!7691 = !DILocalVariable(name: "clk", scope: !7692, file: !3, line: 4892, type: !95)
!7692 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 4891, column: 15)
!7693 = !DILocation(line: 4892, column: 15, scope: !7692)
!7694 = !DILocation(line: 4892, column: 32, scope: !7692)
!7695 = !DILocation(line: 4892, column: 36, scope: !7692)
!7696 = !DILocation(line: 4892, column: 21, scope: !7692)
!7697 = !DILocation(line: 4895, column: 15, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 4895, column: 7)
!7699 = !DILocation(line: 4895, column: 8, scope: !7698)
!7700 = !DILocation(line: 4895, column: 7, scope: !7692)
!7701 = !DILocation(line: 4896, column: 12, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 4895, column: 21)
!7703 = !DILocation(line: 4896, column: 4, scope: !7702)
!7704 = !DILocation(line: 4897, column: 5, scope: !7702)
!7705 = !DILocation(line: 4898, column: 4, scope: !7702)
!7706 = distinct !{!7706, !7690, !7707}
!7707 = !DILocation(line: 4914, column: 2, scope: !7683)
!7708 = !DILocation(line: 4902, column: 15, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 4902, column: 7)
!7710 = !DILocation(line: 4902, column: 7, scope: !7709)
!7711 = !DILocation(line: 4902, column: 20, scope: !7709)
!7712 = !DILocation(line: 4902, column: 7, scope: !7692)
!7713 = !DILocation(line: 4903, column: 4, scope: !7709)
!7714 = !DILocation(line: 4913, column: 3, scope: !7692)
!7715 = !DILocation(line: 4915, column: 1, scope: !7683)
!7716 = distinct !DISubprogram(name: "of_node_set_flag", scope: !1910, file: !1910, line: 199, type: !7717, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7717 = !DISubroutineType(types: !7718)
!7718 = !{null, !1908, !214}
!7719 = !DILocalVariable(name: "n", arg: 1, scope: !7716, file: !1910, line: 199, type: !1908)
!7720 = !DILocation(line: 199, column: 57, scope: !7716)
!7721 = !DILocalVariable(name: "flag", arg: 2, scope: !7716, file: !1910, line: 199, type: !214)
!7722 = !DILocation(line: 199, column: 74, scope: !7716)
!7723 = !DILocation(line: 201, column: 10, scope: !7716)
!7724 = !DILocation(line: 201, column: 17, scope: !7716)
!7725 = !DILocation(line: 201, column: 20, scope: !7716)
!7726 = !DILocation(line: 201, column: 2, scope: !7716)
!7727 = !DILocation(line: 202, column: 1, scope: !7716)
!7728 = distinct !DISubprogram(name: "clk_core_fill_parent_index", scope: !3, file: !3, line: 420, type: !7729, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7729 = !DISubroutineType(types: !7730)
!7730 = !{null, !72, !573}
!7731 = !DILocalVariable(name: "core", arg: 1, scope: !7728, file: !3, line: 420, type: !72)
!7732 = !DILocation(line: 420, column: 57, scope: !7728)
!7733 = !DILocalVariable(name: "index", arg: 2, scope: !7728, file: !3, line: 420, type: !573)
!7734 = !DILocation(line: 420, column: 66, scope: !7728)
!7735 = !DILocalVariable(name: "entry", scope: !7728, file: !3, line: 422, type: !2183)
!7736 = !DILocation(line: 422, column: 25, scope: !7728)
!7737 = !DILocation(line: 422, column: 34, scope: !7728)
!7738 = !DILocation(line: 422, column: 40, scope: !7728)
!7739 = !DILocation(line: 422, column: 48, scope: !7728)
!7740 = !DILocalVariable(name: "parent", scope: !7728, file: !3, line: 423, type: !72)
!7741 = !DILocation(line: 423, column: 19, scope: !7728)
!7742 = !DILocation(line: 423, column: 28, scope: !7728)
!7743 = !DILocation(line: 425, column: 6, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 425, column: 6)
!7745 = !DILocation(line: 425, column: 13, scope: !7744)
!7746 = !DILocation(line: 425, column: 6, scope: !7728)
!7747 = !DILocation(line: 426, column: 12, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 425, column: 17)
!7749 = !DILocation(line: 426, column: 19, scope: !7748)
!7750 = !DILocation(line: 426, column: 23, scope: !7748)
!7751 = !DILocation(line: 426, column: 10, scope: !7748)
!7752 = !DILocation(line: 432, column: 8, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 432, column: 7)
!7754 = !DILocation(line: 432, column: 7, scope: !7748)
!7755 = !DILocation(line: 433, column: 13, scope: !7753)
!7756 = !DILocation(line: 433, column: 11, scope: !7753)
!7757 = !DILocation(line: 433, column: 4, scope: !7753)
!7758 = !DILocation(line: 434, column: 2, scope: !7748)
!7759 = !DILocation(line: 435, column: 25, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 434, column: 9)
!7761 = !DILocation(line: 435, column: 31, scope: !7760)
!7762 = !DILocation(line: 435, column: 12, scope: !7760)
!7763 = !DILocation(line: 435, column: 10, scope: !7760)
!7764 = !DILocation(line: 436, column: 15, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 436, column: 7)
!7766 = !DILocation(line: 436, column: 7, scope: !7765)
!7767 = !DILocation(line: 436, column: 23, scope: !7765)
!7768 = !DILocation(line: 436, column: 34, scope: !7765)
!7769 = !DILocation(line: 436, column: 37, scope: !7765)
!7770 = !DILocation(line: 436, column: 44, scope: !7765)
!7771 = !DILocation(line: 436, column: 7, scope: !7760)
!7772 = !DILocation(line: 437, column: 29, scope: !7765)
!7773 = !DILocation(line: 437, column: 36, scope: !7765)
!7774 = !DILocation(line: 437, column: 13, scope: !7765)
!7775 = !DILocation(line: 437, column: 11, scope: !7765)
!7776 = !DILocation(line: 437, column: 4, scope: !7765)
!7777 = !DILocation(line: 441, column: 14, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 441, column: 6)
!7779 = !DILocation(line: 441, column: 7, scope: !7778)
!7780 = !DILocation(line: 441, column: 6, scope: !7728)
!7781 = !DILocation(line: 442, column: 17, scope: !7778)
!7782 = !DILocation(line: 442, column: 3, scope: !7778)
!7783 = !DILocation(line: 442, column: 10, scope: !7778)
!7784 = !DILocation(line: 442, column: 15, scope: !7778)
!7785 = !DILocation(line: 443, column: 1, scope: !7728)
!7786 = distinct !DISubprogram(name: "clk_core_get", scope: !3, file: !3, line: 392, type: !2434, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7787 = !DILocalVariable(name: "core", arg: 1, scope: !7786, file: !3, line: 392, type: !72)
!7788 = !DILocation(line: 392, column: 55, scope: !7786)
!7789 = !DILocalVariable(name: "p_index", arg: 2, scope: !7786, file: !3, line: 392, type: !573)
!7790 = !DILocation(line: 392, column: 64, scope: !7786)
!7791 = !DILocalVariable(name: "name", scope: !7786, file: !3, line: 394, type: !76)
!7792 = !DILocation(line: 394, column: 14, scope: !7786)
!7793 = !DILocation(line: 394, column: 21, scope: !7786)
!7794 = !DILocation(line: 394, column: 27, scope: !7786)
!7795 = !DILocation(line: 394, column: 35, scope: !7786)
!7796 = !DILocation(line: 394, column: 44, scope: !7786)
!7797 = !DILocalVariable(name: "index", scope: !7786, file: !3, line: 395, type: !89)
!7798 = !DILocation(line: 395, column: 6, scope: !7786)
!7799 = !DILocation(line: 395, column: 14, scope: !7786)
!7800 = !DILocation(line: 395, column: 20, scope: !7786)
!7801 = !DILocation(line: 395, column: 28, scope: !7786)
!7802 = !DILocation(line: 395, column: 37, scope: !7786)
!7803 = !DILocalVariable(name: "hw", scope: !7786, file: !3, line: 396, type: !90)
!7804 = !DILocation(line: 396, column: 17, scope: !7786)
!7805 = !DILocation(line: 396, column: 22, scope: !7786)
!7806 = !DILocalVariable(name: "dev", scope: !7786, file: !3, line: 397, type: !100)
!7807 = !DILocation(line: 397, column: 17, scope: !7786)
!7808 = !DILocation(line: 397, column: 23, scope: !7786)
!7809 = !DILocation(line: 397, column: 29, scope: !7786)
!7810 = !DILocalVariable(name: "dev_id", scope: !7786, file: !3, line: 398, type: !76)
!7811 = !DILocation(line: 398, column: 14, scope: !7786)
!7812 = !DILocation(line: 398, column: 23, scope: !7786)
!7813 = !DILocation(line: 398, column: 38, scope: !7786)
!7814 = !DILocation(line: 398, column: 29, scope: !7786)
!7815 = !DILocalVariable(name: "np", scope: !7786, file: !3, line: 399, type: !1908)
!7816 = !DILocation(line: 399, column: 22, scope: !7786)
!7817 = !DILocation(line: 399, column: 27, scope: !7786)
!7818 = !DILocation(line: 399, column: 33, scope: !7786)
!7819 = !DILocalVariable(name: "clkspec", scope: !7786, file: !3, line: 400, type: !2260)
!7820 = !DILocation(line: 400, column: 25, scope: !7786)
!7821 = !DILocation(line: 402, column: 6, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 402, column: 6)
!7823 = !DILocation(line: 402, column: 9, scope: !7822)
!7824 = !DILocation(line: 402, column: 13, scope: !7822)
!7825 = !DILocation(line: 402, column: 18, scope: !7822)
!7826 = !DILocation(line: 402, column: 21, scope: !7822)
!7827 = !DILocation(line: 402, column: 27, scope: !7822)
!7828 = !DILocation(line: 402, column: 33, scope: !7822)
!7829 = !DILocation(line: 403, column: 24, scope: !7822)
!7830 = !DILocation(line: 403, column: 28, scope: !7822)
!7831 = !DILocation(line: 403, column: 35, scope: !7822)
!7832 = !DILocation(line: 403, column: 7, scope: !7822)
!7833 = !DILocation(line: 402, column: 6, scope: !7786)
!7834 = !DILocation(line: 404, column: 8, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 403, column: 52)
!7836 = !DILocation(line: 404, column: 6, scope: !7835)
!7837 = !DILocation(line: 405, column: 23, scope: !7835)
!7838 = !DILocation(line: 405, column: 3, scope: !7835)
!7839 = !DILocation(line: 406, column: 2, scope: !7835)
!7840 = !DILocation(line: 406, column: 13, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 406, column: 13)
!7842 = !DILocation(line: 406, column: 13, scope: !7822)
!7843 = !DILocation(line: 411, column: 20, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 406, column: 19)
!7845 = !DILocation(line: 411, column: 28, scope: !7844)
!7846 = !DILocation(line: 411, column: 8, scope: !7844)
!7847 = !DILocation(line: 411, column: 6, scope: !7844)
!7848 = !DILocation(line: 412, column: 2, scope: !7844)
!7849 = !DILocation(line: 414, column: 13, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 414, column: 6)
!7851 = !DILocation(line: 414, column: 6, scope: !7850)
!7852 = !DILocation(line: 414, column: 6, scope: !7786)
!7853 = !DILocation(line: 415, column: 19, scope: !7850)
!7854 = !DILocation(line: 415, column: 10, scope: !7850)
!7855 = !DILocation(line: 415, column: 3, scope: !7850)
!7856 = !DILocation(line: 417, column: 9, scope: !7786)
!7857 = !DILocation(line: 417, column: 13, scope: !7786)
!7858 = !DILocation(line: 417, column: 2, scope: !7786)
!7859 = !DILocation(line: 418, column: 1, scope: !7786)
!7860 = distinct !DISubprogram(name: "PTR_ERR", scope: !3243, file: !3243, line: 29, type: !7861, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7861 = !DISubroutineType(types: !7862)
!7862 = !{!199, !1399}
!7863 = !DILocalVariable(name: "ptr", arg: 1, scope: !7860, file: !3243, line: 29, type: !1399)
!7864 = !DILocation(line: 29, column: 61, scope: !7860)
!7865 = !DILocation(line: 31, column: 16, scope: !7860)
!7866 = !DILocation(line: 31, column: 9, scope: !7860)
!7867 = !DILocation(line: 31, column: 2, scope: !7860)
!7868 = distinct !DISubprogram(name: "dev_name", scope: !30, file: !30, line: 609, type: !7869, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7869 = !DISubroutineType(types: !7870)
!7870 = !{!76, !1945}
!7871 = !DILocalVariable(name: "dev", arg: 1, scope: !7868, file: !30, line: 609, type: !1945)
!7872 = !DILocation(line: 609, column: 57, scope: !7868)
!7873 = !DILocation(line: 612, column: 6, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !30, line: 612, column: 6)
!7875 = !DILocation(line: 612, column: 11, scope: !7874)
!7876 = !DILocation(line: 612, column: 6, scope: !7868)
!7877 = !DILocation(line: 613, column: 10, scope: !7874)
!7878 = !DILocation(line: 613, column: 15, scope: !7874)
!7879 = !DILocation(line: 613, column: 3, scope: !7874)
!7880 = !DILocation(line: 615, column: 23, scope: !7868)
!7881 = !DILocation(line: 615, column: 28, scope: !7868)
!7882 = !DILocation(line: 615, column: 9, scope: !7868)
!7883 = !DILocation(line: 615, column: 2, scope: !7868)
!7884 = !DILocation(line: 616, column: 1, scope: !7868)
!7885 = distinct !DISubprogram(name: "kobject_name", scope: !105, file: !105, line: 88, type: !7886, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{!76, !7888}
!7888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7889, size: 64)
!7889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !104)
!7890 = !DILocalVariable(name: "kobj", arg: 1, scope: !7885, file: !105, line: 88, type: !7888)
!7891 = !DILocation(line: 88, column: 62, scope: !7885)
!7892 = !DILocation(line: 90, column: 9, scope: !7885)
!7893 = !DILocation(line: 90, column: 15, scope: !7885)
!7894 = !DILocation(line: 90, column: 2, scope: !7885)
!7895 = distinct !DISubprogram(name: "clk_pm_runtime_get", scope: !3, file: !3, line: 109, type: !3273, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7896 = !DILocalVariable(name: "core", arg: 1, scope: !7895, file: !3, line: 109, type: !72)
!7897 = !DILocation(line: 109, column: 48, scope: !7895)
!7898 = !DILocalVariable(name: "ret", scope: !7895, file: !3, line: 111, type: !89)
!7899 = !DILocation(line: 111, column: 6, scope: !7895)
!7900 = !DILocation(line: 113, column: 7, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 113, column: 6)
!7902 = !DILocation(line: 113, column: 13, scope: !7901)
!7903 = !DILocation(line: 113, column: 6, scope: !7895)
!7904 = !DILocation(line: 114, column: 3, scope: !7901)
!7905 = !DILocation(line: 116, column: 28, scope: !7895)
!7906 = !DILocation(line: 116, column: 34, scope: !7895)
!7907 = !DILocation(line: 116, column: 8, scope: !7895)
!7908 = !DILocation(line: 116, column: 6, scope: !7895)
!7909 = !DILocation(line: 117, column: 6, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 117, column: 6)
!7911 = !DILocation(line: 117, column: 10, scope: !7910)
!7912 = !DILocation(line: 117, column: 6, scope: !7895)
!7913 = !DILocation(line: 118, column: 25, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 117, column: 15)
!7915 = !DILocation(line: 118, column: 31, scope: !7914)
!7916 = !DILocation(line: 118, column: 3, scope: !7914)
!7917 = !DILocation(line: 119, column: 10, scope: !7914)
!7918 = !DILocation(line: 119, column: 3, scope: !7914)
!7919 = !DILocation(line: 121, column: 2, scope: !7895)
!7920 = !DILocation(line: 122, column: 1, scope: !7895)
!7921 = distinct !DISubprogram(name: "clk_pm_runtime_put", scope: !3, file: !3, line: 124, type: !3094, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7922 = !DILocalVariable(name: "core", arg: 1, scope: !7921, file: !3, line: 124, type: !72)
!7923 = !DILocation(line: 124, column: 49, scope: !7921)
!7924 = !DILocation(line: 126, column: 7, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 126, column: 6)
!7926 = !DILocation(line: 126, column: 13, scope: !7925)
!7927 = !DILocation(line: 126, column: 6, scope: !7921)
!7928 = !DILocation(line: 127, column: 3, scope: !7925)
!7929 = !DILocation(line: 129, column: 22, scope: !7921)
!7930 = !DILocation(line: 129, column: 28, scope: !7921)
!7931 = !DILocation(line: 129, column: 2, scope: !7921)
!7932 = !DILocation(line: 130, column: 1, scope: !7921)
!7933 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !7934, file: !7934, line: 384, type: !1629, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7934 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!7935 = !DILocalVariable(name: "dev", arg: 1, scope: !7933, file: !7934, line: 384, type: !100)
!7936 = !DILocation(line: 384, column: 54, scope: !7933)
!7937 = !DILocation(line: 386, column: 29, scope: !7933)
!7938 = !DILocation(line: 386, column: 9, scope: !7933)
!7939 = !DILocation(line: 386, column: 2, scope: !7933)
!7940 = distinct !DISubprogram(name: "pm_runtime_put_noidle", scope: !7934, file: !7934, line: 103, type: !1620, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7941 = !DILocalVariable(name: "v", arg: 1, scope: !7942, file: !7943, line: 200, type: !7946)
!7942 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !7943, file: !7943, line: 200, type: !7944, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7943 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!7944 = !DISubroutineType(types: !7945)
!7945 = !{!1008, !7946, !753, !89}
!7946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!7947 = !DILocation(line: 200, column: 63, scope: !7942, inlinedAt: !7948)
!7948 = distinct !DILocation(line: 1093, column: 12, scope: !7949, inlinedAt: !7953)
!7949 = distinct !DISubprogram(name: "arch_atomic_fetch_add_unless", scope: !7950, file: !7950, line: 1086, type: !7951, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7950 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!7951 = !DISubroutineType(types: !7952)
!7952 = !{!89, !7946, !89, !89}
!7953 = distinct !DILocation(line: 1113, column: 9, scope: !7954, inlinedAt: !7957)
!7954 = distinct !DISubprogram(name: "arch_atomic_add_unless", scope: !7950, file: !7950, line: 1111, type: !7955, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7955 = !DISubroutineType(types: !7956)
!7956 = !{!1008, !7946, !89, !89}
!7957 = distinct !DILocation(line: 789, column: 9, scope: !7958, inlinedAt: !7960)
!7958 = distinct !DISubprogram(name: "atomic_add_unless", scope: !7959, file: !7959, line: 786, type: !7955, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7959 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7960 = distinct !DILocation(line: 105, column: 2, scope: !7940)
!7961 = !DILocalVariable(name: "old", arg: 2, scope: !7942, file: !7943, line: 200, type: !753)
!7962 = !DILocation(line: 200, column: 71, scope: !7942, inlinedAt: !7948)
!7963 = !DILocalVariable(name: "new", arg: 3, scope: !7942, file: !7943, line: 200, type: !89)
!7964 = !DILocation(line: 200, column: 80, scope: !7942, inlinedAt: !7948)
!7965 = !DILocalVariable(name: "success", scope: !7966, file: !7943, line: 202, type: !1008)
!7966 = distinct !DILexicalBlock(scope: !7942, file: !7943, line: 202, column: 9)
!7967 = !DILocation(line: 202, column: 9, scope: !7966, inlinedAt: !7948)
!7968 = !DILocalVariable(name: "_old", scope: !7966, file: !7943, line: 202, type: !753)
!7969 = !DILocalVariable(name: "__old", scope: !7966, file: !7943, line: 202, type: !89)
!7970 = !DILocalVariable(name: "__new", scope: !7966, file: !7943, line: 202, type: !89)
!7971 = !DILocalVariable(name: "__ptr", scope: !7966, file: !7943, line: 202, type: !2284)
!7972 = !DILocalVariable(name: "v", arg: 1, scope: !7973, file: !7943, line: 23, type: !7976)
!7973 = distinct !DISubprogram(name: "arch_atomic_read", scope: !7943, file: !7943, line: 23, type: !7974, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7974 = !DISubroutineType(types: !7975)
!7975 = !{!89, !7976}
!7976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7977, size: 64)
!7977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !305)
!7978 = !DILocation(line: 23, column: 61, scope: !7973, inlinedAt: !7979)
!7979 = distinct !DILocation(line: 1088, column: 10, scope: !7949, inlinedAt: !7953)
!7980 = !DILocalVariable(name: "v", arg: 1, scope: !7949, file: !7950, line: 1086, type: !7946)
!7981 = !DILocation(line: 1086, column: 40, scope: !7949, inlinedAt: !7953)
!7982 = !DILocalVariable(name: "a", arg: 2, scope: !7949, file: !7950, line: 1086, type: !89)
!7983 = !DILocation(line: 1086, column: 47, scope: !7949, inlinedAt: !7953)
!7984 = !DILocalVariable(name: "u", arg: 3, scope: !7949, file: !7950, line: 1086, type: !89)
!7985 = !DILocation(line: 1086, column: 54, scope: !7949, inlinedAt: !7953)
!7986 = !DILocalVariable(name: "c", scope: !7949, file: !7950, line: 1088, type: !89)
!7987 = !DILocation(line: 1088, column: 6, scope: !7949, inlinedAt: !7953)
!7988 = !DILocalVariable(name: "v", arg: 1, scope: !7954, file: !7950, line: 1111, type: !7946)
!7989 = !DILocation(line: 1111, column: 34, scope: !7954, inlinedAt: !7957)
!7990 = !DILocalVariable(name: "a", arg: 2, scope: !7954, file: !7950, line: 1111, type: !89)
!7991 = !DILocation(line: 1111, column: 41, scope: !7954, inlinedAt: !7957)
!7992 = !DILocalVariable(name: "u", arg: 3, scope: !7954, file: !7950, line: 1111, type: !89)
!7993 = !DILocation(line: 1111, column: 48, scope: !7954, inlinedAt: !7957)
!7994 = !DILocalVariable(name: "v", arg: 1, scope: !7995, file: !7996, line: 99, type: !7999)
!7995 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !7996, file: !7996, line: 99, type: !7997, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!7996 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7997 = !DISubroutineType(types: !7998)
!7998 = !{null, !7999, !211}
!7999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8000, size: 64)
!8000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8001)
!8001 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!8002 = !DILocation(line: 99, column: 79, scope: !7995, inlinedAt: !8003)
!8003 = distinct !DILocation(line: 788, column: 2, scope: !7958, inlinedAt: !7960)
!8004 = !DILocalVariable(name: "size", arg: 2, scope: !7995, file: !7996, line: 99, type: !211)
!8005 = !DILocation(line: 99, column: 89, scope: !7995, inlinedAt: !8003)
!8006 = !DILocalVariable(name: "v", arg: 1, scope: !7958, file: !7959, line: 786, type: !7946)
!8007 = !DILocation(line: 786, column: 29, scope: !7958, inlinedAt: !7960)
!8008 = !DILocalVariable(name: "a", arg: 2, scope: !7958, file: !7959, line: 786, type: !89)
!8009 = !DILocation(line: 786, column: 36, scope: !7958, inlinedAt: !7960)
!8010 = !DILocalVariable(name: "u", arg: 3, scope: !7958, file: !7959, line: 786, type: !89)
!8011 = !DILocation(line: 786, column: 43, scope: !7958, inlinedAt: !7960)
!8012 = !DILocalVariable(name: "dev", arg: 1, scope: !7940, file: !7934, line: 103, type: !100)
!8013 = !DILocation(line: 103, column: 57, scope: !7940)
!8014 = !DILocation(line: 105, column: 21, scope: !7940)
!8015 = !DILocation(line: 105, column: 26, scope: !7940)
!8016 = !DILocation(line: 105, column: 32, scope: !7940)
!8017 = !DILocation(line: 788, column: 31, scope: !7958, inlinedAt: !7960)
!8018 = !DILocation(line: 101, column: 20, scope: !7995, inlinedAt: !8003)
!8019 = !DILocation(line: 101, column: 23, scope: !7995, inlinedAt: !8003)
!8020 = !DILocation(line: 101, column: 2, scope: !7995, inlinedAt: !8003)
!8021 = !DILocation(line: 102, column: 2, scope: !7995, inlinedAt: !8003)
!8022 = !DILocation(line: 789, column: 32, scope: !7958, inlinedAt: !7960)
!8023 = !DILocation(line: 789, column: 35, scope: !7958, inlinedAt: !7960)
!8024 = !DILocation(line: 789, column: 38, scope: !7958, inlinedAt: !7960)
!8025 = !DILocation(line: 1113, column: 38, scope: !7954, inlinedAt: !7957)
!8026 = !DILocation(line: 1113, column: 41, scope: !7954, inlinedAt: !7957)
!8027 = !DILocation(line: 1113, column: 44, scope: !7954, inlinedAt: !7957)
!8028 = !DILocation(line: 1088, column: 27, scope: !7949, inlinedAt: !7953)
!8029 = !DILocation(line: 29, column: 9, scope: !7973, inlinedAt: !7979)
!8030 = !DILocation(line: 1090, column: 2, scope: !7949, inlinedAt: !7953)
!8031 = !DILocation(line: 1091, column: 7, scope: !8032, inlinedAt: !7953)
!8032 = distinct !DILexicalBlock(scope: !8033, file: !7950, line: 1091, column: 7)
!8033 = distinct !DILexicalBlock(scope: !7949, file: !7950, line: 1090, column: 5)
!8034 = !DILocation(line: 1091, column: 7, scope: !8033, inlinedAt: !7953)
!8035 = !DILocation(line: 1092, column: 4, scope: !8032, inlinedAt: !7953)
!8036 = !DILocation(line: 1093, column: 36, scope: !7949, inlinedAt: !7953)
!8037 = !DILocation(line: 1093, column: 43, scope: !7949, inlinedAt: !7953)
!8038 = !DILocation(line: 1093, column: 47, scope: !7949, inlinedAt: !7953)
!8039 = !DILocation(line: 1093, column: 45, scope: !7949, inlinedAt: !7953)
!8040 = !{i32 -2146532663, i32 -2146532508}
!8041 = !DILocation(line: 202, column: 9, scope: !8042, inlinedAt: !7948)
!8042 = distinct !DILexicalBlock(scope: !7966, file: !7943, line: 202, column: 9)
!8043 = !DILocation(line: 202, column: 9, scope: !7942, inlinedAt: !7948)
!8044 = !DILocation(line: 1093, column: 11, scope: !7949, inlinedAt: !7953)
!8045 = !DILocation(line: 1093, column: 2, scope: !8033, inlinedAt: !7953)
!8046 = distinct !{!8046, !8030, !8047}
!8047 = !DILocation(line: 1093, column: 49, scope: !7949, inlinedAt: !7953)
!8048 = !DILocation(line: 1095, column: 9, scope: !7949, inlinedAt: !7953)
!8049 = !DILocation(line: 1113, column: 50, scope: !7954, inlinedAt: !7957)
!8050 = !DILocation(line: 1113, column: 47, scope: !7954, inlinedAt: !7957)
!8051 = !DILocation(line: 106, column: 1, scope: !7940)
!8052 = distinct !DISubprogram(name: "kasan_check_write", scope: !8053, file: !8053, line: 38, type: !8054, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8053 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8054 = !DISubroutineType(types: !8055)
!8055 = !{!1008, !7999, !7}
!8056 = !DILocalVariable(name: "p", arg: 1, scope: !8052, file: !8053, line: 38, type: !7999)
!8057 = !DILocation(line: 38, column: 59, scope: !8052)
!8058 = !DILocalVariable(name: "size", arg: 2, scope: !8052, file: !8053, line: 38, type: !7)
!8059 = !DILocation(line: 38, column: 75, scope: !8052)
!8060 = !DILocation(line: 40, column: 2, scope: !8052)
!8061 = distinct !DISubprogram(name: "kcsan_check_access", scope: !8062, file: !8062, line: 178, type: !8063, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8062 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8063 = !DISubroutineType(types: !8064)
!8064 = !{null, !7999, !211, !89}
!8065 = !DILocalVariable(name: "ptr", arg: 1, scope: !8061, file: !8062, line: 178, type: !7999)
!8066 = !DILocation(line: 178, column: 60, scope: !8061)
!8067 = !DILocalVariable(name: "size", arg: 2, scope: !8061, file: !8062, line: 178, type: !211)
!8068 = !DILocation(line: 178, column: 72, scope: !8061)
!8069 = !DILocalVariable(name: "type", arg: 3, scope: !8061, file: !8062, line: 179, type: !89)
!8070 = !DILocation(line: 179, column: 15, scope: !8061)
!8071 = !DILocation(line: 179, column: 23, scope: !8061)
!8072 = distinct !DISubprogram(name: "pm_runtime_put_sync", scope: !7934, file: !7934, line: 448, type: !1629, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8073 = !DILocalVariable(name: "dev", arg: 1, scope: !8072, file: !7934, line: 448, type: !100)
!8074 = !DILocation(line: 448, column: 54, scope: !8072)
!8075 = !DILocation(line: 450, column: 27, scope: !8072)
!8076 = !DILocation(line: 450, column: 9, scope: !8072)
!8077 = !DILocation(line: 450, column: 2, scope: !8072)
!8078 = distinct !DISubprogram(name: "pm_runtime_get_noresume", scope: !7934, file: !7934, line: 92, type: !1620, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8079 = !DILocalVariable(name: "v", arg: 1, scope: !8080, file: !7943, line: 93, type: !7946)
!8080 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !7943, file: !7943, line: 93, type: !8081, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8081 = !DISubroutineType(types: !8082)
!8082 = !{null, !7946}
!8083 = !DILocation(line: 93, column: 55, scope: !8080, inlinedAt: !8084)
!8084 = distinct !DILocation(line: 241, column: 2, scope: !8085, inlinedAt: !8086)
!8085 = distinct !DISubprogram(name: "atomic_inc", scope: !7959, file: !7959, line: 238, type: !8081, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8086 = distinct !DILocation(line: 94, column: 2, scope: !8078)
!8087 = !DILocation(line: 99, column: 79, scope: !7995, inlinedAt: !8088)
!8088 = distinct !DILocation(line: 240, column: 2, scope: !8085, inlinedAt: !8086)
!8089 = !DILocation(line: 99, column: 89, scope: !7995, inlinedAt: !8088)
!8090 = !DILocalVariable(name: "v", arg: 1, scope: !8085, file: !7959, line: 238, type: !7946)
!8091 = !DILocation(line: 238, column: 22, scope: !8085, inlinedAt: !8086)
!8092 = !DILocalVariable(name: "dev", arg: 1, scope: !8078, file: !7934, line: 92, type: !100)
!8093 = !DILocation(line: 92, column: 59, scope: !8078)
!8094 = !DILocation(line: 94, column: 14, scope: !8078)
!8095 = !DILocation(line: 94, column: 19, scope: !8078)
!8096 = !DILocation(line: 94, column: 25, scope: !8078)
!8097 = !DILocation(line: 240, column: 31, scope: !8085, inlinedAt: !8086)
!8098 = !DILocation(line: 101, column: 20, scope: !7995, inlinedAt: !8088)
!8099 = !DILocation(line: 101, column: 23, scope: !7995, inlinedAt: !8088)
!8100 = !DILocation(line: 101, column: 2, scope: !7995, inlinedAt: !8088)
!8101 = !DILocation(line: 102, column: 2, scope: !7995, inlinedAt: !8088)
!8102 = !DILocation(line: 241, column: 18, scope: !8085, inlinedAt: !8086)
!8103 = !DILocation(line: 96, column: 16, scope: !8080, inlinedAt: !8084)
!8104 = !DILocation(line: 96, column: 19, scope: !8080, inlinedAt: !8084)
!8105 = !DILocation(line: 95, column: 2, scope: !8080, inlinedAt: !8084)
!8106 = !{i32 -2146544260}
!8107 = !DILocation(line: 95, column: 1, scope: !8078)
!8108 = distinct !DISubprogram(name: "pm_runtime_active", scope: !7934, file: !7934, line: 138, type: !8109, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8109 = !DISubroutineType(types: !8110)
!8110 = !{!1008, !100}
!8111 = !DILocalVariable(name: "dev", arg: 1, scope: !8108, file: !7934, line: 138, type: !100)
!8112 = !DILocation(line: 138, column: 53, scope: !8108)
!8113 = !DILocation(line: 140, column: 9, scope: !8108)
!8114 = !DILocation(line: 140, column: 14, scope: !8108)
!8115 = !DILocation(line: 140, column: 20, scope: !8108)
!8116 = !DILocation(line: 140, column: 35, scope: !8108)
!8117 = !DILocation(line: 141, column: 3, scope: !8108)
!8118 = !DILocation(line: 141, column: 6, scope: !8108)
!8119 = !DILocation(line: 141, column: 11, scope: !8108)
!8120 = !DILocation(line: 141, column: 17, scope: !8108)
!8121 = !DILocation(line: 140, column: 2, scope: !8108)
!8122 = distinct !DISubprogram(name: "pm_runtime_put", scope: !7934, file: !7934, line: 417, type: !1629, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8123 = !DILocalVariable(name: "dev", arg: 1, scope: !8122, file: !7934, line: 417, type: !100)
!8124 = !DILocation(line: 417, column: 49, scope: !8122)
!8125 = !DILocation(line: 419, column: 27, scope: !8122)
!8126 = !DILocation(line: 419, column: 9, scope: !8122)
!8127 = !DILocation(line: 419, column: 2, scope: !8122)
!8128 = distinct !DISubprogram(name: "__clk_lookup_subtree", scope: !3, file: !3, line: 294, type: !8129, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8129 = !DISubroutineType(types: !8130)
!8130 = !{!72, !76, !72}
!8131 = !DILocalVariable(name: "name", arg: 1, scope: !8128, file: !3, line: 294, type: !76)
!8132 = !DILocation(line: 294, column: 58, scope: !8128)
!8133 = !DILocalVariable(name: "core", arg: 2, scope: !8128, file: !3, line: 295, type: !72)
!8134 = !DILocation(line: 295, column: 28, scope: !8128)
!8135 = !DILocalVariable(name: "child", scope: !8128, file: !3, line: 297, type: !72)
!8136 = !DILocation(line: 297, column: 19, scope: !8128)
!8137 = !DILocalVariable(name: "ret", scope: !8128, file: !3, line: 298, type: !72)
!8138 = !DILocation(line: 298, column: 19, scope: !8128)
!8139 = !DILocation(line: 300, column: 14, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 300, column: 6)
!8141 = !DILocation(line: 300, column: 20, scope: !8140)
!8142 = !DILocation(line: 300, column: 26, scope: !8140)
!8143 = !DILocation(line: 300, column: 7, scope: !8140)
!8144 = !DILocation(line: 300, column: 6, scope: !8128)
!8145 = !DILocation(line: 301, column: 10, scope: !8140)
!8146 = !DILocation(line: 301, column: 3, scope: !8140)
!8147 = !DILocalVariable(name: "____ptr", scope: !8148, file: !3, line: 303, type: !705)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 303, column: 2)
!8149 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 303, column: 2)
!8150 = !DILocation(line: 303, column: 2, scope: !8148)
!8151 = !DILocalVariable(name: "__mptr", scope: !8152, file: !3, line: 303, type: !71)
!8152 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 303, column: 2)
!8153 = !DILocation(line: 303, column: 2, scope: !8152)
!8154 = !DILocation(line: 303, column: 2, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 303, column: 2)
!8156 = !DILocation(line: 303, column: 2, scope: !8149)
!8157 = !DILocation(line: 303, column: 2, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 303, column: 2)
!8159 = !DILocation(line: 304, column: 30, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 303, column: 59)
!8161 = !DILocation(line: 304, column: 36, scope: !8160)
!8162 = !DILocation(line: 304, column: 9, scope: !8160)
!8163 = !DILocation(line: 304, column: 7, scope: !8160)
!8164 = !DILocation(line: 305, column: 7, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 305, column: 7)
!8166 = !DILocation(line: 305, column: 7, scope: !8160)
!8167 = !DILocation(line: 306, column: 11, scope: !8165)
!8168 = !DILocation(line: 306, column: 4, scope: !8165)
!8169 = !DILocation(line: 307, column: 2, scope: !8160)
!8170 = !DILocalVariable(name: "____ptr", scope: !8171, file: !3, line: 303, type: !705)
!8171 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 303, column: 2)
!8172 = !DILocation(line: 303, column: 2, scope: !8171)
!8173 = !DILocalVariable(name: "__mptr", scope: !8174, file: !3, line: 303, type: !71)
!8174 = distinct !DILexicalBlock(scope: !8171, file: !3, line: 303, column: 2)
!8175 = !DILocation(line: 303, column: 2, scope: !8174)
!8176 = !DILocation(line: 303, column: 2, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 303, column: 2)
!8178 = distinct !{!8178, !8156, !8179}
!8179 = !DILocation(line: 307, column: 2, scope: !8149)
!8180 = !DILocation(line: 309, column: 2, scope: !8128)
!8181 = !DILocation(line: 310, column: 1, scope: !8128)
!8182 = distinct !DISubprogram(name: "clk_core_unprepare", scope: !3, file: !3, line: 803, type: !3094, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8183 = !DILocalVariable(name: "core", arg: 1, scope: !8182, file: !3, line: 803, type: !72)
!8184 = !DILocation(line: 803, column: 49, scope: !8182)
!8185 = !DILocation(line: 805, column: 2, scope: !8182)
!8186 = !DILocation(line: 805, column: 2, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 805, column: 2)
!8188 = !DILocation(line: 807, column: 7, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 807, column: 6)
!8190 = !DILocation(line: 807, column: 6, scope: !8182)
!8191 = !DILocation(line: 808, column: 3, scope: !8189)
!8192 = !DILocalVariable(name: "__ret_warn_on", scope: !8193, file: !3, line: 810, type: !89)
!8193 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 810, column: 6)
!8194 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 810, column: 6)
!8195 = !DILocation(line: 810, column: 6, scope: !8193)
!8196 = !DILocation(line: 810, column: 6, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 810, column: 6)
!8198 = !DILocation(line: 810, column: 6, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 810, column: 6)
!8200 = !DILocation(line: 810, column: 6, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 810, column: 6)
!8202 = !DILocation(line: 810, column: 6, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 810, column: 6)
!8204 = !DILocation(line: 810, column: 6, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 810, column: 6)
!8206 = !DILocation(line: 810, column: 6, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 810, column: 6)
!8208 = !{i32 -2142999009, i32 -2142998980, i32 -2142998934, i32 -2142998876, i32 -2142998822, i32 -2142998768, i32 -2142998713, i32 -2142998682}
!8209 = !DILocation(line: 810, column: 6, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 810, column: 6)
!8211 = !{i32 -2142998272, i32 -2142998265, i32 -2142998213, i32 -2142998182, i32 -2142998152}
!8212 = !DILocation(line: 810, column: 6, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 810, column: 6)
!8214 = !DILocation(line: 810, column: 6, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 810, column: 6)
!8216 = !DILocation(line: 810, column: 6, scope: !8194)
!8217 = !DILocation(line: 810, column: 6, scope: !8182)
!8218 = !DILocation(line: 812, column: 3, scope: !8194)
!8219 = !DILocalVariable(name: "__ret_warn_on", scope: !8220, file: !3, line: 814, type: !89)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 814, column: 6)
!8221 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 814, column: 6)
!8222 = !DILocation(line: 814, column: 6, scope: !8220)
!8223 = !DILocation(line: 0, scope: !8220)
!8224 = !DILocation(line: 814, column: 6, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 814, column: 6)
!8226 = !DILocation(line: 814, column: 6, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 814, column: 6)
!8228 = !DILocation(line: 814, column: 6, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 814, column: 6)
!8230 = !DILocation(line: 814, column: 6, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 814, column: 6)
!8232 = !DILocation(line: 814, column: 6, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 814, column: 6)
!8234 = !DILocation(line: 814, column: 6, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 814, column: 6)
!8236 = !{i32 -2142997136, i32 -2142997107, i32 -2142997061, i32 -2142997003, i32 -2142996949, i32 -2142996895, i32 -2142996840, i32 -2142996809}
!8237 = !DILocation(line: 814, column: 6, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 814, column: 6)
!8239 = !{i32 -2142996399, i32 -2142996392, i32 -2142996340, i32 -2142996309, i32 -2142996279}
!8240 = !DILocation(line: 814, column: 6, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 814, column: 6)
!8242 = !DILocation(line: 814, column: 6, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 814, column: 6)
!8244 = !DILocation(line: 814, column: 6, scope: !8221)
!8245 = !DILocation(line: 814, column: 6, scope: !8182)
!8246 = !DILocation(line: 816, column: 3, scope: !8221)
!8247 = !DILocation(line: 818, column: 6, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 818, column: 6)
!8249 = !DILocation(line: 818, column: 12, scope: !8248)
!8250 = !DILocation(line: 818, column: 18, scope: !8248)
!8251 = !DILocation(line: 818, column: 6, scope: !8182)
!8252 = !DILocation(line: 819, column: 27, scope: !8248)
!8253 = !DILocation(line: 819, column: 3, scope: !8248)
!8254 = !DILocation(line: 821, column: 8, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 821, column: 6)
!8256 = !DILocation(line: 821, column: 14, scope: !8255)
!8257 = !DILocation(line: 821, column: 6, scope: !8255)
!8258 = !DILocation(line: 821, column: 28, scope: !8255)
!8259 = !DILocation(line: 821, column: 6, scope: !8182)
!8260 = !DILocation(line: 822, column: 3, scope: !8255)
!8261 = !DILocalVariable(name: "__ret_warn_on", scope: !8262, file: !3, line: 824, type: !89)
!8262 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 824, column: 2)
!8263 = !DILocation(line: 824, column: 2, scope: !8262)
!8264 = !DILocation(line: 824, column: 2, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8262, file: !3, line: 824, column: 2)
!8266 = !DILocation(line: 824, column: 2, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8265, file: !3, line: 824, column: 2)
!8268 = !DILocation(line: 824, column: 2, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 824, column: 2)
!8270 = !DILocation(line: 824, column: 2, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 824, column: 2)
!8272 = !DILocation(line: 824, column: 2, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 824, column: 2)
!8274 = !DILocation(line: 824, column: 2, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 824, column: 2)
!8276 = !{i32 -2142995315, i32 -2142995286, i32 -2142995240, i32 -2142995182, i32 -2142995128, i32 -2142995074, i32 -2142995019, i32 -2142994988}
!8277 = !DILocation(line: 824, column: 2, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 824, column: 2)
!8279 = !{i32 -2142994578, i32 -2142994571, i32 -2142994519, i32 -2142994488, i32 -2142994458}
!8280 = !DILocation(line: 824, column: 2, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 824, column: 2)
!8282 = !DILocation(line: 824, column: 2, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 824, column: 2)
!8284 = !DILocation(line: 826, column: 22, scope: !8182)
!8285 = !DILocation(line: 826, column: 2, scope: !8182)
!8286 = !DILocation(line: 828, column: 6, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 828, column: 6)
!8288 = !DILocation(line: 828, column: 12, scope: !8287)
!8289 = !DILocation(line: 828, column: 17, scope: !8287)
!8290 = !DILocation(line: 828, column: 6, scope: !8182)
!8291 = !DILocation(line: 829, column: 3, scope: !8287)
!8292 = !DILocation(line: 829, column: 9, scope: !8287)
!8293 = !DILocation(line: 829, column: 14, scope: !8287)
!8294 = !DILocation(line: 829, column: 24, scope: !8287)
!8295 = !DILocation(line: 829, column: 30, scope: !8287)
!8296 = !DILocation(line: 831, column: 21, scope: !8182)
!8297 = !DILocation(line: 831, column: 2, scope: !8182)
!8298 = !DILocation(line: 833, column: 31, scope: !8182)
!8299 = !DILocation(line: 833, column: 2, scope: !8182)
!8300 = !DILocation(line: 834, column: 21, scope: !8182)
!8301 = !DILocation(line: 834, column: 27, scope: !8182)
!8302 = !DILocation(line: 834, column: 2, scope: !8182)
!8303 = !DILocation(line: 835, column: 1, scope: !8182)
!8304 = distinct !DISubprogram(name: "trace_clk_unprepare", scope: !8305, file: !8305, line: 74, type: !3094, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8305 = !DIFile(filename: "./include/trace/events/clk.h", directory: "/home/lizy2001/genbc/linux")
!8306 = !DILocalVariable(name: "core", arg: 1, scope: !8304, file: !8305, line: 74, type: !72)
!8307 = !DILocation(line: 74, column: 1, scope: !8304)
!8308 = distinct !DISubprogram(name: "trace_clk_unprepare_complete", scope: !8305, file: !8305, line: 81, type: !3094, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8309 = !DILocalVariable(name: "core", arg: 1, scope: !8308, file: !8305, line: 81, type: !72)
!8310 = !DILocation(line: 81, column: 1, scope: !8308)
!8311 = distinct !DISubprogram(name: "clk_core_prepare", scope: !3, file: !3, line: 864, type: !3273, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8312 = !DILocalVariable(name: "core", arg: 1, scope: !8311, file: !3, line: 864, type: !72)
!8313 = !DILocation(line: 864, column: 46, scope: !8311)
!8314 = !DILocalVariable(name: "ret", scope: !8311, file: !3, line: 866, type: !89)
!8315 = !DILocation(line: 866, column: 6, scope: !8311)
!8316 = !DILocation(line: 868, column: 2, scope: !8311)
!8317 = !DILocation(line: 868, column: 2, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 868, column: 2)
!8319 = !DILocation(line: 870, column: 7, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 870, column: 6)
!8321 = !DILocation(line: 870, column: 6, scope: !8311)
!8322 = !DILocation(line: 871, column: 3, scope: !8320)
!8323 = !DILocation(line: 873, column: 6, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 873, column: 6)
!8325 = !DILocation(line: 873, column: 12, scope: !8324)
!8326 = !DILocation(line: 873, column: 26, scope: !8324)
!8327 = !DILocation(line: 873, column: 6, scope: !8311)
!8328 = !DILocation(line: 874, column: 28, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 873, column: 32)
!8330 = !DILocation(line: 874, column: 9, scope: !8329)
!8331 = !DILocation(line: 874, column: 7, scope: !8329)
!8332 = !DILocation(line: 875, column: 7, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 875, column: 7)
!8334 = !DILocation(line: 875, column: 7, scope: !8329)
!8335 = !DILocation(line: 876, column: 11, scope: !8333)
!8336 = !DILocation(line: 876, column: 4, scope: !8333)
!8337 = !DILocation(line: 878, column: 26, scope: !8329)
!8338 = !DILocation(line: 878, column: 32, scope: !8329)
!8339 = !DILocation(line: 878, column: 9, scope: !8329)
!8340 = !DILocation(line: 878, column: 7, scope: !8329)
!8341 = !DILocation(line: 879, column: 7, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 879, column: 7)
!8343 = !DILocation(line: 879, column: 7, scope: !8329)
!8344 = !DILocation(line: 880, column: 4, scope: !8342)
!8345 = !DILocation(line: 882, column: 21, scope: !8329)
!8346 = !DILocation(line: 882, column: 3, scope: !8329)
!8347 = !DILocation(line: 884, column: 7, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 884, column: 7)
!8349 = !DILocation(line: 884, column: 13, scope: !8348)
!8350 = !DILocation(line: 884, column: 18, scope: !8348)
!8351 = !DILocation(line: 884, column: 7, scope: !8329)
!8352 = !DILocation(line: 885, column: 10, scope: !8348)
!8353 = !DILocation(line: 885, column: 16, scope: !8348)
!8354 = !DILocation(line: 885, column: 21, scope: !8348)
!8355 = !DILocation(line: 885, column: 29, scope: !8348)
!8356 = !DILocation(line: 885, column: 35, scope: !8348)
!8357 = !DILocation(line: 885, column: 8, scope: !8348)
!8358 = !DILocation(line: 885, column: 4, scope: !8348)
!8359 = !DILocation(line: 887, column: 30, scope: !8329)
!8360 = !DILocation(line: 887, column: 3, scope: !8329)
!8361 = !DILocation(line: 889, column: 7, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 889, column: 7)
!8363 = !DILocation(line: 889, column: 7, scope: !8329)
!8364 = !DILocation(line: 890, column: 4, scope: !8362)
!8365 = !DILocation(line: 891, column: 2, scope: !8329)
!8366 = !DILocation(line: 893, column: 2, scope: !8311)
!8367 = !DILocation(line: 893, column: 8, scope: !8311)
!8368 = !DILocation(line: 893, column: 21, scope: !8311)
!8369 = !DILocation(line: 902, column: 6, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 902, column: 6)
!8371 = !DILocation(line: 902, column: 12, scope: !8370)
!8372 = !DILocation(line: 902, column: 18, scope: !8370)
!8373 = !DILocation(line: 902, column: 6, scope: !8311)
!8374 = !DILocation(line: 903, column: 25, scope: !8370)
!8375 = !DILocation(line: 903, column: 3, scope: !8370)
!8376 = !DILocation(line: 905, column: 2, scope: !8311)
!8377 = !DILabel(scope: !8311, name: "unprepare", file: !3, line: 906)
!8378 = !DILocation(line: 906, column: 1, scope: !8311)
!8379 = !DILocation(line: 907, column: 21, scope: !8311)
!8380 = !DILocation(line: 907, column: 27, scope: !8311)
!8381 = !DILocation(line: 907, column: 2, scope: !8311)
!8382 = !DILabel(scope: !8311, name: "runtime_put", file: !3, line: 908)
!8383 = !DILocation(line: 908, column: 1, scope: !8311)
!8384 = !DILocation(line: 909, column: 21, scope: !8311)
!8385 = !DILocation(line: 909, column: 2, scope: !8311)
!8386 = !DILocation(line: 910, column: 9, scope: !8311)
!8387 = !DILocation(line: 910, column: 2, scope: !8311)
!8388 = !DILocation(line: 911, column: 1, scope: !8311)
!8389 = distinct !DISubprogram(name: "trace_clk_prepare", scope: !8305, file: !8305, line: 60, type: !3094, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8390 = !DILocalVariable(name: "core", arg: 1, scope: !8389, file: !8305, line: 60, type: !72)
!8391 = !DILocation(line: 60, column: 1, scope: !8389)
!8392 = distinct !DISubprogram(name: "trace_clk_prepare_complete", scope: !8305, file: !8305, line: 67, type: !3094, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8393 = !DILocalVariable(name: "core", arg: 1, scope: !8392, file: !8305, line: 67, type: !72)
!8394 = !DILocation(line: 67, column: 1, scope: !8392)
!8395 = distinct !DISubprogram(name: "clk_core_disable", scope: !3, file: !3, line: 945, type: !3094, scopeLine: 946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8396 = !DILocalVariable(name: "core", arg: 1, scope: !8395, file: !3, line: 945, type: !72)
!8397 = !DILocation(line: 945, column: 47, scope: !8395)
!8398 = !DILocation(line: 947, column: 2, scope: !8395)
!8399 = !DILocation(line: 947, column: 2, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 947, column: 2)
!8401 = !DILocation(line: 949, column: 7, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 949, column: 6)
!8403 = !DILocation(line: 949, column: 6, scope: !8395)
!8404 = !DILocation(line: 950, column: 3, scope: !8402)
!8405 = !DILocalVariable(name: "__ret_warn_on", scope: !8406, file: !3, line: 952, type: !89)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 952, column: 6)
!8407 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 952, column: 6)
!8408 = !DILocation(line: 952, column: 6, scope: !8406)
!8409 = !DILocation(line: 952, column: 6, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8406, file: !3, line: 952, column: 6)
!8411 = !DILocation(line: 952, column: 6, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 952, column: 6)
!8413 = !DILocation(line: 952, column: 6, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 952, column: 6)
!8415 = !DILocation(line: 952, column: 6, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 952, column: 6)
!8417 = !DILocation(line: 952, column: 6, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 952, column: 6)
!8419 = !DILocation(line: 952, column: 6, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 952, column: 6)
!8421 = !{i32 -2142993234, i32 -2142993205, i32 -2142993159, i32 -2142993101, i32 -2142993047, i32 -2142992993, i32 -2142992938, i32 -2142992907}
!8422 = !DILocation(line: 952, column: 6, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 952, column: 6)
!8424 = !{i32 -2142992497, i32 -2142992490, i32 -2142992438, i32 -2142992407, i32 -2142992377}
!8425 = !DILocation(line: 952, column: 6, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 952, column: 6)
!8427 = !DILocation(line: 952, column: 6, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 952, column: 6)
!8429 = !DILocation(line: 952, column: 6, scope: !8407)
!8430 = !DILocation(line: 952, column: 6, scope: !8395)
!8431 = !DILocation(line: 953, column: 3, scope: !8407)
!8432 = !DILocalVariable(name: "__ret_warn_on", scope: !8433, file: !3, line: 955, type: !89)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 955, column: 6)
!8434 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 955, column: 6)
!8435 = !DILocation(line: 955, column: 6, scope: !8433)
!8436 = !DILocation(line: 0, scope: !8433)
!8437 = !DILocation(line: 955, column: 6, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 955, column: 6)
!8439 = !DILocation(line: 955, column: 6, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 955, column: 6)
!8441 = !DILocation(line: 955, column: 6, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 955, column: 6)
!8443 = !DILocation(line: 955, column: 6, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 955, column: 6)
!8445 = !DILocation(line: 955, column: 6, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8444, file: !3, line: 955, column: 6)
!8447 = !DILocation(line: 955, column: 6, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8444, file: !3, line: 955, column: 6)
!8449 = !{i32 -2142991366, i32 -2142991337, i32 -2142991291, i32 -2142991233, i32 -2142991179, i32 -2142991125, i32 -2142991070, i32 -2142991039}
!8450 = !DILocation(line: 955, column: 6, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8444, file: !3, line: 955, column: 6)
!8452 = !{i32 -2142990629, i32 -2142990622, i32 -2142990570, i32 -2142990539, i32 -2142990509}
!8453 = !DILocation(line: 955, column: 6, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8444, file: !3, line: 955, column: 6)
!8455 = !DILocation(line: 955, column: 6, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 955, column: 6)
!8457 = !DILocation(line: 955, column: 6, scope: !8434)
!8458 = !DILocation(line: 955, column: 6, scope: !8395)
!8459 = !DILocation(line: 957, column: 3, scope: !8434)
!8460 = !DILocation(line: 959, column: 8, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 959, column: 6)
!8462 = !DILocation(line: 959, column: 14, scope: !8461)
!8463 = !DILocation(line: 959, column: 6, scope: !8461)
!8464 = !DILocation(line: 959, column: 27, scope: !8461)
!8465 = !DILocation(line: 959, column: 6, scope: !8395)
!8466 = !DILocation(line: 960, column: 3, scope: !8461)
!8467 = !DILocation(line: 962, column: 28, scope: !8395)
!8468 = !DILocation(line: 962, column: 2, scope: !8395)
!8469 = !DILocation(line: 964, column: 6, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 964, column: 6)
!8471 = !DILocation(line: 964, column: 12, scope: !8470)
!8472 = !DILocation(line: 964, column: 17, scope: !8470)
!8473 = !DILocation(line: 964, column: 6, scope: !8395)
!8474 = !DILocation(line: 965, column: 3, scope: !8470)
!8475 = !DILocation(line: 965, column: 9, scope: !8470)
!8476 = !DILocation(line: 965, column: 14, scope: !8470)
!8477 = !DILocation(line: 965, column: 22, scope: !8470)
!8478 = !DILocation(line: 965, column: 28, scope: !8470)
!8479 = !DILocation(line: 967, column: 37, scope: !8395)
!8480 = !DILocation(line: 967, column: 2, scope: !8395)
!8481 = !DILocation(line: 969, column: 19, scope: !8395)
!8482 = !DILocation(line: 969, column: 25, scope: !8395)
!8483 = !DILocation(line: 969, column: 2, scope: !8395)
!8484 = !DILocation(line: 970, column: 1, scope: !8395)
!8485 = distinct !DISubprogram(name: "trace_clk_disable_rcuidle", scope: !8305, file: !8305, line: 46, type: !3094, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8486 = !DILocalVariable(name: "core", arg: 1, scope: !8485, file: !8305, line: 46, type: !72)
!8487 = !DILocation(line: 46, column: 1, scope: !8485)
!8488 = distinct !DISubprogram(name: "trace_clk_disable_complete_rcuidle", scope: !8305, file: !8305, line: 53, type: !3094, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8489 = !DILocalVariable(name: "core", arg: 1, scope: !8488, file: !8305, line: 53, type: !72)
!8490 = !DILocation(line: 53, column: 1, scope: !8488)
!8491 = distinct !DISubprogram(name: "clk_core_enable", scope: !3, file: !3, line: 1002, type: !3273, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8492 = !DILocalVariable(name: "core", arg: 1, scope: !8491, file: !3, line: 1002, type: !72)
!8493 = !DILocation(line: 1002, column: 45, scope: !8491)
!8494 = !DILocalVariable(name: "ret", scope: !8491, file: !3, line: 1004, type: !89)
!8495 = !DILocation(line: 1004, column: 6, scope: !8491)
!8496 = !DILocation(line: 1006, column: 2, scope: !8491)
!8497 = !DILocation(line: 1006, column: 2, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 1006, column: 2)
!8499 = !DILocation(line: 1008, column: 7, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 1008, column: 6)
!8501 = !DILocation(line: 1008, column: 6, scope: !8491)
!8502 = !DILocation(line: 1009, column: 3, scope: !8500)
!8503 = !DILocalVariable(name: "__ret_warn_on", scope: !8504, file: !3, line: 1011, type: !89)
!8504 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 1011, column: 6)
!8505 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 1011, column: 6)
!8506 = !DILocation(line: 1011, column: 6, scope: !8504)
!8507 = !DILocation(line: 1011, column: 6, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8504, file: !3, line: 1011, column: 6)
!8509 = !DILocation(line: 1011, column: 6, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 1011, column: 6)
!8511 = !DILocation(line: 1011, column: 6, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 1011, column: 6)
!8513 = !DILocation(line: 1011, column: 6, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 1011, column: 6)
!8515 = !DILocation(line: 1011, column: 6, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 1011, column: 6)
!8517 = !DILocation(line: 1011, column: 6, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 1011, column: 6)
!8519 = !{i32 -2142989495, i32 -2142989466, i32 -2142989420, i32 -2142989362, i32 -2142989308, i32 -2142989254, i32 -2142989199, i32 -2142989168}
!8520 = !DILocation(line: 1011, column: 6, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 1011, column: 6)
!8522 = !{i32 -2142988757, i32 -2142988750, i32 -2142988698, i32 -2142988667, i32 -2142988637}
!8523 = !DILocation(line: 1011, column: 6, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 1011, column: 6)
!8525 = !DILocation(line: 1011, column: 6, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 1011, column: 6)
!8527 = !DILocation(line: 1011, column: 6, scope: !8505)
!8528 = !DILocation(line: 1011, column: 6, scope: !8491)
!8529 = !DILocation(line: 1013, column: 3, scope: !8505)
!8530 = !DILocation(line: 1015, column: 6, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 1015, column: 6)
!8532 = !DILocation(line: 1015, column: 12, scope: !8531)
!8533 = !DILocation(line: 1015, column: 25, scope: !8531)
!8534 = !DILocation(line: 1015, column: 6, scope: !8491)
!8535 = !DILocation(line: 1016, column: 25, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 1015, column: 31)
!8537 = !DILocation(line: 1016, column: 31, scope: !8536)
!8538 = !DILocation(line: 1016, column: 9, scope: !8536)
!8539 = !DILocation(line: 1016, column: 7, scope: !8536)
!8540 = !DILocation(line: 1018, column: 7, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 1018, column: 7)
!8542 = !DILocation(line: 1018, column: 7, scope: !8536)
!8543 = !DILocation(line: 1019, column: 11, scope: !8541)
!8544 = !DILocation(line: 1019, column: 4, scope: !8541)
!8545 = !DILocation(line: 1021, column: 28, scope: !8536)
!8546 = !DILocation(line: 1021, column: 3, scope: !8536)
!8547 = !DILocation(line: 1023, column: 7, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 1023, column: 7)
!8549 = !DILocation(line: 1023, column: 13, scope: !8548)
!8550 = !DILocation(line: 1023, column: 18, scope: !8548)
!8551 = !DILocation(line: 1023, column: 7, scope: !8536)
!8552 = !DILocation(line: 1024, column: 10, scope: !8548)
!8553 = !DILocation(line: 1024, column: 16, scope: !8548)
!8554 = !DILocation(line: 1024, column: 21, scope: !8548)
!8555 = !DILocation(line: 1024, column: 28, scope: !8548)
!8556 = !DILocation(line: 1024, column: 34, scope: !8548)
!8557 = !DILocation(line: 1024, column: 8, scope: !8548)
!8558 = !DILocation(line: 1024, column: 4, scope: !8548)
!8559 = !DILocation(line: 1026, column: 37, scope: !8536)
!8560 = !DILocation(line: 1026, column: 3, scope: !8536)
!8561 = !DILocation(line: 1028, column: 7, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 1028, column: 7)
!8563 = !DILocation(line: 1028, column: 7, scope: !8536)
!8564 = !DILocation(line: 1029, column: 21, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 1028, column: 12)
!8566 = !DILocation(line: 1029, column: 27, scope: !8565)
!8567 = !DILocation(line: 1029, column: 4, scope: !8565)
!8568 = !DILocation(line: 1030, column: 11, scope: !8565)
!8569 = !DILocation(line: 1030, column: 4, scope: !8565)
!8570 = !DILocation(line: 1032, column: 2, scope: !8536)
!8571 = !DILocation(line: 1034, column: 2, scope: !8491)
!8572 = !DILocation(line: 1034, column: 8, scope: !8491)
!8573 = !DILocation(line: 1034, column: 20, scope: !8491)
!8574 = !DILocation(line: 1035, column: 2, scope: !8491)
!8575 = !DILocation(line: 1036, column: 1, scope: !8491)
!8576 = distinct !DISubprogram(name: "trace_clk_enable_rcuidle", scope: !8305, file: !8305, line: 32, type: !3094, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8577 = !DILocalVariable(name: "core", arg: 1, scope: !8576, file: !8305, line: 32, type: !72)
!8578 = !DILocation(line: 32, column: 1, scope: !8576)
!8579 = distinct !DISubprogram(name: "trace_clk_enable_complete_rcuidle", scope: !8305, file: !8305, line: 39, type: !3094, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8580 = !DILocalVariable(name: "core", arg: 1, scope: !8579, file: !8305, line: 39, type: !72)
!8581 = !DILocation(line: 39, column: 1, scope: !8579)
!8582 = distinct !DISubprogram(name: "clk_disable_unused_subtree", scope: !3, file: !3, line: 1218, type: !3094, scopeLine: 1219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8583 = !DILocalVariable(name: "core", arg: 1, scope: !8582, file: !3, line: 1218, type: !72)
!8584 = !DILocation(line: 1218, column: 64, scope: !8582)
!8585 = !DILocalVariable(name: "child", scope: !8582, file: !3, line: 1220, type: !72)
!8586 = !DILocation(line: 1220, column: 19, scope: !8582)
!8587 = !DILocalVariable(name: "flags", scope: !8582, file: !3, line: 1221, type: !214)
!8588 = !DILocation(line: 1221, column: 16, scope: !8582)
!8589 = !DILocation(line: 1223, column: 2, scope: !8582)
!8590 = !DILocation(line: 1223, column: 2, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1223, column: 2)
!8592 = !DILocalVariable(name: "____ptr", scope: !8593, file: !3, line: 1225, type: !705)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 1225, column: 2)
!8594 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1225, column: 2)
!8595 = !DILocation(line: 1225, column: 2, scope: !8593)
!8596 = !DILocalVariable(name: "__mptr", scope: !8597, file: !3, line: 1225, type: !71)
!8597 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 1225, column: 2)
!8598 = !DILocation(line: 1225, column: 2, scope: !8597)
!8599 = !DILocation(line: 1225, column: 2, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 1225, column: 2)
!8601 = !DILocation(line: 1225, column: 2, scope: !8594)
!8602 = !DILocation(line: 1225, column: 2, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 1225, column: 2)
!8604 = !DILocation(line: 1226, column: 30, scope: !8603)
!8605 = !DILocation(line: 1226, column: 3, scope: !8603)
!8606 = !DILocalVariable(name: "____ptr", scope: !8607, file: !3, line: 1225, type: !705)
!8607 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 1225, column: 2)
!8608 = !DILocation(line: 1225, column: 2, scope: !8607)
!8609 = !DILocalVariable(name: "__mptr", scope: !8610, file: !3, line: 1225, type: !71)
!8610 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1225, column: 2)
!8611 = !DILocation(line: 1225, column: 2, scope: !8610)
!8612 = !DILocation(line: 1225, column: 2, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 1225, column: 2)
!8614 = distinct !{!8614, !8601, !8615}
!8615 = !DILocation(line: 1226, column: 35, scope: !8594)
!8616 = !DILocation(line: 1228, column: 6, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1228, column: 6)
!8618 = !DILocation(line: 1228, column: 12, scope: !8617)
!8619 = !DILocation(line: 1228, column: 18, scope: !8617)
!8620 = !DILocation(line: 1228, column: 6, scope: !8582)
!8621 = !DILocation(line: 1229, column: 27, scope: !8617)
!8622 = !DILocation(line: 1229, column: 33, scope: !8617)
!8623 = !DILocation(line: 1229, column: 3, scope: !8617)
!8624 = !DILocation(line: 1231, column: 25, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1231, column: 6)
!8626 = !DILocation(line: 1231, column: 6, scope: !8625)
!8627 = !DILocation(line: 1231, column: 6, scope: !8582)
!8628 = !DILocation(line: 1232, column: 3, scope: !8625)
!8629 = !DILocation(line: 1234, column: 10, scope: !8582)
!8630 = !DILocation(line: 1234, column: 8, scope: !8582)
!8631 = !DILocation(line: 1236, column: 6, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1236, column: 6)
!8633 = !DILocation(line: 1236, column: 12, scope: !8632)
!8634 = !DILocation(line: 1236, column: 6, scope: !8582)
!8635 = !DILocation(line: 1237, column: 3, scope: !8632)
!8636 = !DILocation(line: 1239, column: 6, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1239, column: 6)
!8638 = !DILocation(line: 1239, column: 12, scope: !8637)
!8639 = !DILocation(line: 1239, column: 18, scope: !8637)
!8640 = !DILocation(line: 1239, column: 6, scope: !8582)
!8641 = !DILocation(line: 1240, column: 3, scope: !8637)
!8642 = !DILocation(line: 1247, column: 26, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1247, column: 6)
!8644 = !DILocation(line: 1247, column: 6, scope: !8643)
!8645 = !DILocation(line: 1247, column: 6, scope: !8582)
!8646 = !DILocation(line: 1248, column: 21, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 1247, column: 33)
!8648 = !DILocation(line: 1248, column: 3, scope: !8647)
!8649 = !DILocation(line: 1249, column: 7, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 1249, column: 7)
!8651 = !DILocation(line: 1249, column: 13, scope: !8650)
!8652 = !DILocation(line: 1249, column: 18, scope: !8650)
!8653 = !DILocation(line: 1249, column: 7, scope: !8647)
!8654 = !DILocation(line: 1250, column: 4, scope: !8650)
!8655 = !DILocation(line: 1250, column: 10, scope: !8650)
!8656 = !DILocation(line: 1250, column: 15, scope: !8650)
!8657 = !DILocation(line: 1250, column: 30, scope: !8650)
!8658 = !DILocation(line: 1250, column: 36, scope: !8650)
!8659 = !DILocation(line: 1251, column: 12, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 1251, column: 12)
!8661 = !DILocation(line: 1251, column: 18, scope: !8660)
!8662 = !DILocation(line: 1251, column: 23, scope: !8660)
!8663 = !DILocation(line: 1251, column: 12, scope: !8650)
!8664 = !DILocation(line: 1252, column: 4, scope: !8660)
!8665 = !DILocation(line: 1252, column: 10, scope: !8660)
!8666 = !DILocation(line: 1252, column: 15, scope: !8660)
!8667 = !DILocation(line: 1252, column: 23, scope: !8660)
!8668 = !DILocation(line: 1252, column: 29, scope: !8660)
!8669 = !DILocation(line: 1253, column: 30, scope: !8647)
!8670 = !DILocation(line: 1253, column: 3, scope: !8647)
!8671 = !DILocation(line: 1254, column: 2, scope: !8647)
!8672 = !DILocation(line: 1247, column: 30, scope: !8643)
!8673 = !DILabel(scope: !8582, name: "unlock_out", file: !3, line: 1256)
!8674 = !DILocation(line: 1256, column: 1, scope: !8582)
!8675 = !DILocation(line: 1257, column: 20, scope: !8582)
!8676 = !DILocation(line: 1257, column: 2, scope: !8582)
!8677 = !DILocation(line: 1258, column: 21, scope: !8582)
!8678 = !DILocation(line: 1258, column: 2, scope: !8582)
!8679 = !DILabel(scope: !8582, name: "unprepare_out", file: !3, line: 1259)
!8680 = !DILocation(line: 1259, column: 1, scope: !8582)
!8681 = !DILocation(line: 1260, column: 6, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1260, column: 6)
!8683 = !DILocation(line: 1260, column: 12, scope: !8682)
!8684 = !DILocation(line: 1260, column: 18, scope: !8682)
!8685 = !DILocation(line: 1260, column: 6, scope: !8582)
!8686 = !DILocation(line: 1261, column: 30, scope: !8682)
!8687 = !DILocation(line: 1261, column: 36, scope: !8682)
!8688 = !DILocation(line: 1261, column: 3, scope: !8682)
!8689 = !DILocation(line: 1262, column: 1, scope: !8582)
!8690 = distinct !DISubprogram(name: "clk_unprepare_unused_subtree", scope: !3, file: !3, line: 1188, type: !3094, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8691 = !DILocalVariable(name: "core", arg: 1, scope: !8690, file: !3, line: 1188, type: !72)
!8692 = !DILocation(line: 1188, column: 66, scope: !8690)
!8693 = !DILocalVariable(name: "child", scope: !8690, file: !3, line: 1190, type: !72)
!8694 = !DILocation(line: 1190, column: 19, scope: !8690)
!8695 = !DILocation(line: 1192, column: 2, scope: !8690)
!8696 = !DILocation(line: 1192, column: 2, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 1192, column: 2)
!8698 = !DILocalVariable(name: "____ptr", scope: !8699, file: !3, line: 1194, type: !705)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 1194, column: 2)
!8700 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 1194, column: 2)
!8701 = !DILocation(line: 1194, column: 2, scope: !8699)
!8702 = !DILocalVariable(name: "__mptr", scope: !8703, file: !3, line: 1194, type: !71)
!8703 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 1194, column: 2)
!8704 = !DILocation(line: 1194, column: 2, scope: !8703)
!8705 = !DILocation(line: 1194, column: 2, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 1194, column: 2)
!8707 = !DILocation(line: 1194, column: 2, scope: !8700)
!8708 = !DILocation(line: 1194, column: 2, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 1194, column: 2)
!8710 = !DILocation(line: 1195, column: 32, scope: !8709)
!8711 = !DILocation(line: 1195, column: 3, scope: !8709)
!8712 = !DILocalVariable(name: "____ptr", scope: !8713, file: !3, line: 1194, type: !705)
!8713 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 1194, column: 2)
!8714 = !DILocation(line: 1194, column: 2, scope: !8713)
!8715 = !DILocalVariable(name: "__mptr", scope: !8716, file: !3, line: 1194, type: !71)
!8716 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 1194, column: 2)
!8717 = !DILocation(line: 1194, column: 2, scope: !8716)
!8718 = !DILocation(line: 1194, column: 2, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1194, column: 2)
!8720 = distinct !{!8720, !8707, !8721}
!8721 = !DILocation(line: 1195, column: 37, scope: !8700)
!8722 = !DILocation(line: 1197, column: 6, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 1197, column: 6)
!8724 = !DILocation(line: 1197, column: 12, scope: !8723)
!8725 = !DILocation(line: 1197, column: 6, scope: !8690)
!8726 = !DILocation(line: 1198, column: 3, scope: !8723)
!8727 = !DILocation(line: 1200, column: 6, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 1200, column: 6)
!8729 = !DILocation(line: 1200, column: 12, scope: !8728)
!8730 = !DILocation(line: 1200, column: 18, scope: !8728)
!8731 = !DILocation(line: 1200, column: 6, scope: !8690)
!8732 = !DILocation(line: 1201, column: 3, scope: !8728)
!8733 = !DILocation(line: 1203, column: 25, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 1203, column: 6)
!8735 = !DILocation(line: 1203, column: 6, scope: !8734)
!8736 = !DILocation(line: 1203, column: 6, scope: !8690)
!8737 = !DILocation(line: 1204, column: 3, scope: !8734)
!8738 = !DILocation(line: 1206, column: 27, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 1206, column: 6)
!8740 = !DILocation(line: 1206, column: 6, scope: !8739)
!8741 = !DILocation(line: 1206, column: 6, scope: !8690)
!8742 = !DILocation(line: 1207, column: 23, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 1206, column: 34)
!8744 = !DILocation(line: 1207, column: 3, scope: !8743)
!8745 = !DILocation(line: 1208, column: 7, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 1208, column: 7)
!8747 = !DILocation(line: 1208, column: 13, scope: !8746)
!8748 = !DILocation(line: 1208, column: 18, scope: !8746)
!8749 = !DILocation(line: 1208, column: 7, scope: !8743)
!8750 = !DILocation(line: 1209, column: 4, scope: !8746)
!8751 = !DILocation(line: 1209, column: 10, scope: !8746)
!8752 = !DILocation(line: 1209, column: 15, scope: !8746)
!8753 = !DILocation(line: 1209, column: 32, scope: !8746)
!8754 = !DILocation(line: 1209, column: 38, scope: !8746)
!8755 = !DILocation(line: 1210, column: 12, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8746, file: !3, line: 1210, column: 12)
!8757 = !DILocation(line: 1210, column: 18, scope: !8756)
!8758 = !DILocation(line: 1210, column: 23, scope: !8756)
!8759 = !DILocation(line: 1210, column: 12, scope: !8746)
!8760 = !DILocation(line: 1211, column: 4, scope: !8756)
!8761 = !DILocation(line: 1211, column: 10, scope: !8756)
!8762 = !DILocation(line: 1211, column: 15, scope: !8756)
!8763 = !DILocation(line: 1211, column: 25, scope: !8756)
!8764 = !DILocation(line: 1211, column: 31, scope: !8756)
!8765 = !DILocation(line: 1212, column: 32, scope: !8743)
!8766 = !DILocation(line: 1212, column: 3, scope: !8743)
!8767 = !DILocation(line: 1213, column: 2, scope: !8743)
!8768 = !DILocation(line: 1215, column: 21, scope: !8690)
!8769 = !DILocation(line: 1215, column: 2, scope: !8690)
!8770 = !DILocation(line: 1216, column: 1, scope: !8690)
!8771 = distinct !DISubprogram(name: "clk_core_prepare_enable", scope: !3, file: !3, line: 1167, type: !3273, scopeLine: 1168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8772 = !DILocalVariable(name: "core", arg: 1, scope: !8771, file: !3, line: 1167, type: !72)
!8773 = !DILocation(line: 1167, column: 53, scope: !8771)
!8774 = !DILocalVariable(name: "ret", scope: !8771, file: !3, line: 1169, type: !89)
!8775 = !DILocation(line: 1169, column: 6, scope: !8771)
!8776 = !DILocation(line: 1171, column: 30, scope: !8771)
!8777 = !DILocation(line: 1171, column: 8, scope: !8771)
!8778 = !DILocation(line: 1171, column: 6, scope: !8771)
!8779 = !DILocation(line: 1172, column: 6, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1172, column: 6)
!8781 = !DILocation(line: 1172, column: 6, scope: !8771)
!8782 = !DILocation(line: 1173, column: 10, scope: !8780)
!8783 = !DILocation(line: 1173, column: 3, scope: !8780)
!8784 = !DILocation(line: 1175, column: 29, scope: !8771)
!8785 = !DILocation(line: 1175, column: 8, scope: !8771)
!8786 = !DILocation(line: 1175, column: 6, scope: !8771)
!8787 = !DILocation(line: 1176, column: 6, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1176, column: 6)
!8789 = !DILocation(line: 1176, column: 6, scope: !8771)
!8790 = !DILocation(line: 1177, column: 27, scope: !8788)
!8791 = !DILocation(line: 1177, column: 3, scope: !8788)
!8792 = !DILocation(line: 1179, column: 9, scope: !8771)
!8793 = !DILocation(line: 1179, column: 2, scope: !8771)
!8794 = !DILocation(line: 1180, column: 1, scope: !8771)
!8795 = distinct !DISubprogram(name: "trace_clk_disable", scope: !8305, file: !8305, line: 46, type: !3094, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8796 = !DILocalVariable(name: "core", arg: 1, scope: !8795, file: !8305, line: 46, type: !72)
!8797 = !DILocation(line: 46, column: 1, scope: !8795)
!8798 = distinct !DISubprogram(name: "trace_clk_disable_complete", scope: !8305, file: !8305, line: 53, type: !3094, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8799 = !DILocalVariable(name: "core", arg: 1, scope: !8798, file: !8305, line: 53, type: !72)
!8800 = !DILocation(line: 53, column: 1, scope: !8798)
!8801 = distinct !DISubprogram(name: "clk_core_disable_unprepare", scope: !3, file: !3, line: 1182, type: !3094, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8802 = !DILocalVariable(name: "core", arg: 1, scope: !8801, file: !3, line: 1182, type: !72)
!8803 = !DILocation(line: 1182, column: 57, scope: !8801)
!8804 = !DILocation(line: 1184, column: 24, scope: !8801)
!8805 = !DILocation(line: 1184, column: 2, scope: !8801)
!8806 = !DILocation(line: 1185, column: 26, scope: !8801)
!8807 = !DILocation(line: 1185, column: 2, scope: !8801)
!8808 = !DILocation(line: 1186, column: 1, scope: !8801)
!8809 = distinct !DISubprogram(name: "clk_core_init_rate_req", scope: !3, file: !3, line: 1335, type: !8810, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{null, !8812, !2129}
!8812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !72)
!8813 = !DILocalVariable(name: "core", arg: 1, scope: !8809, file: !3, line: 1335, type: !8812)
!8814 = !DILocation(line: 1335, column: 60, scope: !8809)
!8815 = !DILocalVariable(name: "req", arg: 2, scope: !8809, file: !3, line: 1336, type: !2129)
!8816 = !DILocation(line: 1336, column: 33, scope: !8809)
!8817 = !DILocalVariable(name: "parent", scope: !8809, file: !3, line: 1338, type: !72)
!8818 = !DILocation(line: 1338, column: 19, scope: !8809)
!8819 = !DILocalVariable(name: "__ret_warn_on", scope: !8820, file: !3, line: 1340, type: !89)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 1340, column: 6)
!8821 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 1340, column: 6)
!8822 = !DILocation(line: 1340, column: 6, scope: !8820)
!8823 = !DILocation(line: 1340, column: 6, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 1340, column: 6)
!8825 = !DILocation(line: 1340, column: 6, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 1340, column: 6)
!8827 = !DILocation(line: 1340, column: 6, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 1340, column: 6)
!8829 = !DILocation(line: 1340, column: 6, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 1340, column: 6)
!8831 = !{i32 -2142938536, i32 -2142938507, i32 -2142938461, i32 -2142938403, i32 -2142938349, i32 -2142938295, i32 -2142938240, i32 -2142938209}
!8832 = !DILocation(line: 1340, column: 6, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 1340, column: 6)
!8834 = !{i32 -2142937809, i32 -2142937802, i32 -2142937750, i32 -2142937719, i32 -2142937689}
!8835 = !DILocation(line: 1340, column: 6, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 1340, column: 6)
!8837 = !DILocation(line: 1340, column: 6, scope: !8821)
!8838 = !DILocation(line: 1340, column: 6, scope: !8809)
!8839 = !DILocation(line: 1341, column: 3, scope: !8821)
!8840 = !DILocation(line: 1343, column: 11, scope: !8809)
!8841 = !DILocation(line: 1343, column: 17, scope: !8809)
!8842 = !DILocation(line: 1343, column: 9, scope: !8809)
!8843 = !DILocation(line: 1344, column: 6, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 1344, column: 6)
!8845 = !DILocation(line: 1344, column: 6, scope: !8809)
!8846 = !DILocation(line: 1345, column: 25, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 1344, column: 14)
!8848 = !DILocation(line: 1345, column: 33, scope: !8847)
!8849 = !DILocation(line: 1345, column: 3, scope: !8847)
!8850 = !DILocation(line: 1345, column: 8, scope: !8847)
!8851 = !DILocation(line: 1345, column: 23, scope: !8847)
!8852 = !DILocation(line: 1346, column: 27, scope: !8847)
!8853 = !DILocation(line: 1346, column: 35, scope: !8847)
!8854 = !DILocation(line: 1346, column: 3, scope: !8847)
!8855 = !DILocation(line: 1346, column: 8, scope: !8847)
!8856 = !DILocation(line: 1346, column: 25, scope: !8847)
!8857 = !DILocation(line: 1347, column: 2, scope: !8847)
!8858 = !DILocation(line: 1348, column: 3, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 1347, column: 9)
!8860 = !DILocation(line: 1348, column: 8, scope: !8859)
!8861 = !DILocation(line: 1348, column: 23, scope: !8859)
!8862 = !DILocation(line: 1349, column: 3, scope: !8859)
!8863 = !DILocation(line: 1349, column: 8, scope: !8859)
!8864 = !DILocation(line: 1349, column: 25, scope: !8859)
!8865 = !DILocation(line: 1351, column: 1, scope: !8809)
!8866 = distinct !DISubprogram(name: "clk_core_can_round", scope: !3, file: !3, line: 1353, type: !8867, scopeLine: 1354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8867 = !DISubroutineType(types: !8868)
!8868 = !{!1008, !8812}
!8869 = !DILocalVariable(name: "core", arg: 1, scope: !8866, file: !3, line: 1353, type: !8812)
!8870 = !DILocation(line: 1353, column: 56, scope: !8866)
!8871 = !DILocation(line: 1355, column: 9, scope: !8866)
!8872 = !DILocation(line: 1355, column: 15, scope: !8866)
!8873 = !DILocation(line: 1355, column: 20, scope: !8866)
!8874 = !DILocation(line: 1355, column: 35, scope: !8866)
!8875 = !DILocation(line: 1355, column: 38, scope: !8866)
!8876 = !DILocation(line: 1355, column: 44, scope: !8866)
!8877 = !DILocation(line: 1355, column: 49, scope: !8866)
!8878 = !DILocation(line: 1355, column: 2, scope: !8866)
!8879 = distinct !DISubprogram(name: "clk_core_determine_round_nolock", scope: !3, file: !3, line: 1301, type: !3701, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8880 = !DILocalVariable(name: "core", arg: 1, scope: !8879, file: !3, line: 1301, type: !72)
!8881 = !DILocation(line: 1301, column: 61, scope: !8879)
!8882 = !DILocalVariable(name: "req", arg: 2, scope: !8879, file: !3, line: 1302, type: !2129)
!8883 = !DILocation(line: 1302, column: 34, scope: !8879)
!8884 = !DILocalVariable(name: "rate", scope: !8879, file: !3, line: 1304, type: !199)
!8885 = !DILocation(line: 1304, column: 7, scope: !8879)
!8886 = !DILocation(line: 1306, column: 2, scope: !8879)
!8887 = !DILocation(line: 1306, column: 2, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1306, column: 2)
!8889 = !DILocation(line: 1308, column: 7, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1308, column: 6)
!8891 = !DILocation(line: 1308, column: 6, scope: !8879)
!8892 = !DILocation(line: 1309, column: 3, scope: !8890)
!8893 = !DILocation(line: 1317, column: 33, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1317, column: 6)
!8895 = !DILocation(line: 1317, column: 6, scope: !8894)
!8896 = !DILocation(line: 1317, column: 6, scope: !8879)
!8897 = !DILocation(line: 1318, column: 15, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 1317, column: 40)
!8899 = !DILocation(line: 1318, column: 21, scope: !8898)
!8900 = !DILocation(line: 1318, column: 3, scope: !8898)
!8901 = !DILocation(line: 1318, column: 8, scope: !8898)
!8902 = !DILocation(line: 1318, column: 13, scope: !8898)
!8903 = !DILocation(line: 1319, column: 2, scope: !8898)
!8904 = !DILocation(line: 1319, column: 13, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 1319, column: 13)
!8906 = !DILocation(line: 1319, column: 19, scope: !8905)
!8907 = !DILocation(line: 1319, column: 24, scope: !8905)
!8908 = !DILocation(line: 1319, column: 13, scope: !8894)
!8909 = !DILocation(line: 1320, column: 10, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8905, file: !3, line: 1319, column: 40)
!8911 = !DILocation(line: 1320, column: 16, scope: !8910)
!8912 = !DILocation(line: 1320, column: 21, scope: !8910)
!8913 = !DILocation(line: 1320, column: 36, scope: !8910)
!8914 = !DILocation(line: 1320, column: 42, scope: !8910)
!8915 = !DILocation(line: 1320, column: 46, scope: !8910)
!8916 = !DILocation(line: 1320, column: 3, scope: !8910)
!8917 = !DILocation(line: 1321, column: 13, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8905, file: !3, line: 1321, column: 13)
!8919 = !DILocation(line: 1321, column: 19, scope: !8918)
!8920 = !DILocation(line: 1321, column: 24, scope: !8918)
!8921 = !DILocation(line: 1321, column: 13, scope: !8905)
!8922 = !DILocation(line: 1322, column: 10, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 1321, column: 36)
!8924 = !DILocation(line: 1322, column: 16, scope: !8923)
!8925 = !DILocation(line: 1322, column: 21, scope: !8923)
!8926 = !DILocation(line: 1322, column: 32, scope: !8923)
!8927 = !DILocation(line: 1322, column: 38, scope: !8923)
!8928 = !DILocation(line: 1322, column: 42, scope: !8923)
!8929 = !DILocation(line: 1322, column: 47, scope: !8923)
!8930 = !DILocation(line: 1323, column: 12, scope: !8923)
!8931 = !DILocation(line: 1323, column: 17, scope: !8923)
!8932 = !DILocation(line: 1322, column: 8, scope: !8923)
!8933 = !DILocation(line: 1324, column: 7, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8923, file: !3, line: 1324, column: 7)
!8935 = !DILocation(line: 1324, column: 12, scope: !8934)
!8936 = !DILocation(line: 1324, column: 7, scope: !8923)
!8937 = !DILocation(line: 1325, column: 11, scope: !8934)
!8938 = !DILocation(line: 1325, column: 4, scope: !8934)
!8939 = !DILocation(line: 1327, column: 15, scope: !8923)
!8940 = !DILocation(line: 1327, column: 3, scope: !8923)
!8941 = !DILocation(line: 1327, column: 8, scope: !8923)
!8942 = !DILocation(line: 1327, column: 13, scope: !8923)
!8943 = !DILocation(line: 1328, column: 2, scope: !8923)
!8944 = !DILocation(line: 1329, column: 3, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 1328, column: 9)
!8946 = !DILocation(line: 1332, column: 2, scope: !8879)
!8947 = !DILocation(line: 1333, column: 1, scope: !8879)
!8948 = distinct !DISubprogram(name: "__clk_recalc_accuracies", scope: !3, file: !3, line: 1513, type: !3094, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!8949 = !DILocalVariable(name: "core", arg: 1, scope: !8948, file: !3, line: 1513, type: !72)
!8950 = !DILocation(line: 1513, column: 54, scope: !8948)
!8951 = !DILocalVariable(name: "parent_accuracy", scope: !8948, file: !3, line: 1515, type: !214)
!8952 = !DILocation(line: 1515, column: 16, scope: !8948)
!8953 = !DILocalVariable(name: "child", scope: !8948, file: !3, line: 1516, type: !72)
!8954 = !DILocation(line: 1516, column: 19, scope: !8948)
!8955 = !DILocation(line: 1518, column: 2, scope: !8948)
!8956 = !DILocation(line: 1518, column: 2, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 1518, column: 2)
!8958 = !DILocation(line: 1520, column: 6, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 1520, column: 6)
!8960 = !DILocation(line: 1520, column: 12, scope: !8959)
!8961 = !DILocation(line: 1520, column: 6, scope: !8948)
!8962 = !DILocation(line: 1521, column: 21, scope: !8959)
!8963 = !DILocation(line: 1521, column: 27, scope: !8959)
!8964 = !DILocation(line: 1521, column: 35, scope: !8959)
!8965 = !DILocation(line: 1521, column: 19, scope: !8959)
!8966 = !DILocation(line: 1521, column: 3, scope: !8959)
!8967 = !DILocation(line: 1523, column: 6, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 1523, column: 6)
!8969 = !DILocation(line: 1523, column: 12, scope: !8968)
!8970 = !DILocation(line: 1523, column: 17, scope: !8968)
!8971 = !DILocation(line: 1523, column: 6, scope: !8948)
!8972 = !DILocation(line: 1524, column: 20, scope: !8968)
!8973 = !DILocation(line: 1524, column: 26, scope: !8968)
!8974 = !DILocation(line: 1524, column: 31, scope: !8968)
!8975 = !DILocation(line: 1524, column: 47, scope: !8968)
!8976 = !DILocation(line: 1524, column: 53, scope: !8968)
!8977 = !DILocation(line: 1525, column: 10, scope: !8968)
!8978 = !DILocation(line: 1524, column: 3, scope: !8968)
!8979 = !DILocation(line: 1524, column: 9, scope: !8968)
!8980 = !DILocation(line: 1524, column: 18, scope: !8968)
!8981 = !DILocation(line: 1527, column: 20, scope: !8968)
!8982 = !DILocation(line: 1527, column: 3, scope: !8968)
!8983 = !DILocation(line: 1527, column: 9, scope: !8968)
!8984 = !DILocation(line: 1527, column: 18, scope: !8968)
!8985 = !DILocalVariable(name: "____ptr", scope: !8986, file: !3, line: 1529, type: !705)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 1529, column: 2)
!8987 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 1529, column: 2)
!8988 = !DILocation(line: 1529, column: 2, scope: !8986)
!8989 = !DILocalVariable(name: "__mptr", scope: !8990, file: !3, line: 1529, type: !71)
!8990 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 1529, column: 2)
!8991 = !DILocation(line: 1529, column: 2, scope: !8990)
!8992 = !DILocation(line: 1529, column: 2, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 1529, column: 2)
!8994 = !DILocation(line: 1529, column: 2, scope: !8987)
!8995 = !DILocation(line: 1529, column: 2, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 1529, column: 2)
!8997 = !DILocation(line: 1530, column: 27, scope: !8996)
!8998 = !DILocation(line: 1530, column: 3, scope: !8996)
!8999 = !DILocalVariable(name: "____ptr", scope: !9000, file: !3, line: 1529, type: !705)
!9000 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 1529, column: 2)
!9001 = !DILocation(line: 1529, column: 2, scope: !9000)
!9002 = !DILocalVariable(name: "__mptr", scope: !9003, file: !3, line: 1529, type: !71)
!9003 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1529, column: 2)
!9004 = !DILocation(line: 1529, column: 2, scope: !9003)
!9005 = !DILocation(line: 1529, column: 2, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 1529, column: 2)
!9007 = distinct !{!9007, !8994, !9008}
!9008 = !DILocation(line: 1530, column: 32, scope: !8987)
!9009 = !DILocation(line: 1531, column: 1, scope: !8948)
!9010 = distinct !DISubprogram(name: "clk_core_get_accuracy_no_lock", scope: !3, file: !3, line: 495, type: !2488, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9011 = !DILocalVariable(name: "core", arg: 1, scope: !9010, file: !3, line: 495, type: !72)
!9012 = !DILocation(line: 495, column: 69, scope: !9010)
!9013 = !DILocation(line: 497, column: 7, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9010, file: !3, line: 497, column: 6)
!9015 = !DILocation(line: 497, column: 6, scope: !9010)
!9016 = !DILocation(line: 498, column: 3, scope: !9014)
!9017 = !DILocation(line: 500, column: 9, scope: !9010)
!9018 = !DILocation(line: 500, column: 15, scope: !9010)
!9019 = !DILocation(line: 500, column: 2, scope: !9010)
!9020 = !DILocation(line: 501, column: 1, scope: !9010)
!9021 = distinct !DISubprogram(name: "__clk_recalc_rates", scope: !3, file: !3, line: 1589, type: !9022, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9022 = !DISubroutineType(types: !9023)
!9023 = !{null, !72, !214}
!9024 = !DILocalVariable(name: "core", arg: 1, scope: !9021, file: !3, line: 1589, type: !72)
!9025 = !DILocation(line: 1589, column: 49, scope: !9021)
!9026 = !DILocalVariable(name: "msg", arg: 2, scope: !9021, file: !3, line: 1589, type: !214)
!9027 = !DILocation(line: 1589, column: 69, scope: !9021)
!9028 = !DILocalVariable(name: "old_rate", scope: !9021, file: !3, line: 1591, type: !214)
!9029 = !DILocation(line: 1591, column: 16, scope: !9021)
!9030 = !DILocalVariable(name: "parent_rate", scope: !9021, file: !3, line: 1592, type: !214)
!9031 = !DILocation(line: 1592, column: 16, scope: !9021)
!9032 = !DILocalVariable(name: "child", scope: !9021, file: !3, line: 1593, type: !72)
!9033 = !DILocation(line: 1593, column: 19, scope: !9021)
!9034 = !DILocation(line: 1595, column: 2, scope: !9021)
!9035 = !DILocation(line: 1595, column: 2, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 1595, column: 2)
!9037 = !DILocation(line: 1597, column: 13, scope: !9021)
!9038 = !DILocation(line: 1597, column: 19, scope: !9021)
!9039 = !DILocation(line: 1597, column: 11, scope: !9021)
!9040 = !DILocation(line: 1599, column: 6, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 1599, column: 6)
!9042 = !DILocation(line: 1599, column: 12, scope: !9041)
!9043 = !DILocation(line: 1599, column: 6, scope: !9021)
!9044 = !DILocation(line: 1600, column: 17, scope: !9041)
!9045 = !DILocation(line: 1600, column: 23, scope: !9041)
!9046 = !DILocation(line: 1600, column: 31, scope: !9041)
!9047 = !DILocation(line: 1600, column: 15, scope: !9041)
!9048 = !DILocation(line: 1600, column: 3, scope: !9041)
!9049 = !DILocation(line: 1602, column: 26, scope: !9021)
!9050 = !DILocation(line: 1602, column: 32, scope: !9021)
!9051 = !DILocation(line: 1602, column: 15, scope: !9021)
!9052 = !DILocation(line: 1602, column: 2, scope: !9021)
!9053 = !DILocation(line: 1602, column: 8, scope: !9021)
!9054 = !DILocation(line: 1602, column: 13, scope: !9021)
!9055 = !DILocation(line: 1608, column: 6, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 1608, column: 6)
!9057 = !DILocation(line: 1608, column: 12, scope: !9056)
!9058 = !DILocation(line: 1608, column: 27, scope: !9056)
!9059 = !DILocation(line: 1608, column: 30, scope: !9056)
!9060 = !DILocation(line: 1608, column: 6, scope: !9021)
!9061 = !DILocation(line: 1609, column: 16, scope: !9056)
!9062 = !DILocation(line: 1609, column: 22, scope: !9056)
!9063 = !DILocation(line: 1609, column: 27, scope: !9056)
!9064 = !DILocation(line: 1609, column: 37, scope: !9056)
!9065 = !DILocation(line: 1609, column: 43, scope: !9056)
!9066 = !DILocation(line: 1609, column: 3, scope: !9056)
!9067 = !DILocalVariable(name: "____ptr", scope: !9068, file: !3, line: 1611, type: !705)
!9068 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1611, column: 2)
!9069 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 1611, column: 2)
!9070 = !DILocation(line: 1611, column: 2, scope: !9068)
!9071 = !DILocalVariable(name: "__mptr", scope: !9072, file: !3, line: 1611, type: !71)
!9072 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 1611, column: 2)
!9073 = !DILocation(line: 1611, column: 2, scope: !9072)
!9074 = !DILocation(line: 1611, column: 2, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 1611, column: 2)
!9076 = !DILocation(line: 1611, column: 2, scope: !9069)
!9077 = !DILocation(line: 1611, column: 2, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1611, column: 2)
!9079 = !DILocation(line: 1612, column: 22, scope: !9078)
!9080 = !DILocation(line: 1612, column: 29, scope: !9078)
!9081 = !DILocation(line: 1612, column: 3, scope: !9078)
!9082 = !DILocalVariable(name: "____ptr", scope: !9083, file: !3, line: 1611, type: !705)
!9083 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 1611, column: 2)
!9084 = !DILocation(line: 1611, column: 2, scope: !9083)
!9085 = !DILocalVariable(name: "__mptr", scope: !9086, file: !3, line: 1611, type: !71)
!9086 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 1611, column: 2)
!9087 = !DILocation(line: 1611, column: 2, scope: !9086)
!9088 = !DILocation(line: 1611, column: 2, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 1611, column: 2)
!9090 = distinct !{!9090, !9076, !9091}
!9091 = !DILocation(line: 1612, column: 32, scope: !9069)
!9092 = !DILocation(line: 1613, column: 1, scope: !9021)
!9093 = distinct !DISubprogram(name: "clk_recalc", scope: !3, file: !3, line: 1565, type: !9094, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9094 = !DISubroutineType(types: !9095)
!9095 = !{!214, !72, !214}
!9096 = !DILocalVariable(name: "core", arg: 1, scope: !9093, file: !3, line: 1565, type: !72)
!9097 = !DILocation(line: 1565, column: 50, scope: !9093)
!9098 = !DILocalVariable(name: "parent_rate", arg: 2, scope: !9093, file: !3, line: 1566, type: !214)
!9099 = !DILocation(line: 1566, column: 19, scope: !9093)
!9100 = !DILocalVariable(name: "rate", scope: !9093, file: !3, line: 1568, type: !214)
!9101 = !DILocation(line: 1568, column: 16, scope: !9093)
!9102 = !DILocation(line: 1568, column: 23, scope: !9093)
!9103 = !DILocation(line: 1570, column: 6, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 1570, column: 6)
!9105 = !DILocation(line: 1570, column: 12, scope: !9104)
!9106 = !DILocation(line: 1570, column: 17, scope: !9104)
!9107 = !DILocation(line: 1570, column: 29, scope: !9104)
!9108 = !DILocation(line: 1570, column: 52, scope: !9104)
!9109 = !DILocation(line: 1570, column: 33, scope: !9104)
!9110 = !DILocation(line: 1570, column: 6, scope: !9093)
!9111 = !DILocation(line: 1571, column: 10, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 1570, column: 59)
!9113 = !DILocation(line: 1571, column: 16, scope: !9112)
!9114 = !DILocation(line: 1571, column: 21, scope: !9112)
!9115 = !DILocation(line: 1571, column: 33, scope: !9112)
!9116 = !DILocation(line: 1571, column: 39, scope: !9112)
!9117 = !DILocation(line: 1571, column: 43, scope: !9112)
!9118 = !DILocation(line: 1571, column: 8, scope: !9112)
!9119 = !DILocation(line: 1572, column: 22, scope: !9112)
!9120 = !DILocation(line: 1572, column: 3, scope: !9112)
!9121 = !DILocation(line: 1573, column: 2, scope: !9112)
!9122 = !DILocation(line: 1574, column: 9, scope: !9093)
!9123 = !DILocation(line: 1574, column: 2, scope: !9093)
!9124 = distinct !DISubprogram(name: "__clk_notify", scope: !3, file: !3, line: 1481, type: !9125, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9125 = !DISubroutineType(types: !9126)
!9126 = !{!89, !72, !214, !214, !214}
!9127 = !DILocalVariable(name: "core", arg: 1, scope: !9124, file: !3, line: 1481, type: !72)
!9128 = !DILocation(line: 1481, column: 42, scope: !9124)
!9129 = !DILocalVariable(name: "msg", arg: 2, scope: !9124, file: !3, line: 1481, type: !214)
!9130 = !DILocation(line: 1481, column: 62, scope: !9124)
!9131 = !DILocalVariable(name: "old_rate", arg: 3, scope: !9124, file: !3, line: 1482, type: !214)
!9132 = !DILocation(line: 1482, column: 17, scope: !9124)
!9133 = !DILocalVariable(name: "new_rate", arg: 4, scope: !9124, file: !3, line: 1482, type: !214)
!9134 = !DILocation(line: 1482, column: 41, scope: !9124)
!9135 = !DILocalVariable(name: "cn", scope: !9124, file: !3, line: 1484, type: !2214)
!9136 = !DILocation(line: 1484, column: 23, scope: !9124)
!9137 = !DILocalVariable(name: "cnd", scope: !9124, file: !3, line: 1485, type: !9138)
!9138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_notifier_data", file: !2216, line: 71, size: 192, elements: !9139)
!9139 = !{!9140, !9141, !9142}
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "clk", scope: !9138, file: !2216, line: 72, baseType: !95, size: 64)
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "old_rate", scope: !9138, file: !2216, line: 73, baseType: !214, size: 64, offset: 64)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "new_rate", scope: !9138, file: !2216, line: 74, baseType: !214, size: 64, offset: 128)
!9143 = !DILocation(line: 1485, column: 27, scope: !9124)
!9144 = !DILocalVariable(name: "ret", scope: !9124, file: !3, line: 1486, type: !89)
!9145 = !DILocation(line: 1486, column: 6, scope: !9124)
!9146 = !DILocation(line: 1488, column: 17, scope: !9124)
!9147 = !DILocation(line: 1488, column: 6, scope: !9124)
!9148 = !DILocation(line: 1488, column: 15, scope: !9124)
!9149 = !DILocation(line: 1489, column: 17, scope: !9124)
!9150 = !DILocation(line: 1489, column: 6, scope: !9124)
!9151 = !DILocation(line: 1489, column: 15, scope: !9124)
!9152 = !DILocalVariable(name: "__mptr", scope: !9153, file: !3, line: 1491, type: !71)
!9153 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 1491, column: 2)
!9154 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 1491, column: 2)
!9155 = !DILocation(line: 1491, column: 2, scope: !9153)
!9156 = !DILocation(line: 1491, column: 2, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 1491, column: 2)
!9158 = !DILocation(line: 1491, column: 2, scope: !9154)
!9159 = !DILocation(line: 1491, column: 2, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 1491, column: 2)
!9161 = !DILocation(line: 1492, column: 7, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 1492, column: 7)
!9163 = distinct !DILexicalBlock(scope: !9160, file: !3, line: 1491, column: 52)
!9164 = !DILocation(line: 1492, column: 11, scope: !9162)
!9165 = !DILocation(line: 1492, column: 16, scope: !9162)
!9166 = !DILocation(line: 1492, column: 24, scope: !9162)
!9167 = !DILocation(line: 1492, column: 21, scope: !9162)
!9168 = !DILocation(line: 1492, column: 7, scope: !9163)
!9169 = !DILocation(line: 1493, column: 14, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 1492, column: 30)
!9171 = !DILocation(line: 1493, column: 18, scope: !9170)
!9172 = !DILocation(line: 1493, column: 8, scope: !9170)
!9173 = !DILocation(line: 1493, column: 12, scope: !9170)
!9174 = !DILocation(line: 1494, column: 36, scope: !9170)
!9175 = !DILocation(line: 1494, column: 40, scope: !9170)
!9176 = !DILocation(line: 1494, column: 55, scope: !9170)
!9177 = !DILocation(line: 1495, column: 6, scope: !9170)
!9178 = !DILocation(line: 1494, column: 10, scope: !9170)
!9179 = !DILocation(line: 1494, column: 8, scope: !9170)
!9180 = !DILocation(line: 1496, column: 8, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 1496, column: 8)
!9182 = !DILocation(line: 1496, column: 12, scope: !9181)
!9183 = !DILocation(line: 1496, column: 8, scope: !9170)
!9184 = !DILocation(line: 1497, column: 12, scope: !9181)
!9185 = !DILocation(line: 1497, column: 5, scope: !9181)
!9186 = !DILocation(line: 1498, column: 3, scope: !9170)
!9187 = !DILocation(line: 1499, column: 2, scope: !9163)
!9188 = !DILocalVariable(name: "__mptr", scope: !9189, file: !3, line: 1491, type: !71)
!9189 = distinct !DILexicalBlock(scope: !9160, file: !3, line: 1491, column: 2)
!9190 = !DILocation(line: 1491, column: 2, scope: !9189)
!9191 = !DILocation(line: 1491, column: 2, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1491, column: 2)
!9193 = distinct !{!9193, !9158, !9194}
!9194 = !DILocation(line: 1499, column: 2, scope: !9154)
!9195 = !DILocation(line: 1501, column: 9, scope: !9124)
!9196 = !DILocation(line: 1501, column: 2, scope: !9124)
!9197 = !DILocation(line: 1502, column: 1, scope: !9124)
!9198 = distinct !DISubprogram(name: "clk_core_req_round_rate_nolock", scope: !3, file: !3, line: 2133, type: !9094, scopeLine: 2135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9199 = !DILocalVariable(name: "core", arg: 1, scope: !9198, file: !3, line: 2133, type: !72)
!9200 = !DILocation(line: 2133, column: 70, scope: !9198)
!9201 = !DILocalVariable(name: "req_rate", arg: 2, scope: !9198, file: !3, line: 2134, type: !214)
!9202 = !DILocation(line: 2134, column: 26, scope: !9198)
!9203 = !DILocalVariable(name: "ret", scope: !9198, file: !3, line: 2136, type: !89)
!9204 = !DILocation(line: 2136, column: 6, scope: !9198)
!9205 = !DILocalVariable(name: "cnt", scope: !9198, file: !3, line: 2136, type: !89)
!9206 = !DILocation(line: 2136, column: 11, scope: !9198)
!9207 = !DILocalVariable(name: "req", scope: !9198, file: !3, line: 2137, type: !2130)
!9208 = !DILocation(line: 2137, column: 26, scope: !9198)
!9209 = !DILocation(line: 2139, column: 2, scope: !9198)
!9210 = !DILocation(line: 2139, column: 2, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 2139, column: 2)
!9212 = !DILocation(line: 2141, column: 7, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 2141, column: 6)
!9214 = !DILocation(line: 2141, column: 6, scope: !9198)
!9215 = !DILocation(line: 2142, column: 3, scope: !9213)
!9216 = !DILocation(line: 2145, column: 35, scope: !9198)
!9217 = !DILocation(line: 2145, column: 8, scope: !9198)
!9218 = !DILocation(line: 2145, column: 6, scope: !9198)
!9219 = !DILocation(line: 2146, column: 6, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 2146, column: 6)
!9221 = !DILocation(line: 2146, column: 10, scope: !9220)
!9222 = !DILocation(line: 2146, column: 6, scope: !9198)
!9223 = !DILocation(line: 2147, column: 10, scope: !9220)
!9224 = !DILocation(line: 2147, column: 3, scope: !9220)
!9225 = !DILocation(line: 2149, column: 26, scope: !9198)
!9226 = !DILocation(line: 2149, column: 37, scope: !9198)
!9227 = !DILocation(line: 2149, column: 52, scope: !9198)
!9228 = !DILocation(line: 2149, column: 2, scope: !9198)
!9229 = !DILocation(line: 2150, column: 13, scope: !9198)
!9230 = !DILocation(line: 2150, column: 6, scope: !9198)
!9231 = !DILocation(line: 2150, column: 11, scope: !9198)
!9232 = !DILocation(line: 2152, column: 35, scope: !9198)
!9233 = !DILocation(line: 2152, column: 8, scope: !9198)
!9234 = !DILocation(line: 2152, column: 6, scope: !9198)
!9235 = !DILocation(line: 2155, column: 32, scope: !9198)
!9236 = !DILocation(line: 2155, column: 38, scope: !9198)
!9237 = !DILocation(line: 2155, column: 2, scope: !9198)
!9238 = !DILocation(line: 2157, column: 9, scope: !9198)
!9239 = !DILocation(line: 2157, column: 23, scope: !9198)
!9240 = !DILocation(line: 2157, column: 2, scope: !9198)
!9241 = !DILocation(line: 2158, column: 1, scope: !9198)
!9242 = distinct !DISubprogram(name: "clk_calc_new_rates", scope: !3, file: !3, line: 1911, type: !9243, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9243 = !DISubroutineType(types: !9244)
!9244 = !{!72, !72, !214}
!9245 = !DILocalVariable(name: "core", arg: 1, scope: !9242, file: !3, line: 1911, type: !72)
!9246 = !DILocation(line: 1911, column: 61, scope: !9242)
!9247 = !DILocalVariable(name: "rate", arg: 2, scope: !9242, file: !3, line: 1912, type: !214)
!9248 = !DILocation(line: 1912, column: 23, scope: !9242)
!9249 = !DILocalVariable(name: "top", scope: !9242, file: !3, line: 1914, type: !72)
!9250 = !DILocation(line: 1914, column: 19, scope: !9242)
!9251 = !DILocation(line: 1914, column: 25, scope: !9242)
!9252 = !DILocalVariable(name: "old_parent", scope: !9242, file: !3, line: 1915, type: !72)
!9253 = !DILocation(line: 1915, column: 19, scope: !9242)
!9254 = !DILocalVariable(name: "parent", scope: !9242, file: !3, line: 1915, type: !72)
!9255 = !DILocation(line: 1915, column: 32, scope: !9242)
!9256 = !DILocalVariable(name: "best_parent_rate", scope: !9242, file: !3, line: 1916, type: !214)
!9257 = !DILocation(line: 1916, column: 16, scope: !9242)
!9258 = !DILocalVariable(name: "new_rate", scope: !9242, file: !3, line: 1917, type: !214)
!9259 = !DILocation(line: 1917, column: 16, scope: !9242)
!9260 = !DILocalVariable(name: "min_rate", scope: !9242, file: !3, line: 1918, type: !214)
!9261 = !DILocation(line: 1918, column: 16, scope: !9242)
!9262 = !DILocalVariable(name: "max_rate", scope: !9242, file: !3, line: 1919, type: !214)
!9263 = !DILocation(line: 1919, column: 16, scope: !9242)
!9264 = !DILocalVariable(name: "p_index", scope: !9242, file: !3, line: 1920, type: !89)
!9265 = !DILocation(line: 1920, column: 6, scope: !9242)
!9266 = !DILocalVariable(name: "ret", scope: !9242, file: !3, line: 1921, type: !199)
!9267 = !DILocation(line: 1921, column: 7, scope: !9242)
!9268 = !DILocation(line: 1924, column: 21, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 1924, column: 6)
!9270 = !DILocation(line: 1924, column: 6, scope: !9269)
!9271 = !DILocation(line: 1924, column: 6, scope: !9242)
!9272 = !DILocation(line: 1925, column: 3, scope: !9269)
!9273 = !DILocation(line: 1928, column: 24, scope: !9242)
!9274 = !DILocation(line: 1928, column: 30, scope: !9242)
!9275 = !DILocation(line: 1928, column: 22, scope: !9242)
!9276 = !DILocation(line: 1928, column: 9, scope: !9242)
!9277 = !DILocation(line: 1929, column: 6, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 1929, column: 6)
!9279 = !DILocation(line: 1929, column: 6, scope: !9242)
!9280 = !DILocation(line: 1930, column: 22, scope: !9278)
!9281 = !DILocation(line: 1930, column: 30, scope: !9278)
!9282 = !DILocation(line: 1930, column: 20, scope: !9278)
!9283 = !DILocation(line: 1930, column: 3, scope: !9278)
!9284 = !DILocation(line: 1932, column: 26, scope: !9242)
!9285 = !DILocation(line: 1932, column: 2, scope: !9242)
!9286 = !DILocation(line: 1935, column: 25, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 1935, column: 6)
!9288 = !DILocation(line: 1935, column: 6, scope: !9287)
!9289 = !DILocation(line: 1935, column: 6, scope: !9242)
!9290 = !DILocalVariable(name: "req", scope: !9291, file: !3, line: 1936, type: !2130)
!9291 = distinct !DILexicalBlock(scope: !9287, file: !3, line: 1935, column: 32)
!9292 = !DILocation(line: 1936, column: 27, scope: !9291)
!9293 = !DILocation(line: 1938, column: 14, scope: !9291)
!9294 = !DILocation(line: 1938, column: 7, scope: !9291)
!9295 = !DILocation(line: 1938, column: 12, scope: !9291)
!9296 = !DILocation(line: 1939, column: 18, scope: !9291)
!9297 = !DILocation(line: 1939, column: 7, scope: !9291)
!9298 = !DILocation(line: 1939, column: 16, scope: !9291)
!9299 = !DILocation(line: 1940, column: 18, scope: !9291)
!9300 = !DILocation(line: 1940, column: 7, scope: !9291)
!9301 = !DILocation(line: 1940, column: 16, scope: !9291)
!9302 = !DILocation(line: 1942, column: 26, scope: !9291)
!9303 = !DILocation(line: 1942, column: 3, scope: !9291)
!9304 = !DILocation(line: 1944, column: 41, scope: !9291)
!9305 = !DILocation(line: 1944, column: 9, scope: !9291)
!9306 = !DILocation(line: 1944, column: 7, scope: !9291)
!9307 = !DILocation(line: 1945, column: 7, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 1945, column: 7)
!9309 = !DILocation(line: 1945, column: 11, scope: !9308)
!9310 = !DILocation(line: 1945, column: 7, scope: !9291)
!9311 = !DILocation(line: 1946, column: 4, scope: !9308)
!9312 = !DILocation(line: 1948, column: 26, scope: !9291)
!9313 = !DILocation(line: 1948, column: 20, scope: !9291)
!9314 = !DILocation(line: 1949, column: 18, scope: !9291)
!9315 = !DILocation(line: 1949, column: 12, scope: !9291)
!9316 = !DILocation(line: 1950, column: 16, scope: !9291)
!9317 = !DILocation(line: 1950, column: 12, scope: !9291)
!9318 = !DILocation(line: 1950, column: 37, scope: !9291)
!9319 = !DILocation(line: 1950, column: 53, scope: !9291)
!9320 = !DILocation(line: 1950, column: 10, scope: !9291)
!9321 = !DILocation(line: 1952, column: 7, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 1952, column: 7)
!9323 = !DILocation(line: 1952, column: 18, scope: !9322)
!9324 = !DILocation(line: 1952, column: 16, scope: !9322)
!9325 = !DILocation(line: 1952, column: 27, scope: !9322)
!9326 = !DILocation(line: 1952, column: 30, scope: !9322)
!9327 = !DILocation(line: 1952, column: 41, scope: !9322)
!9328 = !DILocation(line: 1952, column: 39, scope: !9322)
!9329 = !DILocation(line: 1952, column: 7, scope: !9291)
!9330 = !DILocation(line: 1953, column: 4, scope: !9322)
!9331 = !DILocation(line: 1954, column: 2, scope: !9291)
!9332 = !DILocation(line: 1954, column: 14, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9287, file: !3, line: 1954, column: 13)
!9334 = !DILocation(line: 1954, column: 21, scope: !9333)
!9335 = !DILocation(line: 1954, column: 26, scope: !9333)
!9336 = !DILocation(line: 1954, column: 32, scope: !9333)
!9337 = !DILocation(line: 1954, column: 38, scope: !9333)
!9338 = !DILocation(line: 1954, column: 13, scope: !9287)
!9339 = !DILocation(line: 1956, column: 20, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 1954, column: 62)
!9341 = !DILocation(line: 1956, column: 26, scope: !9340)
!9342 = !DILocation(line: 1956, column: 3, scope: !9340)
!9343 = !DILocation(line: 1956, column: 9, scope: !9340)
!9344 = !DILocation(line: 1956, column: 18, scope: !9340)
!9345 = !DILocation(line: 1957, column: 3, scope: !9340)
!9346 = !DILocation(line: 1960, column: 28, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 1958, column: 9)
!9348 = !DILocation(line: 1960, column: 36, scope: !9347)
!9349 = !DILocation(line: 1960, column: 9, scope: !9347)
!9350 = !DILocation(line: 1960, column: 7, scope: !9347)
!9351 = !DILocation(line: 1961, column: 14, scope: !9347)
!9352 = !DILocation(line: 1961, column: 22, scope: !9347)
!9353 = !DILocation(line: 1961, column: 12, scope: !9347)
!9354 = !DILocation(line: 1962, column: 3, scope: !9347)
!9355 = !DILocation(line: 1966, column: 6, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 1966, column: 6)
!9357 = !DILocation(line: 1966, column: 16, scope: !9356)
!9358 = !DILocation(line: 1966, column: 13, scope: !9356)
!9359 = !DILocation(line: 1966, column: 27, scope: !9356)
!9360 = !DILocation(line: 1967, column: 7, scope: !9356)
!9361 = !DILocation(line: 1967, column: 13, scope: !9356)
!9362 = !DILocation(line: 1967, column: 19, scope: !9356)
!9363 = !DILocation(line: 1967, column: 42, scope: !9356)
!9364 = !DILocation(line: 1967, column: 45, scope: !9356)
!9365 = !DILocation(line: 1967, column: 51, scope: !9356)
!9366 = !DILocation(line: 1966, column: 6, scope: !9242)
!9367 = !DILocation(line: 1968, column: 3, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 1968, column: 3)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 1968, column: 3)
!9370 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 1967, column: 66)
!9371 = !DILocation(line: 1968, column: 3, scope: !9369)
!9372 = !DILocation(line: 1970, column: 3, scope: !9370)
!9373 = !DILocation(line: 1974, column: 6, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 1974, column: 6)
!9375 = !DILocation(line: 1974, column: 13, scope: !9374)
!9376 = !DILocation(line: 1974, column: 16, scope: !9374)
!9377 = !DILocation(line: 1974, column: 22, scope: !9374)
!9378 = !DILocation(line: 1974, column: 34, scope: !9374)
!9379 = !DILocation(line: 1974, column: 6, scope: !9242)
!9380 = !DILocation(line: 1975, column: 36, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9374, file: !3, line: 1974, column: 39)
!9382 = !DILocation(line: 1975, column: 42, scope: !9381)
!9383 = !DILocation(line: 1975, column: 13, scope: !9381)
!9384 = !DILocation(line: 1975, column: 11, scope: !9381)
!9385 = !DILocation(line: 1976, column: 7, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 1976, column: 7)
!9387 = !DILocation(line: 1976, column: 15, scope: !9386)
!9388 = !DILocation(line: 1976, column: 7, scope: !9381)
!9389 = !DILocation(line: 1977, column: 4, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 1977, column: 4)
!9391 = distinct !DILexicalBlock(scope: !9392, file: !3, line: 1977, column: 4)
!9392 = distinct !DILexicalBlock(scope: !9386, file: !3, line: 1976, column: 20)
!9393 = !DILocation(line: 1977, column: 4, scope: !9391)
!9394 = !DILocation(line: 1979, column: 4, scope: !9392)
!9395 = !DILocation(line: 1981, column: 2, scope: !9381)
!9396 = !DILocation(line: 1983, column: 7, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 1983, column: 6)
!9398 = !DILocation(line: 1983, column: 13, scope: !9397)
!9399 = !DILocation(line: 1983, column: 19, scope: !9397)
!9400 = !DILocation(line: 1983, column: 42, scope: !9397)
!9401 = !DILocation(line: 1983, column: 45, scope: !9397)
!9402 = !DILocation(line: 1983, column: 52, scope: !9397)
!9403 = !DILocation(line: 1984, column: 6, scope: !9397)
!9404 = !DILocation(line: 1984, column: 26, scope: !9397)
!9405 = !DILocation(line: 1984, column: 34, scope: !9397)
!9406 = !DILocation(line: 1984, column: 23, scope: !9397)
!9407 = !DILocation(line: 1983, column: 6, scope: !9242)
!9408 = !DILocation(line: 1985, column: 28, scope: !9397)
!9409 = !DILocation(line: 1985, column: 36, scope: !9397)
!9410 = !DILocation(line: 1985, column: 9, scope: !9397)
!9411 = !DILocation(line: 1985, column: 7, scope: !9397)
!9412 = !DILocation(line: 1985, column: 3, scope: !9397)
!9413 = !DILabel(scope: !9242, name: "out", file: !3, line: 1987)
!9414 = !DILocation(line: 1987, column: 1, scope: !9242)
!9415 = !DILocation(line: 1988, column: 19, scope: !9242)
!9416 = !DILocation(line: 1988, column: 25, scope: !9242)
!9417 = !DILocation(line: 1988, column: 35, scope: !9242)
!9418 = !DILocation(line: 1988, column: 43, scope: !9242)
!9419 = !DILocation(line: 1988, column: 2, scope: !9242)
!9420 = !DILocation(line: 1990, column: 9, scope: !9242)
!9421 = !DILocation(line: 1990, column: 2, scope: !9242)
!9422 = !DILocation(line: 1991, column: 1, scope: !9242)
!9423 = distinct !DISubprogram(name: "clk_propagate_rate_change", scope: !3, file: !3, line: 1998, type: !9243, scopeLine: 2000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9424 = !DILocalVariable(name: "core", arg: 1, scope: !9423, file: !3, line: 1998, type: !72)
!9425 = !DILocation(line: 1998, column: 68, scope: !9423)
!9426 = !DILocalVariable(name: "event", arg: 2, scope: !9423, file: !3, line: 1999, type: !214)
!9427 = !DILocation(line: 1999, column: 23, scope: !9423)
!9428 = !DILocalVariable(name: "child", scope: !9423, file: !3, line: 2001, type: !72)
!9429 = !DILocation(line: 2001, column: 19, scope: !9423)
!9430 = !DILocalVariable(name: "tmp_clk", scope: !9423, file: !3, line: 2001, type: !72)
!9431 = !DILocation(line: 2001, column: 27, scope: !9423)
!9432 = !DILocalVariable(name: "fail_clk", scope: !9423, file: !3, line: 2001, type: !72)
!9433 = !DILocation(line: 2001, column: 37, scope: !9423)
!9434 = !DILocalVariable(name: "ret", scope: !9423, file: !3, line: 2002, type: !89)
!9435 = !DILocation(line: 2002, column: 6, scope: !9423)
!9436 = !DILocation(line: 2004, column: 6, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 2004, column: 6)
!9438 = !DILocation(line: 2004, column: 12, scope: !9437)
!9439 = !DILocation(line: 2004, column: 20, scope: !9437)
!9440 = !DILocation(line: 2004, column: 26, scope: !9437)
!9441 = !DILocation(line: 2004, column: 17, scope: !9437)
!9442 = !DILocation(line: 2004, column: 6, scope: !9423)
!9443 = !DILocation(line: 2005, column: 3, scope: !9437)
!9444 = !DILocation(line: 2007, column: 6, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 2007, column: 6)
!9446 = !DILocation(line: 2007, column: 12, scope: !9445)
!9447 = !DILocation(line: 2007, column: 6, scope: !9423)
!9448 = !DILocation(line: 2008, column: 22, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 2007, column: 28)
!9450 = !DILocation(line: 2008, column: 28, scope: !9449)
!9451 = !DILocation(line: 2008, column: 35, scope: !9449)
!9452 = !DILocation(line: 2008, column: 41, scope: !9449)
!9453 = !DILocation(line: 2008, column: 47, scope: !9449)
!9454 = !DILocation(line: 2008, column: 53, scope: !9449)
!9455 = !DILocation(line: 2008, column: 9, scope: !9449)
!9456 = !DILocation(line: 2008, column: 7, scope: !9449)
!9457 = !DILocation(line: 2009, column: 7, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 2009, column: 7)
!9459 = !DILocation(line: 2009, column: 11, scope: !9458)
!9460 = !DILocation(line: 2009, column: 7, scope: !9449)
!9461 = !DILocation(line: 2010, column: 15, scope: !9458)
!9462 = !DILocation(line: 2010, column: 13, scope: !9458)
!9463 = !DILocation(line: 2010, column: 4, scope: !9458)
!9464 = !DILocation(line: 2011, column: 2, scope: !9449)
!9465 = !DILocalVariable(name: "____ptr", scope: !9466, file: !3, line: 2013, type: !705)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 2013, column: 2)
!9467 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 2013, column: 2)
!9468 = !DILocation(line: 2013, column: 2, scope: !9466)
!9469 = !DILocalVariable(name: "__mptr", scope: !9470, file: !3, line: 2013, type: !71)
!9470 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 2013, column: 2)
!9471 = !DILocation(line: 2013, column: 2, scope: !9470)
!9472 = !DILocation(line: 2013, column: 2, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 2013, column: 2)
!9474 = !DILocation(line: 2013, column: 2, scope: !9467)
!9475 = !DILocation(line: 2013, column: 2, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 2013, column: 2)
!9477 = !DILocation(line: 2015, column: 7, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9479, file: !3, line: 2015, column: 7)
!9479 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 2013, column: 59)
!9480 = !DILocation(line: 2015, column: 14, scope: !9478)
!9481 = !DILocation(line: 2015, column: 25, scope: !9478)
!9482 = !DILocation(line: 2015, column: 28, scope: !9478)
!9483 = !DILocation(line: 2015, column: 35, scope: !9478)
!9484 = !DILocation(line: 2015, column: 49, scope: !9478)
!9485 = !DILocation(line: 2015, column: 46, scope: !9478)
!9486 = !DILocation(line: 2015, column: 7, scope: !9479)
!9487 = !DILocation(line: 2016, column: 4, scope: !9478)
!9488 = !DILocation(line: 2017, column: 39, scope: !9479)
!9489 = !DILocation(line: 2017, column: 46, scope: !9479)
!9490 = !DILocation(line: 2017, column: 13, scope: !9479)
!9491 = !DILocation(line: 2017, column: 11, scope: !9479)
!9492 = !DILocation(line: 2018, column: 7, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9479, file: !3, line: 2018, column: 7)
!9494 = !DILocation(line: 2018, column: 7, scope: !9479)
!9495 = !DILocation(line: 2019, column: 15, scope: !9493)
!9496 = !DILocation(line: 2019, column: 13, scope: !9493)
!9497 = !DILocation(line: 2019, column: 4, scope: !9493)
!9498 = !DILocation(line: 2020, column: 2, scope: !9479)
!9499 = !DILocalVariable(name: "____ptr", scope: !9500, file: !3, line: 2013, type: !705)
!9500 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 2013, column: 2)
!9501 = !DILocation(line: 2013, column: 2, scope: !9500)
!9502 = !DILocalVariable(name: "__mptr", scope: !9503, file: !3, line: 2013, type: !71)
!9503 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 2013, column: 2)
!9504 = !DILocation(line: 2013, column: 2, scope: !9503)
!9505 = !DILocation(line: 2013, column: 2, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 2013, column: 2)
!9507 = distinct !{!9507, !9474, !9508}
!9508 = !DILocation(line: 2020, column: 2, scope: !9467)
!9509 = !DILocation(line: 2023, column: 6, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 2023, column: 6)
!9511 = !DILocation(line: 2023, column: 12, scope: !9510)
!9512 = !DILocation(line: 2023, column: 6, scope: !9423)
!9513 = !DILocation(line: 2024, column: 39, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 2023, column: 23)
!9515 = !DILocation(line: 2024, column: 45, scope: !9514)
!9516 = !DILocation(line: 2024, column: 56, scope: !9514)
!9517 = !DILocation(line: 2024, column: 13, scope: !9514)
!9518 = !DILocation(line: 2024, column: 11, scope: !9514)
!9519 = !DILocation(line: 2025, column: 7, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9514, file: !3, line: 2025, column: 7)
!9521 = !DILocation(line: 2025, column: 7, scope: !9514)
!9522 = !DILocation(line: 2026, column: 15, scope: !9520)
!9523 = !DILocation(line: 2026, column: 13, scope: !9520)
!9524 = !DILocation(line: 2026, column: 4, scope: !9520)
!9525 = !DILocation(line: 2027, column: 2, scope: !9514)
!9526 = !DILocation(line: 2029, column: 9, scope: !9423)
!9527 = !DILocation(line: 2029, column: 2, scope: !9423)
!9528 = !DILocation(line: 2030, column: 1, scope: !9423)
!9529 = distinct !DISubprogram(name: "clk_change_rate", scope: !3, file: !3, line: 2036, type: !3094, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9530 = !DILocalVariable(name: "core", arg: 1, scope: !9529, file: !3, line: 2036, type: !72)
!9531 = !DILocation(line: 2036, column: 46, scope: !9529)
!9532 = !DILocalVariable(name: "child", scope: !9529, file: !3, line: 2038, type: !72)
!9533 = !DILocation(line: 2038, column: 19, scope: !9529)
!9534 = !DILocalVariable(name: "tmp", scope: !9529, file: !3, line: 2039, type: !705)
!9535 = !DILocation(line: 2039, column: 21, scope: !9529)
!9536 = !DILocalVariable(name: "old_rate", scope: !9529, file: !3, line: 2040, type: !214)
!9537 = !DILocation(line: 2040, column: 16, scope: !9529)
!9538 = !DILocalVariable(name: "best_parent_rate", scope: !9529, file: !3, line: 2041, type: !214)
!9539 = !DILocation(line: 2041, column: 16, scope: !9529)
!9540 = !DILocalVariable(name: "skip_set_rate", scope: !9529, file: !3, line: 2042, type: !1008)
!9541 = !DILocation(line: 2042, column: 7, scope: !9529)
!9542 = !DILocalVariable(name: "old_parent", scope: !9529, file: !3, line: 2043, type: !72)
!9543 = !DILocation(line: 2043, column: 19, scope: !9529)
!9544 = !DILocalVariable(name: "parent", scope: !9529, file: !3, line: 2044, type: !72)
!9545 = !DILocation(line: 2044, column: 19, scope: !9529)
!9546 = !DILocation(line: 2046, column: 13, scope: !9529)
!9547 = !DILocation(line: 2046, column: 19, scope: !9529)
!9548 = !DILocation(line: 2046, column: 11, scope: !9529)
!9549 = !DILocation(line: 2048, column: 6, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2048, column: 6)
!9551 = !DILocation(line: 2048, column: 12, scope: !9550)
!9552 = !DILocation(line: 2048, column: 6, scope: !9529)
!9553 = !DILocation(line: 2049, column: 12, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 2048, column: 24)
!9555 = !DILocation(line: 2049, column: 18, scope: !9554)
!9556 = !DILocation(line: 2049, column: 10, scope: !9554)
!9557 = !DILocation(line: 2050, column: 22, scope: !9554)
!9558 = !DILocation(line: 2050, column: 28, scope: !9554)
!9559 = !DILocation(line: 2050, column: 40, scope: !9554)
!9560 = !DILocation(line: 2050, column: 20, scope: !9554)
!9561 = !DILocation(line: 2051, column: 2, scope: !9554)
!9562 = !DILocation(line: 2051, column: 13, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 2051, column: 13)
!9564 = !DILocation(line: 2051, column: 19, scope: !9563)
!9565 = !DILocation(line: 2051, column: 13, scope: !9550)
!9566 = !DILocation(line: 2052, column: 12, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 2051, column: 27)
!9568 = !DILocation(line: 2052, column: 18, scope: !9567)
!9569 = !DILocation(line: 2052, column: 10, scope: !9567)
!9570 = !DILocation(line: 2053, column: 22, scope: !9567)
!9571 = !DILocation(line: 2053, column: 28, scope: !9567)
!9572 = !DILocation(line: 2053, column: 36, scope: !9567)
!9573 = !DILocation(line: 2053, column: 20, scope: !9567)
!9574 = !DILocation(line: 2054, column: 2, scope: !9567)
!9575 = !DILocation(line: 2056, column: 25, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2056, column: 6)
!9577 = !DILocation(line: 2056, column: 6, scope: !9576)
!9578 = !DILocation(line: 2056, column: 6, scope: !9529)
!9579 = !DILocation(line: 2057, column: 3, scope: !9576)
!9580 = !DILocation(line: 2059, column: 6, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2059, column: 6)
!9582 = !DILocation(line: 2059, column: 12, scope: !9581)
!9583 = !DILocation(line: 2059, column: 18, scope: !9581)
!9584 = !DILocation(line: 2059, column: 6, scope: !9529)
!9585 = !DILocalVariable(name: "flags", scope: !9586, file: !3, line: 2060, type: !214)
!9586 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 2059, column: 41)
!9587 = !DILocation(line: 2060, column: 17, scope: !9586)
!9588 = !DILocation(line: 2062, column: 20, scope: !9586)
!9589 = !DILocation(line: 2062, column: 3, scope: !9586)
!9590 = !DILocation(line: 2063, column: 11, scope: !9586)
!9591 = !DILocation(line: 2063, column: 9, scope: !9586)
!9592 = !DILocation(line: 2064, column: 19, scope: !9586)
!9593 = !DILocation(line: 2064, column: 3, scope: !9586)
!9594 = !DILocation(line: 2065, column: 21, scope: !9586)
!9595 = !DILocation(line: 2065, column: 3, scope: !9586)
!9596 = !DILocation(line: 2066, column: 2, scope: !9586)
!9597 = !DILocation(line: 2068, column: 6, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2068, column: 6)
!9599 = !DILocation(line: 2068, column: 12, scope: !9598)
!9600 = !DILocation(line: 2068, column: 23, scope: !9598)
!9601 = !DILocation(line: 2068, column: 26, scope: !9598)
!9602 = !DILocation(line: 2068, column: 32, scope: !9598)
!9603 = !DILocation(line: 2068, column: 46, scope: !9598)
!9604 = !DILocation(line: 2068, column: 52, scope: !9598)
!9605 = !DILocation(line: 2068, column: 43, scope: !9598)
!9606 = !DILocation(line: 2068, column: 6, scope: !9529)
!9607 = !DILocation(line: 2069, column: 40, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 2068, column: 60)
!9609 = !DILocation(line: 2069, column: 46, scope: !9608)
!9610 = !DILocation(line: 2069, column: 52, scope: !9608)
!9611 = !DILocation(line: 2069, column: 16, scope: !9608)
!9612 = !DILocation(line: 2069, column: 14, scope: !9608)
!9613 = !DILocation(line: 2070, column: 24, scope: !9608)
!9614 = !DILocation(line: 2070, column: 30, scope: !9608)
!9615 = !DILocation(line: 2070, column: 36, scope: !9608)
!9616 = !DILocation(line: 2070, column: 3, scope: !9608)
!9617 = !DILocation(line: 2072, column: 7, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 2072, column: 7)
!9619 = !DILocation(line: 2072, column: 13, scope: !9618)
!9620 = !DILocation(line: 2072, column: 18, scope: !9618)
!9621 = !DILocation(line: 2072, column: 7, scope: !9608)
!9622 = !DILocation(line: 2073, column: 18, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 2072, column: 39)
!9624 = !DILocation(line: 2074, column: 4, scope: !9623)
!9625 = !DILocation(line: 2074, column: 10, scope: !9623)
!9626 = !DILocation(line: 2074, column: 15, scope: !9623)
!9627 = !DILocation(line: 2074, column: 35, scope: !9623)
!9628 = !DILocation(line: 2074, column: 41, scope: !9623)
!9629 = !DILocation(line: 2074, column: 45, scope: !9623)
!9630 = !DILocation(line: 2074, column: 51, scope: !9623)
!9631 = !DILocation(line: 2075, column: 6, scope: !9623)
!9632 = !DILocation(line: 2076, column: 6, scope: !9623)
!9633 = !DILocation(line: 2076, column: 12, scope: !9623)
!9634 = !DILocation(line: 2077, column: 3, scope: !9623)
!9635 = !DILocation(line: 2077, column: 14, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 2077, column: 14)
!9637 = !DILocation(line: 2077, column: 20, scope: !9636)
!9638 = !DILocation(line: 2077, column: 25, scope: !9636)
!9639 = !DILocation(line: 2077, column: 14, scope: !9618)
!9640 = !DILocation(line: 2078, column: 4, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9636, file: !3, line: 2077, column: 37)
!9642 = !DILocation(line: 2078, column: 10, scope: !9641)
!9643 = !DILocation(line: 2078, column: 15, scope: !9641)
!9644 = !DILocation(line: 2078, column: 26, scope: !9641)
!9645 = !DILocation(line: 2078, column: 32, scope: !9641)
!9646 = !DILocation(line: 2078, column: 36, scope: !9641)
!9647 = !DILocation(line: 2078, column: 42, scope: !9641)
!9648 = !DILocation(line: 2079, column: 3, scope: !9641)
!9649 = !DILocation(line: 2081, column: 33, scope: !9608)
!9650 = !DILocation(line: 2081, column: 39, scope: !9608)
!9651 = !DILocation(line: 2081, column: 45, scope: !9608)
!9652 = !DILocation(line: 2081, column: 3, scope: !9608)
!9653 = !DILocation(line: 2082, column: 26, scope: !9608)
!9654 = !DILocation(line: 2082, column: 32, scope: !9608)
!9655 = !DILocation(line: 2082, column: 38, scope: !9608)
!9656 = !DILocation(line: 2082, column: 50, scope: !9608)
!9657 = !DILocation(line: 2082, column: 3, scope: !9608)
!9658 = !DILocation(line: 2083, column: 2, scope: !9608)
!9659 = !DILocation(line: 2085, column: 6, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2085, column: 6)
!9661 = !DILocation(line: 2085, column: 12, scope: !9660)
!9662 = !DILocation(line: 2085, column: 18, scope: !9660)
!9663 = !DILocation(line: 2085, column: 6, scope: !9529)
!9664 = !DILocation(line: 2086, column: 27, scope: !9660)
!9665 = !DILocation(line: 2086, column: 3, scope: !9660)
!9666 = !DILocation(line: 2088, column: 21, scope: !9529)
!9667 = !DILocation(line: 2088, column: 27, scope: !9529)
!9668 = !DILocation(line: 2088, column: 33, scope: !9529)
!9669 = !DILocation(line: 2088, column: 2, scope: !9529)
!9670 = !DILocation(line: 2090, column: 7, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2090, column: 6)
!9672 = !DILocation(line: 2090, column: 21, scope: !9671)
!9673 = !DILocation(line: 2090, column: 24, scope: !9671)
!9674 = !DILocation(line: 2090, column: 30, scope: !9671)
!9675 = !DILocation(line: 2090, column: 35, scope: !9671)
!9676 = !DILocation(line: 2090, column: 6, scope: !9529)
!9677 = !DILocation(line: 2091, column: 3, scope: !9671)
!9678 = !DILocation(line: 2091, column: 9, scope: !9671)
!9679 = !DILocation(line: 2091, column: 14, scope: !9671)
!9680 = !DILocation(line: 2091, column: 23, scope: !9671)
!9681 = !DILocation(line: 2091, column: 29, scope: !9671)
!9682 = !DILocation(line: 2091, column: 33, scope: !9671)
!9683 = !DILocation(line: 2091, column: 39, scope: !9671)
!9684 = !DILocation(line: 2091, column: 49, scope: !9671)
!9685 = !DILocation(line: 2093, column: 30, scope: !9529)
!9686 = !DILocation(line: 2093, column: 36, scope: !9529)
!9687 = !DILocation(line: 2093, column: 42, scope: !9529)
!9688 = !DILocation(line: 2093, column: 2, scope: !9529)
!9689 = !DILocation(line: 2095, column: 26, scope: !9529)
!9690 = !DILocation(line: 2095, column: 32, scope: !9529)
!9691 = !DILocation(line: 2095, column: 15, scope: !9529)
!9692 = !DILocation(line: 2095, column: 2, scope: !9529)
!9693 = !DILocation(line: 2095, column: 8, scope: !9529)
!9694 = !DILocation(line: 2095, column: 13, scope: !9529)
!9695 = !DILocation(line: 2097, column: 6, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2097, column: 6)
!9697 = !DILocation(line: 2097, column: 12, scope: !9696)
!9698 = !DILocation(line: 2097, column: 18, scope: !9696)
!9699 = !DILocation(line: 2097, column: 6, scope: !9529)
!9700 = !DILocalVariable(name: "flags", scope: !9701, file: !3, line: 2098, type: !214)
!9701 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 2097, column: 41)
!9702 = !DILocation(line: 2098, column: 17, scope: !9701)
!9703 = !DILocation(line: 2100, column: 11, scope: !9701)
!9704 = !DILocation(line: 2100, column: 9, scope: !9701)
!9705 = !DILocation(line: 2101, column: 20, scope: !9701)
!9706 = !DILocation(line: 2101, column: 3, scope: !9701)
!9707 = !DILocation(line: 2102, column: 21, scope: !9701)
!9708 = !DILocation(line: 2102, column: 3, scope: !9701)
!9709 = !DILocation(line: 2103, column: 22, scope: !9701)
!9710 = !DILocation(line: 2103, column: 3, scope: !9701)
!9711 = !DILocation(line: 2104, column: 2, scope: !9701)
!9712 = !DILocation(line: 2106, column: 6, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2106, column: 6)
!9714 = !DILocation(line: 2106, column: 12, scope: !9713)
!9715 = !DILocation(line: 2106, column: 18, scope: !9713)
!9716 = !DILocation(line: 2106, column: 6, scope: !9529)
!9717 = !DILocation(line: 2107, column: 30, scope: !9713)
!9718 = !DILocation(line: 2107, column: 3, scope: !9713)
!9719 = !DILocation(line: 2109, column: 6, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2109, column: 6)
!9721 = !DILocation(line: 2109, column: 12, scope: !9720)
!9722 = !DILocation(line: 2109, column: 27, scope: !9720)
!9723 = !DILocation(line: 2109, column: 30, scope: !9720)
!9724 = !DILocation(line: 2109, column: 42, scope: !9720)
!9725 = !DILocation(line: 2109, column: 48, scope: !9720)
!9726 = !DILocation(line: 2109, column: 39, scope: !9720)
!9727 = !DILocation(line: 2109, column: 6, scope: !9529)
!9728 = !DILocation(line: 2110, column: 16, scope: !9720)
!9729 = !DILocation(line: 2110, column: 40, scope: !9720)
!9730 = !DILocation(line: 2110, column: 50, scope: !9720)
!9731 = !DILocation(line: 2110, column: 56, scope: !9720)
!9732 = !DILocation(line: 2110, column: 3, scope: !9720)
!9733 = !DILocation(line: 2112, column: 6, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2112, column: 6)
!9735 = !DILocation(line: 2112, column: 12, scope: !9734)
!9736 = !DILocation(line: 2112, column: 18, scope: !9734)
!9737 = !DILocation(line: 2112, column: 6, scope: !9529)
!9738 = !DILocation(line: 2113, column: 28, scope: !9734)
!9739 = !DILocation(line: 2113, column: 34, scope: !9734)
!9740 = !DILocation(line: 2113, column: 40, scope: !9734)
!9741 = !DILocation(line: 2113, column: 9, scope: !9734)
!9742 = !DILocation(line: 2113, column: 3, scope: !9734)
!9743 = !DILocalVariable(name: "____ptr", scope: !9744, file: !3, line: 2119, type: !705)
!9744 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 2119, column: 2)
!9745 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2119, column: 2)
!9746 = !DILocation(line: 2119, column: 2, scope: !9744)
!9747 = !DILocalVariable(name: "__mptr", scope: !9748, file: !3, line: 2119, type: !71)
!9748 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 2119, column: 2)
!9749 = !DILocation(line: 2119, column: 2, scope: !9748)
!9750 = !DILocation(line: 2119, column: 2, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 2119, column: 2)
!9752 = !DILocation(line: 2119, column: 2, scope: !9745)
!9753 = !DILocation(line: 2119, column: 2, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 2119, column: 2)
!9755 = !DILocation(line: 2119, column: 2, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 2119, column: 2)
!9757 = !DILocation(line: 0, scope: !9754)
!9758 = !DILocation(line: 2121, column: 7, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 2121, column: 7)
!9760 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 2119, column: 69)
!9761 = !DILocation(line: 2121, column: 14, scope: !9759)
!9762 = !DILocation(line: 2121, column: 25, scope: !9759)
!9763 = !DILocation(line: 2121, column: 28, scope: !9759)
!9764 = !DILocation(line: 2121, column: 35, scope: !9759)
!9765 = !DILocation(line: 2121, column: 49, scope: !9759)
!9766 = !DILocation(line: 2121, column: 46, scope: !9759)
!9767 = !DILocation(line: 2121, column: 7, scope: !9760)
!9768 = !DILocation(line: 2122, column: 4, scope: !9759)
!9769 = !DILocation(line: 2123, column: 19, scope: !9760)
!9770 = !DILocation(line: 2123, column: 3, scope: !9760)
!9771 = !DILocation(line: 2124, column: 2, scope: !9760)
!9772 = !DILocalVariable(name: "____ptr", scope: !9773, file: !3, line: 2119, type: !705)
!9773 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 2119, column: 2)
!9774 = !DILocation(line: 2119, column: 2, scope: !9773)
!9775 = !DILocalVariable(name: "__mptr", scope: !9776, file: !3, line: 2119, type: !71)
!9776 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 2119, column: 2)
!9777 = !DILocation(line: 2119, column: 2, scope: !9776)
!9778 = !DILocation(line: 2119, column: 2, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9776, file: !3, line: 2119, column: 2)
!9780 = distinct !{!9780, !9752, !9781}
!9781 = !DILocation(line: 2124, column: 2, scope: !9745)
!9782 = !DILocation(line: 2127, column: 6, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2127, column: 6)
!9784 = !DILocation(line: 2127, column: 12, scope: !9783)
!9785 = !DILocation(line: 2127, column: 6, scope: !9529)
!9786 = !DILocation(line: 2128, column: 19, scope: !9783)
!9787 = !DILocation(line: 2128, column: 25, scope: !9783)
!9788 = !DILocation(line: 2128, column: 3, scope: !9783)
!9789 = !DILocation(line: 2130, column: 21, scope: !9529)
!9790 = !DILocation(line: 2130, column: 2, scope: !9529)
!9791 = !DILocation(line: 2131, column: 1, scope: !9529)
!9792 = distinct !DISubprogram(name: "clk_core_rate_nuke_protect", scope: !3, file: !3, line: 686, type: !3273, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9793 = !DILocalVariable(name: "core", arg: 1, scope: !9792, file: !3, line: 686, type: !72)
!9794 = !DILocation(line: 686, column: 56, scope: !9792)
!9795 = !DILocalVariable(name: "ret", scope: !9792, file: !3, line: 688, type: !89)
!9796 = !DILocation(line: 688, column: 6, scope: !9792)
!9797 = !DILocation(line: 690, column: 2, scope: !9792)
!9798 = !DILocation(line: 690, column: 2, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 690, column: 2)
!9800 = !DILocation(line: 692, column: 7, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 692, column: 6)
!9802 = !DILocation(line: 692, column: 6, scope: !9792)
!9803 = !DILocation(line: 693, column: 3, scope: !9801)
!9804 = !DILocation(line: 695, column: 6, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 695, column: 6)
!9806 = !DILocation(line: 695, column: 12, scope: !9805)
!9807 = !DILocation(line: 695, column: 26, scope: !9805)
!9808 = !DILocation(line: 695, column: 6, scope: !9792)
!9809 = !DILocation(line: 696, column: 3, scope: !9805)
!9810 = !DILocation(line: 698, column: 8, scope: !9792)
!9811 = !DILocation(line: 698, column: 14, scope: !9792)
!9812 = !DILocation(line: 698, column: 6, scope: !9792)
!9813 = !DILocation(line: 699, column: 2, scope: !9792)
!9814 = !DILocation(line: 699, column: 8, scope: !9792)
!9815 = !DILocation(line: 699, column: 22, scope: !9792)
!9816 = !DILocation(line: 700, column: 26, scope: !9792)
!9817 = !DILocation(line: 700, column: 2, scope: !9792)
!9818 = !DILocation(line: 702, column: 9, scope: !9792)
!9819 = !DILocation(line: 702, column: 2, scope: !9792)
!9820 = !DILocation(line: 703, column: 1, scope: !9792)
!9821 = distinct !DISubprogram(name: "clk_core_rate_restore_protect", scope: !3, file: !3, line: 757, type: !9822, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9822 = !DISubroutineType(types: !9823)
!9823 = !{null, !72, !89}
!9824 = !DILocalVariable(name: "core", arg: 1, scope: !9821, file: !3, line: 757, type: !72)
!9825 = !DILocation(line: 757, column: 60, scope: !9821)
!9826 = !DILocalVariable(name: "count", arg: 2, scope: !9821, file: !3, line: 757, type: !89)
!9827 = !DILocation(line: 757, column: 70, scope: !9821)
!9828 = !DILocation(line: 759, column: 2, scope: !9821)
!9829 = !DILocation(line: 759, column: 2, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 759, column: 2)
!9831 = !DILocation(line: 761, column: 7, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 761, column: 6)
!9833 = !DILocation(line: 761, column: 6, scope: !9821)
!9834 = !DILocation(line: 762, column: 3, scope: !9832)
!9835 = !DILocation(line: 764, column: 6, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 764, column: 6)
!9837 = !DILocation(line: 764, column: 12, scope: !9836)
!9838 = !DILocation(line: 764, column: 6, scope: !9821)
!9839 = !DILocation(line: 765, column: 3, scope: !9836)
!9840 = !DILocation(line: 767, column: 24, scope: !9821)
!9841 = !DILocation(line: 767, column: 2, scope: !9821)
!9842 = !DILocation(line: 768, column: 24, scope: !9821)
!9843 = !DILocation(line: 768, column: 2, scope: !9821)
!9844 = !DILocation(line: 768, column: 8, scope: !9821)
!9845 = !DILocation(line: 768, column: 22, scope: !9821)
!9846 = !DILocation(line: 769, column: 1, scope: !9821)
!9847 = distinct !DISubprogram(name: "clk_calc_subtree", scope: !3, file: !3, line: 1888, type: !9848, scopeLine: 1890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9848 = !DISubroutineType(types: !9849)
!9849 = !{null, !72, !214, !72, !573}
!9850 = !DILocalVariable(name: "core", arg: 1, scope: !9847, file: !3, line: 1888, type: !72)
!9851 = !DILocation(line: 1888, column: 47, scope: !9847)
!9852 = !DILocalVariable(name: "new_rate", arg: 2, scope: !9847, file: !3, line: 1888, type: !214)
!9853 = !DILocation(line: 1888, column: 67, scope: !9847)
!9854 = !DILocalVariable(name: "new_parent", arg: 3, scope: !9847, file: !3, line: 1889, type: !72)
!9855 = !DILocation(line: 1889, column: 26, scope: !9847)
!9856 = !DILocalVariable(name: "p_index", arg: 4, scope: !9847, file: !3, line: 1889, type: !573)
!9857 = !DILocation(line: 1889, column: 41, scope: !9847)
!9858 = !DILocalVariable(name: "child", scope: !9847, file: !3, line: 1891, type: !72)
!9859 = !DILocation(line: 1891, column: 19, scope: !9847)
!9860 = !DILocation(line: 1893, column: 19, scope: !9847)
!9861 = !DILocation(line: 1893, column: 2, scope: !9847)
!9862 = !DILocation(line: 1893, column: 8, scope: !9847)
!9863 = !DILocation(line: 1893, column: 17, scope: !9847)
!9864 = !DILocation(line: 1894, column: 21, scope: !9847)
!9865 = !DILocation(line: 1894, column: 2, scope: !9847)
!9866 = !DILocation(line: 1894, column: 8, scope: !9847)
!9867 = !DILocation(line: 1894, column: 19, scope: !9847)
!9868 = !DILocation(line: 1895, column: 27, scope: !9847)
!9869 = !DILocation(line: 1895, column: 2, scope: !9847)
!9870 = !DILocation(line: 1895, column: 8, scope: !9847)
!9871 = !DILocation(line: 1895, column: 25, scope: !9847)
!9872 = !DILocation(line: 1897, column: 2, scope: !9847)
!9873 = !DILocation(line: 1897, column: 8, scope: !9847)
!9874 = !DILocation(line: 1897, column: 18, scope: !9847)
!9875 = !DILocation(line: 1898, column: 6, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1898, column: 6)
!9877 = !DILocation(line: 1898, column: 17, scope: !9876)
!9878 = !DILocation(line: 1898, column: 20, scope: !9876)
!9879 = !DILocation(line: 1898, column: 34, scope: !9876)
!9880 = !DILocation(line: 1898, column: 40, scope: !9876)
!9881 = !DILocation(line: 1898, column: 31, scope: !9876)
!9882 = !DILocation(line: 1898, column: 6, scope: !9847)
!9883 = !DILocation(line: 1899, column: 27, scope: !9876)
!9884 = !DILocation(line: 1899, column: 3, scope: !9876)
!9885 = !DILocation(line: 1899, column: 15, scope: !9876)
!9886 = !DILocation(line: 1899, column: 25, scope: !9876)
!9887 = !DILocalVariable(name: "____ptr", scope: !9888, file: !3, line: 1901, type: !705)
!9888 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 1901, column: 2)
!9889 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1901, column: 2)
!9890 = !DILocation(line: 1901, column: 2, scope: !9888)
!9891 = !DILocalVariable(name: "__mptr", scope: !9892, file: !3, line: 1901, type: !71)
!9892 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 1901, column: 2)
!9893 = !DILocation(line: 1901, column: 2, scope: !9892)
!9894 = !DILocation(line: 1901, column: 2, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 1901, column: 2)
!9896 = !DILocation(line: 1901, column: 2, scope: !9889)
!9897 = !DILocation(line: 1901, column: 2, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 1901, column: 2)
!9899 = !DILocation(line: 1902, column: 32, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 1901, column: 59)
!9901 = !DILocation(line: 1902, column: 39, scope: !9900)
!9902 = !DILocation(line: 1902, column: 21, scope: !9900)
!9903 = !DILocation(line: 1902, column: 3, scope: !9900)
!9904 = !DILocation(line: 1902, column: 10, scope: !9900)
!9905 = !DILocation(line: 1902, column: 19, scope: !9900)
!9906 = !DILocation(line: 1903, column: 20, scope: !9900)
!9907 = !DILocation(line: 1903, column: 27, scope: !9900)
!9908 = !DILocation(line: 1903, column: 34, scope: !9900)
!9909 = !DILocation(line: 1903, column: 3, scope: !9900)
!9910 = !DILocation(line: 1904, column: 2, scope: !9900)
!9911 = !DILocalVariable(name: "____ptr", scope: !9912, file: !3, line: 1901, type: !705)
!9912 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 1901, column: 2)
!9913 = !DILocation(line: 1901, column: 2, scope: !9912)
!9914 = !DILocalVariable(name: "__mptr", scope: !9915, file: !3, line: 1901, type: !71)
!9915 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1901, column: 2)
!9916 = !DILocation(line: 1901, column: 2, scope: !9915)
!9917 = !DILocation(line: 1901, column: 2, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 1901, column: 2)
!9919 = distinct !{!9919, !9896, !9920}
!9920 = !DILocation(line: 1904, column: 2, scope: !9889)
!9921 = !DILocation(line: 1905, column: 1, scope: !9847)
!9922 = distinct !DISubprogram(name: "__clk_set_parent_before", scope: !3, file: !3, line: 1746, type: !9923, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9923 = !DISubroutineType(types: !9924)
!9924 = !{!72, !72, !72}
!9925 = !DILocalVariable(name: "core", arg: 1, scope: !9922, file: !3, line: 1746, type: !72)
!9926 = !DILocation(line: 1746, column: 66, scope: !9922)
!9927 = !DILocalVariable(name: "parent", arg: 2, scope: !9922, file: !3, line: 1747, type: !72)
!9928 = !DILocation(line: 1747, column: 26, scope: !9922)
!9929 = !DILocalVariable(name: "flags", scope: !9922, file: !3, line: 1749, type: !214)
!9930 = !DILocation(line: 1749, column: 16, scope: !9922)
!9931 = !DILocalVariable(name: "old_parent", scope: !9922, file: !3, line: 1750, type: !72)
!9932 = !DILocation(line: 1750, column: 19, scope: !9922)
!9933 = !DILocation(line: 1750, column: 32, scope: !9922)
!9934 = !DILocation(line: 1750, column: 38, scope: !9922)
!9935 = !DILocation(line: 1773, column: 6, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 1773, column: 6)
!9937 = !DILocation(line: 1773, column: 12, scope: !9936)
!9938 = !DILocation(line: 1773, column: 18, scope: !9936)
!9939 = !DILocation(line: 1773, column: 6, scope: !9922)
!9940 = !DILocation(line: 1774, column: 27, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 1773, column: 43)
!9942 = !DILocation(line: 1774, column: 3, scope: !9941)
!9943 = !DILocation(line: 1775, column: 27, scope: !9941)
!9944 = !DILocation(line: 1775, column: 3, scope: !9941)
!9945 = !DILocation(line: 1776, column: 2, scope: !9941)
!9946 = !DILocation(line: 1779, column: 6, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 1779, column: 6)
!9948 = !DILocation(line: 1779, column: 12, scope: !9947)
!9949 = !DILocation(line: 1779, column: 6, scope: !9922)
!9950 = !DILocation(line: 1780, column: 27, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 1779, column: 27)
!9952 = !DILocation(line: 1780, column: 3, scope: !9951)
!9953 = !DILocation(line: 1781, column: 24, scope: !9951)
!9954 = !DILocation(line: 1781, column: 3, scope: !9951)
!9955 = !DILocation(line: 1782, column: 2, scope: !9951)
!9956 = !DILocation(line: 1785, column: 10, scope: !9922)
!9957 = !DILocation(line: 1785, column: 8, scope: !9922)
!9958 = !DILocation(line: 1786, column: 15, scope: !9922)
!9959 = !DILocation(line: 1786, column: 21, scope: !9922)
!9960 = !DILocation(line: 1786, column: 2, scope: !9922)
!9961 = !DILocation(line: 1787, column: 20, scope: !9922)
!9962 = !DILocation(line: 1787, column: 2, scope: !9922)
!9963 = !DILocation(line: 1789, column: 9, scope: !9922)
!9964 = !DILocation(line: 1789, column: 2, scope: !9922)
!9965 = distinct !DISubprogram(name: "trace_clk_set_parent", scope: !8305, file: !8305, line: 140, type: !4446, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9966 = !DILocalVariable(name: "core", arg: 1, scope: !9965, file: !8305, line: 140, type: !72)
!9967 = !DILocation(line: 140, column: 1, scope: !9965)
!9968 = !DILocalVariable(name: "parent", arg: 2, scope: !9965, file: !8305, line: 140, type: !72)
!9969 = distinct !DISubprogram(name: "trace_clk_set_parent_complete", scope: !8305, file: !8305, line: 147, type: !4446, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9970 = !DILocalVariable(name: "core", arg: 1, scope: !9969, file: !8305, line: 147, type: !72)
!9971 = !DILocation(line: 147, column: 1, scope: !9969)
!9972 = !DILocalVariable(name: "parent", arg: 2, scope: !9969, file: !8305, line: 147, type: !72)
!9973 = distinct !DISubprogram(name: "__clk_set_parent_after", scope: !3, file: !3, line: 1792, type: !9974, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!9974 = !DISubroutineType(types: !9975)
!9975 = !{null, !72, !72, !72}
!9976 = !DILocalVariable(name: "core", arg: 1, scope: !9973, file: !3, line: 1792, type: !72)
!9977 = !DILocation(line: 1792, column: 53, scope: !9973)
!9978 = !DILocalVariable(name: "parent", arg: 2, scope: !9973, file: !3, line: 1793, type: !72)
!9979 = !DILocation(line: 1793, column: 25, scope: !9973)
!9980 = !DILocalVariable(name: "old_parent", arg: 3, scope: !9973, file: !3, line: 1794, type: !72)
!9981 = !DILocation(line: 1794, column: 25, scope: !9973)
!9982 = !DILocation(line: 1800, column: 6, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 1800, column: 6)
!9984 = !DILocation(line: 1800, column: 12, scope: !9983)
!9985 = !DILocation(line: 1800, column: 6, scope: !9973)
!9986 = !DILocation(line: 1801, column: 25, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 1800, column: 27)
!9988 = !DILocation(line: 1801, column: 3, scope: !9987)
!9989 = !DILocation(line: 1802, column: 30, scope: !9987)
!9990 = !DILocation(line: 1802, column: 3, scope: !9987)
!9991 = !DILocation(line: 1803, column: 2, scope: !9987)
!9992 = !DILocation(line: 1806, column: 6, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 1806, column: 6)
!9994 = !DILocation(line: 1806, column: 12, scope: !9993)
!9995 = !DILocation(line: 1806, column: 18, scope: !9993)
!9996 = !DILocation(line: 1806, column: 6, scope: !9973)
!9997 = !DILocation(line: 1807, column: 30, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 1806, column: 43)
!9999 = !DILocation(line: 1807, column: 3, scope: !9998)
!10000 = !DILocation(line: 1808, column: 30, scope: !9998)
!10001 = !DILocation(line: 1808, column: 3, scope: !9998)
!10002 = !DILocation(line: 1809, column: 2, scope: !9998)
!10003 = !DILocation(line: 1810, column: 1, scope: !9973)
!10004 = distinct !DISubprogram(name: "trace_clk_set_rate", scope: !8305, file: !8305, line: 107, type: !9022, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10005 = !DILocalVariable(name: "core", arg: 1, scope: !10004, file: !8305, line: 107, type: !72)
!10006 = !DILocation(line: 107, column: 1, scope: !10004)
!10007 = !DILocalVariable(name: "rate", arg: 2, scope: !10004, file: !8305, line: 107, type: !214)
!10008 = distinct !DISubprogram(name: "trace_clk_set_rate_complete", scope: !8305, file: !8305, line: 114, type: !9022, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10009 = !DILocalVariable(name: "core", arg: 1, scope: !10008, file: !8305, line: 114, type: !72)
!10010 = !DILocation(line: 114, column: 1, scope: !10008)
!10011 = !DILocalVariable(name: "rate", arg: 2, scope: !10008, file: !8305, line: 114, type: !214)
!10012 = distinct !DISubprogram(name: "clk_reparent", scope: !3, file: !3, line: 1720, type: !4446, scopeLine: 1721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10013 = !DILocalVariable(name: "core", arg: 1, scope: !10012, file: !3, line: 1720, type: !72)
!10014 = !DILocation(line: 1720, column: 43, scope: !10012)
!10015 = !DILocalVariable(name: "new_parent", arg: 2, scope: !10012, file: !3, line: 1720, type: !72)
!10016 = !DILocation(line: 1720, column: 66, scope: !10012)
!10017 = !DILocalVariable(name: "was_orphan", scope: !10012, file: !3, line: 1722, type: !1008)
!10018 = !DILocation(line: 1722, column: 7, scope: !10012)
!10019 = !DILocation(line: 1722, column: 20, scope: !10012)
!10020 = !DILocation(line: 1722, column: 26, scope: !10012)
!10021 = !DILocation(line: 1724, column: 13, scope: !10012)
!10022 = !DILocation(line: 1724, column: 19, scope: !10012)
!10023 = !DILocation(line: 1724, column: 2, scope: !10012)
!10024 = !DILocation(line: 1726, column: 6, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 1726, column: 6)
!10026 = !DILocation(line: 1726, column: 6, scope: !10012)
!10027 = !DILocalVariable(name: "becomes_orphan", scope: !10028, file: !3, line: 1727, type: !1008)
!10028 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 1726, column: 18)
!10029 = !DILocation(line: 1727, column: 8, scope: !10028)
!10030 = !DILocation(line: 1727, column: 25, scope: !10028)
!10031 = !DILocation(line: 1727, column: 37, scope: !10028)
!10032 = !DILocation(line: 1730, column: 7, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 1730, column: 7)
!10034 = !DILocation(line: 1730, column: 19, scope: !10033)
!10035 = !DILocation(line: 1730, column: 32, scope: !10033)
!10036 = !DILocation(line: 1730, column: 29, scope: !10033)
!10037 = !DILocation(line: 1730, column: 7, scope: !10028)
!10038 = !DILocation(line: 1731, column: 4, scope: !10033)
!10039 = !DILocation(line: 1731, column: 16, scope: !10033)
!10040 = !DILocation(line: 1731, column: 26, scope: !10033)
!10041 = !DILocation(line: 1733, column: 19, scope: !10028)
!10042 = !DILocation(line: 1733, column: 25, scope: !10028)
!10043 = !DILocation(line: 1733, column: 38, scope: !10028)
!10044 = !DILocation(line: 1733, column: 50, scope: !10028)
!10045 = !DILocation(line: 1733, column: 3, scope: !10028)
!10046 = !DILocation(line: 1735, column: 7, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 1735, column: 7)
!10048 = !DILocation(line: 1735, column: 21, scope: !10047)
!10049 = !DILocation(line: 1735, column: 18, scope: !10047)
!10050 = !DILocation(line: 1735, column: 7, scope: !10028)
!10051 = !DILocation(line: 1736, column: 34, scope: !10047)
!10052 = !DILocation(line: 1736, column: 40, scope: !10047)
!10053 = !DILocation(line: 1736, column: 4, scope: !10047)
!10054 = !DILocation(line: 1737, column: 2, scope: !10028)
!10055 = !DILocation(line: 1738, column: 19, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 1737, column: 9)
!10057 = !DILocation(line: 1738, column: 25, scope: !10056)
!10058 = !DILocation(line: 1738, column: 3, scope: !10056)
!10059 = !DILocation(line: 1739, column: 8, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 1739, column: 7)
!10061 = !DILocation(line: 1739, column: 7, scope: !10056)
!10062 = !DILocation(line: 1740, column: 34, scope: !10060)
!10063 = !DILocation(line: 1740, column: 4, scope: !10060)
!10064 = !DILocation(line: 1743, column: 17, scope: !10012)
!10065 = !DILocation(line: 1743, column: 2, scope: !10012)
!10066 = !DILocation(line: 1743, column: 8, scope: !10012)
!10067 = !DILocation(line: 1743, column: 15, scope: !10012)
!10068 = !DILocation(line: 1744, column: 1, scope: !10012)
!10069 = distinct !DISubprogram(name: "hlist_add_head", scope: !5752, file: !5752, line: 879, type: !10070, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10070 = !DISubroutineType(types: !10071)
!10071 = !{null, !705, !2346}
!10072 = !DILocalVariable(name: "n", arg: 1, scope: !10069, file: !5752, line: 879, type: !705)
!10073 = !DILocation(line: 879, column: 54, scope: !10069)
!10074 = !DILocalVariable(name: "h", arg: 2, scope: !10069, file: !5752, line: 879, type: !2346)
!10075 = !DILocation(line: 879, column: 76, scope: !10069)
!10076 = !DILocalVariable(name: "first", scope: !10069, file: !5752, line: 881, type: !705)
!10077 = !DILocation(line: 881, column: 21, scope: !10069)
!10078 = !DILocation(line: 881, column: 29, scope: !10069)
!10079 = !DILocation(line: 881, column: 32, scope: !10069)
!10080 = !DILocation(line: 882, column: 2, scope: !10069)
!10081 = !DILocation(line: 882, column: 2, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10069, file: !5752, line: 882, column: 2)
!10083 = !DILocation(line: 882, column: 2, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10082, file: !5752, line: 882, column: 2)
!10085 = !DILocation(line: 882, column: 2, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10082, file: !5752, line: 882, column: 2)
!10087 = !DILocation(line: 883, column: 6, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10069, file: !5752, line: 883, column: 6)
!10089 = !DILocation(line: 883, column: 6, scope: !10069)
!10090 = !DILocation(line: 884, column: 3, scope: !10088)
!10091 = !DILocation(line: 884, column: 3, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10088, file: !5752, line: 884, column: 3)
!10093 = !DILocation(line: 884, column: 3, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10092, file: !5752, line: 884, column: 3)
!10095 = !DILocation(line: 884, column: 3, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10092, file: !5752, line: 884, column: 3)
!10097 = !DILocation(line: 885, column: 2, scope: !10069)
!10098 = !DILocation(line: 885, column: 2, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10069, file: !5752, line: 885, column: 2)
!10100 = !DILocation(line: 885, column: 2, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10099, file: !5752, line: 885, column: 2)
!10102 = !DILocation(line: 885, column: 2, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10099, file: !5752, line: 885, column: 2)
!10104 = !DILocation(line: 886, column: 2, scope: !10069)
!10105 = !DILocation(line: 886, column: 2, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10069, file: !5752, line: 886, column: 2)
!10107 = !DILocation(line: 886, column: 2, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10106, file: !5752, line: 886, column: 2)
!10109 = !DILocation(line: 886, column: 2, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10106, file: !5752, line: 886, column: 2)
!10111 = !DILocation(line: 887, column: 1, scope: !10069)
!10112 = distinct !DISubprogram(name: "clk_core_update_orphan_status", scope: !3, file: !3, line: 1710, type: !10113, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10113 = !DISubroutineType(types: !10114)
!10114 = !{null, !72, !1008}
!10115 = !DILocalVariable(name: "core", arg: 1, scope: !10112, file: !3, line: 1710, type: !72)
!10116 = !DILocation(line: 1710, column: 60, scope: !10112)
!10117 = !DILocalVariable(name: "is_orphan", arg: 2, scope: !10112, file: !3, line: 1710, type: !1008)
!10118 = !DILocation(line: 1710, column: 71, scope: !10112)
!10119 = !DILocalVariable(name: "child", scope: !10112, file: !3, line: 1712, type: !72)
!10120 = !DILocation(line: 1712, column: 19, scope: !10112)
!10121 = !DILocation(line: 1714, column: 17, scope: !10112)
!10122 = !DILocation(line: 1714, column: 2, scope: !10112)
!10123 = !DILocation(line: 1714, column: 8, scope: !10112)
!10124 = !DILocation(line: 1714, column: 15, scope: !10112)
!10125 = !DILocalVariable(name: "____ptr", scope: !10126, file: !3, line: 1716, type: !705)
!10126 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 1716, column: 2)
!10127 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 1716, column: 2)
!10128 = !DILocation(line: 1716, column: 2, scope: !10126)
!10129 = !DILocalVariable(name: "__mptr", scope: !10130, file: !3, line: 1716, type: !71)
!10130 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 1716, column: 2)
!10131 = !DILocation(line: 1716, column: 2, scope: !10130)
!10132 = !DILocation(line: 1716, column: 2, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 1716, column: 2)
!10134 = !DILocation(line: 1716, column: 2, scope: !10127)
!10135 = !DILocation(line: 1716, column: 2, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 1716, column: 2)
!10137 = !DILocation(line: 1717, column: 33, scope: !10136)
!10138 = !DILocation(line: 1717, column: 40, scope: !10136)
!10139 = !DILocation(line: 1717, column: 3, scope: !10136)
!10140 = !DILocalVariable(name: "____ptr", scope: !10141, file: !3, line: 1716, type: !705)
!10141 = distinct !DILexicalBlock(scope: !10136, file: !3, line: 1716, column: 2)
!10142 = !DILocation(line: 1716, column: 2, scope: !10141)
!10143 = !DILocalVariable(name: "__mptr", scope: !10144, file: !3, line: 1716, type: !71)
!10144 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 1716, column: 2)
!10145 = !DILocation(line: 1716, column: 2, scope: !10144)
!10146 = !DILocation(line: 1716, column: 2, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 1716, column: 2)
!10148 = distinct !{!10148, !10134, !10149}
!10149 = !DILocation(line: 1717, column: 49, scope: !10127)
!10150 = !DILocation(line: 1718, column: 1, scope: !10112)
!10151 = distinct !DISubprogram(name: "__clk_speculate_rates", scope: !3, file: !3, line: 1857, type: !4153, scopeLine: 1859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10152 = !DILocalVariable(name: "core", arg: 1, scope: !10151, file: !3, line: 1857, type: !72)
!10153 = !DILocation(line: 1857, column: 51, scope: !10151)
!10154 = !DILocalVariable(name: "parent_rate", arg: 2, scope: !10151, file: !3, line: 1858, type: !214)
!10155 = !DILocation(line: 1858, column: 20, scope: !10151)
!10156 = !DILocalVariable(name: "child", scope: !10151, file: !3, line: 1860, type: !72)
!10157 = !DILocation(line: 1860, column: 19, scope: !10151)
!10158 = !DILocalVariable(name: "new_rate", scope: !10151, file: !3, line: 1861, type: !214)
!10159 = !DILocation(line: 1861, column: 16, scope: !10151)
!10160 = !DILocalVariable(name: "ret", scope: !10151, file: !3, line: 1862, type: !89)
!10161 = !DILocation(line: 1862, column: 6, scope: !10151)
!10162 = !DILocation(line: 1864, column: 2, scope: !10151)
!10163 = !DILocation(line: 1864, column: 2, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 1864, column: 2)
!10165 = !DILocation(line: 1866, column: 24, scope: !10151)
!10166 = !DILocation(line: 1866, column: 30, scope: !10151)
!10167 = !DILocation(line: 1866, column: 13, scope: !10151)
!10168 = !DILocation(line: 1866, column: 11, scope: !10151)
!10169 = !DILocation(line: 1869, column: 6, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 1869, column: 6)
!10171 = !DILocation(line: 1869, column: 12, scope: !10170)
!10172 = !DILocation(line: 1869, column: 6, scope: !10151)
!10173 = !DILocation(line: 1870, column: 22, scope: !10170)
!10174 = !DILocation(line: 1870, column: 45, scope: !10170)
!10175 = !DILocation(line: 1870, column: 51, scope: !10170)
!10176 = !DILocation(line: 1870, column: 57, scope: !10170)
!10177 = !DILocation(line: 1870, column: 9, scope: !10170)
!10178 = !DILocation(line: 1870, column: 7, scope: !10170)
!10179 = !DILocation(line: 1870, column: 3, scope: !10170)
!10180 = !DILocation(line: 1872, column: 6, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 1872, column: 6)
!10182 = !DILocation(line: 1872, column: 10, scope: !10181)
!10183 = !DILocation(line: 1872, column: 6, scope: !10151)
!10184 = !DILocation(line: 1873, column: 3, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10186, file: !3, line: 1873, column: 3)
!10186 = distinct !DILexicalBlock(scope: !10187, file: !3, line: 1873, column: 3)
!10187 = distinct !DILexicalBlock(scope: !10181, file: !3, line: 1872, column: 30)
!10188 = !DILocation(line: 1873, column: 3, scope: !10186)
!10189 = !DILocation(line: 1875, column: 3, scope: !10187)
!10190 = !DILocalVariable(name: "____ptr", scope: !10191, file: !3, line: 1878, type: !705)
!10191 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 1878, column: 2)
!10192 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 1878, column: 2)
!10193 = !DILocation(line: 1878, column: 2, scope: !10191)
!10194 = !DILocalVariable(name: "__mptr", scope: !10195, file: !3, line: 1878, type: !71)
!10195 = distinct !DILexicalBlock(scope: !10191, file: !3, line: 1878, column: 2)
!10196 = !DILocation(line: 1878, column: 2, scope: !10195)
!10197 = !DILocation(line: 1878, column: 2, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10195, file: !3, line: 1878, column: 2)
!10199 = !DILocation(line: 1878, column: 2, scope: !10192)
!10200 = !DILocation(line: 1878, column: 2, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 1878, column: 2)
!10202 = !DILocation(line: 1879, column: 31, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 1878, column: 59)
!10204 = !DILocation(line: 1879, column: 38, scope: !10203)
!10205 = !DILocation(line: 1879, column: 9, scope: !10203)
!10206 = !DILocation(line: 1879, column: 7, scope: !10203)
!10207 = !DILocation(line: 1880, column: 7, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 1880, column: 7)
!10209 = !DILocation(line: 1880, column: 11, scope: !10208)
!10210 = !DILocation(line: 1880, column: 7, scope: !10203)
!10211 = !DILocation(line: 1881, column: 4, scope: !10208)
!10212 = !DILocation(line: 1882, column: 2, scope: !10203)
!10213 = !DILocalVariable(name: "____ptr", scope: !10214, file: !3, line: 1878, type: !705)
!10214 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 1878, column: 2)
!10215 = !DILocation(line: 1878, column: 2, scope: !10214)
!10216 = !DILocalVariable(name: "__mptr", scope: !10217, file: !3, line: 1878, type: !71)
!10217 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 1878, column: 2)
!10218 = !DILocation(line: 1878, column: 2, scope: !10217)
!10219 = !DILocation(line: 1878, column: 2, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 1878, column: 2)
!10221 = distinct !{!10221, !10199, !10222}
!10222 = !DILocation(line: 1882, column: 2, scope: !10192)
!10223 = !DILabel(scope: !10151, name: "out", file: !3, line: 1884)
!10224 = !DILocation(line: 1884, column: 1, scope: !10151)
!10225 = !DILocation(line: 1885, column: 9, scope: !10151)
!10226 = !DILocation(line: 1885, column: 2, scope: !10151)
!10227 = distinct !DISubprogram(name: "__clk_set_parent", scope: !3, file: !3, line: 1812, type: !10228, scopeLine: 1814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10228 = !DISubroutineType(types: !10229)
!10229 = !{!89, !72, !72, !573}
!10230 = !DILocalVariable(name: "core", arg: 1, scope: !10227, file: !3, line: 1812, type: !72)
!10231 = !DILocation(line: 1812, column: 46, scope: !10227)
!10232 = !DILocalVariable(name: "parent", arg: 2, scope: !10227, file: !3, line: 1812, type: !72)
!10233 = !DILocation(line: 1812, column: 69, scope: !10227)
!10234 = !DILocalVariable(name: "p_index", arg: 3, scope: !10227, file: !3, line: 1813, type: !573)
!10235 = !DILocation(line: 1813, column: 11, scope: !10227)
!10236 = !DILocalVariable(name: "flags", scope: !10227, file: !3, line: 1815, type: !214)
!10237 = !DILocation(line: 1815, column: 16, scope: !10227)
!10238 = !DILocalVariable(name: "ret", scope: !10227, file: !3, line: 1816, type: !89)
!10239 = !DILocation(line: 1816, column: 6, scope: !10227)
!10240 = !DILocalVariable(name: "old_parent", scope: !10227, file: !3, line: 1817, type: !72)
!10241 = !DILocation(line: 1817, column: 19, scope: !10227)
!10242 = !DILocation(line: 1819, column: 39, scope: !10227)
!10243 = !DILocation(line: 1819, column: 45, scope: !10227)
!10244 = !DILocation(line: 1819, column: 15, scope: !10227)
!10245 = !DILocation(line: 1819, column: 13, scope: !10227)
!10246 = !DILocation(line: 1821, column: 23, scope: !10227)
!10247 = !DILocation(line: 1821, column: 29, scope: !10227)
!10248 = !DILocation(line: 1821, column: 2, scope: !10227)
!10249 = !DILocation(line: 1824, column: 6, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 1824, column: 6)
!10251 = !DILocation(line: 1824, column: 13, scope: !10250)
!10252 = !DILocation(line: 1824, column: 16, scope: !10250)
!10253 = !DILocation(line: 1824, column: 22, scope: !10250)
!10254 = !DILocation(line: 1824, column: 27, scope: !10250)
!10255 = !DILocation(line: 1824, column: 6, scope: !10227)
!10256 = !DILocation(line: 1825, column: 9, scope: !10250)
!10257 = !DILocation(line: 1825, column: 15, scope: !10250)
!10258 = !DILocation(line: 1825, column: 20, scope: !10250)
!10259 = !DILocation(line: 1825, column: 31, scope: !10250)
!10260 = !DILocation(line: 1825, column: 37, scope: !10250)
!10261 = !DILocation(line: 1825, column: 41, scope: !10250)
!10262 = !DILocation(line: 1825, column: 7, scope: !10250)
!10263 = !DILocation(line: 1825, column: 3, scope: !10250)
!10264 = !DILocation(line: 1827, column: 32, scope: !10227)
!10265 = !DILocation(line: 1827, column: 38, scope: !10227)
!10266 = !DILocation(line: 1827, column: 2, scope: !10227)
!10267 = !DILocation(line: 1829, column: 6, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 1829, column: 6)
!10269 = !DILocation(line: 1829, column: 6, scope: !10227)
!10270 = !DILocation(line: 1830, column: 11, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1829, column: 11)
!10272 = !DILocation(line: 1830, column: 9, scope: !10271)
!10273 = !DILocation(line: 1831, column: 16, scope: !10271)
!10274 = !DILocation(line: 1831, column: 22, scope: !10271)
!10275 = !DILocation(line: 1831, column: 3, scope: !10271)
!10276 = !DILocation(line: 1832, column: 21, scope: !10271)
!10277 = !DILocation(line: 1832, column: 3, scope: !10271)
!10278 = !DILocation(line: 1833, column: 26, scope: !10271)
!10279 = !DILocation(line: 1833, column: 32, scope: !10271)
!10280 = !DILocation(line: 1833, column: 44, scope: !10271)
!10281 = !DILocation(line: 1833, column: 3, scope: !10271)
!10282 = !DILocation(line: 1835, column: 10, scope: !10271)
!10283 = !DILocation(line: 1835, column: 3, scope: !10271)
!10284 = !DILocation(line: 1838, column: 25, scope: !10227)
!10285 = !DILocation(line: 1838, column: 31, scope: !10227)
!10286 = !DILocation(line: 1838, column: 39, scope: !10227)
!10287 = !DILocation(line: 1838, column: 2, scope: !10227)
!10288 = !DILocation(line: 1840, column: 2, scope: !10227)
!10289 = !DILocation(line: 1841, column: 1, scope: !10227)
!10290 = distinct !DISubprogram(name: "trace_clk_set_phase", scope: !8305, file: !8305, line: 173, type: !9822, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10291 = !DILocalVariable(name: "core", arg: 1, scope: !10290, file: !8305, line: 173, type: !72)
!10292 = !DILocation(line: 173, column: 1, scope: !10290)
!10293 = !DILocalVariable(name: "phase", arg: 2, scope: !10290, file: !8305, line: 173, type: !89)
!10294 = distinct !DISubprogram(name: "trace_clk_set_phase_complete", scope: !8305, file: !8305, line: 180, type: !9822, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10295 = !DILocalVariable(name: "core", arg: 1, scope: !10294, file: !8305, line: 180, type: !72)
!10296 = !DILocation(line: 180, column: 1, scope: !10294)
!10297 = !DILocalVariable(name: "phase", arg: 2, scope: !10294, file: !8305, line: 180, type: !89)
!10298 = distinct !DISubprogram(name: "trace_clk_set_duty_cycle", scope: !8305, file: !8305, line: 209, type: !10299, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10299 = !DISubroutineType(types: !10300)
!10300 = !{null, !72, !2163}
!10301 = !DILocalVariable(name: "core", arg: 1, scope: !10298, file: !8305, line: 209, type: !72)
!10302 = !DILocation(line: 209, column: 1, scope: !10298)
!10303 = !DILocalVariable(name: "duty", arg: 2, scope: !10298, file: !8305, line: 209, type: !2163)
!10304 = distinct !DISubprogram(name: "clk_core_set_duty_cycle_parent_nolock", scope: !3, file: !3, line: 2785, type: !4883, scopeLine: 2787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10305 = !DILocalVariable(name: "core", arg: 1, scope: !10304, file: !3, line: 2785, type: !72)
!10306 = !DILocation(line: 2785, column: 67, scope: !10304)
!10307 = !DILocalVariable(name: "duty", arg: 2, scope: !10304, file: !3, line: 2786, type: !2163)
!10308 = !DILocation(line: 2786, column: 25, scope: !10304)
!10309 = !DILocalVariable(name: "ret", scope: !10304, file: !3, line: 2788, type: !89)
!10310 = !DILocation(line: 2788, column: 6, scope: !10304)
!10311 = !DILocation(line: 2790, column: 6, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 2790, column: 6)
!10313 = !DILocation(line: 2790, column: 12, scope: !10312)
!10314 = !DILocation(line: 2790, column: 19, scope: !10312)
!10315 = !DILocation(line: 2791, column: 6, scope: !10312)
!10316 = !DILocation(line: 2791, column: 12, scope: !10312)
!10317 = !DILocation(line: 2791, column: 18, scope: !10312)
!10318 = !DILocation(line: 2790, column: 6, scope: !10304)
!10319 = !DILocation(line: 2792, column: 40, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 2791, column: 67)
!10321 = !DILocation(line: 2792, column: 46, scope: !10320)
!10322 = !DILocation(line: 2792, column: 54, scope: !10320)
!10323 = !DILocation(line: 2792, column: 9, scope: !10320)
!10324 = !DILocation(line: 2792, column: 7, scope: !10320)
!10325 = !DILocation(line: 2793, column: 11, scope: !10320)
!10326 = !DILocation(line: 2793, column: 17, scope: !10320)
!10327 = !DILocation(line: 2793, column: 3, scope: !10320)
!10328 = !DILocation(line: 2793, column: 24, scope: !10320)
!10329 = !DILocation(line: 2793, column: 30, scope: !10320)
!10330 = !DILocation(line: 2793, column: 38, scope: !10320)
!10331 = !DILocation(line: 2794, column: 2, scope: !10320)
!10332 = !DILocation(line: 2796, column: 9, scope: !10304)
!10333 = !DILocation(line: 2796, column: 2, scope: !10304)
!10334 = distinct !DISubprogram(name: "trace_clk_set_duty_cycle_complete", scope: !8305, file: !8305, line: 216, type: !10299, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10335 = !DILocalVariable(name: "core", arg: 1, scope: !10334, file: !8305, line: 216, type: !72)
!10336 = !DILocation(line: 216, column: 1, scope: !10334)
!10337 = !DILocalVariable(name: "duty", arg: 2, scope: !10334, file: !8305, line: 216, type: !2163)
!10338 = distinct !DISubprogram(name: "clk_core_update_duty_cycle_nolock", scope: !3, file: !3, line: 2718, type: !3273, scopeLine: 2719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10339 = !DILocalVariable(name: "core", arg: 1, scope: !10338, file: !3, line: 2718, type: !72)
!10340 = !DILocation(line: 2718, column: 63, scope: !10338)
!10341 = !DILocalVariable(name: "duty", scope: !10338, file: !3, line: 2720, type: !2163)
!10342 = !DILocation(line: 2720, column: 19, scope: !10338)
!10343 = !DILocation(line: 2720, column: 27, scope: !10338)
!10344 = !DILocation(line: 2720, column: 33, scope: !10338)
!10345 = !DILocalVariable(name: "ret", scope: !10338, file: !3, line: 2721, type: !89)
!10346 = !DILocation(line: 2721, column: 6, scope: !10338)
!10347 = !DILocation(line: 2723, column: 7, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 2723, column: 6)
!10349 = !DILocation(line: 2723, column: 13, scope: !10348)
!10350 = !DILocation(line: 2723, column: 18, scope: !10348)
!10351 = !DILocation(line: 2723, column: 6, scope: !10338)
!10352 = !DILocation(line: 2724, column: 51, scope: !10348)
!10353 = !DILocation(line: 2724, column: 10, scope: !10348)
!10354 = !DILocation(line: 2724, column: 3, scope: !10348)
!10355 = !DILocation(line: 2726, column: 8, scope: !10338)
!10356 = !DILocation(line: 2726, column: 14, scope: !10338)
!10357 = !DILocation(line: 2726, column: 19, scope: !10338)
!10358 = !DILocation(line: 2726, column: 34, scope: !10338)
!10359 = !DILocation(line: 2726, column: 40, scope: !10338)
!10360 = !DILocation(line: 2726, column: 44, scope: !10338)
!10361 = !DILocation(line: 2726, column: 6, scope: !10338)
!10362 = !DILocation(line: 2727, column: 6, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 2727, column: 6)
!10364 = !DILocation(line: 2727, column: 6, scope: !10338)
!10365 = !DILocation(line: 2728, column: 3, scope: !10363)
!10366 = !DILocation(line: 2731, column: 6, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 2731, column: 6)
!10368 = !DILocation(line: 2731, column: 12, scope: !10367)
!10369 = !DILocation(line: 2731, column: 16, scope: !10367)
!10370 = !DILocation(line: 2731, column: 21, scope: !10367)
!10371 = !DILocation(line: 2731, column: 24, scope: !10367)
!10372 = !DILocation(line: 2731, column: 30, scope: !10367)
!10373 = !DILocation(line: 2731, column: 36, scope: !10367)
!10374 = !DILocation(line: 2731, column: 42, scope: !10367)
!10375 = !DILocation(line: 2731, column: 34, scope: !10367)
!10376 = !DILocation(line: 2731, column: 6, scope: !10338)
!10377 = !DILocation(line: 2732, column: 7, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 2731, column: 47)
!10379 = !DILocation(line: 2733, column: 3, scope: !10378)
!10380 = !DILocation(line: 2736, column: 2, scope: !10338)
!10381 = !DILabel(scope: !10338, name: "reset", file: !3, line: 2738)
!10382 = !DILocation(line: 2738, column: 1, scope: !10338)
!10383 = !DILocation(line: 2739, column: 35, scope: !10338)
!10384 = !DILocation(line: 2739, column: 2, scope: !10338)
!10385 = !DILocation(line: 2740, column: 9, scope: !10338)
!10386 = !DILocation(line: 2740, column: 2, scope: !10338)
!10387 = !DILocation(line: 2741, column: 1, scope: !10338)
!10388 = distinct !DISubprogram(name: "clk_core_update_duty_cycle_parent_nolock", scope: !3, file: !3, line: 2743, type: !3273, scopeLine: 2744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10389 = !DILocalVariable(name: "core", arg: 1, scope: !10388, file: !3, line: 2743, type: !72)
!10390 = !DILocation(line: 2743, column: 70, scope: !10388)
!10391 = !DILocalVariable(name: "ret", scope: !10388, file: !3, line: 2745, type: !89)
!10392 = !DILocation(line: 2745, column: 6, scope: !10388)
!10393 = !DILocation(line: 2747, column: 6, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 2747, column: 6)
!10395 = !DILocation(line: 2747, column: 12, scope: !10394)
!10396 = !DILocation(line: 2747, column: 19, scope: !10394)
!10397 = !DILocation(line: 2748, column: 6, scope: !10394)
!10398 = !DILocation(line: 2748, column: 12, scope: !10394)
!10399 = !DILocation(line: 2748, column: 18, scope: !10394)
!10400 = !DILocation(line: 2747, column: 6, scope: !10388)
!10401 = !DILocation(line: 2749, column: 43, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 2748, column: 43)
!10403 = !DILocation(line: 2749, column: 49, scope: !10402)
!10404 = !DILocation(line: 2749, column: 9, scope: !10402)
!10405 = !DILocation(line: 2749, column: 7, scope: !10402)
!10406 = !DILocation(line: 2750, column: 11, scope: !10402)
!10407 = !DILocation(line: 2750, column: 17, scope: !10402)
!10408 = !DILocation(line: 2750, column: 3, scope: !10402)
!10409 = !DILocation(line: 2750, column: 24, scope: !10402)
!10410 = !DILocation(line: 2750, column: 30, scope: !10402)
!10411 = !DILocation(line: 2750, column: 38, scope: !10402)
!10412 = !DILocation(line: 2751, column: 2, scope: !10402)
!10413 = !DILocation(line: 2752, column: 36, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 2751, column: 9)
!10415 = !DILocation(line: 2752, column: 3, scope: !10414)
!10416 = !DILocation(line: 2755, column: 9, scope: !10388)
!10417 = !DILocation(line: 2755, column: 2, scope: !10388)
!10418 = distinct !DISubprogram(name: "clk_core_reset_duty_cycle_nolock", scope: !3, file: !3, line: 2709, type: !3094, scopeLine: 2710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10419 = !DILocalVariable(name: "core", arg: 1, scope: !10418, file: !3, line: 2709, type: !72)
!10420 = !DILocation(line: 2709, column: 63, scope: !10418)
!10421 = !DILocation(line: 2712, column: 2, scope: !10418)
!10422 = !DILocation(line: 2712, column: 8, scope: !10418)
!10423 = !DILocation(line: 2712, column: 13, scope: !10418)
!10424 = !DILocation(line: 2712, column: 17, scope: !10418)
!10425 = !DILocation(line: 2713, column: 2, scope: !10418)
!10426 = !DILocation(line: 2713, column: 8, scope: !10418)
!10427 = !DILocation(line: 2713, column: 13, scope: !10418)
!10428 = !DILocation(line: 2713, column: 17, scope: !10418)
!10429 = !DILocation(line: 2714, column: 1, scope: !10418)
!10430 = distinct !DISubprogram(name: "refcount_inc", scope: !56, file: !56, line: 265, type: !10431, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10431 = !DISubroutineType(types: !10432)
!10432 = !{null, !10433}
!10433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!10434 = !DILocalVariable(name: "r", arg: 1, scope: !10430, file: !56, line: 265, type: !10433)
!10435 = !DILocation(line: 265, column: 45, scope: !10430)
!10436 = !DILocation(line: 267, column: 17, scope: !10430)
!10437 = !DILocation(line: 267, column: 2, scope: !10430)
!10438 = !DILocation(line: 268, column: 1, scope: !10430)
!10439 = distinct !DISubprogram(name: "__refcount_inc", scope: !56, file: !56, line: 248, type: !10440, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10440 = !DISubroutineType(types: !10441)
!10441 = !{null, !10433, !753}
!10442 = !DILocalVariable(name: "r", arg: 1, scope: !10439, file: !56, line: 248, type: !10433)
!10443 = !DILocation(line: 248, column: 47, scope: !10439)
!10444 = !DILocalVariable(name: "oldp", arg: 2, scope: !10439, file: !56, line: 248, type: !753)
!10445 = !DILocation(line: 248, column: 55, scope: !10439)
!10446 = !DILocation(line: 250, column: 20, scope: !10439)
!10447 = !DILocation(line: 250, column: 23, scope: !10439)
!10448 = !DILocation(line: 250, column: 2, scope: !10439)
!10449 = !DILocation(line: 251, column: 1, scope: !10439)
!10450 = distinct !DISubprogram(name: "__refcount_add", scope: !56, file: !56, line: 191, type: !10451, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10451 = !DISubroutineType(types: !10452)
!10452 = !{null, !89, !10433, !753}
!10453 = !DILocalVariable(name: "i", arg: 1, scope: !10454, file: !7943, line: 182, type: !89)
!10454 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !7943, file: !7943, line: 182, type: !10455, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10455 = !DISubroutineType(types: !10456)
!10456 = !{!89, !89, !7946}
!10457 = !DILocation(line: 182, column: 54, scope: !10454, inlinedAt: !10458)
!10458 = distinct !DILocation(line: 143, column: 9, scope: !10459, inlinedAt: !10460)
!10459 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !7959, file: !7959, line: 140, type: !10455, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10460 = distinct !DILocation(line: 193, column: 12, scope: !10450)
!10461 = !DILocalVariable(name: "v", arg: 2, scope: !10454, file: !7943, line: 182, type: !7946)
!10462 = !DILocation(line: 182, column: 67, scope: !10454, inlinedAt: !10458)
!10463 = !DILocalVariable(name: "__ret", scope: !10464, file: !7943, line: 184, type: !89)
!10464 = distinct !DILexicalBlock(scope: !10454, file: !7943, line: 184, column: 9)
!10465 = !DILocation(line: 184, column: 9, scope: !10464, inlinedAt: !10458)
!10466 = !DILocation(line: 99, column: 79, scope: !7995, inlinedAt: !10467)
!10467 = distinct !DILocation(line: 142, column: 2, scope: !10459, inlinedAt: !10460)
!10468 = !DILocation(line: 99, column: 89, scope: !7995, inlinedAt: !10467)
!10469 = !DILocalVariable(name: "i", arg: 1, scope: !10459, file: !7959, line: 140, type: !89)
!10470 = !DILocation(line: 140, column: 30, scope: !10459, inlinedAt: !10460)
!10471 = !DILocalVariable(name: "v", arg: 2, scope: !10459, file: !7959, line: 140, type: !7946)
!10472 = !DILocation(line: 140, column: 43, scope: !10459, inlinedAt: !10460)
!10473 = !DILocalVariable(name: "i", arg: 1, scope: !10450, file: !56, line: 191, type: !89)
!10474 = !DILocation(line: 191, column: 39, scope: !10450)
!10475 = !DILocalVariable(name: "r", arg: 2, scope: !10450, file: !56, line: 191, type: !10433)
!10476 = !DILocation(line: 191, column: 54, scope: !10450)
!10477 = !DILocalVariable(name: "oldp", arg: 3, scope: !10450, file: !56, line: 191, type: !753)
!10478 = !DILocation(line: 191, column: 62, scope: !10450)
!10479 = !DILocalVariable(name: "old", scope: !10450, file: !56, line: 193, type: !89)
!10480 = !DILocation(line: 193, column: 6, scope: !10450)
!10481 = !DILocation(line: 193, column: 37, scope: !10450)
!10482 = !DILocation(line: 193, column: 41, scope: !10450)
!10483 = !DILocation(line: 193, column: 44, scope: !10450)
!10484 = !DILocation(line: 142, column: 31, scope: !10459, inlinedAt: !10460)
!10485 = !DILocation(line: 101, column: 20, scope: !7995, inlinedAt: !10467)
!10486 = !DILocation(line: 101, column: 23, scope: !7995, inlinedAt: !10467)
!10487 = !DILocation(line: 101, column: 2, scope: !7995, inlinedAt: !10467)
!10488 = !DILocation(line: 102, column: 2, scope: !7995, inlinedAt: !10467)
!10489 = !DILocation(line: 143, column: 39, scope: !10459, inlinedAt: !10460)
!10490 = !DILocation(line: 143, column: 42, scope: !10459, inlinedAt: !10460)
!10491 = !{i32 -2146538328}
!10492 = !DILocation(line: 195, column: 6, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10450, file: !56, line: 195, column: 6)
!10494 = !DILocation(line: 195, column: 6, scope: !10450)
!10495 = !DILocation(line: 196, column: 11, scope: !10493)
!10496 = !DILocation(line: 196, column: 4, scope: !10493)
!10497 = !DILocation(line: 196, column: 9, scope: !10493)
!10498 = !DILocation(line: 196, column: 3, scope: !10493)
!10499 = !DILocation(line: 198, column: 6, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10450, file: !56, line: 198, column: 6)
!10501 = !DILocation(line: 198, column: 6, scope: !10450)
!10502 = !DILocation(line: 199, column: 26, scope: !10500)
!10503 = !DILocation(line: 199, column: 3, scope: !10500)
!10504 = !DILocation(line: 200, column: 11, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10500, file: !56, line: 200, column: 11)
!10506 = !DILocation(line: 200, column: 11, scope: !10500)
!10507 = !DILocation(line: 201, column: 26, scope: !10505)
!10508 = !DILocation(line: 201, column: 3, scope: !10505)
!10509 = !DILocation(line: 202, column: 1, scope: !10450)
!10510 = distinct !DISubprogram(name: "pm_runtime_enabled", scope: !7934, file: !7934, line: 170, type: !8109, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10511 = !DILocalVariable(name: "dev", arg: 1, scope: !10510, file: !7934, line: 170, type: !100)
!10512 = !DILocation(line: 170, column: 54, scope: !10510)
!10513 = !DILocation(line: 172, column: 10, scope: !10510)
!10514 = !DILocation(line: 172, column: 15, scope: !10510)
!10515 = !DILocation(line: 172, column: 21, scope: !10510)
!10516 = !DILocation(line: 172, column: 9, scope: !10510)
!10517 = !DILocation(line: 172, column: 2, scope: !10510)
!10518 = distinct !DISubprogram(name: "clk_core_populate_parent_map", scope: !3, file: !3, line: 3687, type: !10519, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10519 = !DISubroutineType(types: !10520)
!10520 = !{!89, !72, !2080}
!10521 = !DILocalVariable(name: "core", arg: 1, scope: !10518, file: !3, line: 3687, type: !72)
!10522 = !DILocation(line: 3687, column: 58, scope: !10518)
!10523 = !DILocalVariable(name: "init", arg: 2, scope: !10518, file: !3, line: 3688, type: !2080)
!10524 = !DILocation(line: 3688, column: 34, scope: !10518)
!10525 = !DILocalVariable(name: "num_parents", scope: !10518, file: !3, line: 3690, type: !573)
!10526 = !DILocation(line: 3690, column: 5, scope: !10518)
!10527 = !DILocation(line: 3690, column: 19, scope: !10518)
!10528 = !DILocation(line: 3690, column: 25, scope: !10518)
!10529 = !DILocalVariable(name: "parent_names", scope: !10518, file: !3, line: 3691, type: !2087)
!10530 = !DILocation(line: 3691, column: 22, scope: !10518)
!10531 = !DILocation(line: 3691, column: 37, scope: !10518)
!10532 = !DILocation(line: 3691, column: 43, scope: !10518)
!10533 = !DILocalVariable(name: "parent_hws", scope: !10518, file: !3, line: 3692, type: !2101)
!10534 = !DILocation(line: 3692, column: 24, scope: !10518)
!10535 = !DILocation(line: 3692, column: 37, scope: !10518)
!10536 = !DILocation(line: 3692, column: 43, scope: !10518)
!10537 = !DILocalVariable(name: "parent_data", scope: !10518, file: !3, line: 3693, type: !2090)
!10538 = !DILocation(line: 3693, column: 32, scope: !10518)
!10539 = !DILocation(line: 3693, column: 46, scope: !10518)
!10540 = !DILocation(line: 3693, column: 52, scope: !10518)
!10541 = !DILocalVariable(name: "i", scope: !10518, file: !3, line: 3694, type: !89)
!10542 = !DILocation(line: 3694, column: 6, scope: !10518)
!10543 = !DILocalVariable(name: "ret", scope: !10518, file: !3, line: 3694, type: !89)
!10544 = !DILocation(line: 3694, column: 9, scope: !10518)
!10545 = !DILocalVariable(name: "parents", scope: !10518, file: !3, line: 3695, type: !2183)
!10546 = !DILocation(line: 3695, column: 25, scope: !10518)
!10547 = !DILocalVariable(name: "parent", scope: !10518, file: !3, line: 3695, type: !2183)
!10548 = !DILocation(line: 3695, column: 35, scope: !10518)
!10549 = !DILocation(line: 3697, column: 7, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 3697, column: 6)
!10551 = !DILocation(line: 3697, column: 6, scope: !10518)
!10552 = !DILocation(line: 3698, column: 3, scope: !10550)
!10553 = !DILocation(line: 3704, column: 20, scope: !10518)
!10554 = !DILocation(line: 3704, column: 12, scope: !10518)
!10555 = !DILocation(line: 3704, column: 10, scope: !10518)
!10556 = !DILocation(line: 3705, column: 18, scope: !10518)
!10557 = !DILocation(line: 3705, column: 2, scope: !10518)
!10558 = !DILocation(line: 3705, column: 8, scope: !10518)
!10559 = !DILocation(line: 3705, column: 16, scope: !10518)
!10560 = !DILocation(line: 3706, column: 7, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 3706, column: 6)
!10562 = !DILocation(line: 3706, column: 6, scope: !10518)
!10563 = !DILocation(line: 3707, column: 3, scope: !10561)
!10564 = !DILocation(line: 3710, column: 9, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 3710, column: 2)
!10566 = !DILocation(line: 3710, column: 23, scope: !10565)
!10567 = !DILocation(line: 3710, column: 21, scope: !10565)
!10568 = !DILocation(line: 3710, column: 7, scope: !10565)
!10569 = !DILocation(line: 3710, column: 32, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 3710, column: 2)
!10571 = !DILocation(line: 3710, column: 36, scope: !10570)
!10572 = !DILocation(line: 3710, column: 34, scope: !10570)
!10573 = !DILocation(line: 3710, column: 2, scope: !10565)
!10574 = !DILocation(line: 3711, column: 3, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10570, file: !3, line: 3710, column: 64)
!10576 = !DILocation(line: 3711, column: 11, scope: !10575)
!10577 = !DILocation(line: 3711, column: 17, scope: !10575)
!10578 = !DILocation(line: 3712, column: 7, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 3712, column: 7)
!10580 = !DILocation(line: 3712, column: 7, scope: !10575)
!10581 = !DILocalVariable(name: "__ret_warn_on", scope: !10582, file: !3, line: 3714, type: !89)
!10582 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 3714, column: 4)
!10583 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 3712, column: 21)
!10584 = !DILocation(line: 3714, column: 4, scope: !10582)
!10585 = !DILocation(line: 3714, column: 4, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 3714, column: 4)
!10587 = !DILocation(line: 3714, column: 4, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 3714, column: 4)
!10589 = !DILocation(line: 3714, column: 4, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 3714, column: 4)
!10591 = !DILocation(line: 3714, column: 4, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 3714, column: 4)
!10593 = !DILocation(line: 3714, column: 4, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 3714, column: 4)
!10595 = !DILocation(line: 3714, column: 4, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 3714, column: 4)
!10597 = !{i32 -2142890950, i32 -2142890921, i32 -2142890875, i32 -2142890817, i32 -2142890763, i32 -2142890709, i32 -2142890654, i32 -2142890623}
!10598 = !DILocation(line: 3714, column: 4, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 3714, column: 4)
!10600 = !{i32 -2142890212, i32 -2142890205, i32 -2142890153, i32 -2142890122, i32 -2142890092}
!10601 = !DILocation(line: 3714, column: 4, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 3714, column: 4)
!10603 = !DILocation(line: 3714, column: 4, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 3714, column: 4)
!10605 = !DILocation(line: 3717, column: 24, scope: !10583)
!10606 = !DILocation(line: 3717, column: 32, scope: !10583)
!10607 = !DILocation(line: 3717, column: 38, scope: !10583)
!10608 = !DILocation(line: 3717, column: 51, scope: !10583)
!10609 = !DILocation(line: 3717, column: 10, scope: !10583)
!10610 = !DILocation(line: 3717, column: 8, scope: !10583)
!10611 = !DILocation(line: 3719, column: 3, scope: !10583)
!10612 = !DILocation(line: 3719, column: 14, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 3719, column: 14)
!10614 = !DILocation(line: 3719, column: 14, scope: !10579)
!10615 = !DILocation(line: 3720, column: 17, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 3719, column: 27)
!10617 = !DILocation(line: 3720, column: 29, scope: !10616)
!10618 = !DILocation(line: 3720, column: 32, scope: !10616)
!10619 = !DILocation(line: 3720, column: 4, scope: !10616)
!10620 = !DILocation(line: 3720, column: 12, scope: !10616)
!10621 = !DILocation(line: 3720, column: 15, scope: !10616)
!10622 = !DILocation(line: 3721, column: 20, scope: !10616)
!10623 = !DILocation(line: 3721, column: 32, scope: !10616)
!10624 = !DILocation(line: 3721, column: 35, scope: !10616)
!10625 = !DILocation(line: 3721, column: 4, scope: !10616)
!10626 = !DILocation(line: 3721, column: 12, scope: !10616)
!10627 = !DILocation(line: 3721, column: 18, scope: !10616)
!10628 = !DILocation(line: 3722, column: 24, scope: !10616)
!10629 = !DILocation(line: 3722, column: 32, scope: !10616)
!10630 = !DILocation(line: 3723, column: 9, scope: !10616)
!10631 = !DILocation(line: 3723, column: 21, scope: !10616)
!10632 = !DILocation(line: 3723, column: 24, scope: !10616)
!10633 = !DILocation(line: 3722, column: 10, scope: !10616)
!10634 = !DILocation(line: 3722, column: 8, scope: !10616)
!10635 = !DILocation(line: 3724, column: 9, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 3724, column: 8)
!10637 = !DILocation(line: 3724, column: 8, scope: !10616)
!10638 = !DILocation(line: 3725, column: 25, scope: !10636)
!10639 = !DILocation(line: 3725, column: 33, scope: !10636)
!10640 = !DILocation(line: 3726, column: 10, scope: !10636)
!10641 = !DILocation(line: 3726, column: 22, scope: !10636)
!10642 = !DILocation(line: 3726, column: 25, scope: !10636)
!10643 = !DILocation(line: 3725, column: 11, scope: !10636)
!10644 = !DILocation(line: 3725, column: 9, scope: !10636)
!10645 = !DILocation(line: 3725, column: 5, scope: !10636)
!10646 = !DILocation(line: 3728, column: 3, scope: !10616)
!10647 = !DILocation(line: 3728, column: 14, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 3728, column: 14)
!10649 = !DILocation(line: 3728, column: 14, scope: !10613)
!10650 = !DILocation(line: 3729, column: 17, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 3728, column: 26)
!10652 = !DILocation(line: 3729, column: 28, scope: !10651)
!10653 = !DILocation(line: 3729, column: 4, scope: !10651)
!10654 = !DILocation(line: 3729, column: 12, scope: !10651)
!10655 = !DILocation(line: 3729, column: 15, scope: !10651)
!10656 = !DILocation(line: 3730, column: 3, scope: !10651)
!10657 = !DILocation(line: 3731, column: 8, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 3730, column: 10)
!10659 = !DILocalVariable(name: "__ret_warn_on", scope: !10660, file: !3, line: 3732, type: !89)
!10660 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 3732, column: 4)
!10661 = !DILocation(line: 3732, column: 4, scope: !10660)
!10662 = !DILocation(line: 3732, column: 4, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 3732, column: 4)
!10664 = !DILocation(line: 3732, column: 4, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 3732, column: 4)
!10666 = !DILocation(line: 3732, column: 4, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 3732, column: 4)
!10668 = !DILocation(line: 3732, column: 4, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 3732, column: 4)
!10670 = !DILocation(line: 3732, column: 4, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 3732, column: 4)
!10672 = !DILocation(line: 3732, column: 4, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 3732, column: 4)
!10674 = !{i32 -2142889218, i32 -2142889189, i32 -2142889143, i32 -2142889085, i32 -2142889031, i32 -2142888977, i32 -2142888922, i32 -2142888891}
!10675 = !DILocation(line: 3732, column: 4, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 3732, column: 4)
!10677 = !{i32 -2142888480, i32 -2142888473, i32 -2142888421, i32 -2142888390, i32 -2142888360}
!10678 = !DILocation(line: 3732, column: 4, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 3732, column: 4)
!10680 = !DILocation(line: 3732, column: 4, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 3732, column: 4)
!10682 = !DILocation(line: 3735, column: 7, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 3735, column: 7)
!10684 = !DILocation(line: 3735, column: 7, scope: !10575)
!10685 = !DILocation(line: 3736, column: 4, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 3735, column: 12)
!10687 = !DILocation(line: 3737, column: 17, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 3736, column: 7)
!10689 = !DILocation(line: 3737, column: 25, scope: !10688)
!10690 = !DILocation(line: 3737, column: 28, scope: !10688)
!10691 = !DILocation(line: 3737, column: 5, scope: !10688)
!10692 = !DILocation(line: 3738, column: 17, scope: !10688)
!10693 = !DILocation(line: 3738, column: 25, scope: !10688)
!10694 = !DILocation(line: 3738, column: 28, scope: !10688)
!10695 = !DILocation(line: 3738, column: 5, scope: !10688)
!10696 = !DILocation(line: 3739, column: 4, scope: !10688)
!10697 = !DILocation(line: 3739, column: 13, scope: !10686)
!10698 = !DILocation(line: 3739, column: 17, scope: !10686)
!10699 = distinct !{!10699, !10685, !10700}
!10700 = !DILocation(line: 3739, column: 21, scope: !10686)
!10701 = !DILocation(line: 3740, column: 10, scope: !10686)
!10702 = !DILocation(line: 3740, column: 4, scope: !10686)
!10703 = !DILocation(line: 3742, column: 11, scope: !10686)
!10704 = !DILocation(line: 3742, column: 4, scope: !10686)
!10705 = !DILocation(line: 3744, column: 2, scope: !10575)
!10706 = !DILocation(line: 3710, column: 50, scope: !10570)
!10707 = !DILocation(line: 3710, column: 60, scope: !10570)
!10708 = !DILocation(line: 3710, column: 2, scope: !10570)
!10709 = distinct !{!10709, !10573, !10710}
!10710 = !DILocation(line: 3744, column: 2, scope: !10565)
!10711 = !DILocation(line: 3746, column: 2, scope: !10518)
!10712 = !DILocation(line: 3747, column: 1, scope: !10518)
!10713 = distinct !DISubprogram(name: "__clk_core_init", scope: !3, file: !3, line: 3380, type: !3273, scopeLine: 3381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10714 = !DILocalVariable(name: "core", arg: 1, scope: !10713, file: !3, line: 3380, type: !72)
!10715 = !DILocation(line: 3380, column: 45, scope: !10713)
!10716 = !DILocalVariable(name: "ret", scope: !10713, file: !3, line: 3382, type: !89)
!10717 = !DILocation(line: 3382, column: 6, scope: !10713)
!10718 = !DILocalVariable(name: "parent", scope: !10713, file: !3, line: 3383, type: !72)
!10719 = !DILocation(line: 3383, column: 19, scope: !10713)
!10720 = !DILocalVariable(name: "rate", scope: !10713, file: !3, line: 3384, type: !214)
!10721 = !DILocation(line: 3384, column: 16, scope: !10713)
!10722 = !DILocalVariable(name: "phase", scope: !10713, file: !3, line: 3385, type: !89)
!10723 = !DILocation(line: 3385, column: 6, scope: !10713)
!10724 = !DILocation(line: 3387, column: 7, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3387, column: 6)
!10726 = !DILocation(line: 3387, column: 6, scope: !10713)
!10727 = !DILocation(line: 3388, column: 3, scope: !10725)
!10728 = !DILocation(line: 3390, column: 2, scope: !10713)
!10729 = !DILocation(line: 3392, column: 27, scope: !10713)
!10730 = !DILocation(line: 3392, column: 8, scope: !10713)
!10731 = !DILocation(line: 3392, column: 6, scope: !10713)
!10732 = !DILocation(line: 3393, column: 6, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3393, column: 6)
!10734 = !DILocation(line: 3393, column: 6, scope: !10713)
!10735 = !DILocation(line: 3394, column: 3, scope: !10733)
!10736 = !DILocation(line: 3397, column: 22, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3397, column: 6)
!10738 = !DILocation(line: 3397, column: 28, scope: !10737)
!10739 = !DILocation(line: 3397, column: 6, scope: !10737)
!10740 = !DILocation(line: 3397, column: 6, scope: !10713)
!10741 = !DILocation(line: 3398, column: 3, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 3398, column: 3)
!10743 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 3398, column: 3)
!10744 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 3397, column: 35)
!10745 = !DILocation(line: 3398, column: 3, scope: !10743)
!10746 = !DILocation(line: 3400, column: 7, scope: !10744)
!10747 = !DILocation(line: 3401, column: 3, scope: !10744)
!10748 = !DILocation(line: 3405, column: 6, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3405, column: 6)
!10750 = !DILocation(line: 3405, column: 12, scope: !10749)
!10751 = !DILocation(line: 3405, column: 17, scope: !10749)
!10752 = !DILocation(line: 3405, column: 26, scope: !10749)
!10753 = !DILocation(line: 3406, column: 9, scope: !10749)
!10754 = !DILocation(line: 3406, column: 15, scope: !10749)
!10755 = !DILocation(line: 3406, column: 20, scope: !10749)
!10756 = !DILocation(line: 3406, column: 31, scope: !10749)
!10757 = !DILocation(line: 3406, column: 34, scope: !10749)
!10758 = !DILocation(line: 3406, column: 40, scope: !10749)
!10759 = !DILocation(line: 3406, column: 45, scope: !10749)
!10760 = !DILocation(line: 3406, column: 61, scope: !10749)
!10761 = !DILocation(line: 3407, column: 8, scope: !10749)
!10762 = !DILocation(line: 3407, column: 14, scope: !10749)
!10763 = !DILocation(line: 3407, column: 19, scope: !10749)
!10764 = !DILocation(line: 3405, column: 6, scope: !10713)
!10765 = !DILocation(line: 3408, column: 3, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 3407, column: 33)
!10767 = !DILocation(line: 3410, column: 7, scope: !10766)
!10768 = !DILocation(line: 3411, column: 3, scope: !10766)
!10769 = !DILocation(line: 3414, column: 6, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3414, column: 6)
!10771 = !DILocation(line: 3414, column: 12, scope: !10770)
!10772 = !DILocation(line: 3414, column: 17, scope: !10770)
!10773 = !DILocation(line: 3414, column: 28, scope: !10770)
!10774 = !DILocation(line: 3414, column: 32, scope: !10770)
!10775 = !DILocation(line: 3414, column: 38, scope: !10770)
!10776 = !DILocation(line: 3414, column: 43, scope: !10770)
!10777 = !DILocation(line: 3414, column: 6, scope: !10713)
!10778 = !DILocation(line: 3415, column: 3, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10770, file: !3, line: 3414, column: 55)
!10780 = !DILocation(line: 3417, column: 7, scope: !10779)
!10781 = !DILocation(line: 3418, column: 3, scope: !10779)
!10782 = !DILocation(line: 3421, column: 6, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3421, column: 6)
!10784 = !DILocation(line: 3421, column: 12, scope: !10783)
!10785 = !DILocation(line: 3421, column: 24, scope: !10783)
!10786 = !DILocation(line: 3421, column: 28, scope: !10783)
!10787 = !DILocation(line: 3421, column: 32, scope: !10783)
!10788 = !DILocation(line: 3421, column: 38, scope: !10783)
!10789 = !DILocation(line: 3421, column: 43, scope: !10783)
!10790 = !DILocation(line: 3421, column: 6, scope: !10713)
!10791 = !DILocation(line: 3422, column: 3, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 3421, column: 55)
!10793 = !DILocation(line: 3424, column: 7, scope: !10792)
!10794 = !DILocation(line: 3425, column: 3, scope: !10792)
!10795 = !DILocation(line: 3428, column: 6, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3428, column: 6)
!10797 = !DILocation(line: 3428, column: 12, scope: !10796)
!10798 = !DILocation(line: 3428, column: 17, scope: !10796)
!10799 = !DILocation(line: 3428, column: 37, scope: !10796)
!10800 = !DILocation(line: 3429, column: 6, scope: !10796)
!10801 = !DILocation(line: 3429, column: 12, scope: !10796)
!10802 = !DILocation(line: 3429, column: 17, scope: !10796)
!10803 = !DILocation(line: 3429, column: 28, scope: !10796)
!10804 = !DILocation(line: 3429, column: 31, scope: !10796)
!10805 = !DILocation(line: 3429, column: 37, scope: !10796)
!10806 = !DILocation(line: 3429, column: 42, scope: !10796)
!10807 = !DILocation(line: 3428, column: 6, scope: !10713)
!10808 = !DILocation(line: 3430, column: 3, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 3429, column: 53)
!10810 = !DILocation(line: 3432, column: 7, scope: !10809)
!10811 = !DILocation(line: 3433, column: 3, scope: !10809)
!10812 = !DILocation(line: 3450, column: 6, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3450, column: 6)
!10814 = !DILocation(line: 3450, column: 12, scope: !10813)
!10815 = !DILocation(line: 3450, column: 17, scope: !10813)
!10816 = !DILocation(line: 3450, column: 6, scope: !10713)
!10817 = !DILocation(line: 3451, column: 9, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 3450, column: 23)
!10819 = !DILocation(line: 3451, column: 15, scope: !10818)
!10820 = !DILocation(line: 3451, column: 20, scope: !10818)
!10821 = !DILocation(line: 3451, column: 25, scope: !10818)
!10822 = !DILocation(line: 3451, column: 31, scope: !10818)
!10823 = !DILocation(line: 3451, column: 7, scope: !10818)
!10824 = !DILocation(line: 3452, column: 7, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 3452, column: 7)
!10826 = !DILocation(line: 3452, column: 7, scope: !10818)
!10827 = !DILocation(line: 3453, column: 4, scope: !10825)
!10828 = !DILocation(line: 3454, column: 2, scope: !10818)
!10829 = !DILocation(line: 3456, column: 44, scope: !10713)
!10830 = !DILocation(line: 3456, column: 26, scope: !10713)
!10831 = !DILocation(line: 3456, column: 11, scope: !10713)
!10832 = !DILocation(line: 3456, column: 17, scope: !10713)
!10833 = !DILocation(line: 3456, column: 24, scope: !10713)
!10834 = !DILocation(line: 3456, column: 9, scope: !10713)
!10835 = !DILocation(line: 3468, column: 6, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3468, column: 6)
!10837 = !DILocation(line: 3468, column: 6, scope: !10713)
!10838 = !DILocation(line: 3469, column: 19, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 3468, column: 14)
!10840 = !DILocation(line: 3469, column: 25, scope: !10839)
!10841 = !DILocation(line: 3469, column: 38, scope: !10839)
!10842 = !DILocation(line: 3469, column: 46, scope: !10839)
!10843 = !DILocation(line: 3469, column: 3, scope: !10839)
!10844 = !DILocation(line: 3470, column: 18, scope: !10839)
!10845 = !DILocation(line: 3470, column: 26, scope: !10839)
!10846 = !DILocation(line: 3470, column: 3, scope: !10839)
!10847 = !DILocation(line: 3470, column: 9, scope: !10839)
!10848 = !DILocation(line: 3470, column: 16, scope: !10839)
!10849 = !DILocation(line: 3471, column: 2, scope: !10839)
!10850 = !DILocation(line: 3471, column: 14, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 3471, column: 13)
!10852 = !DILocation(line: 3471, column: 20, scope: !10851)
!10853 = !DILocation(line: 3471, column: 13, scope: !10836)
!10854 = !DILocation(line: 3472, column: 19, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 3471, column: 33)
!10856 = !DILocation(line: 3472, column: 25, scope: !10855)
!10857 = !DILocation(line: 3472, column: 3, scope: !10855)
!10858 = !DILocation(line: 3473, column: 3, scope: !10855)
!10859 = !DILocation(line: 3473, column: 9, scope: !10855)
!10860 = !DILocation(line: 3473, column: 16, scope: !10855)
!10861 = !DILocation(line: 3474, column: 2, scope: !10855)
!10862 = !DILocation(line: 3475, column: 19, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10851, file: !3, line: 3474, column: 9)
!10864 = !DILocation(line: 3475, column: 25, scope: !10863)
!10865 = !DILocation(line: 3475, column: 3, scope: !10863)
!10866 = !DILocation(line: 3476, column: 3, scope: !10863)
!10867 = !DILocation(line: 3476, column: 9, scope: !10863)
!10868 = !DILocation(line: 3476, column: 16, scope: !10863)
!10869 = !DILocation(line: 3486, column: 6, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3486, column: 6)
!10871 = !DILocation(line: 3486, column: 12, scope: !10870)
!10872 = !DILocation(line: 3486, column: 17, scope: !10870)
!10873 = !DILocation(line: 3486, column: 6, scope: !10713)
!10874 = !DILocation(line: 3487, column: 20, scope: !10870)
!10875 = !DILocation(line: 3487, column: 26, scope: !10870)
!10876 = !DILocation(line: 3487, column: 31, scope: !10870)
!10877 = !DILocation(line: 3487, column: 47, scope: !10870)
!10878 = !DILocation(line: 3487, column: 53, scope: !10870)
!10879 = !DILocation(line: 3488, column: 36, scope: !10870)
!10880 = !DILocation(line: 3488, column: 6, scope: !10870)
!10881 = !DILocation(line: 3487, column: 3, scope: !10870)
!10882 = !DILocation(line: 3487, column: 9, scope: !10870)
!10883 = !DILocation(line: 3487, column: 18, scope: !10870)
!10884 = !DILocation(line: 3489, column: 11, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 3489, column: 11)
!10886 = !DILocation(line: 3489, column: 11, scope: !10870)
!10887 = !DILocation(line: 3490, column: 20, scope: !10885)
!10888 = !DILocation(line: 3490, column: 28, scope: !10885)
!10889 = !DILocation(line: 3490, column: 3, scope: !10885)
!10890 = !DILocation(line: 3490, column: 9, scope: !10885)
!10891 = !DILocation(line: 3490, column: 18, scope: !10885)
!10892 = !DILocation(line: 3492, column: 3, scope: !10885)
!10893 = !DILocation(line: 3492, column: 9, scope: !10885)
!10894 = !DILocation(line: 3492, column: 18, scope: !10885)
!10895 = !DILocation(line: 3499, column: 29, scope: !10713)
!10896 = !DILocation(line: 3499, column: 10, scope: !10713)
!10897 = !DILocation(line: 3499, column: 8, scope: !10713)
!10898 = !DILocation(line: 3500, column: 6, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3500, column: 6)
!10900 = !DILocation(line: 3500, column: 12, scope: !10899)
!10901 = !DILocation(line: 3500, column: 6, scope: !10713)
!10902 = !DILocation(line: 3501, column: 9, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10899, file: !3, line: 3500, column: 17)
!10904 = !DILocation(line: 3501, column: 7, scope: !10903)
!10905 = !DILocation(line: 3502, column: 3, scope: !10903)
!10906 = !DILocation(line: 3504, column: 3, scope: !10903)
!10907 = !DILocation(line: 3510, column: 36, scope: !10713)
!10908 = !DILocation(line: 3510, column: 2, scope: !10713)
!10909 = !DILocation(line: 3518, column: 6, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3518, column: 6)
!10911 = !DILocation(line: 3518, column: 12, scope: !10910)
!10912 = !DILocation(line: 3518, column: 17, scope: !10910)
!10913 = !DILocation(line: 3518, column: 6, scope: !10713)
!10914 = !DILocation(line: 3519, column: 10, scope: !10910)
!10915 = !DILocation(line: 3519, column: 16, scope: !10910)
!10916 = !DILocation(line: 3519, column: 21, scope: !10910)
!10917 = !DILocation(line: 3519, column: 33, scope: !10910)
!10918 = !DILocation(line: 3519, column: 39, scope: !10910)
!10919 = !DILocation(line: 3520, column: 30, scope: !10910)
!10920 = !DILocation(line: 3520, column: 5, scope: !10910)
!10921 = !DILocation(line: 3519, column: 8, scope: !10910)
!10922 = !DILocation(line: 3519, column: 3, scope: !10910)
!10923 = !DILocation(line: 3521, column: 11, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10910, file: !3, line: 3521, column: 11)
!10925 = !DILocation(line: 3521, column: 11, scope: !10910)
!10926 = !DILocation(line: 3522, column: 10, scope: !10924)
!10927 = !DILocation(line: 3522, column: 18, scope: !10924)
!10928 = !DILocation(line: 3522, column: 8, scope: !10924)
!10929 = !DILocation(line: 3522, column: 3, scope: !10924)
!10930 = !DILocation(line: 3524, column: 8, scope: !10924)
!10931 = !DILocation(line: 3525, column: 32, scope: !10713)
!10932 = !DILocation(line: 3525, column: 15, scope: !10713)
!10933 = !DILocation(line: 3525, column: 21, scope: !10713)
!10934 = !DILocation(line: 3525, column: 30, scope: !10713)
!10935 = !DILocation(line: 3525, column: 2, scope: !10713)
!10936 = !DILocation(line: 3525, column: 8, scope: !10713)
!10937 = !DILocation(line: 3525, column: 13, scope: !10713)
!10938 = !DILocation(line: 3532, column: 6, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3532, column: 6)
!10940 = !DILocation(line: 3532, column: 12, scope: !10939)
!10941 = !DILocation(line: 3532, column: 18, scope: !10939)
!10942 = !DILocation(line: 3532, column: 6, scope: !10713)
!10943 = !DILocalVariable(name: "flags", scope: !10944, file: !3, line: 3533, type: !214)
!10944 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 3532, column: 37)
!10945 = !DILocation(line: 3533, column: 17, scope: !10944)
!10946 = !DILocation(line: 3535, column: 26, scope: !10944)
!10947 = !DILocation(line: 3535, column: 9, scope: !10944)
!10948 = !DILocation(line: 3535, column: 7, scope: !10944)
!10949 = !DILocation(line: 3536, column: 7, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 3536, column: 7)
!10951 = !DILocation(line: 3536, column: 7, scope: !10944)
!10952 = !DILocation(line: 3537, column: 4, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 3536, column: 12)
!10954 = !DILocation(line: 3539, column: 4, scope: !10953)
!10955 = !DILocation(line: 3542, column: 11, scope: !10944)
!10956 = !DILocation(line: 3542, column: 9, scope: !10944)
!10957 = !DILocation(line: 3543, column: 25, scope: !10944)
!10958 = !DILocation(line: 3543, column: 9, scope: !10944)
!10959 = !DILocation(line: 3543, column: 7, scope: !10944)
!10960 = !DILocation(line: 3544, column: 21, scope: !10944)
!10961 = !DILocation(line: 3544, column: 3, scope: !10944)
!10962 = !DILocation(line: 3545, column: 7, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 3545, column: 7)
!10964 = !DILocation(line: 3545, column: 7, scope: !10944)
!10965 = !DILocation(line: 3546, column: 4, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10963, file: !3, line: 3545, column: 12)
!10967 = !DILocation(line: 3548, column: 23, scope: !10966)
!10968 = !DILocation(line: 3548, column: 4, scope: !10966)
!10969 = !DILocation(line: 3549, column: 4, scope: !10966)
!10970 = !DILocation(line: 3551, column: 2, scope: !10944)
!10971 = !DILocation(line: 3553, column: 2, scope: !10713)
!10972 = !DILocation(line: 3556, column: 13, scope: !10713)
!10973 = !DILocation(line: 3556, column: 19, scope: !10713)
!10974 = !DILocation(line: 3556, column: 2, scope: !10713)
!10975 = !DILabel(scope: !10713, name: "out", file: !3, line: 3557)
!10976 = !DILocation(line: 3557, column: 1, scope: !10713)
!10977 = !DILocation(line: 3558, column: 21, scope: !10713)
!10978 = !DILocation(line: 3558, column: 2, scope: !10713)
!10979 = !DILabel(scope: !10713, name: "unlock", file: !3, line: 3559)
!10980 = !DILocation(line: 3559, column: 1, scope: !10713)
!10981 = !DILocation(line: 3560, column: 6, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3560, column: 6)
!10983 = !DILocation(line: 3560, column: 6, scope: !10713)
!10984 = !DILocation(line: 3561, column: 19, scope: !10982)
!10985 = !DILocation(line: 3561, column: 25, scope: !10982)
!10986 = !DILocation(line: 3561, column: 3, scope: !10982)
!10987 = !DILocation(line: 3563, column: 2, scope: !10713)
!10988 = !DILocation(line: 3565, column: 7, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 3565, column: 6)
!10990 = !DILocation(line: 3565, column: 6, scope: !10713)
!10991 = !DILocation(line: 3566, column: 22, scope: !10989)
!10992 = !DILocation(line: 3566, column: 3, scope: !10989)
!10993 = !DILocation(line: 3568, column: 9, scope: !10713)
!10994 = !DILocation(line: 3568, column: 2, scope: !10713)
!10995 = !DILocation(line: 3569, column: 1, scope: !10713)
!10996 = distinct !DISubprogram(name: "clk_core_unlink_consumer", scope: !3, file: !3, line: 3587, type: !2981, scopeLine: 3588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!10997 = !DILocalVariable(name: "clk", arg: 1, scope: !10996, file: !3, line: 3587, type: !95)
!10998 = !DILocation(line: 3587, column: 50, scope: !10996)
!10999 = !DILocation(line: 3589, column: 2, scope: !10996)
!11000 = !DILocation(line: 3589, column: 2, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 3589, column: 2)
!11002 = !DILocation(line: 3590, column: 13, scope: !10996)
!11003 = !DILocation(line: 3590, column: 18, scope: !10996)
!11004 = !DILocation(line: 3590, column: 2, scope: !10996)
!11005 = !DILocation(line: 3591, column: 1, scope: !10996)
!11006 = distinct !DISubprogram(name: "clk_core_free_parent_map", scope: !3, file: !3, line: 3749, type: !3094, scopeLine: 3750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11007 = !DILocalVariable(name: "core", arg: 1, scope: !11006, file: !3, line: 3749, type: !72)
!11008 = !DILocation(line: 3749, column: 55, scope: !11006)
!11009 = !DILocalVariable(name: "i", scope: !11006, file: !3, line: 3751, type: !89)
!11010 = !DILocation(line: 3751, column: 6, scope: !11006)
!11011 = !DILocation(line: 3751, column: 10, scope: !11006)
!11012 = !DILocation(line: 3751, column: 16, scope: !11006)
!11013 = !DILocation(line: 3753, column: 7, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 3753, column: 6)
!11015 = !DILocation(line: 3753, column: 13, scope: !11014)
!11016 = !DILocation(line: 3753, column: 6, scope: !11006)
!11017 = !DILocation(line: 3754, column: 3, scope: !11014)
!11018 = !DILocation(line: 3756, column: 2, scope: !11006)
!11019 = !DILocation(line: 3756, column: 9, scope: !11006)
!11020 = !DILocation(line: 3756, column: 13, scope: !11006)
!11021 = !DILocation(line: 3757, column: 15, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 3756, column: 19)
!11023 = !DILocation(line: 3757, column: 21, scope: !11022)
!11024 = !DILocation(line: 3757, column: 29, scope: !11022)
!11025 = !DILocation(line: 3757, column: 32, scope: !11022)
!11026 = !DILocation(line: 3757, column: 3, scope: !11022)
!11027 = !DILocation(line: 3758, column: 15, scope: !11022)
!11028 = !DILocation(line: 3758, column: 21, scope: !11022)
!11029 = !DILocation(line: 3758, column: 29, scope: !11022)
!11030 = !DILocation(line: 3758, column: 32, scope: !11022)
!11031 = !DILocation(line: 3758, column: 3, scope: !11022)
!11032 = distinct !{!11032, !11018, !11033}
!11033 = !DILocation(line: 3759, column: 2, scope: !11006)
!11034 = !DILocation(line: 3761, column: 8, scope: !11006)
!11035 = !DILocation(line: 3761, column: 14, scope: !11006)
!11036 = !DILocation(line: 3761, column: 2, scope: !11006)
!11037 = !DILocation(line: 3762, column: 1, scope: !11006)
!11038 = distinct !DISubprogram(name: "kcalloc", scope: !64, file: !64, line: 601, type: !11039, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11039 = !DISubroutineType(types: !11040)
!11040 = !{!71, !211, !211, !1469}
!11041 = !DILocalVariable(name: "n", arg: 1, scope: !11038, file: !64, line: 601, type: !211)
!11042 = !DILocation(line: 601, column: 36, scope: !11038)
!11043 = !DILocalVariable(name: "size", arg: 2, scope: !11038, file: !64, line: 601, type: !211)
!11044 = !DILocation(line: 601, column: 46, scope: !11038)
!11045 = !DILocalVariable(name: "flags", arg: 3, scope: !11038, file: !64, line: 601, type: !1469)
!11046 = !DILocation(line: 601, column: 58, scope: !11038)
!11047 = !DILocation(line: 603, column: 23, scope: !11038)
!11048 = !DILocation(line: 603, column: 26, scope: !11038)
!11049 = !DILocation(line: 603, column: 32, scope: !11038)
!11050 = !DILocation(line: 603, column: 38, scope: !11038)
!11051 = !DILocation(line: 603, column: 9, scope: !11038)
!11052 = !DILocation(line: 603, column: 2, scope: !11038)
!11053 = distinct !DISubprogram(name: "clk_cpy_name", scope: !3, file: !3, line: 3670, type: !11054, scopeLine: 3671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11054 = !DISubroutineType(types: !11055)
!11055 = !{!89, !1959, !76, !1008}
!11056 = !DILocalVariable(name: "dst_p", arg: 1, scope: !11053, file: !3, line: 3670, type: !1959)
!11057 = !DILocation(line: 3670, column: 38, scope: !11053)
!11058 = !DILocalVariable(name: "src", arg: 2, scope: !11053, file: !3, line: 3670, type: !76)
!11059 = !DILocation(line: 3670, column: 57, scope: !11053)
!11060 = !DILocalVariable(name: "must_exist", arg: 3, scope: !11053, file: !3, line: 3670, type: !1008)
!11061 = !DILocation(line: 3670, column: 67, scope: !11053)
!11062 = !DILocalVariable(name: "dst", scope: !11053, file: !3, line: 3672, type: !76)
!11063 = !DILocation(line: 3672, column: 14, scope: !11053)
!11064 = !DILocation(line: 3674, column: 7, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 3674, column: 6)
!11066 = !DILocation(line: 3674, column: 6, scope: !11053)
!11067 = !DILocation(line: 3675, column: 7, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3675, column: 7)
!11069 = distinct !DILexicalBlock(scope: !11065, file: !3, line: 3674, column: 12)
!11070 = !DILocation(line: 3675, column: 7, scope: !11069)
!11071 = !DILocation(line: 3676, column: 4, scope: !11068)
!11072 = !DILocation(line: 3677, column: 3, scope: !11069)
!11073 = !DILocation(line: 3680, column: 31, scope: !11053)
!11074 = !DILocation(line: 3680, column: 17, scope: !11053)
!11075 = !DILocation(line: 3680, column: 15, scope: !11053)
!11076 = !DILocation(line: 3680, column: 3, scope: !11053)
!11077 = !DILocation(line: 3680, column: 9, scope: !11053)
!11078 = !DILocation(line: 3681, column: 7, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 3681, column: 6)
!11080 = !DILocation(line: 3681, column: 6, scope: !11053)
!11081 = !DILocation(line: 3682, column: 3, scope: !11079)
!11082 = !DILocation(line: 3684, column: 2, scope: !11053)
!11083 = !DILocation(line: 3685, column: 1, scope: !11053)
!11084 = distinct !DISubprogram(name: "kmalloc_array", scope: !64, file: !64, line: 584, type: !11039, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11085 = !DILocation(line: 445, column: 72, scope: !6316, inlinedAt: !11086)
!11086 = distinct !DILocation(line: 552, column: 10, scope: !6321, inlinedAt: !11087)
!11087 = distinct !DILocation(line: 591, column: 10, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11084, file: !64, line: 590, column: 6)
!11089 = !DILocation(line: 446, column: 9, scope: !6316, inlinedAt: !11086)
!11090 = !DILocation(line: 446, column: 23, scope: !6316, inlinedAt: !11086)
!11091 = !DILocation(line: 448, column: 8, scope: !6316, inlinedAt: !11086)
!11092 = !DILocation(line: 318, column: 67, scope: !6332, inlinedAt: !11093)
!11093 = distinct !DILocation(line: 553, column: 20, scope: !6321, inlinedAt: !11087)
!11094 = !DILocation(line: 346, column: 58, scope: !6338, inlinedAt: !11095)
!11095 = distinct !DILocation(line: 547, column: 11, scope: !6321, inlinedAt: !11087)
!11096 = !DILocation(line: 472, column: 28, scope: !6344, inlinedAt: !11097)
!11097 = distinct !DILocation(line: 481, column: 9, scope: !6349, inlinedAt: !11098)
!11098 = distinct !DILocation(line: 545, column: 11, scope: !6351, inlinedAt: !11087)
!11099 = !DILocation(line: 472, column: 40, scope: !6344, inlinedAt: !11097)
!11100 = !DILocation(line: 472, column: 60, scope: !6344, inlinedAt: !11097)
!11101 = !DILocation(line: 478, column: 51, scope: !6349, inlinedAt: !11098)
!11102 = !DILocation(line: 478, column: 63, scope: !6349, inlinedAt: !11098)
!11103 = !DILocation(line: 480, column: 15, scope: !6349, inlinedAt: !11098)
!11104 = !DILocation(line: 538, column: 45, scope: !6323, inlinedAt: !11087)
!11105 = !DILocation(line: 538, column: 57, scope: !6323, inlinedAt: !11087)
!11106 = !DILocation(line: 542, column: 16, scope: !6321, inlinedAt: !11087)
!11107 = !DILocalVariable(name: "n", arg: 1, scope: !11084, file: !64, line: 584, type: !211)
!11108 = !DILocation(line: 584, column: 42, scope: !11084)
!11109 = !DILocalVariable(name: "size", arg: 2, scope: !11084, file: !64, line: 584, type: !211)
!11110 = !DILocation(line: 584, column: 52, scope: !11084)
!11111 = !DILocalVariable(name: "flags", arg: 3, scope: !11084, file: !64, line: 584, type: !1469)
!11112 = !DILocation(line: 584, column: 64, scope: !11084)
!11113 = !DILocalVariable(name: "bytes", scope: !11084, file: !64, line: 586, type: !211)
!11114 = !DILocation(line: 586, column: 9, scope: !11084)
!11115 = !DILocalVariable(name: "__a", scope: !11116, file: !64, line: 588, type: !211)
!11116 = distinct !DILexicalBlock(scope: !11117, file: !64, line: 588, column: 6)
!11117 = distinct !DILexicalBlock(scope: !11084, file: !64, line: 588, column: 6)
!11118 = !DILocation(line: 588, column: 6, scope: !11116)
!11119 = !DILocalVariable(name: "__b", scope: !11116, file: !64, line: 588, type: !211)
!11120 = !DILocalVariable(name: "__d", scope: !11116, file: !64, line: 588, type: !11121)
!11121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!11122 = !DILocation(line: 588, column: 6, scope: !11117)
!11123 = !DILocation(line: 588, column: 6, scope: !11084)
!11124 = !DILocation(line: 589, column: 3, scope: !11117)
!11125 = !DILocation(line: 590, column: 27, scope: !11088)
!11126 = !DILocation(line: 590, column: 6, scope: !11088)
!11127 = !DILocation(line: 590, column: 30, scope: !11088)
!11128 = !DILocation(line: 590, column: 54, scope: !11088)
!11129 = !DILocation(line: 590, column: 33, scope: !11088)
!11130 = !DILocation(line: 590, column: 6, scope: !11084)
!11131 = !DILocation(line: 591, column: 18, scope: !11088)
!11132 = !DILocation(line: 591, column: 25, scope: !11088)
!11133 = !DILocation(line: 540, column: 27, scope: !6322, inlinedAt: !11087)
!11134 = !DILocation(line: 540, column: 6, scope: !6322, inlinedAt: !11087)
!11135 = !DILocation(line: 540, column: 6, scope: !6323, inlinedAt: !11087)
!11136 = !DILocation(line: 544, column: 7, scope: !6351, inlinedAt: !11087)
!11137 = !DILocation(line: 544, column: 12, scope: !6351, inlinedAt: !11087)
!11138 = !DILocation(line: 544, column: 7, scope: !6321, inlinedAt: !11087)
!11139 = !DILocation(line: 545, column: 25, scope: !6351, inlinedAt: !11087)
!11140 = !DILocation(line: 545, column: 31, scope: !6351, inlinedAt: !11087)
!11141 = !DILocation(line: 480, column: 33, scope: !6349, inlinedAt: !11098)
!11142 = !DILocation(line: 480, column: 23, scope: !6349, inlinedAt: !11098)
!11143 = !DILocation(line: 481, column: 29, scope: !6349, inlinedAt: !11098)
!11144 = !DILocation(line: 481, column: 35, scope: !6349, inlinedAt: !11098)
!11145 = !DILocation(line: 481, column: 42, scope: !6349, inlinedAt: !11098)
!11146 = !DILocation(line: 474, column: 23, scope: !6344, inlinedAt: !11097)
!11147 = !DILocation(line: 474, column: 29, scope: !6344, inlinedAt: !11097)
!11148 = !DILocation(line: 474, column: 36, scope: !6344, inlinedAt: !11097)
!11149 = !DILocation(line: 474, column: 9, scope: !6344, inlinedAt: !11097)
!11150 = !DILocation(line: 545, column: 4, scope: !6351, inlinedAt: !11087)
!11151 = !DILocation(line: 547, column: 25, scope: !6321, inlinedAt: !11087)
!11152 = !DILocation(line: 348, column: 7, scope: !6395, inlinedAt: !11095)
!11153 = !DILocation(line: 348, column: 6, scope: !6338, inlinedAt: !11095)
!11154 = !DILocation(line: 349, column: 3, scope: !6395, inlinedAt: !11095)
!11155 = !DILocation(line: 351, column: 6, scope: !6399, inlinedAt: !11095)
!11156 = !DILocation(line: 351, column: 11, scope: !6399, inlinedAt: !11095)
!11157 = !DILocation(line: 351, column: 6, scope: !6338, inlinedAt: !11095)
!11158 = !DILocation(line: 352, column: 3, scope: !6399, inlinedAt: !11095)
!11159 = !DILocation(line: 354, column: 32, scope: !6404, inlinedAt: !11095)
!11160 = !DILocation(line: 354, column: 37, scope: !6404, inlinedAt: !11095)
!11161 = !DILocation(line: 354, column: 42, scope: !6404, inlinedAt: !11095)
!11162 = !DILocation(line: 354, column: 45, scope: !6404, inlinedAt: !11095)
!11163 = !DILocation(line: 354, column: 50, scope: !6404, inlinedAt: !11095)
!11164 = !DILocation(line: 354, column: 6, scope: !6338, inlinedAt: !11095)
!11165 = !DILocation(line: 355, column: 3, scope: !6404, inlinedAt: !11095)
!11166 = !DILocation(line: 356, column: 32, scope: !6412, inlinedAt: !11095)
!11167 = !DILocation(line: 356, column: 37, scope: !6412, inlinedAt: !11095)
!11168 = !DILocation(line: 356, column: 43, scope: !6412, inlinedAt: !11095)
!11169 = !DILocation(line: 356, column: 46, scope: !6412, inlinedAt: !11095)
!11170 = !DILocation(line: 356, column: 51, scope: !6412, inlinedAt: !11095)
!11171 = !DILocation(line: 356, column: 6, scope: !6338, inlinedAt: !11095)
!11172 = !DILocation(line: 357, column: 3, scope: !6412, inlinedAt: !11095)
!11173 = !DILocation(line: 358, column: 6, scope: !6420, inlinedAt: !11095)
!11174 = !DILocation(line: 358, column: 11, scope: !6420, inlinedAt: !11095)
!11175 = !DILocation(line: 358, column: 6, scope: !6338, inlinedAt: !11095)
!11176 = !DILocation(line: 358, column: 26, scope: !6420, inlinedAt: !11095)
!11177 = !DILocation(line: 359, column: 6, scope: !6425, inlinedAt: !11095)
!11178 = !DILocation(line: 359, column: 11, scope: !6425, inlinedAt: !11095)
!11179 = !DILocation(line: 359, column: 6, scope: !6338, inlinedAt: !11095)
!11180 = !DILocation(line: 359, column: 26, scope: !6425, inlinedAt: !11095)
!11181 = !DILocation(line: 360, column: 6, scope: !6430, inlinedAt: !11095)
!11182 = !DILocation(line: 360, column: 11, scope: !6430, inlinedAt: !11095)
!11183 = !DILocation(line: 360, column: 6, scope: !6338, inlinedAt: !11095)
!11184 = !DILocation(line: 360, column: 26, scope: !6430, inlinedAt: !11095)
!11185 = !DILocation(line: 361, column: 6, scope: !6435, inlinedAt: !11095)
!11186 = !DILocation(line: 361, column: 11, scope: !6435, inlinedAt: !11095)
!11187 = !DILocation(line: 361, column: 6, scope: !6338, inlinedAt: !11095)
!11188 = !DILocation(line: 361, column: 26, scope: !6435, inlinedAt: !11095)
!11189 = !DILocation(line: 362, column: 6, scope: !6440, inlinedAt: !11095)
!11190 = !DILocation(line: 362, column: 11, scope: !6440, inlinedAt: !11095)
!11191 = !DILocation(line: 362, column: 6, scope: !6338, inlinedAt: !11095)
!11192 = !DILocation(line: 362, column: 26, scope: !6440, inlinedAt: !11095)
!11193 = !DILocation(line: 363, column: 6, scope: !6445, inlinedAt: !11095)
!11194 = !DILocation(line: 363, column: 11, scope: !6445, inlinedAt: !11095)
!11195 = !DILocation(line: 363, column: 6, scope: !6338, inlinedAt: !11095)
!11196 = !DILocation(line: 363, column: 26, scope: !6445, inlinedAt: !11095)
!11197 = !DILocation(line: 364, column: 6, scope: !6450, inlinedAt: !11095)
!11198 = !DILocation(line: 364, column: 11, scope: !6450, inlinedAt: !11095)
!11199 = !DILocation(line: 364, column: 6, scope: !6338, inlinedAt: !11095)
!11200 = !DILocation(line: 364, column: 26, scope: !6450, inlinedAt: !11095)
!11201 = !DILocation(line: 365, column: 6, scope: !6455, inlinedAt: !11095)
!11202 = !DILocation(line: 365, column: 11, scope: !6455, inlinedAt: !11095)
!11203 = !DILocation(line: 365, column: 6, scope: !6338, inlinedAt: !11095)
!11204 = !DILocation(line: 365, column: 26, scope: !6455, inlinedAt: !11095)
!11205 = !DILocation(line: 366, column: 6, scope: !6460, inlinedAt: !11095)
!11206 = !DILocation(line: 366, column: 11, scope: !6460, inlinedAt: !11095)
!11207 = !DILocation(line: 366, column: 6, scope: !6338, inlinedAt: !11095)
!11208 = !DILocation(line: 366, column: 26, scope: !6460, inlinedAt: !11095)
!11209 = !DILocation(line: 367, column: 6, scope: !6465, inlinedAt: !11095)
!11210 = !DILocation(line: 367, column: 11, scope: !6465, inlinedAt: !11095)
!11211 = !DILocation(line: 367, column: 6, scope: !6338, inlinedAt: !11095)
!11212 = !DILocation(line: 367, column: 26, scope: !6465, inlinedAt: !11095)
!11213 = !DILocation(line: 368, column: 6, scope: !6470, inlinedAt: !11095)
!11214 = !DILocation(line: 368, column: 11, scope: !6470, inlinedAt: !11095)
!11215 = !DILocation(line: 368, column: 6, scope: !6338, inlinedAt: !11095)
!11216 = !DILocation(line: 368, column: 26, scope: !6470, inlinedAt: !11095)
!11217 = !DILocation(line: 369, column: 6, scope: !6475, inlinedAt: !11095)
!11218 = !DILocation(line: 369, column: 11, scope: !6475, inlinedAt: !11095)
!11219 = !DILocation(line: 369, column: 6, scope: !6338, inlinedAt: !11095)
!11220 = !DILocation(line: 369, column: 26, scope: !6475, inlinedAt: !11095)
!11221 = !DILocation(line: 370, column: 6, scope: !6480, inlinedAt: !11095)
!11222 = !DILocation(line: 370, column: 11, scope: !6480, inlinedAt: !11095)
!11223 = !DILocation(line: 370, column: 6, scope: !6338, inlinedAt: !11095)
!11224 = !DILocation(line: 370, column: 26, scope: !6480, inlinedAt: !11095)
!11225 = !DILocation(line: 371, column: 6, scope: !6485, inlinedAt: !11095)
!11226 = !DILocation(line: 371, column: 11, scope: !6485, inlinedAt: !11095)
!11227 = !DILocation(line: 371, column: 6, scope: !6338, inlinedAt: !11095)
!11228 = !DILocation(line: 371, column: 26, scope: !6485, inlinedAt: !11095)
!11229 = !DILocation(line: 372, column: 6, scope: !6490, inlinedAt: !11095)
!11230 = !DILocation(line: 372, column: 11, scope: !6490, inlinedAt: !11095)
!11231 = !DILocation(line: 372, column: 6, scope: !6338, inlinedAt: !11095)
!11232 = !DILocation(line: 372, column: 26, scope: !6490, inlinedAt: !11095)
!11233 = !DILocation(line: 373, column: 6, scope: !6495, inlinedAt: !11095)
!11234 = !DILocation(line: 373, column: 11, scope: !6495, inlinedAt: !11095)
!11235 = !DILocation(line: 373, column: 6, scope: !6338, inlinedAt: !11095)
!11236 = !DILocation(line: 373, column: 26, scope: !6495, inlinedAt: !11095)
!11237 = !DILocation(line: 374, column: 6, scope: !6500, inlinedAt: !11095)
!11238 = !DILocation(line: 374, column: 11, scope: !6500, inlinedAt: !11095)
!11239 = !DILocation(line: 374, column: 6, scope: !6338, inlinedAt: !11095)
!11240 = !DILocation(line: 374, column: 26, scope: !6500, inlinedAt: !11095)
!11241 = !DILocation(line: 375, column: 6, scope: !6505, inlinedAt: !11095)
!11242 = !DILocation(line: 375, column: 11, scope: !6505, inlinedAt: !11095)
!11243 = !DILocation(line: 375, column: 6, scope: !6338, inlinedAt: !11095)
!11244 = !DILocation(line: 375, column: 27, scope: !6505, inlinedAt: !11095)
!11245 = !DILocation(line: 376, column: 6, scope: !6510, inlinedAt: !11095)
!11246 = !DILocation(line: 376, column: 11, scope: !6510, inlinedAt: !11095)
!11247 = !DILocation(line: 376, column: 6, scope: !6338, inlinedAt: !11095)
!11248 = !DILocation(line: 376, column: 32, scope: !6510, inlinedAt: !11095)
!11249 = !DILocation(line: 377, column: 6, scope: !6515, inlinedAt: !11095)
!11250 = !DILocation(line: 377, column: 11, scope: !6515, inlinedAt: !11095)
!11251 = !DILocation(line: 377, column: 6, scope: !6338, inlinedAt: !11095)
!11252 = !DILocation(line: 377, column: 32, scope: !6515, inlinedAt: !11095)
!11253 = !DILocation(line: 378, column: 6, scope: !6520, inlinedAt: !11095)
!11254 = !DILocation(line: 378, column: 11, scope: !6520, inlinedAt: !11095)
!11255 = !DILocation(line: 378, column: 6, scope: !6338, inlinedAt: !11095)
!11256 = !DILocation(line: 378, column: 32, scope: !6520, inlinedAt: !11095)
!11257 = !DILocation(line: 379, column: 6, scope: !6525, inlinedAt: !11095)
!11258 = !DILocation(line: 379, column: 11, scope: !6525, inlinedAt: !11095)
!11259 = !DILocation(line: 379, column: 6, scope: !6338, inlinedAt: !11095)
!11260 = !DILocation(line: 379, column: 33, scope: !6525, inlinedAt: !11095)
!11261 = !DILocation(line: 380, column: 6, scope: !6530, inlinedAt: !11095)
!11262 = !DILocation(line: 380, column: 11, scope: !6530, inlinedAt: !11095)
!11263 = !DILocation(line: 380, column: 6, scope: !6338, inlinedAt: !11095)
!11264 = !DILocation(line: 380, column: 33, scope: !6530, inlinedAt: !11095)
!11265 = !DILocation(line: 381, column: 6, scope: !6535, inlinedAt: !11095)
!11266 = !DILocation(line: 381, column: 11, scope: !6535, inlinedAt: !11095)
!11267 = !DILocation(line: 381, column: 6, scope: !6338, inlinedAt: !11095)
!11268 = !DILocation(line: 381, column: 33, scope: !6535, inlinedAt: !11095)
!11269 = !DILocation(line: 382, column: 2, scope: !6540, inlinedAt: !11095)
!11270 = !DILocation(line: 382, column: 2, scope: !6544, inlinedAt: !11095)
!11271 = !DILocation(line: 382, column: 2, scope: !6545, inlinedAt: !11095)
!11272 = !DILocation(line: 386, column: 1, scope: !6338, inlinedAt: !11095)
!11273 = !DILocation(line: 547, column: 9, scope: !6321, inlinedAt: !11087)
!11274 = !DILocation(line: 549, column: 8, scope: !6551, inlinedAt: !11087)
!11275 = !DILocation(line: 549, column: 7, scope: !6321, inlinedAt: !11087)
!11276 = !DILocation(line: 550, column: 4, scope: !6551, inlinedAt: !11087)
!11277 = !DILocation(line: 553, column: 33, scope: !6321, inlinedAt: !11087)
!11278 = !DILocation(line: 325, column: 6, scope: !6556, inlinedAt: !11093)
!11279 = !DILocation(line: 325, column: 6, scope: !6332, inlinedAt: !11093)
!11280 = !DILocation(line: 326, column: 3, scope: !6556, inlinedAt: !11093)
!11281 = !DILocation(line: 332, column: 9, scope: !6332, inlinedAt: !11093)
!11282 = !DILocation(line: 332, column: 15, scope: !6332, inlinedAt: !11093)
!11283 = !DILocation(line: 332, column: 2, scope: !6332, inlinedAt: !11093)
!11284 = !DILocation(line: 336, column: 1, scope: !6332, inlinedAt: !11093)
!11285 = !DILocation(line: 553, column: 5, scope: !6321, inlinedAt: !11087)
!11286 = !DILocation(line: 553, column: 41, scope: !6321, inlinedAt: !11087)
!11287 = !DILocation(line: 554, column: 5, scope: !6321, inlinedAt: !11087)
!11288 = !DILocation(line: 554, column: 12, scope: !6321, inlinedAt: !11087)
!11289 = !DILocation(line: 448, column: 31, scope: !6316, inlinedAt: !11086)
!11290 = !DILocation(line: 448, column: 34, scope: !6316, inlinedAt: !11086)
!11291 = !DILocation(line: 448, column: 14, scope: !6316, inlinedAt: !11086)
!11292 = !DILocation(line: 450, column: 22, scope: !6316, inlinedAt: !11086)
!11293 = !DILocation(line: 450, column: 25, scope: !6316, inlinedAt: !11086)
!11294 = !DILocation(line: 450, column: 30, scope: !6316, inlinedAt: !11086)
!11295 = !DILocation(line: 450, column: 36, scope: !6316, inlinedAt: !11086)
!11296 = !DILocation(line: 450, column: 8, scope: !6316, inlinedAt: !11086)
!11297 = !DILocation(line: 450, column: 6, scope: !6316, inlinedAt: !11086)
!11298 = !DILocation(line: 451, column: 9, scope: !6316, inlinedAt: !11086)
!11299 = !DILocation(line: 552, column: 3, scope: !6321, inlinedAt: !11087)
!11300 = !DILocation(line: 557, column: 19, scope: !6323, inlinedAt: !11087)
!11301 = !DILocation(line: 557, column: 25, scope: !6323, inlinedAt: !11087)
!11302 = !DILocation(line: 557, column: 9, scope: !6323, inlinedAt: !11087)
!11303 = !DILocation(line: 557, column: 2, scope: !6323, inlinedAt: !11087)
!11304 = !DILocation(line: 558, column: 1, scope: !6323, inlinedAt: !11087)
!11305 = !DILocation(line: 591, column: 3, scope: !11088)
!11306 = !DILocation(line: 592, column: 19, scope: !11084)
!11307 = !DILocation(line: 592, column: 26, scope: !11084)
!11308 = !DILocation(line: 592, column: 9, scope: !11084)
!11309 = !DILocation(line: 592, column: 2, scope: !11084)
!11310 = !DILocation(line: 593, column: 1, scope: !11084)
!11311 = distinct !DISubprogram(name: "__must_check_overflow", scope: !11312, file: !11312, line: 52, type: !11313, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11312 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!11313 = !DISubroutineType(types: !11314)
!11314 = !{!1008, !1008}
!11315 = !DILocalVariable(name: "overflow", arg: 1, scope: !11311, file: !11312, line: 52, type: !1008)
!11316 = !DILocation(line: 52, column: 60, scope: !11311)
!11317 = !DILocation(line: 54, column: 9, scope: !11311)
!11318 = !DILocation(line: 54, column: 2, scope: !11311)
!11319 = distinct !DISubprogram(name: "get_order", scope: !11320, file: !11320, line: 29, type: !11321, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11320 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11321 = !DISubroutineType(types: !11322)
!11322 = !{!89, !214}
!11323 = !DILocalVariable(name: "x", arg: 1, scope: !11324, file: !11325, line: 366, type: !285)
!11324 = distinct !DISubprogram(name: "fls64", scope: !11325, file: !11325, line: 366, type: !11326, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11325 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!11326 = !DISubroutineType(types: !11327)
!11327 = !{!89, !285}
!11328 = !DILocation(line: 366, column: 40, scope: !11324, inlinedAt: !11329)
!11329 = distinct !DILocation(line: 46, column: 9, scope: !11319)
!11330 = !DILocalVariable(name: "bitpos", scope: !11324, file: !11325, line: 368, type: !89)
!11331 = !DILocation(line: 368, column: 6, scope: !11324, inlinedAt: !11329)
!11332 = !DILocalVariable(name: "size", arg: 1, scope: !11319, file: !11320, line: 29, type: !214)
!11333 = !DILocation(line: 29, column: 63, scope: !11319)
!11334 = !DILocation(line: 31, column: 27, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11319, file: !11320, line: 31, column: 6)
!11336 = !DILocation(line: 31, column: 6, scope: !11335)
!11337 = !DILocation(line: 31, column: 6, scope: !11319)
!11338 = !DILocation(line: 32, column: 8, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11340, file: !11320, line: 32, column: 7)
!11340 = distinct !DILexicalBlock(scope: !11335, file: !11320, line: 31, column: 34)
!11341 = !DILocation(line: 32, column: 7, scope: !11340)
!11342 = !DILocation(line: 33, column: 4, scope: !11339)
!11343 = !DILocation(line: 35, column: 7, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11340, file: !11320, line: 35, column: 7)
!11345 = !DILocation(line: 35, column: 12, scope: !11344)
!11346 = !DILocation(line: 35, column: 7, scope: !11340)
!11347 = !DILocation(line: 36, column: 4, scope: !11344)
!11348 = !DILocation(line: 38, column: 10, scope: !11340)
!11349 = !DILocation(line: 38, column: 28, scope: !11340)
!11350 = !DILocation(line: 38, column: 41, scope: !11340)
!11351 = !DILocation(line: 38, column: 3, scope: !11340)
!11352 = !DILocation(line: 41, column: 6, scope: !11319)
!11353 = !DILocation(line: 42, column: 7, scope: !11319)
!11354 = !DILocation(line: 46, column: 15, scope: !11319)
!11355 = !DILocation(line: 374, column: 2, scope: !11324, inlinedAt: !11329)
!11356 = !DILocation(line: 376, column: 14, scope: !11324, inlinedAt: !11329)
!11357 = !{i32 405565}
!11358 = !DILocation(line: 377, column: 9, scope: !11324, inlinedAt: !11329)
!11359 = !DILocation(line: 377, column: 16, scope: !11324, inlinedAt: !11329)
!11360 = !DILocation(line: 46, column: 2, scope: !11319)
!11361 = !DILocation(line: 48, column: 1, scope: !11319)
!11362 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11363, file: !11363, line: 30, type: !11364, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11363 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11364 = !DISubroutineType(types: !11365)
!11365 = !{!89, !283}
!11366 = !DILocation(line: 366, column: 40, scope: !11324, inlinedAt: !11367)
!11367 = distinct !DILocation(line: 32, column: 9, scope: !11362)
!11368 = !DILocation(line: 368, column: 6, scope: !11324, inlinedAt: !11367)
!11369 = !DILocalVariable(name: "n", arg: 1, scope: !11362, file: !11363, line: 30, type: !283)
!11370 = !DILocation(line: 30, column: 21, scope: !11362)
!11371 = !DILocation(line: 32, column: 15, scope: !11362)
!11372 = !DILocation(line: 374, column: 2, scope: !11324, inlinedAt: !11367)
!11373 = !DILocation(line: 376, column: 14, scope: !11324, inlinedAt: !11367)
!11374 = !DILocation(line: 377, column: 9, scope: !11324, inlinedAt: !11367)
!11375 = !DILocation(line: 377, column: 16, scope: !11324, inlinedAt: !11367)
!11376 = !DILocation(line: 32, column: 18, scope: !11362)
!11377 = !DILocation(line: 32, column: 2, scope: !11362)
!11378 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !1127, file: !1127, line: 137, type: !11379, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11379 = !DISubroutineType(types: !11380)
!11380 = !{!71, !1058, !1399, !211, !1469}
!11381 = !DILocalVariable(name: "s", arg: 1, scope: !11378, file: !1127, line: 137, type: !1058)
!11382 = !DILocation(line: 137, column: 54, scope: !11378)
!11383 = !DILocalVariable(name: "object", arg: 2, scope: !11378, file: !1127, line: 137, type: !1399)
!11384 = !DILocation(line: 137, column: 69, scope: !11378)
!11385 = !DILocalVariable(name: "size", arg: 3, scope: !11378, file: !1127, line: 138, type: !211)
!11386 = !DILocation(line: 138, column: 12, scope: !11378)
!11387 = !DILocalVariable(name: "flags", arg: 4, scope: !11378, file: !1127, line: 138, type: !1469)
!11388 = !DILocation(line: 138, column: 24, scope: !11378)
!11389 = !DILocation(line: 140, column: 17, scope: !11378)
!11390 = !DILocation(line: 140, column: 2, scope: !11378)
!11391 = distinct !DISubprogram(name: "__clk_init_parent", scope: !3, file: !3, line: 2426, type: !11392, scopeLine: 2427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11392 = !DISubroutineType(types: !11393)
!11393 = !{!72, !72}
!11394 = !DILocalVariable(name: "core", arg: 1, scope: !11391, file: !3, line: 2426, type: !72)
!11395 = !DILocation(line: 2426, column: 60, scope: !11391)
!11396 = !DILocalVariable(name: "index", scope: !11391, file: !3, line: 2428, type: !573)
!11397 = !DILocation(line: 2428, column: 5, scope: !11391)
!11398 = !DILocation(line: 2430, column: 6, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 2430, column: 6)
!11400 = !DILocation(line: 2430, column: 12, scope: !11399)
!11401 = !DILocation(line: 2430, column: 24, scope: !11399)
!11402 = !DILocation(line: 2430, column: 28, scope: !11399)
!11403 = !DILocation(line: 2430, column: 31, scope: !11399)
!11404 = !DILocation(line: 2430, column: 37, scope: !11399)
!11405 = !DILocation(line: 2430, column: 42, scope: !11399)
!11406 = !DILocation(line: 2430, column: 6, scope: !11391)
!11407 = !DILocation(line: 2431, column: 11, scope: !11399)
!11408 = !DILocation(line: 2431, column: 17, scope: !11399)
!11409 = !DILocation(line: 2431, column: 22, scope: !11399)
!11410 = !DILocation(line: 2431, column: 33, scope: !11399)
!11411 = !DILocation(line: 2431, column: 39, scope: !11399)
!11412 = !DILocation(line: 2431, column: 9, scope: !11399)
!11413 = !DILocation(line: 2431, column: 3, scope: !11399)
!11414 = !DILocation(line: 2433, column: 38, scope: !11391)
!11415 = !DILocation(line: 2433, column: 44, scope: !11391)
!11416 = !DILocation(line: 2433, column: 9, scope: !11391)
!11417 = !DILocation(line: 2433, column: 2, scope: !11391)
!11418 = distinct !DISubprogram(name: "clk_core_reparent_orphans_nolock", scope: !3, file: !3, line: 3345, type: !3022, scopeLine: 3346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11419 = !DILocalVariable(name: "orphan", scope: !11418, file: !3, line: 3347, type: !72)
!11420 = !DILocation(line: 3347, column: 19, scope: !11418)
!11421 = !DILocalVariable(name: "tmp2", scope: !11418, file: !3, line: 3348, type: !705)
!11422 = !DILocation(line: 3348, column: 21, scope: !11418)
!11423 = !DILocalVariable(name: "____ptr", scope: !11424, file: !3, line: 3354, type: !705)
!11424 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 3354, column: 2)
!11425 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 3354, column: 2)
!11426 = !DILocation(line: 3354, column: 2, scope: !11424)
!11427 = !DILocalVariable(name: "__mptr", scope: !11428, file: !3, line: 3354, type: !71)
!11428 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 3354, column: 2)
!11429 = !DILocation(line: 3354, column: 2, scope: !11428)
!11430 = !DILocation(line: 3354, column: 2, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 3354, column: 2)
!11432 = !DILocation(line: 3354, column: 2, scope: !11425)
!11433 = !DILocation(line: 3354, column: 2, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 3354, column: 2)
!11435 = !DILocation(line: 3354, column: 2, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 3354, column: 2)
!11437 = !DILocation(line: 0, scope: !11434)
!11438 = !DILocalVariable(name: "parent", scope: !11439, file: !3, line: 3355, type: !72)
!11439 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 3354, column: 72)
!11440 = !DILocation(line: 3355, column: 20, scope: !11439)
!11441 = !DILocation(line: 3355, column: 47, scope: !11439)
!11442 = !DILocation(line: 3355, column: 29, scope: !11439)
!11443 = !DILocation(line: 3363, column: 7, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3363, column: 7)
!11445 = !DILocation(line: 3363, column: 7, scope: !11439)
!11446 = !DILocation(line: 3365, column: 28, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11444, file: !3, line: 3363, column: 15)
!11448 = !DILocation(line: 3365, column: 36, scope: !11447)
!11449 = !DILocation(line: 3365, column: 4, scope: !11447)
!11450 = !DILocation(line: 3366, column: 27, scope: !11447)
!11451 = !DILocation(line: 3366, column: 35, scope: !11447)
!11452 = !DILocation(line: 3366, column: 4, scope: !11447)
!11453 = !DILocation(line: 3367, column: 28, scope: !11447)
!11454 = !DILocation(line: 3367, column: 4, scope: !11447)
!11455 = !DILocation(line: 3368, column: 23, scope: !11447)
!11456 = !DILocation(line: 3368, column: 4, scope: !11447)
!11457 = !DILocation(line: 3369, column: 3, scope: !11447)
!11458 = !DILocation(line: 3370, column: 2, scope: !11439)
!11459 = !DILocalVariable(name: "____ptr", scope: !11460, file: !3, line: 3354, type: !705)
!11460 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 3354, column: 2)
!11461 = !DILocation(line: 3354, column: 2, scope: !11460)
!11462 = !DILocalVariable(name: "__mptr", scope: !11463, file: !3, line: 3354, type: !71)
!11463 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 3354, column: 2)
!11464 = !DILocation(line: 3354, column: 2, scope: !11463)
!11465 = !DILocation(line: 3354, column: 2, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 3354, column: 2)
!11467 = distinct !{!11467, !11432, !11468}
!11468 = !DILocation(line: 3370, column: 2, scope: !11425)
!11469 = !DILocation(line: 3371, column: 1, scope: !11418)
!11470 = distinct !DISubprogram(name: "kref_init", scope: !1589, file: !1589, line: 29, type: !5140, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11471 = !DILocalVariable(name: "kref", arg: 1, scope: !11470, file: !1589, line: 29, type: !5142)
!11472 = !DILocation(line: 29, column: 43, scope: !11470)
!11473 = !DILocation(line: 31, column: 16, scope: !11470)
!11474 = !DILocation(line: 31, column: 22, scope: !11470)
!11475 = !DILocation(line: 31, column: 2, scope: !11470)
!11476 = !DILocation(line: 32, column: 1, scope: !11470)
!11477 = distinct !DISubprogram(name: "clk_debug_register", scope: !3, file: !3, line: 3339, type: !3094, scopeLine: 3339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11478 = !DILocalVariable(name: "core", arg: 1, scope: !11477, file: !3, line: 3339, type: !72)
!11479 = !DILocation(line: 3339, column: 56, scope: !11477)
!11480 = !DILocation(line: 3339, column: 64, scope: !11477)
!11481 = distinct !DISubprogram(name: "refcount_set", scope: !56, file: !56, line: 134, type: !11482, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11482 = !DISubroutineType(types: !11483)
!11483 = !{null, !10433, !89}
!11484 = !DILocalVariable(name: "v", arg: 1, scope: !11485, file: !7943, line: 39, type: !7946)
!11485 = distinct !DISubprogram(name: "arch_atomic_set", scope: !7943, file: !7943, line: 39, type: !11486, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11486 = !DISubroutineType(types: !11487)
!11487 = !{null, !7946, !89}
!11488 = !DILocation(line: 39, column: 55, scope: !11485, inlinedAt: !11489)
!11489 = distinct !DILocation(line: 46, column: 2, scope: !11490, inlinedAt: !11491)
!11490 = distinct !DISubprogram(name: "atomic_set", scope: !7959, file: !7959, line: 43, type: !11486, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11491 = distinct !DILocation(line: 136, column: 2, scope: !11481)
!11492 = !DILocalVariable(name: "i", arg: 2, scope: !11485, file: !7943, line: 39, type: !89)
!11493 = !DILocation(line: 39, column: 62, scope: !11485, inlinedAt: !11489)
!11494 = !DILocalVariable(name: "v", arg: 1, scope: !11495, file: !7996, line: 84, type: !7999)
!11495 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !7996, file: !7996, line: 84, type: !7997, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11496 = !DILocation(line: 84, column: 74, scope: !11495, inlinedAt: !11497)
!11497 = distinct !DILocation(line: 45, column: 2, scope: !11490, inlinedAt: !11491)
!11498 = !DILocalVariable(name: "size", arg: 2, scope: !11495, file: !7996, line: 84, type: !211)
!11499 = !DILocation(line: 84, column: 84, scope: !11495, inlinedAt: !11497)
!11500 = !DILocalVariable(name: "v", arg: 1, scope: !11490, file: !7959, line: 43, type: !7946)
!11501 = !DILocation(line: 43, column: 22, scope: !11490, inlinedAt: !11491)
!11502 = !DILocalVariable(name: "i", arg: 2, scope: !11490, file: !7959, line: 43, type: !89)
!11503 = !DILocation(line: 43, column: 29, scope: !11490, inlinedAt: !11491)
!11504 = !DILocalVariable(name: "r", arg: 1, scope: !11481, file: !56, line: 134, type: !10433)
!11505 = !DILocation(line: 134, column: 45, scope: !11481)
!11506 = !DILocalVariable(name: "n", arg: 2, scope: !11481, file: !56, line: 134, type: !89)
!11507 = !DILocation(line: 134, column: 52, scope: !11481)
!11508 = !DILocation(line: 136, column: 14, scope: !11481)
!11509 = !DILocation(line: 136, column: 17, scope: !11481)
!11510 = !DILocation(line: 136, column: 23, scope: !11481)
!11511 = !DILocation(line: 45, column: 26, scope: !11490, inlinedAt: !11491)
!11512 = !DILocation(line: 86, column: 20, scope: !11495, inlinedAt: !11497)
!11513 = !DILocation(line: 86, column: 23, scope: !11495, inlinedAt: !11497)
!11514 = !DILocation(line: 86, column: 2, scope: !11495, inlinedAt: !11497)
!11515 = !DILocation(line: 87, column: 2, scope: !11495, inlinedAt: !11497)
!11516 = !DILocation(line: 46, column: 18, scope: !11490, inlinedAt: !11491)
!11517 = !DILocation(line: 46, column: 21, scope: !11490, inlinedAt: !11491)
!11518 = !DILocation(line: 41, column: 2, scope: !11519, inlinedAt: !11489)
!11519 = distinct !DILexicalBlock(scope: !11485, file: !7943, line: 41, column: 2)
!11520 = !DILocation(line: 137, column: 1, scope: !11481)
!11521 = distinct !DISubprogram(name: "dev_of_node", scope: !30, file: !30, line: 754, type: !5371, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11522 = !DILocalVariable(name: "dev", arg: 1, scope: !11521, file: !30, line: 754, type: !100)
!11523 = !DILocation(line: 754, column: 62, scope: !11521)
!11524 = !DILocation(line: 756, column: 33, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11521, file: !30, line: 756, column: 6)
!11526 = !DILocation(line: 756, column: 6, scope: !11521)
!11527 = !DILocation(line: 757, column: 3, scope: !11525)
!11528 = !DILocation(line: 758, column: 9, scope: !11521)
!11529 = !DILocation(line: 758, column: 14, scope: !11521)
!11530 = !DILocation(line: 758, column: 2, scope: !11521)
!11531 = !DILocation(line: 759, column: 1, scope: !11521)
!11532 = distinct !DISubprogram(name: "clk_nodrv_prepare_enable", scope: !3, file: !3, line: 3941, type: !87, scopeLine: 3942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11533 = !DILocalVariable(name: "hw", arg: 1, scope: !11532, file: !3, line: 3941, type: !90)
!11534 = !DILocation(line: 3941, column: 52, scope: !11532)
!11535 = !DILocation(line: 3943, column: 2, scope: !11532)
!11536 = distinct !DISubprogram(name: "clk_nodrv_disable_unprepare", scope: !3, file: !3, line: 3946, type: !2106, scopeLine: 3947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11537 = !DILocalVariable(name: "hw", arg: 1, scope: !11536, file: !3, line: 3946, type: !90)
!11538 = !DILocation(line: 3946, column: 56, scope: !11536)
!11539 = !DILocalVariable(name: "__ret_warn_on", scope: !11540, file: !3, line: 3948, type: !89)
!11540 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 3948, column: 2)
!11541 = !DILocation(line: 3948, column: 2, scope: !11540)
!11542 = !DILocation(line: 3948, column: 2, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 3948, column: 2)
!11544 = !DILocation(line: 3948, column: 2, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11543, file: !3, line: 3948, column: 2)
!11546 = !DILocation(line: 3948, column: 2, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3948, column: 2)
!11548 = !DILocation(line: 3948, column: 2, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3948, column: 2)
!11550 = !{i32 -2142884071, i32 -2142884042, i32 -2142883996, i32 -2142883938, i32 -2142883884, i32 -2142883830, i32 -2142883775, i32 -2142883744}
!11551 = !DILocation(line: 3948, column: 2, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3948, column: 2)
!11553 = !{i32 -2142883333, i32 -2142883326, i32 -2142883274, i32 -2142883243, i32 -2142883213}
!11554 = !DILocation(line: 3948, column: 2, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3948, column: 2)
!11556 = !DILocation(line: 3949, column: 1, scope: !11536)
!11557 = distinct !DISubprogram(name: "clk_nodrv_set_parent", scope: !3, file: !3, line: 3957, type: !2139, scopeLine: 3958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11558 = !DILocalVariable(name: "hw", arg: 1, scope: !11557, file: !3, line: 3957, type: !90)
!11559 = !DILocation(line: 3957, column: 48, scope: !11557)
!11560 = !DILocalVariable(name: "index", arg: 2, scope: !11557, file: !3, line: 3957, type: !573)
!11561 = !DILocation(line: 3957, column: 55, scope: !11557)
!11562 = !DILocation(line: 3959, column: 2, scope: !11557)
!11563 = distinct !DISubprogram(name: "clk_nodrv_set_rate", scope: !3, file: !3, line: 3951, type: !2147, scopeLine: 3953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11564 = !DILocalVariable(name: "hw", arg: 1, scope: !11563, file: !3, line: 3951, type: !90)
!11565 = !DILocation(line: 3951, column: 46, scope: !11563)
!11566 = !DILocalVariable(name: "rate", arg: 2, scope: !11563, file: !3, line: 3951, type: !214)
!11567 = !DILocation(line: 3951, column: 64, scope: !11563)
!11568 = !DILocalVariable(name: "parent_rate", arg: 3, scope: !11563, file: !3, line: 3952, type: !214)
!11569 = !DILocation(line: 3952, column: 20, scope: !11563)
!11570 = !DILocation(line: 3954, column: 2, scope: !11563)
!11571 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !11572, file: !11572, line: 646, type: !5570, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11572 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!11573 = !DILocalVariable(name: "__ret", scope: !11574, file: !11572, line: 648, type: !214)
!11574 = distinct !DILexicalBlock(scope: !11571, file: !11572, line: 648, column: 9)
!11575 = !DILocation(line: 648, column: 9, scope: !11574)
!11576 = !DILocalVariable(name: "__edi", scope: !11574, file: !11572, line: 648, type: !214)
!11577 = !DILocalVariable(name: "__esi", scope: !11574, file: !11572, line: 648, type: !214)
!11578 = !DILocalVariable(name: "__edx", scope: !11574, file: !11572, line: 648, type: !214)
!11579 = !DILocalVariable(name: "__ecx", scope: !11574, file: !11572, line: 648, type: !214)
!11580 = !DILocalVariable(name: "__eax", scope: !11574, file: !11572, line: 648, type: !214)
!11581 = !DILocation(line: 648, column: 9, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11583, file: !11572, line: 648, column: 9)
!11583 = distinct !DILexicalBlock(scope: !11574, file: !11572, line: 648, column: 9)
!11584 = !{i32 -2145650577, i32 -2145648262, i32 -2145648028, i32 -2145647977, i32 -2145647949, i32 -2145647924, i32 -2145648240, i32 -2145648227, i32 -2145647789, i32 -2145647670, i32 -2145648135, i32 -2145648108, i32 -2145648080, i32 -2145648050}
!11585 = !DILocalVariable(name: "__mask", scope: !11586, file: !11572, line: 648, type: !214)
!11586 = distinct !DILexicalBlock(scope: !11582, file: !11572, line: 648, column: 9)
!11587 = !DILocation(line: 648, column: 9, scope: !11586)
!11588 = !DILocation(line: 648, column: 9, scope: !11583)
!11589 = !DILocation(line: 648, column: 2, scope: !11571)
!11590 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !11572, file: !11572, line: 666, type: !5570, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11591 = !DILocalVariable(name: "f", scope: !11590, file: !11572, line: 668, type: !214)
!11592 = !DILocation(line: 668, column: 16, scope: !11590)
!11593 = !DILocation(line: 670, column: 6, scope: !11590)
!11594 = !DILocation(line: 670, column: 4, scope: !11590)
!11595 = !DILocation(line: 671, column: 2, scope: !11590)
!11596 = !DILocation(line: 672, column: 9, scope: !11590)
!11597 = !DILocation(line: 672, column: 2, scope: !11590)
!11598 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !11572, file: !11572, line: 656, type: !3022, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11599 = !DILocalVariable(name: "__edi", scope: !11600, file: !11572, line: 658, type: !214)
!11600 = distinct !DILexicalBlock(scope: !11598, file: !11572, line: 658, column: 2)
!11601 = !DILocation(line: 658, column: 2, scope: !11600)
!11602 = !DILocalVariable(name: "__esi", scope: !11600, file: !11572, line: 658, type: !214)
!11603 = !DILocalVariable(name: "__edx", scope: !11600, file: !11572, line: 658, type: !214)
!11604 = !DILocalVariable(name: "__ecx", scope: !11600, file: !11572, line: 658, type: !214)
!11605 = !DILocalVariable(name: "__eax", scope: !11600, file: !11572, line: 658, type: !214)
!11606 = !{i32 -2145643483, i32 -2145642751, i32 -2145642517, i32 -2145642466, i32 -2145642438, i32 -2145642413, i32 -2145642729, i32 -2145642716, i32 -2145642278, i32 -2145642159, i32 -2145642624, i32 -2145642597, i32 -2145642569, i32 -2145642539}
!11607 = !DILocation(line: 659, column: 1, scope: !11598)
!11608 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !11572, file: !11572, line: 651, type: !5675, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11609 = !DILocalVariable(name: "f", arg: 1, scope: !11608, file: !11572, line: 651, type: !214)
!11610 = !DILocation(line: 651, column: 65, scope: !11608)
!11611 = !DILocalVariable(name: "__edi", scope: !11612, file: !11572, line: 653, type: !214)
!11612 = distinct !DILexicalBlock(scope: !11608, file: !11572, line: 653, column: 2)
!11613 = !DILocation(line: 653, column: 2, scope: !11612)
!11614 = !DILocalVariable(name: "__esi", scope: !11612, file: !11572, line: 653, type: !214)
!11615 = !DILocalVariable(name: "__edx", scope: !11612, file: !11572, line: 653, type: !214)
!11616 = !DILocalVariable(name: "__ecx", scope: !11612, file: !11572, line: 653, type: !214)
!11617 = !DILocalVariable(name: "__eax", scope: !11612, file: !11572, line: 653, type: !214)
!11618 = !{i32 -2145646110, i32 -2145645360, i32 -2145645126, i32 -2145645075, i32 -2145645047, i32 -2145645022, i32 -2145645338, i32 -2145645325, i32 -2145644887, i32 -2145644768, i32 -2145645233, i32 -2145645206, i32 -2145645178, i32 -2145645148}
!11619 = !DILocation(line: 654, column: 1, scope: !11608)
!11620 = distinct !DISubprogram(name: "clk_core_evict_parent_cache_subtree", scope: !3, file: !3, line: 3971, type: !4446, scopeLine: 3973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11621 = !DILocalVariable(name: "root", arg: 1, scope: !11620, file: !3, line: 3971, type: !72)
!11622 = !DILocation(line: 3971, column: 66, scope: !11620)
!11623 = !DILocalVariable(name: "target", arg: 2, scope: !11620, file: !3, line: 3972, type: !72)
!11624 = !DILocation(line: 3972, column: 24, scope: !11620)
!11625 = !DILocalVariable(name: "i", scope: !11620, file: !3, line: 3974, type: !89)
!11626 = !DILocation(line: 3974, column: 6, scope: !11620)
!11627 = !DILocalVariable(name: "child", scope: !11620, file: !3, line: 3975, type: !72)
!11628 = !DILocation(line: 3975, column: 19, scope: !11620)
!11629 = !DILocation(line: 3977, column: 9, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 3977, column: 2)
!11631 = !DILocation(line: 3977, column: 7, scope: !11630)
!11632 = !DILocation(line: 3977, column: 14, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11630, file: !3, line: 3977, column: 2)
!11634 = !DILocation(line: 3977, column: 18, scope: !11633)
!11635 = !DILocation(line: 3977, column: 24, scope: !11633)
!11636 = !DILocation(line: 3977, column: 16, scope: !11633)
!11637 = !DILocation(line: 3977, column: 2, scope: !11630)
!11638 = !DILocation(line: 3978, column: 7, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 3978, column: 7)
!11640 = !DILocation(line: 3978, column: 13, scope: !11639)
!11641 = !DILocation(line: 3978, column: 21, scope: !11639)
!11642 = !DILocation(line: 3978, column: 24, scope: !11639)
!11643 = !DILocation(line: 3978, column: 32, scope: !11639)
!11644 = !DILocation(line: 3978, column: 29, scope: !11639)
!11645 = !DILocation(line: 3978, column: 7, scope: !11633)
!11646 = !DILocation(line: 3979, column: 4, scope: !11639)
!11647 = !DILocation(line: 3979, column: 10, scope: !11639)
!11648 = !DILocation(line: 3979, column: 18, scope: !11639)
!11649 = !DILocation(line: 3979, column: 21, scope: !11639)
!11650 = !DILocation(line: 3979, column: 26, scope: !11639)
!11651 = !DILocation(line: 3977, column: 38, scope: !11633)
!11652 = !DILocation(line: 3977, column: 2, scope: !11633)
!11653 = distinct !{!11653, !11637, !11654}
!11654 = !DILocation(line: 3979, column: 28, scope: !11630)
!11655 = !DILocalVariable(name: "____ptr", scope: !11656, file: !3, line: 3981, type: !705)
!11656 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 3981, column: 2)
!11657 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 3981, column: 2)
!11658 = !DILocation(line: 3981, column: 2, scope: !11656)
!11659 = !DILocalVariable(name: "__mptr", scope: !11660, file: !3, line: 3981, type: !71)
!11660 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 3981, column: 2)
!11661 = !DILocation(line: 3981, column: 2, scope: !11660)
!11662 = !DILocation(line: 3981, column: 2, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 3981, column: 2)
!11664 = !DILocation(line: 3981, column: 2, scope: !11657)
!11665 = !DILocation(line: 3981, column: 2, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 3981, column: 2)
!11667 = !DILocation(line: 3982, column: 39, scope: !11666)
!11668 = !DILocation(line: 3982, column: 46, scope: !11666)
!11669 = !DILocation(line: 3982, column: 3, scope: !11666)
!11670 = !DILocalVariable(name: "____ptr", scope: !11671, file: !3, line: 3981, type: !705)
!11671 = distinct !DILexicalBlock(scope: !11666, file: !3, line: 3981, column: 2)
!11672 = !DILocation(line: 3981, column: 2, scope: !11671)
!11673 = !DILocalVariable(name: "__mptr", scope: !11674, file: !3, line: 3981, type: !71)
!11674 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 3981, column: 2)
!11675 = !DILocation(line: 3981, column: 2, scope: !11674)
!11676 = !DILocation(line: 3981, column: 2, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3981, column: 2)
!11678 = distinct !{!11678, !11664, !11679}
!11679 = !DILocation(line: 3982, column: 52, scope: !11657)
!11680 = !DILocation(line: 3983, column: 1, scope: !11620)
!11681 = distinct !DISubprogram(name: "hlist_unhashed", scope: !5752, file: !5752, line: 806, type: !11682, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11682 = !DISubroutineType(types: !11683)
!11683 = !{!89, !11684}
!11684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11685, size: 64)
!11685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !706)
!11686 = !DILocalVariable(name: "h", arg: 1, scope: !11681, file: !5752, line: 806, type: !11684)
!11687 = !DILocation(line: 806, column: 59, scope: !11681)
!11688 = !DILocation(line: 808, column: 10, scope: !11681)
!11689 = !DILocation(line: 808, column: 13, scope: !11681)
!11690 = !DILocation(line: 808, column: 9, scope: !11681)
!11691 = !DILocation(line: 808, column: 2, scope: !11681)
!11692 = distinct !DISubprogram(name: "__hlist_del", scope: !5752, file: !5752, line: 833, type: !5814, scopeLine: 834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11693 = !DILocalVariable(name: "n", arg: 1, scope: !11692, file: !5752, line: 833, type: !705)
!11694 = !DILocation(line: 833, column: 51, scope: !11692)
!11695 = !DILocalVariable(name: "next", scope: !11692, file: !5752, line: 835, type: !705)
!11696 = !DILocation(line: 835, column: 21, scope: !11692)
!11697 = !DILocation(line: 835, column: 28, scope: !11692)
!11698 = !DILocation(line: 835, column: 31, scope: !11692)
!11699 = !DILocalVariable(name: "pprev", scope: !11692, file: !5752, line: 836, type: !710)
!11700 = !DILocation(line: 836, column: 22, scope: !11692)
!11701 = !DILocation(line: 836, column: 30, scope: !11692)
!11702 = !DILocation(line: 836, column: 33, scope: !11692)
!11703 = !DILocation(line: 838, column: 2, scope: !11692)
!11704 = !DILocation(line: 838, column: 2, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11692, file: !5752, line: 838, column: 2)
!11706 = !DILocation(line: 838, column: 2, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11705, file: !5752, line: 838, column: 2)
!11708 = !DILocation(line: 838, column: 2, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11705, file: !5752, line: 838, column: 2)
!11710 = !DILocation(line: 839, column: 6, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11692, file: !5752, line: 839, column: 6)
!11712 = !DILocation(line: 839, column: 6, scope: !11692)
!11713 = !DILocation(line: 840, column: 3, scope: !11711)
!11714 = !DILocation(line: 840, column: 3, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11711, file: !5752, line: 840, column: 3)
!11716 = !DILocation(line: 840, column: 3, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11715, file: !5752, line: 840, column: 3)
!11718 = !DILocation(line: 840, column: 3, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11715, file: !5752, line: 840, column: 3)
!11720 = !DILocation(line: 841, column: 1, scope: !11692)
!11721 = distinct !DISubprogram(name: "INIT_HLIST_NODE", scope: !5752, file: !5752, line: 792, type: !5814, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11722 = !DILocalVariable(name: "h", arg: 1, scope: !11721, file: !5752, line: 792, type: !705)
!11723 = !DILocation(line: 792, column: 55, scope: !11721)
!11724 = !DILocation(line: 794, column: 2, scope: !11721)
!11725 = !DILocation(line: 794, column: 5, scope: !11721)
!11726 = !DILocation(line: 794, column: 10, scope: !11721)
!11727 = !DILocation(line: 795, column: 2, scope: !11721)
!11728 = !DILocation(line: 795, column: 5, scope: !11721)
!11729 = !DILocation(line: 795, column: 11, scope: !11721)
!11730 = !DILocation(line: 796, column: 1, scope: !11721)
!11731 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !56, file: !56, line: 331, type: !11732, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11732 = !DISubroutineType(types: !11733)
!11733 = !{!1008, !10433}
!11734 = !DILocalVariable(name: "r", arg: 1, scope: !11731, file: !56, line: 331, type: !10433)
!11735 = !DILocation(line: 331, column: 67, scope: !11731)
!11736 = !DILocation(line: 333, column: 33, scope: !11731)
!11737 = !DILocation(line: 333, column: 9, scope: !11731)
!11738 = !DILocation(line: 333, column: 2, scope: !11731)
!11739 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !56, file: !56, line: 313, type: !11740, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11740 = !DISubroutineType(types: !11741)
!11741 = !{!1008, !10433, !753}
!11742 = !DILocalVariable(name: "r", arg: 1, scope: !11739, file: !56, line: 313, type: !10433)
!11743 = !DILocation(line: 313, column: 69, scope: !11739)
!11744 = !DILocalVariable(name: "oldp", arg: 2, scope: !11739, file: !56, line: 313, type: !753)
!11745 = !DILocation(line: 313, column: 77, scope: !11739)
!11746 = !DILocation(line: 315, column: 36, scope: !11739)
!11747 = !DILocation(line: 315, column: 39, scope: !11739)
!11748 = !DILocation(line: 315, column: 9, scope: !11739)
!11749 = !DILocation(line: 315, column: 2, scope: !11739)
!11750 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !56, file: !56, line: 270, type: !11751, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11751 = !DISubroutineType(types: !11752)
!11752 = !{!1008, !89, !10433, !753}
!11753 = !DILocalVariable(name: "i", arg: 1, scope: !11754, file: !7943, line: 188, type: !89)
!11754 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !7943, file: !7943, line: 188, type: !10455, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11755 = !DILocation(line: 188, column: 54, scope: !11754, inlinedAt: !11756)
!11756 = distinct !DILocation(line: 221, column: 9, scope: !11757, inlinedAt: !11758)
!11757 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !7959, file: !7959, line: 218, type: !10455, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11758 = distinct !DILocation(line: 272, column: 12, scope: !11750)
!11759 = !DILocalVariable(name: "v", arg: 2, scope: !11754, file: !7943, line: 188, type: !7946)
!11760 = !DILocation(line: 188, column: 67, scope: !11754, inlinedAt: !11756)
!11761 = !DILocalVariable(name: "__ret", scope: !11762, file: !7943, line: 190, type: !89)
!11762 = distinct !DILexicalBlock(scope: !11754, file: !7943, line: 190, column: 9)
!11763 = !DILocation(line: 190, column: 9, scope: !11762, inlinedAt: !11756)
!11764 = !DILocation(line: 99, column: 79, scope: !7995, inlinedAt: !11765)
!11765 = distinct !DILocation(line: 220, column: 2, scope: !11757, inlinedAt: !11758)
!11766 = !DILocation(line: 99, column: 89, scope: !7995, inlinedAt: !11765)
!11767 = !DILocalVariable(name: "i", arg: 1, scope: !11757, file: !7959, line: 218, type: !89)
!11768 = !DILocation(line: 218, column: 30, scope: !11757, inlinedAt: !11758)
!11769 = !DILocalVariable(name: "v", arg: 2, scope: !11757, file: !7959, line: 218, type: !7946)
!11770 = !DILocation(line: 218, column: 43, scope: !11757, inlinedAt: !11758)
!11771 = !DILocalVariable(name: "i", arg: 1, scope: !11750, file: !56, line: 270, type: !89)
!11772 = !DILocation(line: 270, column: 61, scope: !11750)
!11773 = !DILocalVariable(name: "r", arg: 2, scope: !11750, file: !56, line: 270, type: !10433)
!11774 = !DILocation(line: 270, column: 76, scope: !11750)
!11775 = !DILocalVariable(name: "oldp", arg: 3, scope: !11750, file: !56, line: 270, type: !753)
!11776 = !DILocation(line: 270, column: 84, scope: !11750)
!11777 = !DILocalVariable(name: "old", scope: !11750, file: !56, line: 272, type: !89)
!11778 = !DILocation(line: 272, column: 6, scope: !11750)
!11779 = !DILocation(line: 272, column: 37, scope: !11750)
!11780 = !DILocation(line: 272, column: 41, scope: !11750)
!11781 = !DILocation(line: 272, column: 44, scope: !11750)
!11782 = !DILocation(line: 220, column: 31, scope: !11757, inlinedAt: !11758)
!11783 = !DILocation(line: 101, column: 20, scope: !7995, inlinedAt: !11765)
!11784 = !DILocation(line: 101, column: 23, scope: !7995, inlinedAt: !11765)
!11785 = !DILocation(line: 101, column: 2, scope: !7995, inlinedAt: !11765)
!11786 = !DILocation(line: 102, column: 2, scope: !7995, inlinedAt: !11765)
!11787 = !DILocation(line: 221, column: 39, scope: !11757, inlinedAt: !11758)
!11788 = !DILocation(line: 221, column: 42, scope: !11757, inlinedAt: !11758)
!11789 = !{i32 -2146536976}
!11790 = !DILocation(line: 274, column: 6, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11750, file: !56, line: 274, column: 6)
!11792 = !DILocation(line: 274, column: 6, scope: !11750)
!11793 = !DILocation(line: 275, column: 11, scope: !11791)
!11794 = !DILocation(line: 275, column: 4, scope: !11791)
!11795 = !DILocation(line: 275, column: 9, scope: !11791)
!11796 = !DILocation(line: 275, column: 3, scope: !11791)
!11797 = !DILocation(line: 277, column: 6, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11750, file: !56, line: 277, column: 6)
!11799 = !DILocation(line: 277, column: 13, scope: !11798)
!11800 = !DILocation(line: 277, column: 10, scope: !11798)
!11801 = !DILocation(line: 277, column: 6, scope: !11750)
!11802 = !DILocation(line: 278, column: 3, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11798, file: !56, line: 277, column: 16)
!11804 = !{i32 -2144267663}
!11805 = !DILocation(line: 279, column: 3, scope: !11803)
!11806 = !DILocation(line: 282, column: 6, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11750, file: !56, line: 282, column: 6)
!11808 = !DILocation(line: 282, column: 6, scope: !11750)
!11809 = !DILocation(line: 283, column: 26, scope: !11807)
!11810 = !DILocation(line: 283, column: 3, scope: !11807)
!11811 = !DILocation(line: 285, column: 2, scope: !11750)
!11812 = !DILocation(line: 286, column: 1, scope: !11750)
!11813 = distinct !DISubprogram(name: "__list_add", scope: !5752, file: !5752, line: 63, type: !11814, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11814 = !DISubroutineType(types: !11815)
!11815 = !{null, !113, !113, !113}
!11816 = !DILocalVariable(name: "new", arg: 1, scope: !11813, file: !5752, line: 63, type: !113)
!11817 = !DILocation(line: 63, column: 49, scope: !11813)
!11818 = !DILocalVariable(name: "prev", arg: 2, scope: !11813, file: !5752, line: 64, type: !113)
!11819 = !DILocation(line: 64, column: 28, scope: !11813)
!11820 = !DILocalVariable(name: "next", arg: 3, scope: !11813, file: !5752, line: 65, type: !113)
!11821 = !DILocation(line: 65, column: 28, scope: !11813)
!11822 = !DILocation(line: 67, column: 24, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11813, file: !5752, line: 67, column: 6)
!11824 = !DILocation(line: 67, column: 29, scope: !11823)
!11825 = !DILocation(line: 67, column: 35, scope: !11823)
!11826 = !DILocation(line: 67, column: 7, scope: !11823)
!11827 = !DILocation(line: 67, column: 6, scope: !11813)
!11828 = !DILocation(line: 68, column: 3, scope: !11823)
!11829 = !DILocation(line: 70, column: 15, scope: !11813)
!11830 = !DILocation(line: 70, column: 2, scope: !11813)
!11831 = !DILocation(line: 70, column: 8, scope: !11813)
!11832 = !DILocation(line: 70, column: 13, scope: !11813)
!11833 = !DILocation(line: 71, column: 14, scope: !11813)
!11834 = !DILocation(line: 71, column: 2, scope: !11813)
!11835 = !DILocation(line: 71, column: 7, scope: !11813)
!11836 = !DILocation(line: 71, column: 12, scope: !11813)
!11837 = !DILocation(line: 72, column: 14, scope: !11813)
!11838 = !DILocation(line: 72, column: 2, scope: !11813)
!11839 = !DILocation(line: 72, column: 7, scope: !11813)
!11840 = !DILocation(line: 72, column: 12, scope: !11813)
!11841 = !DILocation(line: 73, column: 2, scope: !11813)
!11842 = !DILocation(line: 73, column: 2, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11813, file: !5752, line: 73, column: 2)
!11844 = !DILocation(line: 73, column: 2, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11843, file: !5752, line: 73, column: 2)
!11846 = !DILocation(line: 73, column: 2, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11843, file: !5752, line: 73, column: 2)
!11848 = !DILocation(line: 74, column: 1, scope: !11813)
!11849 = distinct !DISubprogram(name: "__list_add_valid", scope: !5752, file: !5752, line: 45, type: !11850, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11850 = !DISubroutineType(types: !11851)
!11851 = !{!1008, !113, !113, !113}
!11852 = !DILocalVariable(name: "new", arg: 1, scope: !11849, file: !5752, line: 45, type: !113)
!11853 = !DILocation(line: 45, column: 55, scope: !11849)
!11854 = !DILocalVariable(name: "prev", arg: 2, scope: !11849, file: !5752, line: 46, type: !113)
!11855 = !DILocation(line: 46, column: 23, scope: !11849)
!11856 = !DILocalVariable(name: "next", arg: 3, scope: !11849, file: !5752, line: 47, type: !113)
!11857 = !DILocation(line: 47, column: 23, scope: !11849)
!11858 = !DILocation(line: 49, column: 2, scope: !11849)
!11859 = distinct !DISubprogram(name: "__list_del_entry", scope: !5752, file: !5752, line: 130, type: !6673, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11860 = !DILocalVariable(name: "entry", arg: 1, scope: !11859, file: !5752, line: 130, type: !113)
!11861 = !DILocation(line: 130, column: 55, scope: !11859)
!11862 = !DILocation(line: 132, column: 30, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11859, file: !5752, line: 132, column: 6)
!11864 = !DILocation(line: 132, column: 7, scope: !11863)
!11865 = !DILocation(line: 132, column: 6, scope: !11859)
!11866 = !DILocation(line: 133, column: 3, scope: !11863)
!11867 = !DILocation(line: 135, column: 13, scope: !11859)
!11868 = !DILocation(line: 135, column: 20, scope: !11859)
!11869 = !DILocation(line: 135, column: 26, scope: !11859)
!11870 = !DILocation(line: 135, column: 33, scope: !11859)
!11871 = !DILocation(line: 135, column: 2, scope: !11859)
!11872 = !DILocation(line: 136, column: 1, scope: !11859)
!11873 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !5752, file: !5752, line: 51, type: !11874, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11874 = !DISubroutineType(types: !11875)
!11875 = !{!1008, !113}
!11876 = !DILocalVariable(name: "entry", arg: 1, scope: !11873, file: !5752, line: 51, type: !113)
!11877 = !DILocation(line: 51, column: 61, scope: !11873)
!11878 = !DILocation(line: 53, column: 2, scope: !11873)
!11879 = distinct !DISubprogram(name: "__list_del", scope: !5752, file: !5752, line: 110, type: !6585, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11880 = !DILocalVariable(name: "prev", arg: 1, scope: !11879, file: !5752, line: 110, type: !113)
!11881 = !DILocation(line: 110, column: 50, scope: !11879)
!11882 = !DILocalVariable(name: "next", arg: 2, scope: !11879, file: !5752, line: 110, type: !113)
!11883 = !DILocation(line: 110, column: 75, scope: !11879)
!11884 = !DILocation(line: 112, column: 15, scope: !11879)
!11885 = !DILocation(line: 112, column: 2, scope: !11879)
!11886 = !DILocation(line: 112, column: 8, scope: !11879)
!11887 = !DILocation(line: 112, column: 13, scope: !11879)
!11888 = !DILocation(line: 113, column: 2, scope: !11879)
!11889 = !DILocation(line: 113, column: 2, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11879, file: !5752, line: 113, column: 2)
!11891 = !DILocation(line: 113, column: 2, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11890, file: !5752, line: 113, column: 2)
!11893 = !DILocation(line: 113, column: 2, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11890, file: !5752, line: 113, column: 2)
!11895 = !DILocation(line: 114, column: 1, scope: !11879)
!11896 = distinct !DISubprogram(name: "__of_clk_get_hw_from_provider", scope: !3, file: !3, line: 4675, type: !11897, scopeLine: 4677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11897 = !DISubroutineType(types: !11898)
!11898 = !{!90, !2250, !2259}
!11899 = !DILocalVariable(name: "provider", arg: 1, scope: !11896, file: !3, line: 4675, type: !2250)
!11900 = !DILocation(line: 4675, column: 55, scope: !11896)
!11901 = !DILocalVariable(name: "clkspec", arg: 2, scope: !11896, file: !3, line: 4676, type: !2259)
!11902 = !DILocation(line: 4676, column: 34, scope: !11896)
!11903 = !DILocalVariable(name: "clk", scope: !11896, file: !3, line: 4678, type: !95)
!11904 = !DILocation(line: 4678, column: 14, scope: !11896)
!11905 = !DILocation(line: 4680, column: 6, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11896, file: !3, line: 4680, column: 6)
!11907 = !DILocation(line: 4680, column: 16, scope: !11906)
!11908 = !DILocation(line: 4680, column: 6, scope: !11896)
!11909 = !DILocation(line: 4681, column: 10, scope: !11906)
!11910 = !DILocation(line: 4681, column: 20, scope: !11906)
!11911 = !DILocation(line: 4681, column: 27, scope: !11906)
!11912 = !DILocation(line: 4681, column: 36, scope: !11906)
!11913 = !DILocation(line: 4681, column: 46, scope: !11906)
!11914 = !DILocation(line: 4681, column: 3, scope: !11906)
!11915 = !DILocation(line: 4683, column: 8, scope: !11896)
!11916 = !DILocation(line: 4683, column: 18, scope: !11896)
!11917 = !DILocation(line: 4683, column: 22, scope: !11896)
!11918 = !DILocation(line: 4683, column: 31, scope: !11896)
!11919 = !DILocation(line: 4683, column: 41, scope: !11896)
!11920 = !DILocation(line: 4683, column: 6, scope: !11896)
!11921 = !DILocation(line: 4684, column: 13, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11896, file: !3, line: 4684, column: 6)
!11923 = !DILocation(line: 4684, column: 6, scope: !11922)
!11924 = !DILocation(line: 4684, column: 6, scope: !11896)
!11925 = !DILocation(line: 4685, column: 19, scope: !11922)
!11926 = !DILocation(line: 4685, column: 10, scope: !11922)
!11927 = !DILocation(line: 4685, column: 3, scope: !11922)
!11928 = !DILocation(line: 4686, column: 22, scope: !11896)
!11929 = !DILocation(line: 4686, column: 9, scope: !11896)
!11930 = !DILocation(line: 4686, column: 2, scope: !11896)
!11931 = !DILocation(line: 4687, column: 1, scope: !11896)
!11932 = distinct !DISubprogram(name: "set_bit", scope: !11933, file: !11933, line: 26, type: !11934, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11933 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!11934 = !DISubroutineType(types: !11935)
!11935 = !{null, !199, !11936}
!11936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11937, size: 64)
!11937 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !214)
!11938 = !DILocalVariable(name: "nr", arg: 1, scope: !11939, file: !11325, line: 52, type: !199)
!11939 = distinct !DISubprogram(name: "arch_set_bit", scope: !11325, file: !11325, line: 52, type: !11934, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !137)
!11940 = !DILocation(line: 52, column: 19, scope: !11939, inlinedAt: !11941)
!11941 = distinct !DILocation(line: 29, column: 2, scope: !11932)
!11942 = !DILocalVariable(name: "addr", arg: 2, scope: !11939, file: !11325, line: 52, type: !11936)
!11943 = !DILocation(line: 52, column: 47, scope: !11939, inlinedAt: !11941)
!11944 = !DILocation(line: 84, column: 74, scope: !11495, inlinedAt: !11945)
!11945 = distinct !DILocation(line: 28, column: 2, scope: !11932)
!11946 = !DILocation(line: 84, column: 84, scope: !11495, inlinedAt: !11945)
!11947 = !DILocalVariable(name: "nr", arg: 1, scope: !11932, file: !11933, line: 26, type: !199)
!11948 = !DILocation(line: 26, column: 33, scope: !11932)
!11949 = !DILocalVariable(name: "addr", arg: 2, scope: !11932, file: !11933, line: 26, type: !11936)
!11950 = !DILocation(line: 26, column: 61, scope: !11932)
!11951 = !DILocation(line: 28, column: 26, scope: !11932)
!11952 = !DILocation(line: 28, column: 33, scope: !11932)
!11953 = !DILocation(line: 28, column: 31, scope: !11932)
!11954 = !DILocation(line: 86, column: 20, scope: !11495, inlinedAt: !11945)
!11955 = !DILocation(line: 86, column: 23, scope: !11495, inlinedAt: !11945)
!11956 = !DILocation(line: 86, column: 2, scope: !11495, inlinedAt: !11945)
!11957 = !DILocation(line: 87, column: 2, scope: !11495, inlinedAt: !11945)
!11958 = !DILocation(line: 29, column: 15, scope: !11932)
!11959 = !DILocation(line: 29, column: 19, scope: !11932)
!11960 = !DILocation(line: 54, column: 27, scope: !11961, inlinedAt: !11941)
!11961 = distinct !DILexicalBlock(scope: !11939, file: !11325, line: 54, column: 6)
!11962 = !DILocation(line: 54, column: 6, scope: !11961, inlinedAt: !11941)
!11963 = !DILocation(line: 54, column: 6, scope: !11939, inlinedAt: !11941)
!11964 = !DILocation(line: 56, column: 6, scope: !11965, inlinedAt: !11941)
!11965 = distinct !DILexicalBlock(scope: !11961, file: !11325, line: 54, column: 32)
!11966 = !DILocation(line: 57, column: 12, scope: !11965, inlinedAt: !11941)
!11967 = !DILocation(line: 55, column: 3, scope: !11965, inlinedAt: !11941)
!11968 = !{i32 -2147046656}
!11969 = !DILocation(line: 59, column: 2, scope: !11965, inlinedAt: !11941)
!11970 = !DILocation(line: 61, column: 8, scope: !11971, inlinedAt: !11941)
!11971 = distinct !DILexicalBlock(scope: !11961, file: !11325, line: 59, column: 9)
!11972 = !DILocation(line: 61, column: 32, scope: !11971, inlinedAt: !11941)
!11973 = !DILocation(line: 60, column: 3, scope: !11971, inlinedAt: !11941)
!11974 = !{i32 -2147046524}
!11975 = !DILocation(line: 30, column: 1, scope: !11932)
